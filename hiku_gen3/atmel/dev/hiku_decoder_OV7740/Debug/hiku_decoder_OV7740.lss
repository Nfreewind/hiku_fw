
hiku_decoder_OV7740.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00040764  00400000  00400000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    000008d8  00440764  00440764  00048764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .got          00000168  0044103c  0044103c  0004903c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .got.plt      0000000c  004411a4  004411a4  000491a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .relocate     00001744  20000000  004411b0  00050000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  5 .bss          00001810  20001744  004428f4  00051744  2**2
                  ALLOC
  6 .stack        00003004  20002f54  00444104  00051744  2**0
                  ALLOC
  7 .ARM.attributes 0000002c  00000000  00000000  00051744  2**0
                  CONTENTS, READONLY
  8 .comment      0000005b  00000000  00000000  00051770  2**0
                  CONTENTS, READONLY
  9 .debug_info   00038f3e  00000000  00000000  000517cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00005315  00000000  00000000  0008a709  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00033004  00000000  00000000  0008fa1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00001140  00000000  00000000  000c2a22  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000022b8  00000000  00000000  000c3b62  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  0001b745  00000000  00000000  000c5e1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   0001bed8  00000000  00000000  000e155f  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    0006acf0  00000000  00000000  000fd437  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_frame  00008da4  00000000  00000000  00168128  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20005f58 	.word	0x20005f58
  400004:	00402d49 	.word	0x00402d49
  400008:	00402e11 	.word	0x00402e11
  40000c:	00402e11 	.word	0x00402e11
  400010:	00402e11 	.word	0x00402e11
  400014:	00402e11 	.word	0x00402e11
  400018:	00402e11 	.word	0x00402e11
	...
  40002c:	00402e11 	.word	0x00402e11
  400030:	00402e11 	.word	0x00402e11
  400034:	00000000 	.word	0x00000000
  400038:	00402e11 	.word	0x00402e11
  40003c:	00400aed 	.word	0x00400aed
  400040:	00402e11 	.word	0x00402e11
  400044:	00402e11 	.word	0x00402e11
  400048:	00402e11 	.word	0x00402e11
  40004c:	00402e11 	.word	0x00402e11
  400050:	00402e11 	.word	0x00402e11
  400054:	00402e11 	.word	0x00402e11
  400058:	00402e11 	.word	0x00402e11
  40005c:	00000000 	.word	0x00000000
  400060:	00402e11 	.word	0x00402e11
  400064:	00402e11 	.word	0x00402e11
  400068:	00000000 	.word	0x00000000
  40006c:	00402679 	.word	0x00402679
  400070:	00402691 	.word	0x00402691
  400074:	004026a9 	.word	0x004026a9
  400078:	00402e11 	.word	0x00402e11
  40007c:	00402e11 	.word	0x00402e11
	...
  400088:	00402e11 	.word	0x00402e11
  40008c:	00402e11 	.word	0x00402e11
  400090:	00402e11 	.word	0x00402e11
  400094:	00402e11 	.word	0x00402e11
  400098:	00402e11 	.word	0x00402e11
  40009c:	00402e11 	.word	0x00402e11
  4000a0:	00402e11 	.word	0x00402e11
  4000a4:	00402e11 	.word	0x00402e11
  4000a8:	00402e11 	.word	0x00402e11
  4000ac:	00402e11 	.word	0x00402e11
  4000b0:	00402e11 	.word	0x00402e11
  4000b4:	00402e11 	.word	0x00402e11
  4000b8:	00402e11 	.word	0x00402e11
  4000bc:	00402e11 	.word	0x00402e11
  4000c0:	00402e11 	.word	0x00402e11
  4000c4:	00402e11 	.word	0x00402e11
  4000c8:	00402e11 	.word	0x00402e11

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20001744 	.word	0x20001744
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0044103c 	.word	0x0044103c

004000f0 <frame_dummy>:
  4000f0:	4b08      	ldr	r3, [pc, #32]	; (400114 <frame_dummy+0x24>)
  4000f2:	b510      	push	{r4, lr}
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4808      	ldr	r0, [pc, #32]	; (400118 <frame_dummy+0x28>)
  4000f8:	4908      	ldr	r1, [pc, #32]	; (40011c <frame_dummy+0x2c>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4808      	ldr	r0, [pc, #32]	; (400120 <frame_dummy+0x30>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b903      	cbnz	r3, 400106 <frame_dummy+0x16>
  400104:	bd10      	pop	{r4, pc}
  400106:	4b07      	ldr	r3, [pc, #28]	; (400124 <frame_dummy+0x34>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0fb      	beq.n	400104 <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	bf00      	nop
  400114:	00000000 	.word	0x00000000
  400118:	0044103c 	.word	0x0044103c
  40011c:	20001748 	.word	0x20001748
  400120:	0044103c 	.word	0x0044103c
  400124:	00000000 	.word	0x00000000

00400128 <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
  400128:	b480      	push	{r7}
  40012a:	b083      	sub	sp, #12
  40012c:	af00      	add	r7, sp, #0
  40012e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400130:	687b      	ldr	r3, [r7, #4]
  400132:	2b07      	cmp	r3, #7
  400134:	d825      	bhi.n	400182 <osc_get_rate+0x5a>
  400136:	a201      	add	r2, pc, #4	; (adr r2, 40013c <osc_get_rate+0x14>)
  400138:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  40013c:	0040015d 	.word	0x0040015d
  400140:	00400163 	.word	0x00400163
  400144:	00400169 	.word	0x00400169
  400148:	0040016f 	.word	0x0040016f
  40014c:	00400173 	.word	0x00400173
  400150:	00400177 	.word	0x00400177
  400154:	0040017b 	.word	0x0040017b
  400158:	0040017f 	.word	0x0040017f
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
  40015c:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  400160:	e010      	b.n	400184 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
  400162:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400166:	e00d      	b.n	400184 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
  400168:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40016c:	e00a      	b.n	400184 <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
  40016e:	4b08      	ldr	r3, [pc, #32]	; (400190 <osc_get_rate+0x68>)
  400170:	e008      	b.n	400184 <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
  400172:	4b08      	ldr	r3, [pc, #32]	; (400194 <osc_get_rate+0x6c>)
  400174:	e006      	b.n	400184 <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
  400176:	4b08      	ldr	r3, [pc, #32]	; (400198 <osc_get_rate+0x70>)
  400178:	e004      	b.n	400184 <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
  40017a:	4b07      	ldr	r3, [pc, #28]	; (400198 <osc_get_rate+0x70>)
  40017c:	e002      	b.n	400184 <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
  40017e:	4b06      	ldr	r3, [pc, #24]	; (400198 <osc_get_rate+0x70>)
  400180:	e000      	b.n	400184 <osc_get_rate+0x5c>
	}

	return 0;
  400182:	2300      	movs	r3, #0
}
  400184:	4618      	mov	r0, r3
  400186:	370c      	adds	r7, #12
  400188:	46bd      	mov	sp, r7
  40018a:	f85d 7b04 	ldr.w	r7, [sp], #4
  40018e:	4770      	bx	lr
  400190:	003d0900 	.word	0x003d0900
  400194:	007a1200 	.word	0x007a1200
  400198:	00b71b00 	.word	0x00b71b00

0040019c <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
  40019c:	b580      	push	{r7, lr}
  40019e:	af00      	add	r7, sp, #0
	}
#endif

#ifdef CONFIG_PLL1_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLBCK) {
		return pll_get_default_rate(1);
  4001a0:	2006      	movs	r0, #6
  4001a2:	4b04      	ldr	r3, [pc, #16]	; (4001b4 <sysclk_get_main_hz+0x18>)
  4001a4:	4798      	blx	r3
  4001a6:	4602      	mov	r2, r0
  4001a8:	4613      	mov	r3, r2
  4001aa:	009b      	lsls	r3, r3, #2
  4001ac:	4413      	add	r3, r2
  4001ae:	009b      	lsls	r3, r3, #2

	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
  4001b0:	4618      	mov	r0, r3
  4001b2:	bd80      	pop	{r7, pc}
  4001b4:	00400129 	.word	0x00400129

004001b8 <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
  4001b8:	b580      	push	{r7, lr}
  4001ba:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  4001bc:	4b02      	ldr	r3, [pc, #8]	; (4001c8 <sysclk_get_cpu_hz+0x10>)
  4001be:	4798      	blx	r3
  4001c0:	4603      	mov	r3, r0
  4001c2:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  4001c4:	4618      	mov	r0, r3
  4001c6:	bd80      	pop	{r7, pc}
  4001c8:	0040019d 	.word	0x0040019d

004001cc <zbar_hiku_process>:
 #include <string.h>     /* memmove */
 #include <stdint.h>
 #include <zbar.h>
 #include <conf_board.h>

 void zbar_hiku_process(void){
  4001cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4001d0:	b0a1      	sub	sp, #132	; 0x84
  4001d2:	af00      	add	r7, sp, #0

			zbar_image_scanner_t *scanner = NULL;
  4001d4:	2300      	movs	r3, #0
  4001d6:	67bb      	str	r3, [r7, #120]	; 0x78
			scanner = zbar_image_scanner_create();
  4001d8:	4b52      	ldr	r3, [pc, #328]	; (400324 <zbar_hiku_process+0x158>)
  4001da:	4798      	blx	r3
  4001dc:	67b8      	str	r0, [r7, #120]	; 0x78
			zbar_image_scanner_set_config(scanner, ZBAR_NONE, ZBAR_CFG_ENABLE, 1);
  4001de:	6fb8      	ldr	r0, [r7, #120]	; 0x78
  4001e0:	2100      	movs	r1, #0
  4001e2:	2200      	movs	r2, #0
  4001e4:	2301      	movs	r3, #1
  4001e6:	4e50      	ldr	r6, [pc, #320]	; (400328 <zbar_hiku_process+0x15c>)
  4001e8:	47b0      	blx	r6
	
			uint8_t * temp = (uint8_t *)CAP_DEST;
  4001ea:	f04f 43c0 	mov.w	r3, #1610612736	; 0x60000000
  4001ee:	677b      	str	r3, [r7, #116]	; 0x74
			zbar_image_t *image = zbar_image_create();
  4001f0:	4b4e      	ldr	r3, [pc, #312]	; (40032c <zbar_hiku_process+0x160>)
  4001f2:	4798      	blx	r3
  4001f4:	6738      	str	r0, [r7, #112]	; 0x70
			zbar_image_set_format(image, zbar_fourcc('G','R','E','Y'));
  4001f6:	6f38      	ldr	r0, [r7, #112]	; 0x70
  4001f8:	494d      	ldr	r1, [pc, #308]	; (400330 <zbar_hiku_process+0x164>)
  4001fa:	4b4e      	ldr	r3, [pc, #312]	; (400334 <zbar_hiku_process+0x168>)
  4001fc:	4798      	blx	r3
			zbar_image_set_size(image, IMAGE_WIDTH, IMAGE_HEIGHT);
  4001fe:	6f38      	ldr	r0, [r7, #112]	; 0x70
  400200:	f44f 71a0 	mov.w	r1, #320	; 0x140
  400204:	22f0      	movs	r2, #240	; 0xf0
  400206:	4b4c      	ldr	r3, [pc, #304]	; (400338 <zbar_hiku_process+0x16c>)
  400208:	4798      	blx	r3
			zbar_image_set_data(image, temp, IMAGE_WIDTH * IMAGE_HEIGHT, zbar_image_free_data);
  40020a:	6f38      	ldr	r0, [r7, #112]	; 0x70
  40020c:	6f79      	ldr	r1, [r7, #116]	; 0x74
  40020e:	f44f 3296 	mov.w	r2, #76800	; 0x12c00
  400212:	4b4a      	ldr	r3, [pc, #296]	; (40033c <zbar_hiku_process+0x170>)
  400214:	4e4a      	ldr	r6, [pc, #296]	; (400340 <zbar_hiku_process+0x174>)
  400216:	47b0      	blx	r6

			int n = zbar_scan_image(scanner, image);
  400218:	6fb8      	ldr	r0, [r7, #120]	; 0x78
  40021a:	6f39      	ldr	r1, [r7, #112]	; 0x70
  40021c:	4b49      	ldr	r3, [pc, #292]	; (400344 <zbar_hiku_process+0x178>)
  40021e:	4798      	blx	r3
  400220:	66f8      	str	r0, [r7, #108]	; 0x6c

			const zbar_symbol_t *symbol = zbar_image_first_symbol(image);
  400222:	6f38      	ldr	r0, [r7, #112]	; 0x70
  400224:	4b48      	ldr	r3, [pc, #288]	; (400348 <zbar_hiku_process+0x17c>)
  400226:	4798      	blx	r3
  400228:	67f8      	str	r0, [r7, #124]	; 0x7c
			for(; symbol; symbol = zbar_symbol_next(symbol)) {
  40022a:	e073      	b.n	400314 <zbar_hiku_process+0x148>
				
//				sprintf(capture_time, "%u ms", g_ul_end_capture_time - g_ul_begin_capture_time);
//				sprintf(process_time, "%u ms", g_ul_end_process_time - g_ul_begin_process_time);
//				sprintf(total_time, "%u ms", time_tick_get() - g_ul_begin_capture_time);

				zbar_symbol_type_t typ = zbar_symbol_get_type(symbol);
  40022c:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
  40022e:	4b47      	ldr	r3, [pc, #284]	; (40034c <zbar_hiku_process+0x180>)
  400230:	4798      	blx	r3
  400232:	4603      	mov	r3, r0
  400234:	f8a7 306a 	strh.w	r3, [r7, #106]	; 0x6a
				volatile const char *data = zbar_symbol_get_data(symbol);
  400238:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
  40023a:	4b45      	ldr	r3, [pc, #276]	; (400350 <zbar_hiku_process+0x184>)
  40023c:	4798      	blx	r3
  40023e:	6678      	str	r0, [r7, #100]	; 0x64
	
				//printf("decoded %s symbol \"%s\"\n", zbar_get_symbol_name(typ), data);
//				display_init();
				ili9325_fill(COLOR_BLUE);
  400240:	20ff      	movs	r0, #255	; 0xff
  400242:	4b44      	ldr	r3, [pc, #272]	; (400354 <zbar_hiku_process+0x188>)
  400244:	4798      	blx	r3
				ili9325_draw_string(0, 20, (uint8_t *)data);
  400246:	2000      	movs	r0, #0
  400248:	2114      	movs	r1, #20
  40024a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  40024c:	4b42      	ldr	r3, [pc, #264]	; (400358 <zbar_hiku_process+0x18c>)
  40024e:	4798      	blx	r3
				ili9325_draw_string(0, 80, (uint8_t *)zbar_get_symbol_name(typ));
  400250:	f8b7 306a 	ldrh.w	r3, [r7, #106]	; 0x6a
  400254:	4618      	mov	r0, r3
  400256:	4b41      	ldr	r3, [pc, #260]	; (40035c <zbar_hiku_process+0x190>)
  400258:	4798      	blx	r3
  40025a:	4603      	mov	r3, r0
  40025c:	2000      	movs	r0, #0
  40025e:	2150      	movs	r1, #80	; 0x50
  400260:	461a      	mov	r2, r3
  400262:	4b3d      	ldr	r3, [pc, #244]	; (400358 <zbar_hiku_process+0x18c>)
  400264:	4798      	blx	r3
				ili9325_draw_string(0, 100, (uint8_t *)capture_time );
  400266:	1d3b      	adds	r3, r7, #4
  400268:	2000      	movs	r0, #0
  40026a:	2164      	movs	r1, #100	; 0x64
  40026c:	461a      	mov	r2, r3
  40026e:	4b3a      	ldr	r3, [pc, #232]	; (400358 <zbar_hiku_process+0x18c>)
  400270:	4798      	blx	r3
				ili9325_draw_string(0, 120, (uint8_t *)process_time );
  400272:	f107 0324 	add.w	r3, r7, #36	; 0x24
  400276:	2000      	movs	r0, #0
  400278:	2178      	movs	r1, #120	; 0x78
  40027a:	461a      	mov	r2, r3
  40027c:	4b36      	ldr	r3, [pc, #216]	; (400358 <zbar_hiku_process+0x18c>)
  40027e:	4798      	blx	r3
				ili9325_draw_string(0, 140, (uint8_t *)total_time );
  400280:	f107 0344 	add.w	r3, r7, #68	; 0x44
  400284:	2000      	movs	r0, #0
  400286:	218c      	movs	r1, #140	; 0x8c
  400288:	461a      	mov	r2, r3
  40028a:	4b33      	ldr	r3, [pc, #204]	; (400358 <zbar_hiku_process+0x18c>)
  40028c:	4798      	blx	r3

				delay_ms(3000);
  40028e:	4b34      	ldr	r3, [pc, #208]	; (400360 <zbar_hiku_process+0x194>)
  400290:	4798      	blx	r3
  400292:	4603      	mov	r3, r0
  400294:	4618      	mov	r0, r3
  400296:	f04f 0100 	mov.w	r1, #0
  40029a:	4602      	mov	r2, r0
  40029c:	460b      	mov	r3, r1
  40029e:	1892      	adds	r2, r2, r2
  4002a0:	eb43 0303 	adc.w	r3, r3, r3
  4002a4:	1812      	adds	r2, r2, r0
  4002a6:	eb43 0301 	adc.w	r3, r3, r1
  4002aa:	ea4f 09c3 	mov.w	r9, r3, lsl #3
  4002ae:	ea49 7952 	orr.w	r9, r9, r2, lsr #29
  4002b2:	ea4f 08c2 	mov.w	r8, r2, lsl #3
  4002b6:	4642      	mov	r2, r8
  4002b8:	464b      	mov	r3, r9
  4002ba:	1812      	adds	r2, r2, r0
  4002bc:	eb43 0301 	adc.w	r3, r3, r1
  4002c0:	011d      	lsls	r5, r3, #4
  4002c2:	ea45 7512 	orr.w	r5, r5, r2, lsr #28
  4002c6:	0114      	lsls	r4, r2, #4
  4002c8:	1aa4      	subs	r4, r4, r2
  4002ca:	eb65 0503 	sbc.w	r5, r5, r3
  4002ce:	ea4f 0bc5 	mov.w	fp, r5, lsl #3
  4002d2:	ea4b 7b54 	orr.w	fp, fp, r4, lsr #29
  4002d6:	ea4f 0ac4 	mov.w	sl, r4, lsl #3
  4002da:	4654      	mov	r4, sl
  4002dc:	465d      	mov	r5, fp
  4002de:	4620      	mov	r0, r4
  4002e0:	4629      	mov	r1, r5
  4002e2:	f243 62af 	movw	r2, #13999	; 0x36af
  4002e6:	f04f 0300 	mov.w	r3, #0
  4002ea:	1812      	adds	r2, r2, r0
  4002ec:	eb43 0301 	adc.w	r3, r3, r1
  4002f0:	4e1c      	ldr	r6, [pc, #112]	; (400364 <zbar_hiku_process+0x198>)
  4002f2:	4610      	mov	r0, r2
  4002f4:	4619      	mov	r1, r3
  4002f6:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4002fa:	f04f 0300 	mov.w	r3, #0
  4002fe:	47b0      	blx	r6
  400300:	4602      	mov	r2, r0
  400302:	460b      	mov	r3, r1
  400304:	4613      	mov	r3, r2
  400306:	4618      	mov	r0, r3
  400308:	4b17      	ldr	r3, [pc, #92]	; (400368 <zbar_hiku_process+0x19c>)
  40030a:	4798      	blx	r3
			zbar_image_set_data(image, temp, IMAGE_WIDTH * IMAGE_HEIGHT, zbar_image_free_data);

			int n = zbar_scan_image(scanner, image);

			const zbar_symbol_t *symbol = zbar_image_first_symbol(image);
			for(; symbol; symbol = zbar_symbol_next(symbol)) {
  40030c:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
  40030e:	4b17      	ldr	r3, [pc, #92]	; (40036c <zbar_hiku_process+0x1a0>)
  400310:	4798      	blx	r3
  400312:	67f8      	str	r0, [r7, #124]	; 0x7c
  400314:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  400316:	2b00      	cmp	r3, #0
  400318:	d188      	bne.n	40022c <zbar_hiku_process+0x60>
//				g_ul_push_button_trigger = false;


			}
			
  40031a:	3784      	adds	r7, #132	; 0x84
  40031c:	46bd      	mov	sp, r7
  40031e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400322:	bf00      	nop
  400324:	00407c41 	.word	0x00407c41
  400328:	00407f09 	.word	0x00407f09
  40032c:	00407059 	.word	0x00407059
  400330:	59455247 	.word	0x59455247
  400334:	004070cd 	.word	0x004070cd
  400338:	004070e9 	.word	0x004070e9
  40033c:	00407129 	.word	0x00407129
  400340:	004071e9 	.word	0x004071e9
  400344:	0040808d 	.word	0x0040808d
  400348:	00407219 	.word	0x00407219
  40034c:	004091cd 	.word	0x004091cd
  400350:	004091e5 	.word	0x004091e5
  400354:	00401c81 	.word	0x00401c81
  400358:	00401eb9 	.word	0x00401eb9
  40035c:	00408e31 	.word	0x00408e31
  400360:	004001b9 	.word	0x004001b9
  400364:	00432835 	.word	0x00432835
  400368:	20000001 	.word	0x20000001
  40036c:	004091fd 	.word	0x004091fd

00400370 <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  400370:	b480      	push	{r7}
  400372:	b083      	sub	sp, #12
  400374:	af00      	add	r7, sp, #0
  400376:	4603      	mov	r3, r0
  400378:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40037a:	4908      	ldr	r1, [pc, #32]	; (40039c <NVIC_EnableIRQ+0x2c>)
  40037c:	f997 3007 	ldrsb.w	r3, [r7, #7]
  400380:	095b      	lsrs	r3, r3, #5
  400382:	79fa      	ldrb	r2, [r7, #7]
  400384:	f002 021f 	and.w	r2, r2, #31
  400388:	2001      	movs	r0, #1
  40038a:	fa00 f202 	lsl.w	r2, r0, r2
  40038e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  400392:	370c      	adds	r7, #12
  400394:	46bd      	mov	sp, r7
  400396:	f85d 7b04 	ldr.w	r7, [sp], #4
  40039a:	4770      	bx	lr
  40039c:	e000e100 	.word	0xe000e100

004003a0 <NVIC_DisableIRQ>:
    The function disables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  4003a0:	b480      	push	{r7}
  4003a2:	b083      	sub	sp, #12
  4003a4:	af00      	add	r7, sp, #0
  4003a6:	4603      	mov	r3, r0
  4003a8:	71fb      	strb	r3, [r7, #7]
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  4003aa:	4909      	ldr	r1, [pc, #36]	; (4003d0 <NVIC_DisableIRQ+0x30>)
  4003ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
  4003b0:	095b      	lsrs	r3, r3, #5
  4003b2:	79fa      	ldrb	r2, [r7, #7]
  4003b4:	f002 021f 	and.w	r2, r2, #31
  4003b8:	2001      	movs	r0, #1
  4003ba:	fa00 f202 	lsl.w	r2, r0, r2
  4003be:	3320      	adds	r3, #32
  4003c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  4003c4:	370c      	adds	r7, #12
  4003c6:	46bd      	mov	sp, r7
  4003c8:	f85d 7b04 	ldr.w	r7, [sp], #4
  4003cc:	4770      	bx	lr
  4003ce:	bf00      	nop
  4003d0:	e000e100 	.word	0xe000e100

004003d4 <NVIC_ClearPendingIRQ>:
    The function clears the pending bit of an external interrupt.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  4003d4:	b480      	push	{r7}
  4003d6:	b083      	sub	sp, #12
  4003d8:	af00      	add	r7, sp, #0
  4003da:	4603      	mov	r3, r0
  4003dc:	71fb      	strb	r3, [r7, #7]
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4003de:	4909      	ldr	r1, [pc, #36]	; (400404 <NVIC_ClearPendingIRQ+0x30>)
  4003e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
  4003e4:	095b      	lsrs	r3, r3, #5
  4003e6:	79fa      	ldrb	r2, [r7, #7]
  4003e8:	f002 021f 	and.w	r2, r2, #31
  4003ec:	2001      	movs	r0, #1
  4003ee:	fa00 f202 	lsl.w	r2, r0, r2
  4003f2:	3360      	adds	r3, #96	; 0x60
  4003f4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  4003f8:	370c      	adds	r7, #12
  4003fa:	46bd      	mov	sp, r7
  4003fc:	f85d 7b04 	ldr.w	r7, [sp], #4
  400400:	4770      	bx	lr
  400402:	bf00      	nop
  400404:	e000e100 	.word	0xe000e100

00400408 <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  400408:	b480      	push	{r7}
  40040a:	b083      	sub	sp, #12
  40040c:	af00      	add	r7, sp, #0
  40040e:	4603      	mov	r3, r0
  400410:	6039      	str	r1, [r7, #0]
  400412:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
  400414:	f997 3007 	ldrsb.w	r3, [r7, #7]
  400418:	2b00      	cmp	r3, #0
  40041a:	da0b      	bge.n	400434 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  40041c:	490d      	ldr	r1, [pc, #52]	; (400454 <NVIC_SetPriority+0x4c>)
  40041e:	79fb      	ldrb	r3, [r7, #7]
  400420:	f003 030f 	and.w	r3, r3, #15
  400424:	3b04      	subs	r3, #4
  400426:	683a      	ldr	r2, [r7, #0]
  400428:	b2d2      	uxtb	r2, r2
  40042a:	0112      	lsls	r2, r2, #4
  40042c:	b2d2      	uxtb	r2, r2
  40042e:	440b      	add	r3, r1
  400430:	761a      	strb	r2, [r3, #24]
  400432:	e009      	b.n	400448 <NVIC_SetPriority+0x40>
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400434:	4908      	ldr	r1, [pc, #32]	; (400458 <NVIC_SetPriority+0x50>)
  400436:	f997 3007 	ldrsb.w	r3, [r7, #7]
  40043a:	683a      	ldr	r2, [r7, #0]
  40043c:	b2d2      	uxtb	r2, r2
  40043e:	0112      	lsls	r2, r2, #4
  400440:	b2d2      	uxtb	r2, r2
  400442:	440b      	add	r3, r1
  400444:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
  400448:	370c      	adds	r7, #12
  40044a:	46bd      	mov	sp, r7
  40044c:	f85d 7b04 	ldr.w	r7, [sp], #4
  400450:	4770      	bx	lr
  400452:	bf00      	nop
  400454:	e000ed00 	.word	0xe000ed00
  400458:	e000e100 	.word	0xe000e100

0040045c <SysTick_Config>:
    function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  40045c:	b580      	push	{r7, lr}
  40045e:	b082      	sub	sp, #8
  400460:	af00      	add	r7, sp, #0
  400462:	6078      	str	r0, [r7, #4]
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
  400464:	687b      	ldr	r3, [r7, #4]
  400466:	3b01      	subs	r3, #1
  400468:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
  40046c:	d301      	bcc.n	400472 <SysTick_Config+0x16>
  40046e:	2301      	movs	r3, #1
  400470:	e00f      	b.n	400492 <SysTick_Config+0x36>

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  400472:	4a0a      	ldr	r2, [pc, #40]	; (40049c <SysTick_Config+0x40>)
  400474:	687b      	ldr	r3, [r7, #4]
  400476:	3b01      	subs	r3, #1
  400478:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  40047a:	f04f 30ff 	mov.w	r0, #4294967295
  40047e:	210f      	movs	r1, #15
  400480:	f7ff ffc2 	bl	400408 <NVIC_SetPriority>
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
  400484:	4b05      	ldr	r3, [pc, #20]	; (40049c <SysTick_Config+0x40>)
  400486:	2200      	movs	r2, #0
  400488:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
  40048a:	4b04      	ldr	r3, [pc, #16]	; (40049c <SysTick_Config+0x40>)
  40048c:	2207      	movs	r2, #7
  40048e:	601a      	str	r2, [r3, #0]
  return (0);                                                  /* Function successful */
  400490:	2300      	movs	r3, #0
}
  400492:	4618      	mov	r0, r3
  400494:	3708      	adds	r7, #8
  400496:	46bd      	mov	sp, r7
  400498:	bd80      	pop	{r7, pc}
  40049a:	bf00      	nop
  40049c:	e000e010 	.word	0xe000e010

004004a0 <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
  4004a0:	b480      	push	{r7}
  4004a2:	b083      	sub	sp, #12
  4004a4:	af00      	add	r7, sp, #0
  4004a6:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  4004a8:	687b      	ldr	r3, [r7, #4]
  4004aa:	2b07      	cmp	r3, #7
  4004ac:	d825      	bhi.n	4004fa <osc_get_rate+0x5a>
  4004ae:	a201      	add	r2, pc, #4	; (adr r2, 4004b4 <osc_get_rate+0x14>)
  4004b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  4004b4:	004004d5 	.word	0x004004d5
  4004b8:	004004db 	.word	0x004004db
  4004bc:	004004e1 	.word	0x004004e1
  4004c0:	004004e7 	.word	0x004004e7
  4004c4:	004004eb 	.word	0x004004eb
  4004c8:	004004ef 	.word	0x004004ef
  4004cc:	004004f3 	.word	0x004004f3
  4004d0:	004004f7 	.word	0x004004f7
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
  4004d4:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  4004d8:	e010      	b.n	4004fc <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
  4004da:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  4004de:	e00d      	b.n	4004fc <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
  4004e0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  4004e4:	e00a      	b.n	4004fc <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
  4004e6:	4b08      	ldr	r3, [pc, #32]	; (400508 <osc_get_rate+0x68>)
  4004e8:	e008      	b.n	4004fc <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
  4004ea:	4b08      	ldr	r3, [pc, #32]	; (40050c <osc_get_rate+0x6c>)
  4004ec:	e006      	b.n	4004fc <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
  4004ee:	4b08      	ldr	r3, [pc, #32]	; (400510 <osc_get_rate+0x70>)
  4004f0:	e004      	b.n	4004fc <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
  4004f2:	4b07      	ldr	r3, [pc, #28]	; (400510 <osc_get_rate+0x70>)
  4004f4:	e002      	b.n	4004fc <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
  4004f6:	4b06      	ldr	r3, [pc, #24]	; (400510 <osc_get_rate+0x70>)
  4004f8:	e000      	b.n	4004fc <osc_get_rate+0x5c>
	}

	return 0;
  4004fa:	2300      	movs	r3, #0
}
  4004fc:	4618      	mov	r0, r3
  4004fe:	370c      	adds	r7, #12
  400500:	46bd      	mov	sp, r7
  400502:	f85d 7b04 	ldr.w	r7, [sp], #4
  400506:	4770      	bx	lr
  400508:	003d0900 	.word	0x003d0900
  40050c:	007a1200 	.word	0x007a1200
  400510:	00b71b00 	.word	0x00b71b00

00400514 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
  400514:	b580      	push	{r7, lr}
  400516:	af00      	add	r7, sp, #0
	}
#endif

#ifdef CONFIG_PLL1_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLBCK) {
		return pll_get_default_rate(1);
  400518:	2006      	movs	r0, #6
  40051a:	f7ff ffc1 	bl	4004a0 <osc_get_rate>
  40051e:	4602      	mov	r2, r0
  400520:	4613      	mov	r3, r2
  400522:	009b      	lsls	r3, r3, #2
  400524:	4413      	add	r3, r2
  400526:	009b      	lsls	r3, r3, #2

	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
  400528:	4618      	mov	r0, r3
  40052a:	bd80      	pop	{r7, pc}

0040052c <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
  40052c:	b580      	push	{r7, lr}
  40052e:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  400530:	f7ff fff0 	bl	400514 <sysclk_get_main_hz>
  400534:	4603      	mov	r3, r0
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
  400536:	085b      	lsrs	r3, r3, #1
}
  400538:	4618      	mov	r0, r3
  40053a:	bd80      	pop	{r7, pc}

0040053c <LCD_IR>:
#define ILI9325_OTP_PROG_ID_KEY_KEY(value) ((ILI9325_OTP_PROG_ID_KEY_KEY_MSK & ((value) << ILI9325_OTP_PROG_ID_KEY_KEY_POS)))

/* Define EBI access for ILI9325 8-bit System Interface.*/
#if defined(BOARD_ILI9325_ADDR) && defined (BOARD_ILI9325_RS)
	static inline void LCD_IR(uint8_t lcd_index)
	{
  40053c:	b480      	push	{r7}
  40053e:	b083      	sub	sp, #12
  400540:	af00      	add	r7, sp, #0
  400542:	4603      	mov	r3, r0
  400544:	71fb      	strb	r3, [r7, #7]
		*((volatile uint8_t *)(BOARD_ILI9325_ADDR)) = lcd_index; /* ILI9325 index register address */
  400546:	f04f 42c4 	mov.w	r2, #1644167168	; 0x62000000
  40054a:	79fb      	ldrb	r3, [r7, #7]
  40054c:	7013      	strb	r3, [r2, #0]
	}
  40054e:	370c      	adds	r7, #12
  400550:	46bd      	mov	sp, r7
  400552:	f85d 7b04 	ldr.w	r7, [sp], #4
  400556:	4770      	bx	lr

00400558 <LCD_WD>:
	static inline void LCD_WD(uint8_t lcd_data)
	{
  400558:	b480      	push	{r7}
  40055a:	b083      	sub	sp, #12
  40055c:	af00      	add	r7, sp, #0
  40055e:	4603      	mov	r3, r0
  400560:	71fb      	strb	r3, [r7, #7]
		*((volatile uint8_t *)((BOARD_ILI9325_ADDR) | (BOARD_ILI9325_RS))) = lcd_data;
  400562:	4a04      	ldr	r2, [pc, #16]	; (400574 <LCD_WD+0x1c>)
  400564:	79fb      	ldrb	r3, [r7, #7]
  400566:	7013      	strb	r3, [r2, #0]
	}
  400568:	370c      	adds	r7, #12
  40056a:	46bd      	mov	sp, r7
  40056c:	f85d 7b04 	ldr.w	r7, [sp], #4
  400570:	4770      	bx	lr
  400572:	bf00      	nop
  400574:	62000002 	.word	0x62000002

00400578 <_ZL13vsync_handlermm>:
/**
 * \brief Handler for vertical synchronisation using by the OV7740 image
 * sensor.
 */
static void vsync_handler(uint32_t ul_id, uint32_t ul_mask)
{
  400578:	b480      	push	{r7}
  40057a:	b083      	sub	sp, #12
  40057c:	af00      	add	r7, sp, #0
  40057e:	6078      	str	r0, [r7, #4]
  400580:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);

	g_ul_vsync_flag = true;
  400582:	4b04      	ldr	r3, [pc, #16]	; (400594 <_ZL13vsync_handlermm+0x1c>)
  400584:	2201      	movs	r2, #1
  400586:	601a      	str	r2, [r3, #0]
}
  400588:	370c      	adds	r7, #12
  40058a:	46bd      	mov	sp, r7
  40058c:	f85d 7b04 	ldr.w	r7, [sp], #4
  400590:	4770      	bx	lr
  400592:	bf00      	nop
  400594:	20001770 	.word	0x20001770

00400598 <_ZL14button_handlermm>:

/**
 * \brief Handler for button rising edge interrupt.
 */
static void button_handler(uint32_t ul_id, uint32_t ul_mask)
{
  400598:	b480      	push	{r7}
  40059a:	b083      	sub	sp, #12
  40059c:	af00      	add	r7, sp, #0
  40059e:	6078      	str	r0, [r7, #4]
  4005a0:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);

	if (g_ul_push_button_trigger){
  4005a2:	4b0c      	ldr	r3, [pc, #48]	; (4005d4 <_ZL14button_handlermm+0x3c>)
  4005a4:	681b      	ldr	r3, [r3, #0]
  4005a6:	2b00      	cmp	r3, #0
  4005a8:	bf14      	ite	ne
  4005aa:	2301      	movne	r3, #1
  4005ac:	2300      	moveq	r3, #0
  4005ae:	b2db      	uxtb	r3, r3
  4005b0:	2b00      	cmp	r3, #0
  4005b2:	d006      	beq.n	4005c2 <_ZL14button_handlermm+0x2a>
		g_ul_push_button_trigger = false;
  4005b4:	4b07      	ldr	r3, [pc, #28]	; (4005d4 <_ZL14button_handlermm+0x3c>)
  4005b6:	2200      	movs	r2, #0
  4005b8:	601a      	str	r2, [r3, #0]
		g_display_splash = true;
  4005ba:	4b07      	ldr	r3, [pc, #28]	; (4005d8 <_ZL14button_handlermm+0x40>)
  4005bc:	2201      	movs	r2, #1
  4005be:	601a      	str	r2, [r3, #0]
  4005c0:	e002      	b.n	4005c8 <_ZL14button_handlermm+0x30>

	} else {
		g_ul_push_button_trigger = true;
  4005c2:	4b04      	ldr	r3, [pc, #16]	; (4005d4 <_ZL14button_handlermm+0x3c>)
  4005c4:	2201      	movs	r2, #1
  4005c6:	601a      	str	r2, [r3, #0]
	}


}
  4005c8:	370c      	adds	r7, #12
  4005ca:	46bd      	mov	sp, r7
  4005cc:	f85d 7b04 	ldr.w	r7, [sp], #4
  4005d0:	4770      	bx	lr
  4005d2:	bf00      	nop
  4005d4:	2000176c 	.word	0x2000176c
  4005d8:	20001774 	.word	0x20001774

004005dc <_ZL21init_vsync_interruptsv>:

/**
 * \brief Intialize Vsync_Handler.
 */
static void init_vsync_interrupts(void)
{
  4005dc:	b590      	push	{r4, r7, lr}
  4005de:	b083      	sub	sp, #12
  4005e0:	af02      	add	r7, sp, #8
	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(OV7740_VSYNC_PIO, OV7740_VSYNC_ID, OV7740_VSYNC_MASK,
			OV7740_VSYNC_TYPE, vsync_handler);
  4005e2:	4b07      	ldr	r3, [pc, #28]	; (400600 <_ZL21init_vsync_interruptsv+0x24>)
  4005e4:	9300      	str	r3, [sp, #0]
  4005e6:	4807      	ldr	r0, [pc, #28]	; (400604 <_ZL21init_vsync_interruptsv+0x28>)
  4005e8:	210b      	movs	r1, #11
  4005ea:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4005ee:	2301      	movs	r3, #1
  4005f0:	4c05      	ldr	r4, [pc, #20]	; (400608 <_ZL21init_vsync_interruptsv+0x2c>)
  4005f2:	47a0      	blx	r4

	/* Enable PIO controller IRQs */
	NVIC_EnableIRQ((IRQn_Type)OV7740_VSYNC_ID);
  4005f4:	200b      	movs	r0, #11
  4005f6:	f7ff febb 	bl	400370 <NVIC_EnableIRQ>
}
  4005fa:	3704      	adds	r7, #4
  4005fc:	46bd      	mov	sp, r7
  4005fe:	bd90      	pop	{r4, r7, pc}
  400600:	00400579 	.word	0x00400579
  400604:	400e0e00 	.word	0x400e0e00
  400608:	00402611 	.word	0x00402611

0040060c <_ZL16configure_buttonv>:

/**
 * \brief Configure push button and initialize button_handler interrupt.
 */
static void configure_button(void)
{
  40060c:	b590      	push	{r4, r7, lr}
  40060e:	b083      	sub	sp, #12
  400610:	af02      	add	r7, sp, #8
	/* Configure PIO clock. */
	pmc_enable_periph_clk(PUSH_BUTTON_ID);
  400612:	200b      	movs	r0, #11
  400614:	4b0c      	ldr	r3, [pc, #48]	; (400648 <_ZL16configure_buttonv+0x3c>)
  400616:	4798      	blx	r3

	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(PUSH_BUTTON_PIO, PUSH_BUTTON_PIN_MSK, 10);
  400618:	480c      	ldr	r0, [pc, #48]	; (40064c <_ZL16configure_buttonv+0x40>)
  40061a:	2104      	movs	r1, #4
  40061c:	220a      	movs	r2, #10
  40061e:	4b0c      	ldr	r3, [pc, #48]	; (400650 <_ZL16configure_buttonv+0x44>)
  400620:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(PUSH_BUTTON_PIO, PUSH_BUTTON_ID, PUSH_BUTTON_PIN_MSK,
			PUSH_BUTTON_ATTR, button_handler);
  400622:	4b0c      	ldr	r3, [pc, #48]	; (400654 <_ZL16configure_buttonv+0x48>)
  400624:	9300      	str	r3, [sp, #0]
  400626:	4809      	ldr	r0, [pc, #36]	; (40064c <_ZL16configure_buttonv+0x40>)
  400628:	210b      	movs	r1, #11
  40062a:	2204      	movs	r2, #4
  40062c:	2379      	movs	r3, #121	; 0x79
  40062e:	4c0a      	ldr	r4, [pc, #40]	; (400658 <_ZL16configure_buttonv+0x4c>)
  400630:	47a0      	blx	r4

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)PUSH_BUTTON_ID);
  400632:	200b      	movs	r0, #11
  400634:	f7ff fe9c 	bl	400370 <NVIC_EnableIRQ>

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(PUSH_BUTTON_PIO, PUSH_BUTTON_PIN_MSK);
  400638:	4804      	ldr	r0, [pc, #16]	; (40064c <_ZL16configure_buttonv+0x40>)
  40063a:	2104      	movs	r1, #4
  40063c:	4b07      	ldr	r3, [pc, #28]	; (40065c <_ZL16configure_buttonv+0x50>)
  40063e:	4798      	blx	r3
}
  400640:	3704      	adds	r7, #4
  400642:	46bd      	mov	sp, r7
  400644:	bd90      	pop	{r4, r7, pc}
  400646:	bf00      	nop
  400648:	00402969 	.word	0x00402969
  40064c:	400e0e00 	.word	0x400e0e00
  400650:	00401fd5 	.word	0x00401fd5
  400654:	00400599 	.word	0x00400599
  400658:	00402611 	.word	0x00402611
  40065c:	004022a1 	.word	0x004022a1

00400660 <_ZL16pio_capture_initP3Piom>:
 *
 * \param p_pio PIO instance to be configured in PIO capture mode.
 * \param ul_id Corresponding PIO ID.
 */
static void pio_capture_init(Pio *p_pio, uint32_t ul_id)
{
  400660:	b580      	push	{r7, lr}
  400662:	b082      	sub	sp, #8
  400664:	af00      	add	r7, sp, #0
  400666:	6078      	str	r0, [r7, #4]
  400668:	6039      	str	r1, [r7, #0]
	/* Enable periphral clock */
	pmc_enable_periph_clk(ul_id);
  40066a:	6838      	ldr	r0, [r7, #0]
  40066c:	4b22      	ldr	r3, [pc, #136]	; (4006f8 <_ZL16pio_capture_initP3Piom+0x98>)
  40066e:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400670:	687b      	ldr	r3, [r7, #4]
  400672:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  400676:	f023 0201 	bic.w	r2, r3, #1
  40067a:	687b      	ldr	r3, [r7, #4]
  40067c:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400680:	687b      	ldr	r3, [r7, #4]
  400682:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
  400686:	f043 0208 	orr.w	r2, r3, #8
  40068a:	687b      	ldr	r3, [r7, #4]
  40068c:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400690:	687b      	ldr	r3, [r7, #4]
  400692:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  400696:	f023 0230 	bic.w	r2, r3, #48	; 0x30
  40069a:	687b      	ldr	r3, [r7, #4]
  40069c:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  4006a0:	687b      	ldr	r3, [r7, #4]
  4006a2:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4006a6:	f043 0220 	orr.w	r2, r3, #32
  4006aa:	687b      	ldr	r3, [r7, #4]
  4006ac:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  4006b0:	687b      	ldr	r3, [r7, #4]
  4006b2:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4006b6:	f423 7200 	bic.w	r2, r3, #512	; 0x200
  4006ba:	687b      	ldr	r3, [r7, #4]
  4006bc:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  4006c0:	687b      	ldr	r3, [r7, #4]
  4006c2:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4006c6:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
  4006ca:	687b      	ldr	r3, [r7, #4]
  4006cc:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150

#if !defined(DEFAULT_MODE_COLORED)
	/* Samples only data with even index */
	p_pio->PIO_PCMR |= PIO_PCMR_HALFS;
  4006d0:	687b      	ldr	r3, [r7, #4]
  4006d2:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4006d6:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
  4006da:	687b      	ldr	r3, [r7, #4]
  4006dc:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_FRSTS);
  4006e0:	687b      	ldr	r3, [r7, #4]
  4006e2:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4006e6:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
  4006ea:	687b      	ldr	r3, [r7, #4]
  4006ec:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
#endif
}
  4006f0:	3708      	adds	r7, #8
  4006f2:	46bd      	mov	sp, r7
  4006f4:	bd80      	pop	{r7, pc}
  4006f6:	bf00      	nop
  4006f8:	00402969 	.word	0x00402969

004006fc <_ZL21pio_capture_to_bufferP3PioPhm>:
 * \param p_uc_buf Buffer address where captured data must be stored.
 * \param ul_size Data frame size.
 */
static uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf,
		uint32_t ul_size)
{
  4006fc:	b480      	push	{r7}
  4006fe:	b085      	sub	sp, #20
  400700:	af00      	add	r7, sp, #0
  400702:	60f8      	str	r0, [r7, #12]
  400704:	60b9      	str	r1, [r7, #8]
  400706:	607a      	str	r2, [r7, #4]
	/* Check if the first PDC bank is free */
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400708:	68fb      	ldr	r3, [r7, #12]
  40070a:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
  40070e:	2b00      	cmp	r3, #0
  400710:	d106      	bne.n	400720 <_ZL21pio_capture_to_bufferP3PioPhm+0x24>
  400712:	68fb      	ldr	r3, [r7, #12]
  400714:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
  400718:	2b00      	cmp	r3, #0
  40071a:	d101      	bne.n	400720 <_ZL21pio_capture_to_bufferP3PioPhm+0x24>
  40071c:	2301      	movs	r3, #1
  40071e:	e000      	b.n	400722 <_ZL21pio_capture_to_bufferP3PioPhm+0x26>
  400720:	2300      	movs	r3, #0
  400722:	2b00      	cmp	r3, #0
  400724:	d00d      	beq.n	400742 <_ZL21pio_capture_to_bufferP3PioPhm+0x46>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400726:	68ba      	ldr	r2, [r7, #8]
  400728:	68fb      	ldr	r3, [r7, #12]
  40072a:	f8c3 2168 	str.w	r2, [r3, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  40072e:	68fb      	ldr	r3, [r7, #12]
  400730:	687a      	ldr	r2, [r7, #4]
  400732:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400736:	68fb      	ldr	r3, [r7, #12]
  400738:	2201      	movs	r2, #1
  40073a:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
		return 1;
  40073e:	2301      	movs	r3, #1
  400740:	e014      	b.n	40076c <_ZL21pio_capture_to_bufferP3PioPhm+0x70>
	} else if (p_pio->PIO_RNCR == 0) {
  400742:	68fb      	ldr	r3, [r7, #12]
  400744:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
  400748:	2b00      	cmp	r3, #0
  40074a:	bf0c      	ite	eq
  40074c:	2301      	moveq	r3, #1
  40074e:	2300      	movne	r3, #0
  400750:	b2db      	uxtb	r3, r3
  400752:	2b00      	cmp	r3, #0
  400754:	d009      	beq.n	40076a <_ZL21pio_capture_to_bufferP3PioPhm+0x6e>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400756:	68ba      	ldr	r2, [r7, #8]
  400758:	68fb      	ldr	r3, [r7, #12]
  40075a:	f8c3 2178 	str.w	r2, [r3, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  40075e:	68fb      	ldr	r3, [r7, #12]
  400760:	687a      	ldr	r2, [r7, #4]
  400762:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
		return 1;
  400766:	2301      	movs	r3, #1
  400768:	e000      	b.n	40076c <_ZL21pio_capture_to_bufferP3PioPhm+0x70>
	} else {
		return 0;
  40076a:	2300      	movs	r3, #0
	}
}
  40076c:	4618      	mov	r0, r3
  40076e:	3714      	adds	r7, #20
  400770:	46bd      	mov	sp, r7
  400772:	f85d 7b04 	ldr.w	r7, [sp], #4
  400776:	4770      	bx	lr

00400778 <_ZL12display_initv>:

/**
 * \brief Intialize LCD display.
 */
static void display_init(void)
{
  400778:	b580      	push	{r7, lr}
  40077a:	b084      	sub	sp, #16
  40077c:	af00      	add	r7, sp, #0
	struct ili9325_opt_t ili9325_display_opt;

	/* Enable peripheral clock */
	pmc_enable_periph_clk( ID_SMC );
  40077e:	200a      	movs	r0, #10
  400780:	4b17      	ldr	r3, [pc, #92]	; (4007e0 <_ZL12display_initv+0x68>)
  400782:	4798      	blx	r3

	/* Configure SMC interface for LCD */
	smc_set_setup_timing(SMC, ILI9325_LCD_CS, SMC_SETUP_NWE_SETUP(2)
			| SMC_SETUP_NCS_WR_SETUP(2)
			| SMC_SETUP_NRD_SETUP(2)
			| SMC_SETUP_NCS_RD_SETUP(2));
  400784:	4817      	ldr	r0, [pc, #92]	; (4007e4 <_ZL12display_initv+0x6c>)
  400786:	2102      	movs	r1, #2
  400788:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
  40078c:	4b16      	ldr	r3, [pc, #88]	; (4007e8 <_ZL12display_initv+0x70>)
  40078e:	4798      	blx	r3

	smc_set_pulse_timing(SMC, ILI9325_LCD_CS, SMC_PULSE_NWE_PULSE(4)
			| SMC_PULSE_NCS_WR_PULSE(4)
			| SMC_PULSE_NRD_PULSE(10)
			| SMC_PULSE_NCS_RD_PULSE(10));
  400790:	4814      	ldr	r0, [pc, #80]	; (4007e4 <_ZL12display_initv+0x6c>)
  400792:	2102      	movs	r1, #2
  400794:	4a15      	ldr	r2, [pc, #84]	; (4007ec <_ZL12display_initv+0x74>)
  400796:	4b16      	ldr	r3, [pc, #88]	; (4007f0 <_ZL12display_initv+0x78>)
  400798:	4798      	blx	r3

	smc_set_cycle_timing(SMC, ILI9325_LCD_CS, SMC_CYCLE_NWE_CYCLE(10)
			| SMC_CYCLE_NRD_CYCLE(22));
  40079a:	4812      	ldr	r0, [pc, #72]	; (4007e4 <_ZL12display_initv+0x6c>)
  40079c:	2102      	movs	r1, #2
  40079e:	4a15      	ldr	r2, [pc, #84]	; (4007f4 <_ZL12display_initv+0x7c>)
  4007a0:	4b15      	ldr	r3, [pc, #84]	; (4007f8 <_ZL12display_initv+0x80>)
  4007a2:	4798      	blx	r3

	smc_set_mode(SMC, ILI9325_LCD_CS, SMC_MODE_READ_MODE
			| SMC_MODE_WRITE_MODE);
  4007a4:	480f      	ldr	r0, [pc, #60]	; (4007e4 <_ZL12display_initv+0x6c>)
  4007a6:	2102      	movs	r1, #2
  4007a8:	2203      	movs	r2, #3
  4007aa:	4b14      	ldr	r3, [pc, #80]	; (4007fc <_ZL12display_initv+0x84>)
  4007ac:	4798      	blx	r3

	/* Initialize display parameter */
	ili9325_display_opt.ul_width = ILI9325_LCD_WIDTH;
  4007ae:	23f0      	movs	r3, #240	; 0xf0
  4007b0:	603b      	str	r3, [r7, #0]
	ili9325_display_opt.ul_height = ILI9325_LCD_HEIGHT;
  4007b2:	f44f 73a0 	mov.w	r3, #320	; 0x140
  4007b6:	607b      	str	r3, [r7, #4]
	ili9325_display_opt.foreground_color = COLOR_BLACK;
  4007b8:	2300      	movs	r3, #0
  4007ba:	60bb      	str	r3, [r7, #8]
	ili9325_display_opt.background_color = COLOR_WHITE;
  4007bc:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4007c0:	60fb      	str	r3, [r7, #12]

	/* Switch off backlight */
	aat31xx_disable_backlight();
  4007c2:	4b0f      	ldr	r3, [pc, #60]	; (400800 <_ZL12display_initv+0x88>)
  4007c4:	4798      	blx	r3

	/* Initialize LCD */
	ili9325_init(&ili9325_display_opt);
  4007c6:	463b      	mov	r3, r7
  4007c8:	4618      	mov	r0, r3
  4007ca:	4b0e      	ldr	r3, [pc, #56]	; (400804 <_ZL12display_initv+0x8c>)
  4007cc:	4798      	blx	r3

	/* Set backlight level */
	aat31xx_set_backlight(AAT31XX_MAX_BACKLIGHT_LEVEL);
  4007ce:	2010      	movs	r0, #16
  4007d0:	4b0d      	ldr	r3, [pc, #52]	; (400808 <_ZL12display_initv+0x90>)
  4007d2:	4798      	blx	r3

	/* Turn on LCD */
	ili9325_display_on();
  4007d4:	4b0d      	ldr	r3, [pc, #52]	; (40080c <_ZL12display_initv+0x94>)
  4007d6:	4798      	blx	r3
}
  4007d8:	3710      	adds	r7, #16
  4007da:	46bd      	mov	sp, r7
  4007dc:	bd80      	pop	{r7, pc}
  4007de:	bf00      	nop
  4007e0:	00402969 	.word	0x00402969
  4007e4:	400e0000 	.word	0x400e0000
  4007e8:	00401f19 	.word	0x00401f19
  4007ec:	0a0a0404 	.word	0x0a0a0404
  4007f0:	00401f3d 	.word	0x00401f3d
  4007f4:	0016000a 	.word	0x0016000a
  4007f8:	00401f61 	.word	0x00401f61
  4007fc:	00401f85 	.word	0x00401f85
  400800:	0040187d 	.word	0x0040187d
  400804:	00401a31 	.word	0x00401a31
  400808:	004017f5 	.word	0x004017f5
  40080c:	00401c39 	.word	0x00401c39

00400810 <_ZL12capture_initv>:

/**
 * \brief Initialize PIO capture and the OV7740 image sensor.
 */
static void capture_init(void)
{
  400810:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
  400814:	b084      	sub	sp, #16
  400816:	af00      	add	r7, sp, #0
	twi_options_t opt;

	/* Init Vsync handler*/
	init_vsync_interrupts();
  400818:	f7ff fee0 	bl	4005dc <_ZL21init_vsync_interruptsv>

	/* Init PIO capture*/
	pio_capture_init(OV_DATA_BUS_PIO, OV_DATA_BUS_ID);
  40081c:	4845      	ldr	r0, [pc, #276]	; (400934 <_ZL12capture_initv+0x124>)
  40081e:	210b      	movs	r1, #11
  400820:	f7ff ff1e 	bl	400660 <_ZL16pio_capture_initP3Piom>

	/* Turn on ov7740 image sensor using power pin */
	ov_power(true, OV_POWER_PIO, OV_POWER_MASK);
  400824:	2001      	movs	r0, #1
  400826:	4944      	ldr	r1, [pc, #272]	; (400938 <_ZL12capture_initv+0x128>)
  400828:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40082c:	4b43      	ldr	r3, [pc, #268]	; (40093c <_ZL12capture_initv+0x12c>)
  40082e:	4798      	blx	r3

	/* Init PCK0 to work at 24 Mhz */
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[0] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLA_CLK);
  400830:	4b43      	ldr	r3, [pc, #268]	; (400940 <_ZL12capture_initv+0x130>)
  400832:	2222      	movs	r2, #34	; 0x22
  400834:	641a      	str	r2, [r3, #64]	; 0x40
	PMC->PMC_SCER = PMC_SCER_PCK0;
  400836:	4b42      	ldr	r3, [pc, #264]	; (400940 <_ZL12capture_initv+0x130>)
  400838:	f44f 7280 	mov.w	r2, #256	; 0x100
  40083c:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK0)) {
  40083e:	bf00      	nop
  400840:	4b3f      	ldr	r3, [pc, #252]	; (400940 <_ZL12capture_initv+0x130>)
  400842:	689b      	ldr	r3, [r3, #8]
  400844:	f403 7380 	and.w	r3, r3, #256	; 0x100
  400848:	2b00      	cmp	r3, #0
  40084a:	bf0c      	ite	eq
  40084c:	2301      	moveq	r3, #1
  40084e:	2300      	movne	r3, #0
  400850:	b2db      	uxtb	r3, r3
  400852:	2b00      	cmp	r3, #0
  400854:	d1f4      	bne.n	400840 <_ZL12capture_initv+0x30>
	}

	/* Enable TWI peripheral */
	pmc_enable_periph_clk(ID_BOARD_TWI);
  400856:	2013      	movs	r0, #19
  400858:	4b3a      	ldr	r3, [pc, #232]	; (400944 <_ZL12capture_initv+0x134>)
  40085a:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  40085c:	f7ff fe66 	bl	40052c <sysclk_get_cpu_hz>
  400860:	4603      	mov	r3, r0
  400862:	607b      	str	r3, [r7, #4]
	opt.speed      = TWI_CLK;
  400864:	4b38      	ldr	r3, [pc, #224]	; (400948 <_ZL12capture_initv+0x138>)
  400866:	60bb      	str	r3, [r7, #8]
	twi_master_init(BOARD_TWI, &opt);
  400868:	1d3b      	adds	r3, r7, #4
  40086a:	4838      	ldr	r0, [pc, #224]	; (40094c <_ZL12capture_initv+0x13c>)
  40086c:	4619      	mov	r1, r3
  40086e:	4b38      	ldr	r3, [pc, #224]	; (400950 <_ZL12capture_initv+0x140>)
  400870:	4798      	blx	r3

	/* Configure TWI interrupts */
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
  400872:	2013      	movs	r0, #19
  400874:	f7ff fd94 	bl	4003a0 <NVIC_DisableIRQ>
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
  400878:	2013      	movs	r0, #19
  40087a:	f7ff fdab 	bl	4003d4 <NVIC_ClearPendingIRQ>
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
  40087e:	2013      	movs	r0, #19
  400880:	2100      	movs	r1, #0
  400882:	f7ff fdc1 	bl	400408 <NVIC_SetPriority>
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
  400886:	2013      	movs	r0, #19
  400888:	f7ff fd72 	bl	400370 <NVIC_EnableIRQ>

	/* ov7740 Initialization */
	while (ov_init(BOARD_TWI) == 1) {
  40088c:	bf00      	nop
  40088e:	482f      	ldr	r0, [pc, #188]	; (40094c <_ZL12capture_initv+0x13c>)
  400890:	4b30      	ldr	r3, [pc, #192]	; (400954 <_ZL12capture_initv+0x144>)
  400892:	4798      	blx	r3
  400894:	4603      	mov	r3, r0
  400896:	2b01      	cmp	r3, #1
  400898:	bf0c      	ite	eq
  40089a:	2301      	moveq	r3, #1
  40089c:	2300      	movne	r3, #0
  40089e:	b2db      	uxtb	r3, r3
  4008a0:	2b00      	cmp	r3, #0
  4008a2:	d1f4      	bne.n	40088e <_ZL12capture_initv+0x7e>
	}

	/* ov7740 configuration */
	ov_configure(BOARD_TWI, QVGA_YUV422_20FPS);
  4008a4:	4829      	ldr	r0, [pc, #164]	; (40094c <_ZL12capture_initv+0x13c>)
  4008a6:	2102      	movs	r1, #2
  4008a8:	4b2b      	ldr	r3, [pc, #172]	; (400958 <_ZL12capture_initv+0x148>)
  4008aa:	4798      	blx	r3

	/* Wait 3 seconds to let the image sensor to adapt to environment */
	delay_ms(3000);
  4008ac:	f7ff fe3e 	bl	40052c <sysclk_get_cpu_hz>
  4008b0:	4603      	mov	r3, r0
  4008b2:	4618      	mov	r0, r3
  4008b4:	f04f 0100 	mov.w	r1, #0
  4008b8:	4602      	mov	r2, r0
  4008ba:	460b      	mov	r3, r1
  4008bc:	1892      	adds	r2, r2, r2
  4008be:	eb43 0303 	adc.w	r3, r3, r3
  4008c2:	1812      	adds	r2, r2, r0
  4008c4:	eb43 0301 	adc.w	r3, r3, r1
  4008c8:	ea4f 0bc3 	mov.w	fp, r3, lsl #3
  4008cc:	ea4b 7b52 	orr.w	fp, fp, r2, lsr #29
  4008d0:	ea4f 0ac2 	mov.w	sl, r2, lsl #3
  4008d4:	4652      	mov	r2, sl
  4008d6:	465b      	mov	r3, fp
  4008d8:	1812      	adds	r2, r2, r0
  4008da:	eb43 0301 	adc.w	r3, r3, r1
  4008de:	011d      	lsls	r5, r3, #4
  4008e0:	ea45 7512 	orr.w	r5, r5, r2, lsr #28
  4008e4:	0114      	lsls	r4, r2, #4
  4008e6:	1aa4      	subs	r4, r4, r2
  4008e8:	eb65 0503 	sbc.w	r5, r5, r3
  4008ec:	ea4f 09c5 	mov.w	r9, r5, lsl #3
  4008f0:	ea49 7954 	orr.w	r9, r9, r4, lsr #29
  4008f4:	ea4f 08c4 	mov.w	r8, r4, lsl #3
  4008f8:	4644      	mov	r4, r8
  4008fa:	464d      	mov	r5, r9
  4008fc:	4620      	mov	r0, r4
  4008fe:	4629      	mov	r1, r5
  400900:	f243 62af 	movw	r2, #13999	; 0x36af
  400904:	f04f 0300 	mov.w	r3, #0
  400908:	1812      	adds	r2, r2, r0
  40090a:	eb43 0301 	adc.w	r3, r3, r1
  40090e:	4c13      	ldr	r4, [pc, #76]	; (40095c <_ZL12capture_initv+0x14c>)
  400910:	4610      	mov	r0, r2
  400912:	4619      	mov	r1, r3
  400914:	f243 62b0 	movw	r2, #14000	; 0x36b0
  400918:	f04f 0300 	mov.w	r3, #0
  40091c:	47a0      	blx	r4
  40091e:	4602      	mov	r2, r0
  400920:	460b      	mov	r3, r1
  400922:	4613      	mov	r3, r2
  400924:	4618      	mov	r0, r3
  400926:	4b0e      	ldr	r3, [pc, #56]	; (400960 <_ZL12capture_initv+0x150>)
  400928:	4798      	blx	r3
}
  40092a:	3710      	adds	r7, #16
  40092c:	46bd      	mov	sp, r7
  40092e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
  400932:	bf00      	nop
  400934:	400e0e00 	.word	0x400e0e00
  400938:	400e1200 	.word	0x400e1200
  40093c:	00401531 	.word	0x00401531
  400940:	400e0400 	.word	0x400e0400
  400944:	00402969 	.word	0x00402969
  400948:	00061a80 	.word	0x00061a80
  40094c:	40018000 	.word	0x40018000
  400950:	00402a11 	.word	0x00402a11
  400954:	0040167d 	.word	0x0040167d
  400958:	004016cd 	.word	0x004016cd
  40095c:	00432835 	.word	0x00432835
  400960:	20000001 	.word	0x20000001

00400964 <_ZL13start_capturev>:

/**
 * \brief Start picture capture.
 */
static void start_capture(void)
{
  400964:	b580      	push	{r7, lr}
  400966:	af00      	add	r7, sp, #0
	/* Set capturing destination address*/
	g_p_uc_cap_dest_buf = (uint8_t *)CAP_DEST;
  400968:	4b20      	ldr	r3, [pc, #128]	; (4009ec <_ZL13start_capturev+0x88>)
  40096a:	f04f 42c0 	mov.w	r2, #1610612736	; 0x60000000
  40096e:	601a      	str	r2, [r3, #0]

	/* Set cap_rows value*/
	g_us_cap_rows = IMAGE_HEIGHT;
  400970:	4b1f      	ldr	r3, [pc, #124]	; (4009f0 <_ZL13start_capturev+0x8c>)
  400972:	22f0      	movs	r2, #240	; 0xf0
  400974:	801a      	strh	r2, [r3, #0]

	/* Enable vsync interrupt*/
	pio_enable_interrupt(OV7740_VSYNC_PIO, OV7740_VSYNC_MASK);
  400976:	481f      	ldr	r0, [pc, #124]	; (4009f4 <_ZL13start_capturev+0x90>)
  400978:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  40097c:	4b1e      	ldr	r3, [pc, #120]	; (4009f8 <_ZL13start_capturev+0x94>)
  40097e:	4798      	blx	r3

	/* Capture acquisition will start on rising edge of Vsync signal.
	 * So wait g_vsync_flag = 1 before start process
	 */
	while (!g_ul_vsync_flag) {
  400980:	bf00      	nop
  400982:	4b1e      	ldr	r3, [pc, #120]	; (4009fc <_ZL13start_capturev+0x98>)
  400984:	681b      	ldr	r3, [r3, #0]
  400986:	2b00      	cmp	r3, #0
  400988:	bf0c      	ite	eq
  40098a:	2301      	moveq	r3, #1
  40098c:	2300      	movne	r3, #0
  40098e:	b2db      	uxtb	r3, r3
  400990:	2b00      	cmp	r3, #0
  400992:	d1f6      	bne.n	400982 <_ZL13start_capturev+0x1e>
	}

	/* Disable vsync interrupt*/
	pio_disable_interrupt(OV7740_VSYNC_PIO, OV7740_VSYNC_MASK);
  400994:	4817      	ldr	r0, [pc, #92]	; (4009f4 <_ZL13start_capturev+0x90>)
  400996:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  40099a:	4b19      	ldr	r3, [pc, #100]	; (400a00 <_ZL13start_capturev+0x9c>)
  40099c:	4798      	blx	r3

	/* Enable pio capture*/
	pio_capture_enable(OV7740_DATA_BUS_PIO);
  40099e:	4815      	ldr	r0, [pc, #84]	; (4009f4 <_ZL13start_capturev+0x90>)
  4009a0:	4b18      	ldr	r3, [pc, #96]	; (400a04 <_ZL13start_capturev+0xa0>)
  4009a2:	4798      	blx	r3

	/* Capture data and send it to external SRAM memory thanks to PDC
	 * feature */
	pio_capture_to_buffer(OV7740_DATA_BUS_PIO, g_p_uc_cap_dest_buf,
			(g_us_cap_line * g_us_cap_rows) >> 2);
  4009a4:	4b11      	ldr	r3, [pc, #68]	; (4009ec <_ZL13start_capturev+0x88>)
  4009a6:	681a      	ldr	r2, [r3, #0]
  4009a8:	4b17      	ldr	r3, [pc, #92]	; (400a08 <_ZL13start_capturev+0xa4>)
  4009aa:	881b      	ldrh	r3, [r3, #0]
  4009ac:	4619      	mov	r1, r3
  4009ae:	4b10      	ldr	r3, [pc, #64]	; (4009f0 <_ZL13start_capturev+0x8c>)
  4009b0:	881b      	ldrh	r3, [r3, #0]
  4009b2:	fb03 f301 	mul.w	r3, r3, r1
  4009b6:	109b      	asrs	r3, r3, #2
  4009b8:	480e      	ldr	r0, [pc, #56]	; (4009f4 <_ZL13start_capturev+0x90>)
  4009ba:	4611      	mov	r1, r2
  4009bc:	461a      	mov	r2, r3
  4009be:	f7ff fe9d 	bl	4006fc <_ZL21pio_capture_to_bufferP3PioPhm>

	/* Wait end of capture*/
	while (!((OV7740_DATA_BUS_PIO->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  4009c2:	bf00      	nop
  4009c4:	4b0b      	ldr	r3, [pc, #44]	; (4009f4 <_ZL13start_capturev+0x90>)
  4009c6:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
  4009ca:	f003 0308 	and.w	r3, r3, #8
  4009ce:	2b00      	cmp	r3, #0
  4009d0:	bf0c      	ite	eq
  4009d2:	2301      	moveq	r3, #1
  4009d4:	2300      	movne	r3, #0
  4009d6:	b2db      	uxtb	r3, r3
  4009d8:	2b00      	cmp	r3, #0
  4009da:	d1f3      	bne.n	4009c4 <_ZL13start_capturev+0x60>
			PIO_PCIMR_RXBUFF)) {
	}

	/* Disable pio capture*/
	pio_capture_disable(OV7740_DATA_BUS_PIO);
  4009dc:	4805      	ldr	r0, [pc, #20]	; (4009f4 <_ZL13start_capturev+0x90>)
  4009de:	4b0b      	ldr	r3, [pc, #44]	; (400a0c <_ZL13start_capturev+0xa8>)
  4009e0:	4798      	blx	r3

	/* Reset vsync flag*/
	g_ul_vsync_flag = false;
  4009e2:	4b06      	ldr	r3, [pc, #24]	; (4009fc <_ZL13start_capturev+0x98>)
  4009e4:	2200      	movs	r2, #0
  4009e6:	601a      	str	r2, [r3, #0]
}
  4009e8:	bd80      	pop	{r7, pc}
  4009ea:	bf00      	nop
  4009ec:	20001768 	.word	0x20001768
  4009f0:	20000490 	.word	0x20000490
  4009f4:	400e0e00 	.word	0x400e0e00
  4009f8:	004022a1 	.word	0x004022a1
  4009fc:	20001770 	.word	0x20001770
  400a00:	004022c1 	.word	0x004022c1
  400a04:	004024ed 	.word	0x004024ed
  400a08:	20000492 	.word	0x20000492
  400a0c:	00402519 	.word	0x00402519

00400a10 <_ZL20board_configure_sramv>:

/**
 * \brief Configure SMC interface for SRAM.
 */
static void board_configure_sram( void )
{
  400a10:	b580      	push	{r7, lr}
  400a12:	af00      	add	r7, sp, #0
	/* Enable peripheral clock */
	pmc_enable_periph_clk( ID_SMC );
  400a14:	200a      	movs	r0, #10
  400a16:	4b0b      	ldr	r3, [pc, #44]	; (400a44 <_ZL20board_configure_sramv+0x34>)
  400a18:	4798      	blx	r3

	/* Configure SMC interface for SRAM */
	smc_set_setup_timing(SMC, SRAM_CS, SMC_SETUP_NWE_SETUP(2)
			| SMC_SETUP_NCS_WR_SETUP(0)
			| SMC_SETUP_NRD_SETUP(3)
			| SMC_SETUP_NCS_RD_SETUP(0));
  400a1a:	480b      	ldr	r0, [pc, #44]	; (400a48 <_ZL20board_configure_sramv+0x38>)
  400a1c:	2100      	movs	r1, #0
  400a1e:	4a0b      	ldr	r2, [pc, #44]	; (400a4c <_ZL20board_configure_sramv+0x3c>)
  400a20:	4b0b      	ldr	r3, [pc, #44]	; (400a50 <_ZL20board_configure_sramv+0x40>)
  400a22:	4798      	blx	r3

	smc_set_pulse_timing(SMC, SRAM_CS, SMC_PULSE_NWE_PULSE(4)
			| SMC_PULSE_NCS_WR_PULSE(5)
			| SMC_PULSE_NRD_PULSE(4)
			| SMC_PULSE_NCS_RD_PULSE(6));
  400a24:	4808      	ldr	r0, [pc, #32]	; (400a48 <_ZL20board_configure_sramv+0x38>)
  400a26:	2100      	movs	r1, #0
  400a28:	4a0a      	ldr	r2, [pc, #40]	; (400a54 <_ZL20board_configure_sramv+0x44>)
  400a2a:	4b0b      	ldr	r3, [pc, #44]	; (400a58 <_ZL20board_configure_sramv+0x48>)
  400a2c:	4798      	blx	r3

	smc_set_cycle_timing(SMC, SRAM_CS, SMC_CYCLE_NWE_CYCLE(6)
			| SMC_CYCLE_NRD_CYCLE(7));
  400a2e:	4806      	ldr	r0, [pc, #24]	; (400a48 <_ZL20board_configure_sramv+0x38>)
  400a30:	2100      	movs	r1, #0
  400a32:	4a0a      	ldr	r2, [pc, #40]	; (400a5c <_ZL20board_configure_sramv+0x4c>)
  400a34:	4b0a      	ldr	r3, [pc, #40]	; (400a60 <_ZL20board_configure_sramv+0x50>)
  400a36:	4798      	blx	r3

	smc_set_mode(SMC, SRAM_CS, SMC_MODE_READ_MODE
			| SMC_MODE_WRITE_MODE);
  400a38:	4803      	ldr	r0, [pc, #12]	; (400a48 <_ZL20board_configure_sramv+0x38>)
  400a3a:	2100      	movs	r1, #0
  400a3c:	2203      	movs	r2, #3
  400a3e:	4b09      	ldr	r3, [pc, #36]	; (400a64 <_ZL20board_configure_sramv+0x54>)
  400a40:	4798      	blx	r3
}
  400a42:	bd80      	pop	{r7, pc}
  400a44:	00402969 	.word	0x00402969
  400a48:	400e0000 	.word	0x400e0000
  400a4c:	00030002 	.word	0x00030002
  400a50:	00401f19 	.word	0x00401f19
  400a54:	06040504 	.word	0x06040504
  400a58:	00401f3d 	.word	0x00401f3d
  400a5c:	00070006 	.word	0x00070006
  400a60:	00401f61 	.word	0x00401f61
  400a64:	00401f85 	.word	0x00401f85

00400a68 <_ZL18draw_frame_yuv_bw8v>:

/**
 * \brief Draw LCD in black and white with integral algorithm.
 */
static void draw_frame_yuv_bw8( void )
{
  400a68:	b590      	push	{r4, r7, lr}
  400a6a:	b083      	sub	sp, #12
  400a6c:	af00      	add	r7, sp, #0
	volatile uint32_t ul_cursor;
	uint8_t *p_uc_data;

	p_uc_data = (uint8_t *)g_p_uc_cap_dest_buf;
  400a6e:	4b1d      	ldr	r3, [pc, #116]	; (400ae4 <_ZL18draw_frame_yuv_bw8v+0x7c>)
  400a70:	681b      	ldr	r3, [r3, #0]
  400a72:	607b      	str	r3, [r7, #4]

	/* Configure LCD to draw captured picture */
	LCD_IR(0);
  400a74:	2000      	movs	r0, #0
  400a76:	f7ff fd61 	bl	40053c <LCD_IR>
	LCD_IR(ILI9325_ENTRY_MODE);
  400a7a:	2003      	movs	r0, #3
  400a7c:	f7ff fd5e 	bl	40053c <LCD_IR>
	LCD_WD(((ILI9325_ENTRY_MODE_BGR | ILI9325_ENTRY_MODE_AM |
			ILI9325_ENTRY_MODE_DFM | ILI9325_ENTRY_MODE_TRI |
			ILI9325_ENTRY_MODE_ORG) >> 8) & 0xFF);
  400a80:	20d0      	movs	r0, #208	; 0xd0
  400a82:	f7ff fd69 	bl	400558 <LCD_WD>
	LCD_WD((ILI9325_ENTRY_MODE_BGR | ILI9325_ENTRY_MODE_AM |
			ILI9325_ENTRY_MODE_DFM | ILI9325_ENTRY_MODE_TRI |
			ILI9325_ENTRY_MODE_ORG) & 0xFF);
  400a86:	2088      	movs	r0, #136	; 0x88
  400a88:	f7ff fd66 	bl	400558 <LCD_WD>
	ili9325_draw_prepare(0, 0, IMAGE_HEIGHT, IMAGE_WIDTH);
  400a8c:	2000      	movs	r0, #0
  400a8e:	2100      	movs	r1, #0
  400a90:	22f0      	movs	r2, #240	; 0xf0
  400a92:	f44f 73a0 	mov.w	r3, #320	; 0x140
  400a96:	4c14      	ldr	r4, [pc, #80]	; (400ae8 <_ZL18draw_frame_yuv_bw8v+0x80>)
  400a98:	47a0      	blx	r4

	/* LCD pixel has 24bit data. In black and White mode data has 8bit only
	 * so
	 * this data must be written three time in LCD memory.
	 */
	for (ul_cursor = IMAGE_WIDTH * IMAGE_HEIGHT; ul_cursor != 0;
  400a9a:	f44f 3396 	mov.w	r3, #76800	; 0x12c00
  400a9e:	603b      	str	r3, [r7, #0]
  400aa0:	e014      	b.n	400acc <_ZL18draw_frame_yuv_bw8v+0x64>
			ul_cursor--, p_uc_data++) {
		/* Black and White using Y */
		LCD_WD( *p_uc_data );
  400aa2:	687b      	ldr	r3, [r7, #4]
  400aa4:	781b      	ldrb	r3, [r3, #0]
  400aa6:	4618      	mov	r0, r3
  400aa8:	f7ff fd56 	bl	400558 <LCD_WD>
		LCD_WD( *p_uc_data );
  400aac:	687b      	ldr	r3, [r7, #4]
  400aae:	781b      	ldrb	r3, [r3, #0]
  400ab0:	4618      	mov	r0, r3
  400ab2:	f7ff fd51 	bl	400558 <LCD_WD>
		LCD_WD( *p_uc_data );
  400ab6:	687b      	ldr	r3, [r7, #4]
  400ab8:	781b      	ldrb	r3, [r3, #0]
  400aba:	4618      	mov	r0, r3
  400abc:	f7ff fd4c 	bl	400558 <LCD_WD>

	/* LCD pixel has 24bit data. In black and White mode data has 8bit only
	 * so
	 * this data must be written three time in LCD memory.
	 */
	for (ul_cursor = IMAGE_WIDTH * IMAGE_HEIGHT; ul_cursor != 0;
  400ac0:	683b      	ldr	r3, [r7, #0]
  400ac2:	3b01      	subs	r3, #1
  400ac4:	603b      	str	r3, [r7, #0]
  400ac6:	687b      	ldr	r3, [r7, #4]
  400ac8:	3301      	adds	r3, #1
  400aca:	607b      	str	r3, [r7, #4]
  400acc:	683b      	ldr	r3, [r7, #0]
  400ace:	2b00      	cmp	r3, #0
  400ad0:	bf14      	ite	ne
  400ad2:	2301      	movne	r3, #1
  400ad4:	2300      	moveq	r3, #0
  400ad6:	b2db      	uxtb	r3, r3
  400ad8:	2b00      	cmp	r3, #0
  400ada:	d1e2      	bne.n	400aa2 <_ZL18draw_frame_yuv_bw8v+0x3a>
		/* Black and White using Y */
		LCD_WD( *p_uc_data );
		LCD_WD( *p_uc_data );
		LCD_WD( *p_uc_data );
	}
}
  400adc:	370c      	adds	r7, #12
  400ade:	46bd      	mov	sp, r7
  400ae0:	bd90      	pop	{r4, r7, pc}
  400ae2:	bf00      	nop
  400ae4:	20001768 	.word	0x20001768
  400ae8:	00401da5 	.word	0x00401da5

00400aec <SysTick_Handler>:
uint32_t g_ul_elapsed_time = 0;

volatile uint32_t g_ms_ticks = 0;

void SysTick_Handler(void)
{
  400aec:	b480      	push	{r7}
  400aee:	af00      	add	r7, sp, #0
    g_ms_ticks++;
  400af0:	4b04      	ldr	r3, [pc, #16]	; (400b04 <SysTick_Handler+0x18>)
  400af2:	681b      	ldr	r3, [r3, #0]
  400af4:	3301      	adds	r3, #1
  400af6:	4a03      	ldr	r2, [pc, #12]	; (400b04 <SysTick_Handler+0x18>)
  400af8:	6013      	str	r3, [r2, #0]
}
  400afa:	46bd      	mov	sp, r7
  400afc:	f85d 7b04 	ldr.w	r7, [sp], #4
  400b00:	4770      	bx	lr
  400b02:	bf00      	nop
  400b04:	2000178c 	.word	0x2000178c

00400b08 <_Z14time_tick_initv>:

void time_tick_init(void)
{
  400b08:	b580      	push	{r7, lr}
  400b0a:	af00      	add	r7, sp, #0
    g_ms_ticks = 0;
  400b0c:	4b06      	ldr	r3, [pc, #24]	; (400b28 <_Z14time_tick_initv+0x20>)
  400b0e:	2200      	movs	r2, #0
  400b10:	601a      	str	r2, [r3, #0]
    SysTick_Config(sysclk_get_cpu_hz() / 1000); 
  400b12:	f7ff fd0b 	bl	40052c <sysclk_get_cpu_hz>
  400b16:	4602      	mov	r2, r0
  400b18:	4b04      	ldr	r3, [pc, #16]	; (400b2c <_Z14time_tick_initv+0x24>)
  400b1a:	fba3 2302 	umull	r2, r3, r3, r2
  400b1e:	099b      	lsrs	r3, r3, #6
  400b20:	4618      	mov	r0, r3
  400b22:	f7ff fc9b 	bl	40045c <SysTick_Config>
}
  400b26:	bd80      	pop	{r7, pc}
  400b28:	2000178c 	.word	0x2000178c
  400b2c:	10624dd3 	.word	0x10624dd3

00400b30 <_Z13time_tick_getv>:

uint32_t time_tick_get(void)
{
  400b30:	b480      	push	{r7}
  400b32:	af00      	add	r7, sp, #0
    return g_ms_ticks;
  400b34:	4b03      	ldr	r3, [pc, #12]	; (400b44 <_Z13time_tick_getv+0x14>)
  400b36:	681b      	ldr	r3, [r3, #0]
}
  400b38:	4618      	mov	r0, r3
  400b3a:	46bd      	mov	sp, r7
  400b3c:	f85d 7b04 	ldr.w	r7, [sp], #4
  400b40:	4770      	bx	lr
  400b42:	bf00      	nop
  400b44:	2000178c 	.word	0x2000178c

00400b48 <main>:
 * \brief Application entry point for image sensor capture example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  400b48:	b590      	push	{r4, r7, lr}
  400b4a:	b085      	sub	sp, #20
  400b4c:	af00      	add	r7, sp, #0
	sysclk_init();
  400b4e:	4b3a      	ldr	r3, [pc, #232]	; (400c38 <main+0xf0>)
  400b50:	4798      	blx	r3
	board_init();
  400b52:	4b3a      	ldr	r3, [pc, #232]	; (400c3c <main+0xf4>)
  400b54:	4798      	blx	r3

	/* OV7740 send image sensor data at 24 Mhz. For best performances, PCK0
	 * which will capture OV7740 data, has to work at 24Mhz. It's easier and
	 * optimum to use one PLL for core (PLLB) and one other for PCK0 (PLLA).
	 */
	pmc_enable_pllack(7, 0x1, 1); /* PLLA work at 96 Mhz */
  400b56:	2007      	movs	r0, #7
  400b58:	2101      	movs	r1, #1
  400b5a:	2201      	movs	r2, #1
  400b5c:	4b38      	ldr	r3, [pc, #224]	; (400c40 <main+0xf8>)
  400b5e:	4798      	blx	r3

	/* LCD display initialization */
	display_init();
  400b60:	f7ff fe0a 	bl	400778 <_ZL12display_initv>

	/* LCD display information */
	ili9325_fill(COLOR_TURQUOISE);
  400b64:	4837      	ldr	r0, [pc, #220]	; (400c44 <main+0xfc>)
  400b66:	4b38      	ldr	r3, [pc, #224]	; (400c48 <main+0x100>)
  400b68:	4798      	blx	r3
	ili9325_draw_string(0, 20,
			(uint8_t *)"OV7740 image sensor\ncapture example");
  400b6a:	2000      	movs	r0, #0
  400b6c:	2114      	movs	r1, #20
  400b6e:	4a37      	ldr	r2, [pc, #220]	; (400c4c <main+0x104>)
  400b70:	4b37      	ldr	r3, [pc, #220]	; (400c50 <main+0x108>)
  400b72:	4798      	blx	r3
	ili9325_draw_string(0, 80,
			(uint8_t *)"Please Wait during \ninitialization");
  400b74:	2000      	movs	r0, #0
  400b76:	2150      	movs	r1, #80	; 0x50
  400b78:	4a36      	ldr	r2, [pc, #216]	; (400c54 <main+0x10c>)
  400b7a:	4b35      	ldr	r3, [pc, #212]	; (400c50 <main+0x108>)
  400b7c:	4798      	blx	r3

	/* Configure SMC interface for external SRAM. This SRAM will be used
	 * to store picture during image sensor acquisition.
	 */
	board_configure_sram();
  400b7e:	f7ff ff47 	bl	400a10 <_ZL20board_configure_sramv>

	/* Configure push button to generate interrupt when the user press it */
	configure_button();
  400b82:	f7ff fd43 	bl	40060c <_ZL16configure_buttonv>

	/* OV7740 image sensor initialization*/
	capture_init();
  400b86:	f7ff fe43 	bl	400810 <_ZL12capture_initv>

	/* LCD display information*/
	ili9325_fill(COLOR_TURQUOISE);
  400b8a:	482e      	ldr	r0, [pc, #184]	; (400c44 <main+0xfc>)
  400b8c:	4b2e      	ldr	r3, [pc, #184]	; (400c48 <main+0x100>)
  400b8e:	4798      	blx	r3
	ili9325_draw_string(0, 20,
			(uint8_t *)"OV7740 image sensor\ncapture example");
  400b90:	2000      	movs	r0, #0
  400b92:	2114      	movs	r1, #20
  400b94:	4a2d      	ldr	r2, [pc, #180]	; (400c4c <main+0x104>)
  400b96:	4b2e      	ldr	r3, [pc, #184]	; (400c50 <main+0x108>)
  400b98:	4798      	blx	r3
	ili9325_draw_string(0, 80,
			(uint8_t *)"Please Press button\nto start processing\n barcodes");
  400b9a:	2000      	movs	r0, #0
  400b9c:	2150      	movs	r1, #80	; 0x50
  400b9e:	4a2e      	ldr	r2, [pc, #184]	; (400c58 <main+0x110>)
  400ba0:	4b2b      	ldr	r3, [pc, #172]	; (400c50 <main+0x108>)
  400ba2:	4798      	blx	r3
	
	time_tick_init();
  400ba4:	f7ff ffb0 	bl	400b08 <_Z14time_tick_initv>

	while (1) {
			
		if (g_ul_push_button_trigger) {
  400ba8:	4b2c      	ldr	r3, [pc, #176]	; (400c5c <main+0x114>)
  400baa:	681b      	ldr	r3, [r3, #0]
  400bac:	2b00      	cmp	r3, #0
  400bae:	bf14      	ite	ne
  400bb0:	2301      	movne	r3, #1
  400bb2:	2300      	moveq	r3, #0
  400bb4:	b2db      	uxtb	r3, r3
  400bb6:	2b00      	cmp	r3, #0
  400bb8:	d026      	beq.n	400c08 <main+0xc0>

			/* Capture a picture and send corresponding data to external
			 * memory */			
			g_ul_begin_capture_time = time_tick_get();
  400bba:	f7ff ffb9 	bl	400b30 <_Z13time_tick_getv>
  400bbe:	4602      	mov	r2, r0
  400bc0:	4b27      	ldr	r3, [pc, #156]	; (400c60 <main+0x118>)
  400bc2:	601a      	str	r2, [r3, #0]
			start_capture();
  400bc4:	f7ff fece 	bl	400964 <_ZL13start_capturev>
			g_ul_end_capture_time = time_tick_get();
  400bc8:	f7ff ffb2 	bl	400b30 <_Z13time_tick_getv>
  400bcc:	4602      	mov	r2, r0
  400bce:	4b25      	ldr	r3, [pc, #148]	; (400c64 <main+0x11c>)
  400bd0:	601a      	str	r2, [r3, #0]
			
			/* Load picture data from external memory and display it on the
			 * LCD */
			_display();
  400bd2:	f7ff ff49 	bl	400a68 <_ZL18draw_frame_yuv_bw8v>

			g_ul_begin_process_time = time_tick_get();
  400bd6:	f7ff ffab 	bl	400b30 <_Z13time_tick_getv>
  400bda:	4602      	mov	r2, r0
  400bdc:	4b22      	ldr	r3, [pc, #136]	; (400c68 <main+0x120>)
  400bde:	601a      	str	r2, [r3, #0]

			zbar_hiku_process();
  400be0:	4b22      	ldr	r3, [pc, #136]	; (400c6c <main+0x124>)
  400be2:	4798      	blx	r3
			IplImage *IgradX = 0;
  400be4:	2300      	movs	r3, #0
  400be6:	60fb      	str	r3, [r7, #12]
			IgradX = cvCreateImage(cvSize(320,240),IPL_DEPTH_16S, 1);
  400be8:	1d3b      	adds	r3, r7, #4
  400bea:	4618      	mov	r0, r3
  400bec:	f44f 71a0 	mov.w	r1, #320	; 0x140
  400bf0:	22f0      	movs	r2, #240	; 0xf0
  400bf2:	4b1f      	ldr	r3, [pc, #124]	; (400c70 <main+0x128>)
  400bf4:	4798      	blx	r3
  400bf6:	1d3b      	adds	r3, r7, #4
  400bf8:	e893 0003 	ldmia.w	r3, {r0, r1}
  400bfc:	4a1d      	ldr	r2, [pc, #116]	; (400c74 <main+0x12c>)
  400bfe:	2301      	movs	r3, #1
  400c00:	4c1d      	ldr	r4, [pc, #116]	; (400c78 <main+0x130>)
  400c02:	47a0      	blx	r4
  400c04:	4603      	mov	r3, r0
  400c06:	60fb      	str	r3, [r7, #12]

			}
*/
		} 
		
		if (g_display_splash) {
  400c08:	4b1c      	ldr	r3, [pc, #112]	; (400c7c <main+0x134>)
  400c0a:	681b      	ldr	r3, [r3, #0]
  400c0c:	2b00      	cmp	r3, #0
  400c0e:	bf14      	ite	ne
  400c10:	2301      	movne	r3, #1
  400c12:	2300      	moveq	r3, #0
  400c14:	b2db      	uxtb	r3, r3
  400c16:	2b00      	cmp	r3, #0
  400c18:	d00c      	beq.n	400c34 <main+0xec>
			display_init();
  400c1a:	f7ff fdad 	bl	400778 <_ZL12display_initv>
			ili9325_fill(COLOR_TOMATO);
  400c1e:	4818      	ldr	r0, [pc, #96]	; (400c80 <main+0x138>)
  400c20:	4b09      	ldr	r3, [pc, #36]	; (400c48 <main+0x100>)
  400c22:	4798      	blx	r3
			ili9325_draw_string(0, 80, (uint8_t *)"Press button\nto start decoding \nbrah!");
  400c24:	2000      	movs	r0, #0
  400c26:	2150      	movs	r1, #80	; 0x50
  400c28:	4a16      	ldr	r2, [pc, #88]	; (400c84 <main+0x13c>)
  400c2a:	4b09      	ldr	r3, [pc, #36]	; (400c50 <main+0x108>)
  400c2c:	4798      	blx	r3
			g_display_splash = false;
  400c2e:	4b13      	ldr	r3, [pc, #76]	; (400c7c <main+0x134>)
  400c30:	2200      	movs	r2, #0
  400c32:	601a      	str	r2, [r3, #0]
		}

	}
  400c34:	e7b8      	b.n	400ba8 <main+0x60>
  400c36:	bf00      	nop
  400c38:	00400f8d 	.word	0x00400f8d
  400c3c:	004010c5 	.word	0x004010c5
  400c40:	004028b1 	.word	0x004028b1
  400c44:	0040e0d0 	.word	0x0040e0d0
  400c48:	00401c81 	.word	0x00401c81
  400c4c:	0043aaa4 	.word	0x0043aaa4
  400c50:	00401eb9 	.word	0x00401eb9
  400c54:	0043aac8 	.word	0x0043aac8
  400c58:	0043aaec 	.word	0x0043aaec
  400c5c:	2000176c 	.word	0x2000176c
  400c60:	20001778 	.word	0x20001778
  400c64:	2000177c 	.word	0x2000177c
  400c68:	20001780 	.word	0x20001780
  400c6c:	004001cd 	.word	0x004001cd
  400c70:	00400c89 	.word	0x00400c89
  400c74:	80000010 	.word	0x80000010
  400c78:	00411934 	.word	0x00411934
  400c7c:	20001774 	.word	0x20001774
  400c80:	00ff6347 	.word	0x00ff6347
  400c84:	0043ab20 	.word	0x0043ab20

00400c88 <_Z6cvSizeii>:
    int height;
}
CvSize;

CV_INLINE  CvSize  cvSize( int width, int height )
{
  400c88:	b480      	push	{r7}
  400c8a:	b085      	sub	sp, #20
  400c8c:	af00      	add	r7, sp, #0
  400c8e:	60f8      	str	r0, [r7, #12]
  400c90:	60b9      	str	r1, [r7, #8]
  400c92:	607a      	str	r2, [r7, #4]
    CvSize s;

    s.width = width;
  400c94:	68fb      	ldr	r3, [r7, #12]
  400c96:	68ba      	ldr	r2, [r7, #8]
  400c98:	601a      	str	r2, [r3, #0]
    s.height = height;
  400c9a:	68fb      	ldr	r3, [r7, #12]
  400c9c:	687a      	ldr	r2, [r7, #4]
  400c9e:	605a      	str	r2, [r3, #4]

    return s;
  400ca0:	bf00      	nop
}
  400ca2:	68f8      	ldr	r0, [r7, #12]
  400ca4:	3714      	adds	r7, #20
  400ca6:	46bd      	mov	sp, r7
  400ca8:	f85d 7b04 	ldr.w	r7, [sp], #4
  400cac:	4770      	bx	lr
  400cae:	bf00      	nop

00400cb0 <osc_enable>:
#define OSC_MAINCK_XTAL_HZ          BOARD_FREQ_MAINCK_XTAL          //!< External crystal oscillator.
#define OSC_MAINCK_BYPASS_HZ        BOARD_FREQ_MAINCK_BYPASS        //!< External bypass oscillator.
//@}

static inline void osc_enable(uint32_t ul_id)
{
  400cb0:	b580      	push	{r7, lr}
  400cb2:	b082      	sub	sp, #8
  400cb4:	af00      	add	r7, sp, #0
  400cb6:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400cb8:	687b      	ldr	r3, [r7, #4]
  400cba:	2b07      	cmp	r3, #7
  400cbc:	d830      	bhi.n	400d20 <osc_enable+0x70>
  400cbe:	a201      	add	r2, pc, #4	; (adr r2, 400cc4 <osc_enable+0x14>)
  400cc0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400cc4:	00400d21 	.word	0x00400d21
  400cc8:	00400ce5 	.word	0x00400ce5
  400ccc:	00400ced 	.word	0x00400ced
  400cd0:	00400cf5 	.word	0x00400cf5
  400cd4:	00400cfd 	.word	0x00400cfd
  400cd8:	00400d05 	.word	0x00400d05
  400cdc:	00400d0d 	.word	0x00400d0d
  400ce0:	00400d17 	.word	0x00400d17
	case OSC_SLCK_32K_RC:
		break;

	case OSC_SLCK_32K_XTAL:
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
  400ce4:	2000      	movs	r0, #0
  400ce6:	4b10      	ldr	r3, [pc, #64]	; (400d28 <osc_enable+0x78>)
  400ce8:	4798      	blx	r3
		break;
  400cea:	e019      	b.n	400d20 <osc_enable+0x70>

	case OSC_SLCK_32K_BYPASS:
		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
  400cec:	2001      	movs	r0, #1
  400cee:	4b0e      	ldr	r3, [pc, #56]	; (400d28 <osc_enable+0x78>)
  400cf0:	4798      	blx	r3
		break;
  400cf2:	e015      	b.n	400d20 <osc_enable+0x70>


	case OSC_MAINCK_4M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
  400cf4:	2000      	movs	r0, #0
  400cf6:	4b0d      	ldr	r3, [pc, #52]	; (400d2c <osc_enable+0x7c>)
  400cf8:	4798      	blx	r3
		break;
  400cfa:	e011      	b.n	400d20 <osc_enable+0x70>

	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
  400cfc:	2010      	movs	r0, #16
  400cfe:	4b0b      	ldr	r3, [pc, #44]	; (400d2c <osc_enable+0x7c>)
  400d00:	4798      	blx	r3
		break;
  400d02:	e00d      	b.n	400d20 <osc_enable+0x70>

	case OSC_MAINCK_12M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  400d04:	2020      	movs	r0, #32
  400d06:	4b09      	ldr	r3, [pc, #36]	; (400d2c <osc_enable+0x7c>)
  400d08:	4798      	blx	r3
		break;
  400d0a:	e009      	b.n	400d20 <osc_enable+0x70>


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400d0c:	2000      	movs	r0, #0
  400d0e:	213e      	movs	r1, #62	; 0x3e
  400d10:	4b07      	ldr	r3, [pc, #28]	; (400d30 <osc_enable+0x80>)
  400d12:	4798      	blx	r3
			pmc_us_to_moscxtst(BOARD_OSC_STARTUP_US,
				OSC_SLCK_32K_RC_HZ));
		break;
  400d14:	e004      	b.n	400d20 <osc_enable+0x70>

	case OSC_MAINCK_BYPASS:
		pmc_switch_mainck_to_xtal(PMC_OSC_BYPASS,
  400d16:	2001      	movs	r0, #1
  400d18:	213e      	movs	r1, #62	; 0x3e
  400d1a:	4b05      	ldr	r3, [pc, #20]	; (400d30 <osc_enable+0x80>)
  400d1c:	4798      	blx	r3
			pmc_us_to_moscxtst(BOARD_OSC_STARTUP_US,
				OSC_SLCK_32K_RC_HZ));
		break;
  400d1e:	bf00      	nop
	}
}
  400d20:	3708      	adds	r7, #8
  400d22:	46bd      	mov	sp, r7
  400d24:	bd80      	pop	{r7, pc}
  400d26:	bf00      	nop
  400d28:	00402741 	.word	0x00402741
  400d2c:	004027ad 	.word	0x004027ad
  400d30:	0040281d 	.word	0x0040281d

00400d34 <osc_is_ready>:
		break;
	}
}

static inline bool osc_is_ready(uint32_t ul_id)
{
  400d34:	b580      	push	{r7, lr}
  400d36:	b082      	sub	sp, #8
  400d38:	af00      	add	r7, sp, #0
  400d3a:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400d3c:	687b      	ldr	r3, [r7, #4]
  400d3e:	2b07      	cmp	r3, #7
  400d40:	d826      	bhi.n	400d90 <osc_is_ready+0x5c>
  400d42:	a201      	add	r2, pc, #4	; (adr r2, 400d48 <osc_is_ready+0x14>)
  400d44:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400d48:	00400d69 	.word	0x00400d69
  400d4c:	00400d6d 	.word	0x00400d6d
  400d50:	00400d6d 	.word	0x00400d6d
  400d54:	00400d7f 	.word	0x00400d7f
  400d58:	00400d7f 	.word	0x00400d7f
  400d5c:	00400d7f 	.word	0x00400d7f
  400d60:	00400d7f 	.word	0x00400d7f
  400d64:	00400d7f 	.word	0x00400d7f
	case OSC_SLCK_32K_RC:
		return 1;
  400d68:	2301      	movs	r3, #1
  400d6a:	e012      	b.n	400d92 <osc_is_ready+0x5e>

	case OSC_SLCK_32K_XTAL:
	case OSC_SLCK_32K_BYPASS:
		return pmc_osc_is_ready_32kxtal();
  400d6c:	4b0b      	ldr	r3, [pc, #44]	; (400d9c <osc_is_ready+0x68>)
  400d6e:	4798      	blx	r3
  400d70:	4603      	mov	r3, r0
  400d72:	2b00      	cmp	r3, #0
  400d74:	bf14      	ite	ne
  400d76:	2301      	movne	r3, #1
  400d78:	2300      	moveq	r3, #0
  400d7a:	b2db      	uxtb	r3, r3
  400d7c:	e009      	b.n	400d92 <osc_is_ready+0x5e>
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400d7e:	4b08      	ldr	r3, [pc, #32]	; (400da0 <osc_is_ready+0x6c>)
  400d80:	4798      	blx	r3
  400d82:	4603      	mov	r3, r0
  400d84:	2b00      	cmp	r3, #0
  400d86:	bf14      	ite	ne
  400d88:	2301      	movne	r3, #1
  400d8a:	2300      	moveq	r3, #0
  400d8c:	b2db      	uxtb	r3, r3
  400d8e:	e000      	b.n	400d92 <osc_is_ready+0x5e>
	}

	return 0;
  400d90:	2300      	movs	r3, #0
}
  400d92:	4618      	mov	r0, r3
  400d94:	3708      	adds	r7, #8
  400d96:	46bd      	mov	sp, r7
  400d98:	bd80      	pop	{r7, pc}
  400d9a:	bf00      	nop
  400d9c:	00402779 	.word	0x00402779
  400da0:	00402895 	.word	0x00402895

00400da4 <osc_get_rate>:

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
  400da4:	b480      	push	{r7}
  400da6:	b083      	sub	sp, #12
  400da8:	af00      	add	r7, sp, #0
  400daa:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400dac:	687b      	ldr	r3, [r7, #4]
  400dae:	2b07      	cmp	r3, #7
  400db0:	d825      	bhi.n	400dfe <osc_get_rate+0x5a>
  400db2:	a201      	add	r2, pc, #4	; (adr r2, 400db8 <osc_get_rate+0x14>)
  400db4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400db8:	00400dd9 	.word	0x00400dd9
  400dbc:	00400ddf 	.word	0x00400ddf
  400dc0:	00400de5 	.word	0x00400de5
  400dc4:	00400deb 	.word	0x00400deb
  400dc8:	00400def 	.word	0x00400def
  400dcc:	00400df3 	.word	0x00400df3
  400dd0:	00400df7 	.word	0x00400df7
  400dd4:	00400dfb 	.word	0x00400dfb
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
  400dd8:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  400ddc:	e010      	b.n	400e00 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
  400dde:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400de2:	e00d      	b.n	400e00 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
  400de4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400de8:	e00a      	b.n	400e00 <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
  400dea:	4b08      	ldr	r3, [pc, #32]	; (400e0c <osc_get_rate+0x68>)
  400dec:	e008      	b.n	400e00 <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
  400dee:	4b08      	ldr	r3, [pc, #32]	; (400e10 <osc_get_rate+0x6c>)
  400df0:	e006      	b.n	400e00 <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
  400df2:	4b08      	ldr	r3, [pc, #32]	; (400e14 <osc_get_rate+0x70>)
  400df4:	e004      	b.n	400e00 <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
  400df6:	4b07      	ldr	r3, [pc, #28]	; (400e14 <osc_get_rate+0x70>)
  400df8:	e002      	b.n	400e00 <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
  400dfa:	4b06      	ldr	r3, [pc, #24]	; (400e14 <osc_get_rate+0x70>)
  400dfc:	e000      	b.n	400e00 <osc_get_rate+0x5c>
	}

	return 0;
  400dfe:	2300      	movs	r3, #0
}
  400e00:	4618      	mov	r0, r3
  400e02:	370c      	adds	r7, #12
  400e04:	46bd      	mov	sp, r7
  400e06:	f85d 7b04 	ldr.w	r7, [sp], #4
  400e0a:	4770      	bx	lr
  400e0c:	003d0900 	.word	0x003d0900
  400e10:	007a1200 	.word	0x007a1200
  400e14:	00b71b00 	.word	0x00b71b00

00400e18 <osc_wait_ready>:
 * to become stable and ready to use as a clock source.
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
  400e18:	b580      	push	{r7, lr}
  400e1a:	b082      	sub	sp, #8
  400e1c:	af00      	add	r7, sp, #0
  400e1e:	4603      	mov	r3, r0
  400e20:	71fb      	strb	r3, [r7, #7]
	while (!osc_is_ready(id)) {
  400e22:	bf00      	nop
  400e24:	79fb      	ldrb	r3, [r7, #7]
  400e26:	4618      	mov	r0, r3
  400e28:	4b05      	ldr	r3, [pc, #20]	; (400e40 <osc_wait_ready+0x28>)
  400e2a:	4798      	blx	r3
  400e2c:	4603      	mov	r3, r0
  400e2e:	f083 0301 	eor.w	r3, r3, #1
  400e32:	b2db      	uxtb	r3, r3
  400e34:	2b00      	cmp	r3, #0
  400e36:	d1f5      	bne.n	400e24 <osc_wait_ready+0xc>
		/* Do nothing */
	}
}
  400e38:	3708      	adds	r7, #8
  400e3a:	46bd      	mov	sp, r7
  400e3c:	bd80      	pop	{r7, pc}
  400e3e:	bf00      	nop
  400e40:	00400d35 	.word	0x00400d35

00400e44 <pll_config_init>:
 * \note The SAM3S PLL hardware interprets mul as mul+1. For readability the hardware mul+1
 * is hidden in this implementation. Use mul as mul effective value.
 */
static inline void pll_config_init(struct pll_config *p_cfg,
		enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)
{
  400e44:	b580      	push	{r7, lr}
  400e46:	b086      	sub	sp, #24
  400e48:	af00      	add	r7, sp, #0
  400e4a:	60f8      	str	r0, [r7, #12]
  400e4c:	607a      	str	r2, [r7, #4]
  400e4e:	603b      	str	r3, [r7, #0]
  400e50:	460b      	mov	r3, r1
  400e52:	72fb      	strb	r3, [r7, #11]
	uint32_t vco_hz;

	Assert(e_src < PLL_NR_SOURCES);

	/* Calculate internal VCO frequency */
	vco_hz = osc_get_rate(e_src) / ul_div;
  400e54:	7afb      	ldrb	r3, [r7, #11]
  400e56:	4618      	mov	r0, r3
  400e58:	4b0d      	ldr	r3, [pc, #52]	; (400e90 <pll_config_init+0x4c>)
  400e5a:	4798      	blx	r3
  400e5c:	4602      	mov	r2, r0
  400e5e:	687b      	ldr	r3, [r7, #4]
  400e60:	fbb2 f3f3 	udiv	r3, r2, r3
  400e64:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_INPUT_MIN_HZ);
	Assert(vco_hz <= PLL_INPUT_MAX_HZ);

	vco_hz *= ul_mul;
  400e66:	697b      	ldr	r3, [r7, #20]
  400e68:	683a      	ldr	r2, [r7, #0]
  400e6a:	fb02 f303 	mul.w	r3, r2, r3
  400e6e:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_OUTPUT_MIN_HZ);
	Assert(vco_hz <= PLL_OUTPUT_MAX_HZ);

	/* PMC hardware will automatically make it mul+1 */
	p_cfg->ctrl = CKGR_PLLAR_MULA(ul_mul - 1) | CKGR_PLLAR_DIVA(ul_div) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
  400e70:	683b      	ldr	r3, [r7, #0]
  400e72:	3b01      	subs	r3, #1
  400e74:	041a      	lsls	r2, r3, #16
  400e76:	4b07      	ldr	r3, [pc, #28]	; (400e94 <pll_config_init+0x50>)
  400e78:	4013      	ands	r3, r2
  400e7a:	687a      	ldr	r2, [r7, #4]
  400e7c:	b2d2      	uxtb	r2, r2
  400e7e:	4313      	orrs	r3, r2
  400e80:	f443 527c 	orr.w	r2, r3, #16128	; 0x3f00
  400e84:	68fb      	ldr	r3, [r7, #12]
  400e86:	601a      	str	r2, [r3, #0]
}
  400e88:	3718      	adds	r7, #24
  400e8a:	46bd      	mov	sp, r7
  400e8c:	bd80      	pop	{r7, pc}
  400e8e:	bf00      	nop
  400e90:	00400da5 	.word	0x00400da5
  400e94:	07ff0000 	.word	0x07ff0000

00400e98 <pll_enable>:
		PMC->CKGR_PLLBR = p_cfg->ctrl;
	}
}

static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
  400e98:	b580      	push	{r7, lr}
  400e9a:	b082      	sub	sp, #8
  400e9c:	af00      	add	r7, sp, #0
  400e9e:	6078      	str	r0, [r7, #4]
  400ea0:	6039      	str	r1, [r7, #0]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  400ea2:	683b      	ldr	r3, [r7, #0]
  400ea4:	2b00      	cmp	r3, #0
  400ea6:	d108      	bne.n	400eba <pll_enable+0x22>
		pmc_disable_pllack(); // Always stop PLL first!
  400ea8:	4b08      	ldr	r3, [pc, #32]	; (400ecc <pll_enable+0x34>)
  400eaa:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400eac:	4a08      	ldr	r2, [pc, #32]	; (400ed0 <pll_enable+0x38>)
  400eae:	687b      	ldr	r3, [r7, #4]
  400eb0:	681b      	ldr	r3, [r3, #0]
  400eb2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  400eb6:	6293      	str	r3, [r2, #40]	; 0x28
  400eb8:	e005      	b.n	400ec6 <pll_enable+0x2e>
	} else {
		pmc_disable_pllbck();
  400eba:	4b06      	ldr	r3, [pc, #24]	; (400ed4 <pll_enable+0x3c>)
  400ebc:	4798      	blx	r3
		PMC->CKGR_PLLBR = p_cfg->ctrl;
  400ebe:	4a04      	ldr	r2, [pc, #16]	; (400ed0 <pll_enable+0x38>)
  400ec0:	687b      	ldr	r3, [r7, #4]
  400ec2:	681b      	ldr	r3, [r3, #0]
  400ec4:	62d3      	str	r3, [r2, #44]	; 0x2c
	}
}
  400ec6:	3708      	adds	r7, #8
  400ec8:	46bd      	mov	sp, r7
  400eca:	bd80      	pop	{r7, pc}
  400ecc:	00402901 	.word	0x00402901
  400ed0:	400e0400 	.word	0x400e0400
  400ed4:	00402935 	.word	0x00402935

00400ed8 <pll_is_locked>:
		pmc_disable_pllbck();
	}
}

static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
  400ed8:	b580      	push	{r7, lr}
  400eda:	b082      	sub	sp, #8
  400edc:	af00      	add	r7, sp, #0
  400ede:	6078      	str	r0, [r7, #4]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  400ee0:	687b      	ldr	r3, [r7, #4]
  400ee2:	2b00      	cmp	r3, #0
  400ee4:	d103      	bne.n	400eee <pll_is_locked+0x16>
		return pmc_is_locked_pllack();
  400ee6:	4b05      	ldr	r3, [pc, #20]	; (400efc <pll_is_locked+0x24>)
  400ee8:	4798      	blx	r3
  400eea:	4603      	mov	r3, r0
  400eec:	e002      	b.n	400ef4 <pll_is_locked+0x1c>
	} else {
		return pmc_is_locked_pllbck();
  400eee:	4b04      	ldr	r3, [pc, #16]	; (400f00 <pll_is_locked+0x28>)
  400ef0:	4798      	blx	r3
  400ef2:	4603      	mov	r3, r0
	}
}
  400ef4:	4618      	mov	r0, r3
  400ef6:	3708      	adds	r7, #8
  400ef8:	46bd      	mov	sp, r7
  400efa:	bd80      	pop	{r7, pc}
  400efc:	00402919 	.word	0x00402919
  400f00:	0040294d 	.word	0x0040294d

00400f04 <pll_enable_source>:

static inline void pll_enable_source(enum pll_source e_src)
{
  400f04:	b580      	push	{r7, lr}
  400f06:	b082      	sub	sp, #8
  400f08:	af00      	add	r7, sp, #0
  400f0a:	4603      	mov	r3, r0
  400f0c:	71fb      	strb	r3, [r7, #7]
	switch (e_src) {
  400f0e:	79fb      	ldrb	r3, [r7, #7]
  400f10:	3b03      	subs	r3, #3
  400f12:	2b04      	cmp	r3, #4
  400f14:	d808      	bhi.n	400f28 <pll_enable_source+0x24>
	case PLL_SRC_MAINCK_4M_RC:
	case PLL_SRC_MAINCK_8M_RC:
	case PLL_SRC_MAINCK_12M_RC:
	case PLL_SRC_MAINCK_XTAL:
	case PLL_SRC_MAINCK_BYPASS:
		osc_enable(e_src);
  400f16:	79fb      	ldrb	r3, [r7, #7]
  400f18:	4618      	mov	r0, r3
  400f1a:	4b05      	ldr	r3, [pc, #20]	; (400f30 <pll_enable_source+0x2c>)
  400f1c:	4798      	blx	r3
		osc_wait_ready(e_src);
  400f1e:	79fb      	ldrb	r3, [r7, #7]
  400f20:	4618      	mov	r0, r3
  400f22:	4b04      	ldr	r3, [pc, #16]	; (400f34 <pll_enable_source+0x30>)
  400f24:	4798      	blx	r3
		break;
  400f26:	e000      	b.n	400f2a <pll_enable_source+0x26>

	default:
		Assert(false);
		break;
  400f28:	bf00      	nop
	}
}
  400f2a:	3708      	adds	r7, #8
  400f2c:	46bd      	mov	sp, r7
  400f2e:	bd80      	pop	{r7, pc}
  400f30:	00400cb1 	.word	0x00400cb1
  400f34:	00400e19 	.word	0x00400e19

00400f38 <pll_wait_for_lock>:
 *
 * \retval STATUS_OK The PLL is now locked.
 * \retval ERR_TIMEOUT Timed out waiting for PLL to become locked.
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
  400f38:	b580      	push	{r7, lr}
  400f3a:	b082      	sub	sp, #8
  400f3c:	af00      	add	r7, sp, #0
  400f3e:	6078      	str	r0, [r7, #4]
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400f40:	bf00      	nop
  400f42:	6878      	ldr	r0, [r7, #4]
  400f44:	4b04      	ldr	r3, [pc, #16]	; (400f58 <pll_wait_for_lock+0x20>)
  400f46:	4798      	blx	r3
  400f48:	4603      	mov	r3, r0
  400f4a:	2b00      	cmp	r3, #0
  400f4c:	d0f9      	beq.n	400f42 <pll_wait_for_lock+0xa>
		/* Do nothing */
	}

	return 0;
  400f4e:	2300      	movs	r3, #0
}
  400f50:	4618      	mov	r0, r3
  400f52:	3708      	adds	r7, #8
  400f54:	46bd      	mov	sp, r7
  400f56:	bd80      	pop	{r7, pc}
  400f58:	00400ed9 	.word	0x00400ed9

00400f5c <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
  400f5c:	b580      	push	{r7, lr}
  400f5e:	af00      	add	r7, sp, #0
	}
#endif

#ifdef CONFIG_PLL1_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLBCK) {
		return pll_get_default_rate(1);
  400f60:	2006      	movs	r0, #6
  400f62:	4b04      	ldr	r3, [pc, #16]	; (400f74 <sysclk_get_main_hz+0x18>)
  400f64:	4798      	blx	r3
  400f66:	4602      	mov	r2, r0
  400f68:	4613      	mov	r3, r2
  400f6a:	009b      	lsls	r3, r3, #2
  400f6c:	4413      	add	r3, r2
  400f6e:	009b      	lsls	r3, r3, #2

	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
  400f70:	4618      	mov	r0, r3
  400f72:	bd80      	pop	{r7, pc}
  400f74:	00400da5 	.word	0x00400da5

00400f78 <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
  400f78:	b580      	push	{r7, lr}
  400f7a:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  400f7c:	4b02      	ldr	r3, [pc, #8]	; (400f88 <sysclk_get_cpu_hz+0x10>)
  400f7e:	4798      	blx	r3
  400f80:	4603      	mov	r3, r0
  400f82:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  400f84:	4618      	mov	r0, r3
  400f86:	bd80      	pop	{r7, pc}
  400f88:	00400f5d 	.word	0x00400f5d

00400f8c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400f8c:	b590      	push	{r4, r7, lr}
  400f8e:	b083      	sub	sp, #12
  400f90:	af00      	add	r7, sp, #0
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400f92:	4811      	ldr	r0, [pc, #68]	; (400fd8 <sysclk_init+0x4c>)
  400f94:	4b11      	ldr	r3, [pc, #68]	; (400fdc <sysclk_init+0x50>)
  400f96:	4798      	blx	r3

#ifdef CONFIG_PLL1_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLBCK) {
		struct pll_config pllcfg;

		pll_enable_source(CONFIG_PLL1_SOURCE);
  400f98:	2006      	movs	r0, #6
  400f9a:	4b11      	ldr	r3, [pc, #68]	; (400fe0 <sysclk_init+0x54>)
  400f9c:	4798      	blx	r3
		pll_config_defaults(&pllcfg, 1);
  400f9e:	1d3b      	adds	r3, r7, #4
  400fa0:	4618      	mov	r0, r3
  400fa2:	2106      	movs	r1, #6
  400fa4:	2201      	movs	r2, #1
  400fa6:	2314      	movs	r3, #20
  400fa8:	4c0e      	ldr	r4, [pc, #56]	; (400fe4 <sysclk_init+0x58>)
  400faa:	47a0      	blx	r4
		pll_enable(&pllcfg, 1);
  400fac:	1d3b      	adds	r3, r7, #4
  400fae:	4618      	mov	r0, r3
  400fb0:	2101      	movs	r1, #1
  400fb2:	4b0d      	ldr	r3, [pc, #52]	; (400fe8 <sysclk_init+0x5c>)
  400fb4:	4798      	blx	r3
		pll_wait_for_lock(1);
  400fb6:	2001      	movs	r0, #1
  400fb8:	4b0c      	ldr	r3, [pc, #48]	; (400fec <sysclk_init+0x60>)
  400fba:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
  400fbc:	2010      	movs	r0, #16
  400fbe:	4b0c      	ldr	r3, [pc, #48]	; (400ff0 <sysclk_init+0x64>)
  400fc0:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400fc2:	4b0c      	ldr	r3, [pc, #48]	; (400ff4 <sysclk_init+0x68>)
  400fc4:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400fc6:	4b0c      	ldr	r3, [pc, #48]	; (400ff8 <sysclk_init+0x6c>)
  400fc8:	4798      	blx	r3
  400fca:	4603      	mov	r3, r0
  400fcc:	4618      	mov	r0, r3
  400fce:	4b03      	ldr	r3, [pc, #12]	; (400fdc <sysclk_init+0x50>)
  400fd0:	4798      	blx	r3

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  400fd2:	370c      	adds	r7, #12
  400fd4:	46bd      	mov	sp, r7
  400fd6:	bd90      	pop	{r4, r7, pc}
  400fd8:	07270e00 	.word	0x07270e00
  400fdc:	00402fb5 	.word	0x00402fb5
  400fe0:	00400f05 	.word	0x00400f05
  400fe4:	00400e45 	.word	0x00400e45
  400fe8:	00400e99 	.word	0x00400e99
  400fec:	00400f39 	.word	0x00400f39
  400ff0:	004026c1 	.word	0x004026c1
  400ff4:	00402e19 	.word	0x00402e19
  400ff8:	00400f79 	.word	0x00400f79

00400ffc <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400ffc:	b580      	push	{r7, lr}
  400ffe:	b086      	sub	sp, #24
  401000:	af00      	add	r7, sp, #0
  401002:	60f8      	str	r0, [r7, #12]
  401004:	60b9      	str	r1, [r7, #8]
  401006:	607a      	str	r2, [r7, #4]
	int nChars = 0;
  401008:	2300      	movs	r3, #0
  40100a:	617b      	str	r3, [r7, #20]

	if (file != 0) {
  40100c:	68fb      	ldr	r3, [r7, #12]
  40100e:	2b00      	cmp	r3, #0
  401010:	d002      	beq.n	401018 <_read+0x1c>
		return -1;
  401012:	f04f 33ff 	mov.w	r3, #4294967295
  401016:	e014      	b.n	401042 <_read+0x46>
	}

	for (; len > 0; --len) {
  401018:	e00f      	b.n	40103a <_read+0x3e>
		ptr_get(stdio_base, ptr);
  40101a:	4b0c      	ldr	r3, [pc, #48]	; (40104c <_read+0x50>)
  40101c:	681b      	ldr	r3, [r3, #0]
  40101e:	4a0c      	ldr	r2, [pc, #48]	; (401050 <_read+0x54>)
  401020:	6812      	ldr	r2, [r2, #0]
  401022:	4610      	mov	r0, r2
  401024:	68b9      	ldr	r1, [r7, #8]
  401026:	4798      	blx	r3
		ptr++;
  401028:	68bb      	ldr	r3, [r7, #8]
  40102a:	3301      	adds	r3, #1
  40102c:	60bb      	str	r3, [r7, #8]
		nChars++;
  40102e:	697b      	ldr	r3, [r7, #20]
  401030:	3301      	adds	r3, #1
  401032:	617b      	str	r3, [r7, #20]

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  401034:	687b      	ldr	r3, [r7, #4]
  401036:	3b01      	subs	r3, #1
  401038:	607b      	str	r3, [r7, #4]
  40103a:	687b      	ldr	r3, [r7, #4]
  40103c:	2b00      	cmp	r3, #0
  40103e:	dcec      	bgt.n	40101a <_read+0x1e>
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
  401040:	697b      	ldr	r3, [r7, #20]
}
  401042:	4618      	mov	r0, r3
  401044:	3718      	adds	r7, #24
  401046:	46bd      	mov	sp, r7
  401048:	bd80      	pop	{r7, pc}
  40104a:	bf00      	nop
  40104c:	20002f40 	.word	0x20002f40
  401050:	20002f48 	.word	0x20002f48

00401054 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  401054:	b580      	push	{r7, lr}
  401056:	b086      	sub	sp, #24
  401058:	af00      	add	r7, sp, #0
  40105a:	60f8      	str	r0, [r7, #12]
  40105c:	60b9      	str	r1, [r7, #8]
  40105e:	607a      	str	r2, [r7, #4]
	int nChars = 0;
  401060:	2300      	movs	r3, #0
  401062:	617b      	str	r3, [r7, #20]

	if ((file != 1) && (file != 2) && (file!=3)) {
  401064:	68fb      	ldr	r3, [r7, #12]
  401066:	2b01      	cmp	r3, #1
  401068:	d008      	beq.n	40107c <_write+0x28>
  40106a:	68fb      	ldr	r3, [r7, #12]
  40106c:	2b02      	cmp	r3, #2
  40106e:	d005      	beq.n	40107c <_write+0x28>
  401070:	68fb      	ldr	r3, [r7, #12]
  401072:	2b03      	cmp	r3, #3
  401074:	d002      	beq.n	40107c <_write+0x28>
		return -1;
  401076:	f04f 33ff 	mov.w	r3, #4294967295
  40107a:	e01a      	b.n	4010b2 <_write+0x5e>
	}

	for (; len != 0; --len) {
  40107c:	e015      	b.n	4010aa <_write+0x56>
		if (ptr_put(stdio_base, *ptr++) < 0) {
  40107e:	4b0f      	ldr	r3, [pc, #60]	; (4010bc <_write+0x68>)
  401080:	681a      	ldr	r2, [r3, #0]
  401082:	4b0f      	ldr	r3, [pc, #60]	; (4010c0 <_write+0x6c>)
  401084:	6818      	ldr	r0, [r3, #0]
  401086:	68bb      	ldr	r3, [r7, #8]
  401088:	1c59      	adds	r1, r3, #1
  40108a:	60b9      	str	r1, [r7, #8]
  40108c:	781b      	ldrb	r3, [r3, #0]
  40108e:	4619      	mov	r1, r3
  401090:	4790      	blx	r2
  401092:	4603      	mov	r3, r0
  401094:	2b00      	cmp	r3, #0
  401096:	da02      	bge.n	40109e <_write+0x4a>
			return -1;
  401098:	f04f 33ff 	mov.w	r3, #4294967295
  40109c:	e009      	b.n	4010b2 <_write+0x5e>
		}
		++nChars;
  40109e:	697b      	ldr	r3, [r7, #20]
  4010a0:	3301      	adds	r3, #1
  4010a2:	617b      	str	r3, [r7, #20]

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4010a4:	687b      	ldr	r3, [r7, #4]
  4010a6:	3b01      	subs	r3, #1
  4010a8:	607b      	str	r3, [r7, #4]
  4010aa:	687b      	ldr	r3, [r7, #4]
  4010ac:	2b00      	cmp	r3, #0
  4010ae:	d1e6      	bne.n	40107e <_write+0x2a>
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
		}
		++nChars;
	}
	return nChars;
  4010b0:	697b      	ldr	r3, [r7, #20]
}
  4010b2:	4618      	mov	r0, r3
  4010b4:	3718      	adds	r7, #24
  4010b6:	46bd      	mov	sp, r7
  4010b8:	bd80      	pop	{r7, pc}
  4010ba:	bf00      	nop
  4010bc:	20002f44 	.word	0x20002f44
  4010c0:	20002f48 	.word	0x20002f48

004010c4 <board_init>:
#include "board.h"
#include "conf_board.h"
#include "gpio.h"

void board_init(void)
{
  4010c4:	b580      	push	{r7, lr}
  4010c6:	af00      	add	r7, sp, #0
	/* Disable the watchdog */
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	WDT->WDT_MR = WDT_MR_WDDIS;
  4010c8:	4b84      	ldr	r3, [pc, #528]	; (4012dc <board_init+0x218>)
  4010ca:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4010ce:	605a      	str	r2, [r3, #4]
#endif

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  4010d0:	204c      	movs	r0, #76	; 0x4c
  4010d2:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4010d6:	4b82      	ldr	r3, [pc, #520]	; (4012e0 <board_init+0x21c>)
  4010d8:	4798      	blx	r3

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  4010da:	2002      	movs	r0, #2
  4010dc:	4981      	ldr	r1, [pc, #516]	; (4012e4 <board_init+0x220>)
  4010de:	4b80      	ldr	r3, [pc, #512]	; (4012e0 <board_init+0x21c>)
  4010e0:	4798      	blx	r3
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
#endif

	/* Configure TWI pins */
#ifdef CONF_BOARD_TWI0
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);
  4010e2:	2003      	movs	r0, #3
  4010e4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4010e8:	4b7d      	ldr	r3, [pc, #500]	; (4012e0 <board_init+0x21c>)
  4010ea:	4798      	blx	r3
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);
  4010ec:	2004      	movs	r0, #4
  4010ee:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4010f2:	4b7b      	ldr	r3, [pc, #492]	; (4012e0 <board_init+0x21c>)
  4010f4:	4798      	blx	r3
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
#endif

	/* Configure PCK0 pins */
#ifdef CONF_BOARD_PCK0
	gpio_configure_pin(PIN_PCK0, PIN_PCK0_FLAGS);
  4010f6:	202d      	movs	r0, #45	; 0x2d
  4010f8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4010fc:	4b78      	ldr	r3, [pc, #480]	; (4012e0 <board_init+0x21c>)
  4010fe:	4798      	blx	r3
	gpio_configure_pin(USB_VBUS_GPIO, USB_VBUS_FLAGS);
#endif

	/* Configure LCD EBI pins */
#ifdef CONF_BOARD_ILI9325
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  401100:	2040      	movs	r0, #64	; 0x40
  401102:	4979      	ldr	r1, [pc, #484]	; (4012e8 <board_init+0x224>)
  401104:	4b76      	ldr	r3, [pc, #472]	; (4012e0 <board_init+0x21c>)
  401106:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  401108:	2041      	movs	r0, #65	; 0x41
  40110a:	4977      	ldr	r1, [pc, #476]	; (4012e8 <board_init+0x224>)
  40110c:	4b74      	ldr	r3, [pc, #464]	; (4012e0 <board_init+0x21c>)
  40110e:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  401110:	2042      	movs	r0, #66	; 0x42
  401112:	4975      	ldr	r1, [pc, #468]	; (4012e8 <board_init+0x224>)
  401114:	4b72      	ldr	r3, [pc, #456]	; (4012e0 <board_init+0x21c>)
  401116:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  401118:	2043      	movs	r0, #67	; 0x43
  40111a:	4973      	ldr	r1, [pc, #460]	; (4012e8 <board_init+0x224>)
  40111c:	4b70      	ldr	r3, [pc, #448]	; (4012e0 <board_init+0x21c>)
  40111e:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  401120:	2044      	movs	r0, #68	; 0x44
  401122:	4971      	ldr	r1, [pc, #452]	; (4012e8 <board_init+0x224>)
  401124:	4b6e      	ldr	r3, [pc, #440]	; (4012e0 <board_init+0x21c>)
  401126:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  401128:	2045      	movs	r0, #69	; 0x45
  40112a:	496f      	ldr	r1, [pc, #444]	; (4012e8 <board_init+0x224>)
  40112c:	4b6c      	ldr	r3, [pc, #432]	; (4012e0 <board_init+0x21c>)
  40112e:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  401130:	2046      	movs	r0, #70	; 0x46
  401132:	496d      	ldr	r1, [pc, #436]	; (4012e8 <board_init+0x224>)
  401134:	4b6a      	ldr	r3, [pc, #424]	; (4012e0 <board_init+0x21c>)
  401136:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  401138:	2047      	movs	r0, #71	; 0x47
  40113a:	496b      	ldr	r1, [pc, #428]	; (4012e8 <board_init+0x224>)
  40113c:	4b68      	ldr	r3, [pc, #416]	; (4012e0 <board_init+0x21c>)
  40113e:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  401140:	204b      	movs	r0, #75	; 0x4b
  401142:	4969      	ldr	r1, [pc, #420]	; (4012e8 <board_init+0x224>)
  401144:	4b66      	ldr	r3, [pc, #408]	; (4012e0 <board_init+0x21c>)
  401146:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  401148:	2048      	movs	r0, #72	; 0x48
  40114a:	4967      	ldr	r1, [pc, #412]	; (4012e8 <board_init+0x224>)
  40114c:	4b64      	ldr	r3, [pc, #400]	; (4012e0 <board_init+0x21c>)
  40114e:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_NCS2, PIN_EBI_NCS2_FLAGS);
  401150:	2016      	movs	r0, #22
  401152:	4966      	ldr	r1, [pc, #408]	; (4012ec <board_init+0x228>)
  401154:	4b62      	ldr	r3, [pc, #392]	; (4012e0 <board_init+0x21c>)
  401156:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_LCD_RS, PIN_EBI_LCD_RS_FLAGS);
  401158:	2053      	movs	r0, #83	; 0x53
  40115a:	4963      	ldr	r1, [pc, #396]	; (4012e8 <board_init+0x224>)
  40115c:	4b60      	ldr	r3, [pc, #384]	; (4012e0 <board_init+0x21c>)
  40115e:	4798      	blx	r3
#endif

	/* Configure Backlight control pin */
#ifdef CONF_BOARD_AAT3155
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  401160:	204d      	movs	r0, #77	; 0x4d
  401162:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401166:	4b5e      	ldr	r3, [pc, #376]	; (4012e0 <board_init+0x21c>)
  401168:	4798      	blx	r3
#endif

	/* Configure SRAM pins */
#ifdef CONF_BOARD_SRAM
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  40116a:	2040      	movs	r0, #64	; 0x40
  40116c:	495e      	ldr	r1, [pc, #376]	; (4012e8 <board_init+0x224>)
  40116e:	4b5c      	ldr	r3, [pc, #368]	; (4012e0 <board_init+0x21c>)
  401170:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  401172:	2041      	movs	r0, #65	; 0x41
  401174:	495c      	ldr	r1, [pc, #368]	; (4012e8 <board_init+0x224>)
  401176:	4b5a      	ldr	r3, [pc, #360]	; (4012e0 <board_init+0x21c>)
  401178:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  40117a:	2042      	movs	r0, #66	; 0x42
  40117c:	495a      	ldr	r1, [pc, #360]	; (4012e8 <board_init+0x224>)
  40117e:	4b58      	ldr	r3, [pc, #352]	; (4012e0 <board_init+0x21c>)
  401180:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  401182:	2043      	movs	r0, #67	; 0x43
  401184:	4958      	ldr	r1, [pc, #352]	; (4012e8 <board_init+0x224>)
  401186:	4b56      	ldr	r3, [pc, #344]	; (4012e0 <board_init+0x21c>)
  401188:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  40118a:	2044      	movs	r0, #68	; 0x44
  40118c:	4956      	ldr	r1, [pc, #344]	; (4012e8 <board_init+0x224>)
  40118e:	4b54      	ldr	r3, [pc, #336]	; (4012e0 <board_init+0x21c>)
  401190:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  401192:	2045      	movs	r0, #69	; 0x45
  401194:	4954      	ldr	r1, [pc, #336]	; (4012e8 <board_init+0x224>)
  401196:	4b52      	ldr	r3, [pc, #328]	; (4012e0 <board_init+0x21c>)
  401198:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  40119a:	2046      	movs	r0, #70	; 0x46
  40119c:	4952      	ldr	r1, [pc, #328]	; (4012e8 <board_init+0x224>)
  40119e:	4b50      	ldr	r3, [pc, #320]	; (4012e0 <board_init+0x21c>)
  4011a0:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  4011a2:	2047      	movs	r0, #71	; 0x47
  4011a4:	4950      	ldr	r1, [pc, #320]	; (4012e8 <board_init+0x224>)
  4011a6:	4b4e      	ldr	r3, [pc, #312]	; (4012e0 <board_init+0x21c>)
  4011a8:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  4011aa:	204b      	movs	r0, #75	; 0x4b
  4011ac:	494e      	ldr	r1, [pc, #312]	; (4012e8 <board_init+0x224>)
  4011ae:	4b4c      	ldr	r3, [pc, #304]	; (4012e0 <board_init+0x21c>)
  4011b0:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  4011b2:	2048      	movs	r0, #72	; 0x48
  4011b4:	494c      	ldr	r1, [pc, #304]	; (4012e8 <board_init+0x224>)
  4011b6:	4b4a      	ldr	r3, [pc, #296]	; (4012e0 <board_init+0x21c>)
  4011b8:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_NCS0, PIN_EBI_NCS0_FLAGS);
  4011ba:	204e      	movs	r0, #78	; 0x4e
  4011bc:	494a      	ldr	r1, [pc, #296]	; (4012e8 <board_init+0x224>)
  4011be:	4b48      	ldr	r3, [pc, #288]	; (4012e0 <board_init+0x21c>)
  4011c0:	4798      	blx	r3
	gpio_configure_pin(SRAM_VCC_GPIO, SRAM_VCC_FLAGS);
  4011c2:	2049      	movs	r0, #73	; 0x49
  4011c4:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4011c8:	4b45      	ldr	r3, [pc, #276]	; (4012e0 <board_init+0x21c>)
  4011ca:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A0, PIN_EBI_ADDR_BUS_FLAG1);
  4011cc:	2052      	movs	r0, #82	; 0x52
  4011ce:	4946      	ldr	r1, [pc, #280]	; (4012e8 <board_init+0x224>)
  4011d0:	4b43      	ldr	r3, [pc, #268]	; (4012e0 <board_init+0x21c>)
  4011d2:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A1, PIN_EBI_ADDR_BUS_FLAG1);
  4011d4:	2053      	movs	r0, #83	; 0x53
  4011d6:	4944      	ldr	r1, [pc, #272]	; (4012e8 <board_init+0x224>)
  4011d8:	4b41      	ldr	r3, [pc, #260]	; (4012e0 <board_init+0x21c>)
  4011da:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A2, PIN_EBI_ADDR_BUS_FLAG1);
  4011dc:	2054      	movs	r0, #84	; 0x54
  4011de:	4942      	ldr	r1, [pc, #264]	; (4012e8 <board_init+0x224>)
  4011e0:	4b3f      	ldr	r3, [pc, #252]	; (4012e0 <board_init+0x21c>)
  4011e2:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A3, PIN_EBI_ADDR_BUS_FLAG1);
  4011e4:	2055      	movs	r0, #85	; 0x55
  4011e6:	4940      	ldr	r1, [pc, #256]	; (4012e8 <board_init+0x224>)
  4011e8:	4b3d      	ldr	r3, [pc, #244]	; (4012e0 <board_init+0x21c>)
  4011ea:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A4, PIN_EBI_ADDR_BUS_FLAG1);
  4011ec:	2056      	movs	r0, #86	; 0x56
  4011ee:	493e      	ldr	r1, [pc, #248]	; (4012e8 <board_init+0x224>)
  4011f0:	4b3b      	ldr	r3, [pc, #236]	; (4012e0 <board_init+0x21c>)
  4011f2:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A5, PIN_EBI_ADDR_BUS_FLAG1);
  4011f4:	2057      	movs	r0, #87	; 0x57
  4011f6:	493c      	ldr	r1, [pc, #240]	; (4012e8 <board_init+0x224>)
  4011f8:	4b39      	ldr	r3, [pc, #228]	; (4012e0 <board_init+0x21c>)
  4011fa:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A6, PIN_EBI_ADDR_BUS_FLAG1);
  4011fc:	2058      	movs	r0, #88	; 0x58
  4011fe:	493a      	ldr	r1, [pc, #232]	; (4012e8 <board_init+0x224>)
  401200:	4b37      	ldr	r3, [pc, #220]	; (4012e0 <board_init+0x21c>)
  401202:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A7, PIN_EBI_ADDR_BUS_FLAG1);
  401204:	2059      	movs	r0, #89	; 0x59
  401206:	4938      	ldr	r1, [pc, #224]	; (4012e8 <board_init+0x224>)
  401208:	4b35      	ldr	r3, [pc, #212]	; (4012e0 <board_init+0x21c>)
  40120a:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A8, PIN_EBI_ADDR_BUS_FLAG1);
  40120c:	205a      	movs	r0, #90	; 0x5a
  40120e:	4936      	ldr	r1, [pc, #216]	; (4012e8 <board_init+0x224>)
  401210:	4b33      	ldr	r3, [pc, #204]	; (4012e0 <board_init+0x21c>)
  401212:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A9, PIN_EBI_ADDR_BUS_FLAG1);
  401214:	205b      	movs	r0, #91	; 0x5b
  401216:	4934      	ldr	r1, [pc, #208]	; (4012e8 <board_init+0x224>)
  401218:	4b31      	ldr	r3, [pc, #196]	; (4012e0 <board_init+0x21c>)
  40121a:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A10, PIN_EBI_ADDR_BUS_FLAG1);
  40121c:	205c      	movs	r0, #92	; 0x5c
  40121e:	4932      	ldr	r1, [pc, #200]	; (4012e8 <board_init+0x224>)
  401220:	4b2f      	ldr	r3, [pc, #188]	; (4012e0 <board_init+0x21c>)
  401222:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A11, PIN_EBI_ADDR_BUS_FLAG1);
  401224:	205d      	movs	r0, #93	; 0x5d
  401226:	4930      	ldr	r1, [pc, #192]	; (4012e8 <board_init+0x224>)
  401228:	4b2d      	ldr	r3, [pc, #180]	; (4012e0 <board_init+0x21c>)
  40122a:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A12, PIN_EBI_ADDR_BUS_FLAG1);
  40122c:	205e      	movs	r0, #94	; 0x5e
  40122e:	492e      	ldr	r1, [pc, #184]	; (4012e8 <board_init+0x224>)
  401230:	4b2b      	ldr	r3, [pc, #172]	; (4012e0 <board_init+0x21c>)
  401232:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A13, PIN_EBI_ADDR_BUS_FLAG1);
  401234:	205f      	movs	r0, #95	; 0x5f
  401236:	492c      	ldr	r1, [pc, #176]	; (4012e8 <board_init+0x224>)
  401238:	4b29      	ldr	r3, [pc, #164]	; (4012e0 <board_init+0x21c>)
  40123a:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A14, PIN_EBI_ADDR_BUS_FLAG2);
  40123c:	2012      	movs	r0, #18
  40123e:	492b      	ldr	r1, [pc, #172]	; (4012ec <board_init+0x228>)
  401240:	4b27      	ldr	r3, [pc, #156]	; (4012e0 <board_init+0x21c>)
  401242:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A15, PIN_EBI_ADDR_BUS_FLAG2);
  401244:	2013      	movs	r0, #19
  401246:	4929      	ldr	r1, [pc, #164]	; (4012ec <board_init+0x228>)
  401248:	4b25      	ldr	r3, [pc, #148]	; (4012e0 <board_init+0x21c>)
  40124a:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A16, PIN_EBI_ADDR_BUS_FLAG2);
  40124c:	2014      	movs	r0, #20
  40124e:	4927      	ldr	r1, [pc, #156]	; (4012ec <board_init+0x228>)
  401250:	4b23      	ldr	r3, [pc, #140]	; (4012e0 <board_init+0x21c>)
  401252:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A17, PIN_EBI_ADDR_BUS_FLAG2);
  401254:	2000      	movs	r0, #0
  401256:	4925      	ldr	r1, [pc, #148]	; (4012ec <board_init+0x228>)
  401258:	4b21      	ldr	r3, [pc, #132]	; (4012e0 <board_init+0x21c>)
  40125a:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A18, PIN_EBI_ADDR_BUS_FLAG2);
  40125c:	2001      	movs	r0, #1
  40125e:	4923      	ldr	r1, [pc, #140]	; (4012ec <board_init+0x228>)
  401260:	4b1f      	ldr	r3, [pc, #124]	; (4012e0 <board_init+0x21c>)
  401262:	4798      	blx	r3
	gpio_configure_pin(PIN_EBI_ADDR_BUS_A19, PIN_EBI_ADDR_BUS_FLAG1);
  401264:	2050      	movs	r0, #80	; 0x50
  401266:	4920      	ldr	r1, [pc, #128]	; (4012e8 <board_init+0x224>)
  401268:	4b1d      	ldr	r3, [pc, #116]	; (4012e0 <board_init+0x21c>)
  40126a:	4798      	blx	r3
#endif

	/* Configure Image sensor pins */
#ifdef CONF_BOARD_OV7740_IMAGE_SENSOR
	gpio_configure_pin(OV_SW_OVT_GPIO, OV_SW_OVT_FLAGS);
  40126c:	204a      	movs	r0, #74	; 0x4a
  40126e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  401272:	4b1b      	ldr	r3, [pc, #108]	; (4012e0 <board_init+0x21c>)
  401274:	4798      	blx	r3
	gpio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
  401276:	204f      	movs	r0, #79	; 0x4f
  401278:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40127c:	4b18      	ldr	r3, [pc, #96]	; (4012e0 <board_init+0x21c>)
  40127e:	4798      	blx	r3
	gpio_configure_pin(OV_FSIN_GPIO, OV_FSIN_FLAGS);
  401280:	2015      	movs	r0, #21
  401282:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401286:	4b16      	ldr	r3, [pc, #88]	; (4012e0 <board_init+0x21c>)
  401288:	4798      	blx	r3
	gpio_configure_pin(OV_HSYNC_GPIO, OV_HSYNC_FLAGS);
  40128a:	2010      	movs	r0, #16
  40128c:	2171      	movs	r1, #113	; 0x71
  40128e:	4b14      	ldr	r3, [pc, #80]	; (4012e0 <board_init+0x21c>)
  401290:	4798      	blx	r3
	gpio_configure_pin(OV_VSYNC_GPIO, OV_VSYNC_FLAGS);
  401292:	200f      	movs	r0, #15
  401294:	2171      	movs	r1, #113	; 0x71
  401296:	4b12      	ldr	r3, [pc, #72]	; (4012e0 <board_init+0x21c>)
  401298:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D2, OV_DATA_BUS_FLAGS);
  40129a:	2018      	movs	r0, #24
  40129c:	4914      	ldr	r1, [pc, #80]	; (4012f0 <board_init+0x22c>)
  40129e:	4b10      	ldr	r3, [pc, #64]	; (4012e0 <board_init+0x21c>)
  4012a0:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D3, OV_DATA_BUS_FLAGS);
  4012a2:	2019      	movs	r0, #25
  4012a4:	4912      	ldr	r1, [pc, #72]	; (4012f0 <board_init+0x22c>)
  4012a6:	4b0e      	ldr	r3, [pc, #56]	; (4012e0 <board_init+0x21c>)
  4012a8:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D4, OV_DATA_BUS_FLAGS);
  4012aa:	201a      	movs	r0, #26
  4012ac:	4910      	ldr	r1, [pc, #64]	; (4012f0 <board_init+0x22c>)
  4012ae:	4b0c      	ldr	r3, [pc, #48]	; (4012e0 <board_init+0x21c>)
  4012b0:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D5, OV_DATA_BUS_FLAGS);
  4012b2:	201b      	movs	r0, #27
  4012b4:	490e      	ldr	r1, [pc, #56]	; (4012f0 <board_init+0x22c>)
  4012b6:	4b0a      	ldr	r3, [pc, #40]	; (4012e0 <board_init+0x21c>)
  4012b8:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
  4012ba:	201c      	movs	r0, #28
  4012bc:	490c      	ldr	r1, [pc, #48]	; (4012f0 <board_init+0x22c>)
  4012be:	4b08      	ldr	r3, [pc, #32]	; (4012e0 <board_init+0x21c>)
  4012c0:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  4012c2:	201d      	movs	r0, #29
  4012c4:	490a      	ldr	r1, [pc, #40]	; (4012f0 <board_init+0x22c>)
  4012c6:	4b06      	ldr	r3, [pc, #24]	; (4012e0 <board_init+0x21c>)
  4012c8:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D8, OV_DATA_BUS_FLAGS);
  4012ca:	201e      	movs	r0, #30
  4012cc:	4908      	ldr	r1, [pc, #32]	; (4012f0 <board_init+0x22c>)
  4012ce:	4b04      	ldr	r3, [pc, #16]	; (4012e0 <board_init+0x21c>)
  4012d0:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D9, OV_DATA_BUS_FLAGS);
  4012d2:	201f      	movs	r0, #31
  4012d4:	4906      	ldr	r1, [pc, #24]	; (4012f0 <board_init+0x22c>)
  4012d6:	4b02      	ldr	r3, [pc, #8]	; (4012e0 <board_init+0x21c>)
  4012d8:	4798      	blx	r3
#endif
}
  4012da:	bd80      	pop	{r7, pc}
  4012dc:	400e1450 	.word	0x400e1450
  4012e0:	0040230d 	.word	0x0040230d
  4012e4:	28000079 	.word	0x28000079
  4012e8:	08000001 	.word	0x08000001
  4012ec:	18000001 	.word	0x18000001
  4012f0:	28000001 	.word	0x28000001

004012f4 <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
  4012f4:	b480      	push	{r7}
  4012f6:	b083      	sub	sp, #12
  4012f8:	af00      	add	r7, sp, #0
  4012fa:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  4012fc:	687b      	ldr	r3, [r7, #4]
  4012fe:	2b07      	cmp	r3, #7
  401300:	d825      	bhi.n	40134e <osc_get_rate+0x5a>
  401302:	a201      	add	r2, pc, #4	; (adr r2, 401308 <osc_get_rate+0x14>)
  401304:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401308:	00401329 	.word	0x00401329
  40130c:	0040132f 	.word	0x0040132f
  401310:	00401335 	.word	0x00401335
  401314:	0040133b 	.word	0x0040133b
  401318:	0040133f 	.word	0x0040133f
  40131c:	00401343 	.word	0x00401343
  401320:	00401347 	.word	0x00401347
  401324:	0040134b 	.word	0x0040134b
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
  401328:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  40132c:	e010      	b.n	401350 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
  40132e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401332:	e00d      	b.n	401350 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
  401334:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401338:	e00a      	b.n	401350 <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
  40133a:	4b08      	ldr	r3, [pc, #32]	; (40135c <osc_get_rate+0x68>)
  40133c:	e008      	b.n	401350 <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
  40133e:	4b08      	ldr	r3, [pc, #32]	; (401360 <osc_get_rate+0x6c>)
  401340:	e006      	b.n	401350 <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
  401342:	4b08      	ldr	r3, [pc, #32]	; (401364 <osc_get_rate+0x70>)
  401344:	e004      	b.n	401350 <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
  401346:	4b07      	ldr	r3, [pc, #28]	; (401364 <osc_get_rate+0x70>)
  401348:	e002      	b.n	401350 <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
  40134a:	4b06      	ldr	r3, [pc, #24]	; (401364 <osc_get_rate+0x70>)
  40134c:	e000      	b.n	401350 <osc_get_rate+0x5c>
	}

	return 0;
  40134e:	2300      	movs	r3, #0
}
  401350:	4618      	mov	r0, r3
  401352:	370c      	adds	r7, #12
  401354:	46bd      	mov	sp, r7
  401356:	f85d 7b04 	ldr.w	r7, [sp], #4
  40135a:	4770      	bx	lr
  40135c:	003d0900 	.word	0x003d0900
  401360:	007a1200 	.word	0x007a1200
  401364:	00b71b00 	.word	0x00b71b00

00401368 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
  401368:	b580      	push	{r7, lr}
  40136a:	af00      	add	r7, sp, #0
	}
#endif

#ifdef CONFIG_PLL1_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLBCK) {
		return pll_get_default_rate(1);
  40136c:	2006      	movs	r0, #6
  40136e:	4b04      	ldr	r3, [pc, #16]	; (401380 <sysclk_get_main_hz+0x18>)
  401370:	4798      	blx	r3
  401372:	4602      	mov	r2, r0
  401374:	4613      	mov	r3, r2
  401376:	009b      	lsls	r3, r3, #2
  401378:	4413      	add	r3, r2
  40137a:	009b      	lsls	r3, r3, #2

	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
  40137c:	4618      	mov	r0, r3
  40137e:	bd80      	pop	{r7, pc}
  401380:	004012f5 	.word	0x004012f5

00401384 <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
  401384:	b580      	push	{r7, lr}
  401386:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  401388:	4b02      	ldr	r3, [pc, #8]	; (401394 <sysclk_get_cpu_hz+0x10>)
  40138a:	4798      	blx	r3
  40138c:	4603      	mov	r3, r0
  40138e:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  401390:	4618      	mov	r0, r3
  401392:	bd80      	pop	{r7, pc}
  401394:	00401369 	.word	0x00401369

00401398 <ov_id>:
 *
 * \param p_twi TWI interface.
 * \return PID and VER.
 */
static uint32_t ov_id(Twi* const p_twi)
{
  401398:	b580      	push	{r7, lr}
  40139a:	b08e      	sub	sp, #56	; 0x38
  40139c:	af00      	add	r7, sp, #0
  40139e:	6078      	str	r0, [r7, #4]
	twi_packet_t packet_pid;
	twi_packet_t packet_ver;
	uint32_t ul_id = 0;
  4013a0:	2300      	movs	r3, #0
  4013a2:	60fb      	str	r3, [r7, #12]
	uint32_t ul_ver = 0;
  4013a4:	2300      	movs	r3, #0
  4013a6:	60bb      	str	r3, [r7, #8]

	/* OV_PID */
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  4013a8:	2321      	movs	r3, #33	; 0x21
  4013aa:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
	packet_pid.addr[0] = OV7740_PIDH;
  4013ae:	230a      	movs	r3, #10
  4013b0:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	packet_pid.addr_length = 1;
  4013b4:	2301      	movs	r3, #1
  4013b6:	62bb      	str	r3, [r7, #40]	; 0x28
	packet_pid.buffer = &ul_id;
  4013b8:	f107 030c 	add.w	r3, r7, #12
  4013bc:	62fb      	str	r3, [r7, #44]	; 0x2c
	packet_pid.length = 1;
  4013be:	2301      	movs	r3, #1
  4013c0:	633b      	str	r3, [r7, #48]	; 0x30

	ov_read_reg(p_twi, &packet_pid);
  4013c2:	f107 0324 	add.w	r3, r7, #36	; 0x24
  4013c6:	6878      	ldr	r0, [r7, #4]
  4013c8:	4619      	mov	r1, r3
  4013ca:	4b0e      	ldr	r3, [pc, #56]	; (401404 <ov_id+0x6c>)
  4013cc:	4798      	blx	r3

	/* OV_VER */
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  4013ce:	2321      	movs	r3, #33	; 0x21
  4013d0:	f887 3020 	strb.w	r3, [r7, #32]
	packet_ver.addr[0] = OV7740_PIDL;
  4013d4:	230b      	movs	r3, #11
  4013d6:	743b      	strb	r3, [r7, #16]
	packet_ver.addr_length = 1;
  4013d8:	2301      	movs	r3, #1
  4013da:	617b      	str	r3, [r7, #20]
	packet_ver.buffer = &ul_ver;
  4013dc:	f107 0308 	add.w	r3, r7, #8
  4013e0:	61bb      	str	r3, [r7, #24]
	packet_ver.length = 1;
  4013e2:	2301      	movs	r3, #1
  4013e4:	61fb      	str	r3, [r7, #28]

	ov_read_reg(p_twi, &packet_ver);
  4013e6:	f107 0310 	add.w	r3, r7, #16
  4013ea:	6878      	ldr	r0, [r7, #4]
  4013ec:	4619      	mov	r1, r3
  4013ee:	4b05      	ldr	r3, [pc, #20]	; (401404 <ov_id+0x6c>)
  4013f0:	4798      	blx	r3
	return ((uint32_t)(ul_id << 8) | ul_ver);
  4013f2:	68fb      	ldr	r3, [r7, #12]
  4013f4:	021a      	lsls	r2, r3, #8
  4013f6:	68bb      	ldr	r3, [r7, #8]
  4013f8:	4313      	orrs	r3, r2
}
  4013fa:	4618      	mov	r0, r3
  4013fc:	3738      	adds	r7, #56	; 0x38
  4013fe:	46bd      	mov	sp, r7
  401400:	bd80      	pop	{r7, pc}
  401402:	bf00      	nop
  401404:	00401565 	.word	0x00401565

00401408 <ov_manufacturer>:
 *
 * \param p_twi TWI interface.
 * \return 0 if the sensor is present, 1 otherwise.
 */
static uint32_t ov_manufacturer(Twi* const p_twi)
{
  401408:	b580      	push	{r7, lr}
  40140a:	b08a      	sub	sp, #40	; 0x28
  40140c:	af00      	add	r7, sp, #0
  40140e:	6078      	str	r0, [r7, #4]
	twi_packet_t twi_packet;
	uint32_t ul_midh = 0;
  401410:	2300      	movs	r3, #0
  401412:	613b      	str	r3, [r7, #16]
	uint32_t ul_midl = 0;
  401414:	2300      	movs	r3, #0
  401416:	60fb      	str	r3, [r7, #12]

	/* OV_MIDH */
	twi_packet.addr[0] = OV7740_MIDH;
  401418:	231c      	movs	r3, #28
  40141a:	753b      	strb	r3, [r7, #20]
	twi_packet.addr_length = 1;
  40141c:	2301      	movs	r3, #1
  40141e:	61bb      	str	r3, [r7, #24]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  401420:	2321      	movs	r3, #33	; 0x21
  401422:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	twi_packet.buffer = &ul_midh;
  401426:	f107 0310 	add.w	r3, r7, #16
  40142a:	61fb      	str	r3, [r7, #28]
	twi_packet.length = 1;
  40142c:	2301      	movs	r3, #1
  40142e:	623b      	str	r3, [r7, #32]

	ov_read_reg(p_twi, &twi_packet);
  401430:	f107 0314 	add.w	r3, r7, #20
  401434:	6878      	ldr	r0, [r7, #4]
  401436:	4619      	mov	r1, r3
  401438:	4b10      	ldr	r3, [pc, #64]	; (40147c <ov_manufacturer+0x74>)
  40143a:	4798      	blx	r3

	/* OV_MIDL */
	twi_packet.addr[0] = OV7740_MIDL;
  40143c:	231d      	movs	r3, #29
  40143e:	753b      	strb	r3, [r7, #20]
	twi_packet.addr_length = 1;
  401440:	2301      	movs	r3, #1
  401442:	61bb      	str	r3, [r7, #24]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  401444:	2321      	movs	r3, #33	; 0x21
  401446:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	twi_packet.buffer = &ul_midl;
  40144a:	f107 030c 	add.w	r3, r7, #12
  40144e:	61fb      	str	r3, [r7, #28]
	twi_packet.length = 1;
  401450:	2301      	movs	r3, #1
  401452:	623b      	str	r3, [r7, #32]

	ov_read_reg(p_twi, &twi_packet);
  401454:	f107 0314 	add.w	r3, r7, #20
  401458:	6878      	ldr	r0, [r7, #4]
  40145a:	4619      	mov	r1, r3
  40145c:	4b07      	ldr	r3, [pc, #28]	; (40147c <ov_manufacturer+0x74>)
  40145e:	4798      	blx	r3

	if ((ul_midh == OV7740_MIDH_DEFAULT) && (ul_midl == OV7740_MIDL_DEFAULT)) {
  401460:	693b      	ldr	r3, [r7, #16]
  401462:	2b7f      	cmp	r3, #127	; 0x7f
  401464:	d104      	bne.n	401470 <ov_manufacturer+0x68>
  401466:	68fb      	ldr	r3, [r7, #12]
  401468:	2ba2      	cmp	r3, #162	; 0xa2
  40146a:	d101      	bne.n	401470 <ov_manufacturer+0x68>
		return 0;
  40146c:	2300      	movs	r3, #0
  40146e:	e000      	b.n	401472 <ov_manufacturer+0x6a>
	}

	return 1;
  401470:	2301      	movs	r3, #1
}
  401472:	4618      	mov	r0, r3
  401474:	3728      	adds	r7, #40	; 0x28
  401476:	46bd      	mov	sp, r7
  401478:	bd80      	pop	{r7, pc}
  40147a:	bf00      	nop
  40147c:	00401565 	.word	0x00401565

00401480 <ov_test_write>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
static uint32_t ov_test_write(Twi* const p_twi)
{
  401480:	b580      	push	{r7, lr}
  401482:	b08a      	sub	sp, #40	; 0x28
  401484:	af00      	add	r7, sp, #0
  401486:	6078      	str	r0, [r7, #4]
	twi_packet_t twi_packet;
	uint32_t ul_value = 0;
  401488:	2300      	movs	r3, #0
  40148a:	613b      	str	r3, [r7, #16]
	uint32_t ul_oldvalue = 0;
  40148c:	2300      	movs	r3, #0
  40148e:	60fb      	str	r3, [r7, #12]
	uint32_t ul_entervalue = 0;
  401490:	2300      	movs	r3, #0
  401492:	60bb      	str	r3, [r7, #8]

	/* OV_BLUE_GAIN */
	twi_packet.addr[0] = 0x01;
  401494:	2301      	movs	r3, #1
  401496:	753b      	strb	r3, [r7, #20]
	twi_packet.addr_length = 1;
  401498:	2301      	movs	r3, #1
  40149a:	61bb      	str	r3, [r7, #24]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  40149c:	2321      	movs	r3, #33	; 0x21
  40149e:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	twi_packet.length = 1;
  4014a2:	2301      	movs	r3, #1
  4014a4:	623b      	str	r3, [r7, #32]

	twi_packet.buffer = &ul_oldvalue;
  4014a6:	f107 030c 	add.w	r3, r7, #12
  4014aa:	61fb      	str	r3, [r7, #28]
	ov_read_reg(p_twi, &twi_packet);
  4014ac:	f107 0314 	add.w	r3, r7, #20
  4014b0:	6878      	ldr	r0, [r7, #4]
  4014b2:	4619      	mov	r1, r3
  4014b4:	4b1c      	ldr	r3, [pc, #112]	; (401528 <ov_test_write+0xa8>)
  4014b6:	4798      	blx	r3

	ul_entervalue = 0xAD;
  4014b8:	23ad      	movs	r3, #173	; 0xad
  4014ba:	60bb      	str	r3, [r7, #8]
	twi_packet.buffer = &ul_entervalue;
  4014bc:	f107 0308 	add.w	r3, r7, #8
  4014c0:	61fb      	str	r3, [r7, #28]
	ov_write_reg(p_twi, &twi_packet);
  4014c2:	f107 0314 	add.w	r3, r7, #20
  4014c6:	6878      	ldr	r0, [r7, #4]
  4014c8:	4619      	mov	r1, r3
  4014ca:	4b18      	ldr	r3, [pc, #96]	; (40152c <ov_test_write+0xac>)
  4014cc:	4798      	blx	r3

	twi_packet.buffer = &ul_value;
  4014ce:	f107 0310 	add.w	r3, r7, #16
  4014d2:	61fb      	str	r3, [r7, #28]
	ov_read_reg(p_twi, &twi_packet);
  4014d4:	f107 0314 	add.w	r3, r7, #20
  4014d8:	6878      	ldr	r0, [r7, #4]
  4014da:	4619      	mov	r1, r3
  4014dc:	4b12      	ldr	r3, [pc, #72]	; (401528 <ov_test_write+0xa8>)
  4014de:	4798      	blx	r3

	if (ul_value != ul_entervalue) {
  4014e0:	693a      	ldr	r2, [r7, #16]
  4014e2:	68bb      	ldr	r3, [r7, #8]
  4014e4:	429a      	cmp	r2, r3
  4014e6:	d001      	beq.n	4014ec <ov_test_write+0x6c>
		return 1;
  4014e8:	2301      	movs	r3, #1
  4014ea:	e018      	b.n	40151e <ov_test_write+0x9e>
	}

	/* return old value */
	twi_packet.buffer = &ul_oldvalue;
  4014ec:	f107 030c 	add.w	r3, r7, #12
  4014f0:	61fb      	str	r3, [r7, #28]
	ov_write_reg(p_twi, &twi_packet);
  4014f2:	f107 0314 	add.w	r3, r7, #20
  4014f6:	6878      	ldr	r0, [r7, #4]
  4014f8:	4619      	mov	r1, r3
  4014fa:	4b0c      	ldr	r3, [pc, #48]	; (40152c <ov_test_write+0xac>)
  4014fc:	4798      	blx	r3

	twi_packet.buffer = &ul_value;
  4014fe:	f107 0310 	add.w	r3, r7, #16
  401502:	61fb      	str	r3, [r7, #28]
	ov_read_reg(p_twi, &twi_packet);
  401504:	f107 0314 	add.w	r3, r7, #20
  401508:	6878      	ldr	r0, [r7, #4]
  40150a:	4619      	mov	r1, r3
  40150c:	4b06      	ldr	r3, [pc, #24]	; (401528 <ov_test_write+0xa8>)
  40150e:	4798      	blx	r3

	if (ul_value != ul_oldvalue) {
  401510:	693a      	ldr	r2, [r7, #16]
  401512:	68fb      	ldr	r3, [r7, #12]
  401514:	429a      	cmp	r2, r3
  401516:	d001      	beq.n	40151c <ov_test_write+0x9c>
		return 1;
  401518:	2301      	movs	r3, #1
  40151a:	e000      	b.n	40151e <ov_test_write+0x9e>
	}

	return 0;
  40151c:	2300      	movs	r3, #0
}
  40151e:	4618      	mov	r0, r3
  401520:	3728      	adds	r7, #40	; 0x28
  401522:	46bd      	mov	sp, r7
  401524:	bd80      	pop	{r7, pc}
  401526:	bf00      	nop
  401528:	00401565 	.word	0x00401565
  40152c:	00401589 	.word	0x00401589

00401530 <ov_power>:
 * \param on_off 1 to turn on OV7740 sensor and 0 to turn off.
 * \param p_pio Pointer to the PIO instance which control OV7740 sensor power.
 * \param ul_mask Bitmask of OV7740 sensor power pin.
 */
void ov_power(uint32_t ul_on_off, Pio* const p_pio, const uint32_t ul_mask)
{
  401530:	b580      	push	{r7, lr}
  401532:	b084      	sub	sp, #16
  401534:	af00      	add	r7, sp, #0
  401536:	60f8      	str	r0, [r7, #12]
  401538:	60b9      	str	r1, [r7, #8]
  40153a:	607a      	str	r2, [r7, #4]
	if (ul_on_off) {
  40153c:	68fb      	ldr	r3, [r7, #12]
  40153e:	2b00      	cmp	r3, #0
  401540:	d004      	beq.n	40154c <ov_power+0x1c>
		pio_clear(p_pio, ul_mask);
  401542:	68b8      	ldr	r0, [r7, #8]
  401544:	6879      	ldr	r1, [r7, #4]
  401546:	4b05      	ldr	r3, [pc, #20]	; (40155c <ov_power+0x2c>)
  401548:	4798      	blx	r3
  40154a:	e003      	b.n	401554 <ov_power+0x24>
	} else {
		pio_set(p_pio, ul_mask);
  40154c:	68b8      	ldr	r0, [r7, #8]
  40154e:	6879      	ldr	r1, [r7, #4]
  401550:	4b03      	ldr	r3, [pc, #12]	; (401560 <ov_power+0x30>)
  401552:	4798      	blx	r3
	}
}
  401554:	3710      	adds	r7, #16
  401556:	46bd      	mov	sp, r7
  401558:	bd80      	pop	{r7, pc}
  40155a:	bf00      	nop
  40155c:	00402029 	.word	0x00402029
  401560:	0040200d 	.word	0x0040200d

00401564 <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  401564:	b580      	push	{r7, lr}
  401566:	b084      	sub	sp, #16
  401568:	af00      	add	r7, sp, #0
  40156a:	6078      	str	r0, [r7, #4]
  40156c:	6039      	str	r1, [r7, #0]
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  40156e:	6878      	ldr	r0, [r7, #4]
  401570:	6839      	ldr	r1, [r7, #0]
  401572:	4b04      	ldr	r3, [pc, #16]	; (401584 <ov_read_reg+0x20>)
  401574:	4798      	blx	r3
  401576:	60f8      	str	r0, [r7, #12]

	return ul_status;
  401578:	68fb      	ldr	r3, [r7, #12]
}
  40157a:	4618      	mov	r0, r3
  40157c:	3710      	adds	r7, #16
  40157e:	46bd      	mov	sp, r7
  401580:	bd80      	pop	{r7, pc}
  401582:	bf00      	nop
  401584:	00402b45 	.word	0x00402b45

00401588 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  401588:	b580      	push	{r7, lr}
  40158a:	b084      	sub	sp, #16
  40158c:	af00      	add	r7, sp, #0
  40158e:	6078      	str	r0, [r7, #4]
  401590:	6039      	str	r1, [r7, #0]
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  401592:	6878      	ldr	r0, [r7, #4]
  401594:	6839      	ldr	r1, [r7, #0]
  401596:	4b04      	ldr	r3, [pc, #16]	; (4015a8 <ov_write_reg+0x20>)
  401598:	4798      	blx	r3
  40159a:	60f8      	str	r0, [r7, #12]

	return ul_status;
  40159c:	68fb      	ldr	r3, [r7, #12]
}
  40159e:	4618      	mov	r0, r3
  4015a0:	3710      	adds	r7, #16
  4015a2:	46bd      	mov	sp, r7
  4015a4:	bd80      	pop	{r7, pc}
  4015a6:	bf00      	nop
  4015a8:	00402c51 	.word	0x00402c51

004015ac <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  4015ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  4015ae:	b08b      	sub	sp, #44	; 0x2c
  4015b0:	af00      	add	r7, sp, #0
  4015b2:	6078      	str	r0, [r7, #4]
  4015b4:	6039      	str	r1, [r7, #0]
	uint32_t ul_err;
	uint32_t ul_size = 0;
  4015b6:	2300      	movs	r3, #0
  4015b8:	627b      	str	r3, [r7, #36]	; 0x24
	twi_packet_t twi_packet_regs;
	ov_reg *p_next = (ov_reg *)p_reg_list;
  4015ba:	683b      	ldr	r3, [r7, #0]
  4015bc:	623b      	str	r3, [r7, #32]

	while (!((p_next->reg == OV_REG_TERM) &&
  4015be:	e048      	b.n	401652 <ov_write_regs+0xa6>
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
  4015c0:	6a3b      	ldr	r3, [r7, #32]
  4015c2:	781b      	ldrb	r3, [r3, #0]
  4015c4:	2bfe      	cmp	r3, #254	; 0xfe
  4015c6:	d126      	bne.n	401616 <ov_write_regs+0x6a>
			delay_ms(5);
  4015c8:	4b28      	ldr	r3, [pc, #160]	; (40166c <ov_write_regs+0xc0>)
  4015ca:	4798      	blx	r3
  4015cc:	4603      	mov	r3, r0
  4015ce:	4618      	mov	r0, r3
  4015d0:	f04f 0100 	mov.w	r1, #0
  4015d4:	4602      	mov	r2, r0
  4015d6:	460b      	mov	r3, r1
  4015d8:	009d      	lsls	r5, r3, #2
  4015da:	ea45 7592 	orr.w	r5, r5, r2, lsr #30
  4015de:	0094      	lsls	r4, r2, #2
  4015e0:	4622      	mov	r2, r4
  4015e2:	462b      	mov	r3, r5
  4015e4:	1812      	adds	r2, r2, r0
  4015e6:	eb43 0301 	adc.w	r3, r3, r1
  4015ea:	f243 60af 	movw	r0, #13999	; 0x36af
  4015ee:	f04f 0100 	mov.w	r1, #0
  4015f2:	1812      	adds	r2, r2, r0
  4015f4:	eb43 0301 	adc.w	r3, r3, r1
  4015f8:	4e1d      	ldr	r6, [pc, #116]	; (401670 <ov_write_regs+0xc4>)
  4015fa:	4610      	mov	r0, r2
  4015fc:	4619      	mov	r1, r3
  4015fe:	f243 62b0 	movw	r2, #14000	; 0x36b0
  401602:	f04f 0300 	mov.w	r3, #0
  401606:	47b0      	blx	r6
  401608:	4602      	mov	r2, r0
  40160a:	460b      	mov	r3, r1
  40160c:	4613      	mov	r3, r2
  40160e:	4618      	mov	r0, r3
  401610:	4b18      	ldr	r3, [pc, #96]	; (401674 <ov_write_regs+0xc8>)
  401612:	4798      	blx	r3
  401614:	e01a      	b.n	40164c <ov_write_regs+0xa0>
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
  401616:	6a3b      	ldr	r3, [r7, #32]
  401618:	781b      	ldrb	r3, [r3, #0]
  40161a:	723b      	strb	r3, [r7, #8]
			twi_packet_regs.addr_length = 1;
  40161c:	2301      	movs	r3, #1
  40161e:	60fb      	str	r3, [r7, #12]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  401620:	2321      	movs	r3, #33	; 0x21
  401622:	763b      	strb	r3, [r7, #24]
			twi_packet_regs.length = 1;
  401624:	2301      	movs	r3, #1
  401626:	617b      	str	r3, [r7, #20]
			twi_packet_regs.buffer = &(p_next->val);
  401628:	6a3b      	ldr	r3, [r7, #32]
  40162a:	3301      	adds	r3, #1
  40162c:	613b      	str	r3, [r7, #16]

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  40162e:	f107 0308 	add.w	r3, r7, #8
  401632:	6878      	ldr	r0, [r7, #4]
  401634:	4619      	mov	r1, r3
  401636:	4b10      	ldr	r3, [pc, #64]	; (401678 <ov_write_regs+0xcc>)
  401638:	4798      	blx	r3
  40163a:	61f8      	str	r0, [r7, #28]
			ul_size++;
  40163c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  40163e:	3301      	adds	r3, #1
  401640:	627b      	str	r3, [r7, #36]	; 0x24

			if (ul_err == TWI_BUSY) {
  401642:	69fb      	ldr	r3, [r7, #28]
  401644:	2b08      	cmp	r3, #8
  401646:	d101      	bne.n	40164c <ov_write_regs+0xa0>
				return ul_err;
  401648:	69fb      	ldr	r3, [r7, #28]
  40164a:	e00b      	b.n	401664 <ov_write_regs+0xb8>
			}
		}

		p_next++;
  40164c:	6a3b      	ldr	r3, [r7, #32]
  40164e:	3302      	adds	r3, #2
  401650:	623b      	str	r3, [r7, #32]
	uint32_t ul_err;
	uint32_t ul_size = 0;
	twi_packet_t twi_packet_regs;
	ov_reg *p_next = (ov_reg *)p_reg_list;

	while (!((p_next->reg == OV_REG_TERM) &&
  401652:	6a3b      	ldr	r3, [r7, #32]
  401654:	781b      	ldrb	r3, [r3, #0]
  401656:	2bff      	cmp	r3, #255	; 0xff
  401658:	d1b2      	bne.n	4015c0 <ov_write_regs+0x14>
			(p_next->val == OV_VAL_TERM))) {
  40165a:	6a3b      	ldr	r3, [r7, #32]
  40165c:	785b      	ldrb	r3, [r3, #1]
	uint32_t ul_err;
	uint32_t ul_size = 0;
	twi_packet_t twi_packet_regs;
	ov_reg *p_next = (ov_reg *)p_reg_list;

	while (!((p_next->reg == OV_REG_TERM) &&
  40165e:	2bff      	cmp	r3, #255	; 0xff
  401660:	d1ae      	bne.n	4015c0 <ov_write_regs+0x14>
			}
		}

		p_next++;
	}
	return 0;
  401662:	2300      	movs	r3, #0
}
  401664:	4618      	mov	r0, r3
  401666:	372c      	adds	r7, #44	; 0x2c
  401668:	46bd      	mov	sp, r7
  40166a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40166c:	00401385 	.word	0x00401385
  401670:	00432835 	.word	0x00432835
  401674:	20000001 	.word	0x20000001
  401678:	00401589 	.word	0x00401589

0040167c <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  40167c:	b580      	push	{r7, lr}
  40167e:	b084      	sub	sp, #16
  401680:	af00      	add	r7, sp, #0
  401682:	6078      	str	r0, [r7, #4]
	uint32_t ul_id = 0;
  401684:	2300      	movs	r3, #0
  401686:	60fb      	str	r3, [r7, #12]

	ul_id = ov_id( p_twi );
  401688:	6878      	ldr	r0, [r7, #4]
  40168a:	4b0d      	ldr	r3, [pc, #52]	; (4016c0 <ov_init+0x44>)
  40168c:	4798      	blx	r3
  40168e:	60f8      	str	r0, [r7, #12]

	if (((ul_id >> 8)&0xff)  == OV7740_PIDH_DEFAULT) {
  401690:	68fb      	ldr	r3, [r7, #12]
  401692:	0a1b      	lsrs	r3, r3, #8
  401694:	b2db      	uxtb	r3, r3
  401696:	2b77      	cmp	r3, #119	; 0x77
  401698:	d10d      	bne.n	4016b6 <ov_init+0x3a>
		if (ov_manufacturer( p_twi ) == 0) {
  40169a:	6878      	ldr	r0, [r7, #4]
  40169c:	4b09      	ldr	r3, [pc, #36]	; (4016c4 <ov_init+0x48>)
  40169e:	4798      	blx	r3
  4016a0:	4603      	mov	r3, r0
  4016a2:	2b00      	cmp	r3, #0
  4016a4:	d107      	bne.n	4016b6 <ov_init+0x3a>
			if (ov_test_write( p_twi ) == 0) {
  4016a6:	6878      	ldr	r0, [r7, #4]
  4016a8:	4b07      	ldr	r3, [pc, #28]	; (4016c8 <ov_init+0x4c>)
  4016aa:	4798      	blx	r3
  4016ac:	4603      	mov	r3, r0
  4016ae:	2b00      	cmp	r3, #0
  4016b0:	d101      	bne.n	4016b6 <ov_init+0x3a>
				return 0;
  4016b2:	2300      	movs	r3, #0
  4016b4:	e000      	b.n	4016b8 <ov_init+0x3c>
			}
		}
	}

	return 1;
  4016b6:	2301      	movs	r3, #1
}
  4016b8:	4618      	mov	r0, r3
  4016ba:	3710      	adds	r7, #16
  4016bc:	46bd      	mov	sp, r7
  4016be:	bd80      	pop	{r7, pc}
  4016c0:	00401399 	.word	0x00401399
  4016c4:	00401409 	.word	0x00401409
  4016c8:	00401481 	.word	0x00401481

004016cc <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_ov7740_format format)
{
  4016cc:	b580      	push	{r7, lr}
  4016ce:	b084      	sub	sp, #16
  4016d0:	af00      	add	r7, sp, #0
  4016d2:	6078      	str	r0, [r7, #4]
  4016d4:	460b      	mov	r3, r1
  4016d6:	70fb      	strb	r3, [r7, #3]
	const ov_reg *p_regs_conf = NULL;
  4016d8:	2300      	movs	r3, #0
  4016da:	60fb      	str	r3, [r7, #12]

	/* Common register initialization */
	switch (format) {
  4016dc:	78fb      	ldrb	r3, [r7, #3]
  4016de:	2b08      	cmp	r3, #8
  4016e0:	d82f      	bhi.n	401742 <ov_configure+0x76>
  4016e2:	a201      	add	r2, pc, #4	; (adr r2, 4016e8 <ov_configure+0x1c>)
  4016e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  4016e8:	0040170d 	.word	0x0040170d
  4016ec:	00401713 	.word	0x00401713
  4016f0:	00401719 	.word	0x00401719
  4016f4:	0040171f 	.word	0x0040171f
  4016f8:	00401725 	.word	0x00401725
  4016fc:	0040172b 	.word	0x0040172b
  401700:	00401731 	.word	0x00401731
  401704:	00401737 	.word	0x00401737
  401708:	0040173d 	.word	0x0040173d
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV7740_QVGA_YUV422_10FPS;
  40170c:	4b14      	ldr	r3, [pc, #80]	; (401760 <ov_configure+0x94>)
  40170e:	60fb      	str	r3, [r7, #12]
		break;
  401710:	e018      	b.n	401744 <ov_configure+0x78>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV7740_QVGA_YUV422_15FPS;
  401712:	4b14      	ldr	r3, [pc, #80]	; (401764 <ov_configure+0x98>)
  401714:	60fb      	str	r3, [r7, #12]
		break;
  401716:	e015      	b.n	401744 <ov_configure+0x78>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV7740_QVGA_YUV422_20FPS;
  401718:	4b13      	ldr	r3, [pc, #76]	; (401768 <ov_configure+0x9c>)
  40171a:	60fb      	str	r3, [r7, #12]
		break;
  40171c:	e012      	b.n	401744 <ov_configure+0x78>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV7740_QVGA_YUV422_30FPS;
  40171e:	4b13      	ldr	r3, [pc, #76]	; (40176c <ov_configure+0xa0>)
  401720:	60fb      	str	r3, [r7, #12]
		break;
  401722:	e00f      	b.n	401744 <ov_configure+0x78>

	case QVGA_RGB888:
		p_regs_conf = OV7740_QVGA_RGB888;
  401724:	4b12      	ldr	r3, [pc, #72]	; (401770 <ov_configure+0xa4>)
  401726:	60fb      	str	r3, [r7, #12]
		break;
  401728:	e00c      	b.n	401744 <ov_configure+0x78>

	case QQVGA_YUV422:
		p_regs_conf = OV7740_QQVGA_YUV422;
  40172a:	4b12      	ldr	r3, [pc, #72]	; (401774 <ov_configure+0xa8>)
  40172c:	60fb      	str	r3, [r7, #12]
		break;
  40172e:	e009      	b.n	401744 <ov_configure+0x78>

	case QQVGA_RGB888:
		p_regs_conf = OV7740_QQVGA_RGB888;
  401730:	4b11      	ldr	r3, [pc, #68]	; (401778 <ov_configure+0xac>)
  401732:	60fb      	str	r3, [r7, #12]
		break;
  401734:	e006      	b.n	401744 <ov_configure+0x78>

	case TEST_PATTERN:
		p_regs_conf = OV7740_TEST_PATTERN;
  401736:	4b11      	ldr	r3, [pc, #68]	; (40177c <ov_configure+0xb0>)
  401738:	60fb      	str	r3, [r7, #12]
		break;
  40173a:	e003      	b.n	401744 <ov_configure+0x78>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV7740_VGA_YUV422_20FPS;
  40173c:	4b10      	ldr	r3, [pc, #64]	; (401780 <ov_configure+0xb4>)
  40173e:	60fb      	str	r3, [r7, #12]
		break;
  401740:	e000      	b.n	401744 <ov_configure+0x78>

	default:
		break;
  401742:	bf00      	nop
	}

	if (p_regs_conf != NULL) {
  401744:	68fb      	ldr	r3, [r7, #12]
  401746:	2b00      	cmp	r3, #0
  401748:	d005      	beq.n	401756 <ov_configure+0x8a>
		ov_write_regs( p_twi, p_regs_conf );
  40174a:	6878      	ldr	r0, [r7, #4]
  40174c:	68f9      	ldr	r1, [r7, #12]
  40174e:	4b0d      	ldr	r3, [pc, #52]	; (401784 <ov_configure+0xb8>)
  401750:	4798      	blx	r3
		return 0;
  401752:	2300      	movs	r3, #0
  401754:	e000      	b.n	401758 <ov_configure+0x8c>
	}

	return 1;
  401756:	2301      	movs	r3, #1
}
  401758:	4618      	mov	r0, r3
  40175a:	3710      	adds	r7, #16
  40175c:	46bd      	mov	sp, r7
  40175e:	bd80      	pop	{r7, pc}
  401760:	0043ab68 	.word	0x0043ab68
  401764:	0043ac58 	.word	0x0043ac58
  401768:	0043ad48 	.word	0x0043ad48
  40176c:	0043ae38 	.word	0x0043ae38
  401770:	0043af28 	.word	0x0043af28
  401774:	0043b01c 	.word	0x0043b01c
  401778:	0043b110 	.word	0x0043b110
  40177c:	0043b204 	.word	0x0043b204
  401780:	0043b2f8 	.word	0x0043b2f8
  401784:	004015ad 	.word	0x004015ad

00401788 <ioport_set_pin_level>:
 *
 * \param pin IOPORT pin to configure
 * \param level Logical value of the pin
 */
static inline void ioport_set_pin_level(ioport_pin_t pin, bool level)
{
  401788:	b480      	push	{r7}
  40178a:	b08b      	sub	sp, #44	; 0x2c
  40178c:	af00      	add	r7, sp, #0
  40178e:	6078      	str	r0, [r7, #4]
  401790:	460b      	mov	r3, r1
  401792:	70fb      	strb	r3, [r7, #3]
  401794:	687b      	ldr	r3, [r7, #4]
  401796:	627b      	str	r3, [r7, #36]	; 0x24
  401798:	78fb      	ldrb	r3, [r7, #3]
  40179a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  40179e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4017a0:	61fb      	str	r3, [r7, #28]
  4017a2:	69fb      	ldr	r3, [r7, #28]
  4017a4:	61bb      	str	r3, [r7, #24]
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
  4017a6:	69bb      	ldr	r3, [r7, #24]
  4017a8:	095b      	lsrs	r3, r3, #5
  4017aa:	617b      	str	r3, [r7, #20]
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  4017ac:	697b      	ldr	r3, [r7, #20]
  4017ae:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4017b2:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4017b6:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);
  4017b8:	613b      	str	r3, [r7, #16]

	if (level) {
  4017ba:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  4017be:	2b00      	cmp	r3, #0
  4017c0:	d009      	beq.n	4017d6 <ioport_set_pin_level+0x4e>
  4017c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4017c4:	60fb      	str	r3, [r7, #12]
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
  4017c6:	68fb      	ldr	r3, [r7, #12]
  4017c8:	f003 031f 	and.w	r3, r3, #31
  4017cc:	2201      	movs	r2, #1
  4017ce:	409a      	lsls	r2, r3
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4017d0:	693b      	ldr	r3, [r7, #16]
  4017d2:	631a      	str	r2, [r3, #48]	; 0x30
  4017d4:	e008      	b.n	4017e8 <ioport_set_pin_level+0x60>
  4017d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4017d8:	60bb      	str	r3, [r7, #8]
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
  4017da:	68bb      	ldr	r3, [r7, #8]
  4017dc:	f003 031f 	and.w	r3, r3, #31
  4017e0:	2201      	movs	r2, #1
  4017e2:	409a      	lsls	r2, r3
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4017e4:	693b      	ldr	r3, [r7, #16]
  4017e6:	635a      	str	r2, [r3, #52]	; 0x34
	arch_ioport_set_pin_level(pin, level);
}
  4017e8:	372c      	adds	r7, #44	; 0x2c
  4017ea:	46bd      	mov	sp, r7
  4017ec:	f85d 7b04 	ldr.w	r7, [sp], #4
  4017f0:	4770      	bx	lr
  4017f2:	bf00      	nop

004017f4 <aat31xx_set_backlight>:
 * \param ul_level backlight level.
 *
 * \note pin BOARD_AAT31XX_SET_GPIO must be configured before calling aat31xx_set_backlight.
 */
void aat31xx_set_backlight(uint32_t ul_level)
{
  4017f4:	b580      	push	{r7, lr}
  4017f6:	b084      	sub	sp, #16
  4017f8:	af00      	add	r7, sp, #0
  4017fa:	6078      	str	r0, [r7, #4]
	volatile uint32_t ul_delay;
	uint32_t i;

#ifdef CONF_BOARD_AAT3155
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
  4017fc:	687b      	ldr	r3, [r7, #4]
  4017fe:	f1c3 0311 	rsb	r3, r3, #17
  401802:	607b      	str	r3, [r7, #4]
#ifdef CONF_BOARD_AAT3193
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
#endif

	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
  401804:	687b      	ldr	r3, [r7, #4]
  401806:	2b10      	cmp	r3, #16
  401808:	bf28      	it	cs
  40180a:	2310      	movcs	r3, #16
  40180c:	607b      	str	r3, [r7, #4]
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;
  40180e:	687b      	ldr	r3, [r7, #4]
  401810:	2b00      	cmp	r3, #0
  401812:	d001      	beq.n	401818 <aat31xx_set_backlight+0x24>
  401814:	687b      	ldr	r3, [r7, #4]
  401816:	e000      	b.n	40181a <aat31xx_set_backlight+0x26>
  401818:	2301      	movs	r3, #1
  40181a:	607b      	str	r3, [r7, #4]

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
  40181c:	2300      	movs	r3, #0
  40181e:	60fb      	str	r3, [r7, #12]
  401820:	e01a      	b.n	401858 <aat31xx_set_backlight+0x64>
		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);
  401822:	204d      	movs	r0, #77	; 0x4d
  401824:	2100      	movs	r1, #0
  401826:	4b14      	ldr	r3, [pc, #80]	; (401878 <aat31xx_set_backlight+0x84>)
  401828:	4798      	blx	r3
		ul_delay = DELAY_PULSE;
  40182a:	2318      	movs	r3, #24
  40182c:	60bb      	str	r3, [r7, #8]
		while (ul_delay--) {
  40182e:	bf00      	nop
  401830:	68bb      	ldr	r3, [r7, #8]
  401832:	1e5a      	subs	r2, r3, #1
  401834:	60ba      	str	r2, [r7, #8]
  401836:	2b00      	cmp	r3, #0
  401838:	d1fa      	bne.n	401830 <aat31xx_set_backlight+0x3c>
		}

		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_HIGH);
  40183a:	204d      	movs	r0, #77	; 0x4d
  40183c:	2101      	movs	r1, #1
  40183e:	4b0e      	ldr	r3, [pc, #56]	; (401878 <aat31xx_set_backlight+0x84>)
  401840:	4798      	blx	r3

		ul_delay = DELAY_PULSE;
  401842:	2318      	movs	r3, #24
  401844:	60bb      	str	r3, [r7, #8]
		while (ul_delay--) {
  401846:	bf00      	nop
  401848:	68bb      	ldr	r3, [r7, #8]
  40184a:	1e5a      	subs	r2, r3, #1
  40184c:	60ba      	str	r2, [r7, #8]
  40184e:	2b00      	cmp	r3, #0
  401850:	d1fa      	bne.n	401848 <aat31xx_set_backlight+0x54>
	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
  401852:	68fb      	ldr	r3, [r7, #12]
  401854:	3301      	adds	r3, #1
  401856:	60fb      	str	r3, [r7, #12]
  401858:	68fa      	ldr	r2, [r7, #12]
  40185a:	687b      	ldr	r3, [r7, #4]
  40185c:	429a      	cmp	r2, r3
  40185e:	d3e0      	bcc.n	401822 <aat31xx_set_backlight+0x2e>
		ul_delay = DELAY_PULSE;
		while (ul_delay--) {
		}
	}

	ul_delay = DELAY_ENABLE;
  401860:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  401864:	60bb      	str	r3, [r7, #8]
	while (ul_delay--) {
  401866:	bf00      	nop
  401868:	68bb      	ldr	r3, [r7, #8]
  40186a:	1e5a      	subs	r2, r3, #1
  40186c:	60ba      	str	r2, [r7, #8]
  40186e:	2b00      	cmp	r3, #0
  401870:	d1fa      	bne.n	401868 <aat31xx_set_backlight+0x74>
	}
}
  401872:	3710      	adds	r7, #16
  401874:	46bd      	mov	sp, r7
  401876:	bd80      	pop	{r7, pc}
  401878:	00401789 	.word	0x00401789

0040187c <aat31xx_disable_backlight>:

/**
 * \brief Switch off backlight.
 */
void aat31xx_disable_backlight(void)
{
  40187c:	b580      	push	{r7, lr}
  40187e:	b082      	sub	sp, #8
  401880:	af00      	add	r7, sp, #0
	volatile uint32_t ul_delay;

	ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);
  401882:	204d      	movs	r0, #77	; 0x4d
  401884:	2100      	movs	r1, #0
  401886:	4b07      	ldr	r3, [pc, #28]	; (4018a4 <aat31xx_disable_backlight+0x28>)
  401888:	4798      	blx	r3

	ul_delay = DELAY_DISABLE;
  40188a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40188e:	607b      	str	r3, [r7, #4]
	while (ul_delay--) {
  401890:	bf00      	nop
  401892:	687b      	ldr	r3, [r7, #4]
  401894:	1e5a      	subs	r2, r3, #1
  401896:	607a      	str	r2, [r7, #4]
  401898:	2b00      	cmp	r3, #0
  40189a:	d1fa      	bne.n	401892 <aat31xx_disable_backlight+0x16>
	}
}
  40189c:	3708      	adds	r7, #8
  40189e:	46bd      	mov	sp, r7
  4018a0:	bd80      	pop	{r7, pc}
  4018a2:	bf00      	nop
  4018a4:	00401789 	.word	0x00401789

004018a8 <LCD_IR>:
#define ILI9325_OTP_PROG_ID_KEY_KEY(value) ((ILI9325_OTP_PROG_ID_KEY_KEY_MSK & ((value) << ILI9325_OTP_PROG_ID_KEY_KEY_POS)))

/* Define EBI access for ILI9325 8-bit System Interface.*/
#if defined(BOARD_ILI9325_ADDR) && defined (BOARD_ILI9325_RS)
	static inline void LCD_IR(uint8_t lcd_index)
	{
  4018a8:	b480      	push	{r7}
  4018aa:	b083      	sub	sp, #12
  4018ac:	af00      	add	r7, sp, #0
  4018ae:	4603      	mov	r3, r0
  4018b0:	71fb      	strb	r3, [r7, #7]
		*((volatile uint8_t *)(BOARD_ILI9325_ADDR)) = lcd_index; /* ILI9325 index register address */
  4018b2:	f04f 42c4 	mov.w	r2, #1644167168	; 0x62000000
  4018b6:	79fb      	ldrb	r3, [r7, #7]
  4018b8:	7013      	strb	r3, [r2, #0]
	}
  4018ba:	370c      	adds	r7, #12
  4018bc:	46bd      	mov	sp, r7
  4018be:	f85d 7b04 	ldr.w	r7, [sp], #4
  4018c2:	4770      	bx	lr

004018c4 <LCD_WD>:
	static inline void LCD_WD(uint8_t lcd_data)
	{
  4018c4:	b480      	push	{r7}
  4018c6:	b083      	sub	sp, #12
  4018c8:	af00      	add	r7, sp, #0
  4018ca:	4603      	mov	r3, r0
  4018cc:	71fb      	strb	r3, [r7, #7]
		*((volatile uint8_t *)((BOARD_ILI9325_ADDR) | (BOARD_ILI9325_RS))) = lcd_data;
  4018ce:	4a04      	ldr	r2, [pc, #16]	; (4018e0 <LCD_WD+0x1c>)
  4018d0:	79fb      	ldrb	r3, [r7, #7]
  4018d2:	7013      	strb	r3, [r2, #0]
	}
  4018d4:	370c      	adds	r7, #12
  4018d6:	46bd      	mov	sp, r7
  4018d8:	f85d 7b04 	ldr.w	r7, [sp], #4
  4018dc:	4770      	bx	lr
  4018de:	bf00      	nop
  4018e0:	62000002 	.word	0x62000002

004018e4 <LCD_RD>:
	static inline uint8_t LCD_RD(void)
	{
  4018e4:	b480      	push	{r7}
  4018e6:	af00      	add	r7, sp, #0
		return *((volatile uint8_t *)((BOARD_ILI9325_ADDR) | (BOARD_ILI9325_RS)));
  4018e8:	4b03      	ldr	r3, [pc, #12]	; (4018f8 <LCD_RD+0x14>)
  4018ea:	781b      	ldrb	r3, [r3, #0]
  4018ec:	b2db      	uxtb	r3, r3
	}
  4018ee:	4618      	mov	r0, r3
  4018f0:	46bd      	mov	sp, r7
  4018f2:	f85d 7b04 	ldr.w	r7, [sp], #4
  4018f6:	4770      	bx	lr
  4018f8:	62000002 	.word	0x62000002

004018fc <ili9325_lcd_get_16>:

/**
 * \brief Read 16 bit data.
 */
static uint16_t ili9325_lcd_get_16(void)
{
  4018fc:	b590      	push	{r4, r7, lr}
  4018fe:	b083      	sub	sp, #12
  401900:	af00      	add	r7, sp, #0
	uint16_t us_value;

	us_value = LCD_RD();
  401902:	4b0a      	ldr	r3, [pc, #40]	; (40192c <ili9325_lcd_get_16+0x30>)
  401904:	4798      	blx	r3
  401906:	4603      	mov	r3, r0
  401908:	80fb      	strh	r3, [r7, #6]
	us_value = (us_value << 8) | LCD_RD();
  40190a:	88fb      	ldrh	r3, [r7, #6]
  40190c:	021b      	lsls	r3, r3, #8
  40190e:	b29c      	uxth	r4, r3
  401910:	4b06      	ldr	r3, [pc, #24]	; (40192c <ili9325_lcd_get_16+0x30>)
  401912:	4798      	blx	r3
  401914:	4603      	mov	r3, r0
  401916:	b29b      	uxth	r3, r3
  401918:	4622      	mov	r2, r4
  40191a:	4313      	orrs	r3, r2
  40191c:	b29b      	uxth	r3, r3
  40191e:	80fb      	strh	r3, [r7, #6]

	return us_value;
  401920:	88fb      	ldrh	r3, [r7, #6]
}
  401922:	4618      	mov	r0, r3
  401924:	370c      	adds	r7, #12
  401926:	46bd      	mov	sp, r7
  401928:	bd90      	pop	{r4, r7, pc}
  40192a:	bf00      	nop
  40192c:	004018e5 	.word	0x004018e5

00401930 <ili9325_write_ram_prepare>:

/**
 * \brief Prepare to write GRAM data.
 */
static void ili9325_write_ram_prepare(void)
{
  401930:	b580      	push	{r7, lr}
  401932:	af00      	add	r7, sp, #0
	LCD_IR(0);
  401934:	2000      	movs	r0, #0
  401936:	4b03      	ldr	r3, [pc, #12]	; (401944 <ili9325_write_ram_prepare+0x14>)
  401938:	4798      	blx	r3
	LCD_IR(ILI9325_GRAM_DATA_REG); /* Write Data to GRAM (R22h) */
  40193a:	2022      	movs	r0, #34	; 0x22
  40193c:	4b01      	ldr	r3, [pc, #4]	; (401944 <ili9325_write_ram_prepare+0x14>)
  40193e:	4798      	blx	r3
}
  401940:	bd80      	pop	{r7, pc}
  401942:	bf00      	nop
  401944:	004018a9 	.word	0x004018a9

00401948 <ili9325_write_ram>:
 * \brief Write data to LCD GRAM.
 *
 * \param ul_color 24-bits RGB color.
 */
static void ili9325_write_ram(ili9325_color_t ul_color)
{
  401948:	b580      	push	{r7, lr}
  40194a:	b082      	sub	sp, #8
  40194c:	af00      	add	r7, sp, #0
  40194e:	6078      	str	r0, [r7, #4]
	LCD_WD((ul_color >> 16) & 0xFF);
  401950:	687b      	ldr	r3, [r7, #4]
  401952:	0c1b      	lsrs	r3, r3, #16
  401954:	b2db      	uxtb	r3, r3
  401956:	4618      	mov	r0, r3
  401958:	4b07      	ldr	r3, [pc, #28]	; (401978 <ili9325_write_ram+0x30>)
  40195a:	4798      	blx	r3
	LCD_WD((ul_color >> 8) & 0xFF);
  40195c:	687b      	ldr	r3, [r7, #4]
  40195e:	0a1b      	lsrs	r3, r3, #8
  401960:	b2db      	uxtb	r3, r3
  401962:	4618      	mov	r0, r3
  401964:	4b04      	ldr	r3, [pc, #16]	; (401978 <ili9325_write_ram+0x30>)
  401966:	4798      	blx	r3
	LCD_WD(ul_color & 0xFF);
  401968:	687b      	ldr	r3, [r7, #4]
  40196a:	b2db      	uxtb	r3, r3
  40196c:	4618      	mov	r0, r3
  40196e:	4b02      	ldr	r3, [pc, #8]	; (401978 <ili9325_write_ram+0x30>)
  401970:	4798      	blx	r3
}
  401972:	3708      	adds	r7, #8
  401974:	46bd      	mov	sp, r7
  401976:	bd80      	pop	{r7, pc}
  401978:	004018c5 	.word	0x004018c5

0040197c <ili9325_write_register>:
 *
 * \param uc_reg register address.
 * \param us_data data to be written.
 */
static void ili9325_write_register(uint8_t uc_reg, uint16_t us_data)
{
  40197c:	b580      	push	{r7, lr}
  40197e:	b082      	sub	sp, #8
  401980:	af00      	add	r7, sp, #0
  401982:	4603      	mov	r3, r0
  401984:	460a      	mov	r2, r1
  401986:	71fb      	strb	r3, [r7, #7]
  401988:	4613      	mov	r3, r2
  40198a:	80bb      	strh	r3, [r7, #4]
	LCD_IR(0);
  40198c:	2000      	movs	r0, #0
  40198e:	4b0a      	ldr	r3, [pc, #40]	; (4019b8 <ili9325_write_register+0x3c>)
  401990:	4798      	blx	r3
	LCD_IR(uc_reg);
  401992:	79fb      	ldrb	r3, [r7, #7]
  401994:	4618      	mov	r0, r3
  401996:	4b08      	ldr	r3, [pc, #32]	; (4019b8 <ili9325_write_register+0x3c>)
  401998:	4798      	blx	r3
	LCD_WD((us_data >> 8) & 0xFF);
  40199a:	88bb      	ldrh	r3, [r7, #4]
  40199c:	0a1b      	lsrs	r3, r3, #8
  40199e:	b29b      	uxth	r3, r3
  4019a0:	b2db      	uxtb	r3, r3
  4019a2:	4618      	mov	r0, r3
  4019a4:	4b05      	ldr	r3, [pc, #20]	; (4019bc <ili9325_write_register+0x40>)
  4019a6:	4798      	blx	r3
	LCD_WD(us_data & 0xFF);
  4019a8:	88bb      	ldrh	r3, [r7, #4]
  4019aa:	b2db      	uxtb	r3, r3
  4019ac:	4618      	mov	r0, r3
  4019ae:	4b03      	ldr	r3, [pc, #12]	; (4019bc <ili9325_write_register+0x40>)
  4019b0:	4798      	blx	r3
}
  4019b2:	3708      	adds	r7, #8
  4019b4:	46bd      	mov	sp, r7
  4019b6:	bd80      	pop	{r7, pc}
  4019b8:	004018a9 	.word	0x004018a9
  4019bc:	004018c5 	.word	0x004018c5

004019c0 <ili9325_read_register>:
 * \param uc_reg register address.
 *
 * \return register value.
 */
static uint16_t ili9325_read_register(uint8_t uc_reg)
{
  4019c0:	b580      	push	{r7, lr}
  4019c2:	b082      	sub	sp, #8
  4019c4:	af00      	add	r7, sp, #0
  4019c6:	4603      	mov	r3, r0
  4019c8:	71fb      	strb	r3, [r7, #7]
	LCD_IR(0);
  4019ca:	2000      	movs	r0, #0
  4019cc:	4b06      	ldr	r3, [pc, #24]	; (4019e8 <ili9325_read_register+0x28>)
  4019ce:	4798      	blx	r3
	LCD_IR(uc_reg);
  4019d0:	79fb      	ldrb	r3, [r7, #7]
  4019d2:	4618      	mov	r0, r3
  4019d4:	4b04      	ldr	r3, [pc, #16]	; (4019e8 <ili9325_read_register+0x28>)
  4019d6:	4798      	blx	r3

	return ili9325_lcd_get_16();
  4019d8:	4b04      	ldr	r3, [pc, #16]	; (4019ec <ili9325_read_register+0x2c>)
  4019da:	4798      	blx	r3
  4019dc:	4603      	mov	r3, r0
}
  4019de:	4618      	mov	r0, r3
  4019e0:	3708      	adds	r7, #8
  4019e2:	46bd      	mov	sp, r7
  4019e4:	bd80      	pop	{r7, pc}
  4019e6:	bf00      	nop
  4019e8:	004018a9 	.word	0x004018a9
  4019ec:	004018fd 	.word	0x004018fd

004019f0 <ili9325_delay>:

/**
 * \brief Delay function.
 */
static void ili9325_delay(uint32_t ul_ms)
{
  4019f0:	b480      	push	{r7}
  4019f2:	b085      	sub	sp, #20
  4019f4:	af00      	add	r7, sp, #0
  4019f6:	6078      	str	r0, [r7, #4]
	volatile uint32_t i;

	for(i = 0; i < ul_ms; i++) {
  4019f8:	2300      	movs	r3, #0
  4019fa:	60fb      	str	r3, [r7, #12]
  4019fc:	e00c      	b.n	401a18 <ili9325_delay+0x28>
		for(i = 0; i < 100000; i++) {
  4019fe:	2300      	movs	r3, #0
  401a00:	60fb      	str	r3, [r7, #12]
  401a02:	e002      	b.n	401a0a <ili9325_delay+0x1a>
  401a04:	68fb      	ldr	r3, [r7, #12]
  401a06:	3301      	adds	r3, #1
  401a08:	60fb      	str	r3, [r7, #12]
  401a0a:	68fb      	ldr	r3, [r7, #12]
  401a0c:	4a07      	ldr	r2, [pc, #28]	; (401a2c <ili9325_delay+0x3c>)
  401a0e:	4293      	cmp	r3, r2
  401a10:	d9f8      	bls.n	401a04 <ili9325_delay+0x14>
 */
static void ili9325_delay(uint32_t ul_ms)
{
	volatile uint32_t i;

	for(i = 0; i < ul_ms; i++) {
  401a12:	68fb      	ldr	r3, [r7, #12]
  401a14:	3301      	adds	r3, #1
  401a16:	60fb      	str	r3, [r7, #12]
  401a18:	68fa      	ldr	r2, [r7, #12]
  401a1a:	687b      	ldr	r3, [r7, #4]
  401a1c:	429a      	cmp	r2, r3
  401a1e:	d3ee      	bcc.n	4019fe <ili9325_delay+0xe>
		for(i = 0; i < 100000; i++) {
		}
	}
}
  401a20:	3714      	adds	r7, #20
  401a22:	46bd      	mov	sp, r7
  401a24:	f85d 7b04 	ldr.w	r7, [sp], #4
  401a28:	4770      	bx	lr
  401a2a:	bf00      	nop
  401a2c:	0001869f 	.word	0x0001869f

00401a30 <ili9325_init>:
 * \param p_opt pointer to ILI9325 option structure.
 *
 * \return 0 if initialization succeeds, otherwise fails.
 */
uint32_t ili9325_init(struct ili9325_opt_t *p_opt)
{
  401a30:	b590      	push	{r4, r7, lr}
  401a32:	b085      	sub	sp, #20
  401a34:	af00      	add	r7, sp, #0
  401a36:	6078      	str	r0, [r7, #4]
	/* Check ILI9325 chipid */
	uint16_t chipid = ili9325_read_register(ILI9325_DEVICE_CODE_REG); /* Driver Code Read (R00h) */
  401a38:	2000      	movs	r0, #0
  401a3a:	4b79      	ldr	r3, [pc, #484]	; (401c20 <ili9325_init+0x1f0>)
  401a3c:	4798      	blx	r3
  401a3e:	4603      	mov	r3, r0
  401a40:	81fb      	strh	r3, [r7, #14]

	if (chipid != ILI9325_DEVICE_CODE) {
  401a42:	89fb      	ldrh	r3, [r7, #14]
  401a44:	f249 3225 	movw	r2, #37669	; 0x9325
  401a48:	4293      	cmp	r3, r2
  401a4a:	d001      	beq.n	401a50 <ili9325_init+0x20>
		return 1;
  401a4c:	2301      	movs	r3, #1
  401a4e:	e0e2      	b.n	401c16 <ili9325_init+0x1e6>
	}

	/* Turn off LCD */
	ili9325_write_register(ILI9325_DISP_CTRL1, ILI9325_DISP_CTRL1_GON |
  401a50:	2007      	movs	r0, #7
  401a52:	2133      	movs	r1, #51	; 0x33
  401a54:	4b73      	ldr	r3, [pc, #460]	; (401c24 <ili9325_init+0x1f4>)
  401a56:	4798      	blx	r3
			ILI9325_DISP_CTRL1_DTE | ILI9325_DISP_CTRL1_D(0x03));

	/* Start initial sequence */
	/* Disable sleep and standby mode*/
	ili9325_write_register(ILI9325_POWER_CTRL1, 0x0000);
  401a58:	2010      	movs	r0, #16
  401a5a:	2100      	movs	r1, #0
  401a5c:	4b71      	ldr	r3, [pc, #452]	; (401c24 <ili9325_init+0x1f4>)
  401a5e:	4798      	blx	r3
	/* Start internal OSC */
	ili9325_write_register(ILI9325_START_OSC_CTRL, ILI9325_START_OSC_CTRL_EN);
  401a60:	2000      	movs	r0, #0
  401a62:	2101      	movs	r1, #1
  401a64:	4b6f      	ldr	r3, [pc, #444]	; (401c24 <ili9325_init+0x1f4>)
  401a66:	4798      	blx	r3
	/* Set SS bit and direction output from S720 to S1 */
	ili9325_write_register(ILI9325_DRIVER_OUTPUT_CTRL1, ILI9325_DRIVER_OUTPUT_CTRL1_SS);
  401a68:	2001      	movs	r0, #1
  401a6a:	f44f 7180 	mov.w	r1, #256	; 0x100
  401a6e:	4b6d      	ldr	r3, [pc, #436]	; (401c24 <ili9325_init+0x1f4>)
  401a70:	4798      	blx	r3
	/* Set 1 line inversion */
	ili9325_write_register(ILI9325_LCD_DRIVING_CTRL, ILI9325_LCD_DRIVING_CTRL_BIT10 |
  401a72:	2002      	movs	r0, #2
  401a74:	f44f 61e0 	mov.w	r1, #1792	; 0x700
  401a78:	4b6a      	ldr	r3, [pc, #424]	; (401c24 <ili9325_init+0x1f4>)
  401a7a:	4798      	blx	r3
			ILI9325_LCD_DRIVING_CTRL_EOR | ILI9325_LCD_DRIVING_CTRL_BC0);
	/* Disable resizing feature */
	ili9325_write_register(ILI9325_RESIZE_CTRL, 0x0000);
  401a7c:	2004      	movs	r0, #4
  401a7e:	2100      	movs	r1, #0
  401a80:	4b68      	ldr	r3, [pc, #416]	; (401c24 <ili9325_init+0x1f4>)
  401a82:	4798      	blx	r3
	/* Set the back porch and front porch */
	ili9325_write_register(ILI9325_DISP_CTRL2, ILI9325_DISP_CTRL2_BP(0x07) |
  401a84:	2008      	movs	r0, #8
  401a86:	f240 2107 	movw	r1, #519	; 0x207
  401a8a:	4b66      	ldr	r3, [pc, #408]	; (401c24 <ili9325_init+0x1f4>)
  401a8c:	4798      	blx	r3
			ILI9325_DISP_CTRL2_FP(0x02));
	/* Set non-display area refresh cycle ISC[3:0] */
	ili9325_write_register(ILI9325_DISP_CTRL3, 0x0000);
  401a8e:	2009      	movs	r0, #9
  401a90:	2100      	movs	r1, #0
  401a92:	4b64      	ldr	r3, [pc, #400]	; (401c24 <ili9325_init+0x1f4>)
  401a94:	4798      	blx	r3
	/* Disable FMARK function */
	ili9325_write_register(ILI9325_DISP_CTRL4, 0x0000);
  401a96:	200a      	movs	r0, #10
  401a98:	2100      	movs	r1, #0
  401a9a:	4b62      	ldr	r3, [pc, #392]	; (401c24 <ili9325_init+0x1f4>)
  401a9c:	4798      	blx	r3
	/* 18-bit RGB interface and writing display data by the system interface */
	ili9325_write_register(ILI9325_RGB_DISP_INTERFACE_CTRL1, 0x0000);
  401a9e:	200c      	movs	r0, #12
  401aa0:	2100      	movs	r1, #0
  401aa2:	4b60      	ldr	r3, [pc, #384]	; (401c24 <ili9325_init+0x1f4>)
  401aa4:	4798      	blx	r3
	/* Set the output position of frame cycle */
	ili9325_write_register(ILI9325_FRAME_MAKER_POS, 0x0000);
  401aa6:	200d      	movs	r0, #13
  401aa8:	2100      	movs	r1, #0
  401aaa:	4b5e      	ldr	r3, [pc, #376]	; (401c24 <ili9325_init+0x1f4>)
  401aac:	4798      	blx	r3
	/* RGB interface polarity */
	ili9325_write_register(ILI9325_RGB_DISP_INTERFACE_CTRL2, 0x0000);
  401aae:	200f      	movs	r0, #15
  401ab0:	2100      	movs	r1, #0
  401ab2:	4b5c      	ldr	r3, [pc, #368]	; (401c24 <ili9325_init+0x1f4>)
  401ab4:	4798      	blx	r3

	/* Power on sequence */
	/* Disable sleep and standby mode */
	ili9325_write_register(ILI9325_POWER_CTRL1, 0x0000);
  401ab6:	2010      	movs	r0, #16
  401ab8:	2100      	movs	r1, #0
  401aba:	4b5a      	ldr	r3, [pc, #360]	; (401c24 <ili9325_init+0x1f4>)
  401abc:	4798      	blx	r3
	/* Selects the operating frequency of the step-up circuit 1,2 and Sets the ratio factor of Vci */
	ili9325_write_register(ILI9325_POWER_CTRL2, 0x0000);
  401abe:	2011      	movs	r0, #17
  401ac0:	2100      	movs	r1, #0
  401ac2:	4b58      	ldr	r3, [pc, #352]	; (401c24 <ili9325_init+0x1f4>)
  401ac4:	4798      	blx	r3
	/* Set VREG1OUT voltage */
	ili9325_write_register(ILI9325_POWER_CTRL3, 0x0000);
  401ac6:	2012      	movs	r0, #18
  401ac8:	2100      	movs	r1, #0
  401aca:	4b56      	ldr	r3, [pc, #344]	; (401c24 <ili9325_init+0x1f4>)
  401acc:	4798      	blx	r3
	/* Set VCOM amplitude */
	ili9325_write_register(ILI9325_POWER_CTRL4, 0x0000);
  401ace:	2013      	movs	r0, #19
  401ad0:	2100      	movs	r1, #0
  401ad2:	4b54      	ldr	r3, [pc, #336]	; (401c24 <ili9325_init+0x1f4>)
  401ad4:	4798      	blx	r3
	ili9325_delay(200);
  401ad6:	20c8      	movs	r0, #200	; 0xc8
  401ad8:	4b53      	ldr	r3, [pc, #332]	; (401c28 <ili9325_init+0x1f8>)
  401ada:	4798      	blx	r3

	/* Enable power supply and source driver */
	/* Adjusts the constant current and Sets the factor used in the step-up circuits.*/
	ili9325_write_register(ILI9325_POWER_CTRL1, ILI9325_POWER_CTRL1_SAP |
  401adc:	2010      	movs	r0, #16
  401ade:	f241 2190 	movw	r1, #4752	; 0x1290
  401ae2:	4b50      	ldr	r3, [pc, #320]	; (401c24 <ili9325_init+0x1f4>)
  401ae4:	4798      	blx	r3
			ILI9325_POWER_CTRL1_BT(0x02) | ILI9325_POWER_CTRL1_APE | ILI9325_POWER_CTRL1_AP(0x01));
	/* Select the operating frequency of the step-up circuit 1,2 and Sets the ratio factor of Vci */
	ili9325_write_register(ILI9325_POWER_CTRL2, ILI9325_POWER_CTRL2_DC1(0x02) |
  401ae6:	2011      	movs	r0, #17
  401ae8:	f240 2127 	movw	r1, #551	; 0x227
  401aec:	4b4d      	ldr	r3, [pc, #308]	; (401c24 <ili9325_init+0x1f4>)
  401aee:	4798      	blx	r3
			ILI9325_POWER_CTRL2_DC0(0x02) | ILI9325_POWER_CTRL2_VC(0x07));
	ili9325_delay(50);
  401af0:	2032      	movs	r0, #50	; 0x32
  401af2:	4b4d      	ldr	r3, [pc, #308]	; (401c28 <ili9325_init+0x1f8>)
  401af4:	4798      	blx	r3
	/* Internal reference voltage= Vci */
	ili9325_write_register(ILI9325_POWER_CTRL3, ILI9325_POWER_CTRL3_PON |
  401af6:	2012      	movs	r0, #18
  401af8:	211b      	movs	r1, #27
  401afa:	4b4a      	ldr	r3, [pc, #296]	; (401c24 <ili9325_init+0x1f4>)
  401afc:	4798      	blx	r3
			ILI9325_POWER_CTRL3_VRH(0x0B));
	ili9325_delay(50);
  401afe:	2032      	movs	r0, #50	; 0x32
  401b00:	4b49      	ldr	r3, [pc, #292]	; (401c28 <ili9325_init+0x1f8>)
  401b02:	4798      	blx	r3
	/* Set VDV[4:0] for VCOM amplitude */
	ili9325_write_register(ILI9325_POWER_CTRL4, ILI9325_POWER_CTRL4_VDV(0x11));
  401b04:	2013      	movs	r0, #19
  401b06:	f44f 5188 	mov.w	r1, #4352	; 0x1100
  401b0a:	4b46      	ldr	r3, [pc, #280]	; (401c24 <ili9325_init+0x1f4>)
  401b0c:	4798      	blx	r3
	/* Set VCM[5:0] for VCOMH */
	ili9325_write_register(ILI9325_POWER_CTRL7, ILI9325_POWER_CTRL7_VCM(0x19));
  401b0e:	2029      	movs	r0, #41	; 0x29
  401b10:	2119      	movs	r1, #25
  401b12:	4b44      	ldr	r3, [pc, #272]	; (401c24 <ili9325_init+0x1f4>)
  401b14:	4798      	blx	r3
	/* Set Frame Rate */
	ili9325_write_register(ILI9325_FRAME_RATE_AND_COLOR_CTRL,
  401b16:	202b      	movs	r0, #43	; 0x2b
  401b18:	210d      	movs	r1, #13
  401b1a:	4b42      	ldr	r3, [pc, #264]	; (401c24 <ili9325_init+0x1f4>)
  401b1c:	4798      	blx	r3
			ILI9325_FRAME_RATE_AND_COLOR_CTRL_FRS(0x0D));
	ili9325_delay(50);
  401b1e:	2032      	movs	r0, #50	; 0x32
  401b20:	4b41      	ldr	r3, [pc, #260]	; (401c28 <ili9325_init+0x1f8>)
  401b22:	4798      	blx	r3

	/* Adjust the Gamma Curve */
	ili9325_write_register(ILI9325_GAMMA_CTRL1, 0x0000);
  401b24:	2030      	movs	r0, #48	; 0x30
  401b26:	2100      	movs	r1, #0
  401b28:	4b3e      	ldr	r3, [pc, #248]	; (401c24 <ili9325_init+0x1f4>)
  401b2a:	4798      	blx	r3
	ili9325_write_register(ILI9325_GAMMA_CTRL2, ILI9325_GAMMA_CTRL2_KP3(0x02) |
  401b2c:	2031      	movs	r0, #49	; 0x31
  401b2e:	f44f 7101 	mov.w	r1, #516	; 0x204
  401b32:	4b3c      	ldr	r3, [pc, #240]	; (401c24 <ili9325_init+0x1f4>)
  401b34:	4798      	blx	r3
			ILI9325_GAMMA_CTRL2_KP2(0x04));
	ili9325_write_register(ILI9325_GAMMA_CTRL3, ILI9325_GAMMA_CTRL3_KP5(0x02) |
  401b36:	2032      	movs	r0, #50	; 0x32
  401b38:	f44f 7100 	mov.w	r1, #512	; 0x200
  401b3c:	4b39      	ldr	r3, [pc, #228]	; (401c24 <ili9325_init+0x1f4>)
  401b3e:	4798      	blx	r3
			ILI9325_GAMMA_CTRL3_KP4(0x00));
	ili9325_write_register(ILI9325_GAMMA_CTRL4, ILI9325_GAMMA_CTRL4_RP1(0x00) |
  401b40:	2035      	movs	r0, #53	; 0x35
  401b42:	2107      	movs	r1, #7
  401b44:	4b37      	ldr	r3, [pc, #220]	; (401c24 <ili9325_init+0x1f4>)
  401b46:	4798      	blx	r3
			ILI9325_GAMMA_CTRL4_RP0(0x07));
	ili9325_write_register(ILI9325_GAMMA_CTRL5, ILI9325_GAMMA_CTRL5_VRP1(0x14) |
  401b48:	2036      	movs	r0, #54	; 0x36
  401b4a:	f241 4104 	movw	r1, #5124	; 0x1404
  401b4e:	4b35      	ldr	r3, [pc, #212]	; (401c24 <ili9325_init+0x1f4>)
  401b50:	4798      	blx	r3
			ILI9325_GAMMA_CTRL5_VRP0(0x04));
	ili9325_write_register(ILI9325_GAMMA_CTRL6, ILI9325_GAMMA_CTRL6_KN1(0x07) |
  401b52:	2037      	movs	r0, #55	; 0x37
  401b54:	f240 7105 	movw	r1, #1797	; 0x705
  401b58:	4b32      	ldr	r3, [pc, #200]	; (401c24 <ili9325_init+0x1f4>)
  401b5a:	4798      	blx	r3
			ILI9325_GAMMA_CTRL6_KN0(0x05));
	ili9325_write_register(ILI9325_GAMMA_CTRL7, ILI9325_GAMMA_CTRL7_KN3(0x03) |
  401b5c:	2038      	movs	r0, #56	; 0x38
  401b5e:	f240 3105 	movw	r1, #773	; 0x305
  401b62:	4b30      	ldr	r3, [pc, #192]	; (401c24 <ili9325_init+0x1f4>)
  401b64:	4798      	blx	r3
			ILI9325_GAMMA_CTRL7_KN2(0x05));
	ili9325_write_register(ILI9325_GAMMA_CTRL8, ILI9325_GAMMA_CTRL8_KN5(0x07) |
  401b66:	2039      	movs	r0, #57	; 0x39
  401b68:	f240 7107 	movw	r1, #1799	; 0x707
  401b6c:	4b2d      	ldr	r3, [pc, #180]	; (401c24 <ili9325_init+0x1f4>)
  401b6e:	4798      	blx	r3
			ILI9325_GAMMA_CTRL8_KN4(0x07));
	ili9325_write_register(ILI9325_GAMMA_CTRL9, ILI9325_GAMMA_CTRL9_RN1(0x07) |
  401b70:	203c      	movs	r0, #60	; 0x3c
  401b72:	f240 7101 	movw	r1, #1793	; 0x701
  401b76:	4b2b      	ldr	r3, [pc, #172]	; (401c24 <ili9325_init+0x1f4>)
  401b78:	4798      	blx	r3
			ILI9325_GAMMA_CTRL9_RN0(0x01));
	ili9325_write_register(ILI9325_GAMMA_CTRL10, ILI9325_GAMMA_CTRL10_VRN1(0x00) |
  401b7a:	203d      	movs	r0, #61	; 0x3d
  401b7c:	210e      	movs	r1, #14
  401b7e:	4b29      	ldr	r3, [pc, #164]	; (401c24 <ili9325_init+0x1f4>)
  401b80:	4798      	blx	r3
			ILI9325_GAMMA_CTRL10_VRN0(0x0E));
	/* Use the high speed write mode (HWM=1) */
	/* When TRI = 1, data are transferred to the internal RAM in 8-bit x 3 transfers mode via the 8-bit interface. */
	/* DFM Set the mode of transferring data to the internal RAM when TRI = 1. */
	/* I/D[1:0] = 11 Horizontal : increment Vertical : increment, AM=0:Horizontal */
	ili9325_write_register(ILI9325_ENTRY_MODE, ILI9325_ENTRY_MODE_TRI |
  401b82:	2003      	movs	r0, #3
  401b84:	f24d 0110 	movw	r1, #53264	; 0xd010
  401b88:	4b26      	ldr	r3, [pc, #152]	; (401c24 <ili9325_init+0x1f4>)
  401b8a:	4798      	blx	r3
			ILI9325_ENTRY_MODE_DFM | ILI9325_ENTRY_MODE_ID(0x01) |ILI9325_ENTRY_MODE_BGR);
	/* Sets the number of lines to drive the LCD at an interval of 8 lines. */
	/* The scan direction is from G320 to G1 */
	ili9325_write_register(ILI9325_DRIVER_OUTPUT_CTRL2, ILI9325_DRIVER_OUTPUT_CTRL2_GS |
  401b8c:	2060      	movs	r0, #96	; 0x60
  401b8e:	f44f 4127 	mov.w	r1, #42752	; 0xa700
  401b92:	4b24      	ldr	r3, [pc, #144]	; (401c24 <ili9325_init+0x1f4>)
  401b94:	4798      	blx	r3
			ILI9325_DRIVER_OUTPUT_CTRL2_NL(0x27));

	/* Vertical Scrolling */
	/* Disable scrolling and enable the grayscale inversion */
	ili9325_write_register(ILI9325_BASE_IMG_DISP_CTRL, ILI9325_BASE_IMG_DISP_CTRL_REV);
  401b96:	2061      	movs	r0, #97	; 0x61
  401b98:	2101      	movs	r1, #1
  401b9a:	4b22      	ldr	r3, [pc, #136]	; (401c24 <ili9325_init+0x1f4>)
  401b9c:	4798      	blx	r3
	ili9325_write_register(ILI9325_VERTICAL_SCROLL_CTRL, 0x0000);
  401b9e:	206a      	movs	r0, #106	; 0x6a
  401ba0:	2100      	movs	r1, #0
  401ba2:	4b20      	ldr	r3, [pc, #128]	; (401c24 <ili9325_init+0x1f4>)
  401ba4:	4798      	blx	r3

	/* Disable Partial Display */
	ili9325_write_register(ILI9325_PARTIAL_IMG1_DISP_POS, 0x0000);
  401ba6:	2080      	movs	r0, #128	; 0x80
  401ba8:	2100      	movs	r1, #0
  401baa:	4b1e      	ldr	r3, [pc, #120]	; (401c24 <ili9325_init+0x1f4>)
  401bac:	4798      	blx	r3
	ili9325_write_register(ILI9325_PARTIAL_IMG1_AREA_START_LINE, 0x0000);
  401bae:	2081      	movs	r0, #129	; 0x81
  401bb0:	2100      	movs	r1, #0
  401bb2:	4b1c      	ldr	r3, [pc, #112]	; (401c24 <ili9325_init+0x1f4>)
  401bb4:	4798      	blx	r3
	ili9325_write_register(ILI9325_PARTIAL_IMG1_AREA_END_LINE, 0x0000);
  401bb6:	2082      	movs	r0, #130	; 0x82
  401bb8:	2100      	movs	r1, #0
  401bba:	4b1a      	ldr	r3, [pc, #104]	; (401c24 <ili9325_init+0x1f4>)
  401bbc:	4798      	blx	r3
	ili9325_write_register(ILI9325_PARTIAL_IMG2_DISP_POS, 0x0000);
  401bbe:	2083      	movs	r0, #131	; 0x83
  401bc0:	2100      	movs	r1, #0
  401bc2:	4b18      	ldr	r3, [pc, #96]	; (401c24 <ili9325_init+0x1f4>)
  401bc4:	4798      	blx	r3
	ili9325_write_register(ILI9325_PARTIAL_IMG2_AREA_START_LINE, 0x0000);
  401bc6:	2084      	movs	r0, #132	; 0x84
  401bc8:	2100      	movs	r1, #0
  401bca:	4b16      	ldr	r3, [pc, #88]	; (401c24 <ili9325_init+0x1f4>)
  401bcc:	4798      	blx	r3
	ili9325_write_register(ILI9325_PARTIAL_IMG2_AREA_END_LINE, 0x0000);
  401bce:	2085      	movs	r0, #133	; 0x85
  401bd0:	2100      	movs	r1, #0
  401bd2:	4b14      	ldr	r3, [pc, #80]	; (401c24 <ili9325_init+0x1f4>)
  401bd4:	4798      	blx	r3

	/* Panel Control */
	ili9325_write_register(ILI9325_PANEL_INTERFACE_CTRL1,
  401bd6:	2090      	movs	r0, #144	; 0x90
  401bd8:	2110      	movs	r1, #16
  401bda:	4b12      	ldr	r3, [pc, #72]	; (401c24 <ili9325_init+0x1f4>)
  401bdc:	4798      	blx	r3
			ILI9325_PANEL_INTERFACE_CTRL1_RTNI(0x10));
	ili9325_write_register(ILI9325_PANEL_INTERFACE_CTRL2,
  401bde:	2092      	movs	r0, #146	; 0x92
  401be0:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  401be4:	4b0f      	ldr	r3, [pc, #60]	; (401c24 <ili9325_init+0x1f4>)
  401be6:	4798      	blx	r3
			ILI9325_PANEL_INTERFACE_CTRL2_NOWI(0x06));
	ili9325_write_register(ILI9325_PANEL_INTERFACE_CTRL4,
  401be8:	2095      	movs	r0, #149	; 0x95
  401bea:	f44f 7188 	mov.w	r1, #272	; 0x110
  401bee:	4b0d      	ldr	r3, [pc, #52]	; (401c24 <ili9325_init+0x1f4>)
  401bf0:	4798      	blx	r3
			ILI9325_PANEL_INTERFACE_CTRL4_DIVE(0x01) |
			ILI9325_PANEL_INTERFACE_CTRL4_RTNE(0x10));

	ili9325_set_window(0, 0,p_opt->ul_width,p_opt->ul_height);
  401bf2:	687b      	ldr	r3, [r7, #4]
  401bf4:	681a      	ldr	r2, [r3, #0]
  401bf6:	687b      	ldr	r3, [r7, #4]
  401bf8:	685b      	ldr	r3, [r3, #4]
  401bfa:	2000      	movs	r0, #0
  401bfc:	2100      	movs	r1, #0
  401bfe:	4c0b      	ldr	r4, [pc, #44]	; (401c2c <ili9325_init+0x1fc>)
  401c00:	47a0      	blx	r4
	ili9325_set_foreground_color(p_opt->foreground_color);
  401c02:	687b      	ldr	r3, [r7, #4]
  401c04:	689b      	ldr	r3, [r3, #8]
  401c06:	4618      	mov	r0, r3
  401c08:	4b09      	ldr	r3, [pc, #36]	; (401c30 <ili9325_init+0x200>)
  401c0a:	4798      	blx	r3
	ili9325_set_cursor_position(0, 0);
  401c0c:	2000      	movs	r0, #0
  401c0e:	2100      	movs	r1, #0
  401c10:	4b08      	ldr	r3, [pc, #32]	; (401c34 <ili9325_init+0x204>)
  401c12:	4798      	blx	r3
	return 0;
  401c14:	2300      	movs	r3, #0
}
  401c16:	4618      	mov	r0, r3
  401c18:	3714      	adds	r7, #20
  401c1a:	46bd      	mov	sp, r7
  401c1c:	bd90      	pop	{r4, r7, pc}
  401c1e:	bf00      	nop
  401c20:	004019c1 	.word	0x004019c1
  401c24:	0040197d 	.word	0x0040197d
  401c28:	004019f1 	.word	0x004019f1
  401c2c:	00401cc1 	.word	0x00401cc1
  401c30:	00401c4d 	.word	0x00401c4d
  401c34:	00401d21 	.word	0x00401d21

00401c38 <ili9325_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili9325_display_on(void)
{
  401c38:	b580      	push	{r7, lr}
  401c3a:	af00      	add	r7, sp, #0
	ili9325_write_register(ILI9325_DISP_CTRL1,
  401c3c:	2007      	movs	r0, #7
  401c3e:	f240 1133 	movw	r1, #307	; 0x133
  401c42:	4b01      	ldr	r3, [pc, #4]	; (401c48 <ili9325_display_on+0x10>)
  401c44:	4798      	blx	r3
			ILI9325_DISP_CTRL1_BASEE |
			ILI9325_DISP_CTRL1_GON |
			ILI9325_DISP_CTRL1_DTE |
			ILI9325_DISP_CTRL1_D(0x03));
}
  401c46:	bd80      	pop	{r7, pc}
  401c48:	0040197d 	.word	0x0040197d

00401c4c <ili9325_set_foreground_color>:
 * \brief Set foreground color.
 *
 * \param ul_color foreground color.
 */
void ili9325_set_foreground_color(ili9325_color_t ul_color)
{
  401c4c:	b480      	push	{r7}
  401c4e:	b085      	sub	sp, #20
  401c50:	af00      	add	r7, sp, #0
  401c52:	6078      	str	r0, [r7, #4]
	uint32_t i;

	/* Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  401c54:	2300      	movs	r3, #0
  401c56:	60fb      	str	r3, [r7, #12]
  401c58:	e007      	b.n	401c6a <ili9325_set_foreground_color+0x1e>
		g_ul_pixel_cache[i] = ul_color;
  401c5a:	4908      	ldr	r1, [pc, #32]	; (401c7c <ili9325_set_foreground_color+0x30>)
  401c5c:	68fb      	ldr	r3, [r7, #12]
  401c5e:	687a      	ldr	r2, [r7, #4]
  401c60:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
void ili9325_set_foreground_color(ili9325_color_t ul_color)
{
	uint32_t i;

	/* Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  401c64:	68fb      	ldr	r3, [r7, #12]
  401c66:	3301      	adds	r3, #1
  401c68:	60fb      	str	r3, [r7, #12]
  401c6a:	68fb      	ldr	r3, [r7, #12]
  401c6c:	2bef      	cmp	r3, #239	; 0xef
  401c6e:	d9f4      	bls.n	401c5a <ili9325_set_foreground_color+0xe>
		g_ul_pixel_cache[i] = ul_color;
	}
}
  401c70:	3714      	adds	r7, #20
  401c72:	46bd      	mov	sp, r7
  401c74:	f85d 7b04 	ldr.w	r7, [sp], #4
  401c78:	4770      	bx	lr
  401c7a:	bf00      	nop
  401c7c:	20001790 	.word	0x20001790

00401c80 <ili9325_fill>:
 * \brief Fill the LCD buffer with the specified color.
 *
 * \param ul_color fill color.
 */
void ili9325_fill(ili9325_color_t ul_color)
{
  401c80:	b580      	push	{r7, lr}
  401c82:	b084      	sub	sp, #16
  401c84:	af00      	add	r7, sp, #0
  401c86:	6078      	str	r0, [r7, #4]
	uint32_t dw;

	ili9325_set_cursor_position(0, 0);
  401c88:	2000      	movs	r0, #0
  401c8a:	2100      	movs	r1, #0
  401c8c:	4b09      	ldr	r3, [pc, #36]	; (401cb4 <ili9325_fill+0x34>)
  401c8e:	4798      	blx	r3
	ili9325_write_ram_prepare();
  401c90:	4b09      	ldr	r3, [pc, #36]	; (401cb8 <ili9325_fill+0x38>)
  401c92:	4798      	blx	r3

	for (dw = ILI9325_LCD_WIDTH * ILI9325_LCD_HEIGHT; dw > 0; dw--) {
  401c94:	f44f 3396 	mov.w	r3, #76800	; 0x12c00
  401c98:	60fb      	str	r3, [r7, #12]
  401c9a:	e005      	b.n	401ca8 <ili9325_fill+0x28>
		ili9325_write_ram(ul_color);
  401c9c:	6878      	ldr	r0, [r7, #4]
  401c9e:	4b07      	ldr	r3, [pc, #28]	; (401cbc <ili9325_fill+0x3c>)
  401ca0:	4798      	blx	r3
	uint32_t dw;

	ili9325_set_cursor_position(0, 0);
	ili9325_write_ram_prepare();

	for (dw = ILI9325_LCD_WIDTH * ILI9325_LCD_HEIGHT; dw > 0; dw--) {
  401ca2:	68fb      	ldr	r3, [r7, #12]
  401ca4:	3b01      	subs	r3, #1
  401ca6:	60fb      	str	r3, [r7, #12]
  401ca8:	68fb      	ldr	r3, [r7, #12]
  401caa:	2b00      	cmp	r3, #0
  401cac:	d1f6      	bne.n	401c9c <ili9325_fill+0x1c>
		ili9325_write_ram(ul_color);
	}
}
  401cae:	3710      	adds	r7, #16
  401cb0:	46bd      	mov	sp, r7
  401cb2:	bd80      	pop	{r7, pc}
  401cb4:	00401d21 	.word	0x00401d21
  401cb8:	00401931 	.word	0x00401931
  401cbc:	00401949 	.word	0x00401949

00401cc0 <ili9325_set_window>:
 * \param ul_width The width of the window.
 * \param ul_height The height of the window.
 */
void ili9325_set_window(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height)
{
  401cc0:	b580      	push	{r7, lr}
  401cc2:	b084      	sub	sp, #16
  401cc4:	af00      	add	r7, sp, #0
  401cc6:	60f8      	str	r0, [r7, #12]
  401cc8:	60b9      	str	r1, [r7, #8]
  401cca:	607a      	str	r2, [r7, #4]
  401ccc:	603b      	str	r3, [r7, #0]
	Assert(ul_y <= 0x13f);
	Assert(ul_width <= (0xF0 - ul_x));
	Assert(ul_height <= (0x140 - ul_y));

	/* Set Horizontal Address Start Position */
	ili9325_write_register(ILI9325_HORIZONTAL_ADDR_START, (uint16_t)ul_x);
  401cce:	68fb      	ldr	r3, [r7, #12]
  401cd0:	b29b      	uxth	r3, r3
  401cd2:	2050      	movs	r0, #80	; 0x50
  401cd4:	4619      	mov	r1, r3
  401cd6:	4b11      	ldr	r3, [pc, #68]	; (401d1c <ili9325_set_window+0x5c>)
  401cd8:	4798      	blx	r3

	/* Set Horizontal Address End Position */
	ili9325_write_register(ILI9325_HORIZONTAL_ADDR_END, (uint16_t)(ul_x + ul_width - 1));
  401cda:	68fb      	ldr	r3, [r7, #12]
  401cdc:	b29a      	uxth	r2, r3
  401cde:	687b      	ldr	r3, [r7, #4]
  401ce0:	b29b      	uxth	r3, r3
  401ce2:	4413      	add	r3, r2
  401ce4:	b29b      	uxth	r3, r3
  401ce6:	3b01      	subs	r3, #1
  401ce8:	b29b      	uxth	r3, r3
  401cea:	2051      	movs	r0, #81	; 0x51
  401cec:	4619      	mov	r1, r3
  401cee:	4b0b      	ldr	r3, [pc, #44]	; (401d1c <ili9325_set_window+0x5c>)
  401cf0:	4798      	blx	r3

	/* Set Vertical Address Start Position */
	ili9325_write_register(ILI9325_VERTICAL_ADDR_START, (uint16_t)ul_y);
  401cf2:	68bb      	ldr	r3, [r7, #8]
  401cf4:	b29b      	uxth	r3, r3
  401cf6:	2052      	movs	r0, #82	; 0x52
  401cf8:	4619      	mov	r1, r3
  401cfa:	4b08      	ldr	r3, [pc, #32]	; (401d1c <ili9325_set_window+0x5c>)
  401cfc:	4798      	blx	r3

	/* Set Vertical Address End Position */
	ili9325_write_register(ILI9325_VERTICAL_ADDR_END, (uint16_t)(ul_y + ul_height - 1));
  401cfe:	68bb      	ldr	r3, [r7, #8]
  401d00:	b29a      	uxth	r2, r3
  401d02:	683b      	ldr	r3, [r7, #0]
  401d04:	b29b      	uxth	r3, r3
  401d06:	4413      	add	r3, r2
  401d08:	b29b      	uxth	r3, r3
  401d0a:	3b01      	subs	r3, #1
  401d0c:	b29b      	uxth	r3, r3
  401d0e:	2053      	movs	r0, #83	; 0x53
  401d10:	4619      	mov	r1, r3
  401d12:	4b02      	ldr	r3, [pc, #8]	; (401d1c <ili9325_set_window+0x5c>)
  401d14:	4798      	blx	r3
}
  401d16:	3710      	adds	r7, #16
  401d18:	46bd      	mov	sp, r7
  401d1a:	bd80      	pop	{r7, pc}
  401d1c:	0040197d 	.word	0x0040197d

00401d20 <ili9325_set_cursor_position>:
 *
 * \param us_x X coordinate of upper-left corner on LCD.
 * \param us_y Y coordinate of upper-left corner on LCD.
 */
void ili9325_set_cursor_position(uint16_t us_x, uint16_t us_y)
{
  401d20:	b580      	push	{r7, lr}
  401d22:	b082      	sub	sp, #8
  401d24:	af00      	add	r7, sp, #0
  401d26:	4603      	mov	r3, r0
  401d28:	460a      	mov	r2, r1
  401d2a:	80fb      	strh	r3, [r7, #6]
  401d2c:	4613      	mov	r3, r2
  401d2e:	80bb      	strh	r3, [r7, #4]
	/* GRAM Horizontal/Vertical Address Set (R20h, R21h) */
	ili9325_write_register(ILI9325_HORIZONTAL_GRAM_ADDR_SET, us_x); /* column */
  401d30:	88fb      	ldrh	r3, [r7, #6]
  401d32:	2020      	movs	r0, #32
  401d34:	4619      	mov	r1, r3
  401d36:	4b05      	ldr	r3, [pc, #20]	; (401d4c <ili9325_set_cursor_position+0x2c>)
  401d38:	4798      	blx	r3
	ili9325_write_register(ILI9325_VERTICAL_GRAM_ADDR_SET, us_y); /* row */
  401d3a:	88bb      	ldrh	r3, [r7, #4]
  401d3c:	2021      	movs	r0, #33	; 0x21
  401d3e:	4619      	mov	r1, r3
  401d40:	4b02      	ldr	r3, [pc, #8]	; (401d4c <ili9325_set_cursor_position+0x2c>)
  401d42:	4798      	blx	r3
}
  401d44:	3708      	adds	r7, #8
  401d46:	46bd      	mov	sp, r7
  401d48:	bd80      	pop	{r7, pc}
  401d4a:	bf00      	nop
  401d4c:	0040197d 	.word	0x0040197d

00401d50 <ili9325_draw_pixel>:
 * \param ul_y Y coordinate of pixel.
 *
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili9325_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
  401d50:	b580      	push	{r7, lr}
  401d52:	b082      	sub	sp, #8
  401d54:	af00      	add	r7, sp, #0
  401d56:	6078      	str	r0, [r7, #4]
  401d58:	6039      	str	r1, [r7, #0]
	if ((ul_x >= ILI9325_LCD_WIDTH) || (ul_y >= ILI9325_LCD_HEIGHT)) {
  401d5a:	687b      	ldr	r3, [r7, #4]
  401d5c:	2bef      	cmp	r3, #239	; 0xef
  401d5e:	d803      	bhi.n	401d68 <ili9325_draw_pixel+0x18>
  401d60:	683b      	ldr	r3, [r7, #0]
  401d62:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
  401d66:	d301      	bcc.n	401d6c <ili9325_draw_pixel+0x1c>
		return 1;
  401d68:	2301      	movs	r3, #1
  401d6a:	e00f      	b.n	401d8c <ili9325_draw_pixel+0x3c>
	}

	/* Set cursor */
	ili9325_set_cursor_position(ul_x, ul_y);
  401d6c:	687b      	ldr	r3, [r7, #4]
  401d6e:	b29a      	uxth	r2, r3
  401d70:	683b      	ldr	r3, [r7, #0]
  401d72:	b29b      	uxth	r3, r3
  401d74:	4610      	mov	r0, r2
  401d76:	4619      	mov	r1, r3
  401d78:	4b06      	ldr	r3, [pc, #24]	; (401d94 <ili9325_draw_pixel+0x44>)
  401d7a:	4798      	blx	r3

	/* Prepare to write in GRAM */
	ili9325_write_ram_prepare();
  401d7c:	4b06      	ldr	r3, [pc, #24]	; (401d98 <ili9325_draw_pixel+0x48>)
  401d7e:	4798      	blx	r3
	ili9325_write_ram(*g_ul_pixel_cache);
  401d80:	4b06      	ldr	r3, [pc, #24]	; (401d9c <ili9325_draw_pixel+0x4c>)
  401d82:	681b      	ldr	r3, [r3, #0]
  401d84:	4618      	mov	r0, r3
  401d86:	4b06      	ldr	r3, [pc, #24]	; (401da0 <ili9325_draw_pixel+0x50>)
  401d88:	4798      	blx	r3
	return 0;
  401d8a:	2300      	movs	r3, #0
}
  401d8c:	4618      	mov	r0, r3
  401d8e:	3708      	adds	r7, #8
  401d90:	46bd      	mov	sp, r7
  401d92:	bd80      	pop	{r7, pc}
  401d94:	00401d21 	.word	0x00401d21
  401d98:	00401931 	.word	0x00401931
  401d9c:	20001790 	.word	0x20001790
  401da0:	00401949 	.word	0x00401949

00401da4 <ili9325_draw_prepare>:
 * \param ul_width The width of the window.
 * \param ul_height The height of the window.
 */
void ili9325_draw_prepare(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height)
{
  401da4:	b590      	push	{r4, r7, lr}
  401da6:	b085      	sub	sp, #20
  401da8:	af00      	add	r7, sp, #0
  401daa:	60f8      	str	r0, [r7, #12]
  401dac:	60b9      	str	r1, [r7, #8]
  401dae:	607a      	str	r2, [r7, #4]
  401db0:	603b      	str	r3, [r7, #0]
	/* Determine the refresh window area */
	ili9325_set_window(ul_x, ul_y, ul_width, ul_height);
  401db2:	68f8      	ldr	r0, [r7, #12]
  401db4:	68b9      	ldr	r1, [r7, #8]
  401db6:	687a      	ldr	r2, [r7, #4]
  401db8:	683b      	ldr	r3, [r7, #0]
  401dba:	4c07      	ldr	r4, [pc, #28]	; (401dd8 <ili9325_draw_prepare+0x34>)
  401dbc:	47a0      	blx	r4

	/* Set cursor */
	ili9325_set_cursor_position(ul_x, ul_y);
  401dbe:	68fb      	ldr	r3, [r7, #12]
  401dc0:	b29a      	uxth	r2, r3
  401dc2:	68bb      	ldr	r3, [r7, #8]
  401dc4:	b29b      	uxth	r3, r3
  401dc6:	4610      	mov	r0, r2
  401dc8:	4619      	mov	r1, r3
  401dca:	4b04      	ldr	r3, [pc, #16]	; (401ddc <ili9325_draw_prepare+0x38>)
  401dcc:	4798      	blx	r3

	/* Prepare to write in GRAM */
	ili9325_write_ram_prepare();
  401dce:	4b04      	ldr	r3, [pc, #16]	; (401de0 <ili9325_draw_prepare+0x3c>)
  401dd0:	4798      	blx	r3
}
  401dd2:	3714      	adds	r7, #20
  401dd4:	46bd      	mov	sp, r7
  401dd6:	bd90      	pop	{r4, r7, pc}
  401dd8:	00401cc1 	.word	0x00401cc1
  401ddc:	00401d21 	.word	0x00401d21
  401de0:	00401931 	.word	0x00401931

00401de4 <ili9325_draw_char>:
 * \param ul_x X coordinate of character upper-left corner.
 * \param ul_y Y coordinate of character upper-left corner.
 * \param uc_c character to print.
 */
static void ili9325_draw_char(uint32_t ul_x, uint32_t ul_y, uint8_t uc_c)
{
  401de4:	b580      	push	{r7, lr}
  401de6:	b08a      	sub	sp, #40	; 0x28
  401de8:	af00      	add	r7, sp, #0
  401dea:	60f8      	str	r0, [r7, #12]
  401dec:	60b9      	str	r1, [r7, #8]
  401dee:	4613      	mov	r3, r2
  401df0:	71fb      	strb	r3, [r7, #7]
	uint32_t row, col;
	uint32_t offset, offset0, offset1;

	/* Compute offset according of the specified ASCII character */
	/* Note: the first 32 characters of the ASCII table are not handled */
	offset = ((uint32_t)uc_c - 0x20) * 20;
  401df2:	79fa      	ldrb	r2, [r7, #7]
  401df4:	4613      	mov	r3, r2
  401df6:	009b      	lsls	r3, r3, #2
  401df8:	4413      	add	r3, r2
  401dfa:	009b      	lsls	r3, r3, #2
  401dfc:	f5a3 7320 	sub.w	r3, r3, #640	; 0x280
  401e00:	61fb      	str	r3, [r7, #28]

	for (col = 0; col < 10; col++) {
  401e02:	2300      	movs	r3, #0
  401e04:	623b      	str	r3, [r7, #32]
  401e06:	e04d      	b.n	401ea4 <ili9325_draw_char+0xc0>
		/* Compute the first and second byte offset of a column */
		offset0 = offset + col * 2;
  401e08:	6a3b      	ldr	r3, [r7, #32]
  401e0a:	005a      	lsls	r2, r3, #1
  401e0c:	69fb      	ldr	r3, [r7, #28]
  401e0e:	4413      	add	r3, r2
  401e10:	61bb      	str	r3, [r7, #24]
		offset1 = offset0 + 1;
  401e12:	69bb      	ldr	r3, [r7, #24]
  401e14:	3301      	adds	r3, #1
  401e16:	617b      	str	r3, [r7, #20]

		/* Draw pixel on screen depending on the corresponding bit value from the charset */
		for (row = 0; row < 8; row++) {
  401e18:	2300      	movs	r3, #0
  401e1a:	627b      	str	r3, [r7, #36]	; 0x24
  401e1c:	e01a      	b.n	401e54 <ili9325_draw_char+0x70>
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
  401e1e:	4a24      	ldr	r2, [pc, #144]	; (401eb0 <ili9325_draw_char+0xcc>)
  401e20:	69bb      	ldr	r3, [r7, #24]
  401e22:	4413      	add	r3, r2
  401e24:	781b      	ldrb	r3, [r3, #0]
  401e26:	461a      	mov	r2, r3
  401e28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e2a:	f1c3 0307 	rsb	r3, r3, #7
  401e2e:	fa42 f303 	asr.w	r3, r2, r3
  401e32:	f003 0301 	and.w	r3, r3, #1
  401e36:	2b00      	cmp	r3, #0
  401e38:	d009      	beq.n	401e4e <ili9325_draw_char+0x6a>
				ili9325_draw_pixel(ul_x + col, ul_y + row);
  401e3a:	68fa      	ldr	r2, [r7, #12]
  401e3c:	6a3b      	ldr	r3, [r7, #32]
  401e3e:	18d1      	adds	r1, r2, r3
  401e40:	68ba      	ldr	r2, [r7, #8]
  401e42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e44:	4413      	add	r3, r2
  401e46:	4608      	mov	r0, r1
  401e48:	4619      	mov	r1, r3
  401e4a:	4b1a      	ldr	r3, [pc, #104]	; (401eb4 <ili9325_draw_char+0xd0>)
  401e4c:	4798      	blx	r3
		/* Compute the first and second byte offset of a column */
		offset0 = offset + col * 2;
		offset1 = offset0 + 1;

		/* Draw pixel on screen depending on the corresponding bit value from the charset */
		for (row = 0; row < 8; row++) {
  401e4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e50:	3301      	adds	r3, #1
  401e52:	627b      	str	r3, [r7, #36]	; 0x24
  401e54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e56:	2b07      	cmp	r3, #7
  401e58:	d9e1      	bls.n	401e1e <ili9325_draw_char+0x3a>
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
				ili9325_draw_pixel(ul_x + col, ul_y + row);
			}
		}

		for (row = 0; row < 6; row++) {
  401e5a:	2300      	movs	r3, #0
  401e5c:	627b      	str	r3, [r7, #36]	; 0x24
  401e5e:	e01b      	b.n	401e98 <ili9325_draw_char+0xb4>
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  401e60:	4a13      	ldr	r2, [pc, #76]	; (401eb0 <ili9325_draw_char+0xcc>)
  401e62:	697b      	ldr	r3, [r7, #20]
  401e64:	4413      	add	r3, r2
  401e66:	781b      	ldrb	r3, [r3, #0]
  401e68:	461a      	mov	r2, r3
  401e6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e6c:	f1c3 0307 	rsb	r3, r3, #7
  401e70:	fa42 f303 	asr.w	r3, r2, r3
  401e74:	f003 0301 	and.w	r3, r3, #1
  401e78:	2b00      	cmp	r3, #0
  401e7a:	d00a      	beq.n	401e92 <ili9325_draw_char+0xae>
				ili9325_draw_pixel(ul_x + col, ul_y + row + 8);
  401e7c:	68fa      	ldr	r2, [r7, #12]
  401e7e:	6a3b      	ldr	r3, [r7, #32]
  401e80:	18d1      	adds	r1, r2, r3
  401e82:	68ba      	ldr	r2, [r7, #8]
  401e84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e86:	4413      	add	r3, r2
  401e88:	3308      	adds	r3, #8
  401e8a:	4608      	mov	r0, r1
  401e8c:	4619      	mov	r1, r3
  401e8e:	4b09      	ldr	r3, [pc, #36]	; (401eb4 <ili9325_draw_char+0xd0>)
  401e90:	4798      	blx	r3
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
				ili9325_draw_pixel(ul_x + col, ul_y + row);
			}
		}

		for (row = 0; row < 6; row++) {
  401e92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e94:	3301      	adds	r3, #1
  401e96:	627b      	str	r3, [r7, #36]	; 0x24
  401e98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e9a:	2b05      	cmp	r3, #5
  401e9c:	d9e0      	bls.n	401e60 <ili9325_draw_char+0x7c>

	/* Compute offset according of the specified ASCII character */
	/* Note: the first 32 characters of the ASCII table are not handled */
	offset = ((uint32_t)uc_c - 0x20) * 20;

	for (col = 0; col < 10; col++) {
  401e9e:	6a3b      	ldr	r3, [r7, #32]
  401ea0:	3301      	adds	r3, #1
  401ea2:	623b      	str	r3, [r7, #32]
  401ea4:	6a3b      	ldr	r3, [r7, #32]
  401ea6:	2b09      	cmp	r3, #9
  401ea8:	d9ae      	bls.n	401e08 <ili9325_draw_char+0x24>
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
				ili9325_draw_pixel(ul_x + col, ul_y + row + 8);
			}
		}
	}
}
  401eaa:	3728      	adds	r7, #40	; 0x28
  401eac:	46bd      	mov	sp, r7
  401eae:	bd80      	pop	{r7, pc}
  401eb0:	0043b3e8 	.word	0x0043b3e8
  401eb4:	00401d51 	.word	0x00401d51

00401eb8 <ili9325_draw_string>:
 * \param ul_x X coordinate of string top-left corner.
 * \param ul_y Y coordinate of string top-left corner.
 * \param p_str String to display.
 */
void ili9325_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
  401eb8:	b580      	push	{r7, lr}
  401eba:	b086      	sub	sp, #24
  401ebc:	af00      	add	r7, sp, #0
  401ebe:	60f8      	str	r0, [r7, #12]
  401ec0:	60b9      	str	r1, [r7, #8]
  401ec2:	607a      	str	r2, [r7, #4]
	uint32_t xorg = ul_x;
  401ec4:	68fb      	ldr	r3, [r7, #12]
  401ec6:	617b      	str	r3, [r7, #20]

	while (*p_str != 0) {
  401ec8:	e01c      	b.n	401f04 <ili9325_draw_string+0x4c>
		/* If newline, jump to the next line (font height + 2) */
		if (*p_str == '\n') {
  401eca:	687b      	ldr	r3, [r7, #4]
  401ecc:	781b      	ldrb	r3, [r3, #0]
  401ece:	2b0a      	cmp	r3, #10
  401ed0:	d108      	bne.n	401ee4 <ili9325_draw_string+0x2c>
			ul_y += gfont.height + 2;
  401ed2:	230e      	movs	r3, #14
  401ed4:	461a      	mov	r2, r3
  401ed6:	68bb      	ldr	r3, [r7, #8]
  401ed8:	4413      	add	r3, r2
  401eda:	3302      	adds	r3, #2
  401edc:	60bb      	str	r3, [r7, #8]
			ul_x = xorg;
  401ede:	697b      	ldr	r3, [r7, #20]
  401ee0:	60fb      	str	r3, [r7, #12]
  401ee2:	e00c      	b.n	401efe <ili9325_draw_string+0x46>
		} else {
			/* Draw the character and place cursor right after (font width + 2) */
			ili9325_draw_char(ul_x, ul_y, *p_str);
  401ee4:	687b      	ldr	r3, [r7, #4]
  401ee6:	781b      	ldrb	r3, [r3, #0]
  401ee8:	68f8      	ldr	r0, [r7, #12]
  401eea:	68b9      	ldr	r1, [r7, #8]
  401eec:	461a      	mov	r2, r3
  401eee:	4b09      	ldr	r3, [pc, #36]	; (401f14 <ili9325_draw_string+0x5c>)
  401ef0:	4798      	blx	r3
			ul_x += gfont.width + 2;
  401ef2:	230a      	movs	r3, #10
  401ef4:	461a      	mov	r2, r3
  401ef6:	68fb      	ldr	r3, [r7, #12]
  401ef8:	4413      	add	r3, r2
  401efa:	3302      	adds	r3, #2
  401efc:	60fb      	str	r3, [r7, #12]
		}
		p_str++;
  401efe:	687b      	ldr	r3, [r7, #4]
  401f00:	3301      	adds	r3, #1
  401f02:	607b      	str	r3, [r7, #4]
 */
void ili9325_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  401f04:	687b      	ldr	r3, [r7, #4]
  401f06:	781b      	ldrb	r3, [r3, #0]
  401f08:	2b00      	cmp	r3, #0
  401f0a:	d1de      	bne.n	401eca <ili9325_draw_string+0x12>
			ili9325_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
		}
		p_str++;
	}
}
  401f0c:	3718      	adds	r7, #24
  401f0e:	46bd      	mov	sp, r7
  401f10:	bd80      	pop	{r7, pc}
  401f12:	bf00      	nop
  401f14:	00401de5 	.word	0x00401de5

00401f18 <smc_set_setup_timing>:
 * \param ul_cs Chip Select number to be set.
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
  401f18:	b480      	push	{r7}
  401f1a:	b085      	sub	sp, #20
  401f1c:	af00      	add	r7, sp, #0
  401f1e:	60f8      	str	r0, [r7, #12]
  401f20:	60b9      	str	r1, [r7, #8]
  401f22:	607a      	str	r2, [r7, #4]
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
  401f24:	68fa      	ldr	r2, [r7, #12]
  401f26:	68bb      	ldr	r3, [r7, #8]
  401f28:	011b      	lsls	r3, r3, #4
  401f2a:	4413      	add	r3, r2
  401f2c:	687a      	ldr	r2, [r7, #4]
  401f2e:	601a      	str	r2, [r3, #0]
}
  401f30:	3714      	adds	r7, #20
  401f32:	46bd      	mov	sp, r7
  401f34:	f85d 7b04 	ldr.w	r7, [sp], #4
  401f38:	4770      	bx	lr
  401f3a:	bf00      	nop

00401f3c <smc_set_pulse_timing>:
 * \param ul_cs Chip Select number to be set.
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
  401f3c:	b480      	push	{r7}
  401f3e:	b085      	sub	sp, #20
  401f40:	af00      	add	r7, sp, #0
  401f42:	60f8      	str	r0, [r7, #12]
  401f44:	60b9      	str	r1, [r7, #8]
  401f46:	607a      	str	r2, [r7, #4]
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
  401f48:	68fa      	ldr	r2, [r7, #12]
  401f4a:	68bb      	ldr	r3, [r7, #8]
  401f4c:	011b      	lsls	r3, r3, #4
  401f4e:	4413      	add	r3, r2
  401f50:	687a      	ldr	r2, [r7, #4]
  401f52:	605a      	str	r2, [r3, #4]
}
  401f54:	3714      	adds	r7, #20
  401f56:	46bd      	mov	sp, r7
  401f58:	f85d 7b04 	ldr.w	r7, [sp], #4
  401f5c:	4770      	bx	lr
  401f5e:	bf00      	nop

00401f60 <smc_set_cycle_timing>:
 * \param ul_cs Chip Select number to be set.
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
  401f60:	b480      	push	{r7}
  401f62:	b085      	sub	sp, #20
  401f64:	af00      	add	r7, sp, #0
  401f66:	60f8      	str	r0, [r7, #12]
  401f68:	60b9      	str	r1, [r7, #8]
  401f6a:	607a      	str	r2, [r7, #4]
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
  401f6c:	68fa      	ldr	r2, [r7, #12]
  401f6e:	68bb      	ldr	r3, [r7, #8]
  401f70:	011b      	lsls	r3, r3, #4
  401f72:	4413      	add	r3, r2
  401f74:	3308      	adds	r3, #8
  401f76:	687a      	ldr	r2, [r7, #4]
  401f78:	601a      	str	r2, [r3, #0]
}
  401f7a:	3714      	adds	r7, #20
  401f7c:	46bd      	mov	sp, r7
  401f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
  401f82:	4770      	bx	lr

00401f84 <smc_set_mode>:
 * \param p_smc Pointer to an SMC instance.
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
  401f84:	b480      	push	{r7}
  401f86:	b085      	sub	sp, #20
  401f88:	af00      	add	r7, sp, #0
  401f8a:	60f8      	str	r0, [r7, #12]
  401f8c:	60b9      	str	r1, [r7, #8]
  401f8e:	607a      	str	r2, [r7, #4]
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
  401f90:	68fa      	ldr	r2, [r7, #12]
  401f92:	68bb      	ldr	r3, [r7, #8]
  401f94:	011b      	lsls	r3, r3, #4
  401f96:	4413      	add	r3, r2
  401f98:	3308      	adds	r3, #8
  401f9a:	687a      	ldr	r2, [r7, #4]
  401f9c:	605a      	str	r2, [r3, #4]
}
  401f9e:	3714      	adds	r7, #20
  401fa0:	46bd      	mov	sp, r7
  401fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
  401fa6:	4770      	bx	lr

00401fa8 <pio_pull_up>:
 * \param ul_pull_up_enable Indicates if the pin(s) internal pull-up shall be
 * configured.
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
  401fa8:	b480      	push	{r7}
  401faa:	b085      	sub	sp, #20
  401fac:	af00      	add	r7, sp, #0
  401fae:	60f8      	str	r0, [r7, #12]
  401fb0:	60b9      	str	r1, [r7, #8]
  401fb2:	607a      	str	r2, [r7, #4]
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  401fb4:	687b      	ldr	r3, [r7, #4]
  401fb6:	2b00      	cmp	r3, #0
  401fb8:	d003      	beq.n	401fc2 <pio_pull_up+0x1a>
		p_pio->PIO_PUER = ul_mask;
  401fba:	68fb      	ldr	r3, [r7, #12]
  401fbc:	68ba      	ldr	r2, [r7, #8]
  401fbe:	665a      	str	r2, [r3, #100]	; 0x64
  401fc0:	e002      	b.n	401fc8 <pio_pull_up+0x20>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  401fc2:	68fb      	ldr	r3, [r7, #12]
  401fc4:	68ba      	ldr	r2, [r7, #8]
  401fc6:	661a      	str	r2, [r3, #96]	; 0x60
	}
}
  401fc8:	3714      	adds	r7, #20
  401fca:	46bd      	mov	sp, r7
  401fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
  401fd0:	4770      	bx	lr
  401fd2:	bf00      	nop

00401fd4 <pio_set_debounce_filter>:
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 * \param ul_cut_off Cuts off frequency for debouncing filter.
 */
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
  401fd4:	b480      	push	{r7}
  401fd6:	b085      	sub	sp, #20
  401fd8:	af00      	add	r7, sp, #0
  401fda:	60f8      	str	r0, [r7, #12]
  401fdc:	60b9      	str	r1, [r7, #8]
  401fde:	607a      	str	r2, [r7, #4]
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  401fe0:	68fb      	ldr	r3, [r7, #12]
  401fe2:	68ba      	ldr	r2, [r7, #8]
  401fe4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  401fe8:	687b      	ldr	r3, [r7, #4]
  401fea:	005b      	lsls	r3, r3, #1
  401fec:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401ff0:	fbb2 f3f3 	udiv	r3, r2, r3
  401ff4:	3b01      	subs	r3, #1
  401ff6:	f3c3 020d 	ubfx	r2, r3, #0, #14
  401ffa:	68fb      	ldr	r3, [r7, #12]
  401ffc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			(2 * (ul_cut_off))) - 1);
}
  402000:	3714      	adds	r7, #20
  402002:	46bd      	mov	sp, r7
  402004:	f85d 7b04 	ldr.w	r7, [sp], #4
  402008:	4770      	bx	lr
  40200a:	bf00      	nop

0040200c <pio_set>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
  40200c:	b480      	push	{r7}
  40200e:	b083      	sub	sp, #12
  402010:	af00      	add	r7, sp, #0
  402012:	6078      	str	r0, [r7, #4]
  402014:	6039      	str	r1, [r7, #0]
	p_pio->PIO_SODR = ul_mask;
  402016:	687b      	ldr	r3, [r7, #4]
  402018:	683a      	ldr	r2, [r7, #0]
  40201a:	631a      	str	r2, [r3, #48]	; 0x30
}
  40201c:	370c      	adds	r7, #12
  40201e:	46bd      	mov	sp, r7
  402020:	f85d 7b04 	ldr.w	r7, [sp], #4
  402024:	4770      	bx	lr
  402026:	bf00      	nop

00402028 <pio_clear>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
  402028:	b480      	push	{r7}
  40202a:	b083      	sub	sp, #12
  40202c:	af00      	add	r7, sp, #0
  40202e:	6078      	str	r0, [r7, #4]
  402030:	6039      	str	r1, [r7, #0]
	p_pio->PIO_CODR = ul_mask;
  402032:	687b      	ldr	r3, [r7, #4]
  402034:	683a      	ldr	r2, [r7, #0]
  402036:	635a      	str	r2, [r3, #52]	; 0x34
}
  402038:	370c      	adds	r7, #12
  40203a:	46bd      	mov	sp, r7
  40203c:	f85d 7b04 	ldr.w	r7, [sp], #4
  402040:	4770      	bx	lr
  402042:	bf00      	nop

00402044 <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  402044:	b480      	push	{r7}
  402046:	b087      	sub	sp, #28
  402048:	af00      	add	r7, sp, #0
  40204a:	60f8      	str	r0, [r7, #12]
  40204c:	60b9      	str	r1, [r7, #8]
  40204e:	607a      	str	r2, [r7, #4]
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  402050:	68fb      	ldr	r3, [r7, #12]
  402052:	687a      	ldr	r2, [r7, #4]
  402054:	645a      	str	r2, [r3, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  402056:	68bb      	ldr	r3, [r7, #8]
  402058:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  40205c:	d04a      	beq.n	4020f4 <pio_set_peripheral+0xb0>
  40205e:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  402062:	d808      	bhi.n	402076 <pio_set_peripheral+0x32>
  402064:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  402068:	d016      	beq.n	402098 <pio_set_peripheral+0x54>
  40206a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  40206e:	d02c      	beq.n	4020ca <pio_set_peripheral+0x86>
  402070:	2b00      	cmp	r3, #0
  402072:	d069      	beq.n	402148 <pio_set_peripheral+0x104>
  402074:	e064      	b.n	402140 <pio_set_peripheral+0xfc>
  402076:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  40207a:	d065      	beq.n	402148 <pio_set_peripheral+0x104>
  40207c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  402080:	d803      	bhi.n	40208a <pio_set_peripheral+0x46>
  402082:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  402086:	d04a      	beq.n	40211e <pio_set_peripheral+0xda>
  402088:	e05a      	b.n	402140 <pio_set_peripheral+0xfc>
  40208a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  40208e:	d05b      	beq.n	402148 <pio_set_peripheral+0x104>
  402090:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  402094:	d058      	beq.n	402148 <pio_set_peripheral+0x104>
  402096:	e053      	b.n	402140 <pio_set_peripheral+0xfc>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  402098:	68fb      	ldr	r3, [r7, #12]
  40209a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  40209c:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40209e:	68fb      	ldr	r3, [r7, #12]
  4020a0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4020a2:	687b      	ldr	r3, [r7, #4]
  4020a4:	43d9      	mvns	r1, r3
  4020a6:	697b      	ldr	r3, [r7, #20]
  4020a8:	400b      	ands	r3, r1
  4020aa:	401a      	ands	r2, r3
  4020ac:	68fb      	ldr	r3, [r7, #12]
  4020ae:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4020b0:	68fb      	ldr	r3, [r7, #12]
  4020b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  4020b4:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4020b6:	68fb      	ldr	r3, [r7, #12]
  4020b8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4020ba:	687b      	ldr	r3, [r7, #4]
  4020bc:	43d9      	mvns	r1, r3
  4020be:	697b      	ldr	r3, [r7, #20]
  4020c0:	400b      	ands	r3, r1
  4020c2:	401a      	ands	r2, r3
  4020c4:	68fb      	ldr	r3, [r7, #12]
  4020c6:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  4020c8:	e03a      	b.n	402140 <pio_set_peripheral+0xfc>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4020ca:	68fb      	ldr	r3, [r7, #12]
  4020cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  4020ce:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4020d0:	687a      	ldr	r2, [r7, #4]
  4020d2:	697b      	ldr	r3, [r7, #20]
  4020d4:	431a      	orrs	r2, r3
  4020d6:	68fb      	ldr	r3, [r7, #12]
  4020d8:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4020da:	68fb      	ldr	r3, [r7, #12]
  4020dc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  4020de:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4020e0:	68fb      	ldr	r3, [r7, #12]
  4020e2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4020e4:	687b      	ldr	r3, [r7, #4]
  4020e6:	43d9      	mvns	r1, r3
  4020e8:	697b      	ldr	r3, [r7, #20]
  4020ea:	400b      	ands	r3, r1
  4020ec:	401a      	ands	r2, r3
  4020ee:	68fb      	ldr	r3, [r7, #12]
  4020f0:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  4020f2:	e025      	b.n	402140 <pio_set_peripheral+0xfc>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4020f4:	68fb      	ldr	r3, [r7, #12]
  4020f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  4020f8:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4020fa:	68fb      	ldr	r3, [r7, #12]
  4020fc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4020fe:	687b      	ldr	r3, [r7, #4]
  402100:	43d9      	mvns	r1, r3
  402102:	697b      	ldr	r3, [r7, #20]
  402104:	400b      	ands	r3, r1
  402106:	401a      	ands	r2, r3
  402108:	68fb      	ldr	r3, [r7, #12]
  40210a:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40210c:	68fb      	ldr	r3, [r7, #12]
  40210e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  402110:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  402112:	687a      	ldr	r2, [r7, #4]
  402114:	697b      	ldr	r3, [r7, #20]
  402116:	431a      	orrs	r2, r3
  402118:	68fb      	ldr	r3, [r7, #12]
  40211a:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  40211c:	e010      	b.n	402140 <pio_set_peripheral+0xfc>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  40211e:	68fb      	ldr	r3, [r7, #12]
  402120:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  402122:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  402124:	687a      	ldr	r2, [r7, #4]
  402126:	697b      	ldr	r3, [r7, #20]
  402128:	431a      	orrs	r2, r3
  40212a:	68fb      	ldr	r3, [r7, #12]
  40212c:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40212e:	68fb      	ldr	r3, [r7, #12]
  402130:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  402132:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  402134:	687a      	ldr	r2, [r7, #4]
  402136:	697b      	ldr	r3, [r7, #20]
  402138:	431a      	orrs	r2, r3
  40213a:	68fb      	ldr	r3, [r7, #12]
  40213c:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  40213e:	bf00      	nop
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  402140:	68fb      	ldr	r3, [r7, #12]
  402142:	687a      	ldr	r2, [r7, #4]
  402144:	605a      	str	r2, [r3, #4]
  402146:	e000      	b.n	40214a <pio_set_peripheral+0x106>
		/* Other types are invalid in this function */
	case PIO_INPUT:
	case PIO_OUTPUT_0:
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
  402148:	bf00      	nop
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
}
  40214a:	371c      	adds	r7, #28
  40214c:	46bd      	mov	sp, r7
  40214e:	f85d 7b04 	ldr.w	r7, [sp], #4
  402152:	4770      	bx	lr

00402154 <pio_set_input>:
 * \param ul_mask Bitmask indicating which pin(s) to configure as input(s).
 * \param ul_attribute PIO attribute(s).
 */
void pio_set_input(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attribute)
{
  402154:	b580      	push	{r7, lr}
  402156:	b084      	sub	sp, #16
  402158:	af00      	add	r7, sp, #0
  40215a:	60f8      	str	r0, [r7, #12]
  40215c:	60b9      	str	r1, [r7, #8]
  40215e:	607a      	str	r2, [r7, #4]
	pio_disable_interrupt(p_pio, ul_mask);
  402160:	68f8      	ldr	r0, [r7, #12]
  402162:	68b9      	ldr	r1, [r7, #8]
  402164:	4b18      	ldr	r3, [pc, #96]	; (4021c8 <pio_set_input+0x74>)
  402166:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);
  402168:	687b      	ldr	r3, [r7, #4]
  40216a:	f003 0301 	and.w	r3, r3, #1
  40216e:	68f8      	ldr	r0, [r7, #12]
  402170:	68b9      	ldr	r1, [r7, #8]
  402172:	461a      	mov	r2, r3
  402174:	4b15      	ldr	r3, [pc, #84]	; (4021cc <pio_set_input+0x78>)
  402176:	4798      	blx	r3

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  402178:	687b      	ldr	r3, [r7, #4]
  40217a:	f003 030a 	and.w	r3, r3, #10
  40217e:	2b00      	cmp	r3, #0
  402180:	d003      	beq.n	40218a <pio_set_input+0x36>
		p_pio->PIO_IFER = ul_mask;
  402182:	68fb      	ldr	r3, [r7, #12]
  402184:	68ba      	ldr	r2, [r7, #8]
  402186:	621a      	str	r2, [r3, #32]
  402188:	e002      	b.n	402190 <pio_set_input+0x3c>
	} else {
		p_pio->PIO_IFDR = ul_mask;
  40218a:	68fb      	ldr	r3, [r7, #12]
  40218c:	68ba      	ldr	r2, [r7, #8]
  40218e:	625a      	str	r2, [r3, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  402190:	687b      	ldr	r3, [r7, #4]
  402192:	f003 0302 	and.w	r3, r3, #2
  402196:	2b00      	cmp	r3, #0
  402198:	d004      	beq.n	4021a4 <pio_set_input+0x50>
		p_pio->PIO_IFSCDR = ul_mask;
  40219a:	68fb      	ldr	r3, [r7, #12]
  40219c:	68ba      	ldr	r2, [r7, #8]
  40219e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  4021a2:	e008      	b.n	4021b6 <pio_set_input+0x62>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  4021a4:	687b      	ldr	r3, [r7, #4]
  4021a6:	f003 0308 	and.w	r3, r3, #8
  4021aa:	2b00      	cmp	r3, #0
  4021ac:	d003      	beq.n	4021b6 <pio_set_input+0x62>
			p_pio->PIO_IFSCER = ul_mask;
  4021ae:	68fb      	ldr	r3, [r7, #12]
  4021b0:	68ba      	ldr	r2, [r7, #8]
  4021b2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  4021b6:	68fb      	ldr	r3, [r7, #12]
  4021b8:	68ba      	ldr	r2, [r7, #8]
  4021ba:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
  4021bc:	68fb      	ldr	r3, [r7, #12]
  4021be:	68ba      	ldr	r2, [r7, #8]
  4021c0:	601a      	str	r2, [r3, #0]
}
  4021c2:	3710      	adds	r7, #16
  4021c4:	46bd      	mov	sp, r7
  4021c6:	bd80      	pop	{r7, pc}
  4021c8:	004022c1 	.word	0x004022c1
  4021cc:	00401fa9 	.word	0x00401fa9

004021d0 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  4021d0:	b580      	push	{r7, lr}
  4021d2:	b084      	sub	sp, #16
  4021d4:	af00      	add	r7, sp, #0
  4021d6:	60f8      	str	r0, [r7, #12]
  4021d8:	60b9      	str	r1, [r7, #8]
  4021da:	607a      	str	r2, [r7, #4]
  4021dc:	603b      	str	r3, [r7, #0]
	pio_disable_interrupt(p_pio, ul_mask);
  4021de:	68f8      	ldr	r0, [r7, #12]
  4021e0:	68b9      	ldr	r1, [r7, #8]
  4021e2:	4b12      	ldr	r3, [pc, #72]	; (40222c <pio_set_output+0x5c>)
  4021e4:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);
  4021e6:	68f8      	ldr	r0, [r7, #12]
  4021e8:	68b9      	ldr	r1, [r7, #8]
  4021ea:	69ba      	ldr	r2, [r7, #24]
  4021ec:	4b10      	ldr	r3, [pc, #64]	; (402230 <pio_set_output+0x60>)
  4021ee:	4798      	blx	r3

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  4021f0:	683b      	ldr	r3, [r7, #0]
  4021f2:	2b00      	cmp	r3, #0
  4021f4:	d003      	beq.n	4021fe <pio_set_output+0x2e>
		p_pio->PIO_MDER = ul_mask;
  4021f6:	68fb      	ldr	r3, [r7, #12]
  4021f8:	68ba      	ldr	r2, [r7, #8]
  4021fa:	651a      	str	r2, [r3, #80]	; 0x50
  4021fc:	e002      	b.n	402204 <pio_set_output+0x34>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  4021fe:	68fb      	ldr	r3, [r7, #12]
  402200:	68ba      	ldr	r2, [r7, #8]
  402202:	655a      	str	r2, [r3, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  402204:	687b      	ldr	r3, [r7, #4]
  402206:	2b00      	cmp	r3, #0
  402208:	d003      	beq.n	402212 <pio_set_output+0x42>
		p_pio->PIO_SODR = ul_mask;
  40220a:	68fb      	ldr	r3, [r7, #12]
  40220c:	68ba      	ldr	r2, [r7, #8]
  40220e:	631a      	str	r2, [r3, #48]	; 0x30
  402210:	e002      	b.n	402218 <pio_set_output+0x48>
	} else {
		p_pio->PIO_CODR = ul_mask;
  402212:	68fb      	ldr	r3, [r7, #12]
  402214:	68ba      	ldr	r2, [r7, #8]
  402216:	635a      	str	r2, [r3, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  402218:	68fb      	ldr	r3, [r7, #12]
  40221a:	68ba      	ldr	r2, [r7, #8]
  40221c:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
  40221e:	68fb      	ldr	r3, [r7, #12]
  402220:	68ba      	ldr	r2, [r7, #8]
  402222:	601a      	str	r2, [r3, #0]
}
  402224:	3710      	adds	r7, #16
  402226:	46bd      	mov	sp, r7
  402228:	bd80      	pop	{r7, pc}
  40222a:	bf00      	nop
  40222c:	004022c1 	.word	0x004022c1
  402230:	00401fa9 	.word	0x00401fa9

00402234 <pio_configure_interrupt>:
 * \param ul_mask Interrupt source bit map.
 * \param ul_attr Interrupt source attributes.
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
  402234:	b480      	push	{r7}
  402236:	b085      	sub	sp, #20
  402238:	af00      	add	r7, sp, #0
  40223a:	60f8      	str	r0, [r7, #12]
  40223c:	60b9      	str	r1, [r7, #8]
  40223e:	607a      	str	r2, [r7, #4]
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
  402240:	687b      	ldr	r3, [r7, #4]
  402242:	f003 0310 	and.w	r3, r3, #16
  402246:	2b00      	cmp	r3, #0
  402248:	d020      	beq.n	40228c <pio_configure_interrupt+0x58>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
  40224a:	68fb      	ldr	r3, [r7, #12]
  40224c:	68ba      	ldr	r2, [r7, #8]
  40224e:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
  402252:	687b      	ldr	r3, [r7, #4]
  402254:	f003 0320 	and.w	r3, r3, #32
  402258:	2b00      	cmp	r3, #0
  40225a:	d004      	beq.n	402266 <pio_configure_interrupt+0x32>
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
  40225c:	68fb      	ldr	r3, [r7, #12]
  40225e:	68ba      	ldr	r2, [r7, #8]
  402260:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
  402264:	e003      	b.n	40226e <pio_configure_interrupt+0x3a>
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
  402266:	68fb      	ldr	r3, [r7, #12]
  402268:	68ba      	ldr	r2, [r7, #8]
  40226a:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
  40226e:	687b      	ldr	r3, [r7, #4]
  402270:	f003 0340 	and.w	r3, r3, #64	; 0x40
  402274:	2b00      	cmp	r3, #0
  402276:	d004      	beq.n	402282 <pio_configure_interrupt+0x4e>
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
  402278:	68fb      	ldr	r3, [r7, #12]
  40227a:	68ba      	ldr	r2, [r7, #8]
  40227c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
  402280:	e008      	b.n	402294 <pio_configure_interrupt+0x60>
		} else {
			/* Level select */
			p_pio->PIO_LSR = ul_mask;
  402282:	68fb      	ldr	r3, [r7, #12]
  402284:	68ba      	ldr	r2, [r7, #8]
  402286:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  40228a:	e003      	b.n	402294 <pio_configure_interrupt+0x60>
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
  40228c:	68fb      	ldr	r3, [r7, #12]
  40228e:	68ba      	ldr	r2, [r7, #8]
  402290:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
	}
}
  402294:	3714      	adds	r7, #20
  402296:	46bd      	mov	sp, r7
  402298:	f85d 7b04 	ldr.w	r7, [sp], #4
  40229c:	4770      	bx	lr
  40229e:	bf00      	nop

004022a0 <pio_enable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  4022a0:	b480      	push	{r7}
  4022a2:	b083      	sub	sp, #12
  4022a4:	af00      	add	r7, sp, #0
  4022a6:	6078      	str	r0, [r7, #4]
  4022a8:	6039      	str	r1, [r7, #0]
	p_pio->PIO_ISR;
  4022aa:	687b      	ldr	r3, [r7, #4]
  4022ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
	p_pio->PIO_IER = ul_mask;
  4022ae:	687b      	ldr	r3, [r7, #4]
  4022b0:	683a      	ldr	r2, [r7, #0]
  4022b2:	641a      	str	r2, [r3, #64]	; 0x40
}
  4022b4:	370c      	adds	r7, #12
  4022b6:	46bd      	mov	sp, r7
  4022b8:	f85d 7b04 	ldr.w	r7, [sp], #4
  4022bc:	4770      	bx	lr
  4022be:	bf00      	nop

004022c0 <pio_disable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  4022c0:	b480      	push	{r7}
  4022c2:	b083      	sub	sp, #12
  4022c4:	af00      	add	r7, sp, #0
  4022c6:	6078      	str	r0, [r7, #4]
  4022c8:	6039      	str	r1, [r7, #0]
	p_pio->PIO_IDR = ul_mask;
  4022ca:	687b      	ldr	r3, [r7, #4]
  4022cc:	683a      	ldr	r2, [r7, #0]
  4022ce:	645a      	str	r2, [r3, #68]	; 0x44
}
  4022d0:	370c      	adds	r7, #12
  4022d2:	46bd      	mov	sp, r7
  4022d4:	f85d 7b04 	ldr.w	r7, [sp], #4
  4022d8:	4770      	bx	lr
  4022da:	bf00      	nop

004022dc <pio_get_interrupt_status>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
  4022dc:	b480      	push	{r7}
  4022de:	b083      	sub	sp, #12
  4022e0:	af00      	add	r7, sp, #0
  4022e2:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_ISR;
  4022e4:	687b      	ldr	r3, [r7, #4]
  4022e6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
  4022e8:	4618      	mov	r0, r3
  4022ea:	370c      	adds	r7, #12
  4022ec:	46bd      	mov	sp, r7
  4022ee:	f85d 7b04 	ldr.w	r7, [sp], #4
  4022f2:	4770      	bx	lr

004022f4 <pio_get_interrupt_mask>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
  4022f4:	b480      	push	{r7}
  4022f6:	b083      	sub	sp, #12
  4022f8:	af00      	add	r7, sp, #0
  4022fa:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_IMR;
  4022fc:	687b      	ldr	r3, [r7, #4]
  4022fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
  402300:	4618      	mov	r0, r3
  402302:	370c      	adds	r7, #12
  402304:	46bd      	mov	sp, r7
  402306:	f85d 7b04 	ldr.w	r7, [sp], #4
  40230a:	4770      	bx	lr

0040230c <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  40230c:	b590      	push	{r4, r7, lr}
  40230e:	b087      	sub	sp, #28
  402310:	af02      	add	r7, sp, #8
  402312:	6078      	str	r0, [r7, #4]
  402314:	6039      	str	r1, [r7, #0]
	Pio *p_pio = pio_get_pin_group(ul_pin);
  402316:	6878      	ldr	r0, [r7, #4]
  402318:	4b65      	ldr	r3, [pc, #404]	; (4024b0 <pio_configure_pin+0x1a4>)
  40231a:	4798      	blx	r3
  40231c:	60f8      	str	r0, [r7, #12]

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  40231e:	683b      	ldr	r3, [r7, #0]
  402320:	f003 43f0 	and.w	r3, r3, #2013265920	; 0x78000000
  402324:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  402328:	d06b      	beq.n	402402 <pio_configure_pin+0xf6>
  40232a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  40232e:	d809      	bhi.n	402344 <pio_configure_pin+0x38>
  402330:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  402334:	d02d      	beq.n	402392 <pio_configure_pin+0x86>
  402336:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  40233a:	d046      	beq.n	4023ca <pio_configure_pin+0xbe>
  40233c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  402340:	d00b      	beq.n	40235a <pio_configure_pin+0x4e>
  402342:	e0ae      	b.n	4024a2 <pio_configure_pin+0x196>
  402344:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  402348:	f000 8083 	beq.w	402452 <pio_configure_pin+0x146>
  40234c:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  402350:	d07f      	beq.n	402452 <pio_configure_pin+0x146>
  402352:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  402356:	d070      	beq.n	40243a <pio_configure_pin+0x12e>
  402358:	e0a3      	b.n	4024a2 <pio_configure_pin+0x196>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  40235a:	687b      	ldr	r3, [r7, #4]
  40235c:	f003 031f 	and.w	r3, r3, #31
  402360:	2201      	movs	r2, #1
  402362:	fa02 f303 	lsl.w	r3, r2, r3
  402366:	68f8      	ldr	r0, [r7, #12]
  402368:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40236c:	461a      	mov	r2, r3
  40236e:	4b51      	ldr	r3, [pc, #324]	; (4024b4 <pio_configure_pin+0x1a8>)
  402370:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  402372:	687b      	ldr	r3, [r7, #4]
  402374:	f003 031f 	and.w	r3, r3, #31
  402378:	2201      	movs	r2, #1
  40237a:	fa02 f303 	lsl.w	r3, r2, r3
  40237e:	461a      	mov	r2, r3
  402380:	683b      	ldr	r3, [r7, #0]
  402382:	f003 0301 	and.w	r3, r3, #1
  402386:	68f8      	ldr	r0, [r7, #12]
  402388:	4611      	mov	r1, r2
  40238a:	461a      	mov	r2, r3
  40238c:	4b4a      	ldr	r3, [pc, #296]	; (4024b8 <pio_configure_pin+0x1ac>)
  40238e:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  402390:	e089      	b.n	4024a6 <pio_configure_pin+0x19a>
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  402392:	687b      	ldr	r3, [r7, #4]
  402394:	f003 031f 	and.w	r3, r3, #31
  402398:	2201      	movs	r2, #1
  40239a:	fa02 f303 	lsl.w	r3, r2, r3
  40239e:	68f8      	ldr	r0, [r7, #12]
  4023a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4023a4:	461a      	mov	r2, r3
  4023a6:	4b43      	ldr	r3, [pc, #268]	; (4024b4 <pio_configure_pin+0x1a8>)
  4023a8:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  4023aa:	687b      	ldr	r3, [r7, #4]
  4023ac:	f003 031f 	and.w	r3, r3, #31
  4023b0:	2201      	movs	r2, #1
  4023b2:	fa02 f303 	lsl.w	r3, r2, r3
  4023b6:	461a      	mov	r2, r3
  4023b8:	683b      	ldr	r3, [r7, #0]
  4023ba:	f003 0301 	and.w	r3, r3, #1
  4023be:	68f8      	ldr	r0, [r7, #12]
  4023c0:	4611      	mov	r1, r2
  4023c2:	461a      	mov	r2, r3
  4023c4:	4b3c      	ldr	r3, [pc, #240]	; (4024b8 <pio_configure_pin+0x1ac>)
  4023c6:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  4023c8:	e06d      	b.n	4024a6 <pio_configure_pin+0x19a>
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  4023ca:	687b      	ldr	r3, [r7, #4]
  4023cc:	f003 031f 	and.w	r3, r3, #31
  4023d0:	2201      	movs	r2, #1
  4023d2:	fa02 f303 	lsl.w	r3, r2, r3
  4023d6:	68f8      	ldr	r0, [r7, #12]
  4023d8:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  4023dc:	461a      	mov	r2, r3
  4023de:	4b35      	ldr	r3, [pc, #212]	; (4024b4 <pio_configure_pin+0x1a8>)
  4023e0:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  4023e2:	687b      	ldr	r3, [r7, #4]
  4023e4:	f003 031f 	and.w	r3, r3, #31
  4023e8:	2201      	movs	r2, #1
  4023ea:	fa02 f303 	lsl.w	r3, r2, r3
  4023ee:	461a      	mov	r2, r3
  4023f0:	683b      	ldr	r3, [r7, #0]
  4023f2:	f003 0301 	and.w	r3, r3, #1
  4023f6:	68f8      	ldr	r0, [r7, #12]
  4023f8:	4611      	mov	r1, r2
  4023fa:	461a      	mov	r2, r3
  4023fc:	4b2e      	ldr	r3, [pc, #184]	; (4024b8 <pio_configure_pin+0x1ac>)
  4023fe:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  402400:	e051      	b.n	4024a6 <pio_configure_pin+0x19a>
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  402402:	687b      	ldr	r3, [r7, #4]
  402404:	f003 031f 	and.w	r3, r3, #31
  402408:	2201      	movs	r2, #1
  40240a:	fa02 f303 	lsl.w	r3, r2, r3
  40240e:	68f8      	ldr	r0, [r7, #12]
  402410:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  402414:	461a      	mov	r2, r3
  402416:	4b27      	ldr	r3, [pc, #156]	; (4024b4 <pio_configure_pin+0x1a8>)
  402418:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  40241a:	687b      	ldr	r3, [r7, #4]
  40241c:	f003 031f 	and.w	r3, r3, #31
  402420:	2201      	movs	r2, #1
  402422:	fa02 f303 	lsl.w	r3, r2, r3
  402426:	461a      	mov	r2, r3
  402428:	683b      	ldr	r3, [r7, #0]
  40242a:	f003 0301 	and.w	r3, r3, #1
  40242e:	68f8      	ldr	r0, [r7, #12]
  402430:	4611      	mov	r1, r2
  402432:	461a      	mov	r2, r3
  402434:	4b20      	ldr	r3, [pc, #128]	; (4024b8 <pio_configure_pin+0x1ac>)
  402436:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  402438:	e035      	b.n	4024a6 <pio_configure_pin+0x19a>
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40243a:	687b      	ldr	r3, [r7, #4]
  40243c:	f003 031f 	and.w	r3, r3, #31
  402440:	2201      	movs	r2, #1
  402442:	fa02 f303 	lsl.w	r3, r2, r3
  402446:	68f8      	ldr	r0, [r7, #12]
  402448:	4619      	mov	r1, r3
  40244a:	683a      	ldr	r2, [r7, #0]
  40244c:	4b1b      	ldr	r3, [pc, #108]	; (4024bc <pio_configure_pin+0x1b0>)
  40244e:	4798      	blx	r3
		break;
  402450:	e029      	b.n	4024a6 <pio_configure_pin+0x19a>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  402452:	687b      	ldr	r3, [r7, #4]
  402454:	f003 031f 	and.w	r3, r3, #31
  402458:	2201      	movs	r2, #1
  40245a:	fa02 f303 	lsl.w	r3, r2, r3
  40245e:	4619      	mov	r1, r3
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  402460:	683b      	ldr	r3, [r7, #0]
  402462:	f003 5360 	and.w	r3, r3, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  402466:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40246a:	bf0c      	ite	eq
  40246c:	2301      	moveq	r3, #1
  40246e:	2300      	movne	r3, #0
  402470:	b2db      	uxtb	r3, r3
  402472:	461a      	mov	r2, r3
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  402474:	683b      	ldr	r3, [r7, #0]
  402476:	f003 0304 	and.w	r3, r3, #4
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  40247a:	2b00      	cmp	r3, #0
  40247c:	bf14      	ite	ne
  40247e:	2301      	movne	r3, #1
  402480:	2300      	moveq	r3, #0
  402482:	b2db      	uxtb	r3, r3
  402484:	461c      	mov	r4, r3
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
  402486:	683b      	ldr	r3, [r7, #0]
  402488:	f003 0301 	and.w	r3, r3, #1
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  40248c:	2b00      	cmp	r3, #0
  40248e:	bf14      	ite	ne
  402490:	2301      	movne	r3, #1
  402492:	2300      	moveq	r3, #0
  402494:	b2db      	uxtb	r3, r3
  402496:	9300      	str	r3, [sp, #0]
  402498:	68f8      	ldr	r0, [r7, #12]
  40249a:	4623      	mov	r3, r4
  40249c:	4c08      	ldr	r4, [pc, #32]	; (4024c0 <pio_configure_pin+0x1b4>)
  40249e:	47a0      	blx	r4
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  4024a0:	e001      	b.n	4024a6 <pio_configure_pin+0x19a>

	default:
		return 0;
  4024a2:	2300      	movs	r3, #0
  4024a4:	e000      	b.n	4024a8 <pio_configure_pin+0x19c>
	}

	return 1;
  4024a6:	2301      	movs	r3, #1
}
  4024a8:	4618      	mov	r0, r3
  4024aa:	3714      	adds	r7, #20
  4024ac:	46bd      	mov	sp, r7
  4024ae:	bd90      	pop	{r4, r7, pc}
  4024b0:	004024c5 	.word	0x004024c5
  4024b4:	00402045 	.word	0x00402045
  4024b8:	00401fa9 	.word	0x00401fa9
  4024bc:	00402155 	.word	0x00402155
  4024c0:	004021d1 	.word	0x004021d1

004024c4 <pio_get_pin_group>:
 * \param ul_pin The pin index.
 *
 * \return Pointer to \ref Pio struct for GPIO port.
 */
Pio *pio_get_pin_group(uint32_t ul_pin)
{
  4024c4:	b480      	push	{r7}
  4024c6:	b085      	sub	sp, #20
  4024c8:	af00      	add	r7, sp, #0
  4024ca:	6078      	str	r0, [r7, #4]
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4024cc:	687b      	ldr	r3, [r7, #4]
  4024ce:	095b      	lsrs	r3, r3, #5
  4024d0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4024d4:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4024d8:	025b      	lsls	r3, r3, #9
  4024da:	60fb      	str	r3, [r7, #12]
#endif
	return p_pio;
  4024dc:	68fb      	ldr	r3, [r7, #12]
}
  4024de:	4618      	mov	r0, r3
  4024e0:	3714      	adds	r7, #20
  4024e2:	46bd      	mov	sp, r7
  4024e4:	f85d 7b04 	ldr.w	r7, [sp], #4
  4024e8:	4770      	bx	lr
  4024ea:	bf00      	nop

004024ec <pio_capture_enable>:
 * \brief Enable PIO capture mode.
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
  4024ec:	b480      	push	{r7}
  4024ee:	b083      	sub	sp, #12
  4024f0:	af00      	add	r7, sp, #0
  4024f2:	6078      	str	r0, [r7, #4]
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  4024f4:	687b      	ldr	r3, [r7, #4]
  4024f6:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4024fa:	f043 0201 	orr.w	r2, r3, #1
  4024fe:	687b      	ldr	r3, [r7, #4]
  402500:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	pio_capture_enable_flag = true;
  402504:	4b03      	ldr	r3, [pc, #12]	; (402514 <pio_capture_enable+0x28>)
  402506:	2201      	movs	r2, #1
  402508:	601a      	str	r2, [r3, #0]
}
  40250a:	370c      	adds	r7, #12
  40250c:	46bd      	mov	sp, r7
  40250e:	f85d 7b04 	ldr.w	r7, [sp], #4
  402512:	4770      	bx	lr
  402514:	20002f4c 	.word	0x20002f4c

00402518 <pio_capture_disable>:
 * \brief Disable PIO capture mode.
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
  402518:	b480      	push	{r7}
  40251a:	b083      	sub	sp, #12
  40251c:	af00      	add	r7, sp, #0
  40251e:	6078      	str	r0, [r7, #4]
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  402520:	687b      	ldr	r3, [r7, #4]
  402522:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  402526:	f023 0201 	bic.w	r2, r3, #1
  40252a:	687b      	ldr	r3, [r7, #4]
  40252c:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	pio_capture_enable_flag = false;
  402530:	4b03      	ldr	r3, [pc, #12]	; (402540 <pio_capture_disable+0x28>)
  402532:	2200      	movs	r2, #0
  402534:	601a      	str	r2, [r3, #0]
}
  402536:	370c      	adds	r7, #12
  402538:	46bd      	mov	sp, r7
  40253a:	f85d 7b04 	ldr.w	r7, [sp], #4
  40253e:	4770      	bx	lr
  402540:	20002f4c 	.word	0x20002f4c

00402544 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  402544:	b580      	push	{r7, lr}
  402546:	b084      	sub	sp, #16
  402548:	af00      	add	r7, sp, #0
  40254a:	6078      	str	r0, [r7, #4]
  40254c:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40254e:	6878      	ldr	r0, [r7, #4]
  402550:	4b2a      	ldr	r3, [pc, #168]	; (4025fc <pio_handler_process+0xb8>)
  402552:	4798      	blx	r3
  402554:	60f8      	str	r0, [r7, #12]
	status &= pio_get_interrupt_mask(p_pio);
  402556:	6878      	ldr	r0, [r7, #4]
  402558:	4b29      	ldr	r3, [pc, #164]	; (402600 <pio_handler_process+0xbc>)
  40255a:	4798      	blx	r3
  40255c:	4602      	mov	r2, r0
  40255e:	68fb      	ldr	r3, [r7, #12]
  402560:	4013      	ands	r3, r2
  402562:	60fb      	str	r3, [r7, #12]

	/* Check pending events */
	if (status != 0) {
  402564:	68fb      	ldr	r3, [r7, #12]
  402566:	2b00      	cmp	r3, #0
  402568:	d038      	beq.n	4025dc <pio_handler_process+0x98>
		/* Find triggering source */
		i = 0;
  40256a:	2300      	movs	r3, #0
  40256c:	60bb      	str	r3, [r7, #8]
		while (status != 0) {
  40256e:	e032      	b.n	4025d6 <pio_handler_process+0x92>
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  402570:	4a24      	ldr	r2, [pc, #144]	; (402604 <pio_handler_process+0xc0>)
  402572:	68bb      	ldr	r3, [r7, #8]
  402574:	011b      	lsls	r3, r3, #4
  402576:	4413      	add	r3, r2
  402578:	681a      	ldr	r2, [r3, #0]
  40257a:	683b      	ldr	r3, [r7, #0]
  40257c:	429a      	cmp	r2, r3
  40257e:	d123      	bne.n	4025c8 <pio_handler_process+0x84>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402580:	4a20      	ldr	r2, [pc, #128]	; (402604 <pio_handler_process+0xc0>)
  402582:	68bb      	ldr	r3, [r7, #8]
  402584:	011b      	lsls	r3, r3, #4
  402586:	4413      	add	r3, r2
  402588:	685a      	ldr	r2, [r3, #4]
  40258a:	68fb      	ldr	r3, [r7, #12]
  40258c:	4013      	ands	r3, r2
  40258e:	2b00      	cmp	r3, #0
  402590:	d01a      	beq.n	4025c8 <pio_handler_process+0x84>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402592:	4a1c      	ldr	r2, [pc, #112]	; (402604 <pio_handler_process+0xc0>)
  402594:	68bb      	ldr	r3, [r7, #8]
  402596:	011b      	lsls	r3, r3, #4
  402598:	4413      	add	r3, r2
  40259a:	3308      	adds	r3, #8
  40259c:	685b      	ldr	r3, [r3, #4]
  40259e:	4919      	ldr	r1, [pc, #100]	; (402604 <pio_handler_process+0xc0>)
  4025a0:	68ba      	ldr	r2, [r7, #8]
  4025a2:	0112      	lsls	r2, r2, #4
  4025a4:	440a      	add	r2, r1
  4025a6:	6810      	ldr	r0, [r2, #0]
  4025a8:	4916      	ldr	r1, [pc, #88]	; (402604 <pio_handler_process+0xc0>)
  4025aa:	68ba      	ldr	r2, [r7, #8]
  4025ac:	0112      	lsls	r2, r2, #4
  4025ae:	440a      	add	r2, r1
  4025b0:	6852      	ldr	r2, [r2, #4]
  4025b2:	4611      	mov	r1, r2
  4025b4:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4025b6:	4a13      	ldr	r2, [pc, #76]	; (402604 <pio_handler_process+0xc0>)
  4025b8:	68bb      	ldr	r3, [r7, #8]
  4025ba:	011b      	lsls	r3, r3, #4
  4025bc:	4413      	add	r3, r2
  4025be:	685b      	ldr	r3, [r3, #4]
  4025c0:	43db      	mvns	r3, r3
  4025c2:	68fa      	ldr	r2, [r7, #12]
  4025c4:	4013      	ands	r3, r2
  4025c6:	60fb      	str	r3, [r7, #12]
				}
			}
			i++;
  4025c8:	68bb      	ldr	r3, [r7, #8]
  4025ca:	3301      	adds	r3, #1
  4025cc:	60bb      	str	r3, [r7, #8]
			if (i >= MAX_INTERRUPT_SOURCES) {
  4025ce:	68bb      	ldr	r3, [r7, #8]
  4025d0:	2b06      	cmp	r3, #6
  4025d2:	d900      	bls.n	4025d6 <pio_handler_process+0x92>
				break;
  4025d4:	e002      	b.n	4025dc <pio_handler_process+0x98>

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  4025d6:	68fb      	ldr	r3, [r7, #12]
  4025d8:	2b00      	cmp	r3, #0
  4025da:	d1c9      	bne.n	402570 <pio_handler_process+0x2c>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4025dc:	4b0a      	ldr	r3, [pc, #40]	; (402608 <pio_handler_process+0xc4>)
  4025de:	681b      	ldr	r3, [r3, #0]
  4025e0:	2b00      	cmp	r3, #0
  4025e2:	d007      	beq.n	4025f4 <pio_handler_process+0xb0>
		if (pio_capture_handler) {
  4025e4:	4b09      	ldr	r3, [pc, #36]	; (40260c <pio_handler_process+0xc8>)
  4025e6:	681b      	ldr	r3, [r3, #0]
  4025e8:	2b00      	cmp	r3, #0
  4025ea:	d003      	beq.n	4025f4 <pio_handler_process+0xb0>
			pio_capture_handler(p_pio);
  4025ec:	4b07      	ldr	r3, [pc, #28]	; (40260c <pio_handler_process+0xc8>)
  4025ee:	681b      	ldr	r3, [r3, #0]
  4025f0:	6878      	ldr	r0, [r7, #4]
  4025f2:	4798      	blx	r3
		}
	}
#endif
}
  4025f4:	3710      	adds	r7, #16
  4025f6:	46bd      	mov	sp, r7
  4025f8:	bd80      	pop	{r7, pc}
  4025fa:	bf00      	nop
  4025fc:	004022dd 	.word	0x004022dd
  402600:	004022f5 	.word	0x004022f5
  402604:	20001b50 	.word	0x20001b50
  402608:	20002f4c 	.word	0x20002f4c
  40260c:	20001bc4 	.word	0x20001bc4

00402610 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  402610:	b580      	push	{r7, lr}
  402612:	b086      	sub	sp, #24
  402614:	af00      	add	r7, sp, #0
  402616:	60f8      	str	r0, [r7, #12]
  402618:	60b9      	str	r1, [r7, #8]
  40261a:	607a      	str	r2, [r7, #4]
  40261c:	603b      	str	r3, [r7, #0]
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  40261e:	4b13      	ldr	r3, [pc, #76]	; (40266c <pio_handler_set+0x5c>)
  402620:	681b      	ldr	r3, [r3, #0]
  402622:	2b06      	cmp	r3, #6
  402624:	d901      	bls.n	40262a <pio_handler_set+0x1a>
		return 1;
  402626:	2301      	movs	r3, #1
  402628:	e01c      	b.n	402664 <pio_handler_set+0x54>

	/* Define new source */
	pSource = &(gs_interrupt_sources[gs_ul_nb_sources]);
  40262a:	4b10      	ldr	r3, [pc, #64]	; (40266c <pio_handler_set+0x5c>)
  40262c:	681b      	ldr	r3, [r3, #0]
  40262e:	011b      	lsls	r3, r3, #4
  402630:	4a0f      	ldr	r2, [pc, #60]	; (402670 <pio_handler_set+0x60>)
  402632:	4413      	add	r3, r2
  402634:	617b      	str	r3, [r7, #20]
	pSource->id = ul_id;
  402636:	697b      	ldr	r3, [r7, #20]
  402638:	68ba      	ldr	r2, [r7, #8]
  40263a:	601a      	str	r2, [r3, #0]
	pSource->mask = ul_mask;
  40263c:	697b      	ldr	r3, [r7, #20]
  40263e:	687a      	ldr	r2, [r7, #4]
  402640:	605a      	str	r2, [r3, #4]
	pSource->attr = ul_attr;
  402642:	697b      	ldr	r3, [r7, #20]
  402644:	683a      	ldr	r2, [r7, #0]
  402646:	609a      	str	r2, [r3, #8]
	pSource->handler = p_handler;
  402648:	697b      	ldr	r3, [r7, #20]
  40264a:	6a3a      	ldr	r2, [r7, #32]
  40264c:	60da      	str	r2, [r3, #12]
	gs_ul_nb_sources++;
  40264e:	4b07      	ldr	r3, [pc, #28]	; (40266c <pio_handler_set+0x5c>)
  402650:	681b      	ldr	r3, [r3, #0]
  402652:	3301      	adds	r3, #1
  402654:	4a05      	ldr	r2, [pc, #20]	; (40266c <pio_handler_set+0x5c>)
  402656:	6013      	str	r3, [r2, #0]

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  402658:	68f8      	ldr	r0, [r7, #12]
  40265a:	6879      	ldr	r1, [r7, #4]
  40265c:	683a      	ldr	r2, [r7, #0]
  40265e:	4b05      	ldr	r3, [pc, #20]	; (402674 <pio_handler_set+0x64>)
  402660:	4798      	blx	r3

	return 0;
  402662:	2300      	movs	r3, #0
}
  402664:	4618      	mov	r0, r3
  402666:	3718      	adds	r7, #24
  402668:	46bd      	mov	sp, r7
  40266a:	bd80      	pop	{r7, pc}
  40266c:	20001bc0 	.word	0x20001bc0
  402670:	20001b50 	.word	0x20001b50
  402674:	00402235 	.word	0x00402235

00402678 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  402678:	b580      	push	{r7, lr}
  40267a:	af00      	add	r7, sp, #0
	pio_handler_process(PIOA, ID_PIOA);
  40267c:	4802      	ldr	r0, [pc, #8]	; (402688 <PIOA_Handler+0x10>)
  40267e:	210b      	movs	r1, #11
  402680:	4b02      	ldr	r3, [pc, #8]	; (40268c <PIOA_Handler+0x14>)
  402682:	4798      	blx	r3
}
  402684:	bd80      	pop	{r7, pc}
  402686:	bf00      	nop
  402688:	400e0e00 	.word	0x400e0e00
  40268c:	00402545 	.word	0x00402545

00402690 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  402690:	b580      	push	{r7, lr}
  402692:	af00      	add	r7, sp, #0
    pio_handler_process(PIOB, ID_PIOB);
  402694:	4802      	ldr	r0, [pc, #8]	; (4026a0 <PIOB_Handler+0x10>)
  402696:	210c      	movs	r1, #12
  402698:	4b02      	ldr	r3, [pc, #8]	; (4026a4 <PIOB_Handler+0x14>)
  40269a:	4798      	blx	r3
}
  40269c:	bd80      	pop	{r7, pc}
  40269e:	bf00      	nop
  4026a0:	400e1000 	.word	0x400e1000
  4026a4:	00402545 	.word	0x00402545

004026a8 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  4026a8:	b580      	push	{r7, lr}
  4026aa:	af00      	add	r7, sp, #0
	pio_handler_process(PIOC, ID_PIOC);
  4026ac:	4802      	ldr	r0, [pc, #8]	; (4026b8 <PIOC_Handler+0x10>)
  4026ae:	210d      	movs	r1, #13
  4026b0:	4b02      	ldr	r3, [pc, #8]	; (4026bc <PIOC_Handler+0x14>)
  4026b2:	4798      	blx	r3
}
  4026b4:	bd80      	pop	{r7, pc}
  4026b6:	bf00      	nop
  4026b8:	400e1200 	.word	0x400e1200
  4026bc:	00402545 	.word	0x00402545

004026c0 <pmc_switch_mck_to_pllbck>:
 *
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
uint32_t pmc_switch_mck_to_pllbck(uint32_t ul_pres)
{
  4026c0:	b480      	push	{r7}
  4026c2:	b085      	sub	sp, #20
  4026c4:	af00      	add	r7, sp, #0
  4026c6:	6078      	str	r0, [r7, #4]
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4026c8:	491c      	ldr	r1, [pc, #112]	; (40273c <pmc_switch_mck_to_pllbck+0x7c>)
  4026ca:	4b1c      	ldr	r3, [pc, #112]	; (40273c <pmc_switch_mck_to_pllbck+0x7c>)
  4026cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4026ce:	f023 0270 	bic.w	r2, r3, #112	; 0x70
  4026d2:	687b      	ldr	r3, [r7, #4]
  4026d4:	4313      	orrs	r3, r2
  4026d6:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4026d8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4026dc:	60fb      	str	r3, [r7, #12]
  4026de:	e007      	b.n	4026f0 <pmc_switch_mck_to_pllbck+0x30>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4026e0:	68fb      	ldr	r3, [r7, #12]
  4026e2:	2b00      	cmp	r3, #0
  4026e4:	d101      	bne.n	4026ea <pmc_switch_mck_to_pllbck+0x2a>
			return 1;
  4026e6:	2301      	movs	r3, #1
  4026e8:	e021      	b.n	40272e <pmc_switch_mck_to_pllbck+0x6e>
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
  4026ea:	68fb      	ldr	r3, [r7, #12]
  4026ec:	3b01      	subs	r3, #1
  4026ee:	60fb      	str	r3, [r7, #12]
uint32_t pmc_switch_mck_to_pllbck(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4026f0:	4b12      	ldr	r3, [pc, #72]	; (40273c <pmc_switch_mck_to_pllbck+0x7c>)
  4026f2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4026f4:	f003 0308 	and.w	r3, r3, #8
  4026f8:	2b00      	cmp	r3, #0
  4026fa:	d0f1      	beq.n	4026e0 <pmc_switch_mck_to_pllbck+0x20>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4026fc:	4a0f      	ldr	r2, [pc, #60]	; (40273c <pmc_switch_mck_to_pllbck+0x7c>)
  4026fe:	4b0f      	ldr	r3, [pc, #60]	; (40273c <pmc_switch_mck_to_pllbck+0x7c>)
  402700:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402702:	f043 0303 	orr.w	r3, r3, #3
  402706:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLB_CLK;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402708:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40270c:	60fb      	str	r3, [r7, #12]
  40270e:	e007      	b.n	402720 <pmc_switch_mck_to_pllbck+0x60>
			--ul_timeout) {
		if (ul_timeout == 0) {
  402710:	68fb      	ldr	r3, [r7, #12]
  402712:	2b00      	cmp	r3, #0
  402714:	d101      	bne.n	40271a <pmc_switch_mck_to_pllbck+0x5a>
			return 1;
  402716:	2301      	movs	r3, #1
  402718:	e009      	b.n	40272e <pmc_switch_mck_to_pllbck+0x6e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLB_CLK;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
  40271a:	68fb      	ldr	r3, [r7, #12]
  40271c:	3b01      	subs	r3, #1
  40271e:	60fb      	str	r3, [r7, #12]
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLB_CLK;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402720:	4b06      	ldr	r3, [pc, #24]	; (40273c <pmc_switch_mck_to_pllbck+0x7c>)
  402722:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  402724:	f003 0308 	and.w	r3, r3, #8
  402728:	2b00      	cmp	r3, #0
  40272a:	d0f1      	beq.n	402710 <pmc_switch_mck_to_pllbck+0x50>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  40272c:	2300      	movs	r3, #0
}
  40272e:	4618      	mov	r0, r3
  402730:	3714      	adds	r7, #20
  402732:	46bd      	mov	sp, r7
  402734:	f85d 7b04 	ldr.w	r7, [sp], #4
  402738:	4770      	bx	lr
  40273a:	bf00      	nop
  40273c:	400e0400 	.word	0x400e0400

00402740 <pmc_switch_sclk_to_32kxtal>:
 *       VDDIO power supply.
 *
 * \param ul_bypass 0 for Xtal, 1 for bypass.
 */
void pmc_switch_sclk_to_32kxtal(uint32_t ul_bypass)
{
  402740:	b480      	push	{r7}
  402742:	b083      	sub	sp, #12
  402744:	af00      	add	r7, sp, #0
  402746:	6078      	str	r0, [r7, #4]
	/* Set Bypass mode if required */
	if (ul_bypass == 1) {
  402748:	687b      	ldr	r3, [r7, #4]
  40274a:	2b01      	cmp	r3, #1
  40274c:	d107      	bne.n	40275e <pmc_switch_sclk_to_32kxtal+0x1e>
		SUPC->SUPC_MR |= SUPC_MR_KEY_PASSWD |
  40274e:	4a08      	ldr	r2, [pc, #32]	; (402770 <pmc_switch_sclk_to_32kxtal+0x30>)
  402750:	4b07      	ldr	r3, [pc, #28]	; (402770 <pmc_switch_sclk_to_32kxtal+0x30>)
  402752:	689b      	ldr	r3, [r3, #8]
  402754:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
  402758:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40275c:	6093      	str	r3, [r2, #8]
			SUPC_MR_OSCBYPASS;
	}

	SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
  40275e:	4b04      	ldr	r3, [pc, #16]	; (402770 <pmc_switch_sclk_to_32kxtal+0x30>)
  402760:	4a04      	ldr	r2, [pc, #16]	; (402774 <pmc_switch_sclk_to_32kxtal+0x34>)
  402762:	601a      	str	r2, [r3, #0]
}
  402764:	370c      	adds	r7, #12
  402766:	46bd      	mov	sp, r7
  402768:	f85d 7b04 	ldr.w	r7, [sp], #4
  40276c:	4770      	bx	lr
  40276e:	bf00      	nop
  402770:	400e1410 	.word	0x400e1410
  402774:	a5000008 	.word	0xa5000008

00402778 <pmc_osc_is_ready_32kxtal>:
 *
 * \retval 1 External 32k Xtal is ready.
 * \retval 0 External 32k Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_32kxtal(void)
{
  402778:	b480      	push	{r7}
  40277a:	af00      	add	r7, sp, #0
	return ((SUPC->SUPC_SR & SUPC_SR_OSCSEL)
  40277c:	4b09      	ldr	r3, [pc, #36]	; (4027a4 <pmc_osc_is_ready_32kxtal+0x2c>)
  40277e:	695b      	ldr	r3, [r3, #20]
  402780:	f003 0380 	and.w	r3, r3, #128	; 0x80
			&& (PMC->PMC_SR & PMC_SR_OSCSELS));
  402784:	2b00      	cmp	r3, #0
  402786:	d007      	beq.n	402798 <pmc_osc_is_ready_32kxtal+0x20>
  402788:	4b07      	ldr	r3, [pc, #28]	; (4027a8 <pmc_osc_is_ready_32kxtal+0x30>)
  40278a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40278c:	f003 0380 	and.w	r3, r3, #128	; 0x80
  402790:	2b00      	cmp	r3, #0
  402792:	d001      	beq.n	402798 <pmc_osc_is_ready_32kxtal+0x20>
  402794:	2301      	movs	r3, #1
  402796:	e000      	b.n	40279a <pmc_osc_is_ready_32kxtal+0x22>
  402798:	2300      	movs	r3, #0
}
  40279a:	4618      	mov	r0, r3
  40279c:	46bd      	mov	sp, r7
  40279e:	f85d 7b04 	ldr.w	r7, [sp], #4
  4027a2:	4770      	bx	lr
  4027a4:	400e1410 	.word	0x400e1410
  4027a8:	400e0400 	.word	0x400e0400

004027ac <pmc_switch_mainck_to_fastrc>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
  4027ac:	b480      	push	{r7}
  4027ae:	b083      	sub	sp, #12
  4027b0:	af00      	add	r7, sp, #0
  4027b2:	6078      	str	r0, [r7, #4]
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  4027b4:	4a18      	ldr	r2, [pc, #96]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027b6:	4b18      	ldr	r3, [pc, #96]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027b8:	6a1b      	ldr	r3, [r3, #32]
  4027ba:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4027be:	f043 0308 	orr.w	r3, r3, #8
  4027c2:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4027c4:	bf00      	nop
  4027c6:	4b14      	ldr	r3, [pc, #80]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027c8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4027ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  4027ce:	2b00      	cmp	r3, #0
  4027d0:	d0f9      	beq.n	4027c6 <pmc_switch_mainck_to_fastrc+0x1a>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  4027d2:	4911      	ldr	r1, [pc, #68]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027d4:	4b10      	ldr	r3, [pc, #64]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027d6:	6a1b      	ldr	r3, [r3, #32]
  4027d8:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4027dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  4027e0:	687a      	ldr	r2, [r7, #4]
  4027e2:	4313      	orrs	r3, r2
  4027e4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  4027e8:	620b      	str	r3, [r1, #32]
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4027ea:	bf00      	nop
  4027ec:	4b0a      	ldr	r3, [pc, #40]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027ee:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4027f0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  4027f4:	2b00      	cmp	r3, #0
  4027f6:	d0f9      	beq.n	4027ec <pmc_switch_mainck_to_fastrc+0x40>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4027f8:	4a07      	ldr	r2, [pc, #28]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027fa:	4b07      	ldr	r3, [pc, #28]	; (402818 <pmc_switch_mainck_to_fastrc+0x6c>)
  4027fc:	6a1b      	ldr	r3, [r3, #32]
  4027fe:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  402802:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  402806:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40280a:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
  40280c:	370c      	adds	r7, #12
  40280e:	46bd      	mov	sp, r7
  402810:	f85d 7b04 	ldr.w	r7, [sp], #4
  402814:	4770      	bx	lr
  402816:	bf00      	nop
  402818:	400e0400 	.word	0x400e0400

0040281c <pmc_switch_mainck_to_xtal>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
  40281c:	b480      	push	{r7}
  40281e:	b083      	sub	sp, #12
  402820:	af00      	add	r7, sp, #0
  402822:	6078      	str	r0, [r7, #4]
  402824:	6039      	str	r1, [r7, #0]
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  402826:	687b      	ldr	r3, [r7, #4]
  402828:	2b00      	cmp	r3, #0
  40282a:	d008      	beq.n	40283e <pmc_switch_mainck_to_xtal+0x22>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40282c:	4916      	ldr	r1, [pc, #88]	; (402888 <pmc_switch_mainck_to_xtal+0x6c>)
  40282e:	4b16      	ldr	r3, [pc, #88]	; (402888 <pmc_switch_mainck_to_xtal+0x6c>)
  402830:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  402832:	4a16      	ldr	r2, [pc, #88]	; (40288c <pmc_switch_mainck_to_xtal+0x70>)
  402834:	401a      	ands	r2, r3
  402836:	4b16      	ldr	r3, [pc, #88]	; (402890 <pmc_switch_mainck_to_xtal+0x74>)
  402838:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40283a:	620b      	str	r3, [r1, #32]
  40283c:	e01e      	b.n	40287c <pmc_switch_mainck_to_xtal+0x60>
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40283e:	4912      	ldr	r1, [pc, #72]	; (402888 <pmc_switch_mainck_to_xtal+0x6c>)
  402840:	4b11      	ldr	r3, [pc, #68]	; (402888 <pmc_switch_mainck_to_xtal+0x6c>)
  402842:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  402844:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  402848:	f023 0303 	bic.w	r3, r3, #3
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40284c:	683a      	ldr	r2, [r7, #0]
  40284e:	0212      	lsls	r2, r2, #8
  402850:	b292      	uxth	r2, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  402852:	4313      	orrs	r3, r2
  402854:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  402858:	f043 0301 	orr.w	r3, r3, #1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40285c:	620b      	str	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40285e:	bf00      	nop
  402860:	4b09      	ldr	r3, [pc, #36]	; (402888 <pmc_switch_mainck_to_xtal+0x6c>)
  402862:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  402864:	f003 0301 	and.w	r3, r3, #1
  402868:	2b00      	cmp	r3, #0
  40286a:	d0f9      	beq.n	402860 <pmc_switch_mainck_to_xtal+0x44>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40286c:	4a06      	ldr	r2, [pc, #24]	; (402888 <pmc_switch_mainck_to_xtal+0x6c>)
  40286e:	4b06      	ldr	r3, [pc, #24]	; (402888 <pmc_switch_mainck_to_xtal+0x6c>)
  402870:	6a1b      	ldr	r3, [r3, #32]
  402872:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  402876:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  40287a:	6213      	str	r3, [r2, #32]
	}
}
  40287c:	370c      	adds	r7, #12
  40287e:	46bd      	mov	sp, r7
  402880:	f85d 7b04 	ldr.w	r7, [sp], #4
  402884:	4770      	bx	lr
  402886:	bf00      	nop
  402888:	400e0400 	.word	0x400e0400
  40288c:	fec8fffc 	.word	0xfec8fffc
  402890:	01370002 	.word	0x01370002

00402894 <pmc_osc_is_ready_mainck>:
 *
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
  402894:	b480      	push	{r7}
  402896:	af00      	add	r7, sp, #0
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  402898:	4b04      	ldr	r3, [pc, #16]	; (4028ac <pmc_osc_is_ready_mainck+0x18>)
  40289a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40289c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
}
  4028a0:	4618      	mov	r0, r3
  4028a2:	46bd      	mov	sp, r7
  4028a4:	f85d 7b04 	ldr.w	r7, [sp], #4
  4028a8:	4770      	bx	lr
  4028aa:	bf00      	nop
  4028ac:	400e0400 	.word	0x400e0400

004028b0 <pmc_enable_pllack>:
 * \param mula PLLA multiplier.
 * \param pllacount PLLA counter.
 * \param diva Divider.
 */
void pmc_enable_pllack(uint32_t mula, uint32_t pllacount, uint32_t diva)
{
  4028b0:	b580      	push	{r7, lr}
  4028b2:	b084      	sub	sp, #16
  4028b4:	af00      	add	r7, sp, #0
  4028b6:	60f8      	str	r0, [r7, #12]
  4028b8:	60b9      	str	r1, [r7, #8]
  4028ba:	607a      	str	r2, [r7, #4]
	/* first disable the PLL to unlock the lock */
	pmc_disable_pllack();
  4028bc:	4b0d      	ldr	r3, [pc, #52]	; (4028f4 <pmc_enable_pllack+0x44>)
  4028be:	4798      	blx	r3

#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_PLLAEN(diva) |
			CKGR_PLLAR_PLLACOUNT(pllacount) | CKGR_PLLAR_MULA(mula);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_DIVA(diva) |
  4028c0:	480d      	ldr	r0, [pc, #52]	; (4028f8 <pmc_enable_pllack+0x48>)
  4028c2:	687b      	ldr	r3, [r7, #4]
  4028c4:	b2da      	uxtb	r2, r3
			CKGR_PLLAR_PLLACOUNT(pllacount) | CKGR_PLLAR_MULA(mula);
  4028c6:	68bb      	ldr	r3, [r7, #8]
  4028c8:	021b      	lsls	r3, r3, #8
  4028ca:	f403 537c 	and.w	r3, r3, #16128	; 0x3f00

#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_PLLAEN(diva) |
			CKGR_PLLAR_PLLACOUNT(pllacount) | CKGR_PLLAR_MULA(mula);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_DIVA(diva) |
  4028ce:	431a      	orrs	r2, r3
			CKGR_PLLAR_PLLACOUNT(pllacount) | CKGR_PLLAR_MULA(mula);
  4028d0:	68fb      	ldr	r3, [r7, #12]
  4028d2:	0419      	lsls	r1, r3, #16
  4028d4:	4b09      	ldr	r3, [pc, #36]	; (4028fc <pmc_enable_pllack+0x4c>)
  4028d6:	400b      	ands	r3, r1
  4028d8:	4313      	orrs	r3, r2
  4028da:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000

#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_PLLAEN(diva) |
			CKGR_PLLAR_PLLACOUNT(pllacount) | CKGR_PLLAR_MULA(mula);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_DIVA(diva) |
  4028de:	6283      	str	r3, [r0, #40]	; 0x28
			CKGR_PLLAR_PLLACOUNT(pllacount) | CKGR_PLLAR_MULA(mula);
#endif
	while ((PMC->PMC_SR & PMC_SR_LOCKA) == 0);
  4028e0:	bf00      	nop
  4028e2:	4b05      	ldr	r3, [pc, #20]	; (4028f8 <pmc_enable_pllack+0x48>)
  4028e4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4028e6:	f003 0302 	and.w	r3, r3, #2
  4028ea:	2b00      	cmp	r3, #0
  4028ec:	d0f9      	beq.n	4028e2 <pmc_enable_pllack+0x32>
}
  4028ee:	3710      	adds	r7, #16
  4028f0:	46bd      	mov	sp, r7
  4028f2:	bd80      	pop	{r7, pc}
  4028f4:	00402901 	.word	0x00402901
  4028f8:	400e0400 	.word	0x400e0400
  4028fc:	07ff0000 	.word	0x07ff0000

00402900 <pmc_disable_pllack>:

/**
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
  402900:	b480      	push	{r7}
  402902:	af00      	add	r7, sp, #0
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  402904:	4b03      	ldr	r3, [pc, #12]	; (402914 <pmc_disable_pllack+0x14>)
  402906:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40290a:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
  40290c:	46bd      	mov	sp, r7
  40290e:	f85d 7b04 	ldr.w	r7, [sp], #4
  402912:	4770      	bx	lr
  402914:	400e0400 	.word	0x400e0400

00402918 <pmc_is_locked_pllack>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
  402918:	b480      	push	{r7}
  40291a:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  40291c:	4b04      	ldr	r3, [pc, #16]	; (402930 <pmc_is_locked_pllack+0x18>)
  40291e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  402920:	f003 0302 	and.w	r3, r3, #2
}
  402924:	4618      	mov	r0, r3
  402926:	46bd      	mov	sp, r7
  402928:	f85d 7b04 	ldr.w	r7, [sp], #4
  40292c:	4770      	bx	lr
  40292e:	bf00      	nop
  402930:	400e0400 	.word	0x400e0400

00402934 <pmc_disable_pllbck>:

/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
  402934:	b480      	push	{r7}
  402936:	af00      	add	r7, sp, #0
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  402938:	4b03      	ldr	r3, [pc, #12]	; (402948 <pmc_disable_pllbck+0x14>)
  40293a:	2200      	movs	r2, #0
  40293c:	62da      	str	r2, [r3, #44]	; 0x2c
}
  40293e:	46bd      	mov	sp, r7
  402940:	f85d 7b04 	ldr.w	r7, [sp], #4
  402944:	4770      	bx	lr
  402946:	bf00      	nop
  402948:	400e0400 	.word	0x400e0400

0040294c <pmc_is_locked_pllbck>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllbck(void)
{
  40294c:	b480      	push	{r7}
  40294e:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKB);
  402950:	4b04      	ldr	r3, [pc, #16]	; (402964 <pmc_is_locked_pllbck+0x18>)
  402952:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  402954:	f003 0304 	and.w	r3, r3, #4
}
  402958:	4618      	mov	r0, r3
  40295a:	46bd      	mov	sp, r7
  40295c:	f85d 7b04 	ldr.w	r7, [sp], #4
  402960:	4770      	bx	lr
  402962:	bf00      	nop
  402964:	400e0400 	.word	0x400e0400

00402968 <pmc_enable_periph_clk>:
 *
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
  402968:	b480      	push	{r7}
  40296a:	b083      	sub	sp, #12
  40296c:	af00      	add	r7, sp, #0
  40296e:	6078      	str	r0, [r7, #4]
	if (ul_id > MAX_PERIPH_ID) {
  402970:	687b      	ldr	r3, [r7, #4]
  402972:	2b22      	cmp	r3, #34	; 0x22
  402974:	d901      	bls.n	40297a <pmc_enable_periph_clk+0x12>
		return 1;
  402976:	2301      	movs	r3, #1
  402978:	e02f      	b.n	4029da <pmc_enable_periph_clk+0x72>
	}

	if (ul_id < 32) {
  40297a:	687b      	ldr	r3, [r7, #4]
  40297c:	2b1f      	cmp	r3, #31
  40297e:	d813      	bhi.n	4029a8 <pmc_enable_periph_clk+0x40>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  402980:	4b19      	ldr	r3, [pc, #100]	; (4029e8 <pmc_enable_periph_clk+0x80>)
  402982:	699a      	ldr	r2, [r3, #24]
  402984:	687b      	ldr	r3, [r7, #4]
  402986:	2101      	movs	r1, #1
  402988:	fa01 f303 	lsl.w	r3, r1, r3
  40298c:	401a      	ands	r2, r3
  40298e:	687b      	ldr	r3, [r7, #4]
  402990:	2101      	movs	r1, #1
  402992:	fa01 f303 	lsl.w	r3, r1, r3
  402996:	429a      	cmp	r2, r3
  402998:	d01e      	beq.n	4029d8 <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER0 = 1 << ul_id;
  40299a:	4a13      	ldr	r2, [pc, #76]	; (4029e8 <pmc_enable_periph_clk+0x80>)
  40299c:	687b      	ldr	r3, [r7, #4]
  40299e:	2101      	movs	r1, #1
  4029a0:	fa01 f303 	lsl.w	r3, r1, r3
  4029a4:	6113      	str	r3, [r2, #16]
  4029a6:	e017      	b.n	4029d8 <pmc_enable_periph_clk+0x70>
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  4029a8:	687b      	ldr	r3, [r7, #4]
  4029aa:	3b20      	subs	r3, #32
  4029ac:	607b      	str	r3, [r7, #4]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4029ae:	4b0e      	ldr	r3, [pc, #56]	; (4029e8 <pmc_enable_periph_clk+0x80>)
  4029b0:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4029b4:	687b      	ldr	r3, [r7, #4]
  4029b6:	2101      	movs	r1, #1
  4029b8:	fa01 f303 	lsl.w	r3, r1, r3
  4029bc:	401a      	ands	r2, r3
  4029be:	687b      	ldr	r3, [r7, #4]
  4029c0:	2101      	movs	r1, #1
  4029c2:	fa01 f303 	lsl.w	r3, r1, r3
  4029c6:	429a      	cmp	r2, r3
  4029c8:	d006      	beq.n	4029d8 <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER1 = 1 << ul_id;
  4029ca:	4a07      	ldr	r2, [pc, #28]	; (4029e8 <pmc_enable_periph_clk+0x80>)
  4029cc:	687b      	ldr	r3, [r7, #4]
  4029ce:	2101      	movs	r1, #1
  4029d0:	fa01 f303 	lsl.w	r3, r1, r3
  4029d4:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
  4029d8:	2300      	movs	r3, #0
}
  4029da:	4618      	mov	r0, r3
  4029dc:	370c      	adds	r7, #12
  4029de:	46bd      	mov	sp, r7
  4029e0:	f85d 7b04 	ldr.w	r7, [sp], #4
  4029e4:	4770      	bx	lr
  4029e6:	bf00      	nop
  4029e8:	400e0400 	.word	0x400e0400

004029ec <twi_enable_master_mode>:
 * \brief Enable TWI master mode.
 *
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_master_mode(Twi *p_twi)
{
  4029ec:	b480      	push	{r7}
  4029ee:	b083      	sub	sp, #12
  4029f0:	af00      	add	r7, sp, #0
  4029f2:	6078      	str	r0, [r7, #4]
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
  4029f4:	687b      	ldr	r3, [r7, #4]
  4029f6:	2208      	movs	r2, #8
  4029f8:	601a      	str	r2, [r3, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  4029fa:	687b      	ldr	r3, [r7, #4]
  4029fc:	2220      	movs	r2, #32
  4029fe:	601a      	str	r2, [r3, #0]

	/* Set Master Enable bit */
	p_twi->TWI_CR = TWI_CR_MSEN;
  402a00:	687b      	ldr	r3, [r7, #4]
  402a02:	2204      	movs	r2, #4
  402a04:	601a      	str	r2, [r3, #0]
}
  402a06:	370c      	adds	r7, #12
  402a08:	46bd      	mov	sp, r7
  402a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
  402a0e:	4770      	bx	lr

00402a10 <twi_master_init>:
 * \param p_opt Options for initializing the TWI module (see \ref twi_options_t).
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
  402a10:	b580      	push	{r7, lr}
  402a12:	b084      	sub	sp, #16
  402a14:	af00      	add	r7, sp, #0
  402a16:	6078      	str	r0, [r7, #4]
  402a18:	6039      	str	r1, [r7, #0]
	uint32_t status = TWI_SUCCESS;
  402a1a:	2300      	movs	r3, #0
  402a1c:	60fb      	str	r3, [r7, #12]

	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
  402a1e:	687b      	ldr	r3, [r7, #4]
  402a20:	f04f 32ff 	mov.w	r2, #4294967295
  402a24:	629a      	str	r2, [r3, #40]	; 0x28

	/* Dummy read in status register */
	p_twi->TWI_SR;
  402a26:	687b      	ldr	r3, [r7, #4]
  402a28:	6a1b      	ldr	r3, [r3, #32]

	/* Reset TWI peripheral */
	twi_reset(p_twi);
  402a2a:	6878      	ldr	r0, [r7, #4]
  402a2c:	4b0f      	ldr	r3, [pc, #60]	; (402a6c <twi_master_init+0x5c>)
  402a2e:	4798      	blx	r3

	twi_enable_master_mode(p_twi);
  402a30:	6878      	ldr	r0, [r7, #4]
  402a32:	4b0f      	ldr	r3, [pc, #60]	; (402a70 <twi_master_init+0x60>)
  402a34:	4798      	blx	r3

	/* Select the speed */
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  402a36:	683b      	ldr	r3, [r7, #0]
  402a38:	685a      	ldr	r2, [r3, #4]
  402a3a:	683b      	ldr	r3, [r7, #0]
  402a3c:	681b      	ldr	r3, [r3, #0]
  402a3e:	6878      	ldr	r0, [r7, #4]
  402a40:	4611      	mov	r1, r2
  402a42:	461a      	mov	r2, r3
  402a44:	4b0b      	ldr	r3, [pc, #44]	; (402a74 <twi_master_init+0x64>)
  402a46:	4798      	blx	r3
  402a48:	4603      	mov	r3, r0
  402a4a:	2b01      	cmp	r3, #1
  402a4c:	d101      	bne.n	402a52 <twi_master_init+0x42>
		/* The desired speed setting is rejected */
		status = TWI_INVALID_ARGUMENT;
  402a4e:	2301      	movs	r3, #1
  402a50:	60fb      	str	r3, [r7, #12]
	}

	if (p_opt->smbus == 1) {
  402a52:	683b      	ldr	r3, [r7, #0]
  402a54:	7a5b      	ldrb	r3, [r3, #9]
  402a56:	2b01      	cmp	r3, #1
  402a58:	d102      	bne.n	402a60 <twi_master_init+0x50>
		p_twi->TWI_CR = TWI_CR_QUICK;
  402a5a:	687b      	ldr	r3, [r7, #4]
  402a5c:	2240      	movs	r2, #64	; 0x40
  402a5e:	601a      	str	r2, [r3, #0]
	}

	return status;
  402a60:	68fb      	ldr	r3, [r7, #12]
}
  402a62:	4618      	mov	r0, r3
  402a64:	3710      	adds	r7, #16
  402a66:	46bd      	mov	sp, r7
  402a68:	bd80      	pop	{r7, pc}
  402a6a:	bf00      	nop
  402a6c:	00402d2d 	.word	0x00402d2d
  402a70:	004029ed 	.word	0x004029ed
  402a74:	00402a79 	.word	0x00402a79

00402a78 <twi_set_speed>:
 *
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
  402a78:	b480      	push	{r7}
  402a7a:	b087      	sub	sp, #28
  402a7c:	af00      	add	r7, sp, #0
  402a7e:	60f8      	str	r0, [r7, #12]
  402a80:	60b9      	str	r1, [r7, #8]
  402a82:	607a      	str	r2, [r7, #4]
	uint32_t ckdiv = 0;
  402a84:	2300      	movs	r3, #0
  402a86:	617b      	str	r3, [r7, #20]
	uint32_t c_lh_div;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  402a88:	68bb      	ldr	r3, [r7, #8]
  402a8a:	4a16      	ldr	r2, [pc, #88]	; (402ae4 <twi_set_speed+0x6c>)
  402a8c:	4293      	cmp	r3, r2
  402a8e:	d901      	bls.n	402a94 <twi_set_speed+0x1c>
		return FAIL;
  402a90:	2301      	movs	r3, #1
  402a92:	e021      	b.n	402ad8 <twi_set_speed+0x60>
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  402a94:	68bb      	ldr	r3, [r7, #8]
  402a96:	005b      	lsls	r3, r3, #1
  402a98:	687a      	ldr	r2, [r7, #4]
  402a9a:	fbb2 f3f3 	udiv	r3, r2, r3
  402a9e:	3b04      	subs	r3, #4
  402aa0:	613b      	str	r3, [r7, #16]

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  402aa2:	e005      	b.n	402ab0 <twi_set_speed+0x38>
		/* Increase clock divider */
		ckdiv++;
  402aa4:	697b      	ldr	r3, [r7, #20]
  402aa6:	3301      	adds	r3, #1
  402aa8:	617b      	str	r3, [r7, #20]
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
  402aaa:	693b      	ldr	r3, [r7, #16]
  402aac:	085b      	lsrs	r3, r3, #1
  402aae:	613b      	str	r3, [r7, #16]
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  402ab0:	693b      	ldr	r3, [r7, #16]
  402ab2:	2bff      	cmp	r3, #255	; 0xff
  402ab4:	d902      	bls.n	402abc <twi_set_speed+0x44>
  402ab6:	697b      	ldr	r3, [r7, #20]
  402ab8:	2b06      	cmp	r3, #6
  402aba:	d9f3      	bls.n	402aa4 <twi_set_speed+0x2c>
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  402abc:	693b      	ldr	r3, [r7, #16]
  402abe:	b2da      	uxtb	r2, r3
  402ac0:	693b      	ldr	r3, [r7, #16]
  402ac2:	021b      	lsls	r3, r3, #8
  402ac4:	b29b      	uxth	r3, r3
  402ac6:	431a      	orrs	r2, r3
			TWI_CWGR_CKDIV(ckdiv);
  402ac8:	697b      	ldr	r3, [r7, #20]
  402aca:	041b      	lsls	r3, r3, #16
  402acc:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  402ad0:	431a      	orrs	r2, r3
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
  402ad2:	68fb      	ldr	r3, [r7, #12]
  402ad4:	611a      	str	r2, [r3, #16]
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
			TWI_CWGR_CKDIV(ckdiv);

	return PASS;
  402ad6:	2300      	movs	r3, #0
}
  402ad8:	4618      	mov	r0, r3
  402ada:	371c      	adds	r7, #28
  402adc:	46bd      	mov	sp, r7
  402ade:	f85d 7b04 	ldr.w	r7, [sp], #4
  402ae2:	4770      	bx	lr
  402ae4:	00061a80 	.word	0x00061a80

00402ae8 <twi_mk_addr>:
 * which byte is the MSB to start with.
 *
 * Please see the device datasheet for details on this.
 */
static uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
  402ae8:	b480      	push	{r7}
  402aea:	b085      	sub	sp, #20
  402aec:	af00      	add	r7, sp, #0
  402aee:	6078      	str	r0, [r7, #4]
  402af0:	6039      	str	r1, [r7, #0]
	uint32_t val;

	if (len == 0)
  402af2:	683b      	ldr	r3, [r7, #0]
  402af4:	2b00      	cmp	r3, #0
  402af6:	d101      	bne.n	402afc <twi_mk_addr+0x14>
		return 0;
  402af8:	2300      	movs	r3, #0
  402afa:	e01d      	b.n	402b38 <twi_mk_addr+0x50>

	val = addr[0];
  402afc:	687b      	ldr	r3, [r7, #4]
  402afe:	781b      	ldrb	r3, [r3, #0]
  402b00:	60fb      	str	r3, [r7, #12]
	if (len > 1) {
  402b02:	683b      	ldr	r3, [r7, #0]
  402b04:	2b01      	cmp	r3, #1
  402b06:	dd09      	ble.n	402b1c <twi_mk_addr+0x34>
		val <<= 8;
  402b08:	68fb      	ldr	r3, [r7, #12]
  402b0a:	021b      	lsls	r3, r3, #8
  402b0c:	60fb      	str	r3, [r7, #12]
		val |= addr[1];
  402b0e:	687b      	ldr	r3, [r7, #4]
  402b10:	3301      	adds	r3, #1
  402b12:	781b      	ldrb	r3, [r3, #0]
  402b14:	461a      	mov	r2, r3
  402b16:	68fb      	ldr	r3, [r7, #12]
  402b18:	4313      	orrs	r3, r2
  402b1a:	60fb      	str	r3, [r7, #12]
	}
	if (len > 2) {
  402b1c:	683b      	ldr	r3, [r7, #0]
  402b1e:	2b02      	cmp	r3, #2
  402b20:	dd09      	ble.n	402b36 <twi_mk_addr+0x4e>
		val <<= 8;
  402b22:	68fb      	ldr	r3, [r7, #12]
  402b24:	021b      	lsls	r3, r3, #8
  402b26:	60fb      	str	r3, [r7, #12]
		val |= addr[2];
  402b28:	687b      	ldr	r3, [r7, #4]
  402b2a:	3302      	adds	r3, #2
  402b2c:	781b      	ldrb	r3, [r3, #0]
  402b2e:	461a      	mov	r2, r3
  402b30:	68fb      	ldr	r3, [r7, #12]
  402b32:	4313      	orrs	r3, r2
  402b34:	60fb      	str	r3, [r7, #12]
	}
	return val;
  402b36:	68fb      	ldr	r3, [r7, #12]
}
  402b38:	4618      	mov	r0, r3
  402b3a:	3714      	adds	r7, #20
  402b3c:	46bd      	mov	sp, r7
  402b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
  402b42:	4770      	bx	lr

00402b44 <twi_master_read>:
 * \param p_packet Packet information and data (see \ref twi_packet_t).
 *
 * \return TWI_SUCCESS if all bytes were read, error code otherwise.
 */
uint32_t twi_master_read(Twi *p_twi, twi_packet_t *p_packet)
{
  402b44:	b580      	push	{r7, lr}
  402b46:	b088      	sub	sp, #32
  402b48:	af00      	add	r7, sp, #0
  402b4a:	6078      	str	r0, [r7, #4]
  402b4c:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t cnt = p_packet->length;
  402b4e:	683b      	ldr	r3, [r7, #0]
  402b50:	68db      	ldr	r3, [r3, #12]
  402b52:	61fb      	str	r3, [r7, #28]
	uint8_t *buffer = p_packet->buffer;
  402b54:	683b      	ldr	r3, [r7, #0]
  402b56:	689b      	ldr	r3, [r3, #8]
  402b58:	61bb      	str	r3, [r7, #24]
	uint8_t stop_sent = 0;
  402b5a:	2300      	movs	r3, #0
  402b5c:	75fb      	strb	r3, [r7, #23]
	uint32_t timeout = TWI_TIMEOUT;;
  402b5e:	f643 2398 	movw	r3, #15000	; 0x3a98
  402b62:	613b      	str	r3, [r7, #16]
	
	/* Check argument */
	if (cnt == 0) {
  402b64:	69fb      	ldr	r3, [r7, #28]
  402b66:	2b00      	cmp	r3, #0
  402b68:	d101      	bne.n	402b6e <twi_master_read+0x2a>
		return TWI_INVALID_ARGUMENT;
  402b6a:	2301      	movs	r3, #1
  402b6c:	e069      	b.n	402c42 <twi_master_read+0xfe>
	}

	/* Set read mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
  402b6e:	687b      	ldr	r3, [r7, #4]
  402b70:	2200      	movs	r2, #0
  402b72:	605a      	str	r2, [r3, #4]
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  402b74:	683b      	ldr	r3, [r7, #0]
  402b76:	7c1b      	ldrb	r3, [r3, #16]
  402b78:	041b      	lsls	r3, r3, #16
  402b7a:	f403 02fe 	and.w	r2, r3, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  402b7e:	683b      	ldr	r3, [r7, #0]
  402b80:	685b      	ldr	r3, [r3, #4]
  402b82:	021b      	lsls	r3, r3, #8
  402b84:	f403 7340 	and.w	r3, r3, #768	; 0x300
		return TWI_INVALID_ARGUMENT;
	}

	/* Set read mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  402b88:	4313      	orrs	r3, r2
  402b8a:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
  402b8e:	687b      	ldr	r3, [r7, #4]
  402b90:	605a      	str	r2, [r3, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
  402b92:	687b      	ldr	r3, [r7, #4]
  402b94:	2200      	movs	r2, #0
  402b96:	60da      	str	r2, [r3, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  402b98:	683a      	ldr	r2, [r7, #0]
  402b9a:	683b      	ldr	r3, [r7, #0]
  402b9c:	685b      	ldr	r3, [r3, #4]
  402b9e:	4610      	mov	r0, r2
  402ba0:	4619      	mov	r1, r3
  402ba2:	4b2a      	ldr	r3, [pc, #168]	; (402c4c <twi_master_read+0x108>)
  402ba4:	4798      	blx	r3
  402ba6:	4602      	mov	r2, r0
  402ba8:	687b      	ldr	r3, [r7, #4]
  402baa:	60da      	str	r2, [r3, #12]

	/* Send a START condition */
	if (cnt == 1) {
  402bac:	69fb      	ldr	r3, [r7, #28]
  402bae:	2b01      	cmp	r3, #1
  402bb0:	d105      	bne.n	402bbe <twi_master_read+0x7a>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  402bb2:	687b      	ldr	r3, [r7, #4]
  402bb4:	2203      	movs	r2, #3
  402bb6:	601a      	str	r2, [r3, #0]
		stop_sent = 1;
  402bb8:	2301      	movs	r3, #1
  402bba:	75fb      	strb	r3, [r7, #23]
  402bbc:	e004      	b.n	402bc8 <twi_master_read+0x84>
	} else {
		p_twi->TWI_CR = TWI_CR_START;
  402bbe:	687b      	ldr	r3, [r7, #4]
  402bc0:	2201      	movs	r2, #1
  402bc2:	601a      	str	r2, [r3, #0]
		stop_sent = 0;
  402bc4:	2300      	movs	r3, #0
  402bc6:	75fb      	strb	r3, [r7, #23]
	}

	while (cnt > 0) {
  402bc8:	e02e      	b.n	402c28 <twi_master_read+0xe4>
		status = p_twi->TWI_SR;
  402bca:	687b      	ldr	r3, [r7, #4]
  402bcc:	6a1b      	ldr	r3, [r3, #32]
  402bce:	60fb      	str	r3, [r7, #12]
		if (status & TWI_SR_NACK) {
  402bd0:	68fb      	ldr	r3, [r7, #12]
  402bd2:	f403 7380 	and.w	r3, r3, #256	; 0x100
  402bd6:	2b00      	cmp	r3, #0
  402bd8:	d001      	beq.n	402bde <twi_master_read+0x9a>
			return TWI_RECEIVE_NACK;
  402bda:	2305      	movs	r3, #5
  402bdc:	e031      	b.n	402c42 <twi_master_read+0xfe>
		}

		if (!timeout--) {
  402bde:	693b      	ldr	r3, [r7, #16]
  402be0:	1e5a      	subs	r2, r3, #1
  402be2:	613a      	str	r2, [r7, #16]
  402be4:	2b00      	cmp	r3, #0
  402be6:	d101      	bne.n	402bec <twi_master_read+0xa8>
			return TWI_ERROR_TIMEOUT;
  402be8:	2309      	movs	r3, #9
  402bea:	e02a      	b.n	402c42 <twi_master_read+0xfe>
		}
				
		/* Last byte ? */
		if (cnt == 1  && !stop_sent) {
  402bec:	69fb      	ldr	r3, [r7, #28]
  402bee:	2b01      	cmp	r3, #1
  402bf0:	d107      	bne.n	402c02 <twi_master_read+0xbe>
  402bf2:	7dfb      	ldrb	r3, [r7, #23]
  402bf4:	2b00      	cmp	r3, #0
  402bf6:	d104      	bne.n	402c02 <twi_master_read+0xbe>
			p_twi->TWI_CR = TWI_CR_STOP;
  402bf8:	687b      	ldr	r3, [r7, #4]
  402bfa:	2202      	movs	r2, #2
  402bfc:	601a      	str	r2, [r3, #0]
			stop_sent = 1;
  402bfe:	2301      	movs	r3, #1
  402c00:	75fb      	strb	r3, [r7, #23]
		}

		if (!(status & TWI_SR_RXRDY)) {
  402c02:	68fb      	ldr	r3, [r7, #12]
  402c04:	f003 0302 	and.w	r3, r3, #2
  402c08:	2b00      	cmp	r3, #0
  402c0a:	d100      	bne.n	402c0e <twi_master_read+0xca>
			continue;
  402c0c:	e00c      	b.n	402c28 <twi_master_read+0xe4>
		}
		*buffer++ = p_twi->TWI_RHR;
  402c0e:	69bb      	ldr	r3, [r7, #24]
  402c10:	1c5a      	adds	r2, r3, #1
  402c12:	61ba      	str	r2, [r7, #24]
  402c14:	687a      	ldr	r2, [r7, #4]
  402c16:	6b12      	ldr	r2, [r2, #48]	; 0x30
  402c18:	b2d2      	uxtb	r2, r2
  402c1a:	701a      	strb	r2, [r3, #0]

		cnt--;
  402c1c:	69fb      	ldr	r3, [r7, #28]
  402c1e:	3b01      	subs	r3, #1
  402c20:	61fb      	str	r3, [r7, #28]
		timeout = TWI_TIMEOUT;
  402c22:	f643 2398 	movw	r3, #15000	; 0x3a98
  402c26:	613b      	str	r3, [r7, #16]
	} else {
		p_twi->TWI_CR = TWI_CR_START;
		stop_sent = 0;
	}

	while (cnt > 0) {
  402c28:	69fb      	ldr	r3, [r7, #28]
  402c2a:	2b00      	cmp	r3, #0
  402c2c:	d1cd      	bne.n	402bca <twi_master_read+0x86>

		cnt--;
		timeout = TWI_TIMEOUT;
	}

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  402c2e:	bf00      	nop
  402c30:	687b      	ldr	r3, [r7, #4]
  402c32:	6a1b      	ldr	r3, [r3, #32]
  402c34:	f003 0301 	and.w	r3, r3, #1
  402c38:	2b00      	cmp	r3, #0
  402c3a:	d0f9      	beq.n	402c30 <twi_master_read+0xec>
	}

	p_twi->TWI_SR;
  402c3c:	687b      	ldr	r3, [r7, #4]
  402c3e:	6a1b      	ldr	r3, [r3, #32]

	return TWI_SUCCESS;
  402c40:	2300      	movs	r3, #0
}
  402c42:	4618      	mov	r0, r3
  402c44:	3720      	adds	r7, #32
  402c46:	46bd      	mov	sp, r7
  402c48:	bd80      	pop	{r7, pc}
  402c4a:	bf00      	nop
  402c4c:	00402ae9 	.word	0x00402ae9

00402c50 <twi_master_write>:
 * \param p_packet Packet information and data (see \ref twi_packet_t).
 *
 * \return TWI_SUCCESS if all bytes were written, error code otherwise.
 */
uint32_t twi_master_write(Twi *p_twi, twi_packet_t *p_packet)
{
  402c50:	b580      	push	{r7, lr}
  402c52:	b086      	sub	sp, #24
  402c54:	af00      	add	r7, sp, #0
  402c56:	6078      	str	r0, [r7, #4]
  402c58:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t cnt = p_packet->length;
  402c5a:	683b      	ldr	r3, [r7, #0]
  402c5c:	68db      	ldr	r3, [r3, #12]
  402c5e:	617b      	str	r3, [r7, #20]
	uint8_t *buffer = p_packet->buffer;
  402c60:	683b      	ldr	r3, [r7, #0]
  402c62:	689b      	ldr	r3, [r3, #8]
  402c64:	613b      	str	r3, [r7, #16]

	/* Check argument */
	if (cnt == 0) {
  402c66:	697b      	ldr	r3, [r7, #20]
  402c68:	2b00      	cmp	r3, #0
  402c6a:	d101      	bne.n	402c70 <twi_master_write+0x20>
		return TWI_INVALID_ARGUMENT;
  402c6c:	2301      	movs	r3, #1
  402c6e:	e056      	b.n	402d1e <twi_master_write+0xce>
	}

	/* Set write mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
  402c70:	687b      	ldr	r3, [r7, #4]
  402c72:	2200      	movs	r2, #0
  402c74:	605a      	str	r2, [r3, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  402c76:	683b      	ldr	r3, [r7, #0]
  402c78:	7c1b      	ldrb	r3, [r3, #16]
  402c7a:	041b      	lsls	r3, r3, #16
  402c7c:	f403 02fe 	and.w	r2, r3, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  402c80:	683b      	ldr	r3, [r7, #0]
  402c82:	685b      	ldr	r3, [r3, #4]
  402c84:	021b      	lsls	r3, r3, #8
  402c86:	f403 7340 	and.w	r3, r3, #768	; 0x300
		return TWI_INVALID_ARGUMENT;
	}

	/* Set write mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  402c8a:	431a      	orrs	r2, r3
  402c8c:	687b      	ldr	r3, [r7, #4]
  402c8e:	605a      	str	r2, [r3, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
  402c90:	687b      	ldr	r3, [r7, #4]
  402c92:	2200      	movs	r2, #0
  402c94:	60da      	str	r2, [r3, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  402c96:	683a      	ldr	r2, [r7, #0]
  402c98:	683b      	ldr	r3, [r7, #0]
  402c9a:	685b      	ldr	r3, [r3, #4]
  402c9c:	4610      	mov	r0, r2
  402c9e:	4619      	mov	r1, r3
  402ca0:	4b21      	ldr	r3, [pc, #132]	; (402d28 <twi_master_write+0xd8>)
  402ca2:	4798      	blx	r3
  402ca4:	4602      	mov	r2, r0
  402ca6:	687b      	ldr	r3, [r7, #4]
  402ca8:	60da      	str	r2, [r3, #12]

	/* Send all bytes */
	while (cnt > 0) {
  402caa:	e019      	b.n	402ce0 <twi_master_write+0x90>
		status = p_twi->TWI_SR;
  402cac:	687b      	ldr	r3, [r7, #4]
  402cae:	6a1b      	ldr	r3, [r3, #32]
  402cb0:	60fb      	str	r3, [r7, #12]
		if (status & TWI_SR_NACK) {
  402cb2:	68fb      	ldr	r3, [r7, #12]
  402cb4:	f403 7380 	and.w	r3, r3, #256	; 0x100
  402cb8:	2b00      	cmp	r3, #0
  402cba:	d001      	beq.n	402cc0 <twi_master_write+0x70>
			return TWI_RECEIVE_NACK;
  402cbc:	2305      	movs	r3, #5
  402cbe:	e02e      	b.n	402d1e <twi_master_write+0xce>
		}

		if (!(status & TWI_SR_TXRDY)) {
  402cc0:	68fb      	ldr	r3, [r7, #12]
  402cc2:	f003 0304 	and.w	r3, r3, #4
  402cc6:	2b00      	cmp	r3, #0
  402cc8:	d100      	bne.n	402ccc <twi_master_write+0x7c>
			continue;
  402cca:	e009      	b.n	402ce0 <twi_master_write+0x90>
		}
		p_twi->TWI_THR = *buffer++;
  402ccc:	693b      	ldr	r3, [r7, #16]
  402cce:	1c5a      	adds	r2, r3, #1
  402cd0:	613a      	str	r2, [r7, #16]
  402cd2:	781b      	ldrb	r3, [r3, #0]
  402cd4:	461a      	mov	r2, r3
  402cd6:	687b      	ldr	r3, [r7, #4]
  402cd8:	635a      	str	r2, [r3, #52]	; 0x34

		cnt--;
  402cda:	697b      	ldr	r3, [r7, #20]
  402cdc:	3b01      	subs	r3, #1
  402cde:	617b      	str	r3, [r7, #20]
	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);

	/* Send all bytes */
	while (cnt > 0) {
  402ce0:	697b      	ldr	r3, [r7, #20]
  402ce2:	2b00      	cmp	r3, #0
  402ce4:	d1e2      	bne.n	402cac <twi_master_write+0x5c>

		cnt--;
	}

	while (1) {
		status = p_twi->TWI_SR;
  402ce6:	687b      	ldr	r3, [r7, #4]
  402ce8:	6a1b      	ldr	r3, [r3, #32]
  402cea:	60fb      	str	r3, [r7, #12]
		if (status & TWI_SR_NACK) {
  402cec:	68fb      	ldr	r3, [r7, #12]
  402cee:	f403 7380 	and.w	r3, r3, #256	; 0x100
  402cf2:	2b00      	cmp	r3, #0
  402cf4:	d001      	beq.n	402cfa <twi_master_write+0xaa>
			return TWI_RECEIVE_NACK;
  402cf6:	2305      	movs	r3, #5
  402cf8:	e011      	b.n	402d1e <twi_master_write+0xce>
		}

		if (status & TWI_SR_TXRDY) {
  402cfa:	68fb      	ldr	r3, [r7, #12]
  402cfc:	f003 0304 	and.w	r3, r3, #4
  402d00:	2b00      	cmp	r3, #0
  402d02:	d004      	beq.n	402d0e <twi_master_write+0xbe>
			break;
  402d04:	bf00      	nop
		}
	}

	p_twi->TWI_CR = TWI_CR_STOP;
  402d06:	687b      	ldr	r3, [r7, #4]
  402d08:	2202      	movs	r2, #2
  402d0a:	601a      	str	r2, [r3, #0]

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  402d0c:	e000      	b.n	402d10 <twi_master_write+0xc0>
		}

		if (status & TWI_SR_TXRDY) {
			break;
		}
	}
  402d0e:	e7ea      	b.n	402ce6 <twi_master_write+0x96>

	p_twi->TWI_CR = TWI_CR_STOP;

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  402d10:	687b      	ldr	r3, [r7, #4]
  402d12:	6a1b      	ldr	r3, [r3, #32]
  402d14:	f003 0301 	and.w	r3, r3, #1
  402d18:	2b00      	cmp	r3, #0
  402d1a:	d0f9      	beq.n	402d10 <twi_master_write+0xc0>
	}

	return TWI_SUCCESS;
  402d1c:	2300      	movs	r3, #0
}
  402d1e:	4618      	mov	r0, r3
  402d20:	3718      	adds	r7, #24
  402d22:	46bd      	mov	sp, r7
  402d24:	bd80      	pop	{r7, pc}
  402d26:	bf00      	nop
  402d28:	00402ae9 	.word	0x00402ae9

00402d2c <twi_reset>:
 * \brief Reset TWI.
 *
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
  402d2c:	b480      	push	{r7}
  402d2e:	b083      	sub	sp, #12
  402d30:	af00      	add	r7, sp, #0
  402d32:	6078      	str	r0, [r7, #4]
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  402d34:	687b      	ldr	r3, [r7, #4]
  402d36:	2280      	movs	r2, #128	; 0x80
  402d38:	601a      	str	r2, [r3, #0]
	p_twi->TWI_RHR;
  402d3a:	687b      	ldr	r3, [r7, #4]
  402d3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
  402d3e:	370c      	adds	r7, #12
  402d40:	46bd      	mov	sp, r7
  402d42:	f85d 7b04 	ldr.w	r7, [sp], #4
  402d46:	4770      	bx	lr

00402d48 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  402d48:	b580      	push	{r7, lr}
  402d4a:	b084      	sub	sp, #16
  402d4c:	af00      	add	r7, sp, #0
	uint32_t *pSrc, *pDest;

	/* Initialize the relocate segment */
	pSrc = &_etext;
  402d4e:	4b27      	ldr	r3, [pc, #156]	; (402dec <Reset_Handler+0xa4>)
  402d50:	60fb      	str	r3, [r7, #12]
	pDest = &_srelocate;
  402d52:	4b27      	ldr	r3, [pc, #156]	; (402df0 <Reset_Handler+0xa8>)
  402d54:	60bb      	str	r3, [r7, #8]

	if (pSrc > pDest) {
  402d56:	68fa      	ldr	r2, [r7, #12]
  402d58:	68bb      	ldr	r3, [r7, #8]
  402d5a:	429a      	cmp	r2, r3
  402d5c:	d90d      	bls.n	402d7a <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  402d5e:	e007      	b.n	402d70 <Reset_Handler+0x28>
			*pDest++ = *pSrc++;
  402d60:	68bb      	ldr	r3, [r7, #8]
  402d62:	1d1a      	adds	r2, r3, #4
  402d64:	60ba      	str	r2, [r7, #8]
  402d66:	68fa      	ldr	r2, [r7, #12]
  402d68:	1d11      	adds	r1, r2, #4
  402d6a:	60f9      	str	r1, [r7, #12]
  402d6c:	6812      	ldr	r2, [r2, #0]
  402d6e:	601a      	str	r2, [r3, #0]
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  402d70:	68bb      	ldr	r3, [r7, #8]
  402d72:	4a20      	ldr	r2, [pc, #128]	; (402df4 <Reset_Handler+0xac>)
  402d74:	4293      	cmp	r3, r2
  402d76:	d3f3      	bcc.n	402d60 <Reset_Handler+0x18>
  402d78:	e020      	b.n	402dbc <Reset_Handler+0x74>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  402d7a:	68fa      	ldr	r2, [r7, #12]
  402d7c:	68bb      	ldr	r3, [r7, #8]
  402d7e:	429a      	cmp	r2, r3
  402d80:	d21c      	bcs.n	402dbc <Reset_Handler+0x74>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  402d82:	4a1c      	ldr	r2, [pc, #112]	; (402df4 <Reset_Handler+0xac>)
  402d84:	4b1a      	ldr	r3, [pc, #104]	; (402df0 <Reset_Handler+0xa8>)
  402d86:	1ad3      	subs	r3, r2, r3
  402d88:	607b      	str	r3, [r7, #4]
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  402d8a:	68fa      	ldr	r2, [r7, #12]
  402d8c:	687b      	ldr	r3, [r7, #4]
  402d8e:	4413      	add	r3, r2
  402d90:	3b04      	subs	r3, #4
  402d92:	60fb      	str	r3, [r7, #12]
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
  402d94:	68ba      	ldr	r2, [r7, #8]
  402d96:	687b      	ldr	r3, [r7, #4]
  402d98:	4413      	add	r3, r2
  402d9a:	3b04      	subs	r3, #4
  402d9c:	60bb      	str	r3, [r7, #8]
		for (;nb_bytes;nb_bytes -= 4) {
  402d9e:	e00a      	b.n	402db6 <Reset_Handler+0x6e>
			*pDest-- = *pSrc--;
  402da0:	68bb      	ldr	r3, [r7, #8]
  402da2:	1f1a      	subs	r2, r3, #4
  402da4:	60ba      	str	r2, [r7, #8]
  402da6:	68fa      	ldr	r2, [r7, #12]
  402da8:	1f11      	subs	r1, r2, #4
  402daa:	60f9      	str	r1, [r7, #12]
  402dac:	6812      	ldr	r2, [r2, #0]
  402dae:	601a      	str	r2, [r3, #0]
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  402db0:	687b      	ldr	r3, [r7, #4]
  402db2:	3b04      	subs	r3, #4
  402db4:	607b      	str	r3, [r7, #4]
  402db6:	687b      	ldr	r3, [r7, #4]
  402db8:	2b00      	cmp	r3, #0
  402dba:	d1f1      	bne.n	402da0 <Reset_Handler+0x58>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  402dbc:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  402dbe:	4b0e      	ldr	r3, [pc, #56]	; (402df8 <Reset_Handler+0xb0>)
  402dc0:	60bb      	str	r3, [r7, #8]
  402dc2:	e004      	b.n	402dce <Reset_Handler+0x86>
		*pDest++ = 0;
  402dc4:	68bb      	ldr	r3, [r7, #8]
  402dc6:	1d1a      	adds	r2, r3, #4
  402dc8:	60ba      	str	r2, [r7, #8]
  402dca:	2200      	movs	r2, #0
  402dcc:	601a      	str	r2, [r3, #0]
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  402dce:	68bb      	ldr	r3, [r7, #8]
  402dd0:	4a0a      	ldr	r2, [pc, #40]	; (402dfc <Reset_Handler+0xb4>)
  402dd2:	4293      	cmp	r3, r2
  402dd4:	d3f6      	bcc.n	402dc4 <Reset_Handler+0x7c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
  402dd6:	4b0a      	ldr	r3, [pc, #40]	; (402e00 <Reset_Handler+0xb8>)
  402dd8:	60fb      	str	r3, [r7, #12]
	SCB->VTOR = ((uint32_t) pSrc);
  402dda:	4a0a      	ldr	r2, [pc, #40]	; (402e04 <Reset_Handler+0xbc>)
  402ddc:	68fb      	ldr	r3, [r7, #12]
  402dde:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
  402de0:	4b09      	ldr	r3, [pc, #36]	; (402e08 <Reset_Handler+0xc0>)
  402de2:	4798      	blx	r3

	/* Branch to main function */
	main();
  402de4:	4b09      	ldr	r3, [pc, #36]	; (402e0c <Reset_Handler+0xc4>)
  402de6:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  402de8:	e7fe      	b.n	402de8 <Reset_Handler+0xa0>
  402dea:	bf00      	nop
  402dec:	004411b0 	.word	0x004411b0
  402df0:	20000000 	.word	0x20000000
  402df4:	20001744 	.word	0x20001744
  402df8:	20001744 	.word	0x20001744
  402dfc:	20002f54 	.word	0x20002f54
  402e00:	00400000 	.word	0x00400000
  402e04:	e000ed00 	.word	0xe000ed00
  402e08:	00434745 	.word	0x00434745
  402e0c:	00400b49 	.word	0x00400b49

00402e10 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  402e10:	b480      	push	{r7}
  402e12:	af00      	add	r7, sp, #0
	while (1) {
	}
  402e14:	e7fe      	b.n	402e14 <Dummy_Handler+0x4>
  402e16:	bf00      	nop

00402e18 <SystemCoreClockUpdate>:

/**
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
  402e18:	b480      	push	{r7}
  402e1a:	af00      	add	r7, sp, #0
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  402e1c:	4b5d      	ldr	r3, [pc, #372]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402e1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402e20:	f003 0303 	and.w	r3, r3, #3
  402e24:	2b03      	cmp	r3, #3
  402e26:	f200 8096 	bhi.w	402f56 <SystemCoreClockUpdate+0x13e>
  402e2a:	a201      	add	r2, pc, #4	; (adr r2, 402e30 <SystemCoreClockUpdate+0x18>)
  402e2c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  402e30:	00402e41 	.word	0x00402e41
  402e34:	00402e61 	.word	0x00402e61
  402e38:	00402eab 	.word	0x00402eab
  402e3c:	00402eab 	.word	0x00402eab
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  402e40:	4b55      	ldr	r3, [pc, #340]	; (402f98 <SystemCoreClockUpdate+0x180>)
  402e42:	695b      	ldr	r3, [r3, #20]
  402e44:	f003 0380 	and.w	r3, r3, #128	; 0x80
  402e48:	2b00      	cmp	r3, #0
  402e4a:	d004      	beq.n	402e56 <SystemCoreClockUpdate+0x3e>
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  402e4c:	4b53      	ldr	r3, [pc, #332]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402e4e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  402e52:	601a      	str	r2, [r3, #0]
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
			}
		break;
  402e54:	e080      	b.n	402f58 <SystemCoreClockUpdate+0x140>
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  402e56:	4b51      	ldr	r3, [pc, #324]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402e58:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
  402e5c:	601a      	str	r2, [r3, #0]
			}
		break;
  402e5e:	e07b      	b.n	402f58 <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402e60:	4b4c      	ldr	r3, [pc, #304]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402e62:	6a1b      	ldr	r3, [r3, #32]
  402e64:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  402e68:	2b00      	cmp	r3, #0
  402e6a:	d003      	beq.n	402e74 <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL;
  402e6c:	4b4b      	ldr	r3, [pc, #300]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402e6e:	4a4c      	ldr	r2, [pc, #304]	; (402fa0 <SystemCoreClockUpdate+0x188>)
  402e70:	601a      	str	r2, [r3, #0]
  402e72:	e019      	b.n	402ea8 <SystemCoreClockUpdate+0x90>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402e74:	4b49      	ldr	r3, [pc, #292]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402e76:	4a4b      	ldr	r2, [pc, #300]	; (402fa4 <SystemCoreClockUpdate+0x18c>)
  402e78:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402e7a:	4b46      	ldr	r3, [pc, #280]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402e7c:	6a1b      	ldr	r3, [r3, #32]
  402e7e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402e82:	2b10      	cmp	r3, #16
  402e84:	d008      	beq.n	402e98 <SystemCoreClockUpdate+0x80>
  402e86:	2b20      	cmp	r3, #32
  402e88:	d00a      	beq.n	402ea0 <SystemCoreClockUpdate+0x88>
  402e8a:	2b00      	cmp	r3, #0
  402e8c:	d000      	beq.n	402e90 <SystemCoreClockUpdate+0x78>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
			break;
			
			default:
			break;
  402e8e:	e00b      	b.n	402ea8 <SystemCoreClockUpdate+0x90>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402e90:	4b42      	ldr	r3, [pc, #264]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402e92:	4a44      	ldr	r2, [pc, #272]	; (402fa4 <SystemCoreClockUpdate+0x18c>)
  402e94:	601a      	str	r2, [r3, #0]
			break;
  402e96:	e007      	b.n	402ea8 <SystemCoreClockUpdate+0x90>
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402e98:	4b40      	ldr	r3, [pc, #256]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402e9a:	4a43      	ldr	r2, [pc, #268]	; (402fa8 <SystemCoreClockUpdate+0x190>)
  402e9c:	601a      	str	r2, [r3, #0]
			break;
  402e9e:	e003      	b.n	402ea8 <SystemCoreClockUpdate+0x90>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402ea0:	4b3e      	ldr	r3, [pc, #248]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402ea2:	4a3f      	ldr	r2, [pc, #252]	; (402fa0 <SystemCoreClockUpdate+0x188>)
  402ea4:	601a      	str	r2, [r3, #0]
			break;
  402ea6:	bf00      	nop
			
			default:
			break;
			}
		}
		break;
  402ea8:	e056      	b.n	402f58 <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402eaa:	4b3a      	ldr	r3, [pc, #232]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402eac:	6a1b      	ldr	r3, [r3, #32]
  402eae:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  402eb2:	2b00      	cmp	r3, #0
  402eb4:	d003      	beq.n	402ebe <SystemCoreClockUpdate+0xa6>
				SystemCoreClock = CHIP_FREQ_XTAL;
  402eb6:	4b39      	ldr	r3, [pc, #228]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402eb8:	4a39      	ldr	r2, [pc, #228]	; (402fa0 <SystemCoreClockUpdate+0x188>)
  402eba:	601a      	str	r2, [r3, #0]
  402ebc:	e019      	b.n	402ef2 <SystemCoreClockUpdate+0xda>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402ebe:	4b37      	ldr	r3, [pc, #220]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402ec0:	4a38      	ldr	r2, [pc, #224]	; (402fa4 <SystemCoreClockUpdate+0x18c>)
  402ec2:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402ec4:	4b33      	ldr	r3, [pc, #204]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402ec6:	6a1b      	ldr	r3, [r3, #32]
  402ec8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402ecc:	2b10      	cmp	r3, #16
  402ece:	d008      	beq.n	402ee2 <SystemCoreClockUpdate+0xca>
  402ed0:	2b20      	cmp	r3, #32
  402ed2:	d00a      	beq.n	402eea <SystemCoreClockUpdate+0xd2>
  402ed4:	2b00      	cmp	r3, #0
  402ed6:	d000      	beq.n	402eda <SystemCoreClockUpdate+0xc2>
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
					break;
				
				default:
					break;
  402ed8:	e00b      	b.n	402ef2 <SystemCoreClockUpdate+0xda>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402eda:	4b30      	ldr	r3, [pc, #192]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402edc:	4a31      	ldr	r2, [pc, #196]	; (402fa4 <SystemCoreClockUpdate+0x18c>)
  402ede:	601a      	str	r2, [r3, #0]
					break;
  402ee0:	e007      	b.n	402ef2 <SystemCoreClockUpdate+0xda>
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402ee2:	4b2e      	ldr	r3, [pc, #184]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402ee4:	4a30      	ldr	r2, [pc, #192]	; (402fa8 <SystemCoreClockUpdate+0x190>)
  402ee6:	601a      	str	r2, [r3, #0]
					break;
  402ee8:	e003      	b.n	402ef2 <SystemCoreClockUpdate+0xda>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402eea:	4b2c      	ldr	r3, [pc, #176]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402eec:	4a2c      	ldr	r2, [pc, #176]	; (402fa0 <SystemCoreClockUpdate+0x188>)
  402eee:	601a      	str	r2, [r3, #0]
					break;
  402ef0:	bf00      	nop
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  402ef2:	4b28      	ldr	r3, [pc, #160]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402ef4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402ef6:	f003 0303 	and.w	r3, r3, #3
  402efa:	2b02      	cmp	r3, #2
  402efc:	d115      	bne.n	402f2a <SystemCoreClockUpdate+0x112>
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402efe:	4b25      	ldr	r3, [pc, #148]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402f00:	6a9a      	ldr	r2, [r3, #40]	; 0x28
  402f02:	4b2a      	ldr	r3, [pc, #168]	; (402fac <SystemCoreClockUpdate+0x194>)
  402f04:	4013      	ands	r3, r2
						>> CKGR_PLLAR_MULA_Pos) + 1U);
  402f06:	0c1b      	lsrs	r3, r3, #16
  402f08:	3301      	adds	r3, #1
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402f0a:	4a24      	ldr	r2, [pc, #144]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f0c:	6812      	ldr	r2, [r2, #0]
  402f0e:	fb02 f303 	mul.w	r3, r2, r3
  402f12:	4a22      	ldr	r2, [pc, #136]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f14:	6013      	str	r3, [r2, #0]
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402f16:	4b1f      	ldr	r3, [pc, #124]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402f18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
  402f1a:	b2db      	uxtb	r3, r3
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402f1c:	4a1f      	ldr	r2, [pc, #124]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f1e:	6812      	ldr	r2, [r2, #0]
  402f20:	fbb2 f3f3 	udiv	r3, r2, r3
  402f24:	4a1d      	ldr	r2, [pc, #116]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f26:	6013      	str	r3, [r2, #0]
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
			}
		break;
  402f28:	e016      	b.n	402f58 <SystemCoreClockUpdate+0x140>
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402f2a:	4b1a      	ldr	r3, [pc, #104]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402f2c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  402f2e:	4b1f      	ldr	r3, [pc, #124]	; (402fac <SystemCoreClockUpdate+0x194>)
  402f30:	4013      	ands	r3, r2
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  402f32:	0c1b      	lsrs	r3, r3, #16
  402f34:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402f36:	4a19      	ldr	r2, [pc, #100]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f38:	6812      	ldr	r2, [r2, #0]
  402f3a:	fb02 f303 	mul.w	r3, r2, r3
  402f3e:	4a17      	ldr	r2, [pc, #92]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f40:	6013      	str	r3, [r2, #0]
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402f42:	4b14      	ldr	r3, [pc, #80]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402f44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_DIVB_Pos));
  402f46:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402f48:	4a14      	ldr	r2, [pc, #80]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f4a:	6812      	ldr	r2, [r2, #0]
  402f4c:	fbb2 f3f3 	udiv	r3, r2, r3
  402f50:	4a12      	ldr	r2, [pc, #72]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f52:	6013      	str	r3, [r2, #0]
						>> CKGR_PLLBR_DIVB_Pos));
			}
		break;
  402f54:	e000      	b.n	402f58 <SystemCoreClockUpdate+0x140>
		
	default:
		break;
  402f56:	bf00      	nop
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  402f58:	4b0e      	ldr	r3, [pc, #56]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402f5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402f5c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402f60:	2b70      	cmp	r3, #112	; 0x70
  402f62:	d108      	bne.n	402f76 <SystemCoreClockUpdate+0x15e>
		SystemCoreClock /= 3U;
  402f64:	4b0d      	ldr	r3, [pc, #52]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f66:	681b      	ldr	r3, [r3, #0]
  402f68:	4a11      	ldr	r2, [pc, #68]	; (402fb0 <SystemCoreClockUpdate+0x198>)
  402f6a:	fba2 2303 	umull	r2, r3, r2, r3
  402f6e:	085b      	lsrs	r3, r3, #1
  402f70:	4a0a      	ldr	r2, [pc, #40]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f72:	6013      	str	r3, [r2, #0]
  402f74:	e009      	b.n	402f8a <SystemCoreClockUpdate+0x172>
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402f76:	4b07      	ldr	r3, [pc, #28]	; (402f94 <SystemCoreClockUpdate+0x17c>)
  402f78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402f7a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402f7e:	091a      	lsrs	r2, r3, #4
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  402f80:	4b06      	ldr	r3, [pc, #24]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f82:	681b      	ldr	r3, [r3, #0]
  402f84:	40d3      	lsrs	r3, r2
  402f86:	4a05      	ldr	r2, [pc, #20]	; (402f9c <SystemCoreClockUpdate+0x184>)
  402f88:	6013      	str	r3, [r2, #0]
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
	}
}
  402f8a:	46bd      	mov	sp, r7
  402f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
  402f90:	4770      	bx	lr
  402f92:	bf00      	nop
  402f94:	400e0400 	.word	0x400e0400
  402f98:	400e1410 	.word	0x400e1410
  402f9c:	20000494 	.word	0x20000494
  402fa0:	00b71b00 	.word	0x00b71b00
  402fa4:	003d0900 	.word	0x003d0900
  402fa8:	007a1200 	.word	0x007a1200
  402fac:	07ff0000 	.word	0x07ff0000
  402fb0:	aaaaaaab 	.word	0xaaaaaaab

00402fb4 <system_init_flash>:
 * \brief Initialize flash wait state according to operating frequency.
 *
 * \param ul_clk System clock frequency.
 */
void system_init_flash( uint32_t ul_clk )
{
  402fb4:	b480      	push	{r7}
  402fb6:	b083      	sub	sp, #12
  402fb8:	af00      	add	r7, sp, #0
  402fba:	6078      	str	r0, [r7, #4]
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  402fbc:	687b      	ldr	r3, [r7, #4]
  402fbe:	4a18      	ldr	r2, [pc, #96]	; (403020 <system_init_flash+0x6c>)
  402fc0:	4293      	cmp	r3, r2
  402fc2:	d804      	bhi.n	402fce <system_init_flash+0x1a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402fc4:	4b17      	ldr	r3, [pc, #92]	; (403024 <system_init_flash+0x70>)
  402fc6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  402fca:	601a      	str	r2, [r3, #0]
  402fcc:	e023      	b.n	403016 <system_init_flash+0x62>
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  402fce:	687b      	ldr	r3, [r7, #4]
  402fd0:	4a15      	ldr	r2, [pc, #84]	; (403028 <system_init_flash+0x74>)
  402fd2:	4293      	cmp	r3, r2
  402fd4:	d803      	bhi.n	402fde <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402fd6:	4b13      	ldr	r3, [pc, #76]	; (403024 <system_init_flash+0x70>)
  402fd8:	4a14      	ldr	r2, [pc, #80]	; (40302c <system_init_flash+0x78>)
  402fda:	601a      	str	r2, [r3, #0]
  402fdc:	e01b      	b.n	403016 <system_init_flash+0x62>
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  402fde:	687b      	ldr	r3, [r7, #4]
  402fe0:	4a13      	ldr	r2, [pc, #76]	; (403030 <system_init_flash+0x7c>)
  402fe2:	4293      	cmp	r3, r2
  402fe4:	d803      	bhi.n	402fee <system_init_flash+0x3a>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402fe6:	4b0f      	ldr	r3, [pc, #60]	; (403024 <system_init_flash+0x70>)
  402fe8:	4a12      	ldr	r2, [pc, #72]	; (403034 <system_init_flash+0x80>)
  402fea:	601a      	str	r2, [r3, #0]
  402fec:	e013      	b.n	403016 <system_init_flash+0x62>
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  402fee:	687b      	ldr	r3, [r7, #4]
  402ff0:	4a11      	ldr	r2, [pc, #68]	; (403038 <system_init_flash+0x84>)
  402ff2:	4293      	cmp	r3, r2
  402ff4:	d803      	bhi.n	402ffe <system_init_flash+0x4a>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402ff6:	4b0b      	ldr	r3, [pc, #44]	; (403024 <system_init_flash+0x70>)
  402ff8:	4a10      	ldr	r2, [pc, #64]	; (40303c <system_init_flash+0x88>)
  402ffa:	601a      	str	r2, [r3, #0]
  402ffc:	e00b      	b.n	403016 <system_init_flash+0x62>
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  402ffe:	687b      	ldr	r3, [r7, #4]
  403000:	4a0f      	ldr	r2, [pc, #60]	; (403040 <system_init_flash+0x8c>)
  403002:	4293      	cmp	r3, r2
  403004:	d804      	bhi.n	403010 <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  403006:	4b07      	ldr	r3, [pc, #28]	; (403024 <system_init_flash+0x70>)
  403008:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  40300c:	601a      	str	r2, [r3, #0]
  40300e:	e002      	b.n	403016 <system_init_flash+0x62>
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  403010:	4b04      	ldr	r3, [pc, #16]	; (403024 <system_init_flash+0x70>)
  403012:	4a0c      	ldr	r2, [pc, #48]	; (403044 <system_init_flash+0x90>)
  403014:	601a      	str	r2, [r3, #0]
				}
			}
		}
	}
#endif
}
  403016:	370c      	adds	r7, #12
  403018:	46bd      	mov	sp, r7
  40301a:	f85d 7b04 	ldr.w	r7, [sp], #4
  40301e:	4770      	bx	lr
  403020:	01312cff 	.word	0x01312cff
  403024:	400e0a00 	.word	0x400e0a00
  403028:	026259ff 	.word	0x026259ff
  40302c:	04000100 	.word	0x04000100
  403030:	039386ff 	.word	0x039386ff
  403034:	04000200 	.word	0x04000200
  403038:	04c4b3ff 	.word	0x04c4b3ff
  40303c:	04000300 	.word	0x04000300
  403040:	05f5e0ff 	.word	0x05f5e0ff
  403044:	04000500 	.word	0x04000500

00403048 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
  403048:	b480      	push	{r7}
  40304a:	b085      	sub	sp, #20
  40304c:	af00      	add	r7, sp, #0
  40304e:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;
  403050:	4b10      	ldr	r3, [pc, #64]	; (403094 <_sbrk+0x4c>)
  403052:	60fb      	str	r3, [r7, #12]

	if (heap == NULL) {
  403054:	4b10      	ldr	r3, [pc, #64]	; (403098 <_sbrk+0x50>)
  403056:	681b      	ldr	r3, [r3, #0]
  403058:	2b00      	cmp	r3, #0
  40305a:	d102      	bne.n	403062 <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
  40305c:	4b0e      	ldr	r3, [pc, #56]	; (403098 <_sbrk+0x50>)
  40305e:	4a0f      	ldr	r2, [pc, #60]	; (40309c <_sbrk+0x54>)
  403060:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  403062:	4b0d      	ldr	r3, [pc, #52]	; (403098 <_sbrk+0x50>)
  403064:	681b      	ldr	r3, [r3, #0]
  403066:	60bb      	str	r3, [r7, #8]

	if (((int)prev_heap + incr) > ramend) {
  403068:	68ba      	ldr	r2, [r7, #8]
  40306a:	687b      	ldr	r3, [r7, #4]
  40306c:	441a      	add	r2, r3
  40306e:	68fb      	ldr	r3, [r7, #12]
  403070:	429a      	cmp	r2, r3
  403072:	dd02      	ble.n	40307a <_sbrk+0x32>
		return (caddr_t) -1;	
  403074:	f04f 33ff 	mov.w	r3, #4294967295
  403078:	e006      	b.n	403088 <_sbrk+0x40>
	}

	heap += incr;
  40307a:	4b07      	ldr	r3, [pc, #28]	; (403098 <_sbrk+0x50>)
  40307c:	681a      	ldr	r2, [r3, #0]
  40307e:	687b      	ldr	r3, [r7, #4]
  403080:	4413      	add	r3, r2
  403082:	4a05      	ldr	r2, [pc, #20]	; (403098 <_sbrk+0x50>)
  403084:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
  403086:	68bb      	ldr	r3, [r7, #8]
}
  403088:	4618      	mov	r0, r3
  40308a:	3714      	adds	r7, #20
  40308c:	46bd      	mov	sp, r7
  40308e:	f85d 7b04 	ldr.w	r7, [sp], #4
  403092:	4770      	bx	lr
  403094:	2001fffc 	.word	0x2001fffc
  403098:	20001bc8 	.word	0x20001bc8
  40309c:	20005f58 	.word	0x20005f58

004030a0 <_close>:
{
	return -1;
}

extern int _close(int file)
{
  4030a0:	b480      	push	{r7}
  4030a2:	b083      	sub	sp, #12
  4030a4:	af00      	add	r7, sp, #0
  4030a6:	6078      	str	r0, [r7, #4]
	return -1;
  4030a8:	f04f 33ff 	mov.w	r3, #4294967295
}
  4030ac:	4618      	mov	r0, r3
  4030ae:	370c      	adds	r7, #12
  4030b0:	46bd      	mov	sp, r7
  4030b2:	f85d 7b04 	ldr.w	r7, [sp], #4
  4030b6:	4770      	bx	lr

004030b8 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
  4030b8:	b480      	push	{r7}
  4030ba:	b083      	sub	sp, #12
  4030bc:	af00      	add	r7, sp, #0
  4030be:	6078      	str	r0, [r7, #4]
  4030c0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
  4030c2:	683b      	ldr	r3, [r7, #0]
  4030c4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4030c8:	605a      	str	r2, [r3, #4]

	return 0;
  4030ca:	2300      	movs	r3, #0
}
  4030cc:	4618      	mov	r0, r3
  4030ce:	370c      	adds	r7, #12
  4030d0:	46bd      	mov	sp, r7
  4030d2:	f85d 7b04 	ldr.w	r7, [sp], #4
  4030d6:	4770      	bx	lr

004030d8 <_isatty>:

extern int _isatty(int file)
{
  4030d8:	b480      	push	{r7}
  4030da:	b083      	sub	sp, #12
  4030dc:	af00      	add	r7, sp, #0
  4030de:	6078      	str	r0, [r7, #4]
	return 1;
  4030e0:	2301      	movs	r3, #1
}
  4030e2:	4618      	mov	r0, r3
  4030e4:	370c      	adds	r7, #12
  4030e6:	46bd      	mov	sp, r7
  4030e8:	f85d 7b04 	ldr.w	r7, [sp], #4
  4030ec:	4770      	bx	lr
  4030ee:	bf00      	nop

004030f0 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
  4030f0:	b480      	push	{r7}
  4030f2:	b085      	sub	sp, #20
  4030f4:	af00      	add	r7, sp, #0
  4030f6:	60f8      	str	r0, [r7, #12]
  4030f8:	60b9      	str	r1, [r7, #8]
  4030fa:	607a      	str	r2, [r7, #4]
	return 0;
  4030fc:	2300      	movs	r3, #0
}
  4030fe:	4618      	mov	r0, r3
  403100:	3714      	adds	r7, #20
  403102:	46bd      	mov	sp, r7
  403104:	f85d 7b04 	ldr.w	r7, [sp], #4
  403108:	4770      	bx	lr
  40310a:	bf00      	nop

0040310c <_exit>:

extern void _exit(int status)
{
  40310c:	b580      	push	{r7, lr}
  40310e:	b082      	sub	sp, #8
  403110:	af00      	add	r7, sp, #0
  403112:	6078      	str	r0, [r7, #4]
	printf("Exiting with status %d.\n", status);
  403114:	4802      	ldr	r0, [pc, #8]	; (403120 <_exit+0x14>)
  403116:	6879      	ldr	r1, [r7, #4]
  403118:	4b02      	ldr	r3, [pc, #8]	; (403124 <_exit+0x18>)
  40311a:	4798      	blx	r3

	for (;;);
  40311c:	e7fe      	b.n	40311c <_exit+0x10>
  40311e:	bf00      	nop
  403120:	0043bb68 	.word	0x0043bb68
  403124:	00434795 	.word	0x00434795

00403128 <_kill>:
}

extern void _kill(int pid, int sig)
{
  403128:	b480      	push	{r7}
  40312a:	b083      	sub	sp, #12
  40312c:	af00      	add	r7, sp, #0
  40312e:	6078      	str	r0, [r7, #4]
  403130:	6039      	str	r1, [r7, #0]
	return;
  403132:	bf00      	nop
}
  403134:	370c      	adds	r7, #12
  403136:	46bd      	mov	sp, r7
  403138:	f85d 7b04 	ldr.w	r7, [sp], #4
  40313c:	4770      	bx	lr
  40313e:	bf00      	nop

00403140 <_getpid>:

extern int _getpid(void)
{
  403140:	b480      	push	{r7}
  403142:	af00      	add	r7, sp, #0
	return -1;
  403144:	f04f 33ff 	mov.w	r3, #4294967295
}
  403148:	4618      	mov	r0, r3
  40314a:	46bd      	mov	sp, r7
  40314c:	f85d 7b04 	ldr.w	r7, [sp], #4
  403150:	4770      	bx	lr
  403152:	bf00      	nop

00403154 <get_color>:
#endif
};

/* return current element color */
static inline char get_color (const zbar_decoder_t *dcode)
{
  403154:	b480      	push	{r7}
  403156:	b083      	sub	sp, #12
  403158:	af00      	add	r7, sp, #0
  40315a:	6078      	str	r0, [r7, #4]
    return(dcode->idx & 1);
  40315c:	687b      	ldr	r3, [r7, #4]
  40315e:	781b      	ldrb	r3, [r3, #0]
  403160:	f003 0301 	and.w	r3, r3, #1
  403164:	b2db      	uxtb	r3, r3
}
  403166:	4618      	mov	r0, r3
  403168:	370c      	adds	r7, #12
  40316a:	46bd      	mov	sp, r7
  40316c:	f85d 7b04 	ldr.w	r7, [sp], #4
  403170:	4770      	bx	lr
  403172:	bf00      	nop

00403174 <get_width>:

/* retrieve i-th previous element width */
static inline unsigned get_width (const zbar_decoder_t *dcode,
                                  unsigned char offset)
{
  403174:	b480      	push	{r7}
  403176:	b083      	sub	sp, #12
  403178:	af00      	add	r7, sp, #0
  40317a:	6078      	str	r0, [r7, #4]
  40317c:	460b      	mov	r3, r1
  40317e:	70fb      	strb	r3, [r7, #3]
    return(dcode->w[(dcode->idx - offset) & (DECODE_WINDOW - 1)]);
  403180:	687b      	ldr	r3, [r7, #4]
  403182:	781b      	ldrb	r3, [r3, #0]
  403184:	461a      	mov	r2, r3
  403186:	78fb      	ldrb	r3, [r7, #3]
  403188:	1ad3      	subs	r3, r2, r3
  40318a:	f003 030f 	and.w	r3, r3, #15
  40318e:	687a      	ldr	r2, [r7, #4]
  403190:	009b      	lsls	r3, r3, #2
  403192:	4413      	add	r3, r2
  403194:	685b      	ldr	r3, [r3, #4]
}
  403196:	4618      	mov	r0, r3
  403198:	370c      	adds	r7, #12
  40319a:	46bd      	mov	sp, r7
  40319c:	f85d 7b04 	ldr.w	r7, [sp], #4
  4031a0:	4770      	bx	lr
  4031a2:	bf00      	nop

004031a4 <decode_e>:
 *   - n should be > 3
 */
static inline int decode_e (unsigned e,
                            unsigned s,
                            unsigned n)
{
  4031a4:	b480      	push	{r7}
  4031a6:	b087      	sub	sp, #28
  4031a8:	af00      	add	r7, sp, #0
  4031aa:	60f8      	str	r0, [r7, #12]
  4031ac:	60b9      	str	r1, [r7, #8]
  4031ae:	607a      	str	r2, [r7, #4]
    /* result is encoded number of units - 2
     * (for use as zero based index)
     * or -1 if invalid
     */
    unsigned char E = ((e * n * 2 + 1) / s - 3) / 2;
  4031b0:	68fb      	ldr	r3, [r7, #12]
  4031b2:	687a      	ldr	r2, [r7, #4]
  4031b4:	fb02 f303 	mul.w	r3, r2, r3
  4031b8:	005b      	lsls	r3, r3, #1
  4031ba:	1c5a      	adds	r2, r3, #1
  4031bc:	68bb      	ldr	r3, [r7, #8]
  4031be:	fbb2 f3f3 	udiv	r3, r2, r3
  4031c2:	3b03      	subs	r3, #3
  4031c4:	085b      	lsrs	r3, r3, #1
  4031c6:	75fb      	strb	r3, [r7, #23]
    return((E >= n - 3) ? -1 : E);
  4031c8:	7dfa      	ldrb	r2, [r7, #23]
  4031ca:	687b      	ldr	r3, [r7, #4]
  4031cc:	3b03      	subs	r3, #3
  4031ce:	429a      	cmp	r2, r3
  4031d0:	d201      	bcs.n	4031d6 <decode_e+0x32>
  4031d2:	7dfb      	ldrb	r3, [r7, #23]
  4031d4:	e001      	b.n	4031da <decode_e+0x36>
  4031d6:	f04f 33ff 	mov.w	r3, #4294967295
}
  4031da:	4618      	mov	r0, r3
  4031dc:	371c      	adds	r7, #28
  4031de:	46bd      	mov	sp, r7
  4031e0:	f85d 7b04 	ldr.w	r7, [sp], #4
  4031e4:	4770      	bx	lr
  4031e6:	bf00      	nop

004031e8 <acquire_lock>:
}

/* acquire shared state lock */
static inline char acquire_lock (zbar_decoder_t *dcode,
                                 zbar_symbol_type_t req)
{
  4031e8:	b480      	push	{r7}
  4031ea:	b083      	sub	sp, #12
  4031ec:	af00      	add	r7, sp, #0
  4031ee:	6078      	str	r0, [r7, #4]
  4031f0:	460b      	mov	r3, r1
  4031f2:	807b      	strh	r3, [r7, #2]
    if(dcode->lock) {
  4031f4:	687b      	ldr	r3, [r7, #4]
  4031f6:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  4031fa:	2b00      	cmp	r3, #0
  4031fc:	d002      	beq.n	403204 <acquire_lock+0x1c>
        dbprintf(2, " [locked %d]\n", dcode->lock);
  4031fe:	bf00      	nop
        return(1);
  403200:	2301      	movs	r3, #1
  403202:	e004      	b.n	40320e <acquire_lock+0x26>
    }
    dcode->lock = req;
  403204:	687b      	ldr	r3, [r7, #4]
  403206:	887a      	ldrh	r2, [r7, #2]
  403208:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    return(0);
  40320c:	2300      	movs	r3, #0
}
  40320e:	4618      	mov	r0, r3
  403210:	370c      	adds	r7, #12
  403212:	46bd      	mov	sp, r7
  403214:	f85d 7b04 	ldr.w	r7, [sp], #4
  403218:	4770      	bx	lr
  40321a:	bf00      	nop

0040321c <release_lock>:

/* check and release shared state lock */
static inline char release_lock (zbar_decoder_t *dcode,
                                 zbar_symbol_type_t req)
{
  40321c:	b590      	push	{r4, r7, lr}
  40321e:	b087      	sub	sp, #28
  403220:	af04      	add	r7, sp, #16
  403222:	6078      	str	r0, [r7, #4]
  403224:	460b      	mov	r3, r1
  403226:	807b      	strh	r3, [r7, #2]
    zassert(dcode->lock == req, 1, "lock=%d req=%d\n",
  403228:	687b      	ldr	r3, [r7, #4]
  40322a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  40322e:	887a      	ldrh	r2, [r7, #2]
  403230:	429a      	cmp	r2, r3
  403232:	d016      	beq.n	403262 <release_lock+0x46>
  403234:	4b0f      	ldr	r3, [pc, #60]	; (403274 <release_lock+0x58>)
  403236:	681b      	ldr	r3, [r3, #0]
  403238:	68d9      	ldr	r1, [r3, #12]
  40323a:	687b      	ldr	r3, [r7, #4]
  40323c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  403240:	4618      	mov	r0, r3
  403242:	887b      	ldrh	r3, [r7, #2]
  403244:	4a0c      	ldr	r2, [pc, #48]	; (403278 <release_lock+0x5c>)
  403246:	9200      	str	r2, [sp, #0]
  403248:	4a0c      	ldr	r2, [pc, #48]	; (40327c <release_lock+0x60>)
  40324a:	9201      	str	r2, [sp, #4]
  40324c:	9002      	str	r0, [sp, #8]
  40324e:	9303      	str	r3, [sp, #12]
  403250:	4608      	mov	r0, r1
  403252:	490b      	ldr	r1, [pc, #44]	; (403280 <release_lock+0x64>)
  403254:	4a0b      	ldr	r2, [pc, #44]	; (403284 <release_lock+0x68>)
  403256:	f240 1307 	movw	r3, #263	; 0x107
  40325a:	4c0b      	ldr	r4, [pc, #44]	; (403288 <release_lock+0x6c>)
  40325c:	47a0      	blx	r4
  40325e:	2301      	movs	r3, #1
  403260:	e004      	b.n	40326c <release_lock+0x50>
            dcode->lock, req);
    dcode->lock = 0;
  403262:	687b      	ldr	r3, [r7, #4]
  403264:	2200      	movs	r2, #0
  403266:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    return(0);
  40326a:	2300      	movs	r3, #0
}
  40326c:	4618      	mov	r0, r3
  40326e:	370c      	adds	r7, #12
  403270:	46bd      	mov	sp, r7
  403272:	bd90      	pop	{r4, r7, pc}
  403274:	200012d0 	.word	0x200012d0
  403278:	0043c140 	.word	0x0043c140
  40327c:	0043bbf0 	.word	0x0043bbf0
  403280:	0043bb84 	.word	0x0043bb84
  403284:	0043bbc0 	.word	0x0043bbc0
  403288:	0043413d 	.word	0x0043413d

0040328c <size_buf>:

/* ensure output buffer has sufficient allocation for request */
static inline char size_buf (zbar_decoder_t *dcode,
                             unsigned len)
{
  40328c:	b580      	push	{r7, lr}
  40328e:	b084      	sub	sp, #16
  403290:	af00      	add	r7, sp, #0
  403292:	6078      	str	r0, [r7, #4]
  403294:	6039      	str	r1, [r7, #0]
    unsigned char *buf;
    if(len <= BUFFER_MIN)
  403296:	683b      	ldr	r3, [r7, #0]
  403298:	2b20      	cmp	r3, #32
  40329a:	d801      	bhi.n	4032a0 <size_buf+0x14>
        return(0);
  40329c:	2300      	movs	r3, #0
  40329e:	e031      	b.n	403304 <size_buf+0x78>
    if(len < dcode->buf_alloc)
  4032a0:	687b      	ldr	r3, [r7, #4]
  4032a2:	6d5a      	ldr	r2, [r3, #84]	; 0x54
  4032a4:	683b      	ldr	r3, [r7, #0]
  4032a6:	429a      	cmp	r2, r3
  4032a8:	d901      	bls.n	4032ae <size_buf+0x22>
        /* FIXME size reduction heuristic? */
        return(0);
  4032aa:	2300      	movs	r3, #0
  4032ac:	e02a      	b.n	403304 <size_buf+0x78>
    if(len > BUFFER_MAX)
  4032ae:	683b      	ldr	r3, [r7, #0]
  4032b0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  4032b4:	d901      	bls.n	4032ba <size_buf+0x2e>
        return(1);
  4032b6:	2301      	movs	r3, #1
  4032b8:	e024      	b.n	403304 <size_buf+0x78>
    if(len < dcode->buf_alloc + BUFFER_INCR) {
  4032ba:	687b      	ldr	r3, [r7, #4]
  4032bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
  4032be:	f103 0210 	add.w	r2, r3, #16
  4032c2:	683b      	ldr	r3, [r7, #0]
  4032c4:	429a      	cmp	r2, r3
  4032c6:	d90a      	bls.n	4032de <size_buf+0x52>
        len = dcode->buf_alloc + BUFFER_INCR;
  4032c8:	687b      	ldr	r3, [r7, #4]
  4032ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
  4032cc:	3310      	adds	r3, #16
  4032ce:	603b      	str	r3, [r7, #0]
        if(len > BUFFER_MAX)
  4032d0:	683b      	ldr	r3, [r7, #0]
  4032d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  4032d6:	d902      	bls.n	4032de <size_buf+0x52>
            len = BUFFER_MAX;
  4032d8:	f44f 7380 	mov.w	r3, #256	; 0x100
  4032dc:	603b      	str	r3, [r7, #0]
    }
    buf = realloc(dcode->buf, len);
  4032de:	687b      	ldr	r3, [r7, #4]
  4032e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  4032e2:	4618      	mov	r0, r3
  4032e4:	6839      	ldr	r1, [r7, #0]
  4032e6:	4b09      	ldr	r3, [pc, #36]	; (40330c <size_buf+0x80>)
  4032e8:	4798      	blx	r3
  4032ea:	60f8      	str	r0, [r7, #12]
    if(!buf)
  4032ec:	68fb      	ldr	r3, [r7, #12]
  4032ee:	2b00      	cmp	r3, #0
  4032f0:	d101      	bne.n	4032f6 <size_buf+0x6a>
        return(1);
  4032f2:	2301      	movs	r3, #1
  4032f4:	e006      	b.n	403304 <size_buf+0x78>
    dcode->buf = buf;
  4032f6:	687b      	ldr	r3, [r7, #4]
  4032f8:	68fa      	ldr	r2, [r7, #12]
  4032fa:	65da      	str	r2, [r3, #92]	; 0x5c
    dcode->buf_alloc = len;
  4032fc:	687b      	ldr	r3, [r7, #4]
  4032fe:	683a      	ldr	r2, [r7, #0]
  403300:	655a      	str	r2, [r3, #84]	; 0x54
    return(0);
  403302:	2300      	movs	r3, #0
}
  403304:	4618      	mov	r0, r3
  403306:	3710      	adds	r7, #16
  403308:	46bd      	mov	sp, r7
  40330a:	bd80      	pop	{r7, pc}
  40330c:	00435179 	.word	0x00435179

00403310 <decode_lo>:
    0x0f, 0x1f, 0x23, 0xff, 0x45, 0x6f, 0xff, 0xff,     /* 32 [47] */
    0xf7, 0xff, 0xf8, 0x9f, 0xff, 0xff, 0xff, 0xff,     /* 33 */
};

static inline signed char decode_lo (int sig)
{
  403310:	b590      	push	{r4, r7, lr}
  403312:	b08b      	sub	sp, #44	; 0x2c
  403314:	af06      	add	r7, sp, #24
  403316:	6078      	str	r0, [r7, #4]
    unsigned char offset = (((sig >> 1) & 0x01) |
  403318:	687b      	ldr	r3, [r7, #4]
  40331a:	105b      	asrs	r3, r3, #1
  40331c:	b2db      	uxtb	r3, r3
  40331e:	f003 0301 	and.w	r3, r3, #1
  403322:	b2da      	uxtb	r2, r3
                            ((sig >> 3) & 0x06) |
  403324:	687b      	ldr	r3, [r7, #4]
  403326:	10db      	asrs	r3, r3, #3
    0xf7, 0xff, 0xf8, 0x9f, 0xff, 0xff, 0xff, 0xff,     /* 33 */
};

static inline signed char decode_lo (int sig)
{
    unsigned char offset = (((sig >> 1) & 0x01) |
  403328:	b2db      	uxtb	r3, r3
  40332a:	f003 0306 	and.w	r3, r3, #6
  40332e:	b2db      	uxtb	r3, r3
  403330:	4313      	orrs	r3, r2
  403332:	b2da      	uxtb	r2, r3
                            ((sig >> 3) & 0x06) |
                            ((sig >> 5) & 0x18) |
  403334:	687b      	ldr	r3, [r7, #4]
  403336:	115b      	asrs	r3, r3, #5
    0xf7, 0xff, 0xf8, 0x9f, 0xff, 0xff, 0xff, 0xff,     /* 33 */
};

static inline signed char decode_lo (int sig)
{
    unsigned char offset = (((sig >> 1) & 0x01) |
  403338:	b2db      	uxtb	r3, r3
  40333a:	f003 0318 	and.w	r3, r3, #24
  40333e:	b2db      	uxtb	r3, r3
  403340:	4313      	orrs	r3, r2
  403342:	b2da      	uxtb	r2, r3
                            ((sig >> 3) & 0x06) |
                            ((sig >> 5) & 0x18) |
                            ((sig >> 7) & 0x60));
  403344:	687b      	ldr	r3, [r7, #4]
  403346:	11db      	asrs	r3, r3, #7
    0xf7, 0xff, 0xf8, 0x9f, 0xff, 0xff, 0xff, 0xff,     /* 33 */
};

static inline signed char decode_lo (int sig)
{
    unsigned char offset = (((sig >> 1) & 0x01) |
  403348:	b2db      	uxtb	r3, r3
  40334a:	f003 0360 	and.w	r3, r3, #96	; 0x60
  40334e:	b2db      	uxtb	r3, r3
  403350:	4313      	orrs	r3, r2
  403352:	b2db      	uxtb	r3, r3
  403354:	73bb      	strb	r3, [r7, #14]
                            ((sig >> 3) & 0x06) |
                            ((sig >> 5) & 0x18) |
                            ((sig >> 7) & 0x60));
    unsigned char idx = lo_offset[offset];
  403356:	7bbb      	ldrb	r3, [r7, #14]
  403358:	4a32      	ldr	r2, [pc, #200]	; (403424 <decode_lo+0x114>)
  40335a:	5cd3      	ldrb	r3, [r2, r3]
  40335c:	73fb      	strb	r3, [r7, #15]
    unsigned char base, c;

    if(sig & 1)
  40335e:	687b      	ldr	r3, [r7, #4]
  403360:	f003 0301 	and.w	r3, r3, #1
  403364:	2b00      	cmp	r3, #0
  403366:	d004      	beq.n	403372 <decode_lo+0x62>
        idx &= 0xf;
  403368:	7bfb      	ldrb	r3, [r7, #15]
  40336a:	f003 030f 	and.w	r3, r3, #15
  40336e:	73fb      	strb	r3, [r7, #15]
  403370:	e002      	b.n	403378 <decode_lo+0x68>
    else
        idx >>= 4;
  403372:	7bfb      	ldrb	r3, [r7, #15]
  403374:	091b      	lsrs	r3, r3, #4
  403376:	73fb      	strb	r3, [r7, #15]
    if(idx == 0xf)
  403378:	7bfb      	ldrb	r3, [r7, #15]
  40337a:	2b0f      	cmp	r3, #15
  40337c:	d101      	bne.n	403382 <decode_lo+0x72>
        return(-1);
  40337e:	23ff      	movs	r3, #255	; 0xff
  403380:	e04b      	b.n	40341a <decode_lo+0x10a>

    base = (sig >> 11) | ((sig >> 9) & 1);
  403382:	687b      	ldr	r3, [r7, #4]
  403384:	12db      	asrs	r3, r3, #11
  403386:	b2da      	uxtb	r2, r3
  403388:	687b      	ldr	r3, [r7, #4]
  40338a:	125b      	asrs	r3, r3, #9
  40338c:	b2db      	uxtb	r3, r3
  40338e:	f003 0301 	and.w	r3, r3, #1
  403392:	b2db      	uxtb	r3, r3
  403394:	4313      	orrs	r3, r2
  403396:	b2db      	uxtb	r3, r3
  403398:	737b      	strb	r3, [r7, #13]
    zassert(base < 8, -1, "sig=%x offset=%x idx=%x base=%x\n",
  40339a:	7b7b      	ldrb	r3, [r7, #13]
  40339c:	2b07      	cmp	r3, #7
  40339e:	d916      	bls.n	4033ce <decode_lo+0xbe>
  4033a0:	4b21      	ldr	r3, [pc, #132]	; (403428 <decode_lo+0x118>)
  4033a2:	681b      	ldr	r3, [r3, #0]
  4033a4:	68dc      	ldr	r4, [r3, #12]
  4033a6:	7bb9      	ldrb	r1, [r7, #14]
  4033a8:	7bfa      	ldrb	r2, [r7, #15]
  4033aa:	7b7b      	ldrb	r3, [r7, #13]
  4033ac:	481f      	ldr	r0, [pc, #124]	; (40342c <decode_lo+0x11c>)
  4033ae:	9000      	str	r0, [sp, #0]
  4033b0:	481f      	ldr	r0, [pc, #124]	; (403430 <decode_lo+0x120>)
  4033b2:	9001      	str	r0, [sp, #4]
  4033b4:	6878      	ldr	r0, [r7, #4]
  4033b6:	9002      	str	r0, [sp, #8]
  4033b8:	9103      	str	r1, [sp, #12]
  4033ba:	9204      	str	r2, [sp, #16]
  4033bc:	9305      	str	r3, [sp, #20]
  4033be:	4620      	mov	r0, r4
  4033c0:	491c      	ldr	r1, [pc, #112]	; (403434 <decode_lo+0x124>)
  4033c2:	4a1d      	ldr	r2, [pc, #116]	; (403438 <decode_lo+0x128>)
  4033c4:	2386      	movs	r3, #134	; 0x86
  4033c6:	4c1d      	ldr	r4, [pc, #116]	; (40343c <decode_lo+0x12c>)
  4033c8:	47a0      	blx	r4
  4033ca:	23ff      	movs	r3, #255	; 0xff
  4033cc:	e025      	b.n	40341a <decode_lo+0x10a>
            sig, offset, idx, base);
    idx += lo_base[base];
  4033ce:	7b7b      	ldrb	r3, [r7, #13]
  4033d0:	4a1b      	ldr	r2, [pc, #108]	; (403440 <decode_lo+0x130>)
  4033d2:	5cd2      	ldrb	r2, [r2, r3]
  4033d4:	7bfb      	ldrb	r3, [r7, #15]
  4033d6:	4413      	add	r3, r2
  4033d8:	73fb      	strb	r3, [r7, #15]

    zassert(idx <= 0x50, -1, "sig=%x offset=%x base=%x idx=%x\n",
  4033da:	7bfb      	ldrb	r3, [r7, #15]
  4033dc:	2b50      	cmp	r3, #80	; 0x50
  4033de:	d916      	bls.n	40340e <decode_lo+0xfe>
  4033e0:	4b11      	ldr	r3, [pc, #68]	; (403428 <decode_lo+0x118>)
  4033e2:	681b      	ldr	r3, [r3, #0]
  4033e4:	68dc      	ldr	r4, [r3, #12]
  4033e6:	7bb9      	ldrb	r1, [r7, #14]
  4033e8:	7b7a      	ldrb	r2, [r7, #13]
  4033ea:	7bfb      	ldrb	r3, [r7, #15]
  4033ec:	480f      	ldr	r0, [pc, #60]	; (40342c <decode_lo+0x11c>)
  4033ee:	9000      	str	r0, [sp, #0]
  4033f0:	4814      	ldr	r0, [pc, #80]	; (403444 <decode_lo+0x134>)
  4033f2:	9001      	str	r0, [sp, #4]
  4033f4:	6878      	ldr	r0, [r7, #4]
  4033f6:	9002      	str	r0, [sp, #8]
  4033f8:	9103      	str	r1, [sp, #12]
  4033fa:	9204      	str	r2, [sp, #16]
  4033fc:	9305      	str	r3, [sp, #20]
  4033fe:	4620      	mov	r0, r4
  403400:	4911      	ldr	r1, [pc, #68]	; (403448 <decode_lo+0x138>)
  403402:	4a0d      	ldr	r2, [pc, #52]	; (403438 <decode_lo+0x128>)
  403404:	238a      	movs	r3, #138	; 0x8a
  403406:	4c0d      	ldr	r4, [pc, #52]	; (40343c <decode_lo+0x12c>)
  403408:	47a0      	blx	r4
  40340a:	23ff      	movs	r3, #255	; 0xff
  40340c:	e005      	b.n	40341a <decode_lo+0x10a>
            sig, offset, base, idx);
    c = characters[idx];
  40340e:	7bfb      	ldrb	r3, [r7, #15]
  403410:	4a0e      	ldr	r2, [pc, #56]	; (40344c <decode_lo+0x13c>)
  403412:	5cd3      	ldrb	r3, [r2, r3]
  403414:	733b      	strb	r3, [r7, #12]
    dbprintf(2, " %02x(%x(%02x)/%x(%02x)) => %02x",
  403416:	bf00      	nop
             idx, base, lo_base[base], offset, lo_offset[offset],
             (unsigned char)c);
    return(c);
  403418:	7b3b      	ldrb	r3, [r7, #12]
  40341a:	b25b      	sxtb	r3, r3
}
  40341c:	4618      	mov	r0, r3
  40341e:	3714      	adds	r7, #20
  403420:	46bd      	mov	sp, r7
  403422:	bd90      	pop	{r4, r7, pc}
  403424:	0043c06c 	.word	0x0043c06c
  403428:	200012d0 	.word	0x200012d0
  40342c:	0043c104 	.word	0x0043c104
  403430:	0043bc7c 	.word	0x0043bc7c
  403434:	0043bc04 	.word	0x0043bc04
  403438:	0043bc54 	.word	0x0043bc54
  40343c:	0043413d 	.word	0x0043413d
  403440:	0043c064 	.word	0x0043c064
  403444:	0043bcd8 	.word	0x0043bcd8
  403448:	0043bc88 	.word	0x0043bc88
  40344c:	0043bff8 	.word	0x0043bff8

00403450 <decode_hi>:

static inline signed char decode_hi (int sig)
{
  403450:	b480      	push	{r7}
  403452:	b085      	sub	sp, #20
  403454:	af00      	add	r7, sp, #0
  403456:	6078      	str	r0, [r7, #4]
    unsigned char rev = (sig & 0x4400) != 0;
  403458:	687b      	ldr	r3, [r7, #4]
  40345a:	f403 4388 	and.w	r3, r3, #17408	; 0x4400
  40345e:	2b00      	cmp	r3, #0
  403460:	bf14      	ite	ne
  403462:	2301      	movne	r3, #1
  403464:	2300      	moveq	r3, #0
  403466:	b2db      	uxtb	r3, r3
  403468:	73fb      	strb	r3, [r7, #15]
    unsigned char idx, c;
    if(rev)
  40346a:	7bfb      	ldrb	r3, [r7, #15]
  40346c:	2b00      	cmp	r3, #0
  40346e:	d012      	beq.n	403496 <decode_hi+0x46>
        sig = (((sig >> 12) & 0x000f) |
  403470:	687b      	ldr	r3, [r7, #4]
  403472:	131b      	asrs	r3, r3, #12
  403474:	f003 020f 	and.w	r2, r3, #15
               ((sig >>  4) & 0x00f0) |
  403478:	687b      	ldr	r3, [r7, #4]
  40347a:	111b      	asrs	r3, r3, #4
  40347c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
static inline signed char decode_hi (int sig)
{
    unsigned char rev = (sig & 0x4400) != 0;
    unsigned char idx, c;
    if(rev)
        sig = (((sig >> 12) & 0x000f) |
  403480:	431a      	orrs	r2, r3
               ((sig >>  4) & 0x00f0) |
               ((sig <<  4) & 0x0f00) |
  403482:	687b      	ldr	r3, [r7, #4]
  403484:	011b      	lsls	r3, r3, #4
  403486:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
{
    unsigned char rev = (sig & 0x4400) != 0;
    unsigned char idx, c;
    if(rev)
        sig = (((sig >> 12) & 0x000f) |
               ((sig >>  4) & 0x00f0) |
  40348a:	431a      	orrs	r2, r3
               ((sig <<  4) & 0x0f00) |
               ((sig << 12) & 0xf000));
  40348c:	687b      	ldr	r3, [r7, #4]
  40348e:	031b      	lsls	r3, r3, #12
  403490:	b29b      	uxth	r3, r3
static inline signed char decode_hi (int sig)
{
    unsigned char rev = (sig & 0x4400) != 0;
    unsigned char idx, c;
    if(rev)
        sig = (((sig >> 12) & 0x000f) |
  403492:	4313      	orrs	r3, r2
  403494:	607b      	str	r3, [r7, #4]
               ((sig >>  4) & 0x00f0) |
               ((sig <<  4) & 0x0f00) |
               ((sig << 12) & 0xf000));
    dbprintf(2, " rev=%x", rev != 0);
  403496:	bf00      	nop

    switch(sig) {
  403498:	687b      	ldr	r3, [r7, #4]
  40349a:	f240 3241 	movw	r2, #833	; 0x341
  40349e:	4293      	cmp	r3, r2
  4034a0:	d04c      	beq.n	40353c <decode_hi+0xec>
  4034a2:	f240 3241 	movw	r2, #833	; 0x341
  4034a6:	4293      	cmp	r3, r2
  4034a8:	dc14      	bgt.n	4034d4 <decode_hi+0x84>
  4034aa:	2b34      	cmp	r3, #52	; 0x34
  4034ac:	d03a      	beq.n	403524 <decode_hi+0xd4>
  4034ae:	2b34      	cmp	r3, #52	; 0x34
  4034b0:	dc04      	bgt.n	4034bc <decode_hi+0x6c>
  4034b2:	2b14      	cmp	r3, #20
  4034b4:	d030      	beq.n	403518 <decode_hi+0xc8>
  4034b6:	2b25      	cmp	r3, #37	; 0x25
  4034b8:	d031      	beq.n	40351e <decode_hi+0xce>
  4034ba:	e059      	b.n	403570 <decode_hi+0x120>
  4034bc:	f240 1243 	movw	r2, #323	; 0x143
  4034c0:	4293      	cmp	r3, r2
  4034c2:	d035      	beq.n	403530 <decode_hi+0xe0>
  4034c4:	f240 2243 	movw	r2, #579	; 0x243
  4034c8:	4293      	cmp	r3, r2
  4034ca:	d034      	beq.n	403536 <decode_hi+0xe6>
  4034cc:	f5b3 7f9a 	cmp.w	r3, #308	; 0x134
  4034d0:	d02b      	beq.n	40352a <decode_hi+0xda>
  4034d2:	e04d      	b.n	403570 <decode_hi+0x120>
  4034d4:	f241 1234 	movw	r2, #4404	; 0x1134
  4034d8:	4293      	cmp	r3, r2
  4034da:	d03b      	beq.n	403554 <decode_hi+0x104>
  4034dc:	f241 1234 	movw	r2, #4404	; 0x1134
  4034e0:	4293      	cmp	r3, r2
  4034e2:	dc0c      	bgt.n	4034fe <decode_hi+0xae>
  4034e4:	f241 0224 	movw	r2, #4132	; 0x1024
  4034e8:	4293      	cmp	r3, r2
  4034ea:	d02d      	beq.n	403548 <decode_hi+0xf8>
  4034ec:	f241 1214 	movw	r2, #4372	; 0x1114
  4034f0:	4293      	cmp	r3, r2
  4034f2:	d02c      	beq.n	40354e <decode_hi+0xfe>
  4034f4:	f240 3252 	movw	r2, #850	; 0x352
  4034f8:	4293      	cmp	r3, r2
  4034fa:	d022      	beq.n	403542 <decode_hi+0xf2>
  4034fc:	e038      	b.n	403570 <decode_hi+0x120>
  4034fe:	f241 2243 	movw	r2, #4675	; 0x1243
  403502:	4293      	cmp	r3, r2
  403504:	d02c      	beq.n	403560 <decode_hi+0x110>
  403506:	f241 4241 	movw	r2, #5185	; 0x1441
  40350a:	4293      	cmp	r3, r2
  40350c:	d02b      	beq.n	403566 <decode_hi+0x116>
  40350e:	f241 2242 	movw	r2, #4674	; 0x1242
  403512:	4293      	cmp	r3, r2
  403514:	d021      	beq.n	40355a <decode_hi+0x10a>
  403516:	e02b      	b.n	403570 <decode_hi+0x120>
    case 0x0014: idx = 0x0; break;
  403518:	2300      	movs	r3, #0
  40351a:	73bb      	strb	r3, [r7, #14]
  40351c:	e02a      	b.n	403574 <decode_hi+0x124>
    case 0x0025: idx = 0x1; break;
  40351e:	2301      	movs	r3, #1
  403520:	73bb      	strb	r3, [r7, #14]
  403522:	e027      	b.n	403574 <decode_hi+0x124>
    case 0x0034: idx = 0x2; break;
  403524:	2302      	movs	r3, #2
  403526:	73bb      	strb	r3, [r7, #14]
  403528:	e024      	b.n	403574 <decode_hi+0x124>
    case 0x0134: idx = 0x3; break;
  40352a:	2303      	movs	r3, #3
  40352c:	73bb      	strb	r3, [r7, #14]
  40352e:	e021      	b.n	403574 <decode_hi+0x124>
    case 0x0143: idx = 0x4; break;
  403530:	2304      	movs	r3, #4
  403532:	73bb      	strb	r3, [r7, #14]
  403534:	e01e      	b.n	403574 <decode_hi+0x124>
    case 0x0243: idx = 0x5; break;
  403536:	2305      	movs	r3, #5
  403538:	73bb      	strb	r3, [r7, #14]
  40353a:	e01b      	b.n	403574 <decode_hi+0x124>
    case 0x0341: idx = 0x6; break;
  40353c:	2306      	movs	r3, #6
  40353e:	73bb      	strb	r3, [r7, #14]
  403540:	e018      	b.n	403574 <decode_hi+0x124>
    case 0x0352: idx = 0x7; break;
  403542:	2307      	movs	r3, #7
  403544:	73bb      	strb	r3, [r7, #14]
  403546:	e015      	b.n	403574 <decode_hi+0x124>
    case 0x1024: idx = 0x8; break;
  403548:	2308      	movs	r3, #8
  40354a:	73bb      	strb	r3, [r7, #14]
  40354c:	e012      	b.n	403574 <decode_hi+0x124>
    case 0x1114: idx = 0x9; break;
  40354e:	2309      	movs	r3, #9
  403550:	73bb      	strb	r3, [r7, #14]
  403552:	e00f      	b.n	403574 <decode_hi+0x124>
    case 0x1134: idx = 0xa; break;
  403554:	230a      	movs	r3, #10
  403556:	73bb      	strb	r3, [r7, #14]
  403558:	e00c      	b.n	403574 <decode_hi+0x124>
    case 0x1242: idx = 0xb; break;
  40355a:	230b      	movs	r3, #11
  40355c:	73bb      	strb	r3, [r7, #14]
  40355e:	e009      	b.n	403574 <decode_hi+0x124>
    case 0x1243: idx = 0xc; break;
  403560:	230c      	movs	r3, #12
  403562:	73bb      	strb	r3, [r7, #14]
  403564:	e006      	b.n	403574 <decode_hi+0x124>
    case 0x1441: idx = 0xd; rev = 0; break;
  403566:	230d      	movs	r3, #13
  403568:	73bb      	strb	r3, [r7, #14]
  40356a:	2300      	movs	r3, #0
  40356c:	73fb      	strb	r3, [r7, #15]
  40356e:	e001      	b.n	403574 <decode_hi+0x124>
    default: return(-1);
  403570:	23ff      	movs	r3, #255	; 0xff
  403572:	e00c      	b.n	40358e <decode_hi+0x13e>
    }
    if(rev)
  403574:	7bfb      	ldrb	r3, [r7, #15]
  403576:	2b00      	cmp	r3, #0
  403578:	d002      	beq.n	403580 <decode_hi+0x130>
        idx += 0xe;
  40357a:	7bbb      	ldrb	r3, [r7, #14]
  40357c:	330e      	adds	r3, #14
  40357e:	73bb      	strb	r3, [r7, #14]
    c = characters[0x51 + idx];
  403580:	7bbb      	ldrb	r3, [r7, #14]
  403582:	3351      	adds	r3, #81	; 0x51
  403584:	4a05      	ldr	r2, [pc, #20]	; (40359c <decode_hi+0x14c>)
  403586:	5cd3      	ldrb	r3, [r2, r3]
  403588:	737b      	strb	r3, [r7, #13]
    dbprintf(2, " %02x => %02x", idx, c);
  40358a:	bf00      	nop
    return(c);
  40358c:	7b7b      	ldrb	r3, [r7, #13]
  40358e:	b25b      	sxtb	r3, r3
}
  403590:	4618      	mov	r0, r3
  403592:	3714      	adds	r7, #20
  403594:	46bd      	mov	sp, r7
  403596:	f85d 7b04 	ldr.w	r7, [sp], #4
  40359a:	4770      	bx	lr
  40359c:	0043bff8 	.word	0x0043bff8

004035a0 <calc_check>:

static inline unsigned char calc_check (unsigned char c)
{
  4035a0:	b480      	push	{r7}
  4035a2:	b083      	sub	sp, #12
  4035a4:	af00      	add	r7, sp, #0
  4035a6:	4603      	mov	r3, r0
  4035a8:	71fb      	strb	r3, [r7, #7]
    if(!(c & 0x80))
  4035aa:	79fb      	ldrb	r3, [r7, #7]
  4035ac:	b25b      	sxtb	r3, r3
  4035ae:	2b00      	cmp	r3, #0
  4035b0:	db01      	blt.n	4035b6 <calc_check+0x16>
        return(0x18);
  4035b2:	2318      	movs	r3, #24
  4035b4:	e020      	b.n	4035f8 <calc_check+0x58>
    c &= 0x7f;
  4035b6:	79fb      	ldrb	r3, [r7, #7]
  4035b8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  4035bc:	71fb      	strb	r3, [r7, #7]
    if(c < 0x3d)
  4035be:	79fb      	ldrb	r3, [r7, #7]
  4035c0:	2b3c      	cmp	r3, #60	; 0x3c
  4035c2:	d809      	bhi.n	4035d8 <calc_check+0x38>
        return((c < 0x30 && c != 0x17) ? 0x10 : 0x20);
  4035c4:	79fb      	ldrb	r3, [r7, #7]
  4035c6:	2b2f      	cmp	r3, #47	; 0x2f
  4035c8:	d804      	bhi.n	4035d4 <calc_check+0x34>
  4035ca:	79fb      	ldrb	r3, [r7, #7]
  4035cc:	2b17      	cmp	r3, #23
  4035ce:	d001      	beq.n	4035d4 <calc_check+0x34>
  4035d0:	2310      	movs	r3, #16
  4035d2:	e011      	b.n	4035f8 <calc_check+0x58>
  4035d4:	2320      	movs	r3, #32
  4035d6:	e00f      	b.n	4035f8 <calc_check+0x58>
    if(c < 0x50)
  4035d8:	79fb      	ldrb	r3, [r7, #7]
  4035da:	2b4f      	cmp	r3, #79	; 0x4f
  4035dc:	d806      	bhi.n	4035ec <calc_check+0x4c>
        return((c == 0x4d) ? 0x20 : 0x10);
  4035de:	79fb      	ldrb	r3, [r7, #7]
  4035e0:	2b4d      	cmp	r3, #77	; 0x4d
  4035e2:	d101      	bne.n	4035e8 <calc_check+0x48>
  4035e4:	2320      	movs	r3, #32
  4035e6:	e007      	b.n	4035f8 <calc_check+0x58>
  4035e8:	2310      	movs	r3, #16
  4035ea:	e005      	b.n	4035f8 <calc_check+0x58>
    return((c < 0x67) ? 0x20 : 0x10);
  4035ec:	79fb      	ldrb	r3, [r7, #7]
  4035ee:	2b66      	cmp	r3, #102	; 0x66
  4035f0:	d801      	bhi.n	4035f6 <calc_check+0x56>
  4035f2:	2320      	movs	r3, #32
  4035f4:	e000      	b.n	4035f8 <calc_check+0x58>
  4035f6:	2310      	movs	r3, #16
}
  4035f8:	4618      	mov	r0, r3
  4035fa:	370c      	adds	r7, #12
  4035fc:	46bd      	mov	sp, r7
  4035fe:	f85d 7b04 	ldr.w	r7, [sp], #4
  403602:	4770      	bx	lr

00403604 <decode6>:

static inline signed char decode6 (zbar_decoder_t *dcode)
{
  403604:	b5b0      	push	{r4, r5, r7, lr}
  403606:	b088      	sub	sp, #32
  403608:	af00      	add	r7, sp, #0
  40360a:	6078      	str	r0, [r7, #4]
    int sig;
    signed char c, chk;
    unsigned bars;

    /* build edge signature of character */
    unsigned s = dcode->code128.s6;
  40360c:	687b      	ldr	r3, [r7, #4]
  40360e:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
  403612:	61fb      	str	r3, [r7, #28]

    dbprintf(2, " s=%d", s);
  403614:	bf00      	nop
    if(s < 5)
  403616:	69fb      	ldr	r3, [r7, #28]
  403618:	2b04      	cmp	r3, #4
  40361a:	d801      	bhi.n	403620 <decode6+0x1c>
        return(-1);
  40361c:	23ff      	movs	r3, #255	; 0xff
  40361e:	e105      	b.n	40382c <decode6+0x228>
    /* calculate similar edge measurements */
    sig = (get_color(dcode) == ZBAR_BAR)
  403620:	6878      	ldr	r0, [r7, #4]
  403622:	4b85      	ldr	r3, [pc, #532]	; (403838 <decode6+0x234>)
  403624:	4798      	blx	r3
  403626:	4603      	mov	r3, r0
        ? ((decode_e(get_width(dcode, 0) + get_width(dcode, 1), s, 11) << 12) |
           (decode_e(get_width(dcode, 1) + get_width(dcode, 2), s, 11) << 8) |
           (decode_e(get_width(dcode, 2) + get_width(dcode, 3), s, 11) << 4) |
           (decode_e(get_width(dcode, 3) + get_width(dcode, 4), s, 11)))
        : ((decode_e(get_width(dcode, 5) + get_width(dcode, 4), s, 11) << 12) |
  403628:	2b01      	cmp	r3, #1
  40362a:	d14a      	bne.n	4036c2 <decode6+0xbe>
    dbprintf(2, " s=%d", s);
    if(s < 5)
        return(-1);
    /* calculate similar edge measurements */
    sig = (get_color(dcode) == ZBAR_BAR)
        ? ((decode_e(get_width(dcode, 0) + get_width(dcode, 1), s, 11) << 12) |
  40362c:	6878      	ldr	r0, [r7, #4]
  40362e:	2100      	movs	r1, #0
  403630:	4b82      	ldr	r3, [pc, #520]	; (40383c <decode6+0x238>)
  403632:	4798      	blx	r3
  403634:	4604      	mov	r4, r0
  403636:	6878      	ldr	r0, [r7, #4]
  403638:	2101      	movs	r1, #1
  40363a:	4b80      	ldr	r3, [pc, #512]	; (40383c <decode6+0x238>)
  40363c:	4798      	blx	r3
  40363e:	4603      	mov	r3, r0
  403640:	4423      	add	r3, r4
  403642:	4618      	mov	r0, r3
  403644:	69f9      	ldr	r1, [r7, #28]
  403646:	220b      	movs	r2, #11
  403648:	4b7d      	ldr	r3, [pc, #500]	; (403840 <decode6+0x23c>)
  40364a:	4798      	blx	r3
  40364c:	4603      	mov	r3, r0
  40364e:	031c      	lsls	r4, r3, #12
           (decode_e(get_width(dcode, 1) + get_width(dcode, 2), s, 11) << 8) |
  403650:	6878      	ldr	r0, [r7, #4]
  403652:	2101      	movs	r1, #1
  403654:	4b79      	ldr	r3, [pc, #484]	; (40383c <decode6+0x238>)
  403656:	4798      	blx	r3
  403658:	4605      	mov	r5, r0
  40365a:	6878      	ldr	r0, [r7, #4]
  40365c:	2102      	movs	r1, #2
  40365e:	4b77      	ldr	r3, [pc, #476]	; (40383c <decode6+0x238>)
  403660:	4798      	blx	r3
  403662:	4603      	mov	r3, r0
  403664:	442b      	add	r3, r5
  403666:	4618      	mov	r0, r3
  403668:	69f9      	ldr	r1, [r7, #28]
  40366a:	220b      	movs	r2, #11
  40366c:	4b74      	ldr	r3, [pc, #464]	; (403840 <decode6+0x23c>)
  40366e:	4798      	blx	r3
  403670:	4603      	mov	r3, r0
  403672:	021b      	lsls	r3, r3, #8
    dbprintf(2, " s=%d", s);
    if(s < 5)
        return(-1);
    /* calculate similar edge measurements */
    sig = (get_color(dcode) == ZBAR_BAR)
        ? ((decode_e(get_width(dcode, 0) + get_width(dcode, 1), s, 11) << 12) |
  403674:	431c      	orrs	r4, r3
           (decode_e(get_width(dcode, 1) + get_width(dcode, 2), s, 11) << 8) |
           (decode_e(get_width(dcode, 2) + get_width(dcode, 3), s, 11) << 4) |
  403676:	6878      	ldr	r0, [r7, #4]
  403678:	2102      	movs	r1, #2
  40367a:	4b70      	ldr	r3, [pc, #448]	; (40383c <decode6+0x238>)
  40367c:	4798      	blx	r3
  40367e:	4605      	mov	r5, r0
  403680:	6878      	ldr	r0, [r7, #4]
  403682:	2103      	movs	r1, #3
  403684:	4b6d      	ldr	r3, [pc, #436]	; (40383c <decode6+0x238>)
  403686:	4798      	blx	r3
  403688:	4603      	mov	r3, r0
  40368a:	442b      	add	r3, r5
  40368c:	4618      	mov	r0, r3
  40368e:	69f9      	ldr	r1, [r7, #28]
  403690:	220b      	movs	r2, #11
  403692:	4b6b      	ldr	r3, [pc, #428]	; (403840 <decode6+0x23c>)
  403694:	4798      	blx	r3
  403696:	4603      	mov	r3, r0
  403698:	011b      	lsls	r3, r3, #4
    if(s < 5)
        return(-1);
    /* calculate similar edge measurements */
    sig = (get_color(dcode) == ZBAR_BAR)
        ? ((decode_e(get_width(dcode, 0) + get_width(dcode, 1), s, 11) << 12) |
           (decode_e(get_width(dcode, 1) + get_width(dcode, 2), s, 11) << 8) |
  40369a:	431c      	orrs	r4, r3
           (decode_e(get_width(dcode, 2) + get_width(dcode, 3), s, 11) << 4) |
           (decode_e(get_width(dcode, 3) + get_width(dcode, 4), s, 11)))
  40369c:	6878      	ldr	r0, [r7, #4]
  40369e:	2103      	movs	r1, #3
  4036a0:	4b66      	ldr	r3, [pc, #408]	; (40383c <decode6+0x238>)
  4036a2:	4798      	blx	r3
  4036a4:	4605      	mov	r5, r0
  4036a6:	6878      	ldr	r0, [r7, #4]
  4036a8:	2104      	movs	r1, #4
  4036aa:	4b64      	ldr	r3, [pc, #400]	; (40383c <decode6+0x238>)
  4036ac:	4798      	blx	r3
  4036ae:	4603      	mov	r3, r0
  4036b0:	442b      	add	r3, r5
  4036b2:	4618      	mov	r0, r3
  4036b4:	69f9      	ldr	r1, [r7, #28]
  4036b6:	220b      	movs	r2, #11
  4036b8:	4b61      	ldr	r3, [pc, #388]	; (403840 <decode6+0x23c>)
  4036ba:	4798      	blx	r3
  4036bc:	4603      	mov	r3, r0
        : ((decode_e(get_width(dcode, 5) + get_width(dcode, 4), s, 11) << 12) |
  4036be:	4323      	orrs	r3, r4
  4036c0:	e049      	b.n	403756 <decode6+0x152>
  4036c2:	6878      	ldr	r0, [r7, #4]
  4036c4:	2105      	movs	r1, #5
  4036c6:	4b5d      	ldr	r3, [pc, #372]	; (40383c <decode6+0x238>)
  4036c8:	4798      	blx	r3
  4036ca:	4604      	mov	r4, r0
  4036cc:	6878      	ldr	r0, [r7, #4]
  4036ce:	2104      	movs	r1, #4
  4036d0:	4b5a      	ldr	r3, [pc, #360]	; (40383c <decode6+0x238>)
  4036d2:	4798      	blx	r3
  4036d4:	4603      	mov	r3, r0
  4036d6:	4423      	add	r3, r4
  4036d8:	4618      	mov	r0, r3
  4036da:	69f9      	ldr	r1, [r7, #28]
  4036dc:	220b      	movs	r2, #11
  4036de:	4b58      	ldr	r3, [pc, #352]	; (403840 <decode6+0x23c>)
  4036e0:	4798      	blx	r3
  4036e2:	4603      	mov	r3, r0
  4036e4:	031c      	lsls	r4, r3, #12
           (decode_e(get_width(dcode, 4) + get_width(dcode, 3), s, 11) << 8) |
  4036e6:	6878      	ldr	r0, [r7, #4]
  4036e8:	2104      	movs	r1, #4
  4036ea:	4b54      	ldr	r3, [pc, #336]	; (40383c <decode6+0x238>)
  4036ec:	4798      	blx	r3
  4036ee:	4605      	mov	r5, r0
  4036f0:	6878      	ldr	r0, [r7, #4]
  4036f2:	2103      	movs	r1, #3
  4036f4:	4b51      	ldr	r3, [pc, #324]	; (40383c <decode6+0x238>)
  4036f6:	4798      	blx	r3
  4036f8:	4603      	mov	r3, r0
  4036fa:	442b      	add	r3, r5
  4036fc:	4618      	mov	r0, r3
  4036fe:	69f9      	ldr	r1, [r7, #28]
  403700:	220b      	movs	r2, #11
  403702:	4b4f      	ldr	r3, [pc, #316]	; (403840 <decode6+0x23c>)
  403704:	4798      	blx	r3
  403706:	4603      	mov	r3, r0
  403708:	021b      	lsls	r3, r3, #8
    sig = (get_color(dcode) == ZBAR_BAR)
        ? ((decode_e(get_width(dcode, 0) + get_width(dcode, 1), s, 11) << 12) |
           (decode_e(get_width(dcode, 1) + get_width(dcode, 2), s, 11) << 8) |
           (decode_e(get_width(dcode, 2) + get_width(dcode, 3), s, 11) << 4) |
           (decode_e(get_width(dcode, 3) + get_width(dcode, 4), s, 11)))
        : ((decode_e(get_width(dcode, 5) + get_width(dcode, 4), s, 11) << 12) |
  40370a:	431c      	orrs	r4, r3
           (decode_e(get_width(dcode, 4) + get_width(dcode, 3), s, 11) << 8) |
           (decode_e(get_width(dcode, 3) + get_width(dcode, 2), s, 11) << 4) |
  40370c:	6878      	ldr	r0, [r7, #4]
  40370e:	2103      	movs	r1, #3
  403710:	4b4a      	ldr	r3, [pc, #296]	; (40383c <decode6+0x238>)
  403712:	4798      	blx	r3
  403714:	4605      	mov	r5, r0
  403716:	6878      	ldr	r0, [r7, #4]
  403718:	2102      	movs	r1, #2
  40371a:	4b48      	ldr	r3, [pc, #288]	; (40383c <decode6+0x238>)
  40371c:	4798      	blx	r3
  40371e:	4603      	mov	r3, r0
  403720:	442b      	add	r3, r5
  403722:	4618      	mov	r0, r3
  403724:	69f9      	ldr	r1, [r7, #28]
  403726:	220b      	movs	r2, #11
  403728:	4b45      	ldr	r3, [pc, #276]	; (403840 <decode6+0x23c>)
  40372a:	4798      	blx	r3
  40372c:	4603      	mov	r3, r0
  40372e:	011b      	lsls	r3, r3, #4
        ? ((decode_e(get_width(dcode, 0) + get_width(dcode, 1), s, 11) << 12) |
           (decode_e(get_width(dcode, 1) + get_width(dcode, 2), s, 11) << 8) |
           (decode_e(get_width(dcode, 2) + get_width(dcode, 3), s, 11) << 4) |
           (decode_e(get_width(dcode, 3) + get_width(dcode, 4), s, 11)))
        : ((decode_e(get_width(dcode, 5) + get_width(dcode, 4), s, 11) << 12) |
           (decode_e(get_width(dcode, 4) + get_width(dcode, 3), s, 11) << 8) |
  403730:	431c      	orrs	r4, r3
           (decode_e(get_width(dcode, 3) + get_width(dcode, 2), s, 11) << 4) |
           (decode_e(get_width(dcode, 2) + get_width(dcode, 1), s, 11)));
  403732:	6878      	ldr	r0, [r7, #4]
  403734:	2102      	movs	r1, #2
  403736:	4b41      	ldr	r3, [pc, #260]	; (40383c <decode6+0x238>)
  403738:	4798      	blx	r3
  40373a:	4605      	mov	r5, r0
  40373c:	6878      	ldr	r0, [r7, #4]
  40373e:	2101      	movs	r1, #1
  403740:	4b3e      	ldr	r3, [pc, #248]	; (40383c <decode6+0x238>)
  403742:	4798      	blx	r3
  403744:	4603      	mov	r3, r0
  403746:	442b      	add	r3, r5
  403748:	4618      	mov	r0, r3
  40374a:	69f9      	ldr	r1, [r7, #28]
  40374c:	220b      	movs	r2, #11
  40374e:	4b3c      	ldr	r3, [pc, #240]	; (403840 <decode6+0x23c>)
  403750:	4798      	blx	r3
  403752:	4603      	mov	r3, r0
    sig = (get_color(dcode) == ZBAR_BAR)
        ? ((decode_e(get_width(dcode, 0) + get_width(dcode, 1), s, 11) << 12) |
           (decode_e(get_width(dcode, 1) + get_width(dcode, 2), s, 11) << 8) |
           (decode_e(get_width(dcode, 2) + get_width(dcode, 3), s, 11) << 4) |
           (decode_e(get_width(dcode, 3) + get_width(dcode, 4), s, 11)))
        : ((decode_e(get_width(dcode, 5) + get_width(dcode, 4), s, 11) << 12) |
  403754:	4323      	orrs	r3, r4

    dbprintf(2, " s=%d", s);
    if(s < 5)
        return(-1);
    /* calculate similar edge measurements */
    sig = (get_color(dcode) == ZBAR_BAR)
  403756:	61bb      	str	r3, [r7, #24]
           (decode_e(get_width(dcode, 3) + get_width(dcode, 4), s, 11)))
        : ((decode_e(get_width(dcode, 5) + get_width(dcode, 4), s, 11) << 12) |
           (decode_e(get_width(dcode, 4) + get_width(dcode, 3), s, 11) << 8) |
           (decode_e(get_width(dcode, 3) + get_width(dcode, 2), s, 11) << 4) |
           (decode_e(get_width(dcode, 2) + get_width(dcode, 1), s, 11)));
    if(sig < 0)
  403758:	69bb      	ldr	r3, [r7, #24]
  40375a:	2b00      	cmp	r3, #0
  40375c:	da01      	bge.n	403762 <decode6+0x15e>
        return(-1);
  40375e:	23ff      	movs	r3, #255	; 0xff
  403760:	e064      	b.n	40382c <decode6+0x228>
    dbprintf(2, " sig=%04x", sig);
  403762:	bf00      	nop
    /* lookup edge signature */
    c = (sig & 0x4444) ? decode_hi(sig) : decode_lo(sig);
  403764:	69ba      	ldr	r2, [r7, #24]
  403766:	f244 4344 	movw	r3, #17476	; 0x4444
  40376a:	4013      	ands	r3, r2
  40376c:	2b00      	cmp	r3, #0
  40376e:	d004      	beq.n	40377a <decode6+0x176>
  403770:	69b8      	ldr	r0, [r7, #24]
  403772:	4b34      	ldr	r3, [pc, #208]	; (403844 <decode6+0x240>)
  403774:	4798      	blx	r3
  403776:	4603      	mov	r3, r0
  403778:	e003      	b.n	403782 <decode6+0x17e>
  40377a:	69b8      	ldr	r0, [r7, #24]
  40377c:	4b32      	ldr	r3, [pc, #200]	; (403848 <decode6+0x244>)
  40377e:	4798      	blx	r3
  403780:	4603      	mov	r3, r0
  403782:	75fb      	strb	r3, [r7, #23]
    if(c == -1)
  403784:	f997 3017 	ldrsb.w	r3, [r7, #23]
  403788:	f1b3 3fff 	cmp.w	r3, #4294967295
  40378c:	d101      	bne.n	403792 <decode6+0x18e>
        return(-1);
  40378e:	23ff      	movs	r3, #255	; 0xff
  403790:	e04c      	b.n	40382c <decode6+0x228>

    /* character validation */
    bars = (get_color(dcode) == ZBAR_BAR)
  403792:	6878      	ldr	r0, [r7, #4]
  403794:	4b28      	ldr	r3, [pc, #160]	; (403838 <decode6+0x234>)
  403796:	4798      	blx	r3
  403798:	4603      	mov	r3, r0
        ? (get_width(dcode, 0) + get_width(dcode, 2) + get_width(dcode, 4))
        : (get_width(dcode, 1) + get_width(dcode, 3) + get_width(dcode, 5));
  40379a:	2b01      	cmp	r3, #1
  40379c:	d111      	bne.n	4037c2 <decode6+0x1be>
    if(c == -1)
        return(-1);

    /* character validation */
    bars = (get_color(dcode) == ZBAR_BAR)
        ? (get_width(dcode, 0) + get_width(dcode, 2) + get_width(dcode, 4))
  40379e:	6878      	ldr	r0, [r7, #4]
  4037a0:	2100      	movs	r1, #0
  4037a2:	4b26      	ldr	r3, [pc, #152]	; (40383c <decode6+0x238>)
  4037a4:	4798      	blx	r3
  4037a6:	4604      	mov	r4, r0
  4037a8:	6878      	ldr	r0, [r7, #4]
  4037aa:	2102      	movs	r1, #2
  4037ac:	4b23      	ldr	r3, [pc, #140]	; (40383c <decode6+0x238>)
  4037ae:	4798      	blx	r3
  4037b0:	4603      	mov	r3, r0
  4037b2:	441c      	add	r4, r3
  4037b4:	6878      	ldr	r0, [r7, #4]
  4037b6:	2104      	movs	r1, #4
  4037b8:	4b20      	ldr	r3, [pc, #128]	; (40383c <decode6+0x238>)
  4037ba:	4798      	blx	r3
  4037bc:	4603      	mov	r3, r0
        : (get_width(dcode, 1) + get_width(dcode, 3) + get_width(dcode, 5));
  4037be:	4423      	add	r3, r4
  4037c0:	e010      	b.n	4037e4 <decode6+0x1e0>
  4037c2:	6878      	ldr	r0, [r7, #4]
  4037c4:	2101      	movs	r1, #1
  4037c6:	4b1d      	ldr	r3, [pc, #116]	; (40383c <decode6+0x238>)
  4037c8:	4798      	blx	r3
  4037ca:	4604      	mov	r4, r0
  4037cc:	6878      	ldr	r0, [r7, #4]
  4037ce:	2103      	movs	r1, #3
  4037d0:	4b1a      	ldr	r3, [pc, #104]	; (40383c <decode6+0x238>)
  4037d2:	4798      	blx	r3
  4037d4:	4603      	mov	r3, r0
  4037d6:	441c      	add	r4, r3
  4037d8:	6878      	ldr	r0, [r7, #4]
  4037da:	2105      	movs	r1, #5
  4037dc:	4b17      	ldr	r3, [pc, #92]	; (40383c <decode6+0x238>)
  4037de:	4798      	blx	r3
  4037e0:	4603      	mov	r3, r0
  4037e2:	4423      	add	r3, r4
    c = (sig & 0x4444) ? decode_hi(sig) : decode_lo(sig);
    if(c == -1)
        return(-1);

    /* character validation */
    bars = (get_color(dcode) == ZBAR_BAR)
  4037e4:	613b      	str	r3, [r7, #16]
        ? (get_width(dcode, 0) + get_width(dcode, 2) + get_width(dcode, 4))
        : (get_width(dcode, 1) + get_width(dcode, 3) + get_width(dcode, 5));
    bars = bars * 11 * 4 / s;
  4037e6:	693b      	ldr	r3, [r7, #16]
  4037e8:	222c      	movs	r2, #44	; 0x2c
  4037ea:	fb02 f203 	mul.w	r2, r2, r3
  4037ee:	69fb      	ldr	r3, [r7, #28]
  4037f0:	fbb2 f3f3 	udiv	r3, r2, r3
  4037f4:	613b      	str	r3, [r7, #16]
    chk = calc_check(c);
  4037f6:	7dfb      	ldrb	r3, [r7, #23]
  4037f8:	4618      	mov	r0, r3
  4037fa:	4b14      	ldr	r3, [pc, #80]	; (40384c <decode6+0x248>)
  4037fc:	4798      	blx	r3
  4037fe:	4603      	mov	r3, r0
  403800:	73fb      	strb	r3, [r7, #15]
    dbprintf(2, " bars=%d chk=%d", bars, chk);
  403802:	bf00      	nop
    if(chk - 7 > bars || bars > chk + 7)
  403804:	f997 300f 	ldrsb.w	r3, [r7, #15]
  403808:	3b07      	subs	r3, #7
  40380a:	461a      	mov	r2, r3
  40380c:	693b      	ldr	r3, [r7, #16]
  40380e:	429a      	cmp	r2, r3
  403810:	d806      	bhi.n	403820 <decode6+0x21c>
  403812:	f997 300f 	ldrsb.w	r3, [r7, #15]
  403816:	3307      	adds	r3, #7
  403818:	461a      	mov	r2, r3
  40381a:	693b      	ldr	r3, [r7, #16]
  40381c:	429a      	cmp	r2, r3
  40381e:	d201      	bcs.n	403824 <decode6+0x220>
        return(-1);
  403820:	23ff      	movs	r3, #255	; 0xff
  403822:	e003      	b.n	40382c <decode6+0x228>

    return(c & 0x7f);
  403824:	7dfb      	ldrb	r3, [r7, #23]
  403826:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  40382a:	b2db      	uxtb	r3, r3
  40382c:	b25b      	sxtb	r3, r3
}
  40382e:	4618      	mov	r0, r3
  403830:	3720      	adds	r7, #32
  403832:	46bd      	mov	sp, r7
  403834:	bdb0      	pop	{r4, r5, r7, pc}
  403836:	bf00      	nop
  403838:	00403155 	.word	0x00403155
  40383c:	00403175 	.word	0x00403175
  403840:	004031a5 	.word	0x004031a5
  403844:	00403451 	.word	0x00403451
  403848:	00403311 	.word	0x00403311
  40384c:	004035a1 	.word	0x004035a1

00403850 <validate_checksum>:

static inline unsigned char validate_checksum (zbar_decoder_t *dcode)
{
  403850:	b5b0      	push	{r4, r5, r7, lr}
  403852:	b090      	sub	sp, #64	; 0x40
  403854:	af08      	add	r7, sp, #32
  403856:	6078      	str	r0, [r7, #4]
    unsigned idx, sum, i, acc = 0;
  403858:	2300      	movs	r3, #0
  40385a:	617b      	str	r3, [r7, #20]
    unsigned char check, err;

    code128_decoder_t *dcode128 = &dcode->code128;
  40385c:	687b      	ldr	r3, [r7, #4]
  40385e:	f503 7382 	add.w	r3, r3, #260	; 0x104
  403862:	613b      	str	r3, [r7, #16]
    if(dcode128->character < 3)
  403864:	693b      	ldr	r3, [r7, #16]
  403866:	881b      	ldrh	r3, [r3, #0]
  403868:	f343 130b 	sbfx	r3, r3, #4, #12
  40386c:	b29b      	uxth	r3, r3
  40386e:	b21b      	sxth	r3, r3
  403870:	2b02      	cmp	r3, #2
  403872:	dc01      	bgt.n	403878 <validate_checksum+0x28>
        return(1);
  403874:	2301      	movs	r3, #1
  403876:	e0d8      	b.n	403a2a <validate_checksum+0x1da>

    /* add in irregularly weighted start character */
    idx = (dcode128->direction) ? dcode128->character - 1 : 0;
  403878:	693b      	ldr	r3, [r7, #16]
  40387a:	781b      	ldrb	r3, [r3, #0]
  40387c:	f003 0301 	and.w	r3, r3, #1
  403880:	b2db      	uxtb	r3, r3
  403882:	2b00      	cmp	r3, #0
  403884:	d007      	beq.n	403896 <validate_checksum+0x46>
  403886:	693b      	ldr	r3, [r7, #16]
  403888:	881b      	ldrh	r3, [r3, #0]
  40388a:	f343 130b 	sbfx	r3, r3, #4, #12
  40388e:	b29b      	uxth	r3, r3
  403890:	b21b      	sxth	r3, r3
  403892:	3b01      	subs	r3, #1
  403894:	e000      	b.n	403898 <validate_checksum+0x48>
  403896:	2300      	movs	r3, #0
  403898:	60fb      	str	r3, [r7, #12]
    sum = dcode->buf[idx];
  40389a:	687b      	ldr	r3, [r7, #4]
  40389c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  40389e:	68fb      	ldr	r3, [r7, #12]
  4038a0:	4413      	add	r3, r2
  4038a2:	781b      	ldrb	r3, [r3, #0]
  4038a4:	61fb      	str	r3, [r7, #28]
    if(sum >= 103)
  4038a6:	69fb      	ldr	r3, [r7, #28]
  4038a8:	2b66      	cmp	r3, #102	; 0x66
  4038aa:	d902      	bls.n	4038b2 <validate_checksum+0x62>
        sum -= 103;
  4038ac:	69fb      	ldr	r3, [r7, #28]
  4038ae:	3b67      	subs	r3, #103	; 0x67
  4038b0:	61fb      	str	r3, [r7, #28]

    /* calculate sum in reverse to avoid multiply operations */
    for(i = dcode128->character - 3; i; i--) {
  4038b2:	693b      	ldr	r3, [r7, #16]
  4038b4:	881b      	ldrh	r3, [r3, #0]
  4038b6:	f343 130b 	sbfx	r3, r3, #4, #12
  4038ba:	b29b      	uxth	r3, r3
  4038bc:	b21b      	sxth	r3, r3
  4038be:	3b03      	subs	r3, #3
  4038c0:	61bb      	str	r3, [r7, #24]
  4038c2:	e089      	b.n	4039d8 <validate_checksum+0x188>
        zassert(sum < 103, -1, "dir=%x i=%x sum=%x acc=%x %s\n",
  4038c4:	69fb      	ldr	r3, [r7, #28]
  4038c6:	2b66      	cmp	r3, #102	; 0x66
  4038c8:	d929      	bls.n	40391e <validate_checksum+0xce>
  4038ca:	4b5a      	ldr	r3, [pc, #360]	; (403a34 <validate_checksum+0x1e4>)
  4038cc:	681b      	ldr	r3, [r3, #0]
  4038ce:	68dc      	ldr	r4, [r3, #12]
  4038d0:	693b      	ldr	r3, [r7, #16]
  4038d2:	781b      	ldrb	r3, [r3, #0]
  4038d4:	f3c3 0300 	ubfx	r3, r3, #0, #1
  4038d8:	b2db      	uxtb	r3, r3
  4038da:	461d      	mov	r5, r3
  4038dc:	687b      	ldr	r3, [r7, #4]
  4038de:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  4038e0:	693b      	ldr	r3, [r7, #16]
  4038e2:	881b      	ldrh	r3, [r3, #0]
  4038e4:	f343 130b 	sbfx	r3, r3, #4, #12
  4038e8:	b29b      	uxth	r3, r3
  4038ea:	b21b      	sxth	r3, r3
  4038ec:	4610      	mov	r0, r2
  4038ee:	4619      	mov	r1, r3
  4038f0:	4b51      	ldr	r3, [pc, #324]	; (403a38 <validate_checksum+0x1e8>)
  4038f2:	4798      	blx	r3
  4038f4:	4602      	mov	r2, r0
  4038f6:	4b51      	ldr	r3, [pc, #324]	; (403a3c <validate_checksum+0x1ec>)
  4038f8:	9300      	str	r3, [sp, #0]
  4038fa:	4b51      	ldr	r3, [pc, #324]	; (403a40 <validate_checksum+0x1f0>)
  4038fc:	9301      	str	r3, [sp, #4]
  4038fe:	9502      	str	r5, [sp, #8]
  403900:	69bb      	ldr	r3, [r7, #24]
  403902:	9303      	str	r3, [sp, #12]
  403904:	69fb      	ldr	r3, [r7, #28]
  403906:	9304      	str	r3, [sp, #16]
  403908:	697b      	ldr	r3, [r7, #20]
  40390a:	9305      	str	r3, [sp, #20]
  40390c:	9206      	str	r2, [sp, #24]
  40390e:	4620      	mov	r0, r4
  403910:	494c      	ldr	r1, [pc, #304]	; (403a44 <validate_checksum+0x1f4>)
  403912:	4a4d      	ldr	r2, [pc, #308]	; (403a48 <validate_checksum+0x1f8>)
  403914:	23ff      	movs	r3, #255	; 0xff
  403916:	4c4d      	ldr	r4, [pc, #308]	; (403a4c <validate_checksum+0x1fc>)
  403918:	47a0      	blx	r4
  40391a:	23ff      	movs	r3, #255	; 0xff
  40391c:	e085      	b.n	403a2a <validate_checksum+0x1da>
                dcode128->direction, i, sum, acc,
                _zbar_decoder_buf_dump(dcode->buf, dcode128->character));
        idx = (dcode128->direction) ? dcode128->character - 1 - i : i;
  40391e:	693b      	ldr	r3, [r7, #16]
  403920:	781b      	ldrb	r3, [r3, #0]
  403922:	f003 0301 	and.w	r3, r3, #1
  403926:	b2db      	uxtb	r3, r3
  403928:	2b00      	cmp	r3, #0
  40392a:	d009      	beq.n	403940 <validate_checksum+0xf0>
  40392c:	693b      	ldr	r3, [r7, #16]
  40392e:	881b      	ldrh	r3, [r3, #0]
  403930:	f343 130b 	sbfx	r3, r3, #4, #12
  403934:	b29b      	uxth	r3, r3
  403936:	b21a      	sxth	r2, r3
  403938:	69bb      	ldr	r3, [r7, #24]
  40393a:	1ad3      	subs	r3, r2, r3
  40393c:	3b01      	subs	r3, #1
  40393e:	e000      	b.n	403942 <validate_checksum+0xf2>
  403940:	69bb      	ldr	r3, [r7, #24]
  403942:	60fb      	str	r3, [r7, #12]
        acc += dcode->buf[idx];
  403944:	687b      	ldr	r3, [r7, #4]
  403946:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403948:	68fb      	ldr	r3, [r7, #12]
  40394a:	4413      	add	r3, r2
  40394c:	781b      	ldrb	r3, [r3, #0]
  40394e:	461a      	mov	r2, r3
  403950:	697b      	ldr	r3, [r7, #20]
  403952:	4413      	add	r3, r2
  403954:	617b      	str	r3, [r7, #20]
        if(acc >= 103)
  403956:	697b      	ldr	r3, [r7, #20]
  403958:	2b66      	cmp	r3, #102	; 0x66
  40395a:	d902      	bls.n	403962 <validate_checksum+0x112>
            acc -= 103;
  40395c:	697b      	ldr	r3, [r7, #20]
  40395e:	3b67      	subs	r3, #103	; 0x67
  403960:	617b      	str	r3, [r7, #20]
        zassert(acc < 103, -1, "dir=%x i=%x sum=%x acc=%x %s\n",
  403962:	697b      	ldr	r3, [r7, #20]
  403964:	2b66      	cmp	r3, #102	; 0x66
  403966:	d92a      	bls.n	4039be <validate_checksum+0x16e>
  403968:	4b32      	ldr	r3, [pc, #200]	; (403a34 <validate_checksum+0x1e4>)
  40396a:	681b      	ldr	r3, [r3, #0]
  40396c:	68dc      	ldr	r4, [r3, #12]
  40396e:	693b      	ldr	r3, [r7, #16]
  403970:	781b      	ldrb	r3, [r3, #0]
  403972:	f3c3 0300 	ubfx	r3, r3, #0, #1
  403976:	b2db      	uxtb	r3, r3
  403978:	461d      	mov	r5, r3
  40397a:	687b      	ldr	r3, [r7, #4]
  40397c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  40397e:	693b      	ldr	r3, [r7, #16]
  403980:	881b      	ldrh	r3, [r3, #0]
  403982:	f343 130b 	sbfx	r3, r3, #4, #12
  403986:	b29b      	uxth	r3, r3
  403988:	b21b      	sxth	r3, r3
  40398a:	4610      	mov	r0, r2
  40398c:	4619      	mov	r1, r3
  40398e:	4b2a      	ldr	r3, [pc, #168]	; (403a38 <validate_checksum+0x1e8>)
  403990:	4798      	blx	r3
  403992:	4602      	mov	r2, r0
  403994:	4b29      	ldr	r3, [pc, #164]	; (403a3c <validate_checksum+0x1ec>)
  403996:	9300      	str	r3, [sp, #0]
  403998:	4b2d      	ldr	r3, [pc, #180]	; (403a50 <validate_checksum+0x200>)
  40399a:	9301      	str	r3, [sp, #4]
  40399c:	9502      	str	r5, [sp, #8]
  40399e:	69bb      	ldr	r3, [r7, #24]
  4039a0:	9303      	str	r3, [sp, #12]
  4039a2:	69fb      	ldr	r3, [r7, #28]
  4039a4:	9304      	str	r3, [sp, #16]
  4039a6:	697b      	ldr	r3, [r7, #20]
  4039a8:	9305      	str	r3, [sp, #20]
  4039aa:	9206      	str	r2, [sp, #24]
  4039ac:	4620      	mov	r0, r4
  4039ae:	4925      	ldr	r1, [pc, #148]	; (403a44 <validate_checksum+0x1f4>)
  4039b0:	4a25      	ldr	r2, [pc, #148]	; (403a48 <validate_checksum+0x1f8>)
  4039b2:	f44f 7383 	mov.w	r3, #262	; 0x106
  4039b6:	4c25      	ldr	r4, [pc, #148]	; (403a4c <validate_checksum+0x1fc>)
  4039b8:	47a0      	blx	r4
  4039ba:	23ff      	movs	r3, #255	; 0xff
  4039bc:	e035      	b.n	403a2a <validate_checksum+0x1da>
                dcode128->direction, i, sum, acc,
                _zbar_decoder_buf_dump(dcode->buf, dcode128->character));
        sum += acc;
  4039be:	69fa      	ldr	r2, [r7, #28]
  4039c0:	697b      	ldr	r3, [r7, #20]
  4039c2:	4413      	add	r3, r2
  4039c4:	61fb      	str	r3, [r7, #28]
        if(sum >= 103)
  4039c6:	69fb      	ldr	r3, [r7, #28]
  4039c8:	2b66      	cmp	r3, #102	; 0x66
  4039ca:	d902      	bls.n	4039d2 <validate_checksum+0x182>
            sum -= 103;
  4039cc:	69fb      	ldr	r3, [r7, #28]
  4039ce:	3b67      	subs	r3, #103	; 0x67
  4039d0:	61fb      	str	r3, [r7, #28]
    sum = dcode->buf[idx];
    if(sum >= 103)
        sum -= 103;

    /* calculate sum in reverse to avoid multiply operations */
    for(i = dcode128->character - 3; i; i--) {
  4039d2:	69bb      	ldr	r3, [r7, #24]
  4039d4:	3b01      	subs	r3, #1
  4039d6:	61bb      	str	r3, [r7, #24]
  4039d8:	69bb      	ldr	r3, [r7, #24]
  4039da:	2b00      	cmp	r3, #0
  4039dc:	f47f af72 	bne.w	4038c4 <validate_checksum+0x74>
        if(sum >= 103)
            sum -= 103;
    }

    /* and compare to check character */
    idx = (dcode128->direction) ? 1 : dcode128->character - 2;
  4039e0:	693b      	ldr	r3, [r7, #16]
  4039e2:	781b      	ldrb	r3, [r3, #0]
  4039e4:	f003 0301 	and.w	r3, r3, #1
  4039e8:	b2db      	uxtb	r3, r3
  4039ea:	2b00      	cmp	r3, #0
  4039ec:	d107      	bne.n	4039fe <validate_checksum+0x1ae>
  4039ee:	693b      	ldr	r3, [r7, #16]
  4039f0:	881b      	ldrh	r3, [r3, #0]
  4039f2:	f343 130b 	sbfx	r3, r3, #4, #12
  4039f6:	b29b      	uxth	r3, r3
  4039f8:	b21b      	sxth	r3, r3
  4039fa:	3b02      	subs	r3, #2
  4039fc:	e000      	b.n	403a00 <validate_checksum+0x1b0>
  4039fe:	2301      	movs	r3, #1
  403a00:	60fb      	str	r3, [r7, #12]
    check = dcode->buf[idx];
  403a02:	687b      	ldr	r3, [r7, #4]
  403a04:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403a06:	68fb      	ldr	r3, [r7, #12]
  403a08:	4413      	add	r3, r2
  403a0a:	781b      	ldrb	r3, [r3, #0]
  403a0c:	72fb      	strb	r3, [r7, #11]
    dbprintf(2, " chk=%02x(%02x)", sum, check);
  403a0e:	bf00      	nop
    err = (sum != check);
  403a10:	7afa      	ldrb	r2, [r7, #11]
  403a12:	69fb      	ldr	r3, [r7, #28]
  403a14:	429a      	cmp	r2, r3
  403a16:	bf14      	ite	ne
  403a18:	2301      	movne	r3, #1
  403a1a:	2300      	moveq	r3, #0
  403a1c:	b2db      	uxtb	r3, r3
  403a1e:	72bb      	strb	r3, [r7, #10]
    if(err)
  403a20:	7abb      	ldrb	r3, [r7, #10]
  403a22:	2b00      	cmp	r3, #0
  403a24:	d000      	beq.n	403a28 <validate_checksum+0x1d8>
        dbprintf(1, " [checksum error]\n");
  403a26:	bf00      	nop
    return(err);
  403a28:	7abb      	ldrb	r3, [r7, #10]
}
  403a2a:	4618      	mov	r0, r3
  403a2c:	3720      	adds	r7, #32
  403a2e:	46bd      	mov	sp, r7
  403a30:	bdb0      	pop	{r4, r5, r7, pc}
  403a32:	bf00      	nop
  403a34:	200012d0 	.word	0x200012d0
  403a38:	00405759 	.word	0x00405759
  403a3c:	0043c110 	.word	0x0043c110
  403a40:	0043bd30 	.word	0x0043bd30
  403a44:	0043bce4 	.word	0x0043bce4
  403a48:	0043bc54 	.word	0x0043bc54
  403a4c:	0043413d 	.word	0x0043413d
  403a50:	0043bd3c 	.word	0x0043bd3c

00403a54 <postprocess_c>:
/* expand and decode character set C */
static inline unsigned postprocess_c (zbar_decoder_t *dcode,
                                      unsigned start,
                                      unsigned end,
                                      unsigned dst)
{
  403a54:	b590      	push	{r4, r7, lr}
  403a56:	b093      	sub	sp, #76	; 0x4c
  403a58:	af08      	add	r7, sp, #32
  403a5a:	60f8      	str	r0, [r7, #12]
  403a5c:	60b9      	str	r1, [r7, #8]
  403a5e:	607a      	str	r2, [r7, #4]
  403a60:	603b      	str	r3, [r7, #0]
    unsigned i, j;

    /* expand buffer to accomodate 2x set C characters (2 digits per-char) */
    unsigned delta = end - start;
  403a62:	687a      	ldr	r2, [r7, #4]
  403a64:	68bb      	ldr	r3, [r7, #8]
  403a66:	1ad3      	subs	r3, r2, r3
  403a68:	61bb      	str	r3, [r7, #24]
    unsigned newlen = dcode->code128.character + delta;
  403a6a:	68fb      	ldr	r3, [r7, #12]
  403a6c:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403a70:	f343 130b 	sbfx	r3, r3, #4, #12
  403a74:	b29b      	uxth	r3, r3
  403a76:	b21a      	sxth	r2, r3
  403a78:	69bb      	ldr	r3, [r7, #24]
  403a7a:	4413      	add	r3, r2
  403a7c:	617b      	str	r3, [r7, #20]
    size_buf(dcode, newlen);
  403a7e:	68f8      	ldr	r0, [r7, #12]
  403a80:	6979      	ldr	r1, [r7, #20]
  403a82:	4b79      	ldr	r3, [pc, #484]	; (403c68 <postprocess_c+0x214>)
  403a84:	4798      	blx	r3

    /* relocate unprocessed data to end of buffer */
    memmove(dcode->buf + start + delta, dcode->buf + start,
  403a86:	68fb      	ldr	r3, [r7, #12]
  403a88:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403a8a:	68b9      	ldr	r1, [r7, #8]
  403a8c:	69bb      	ldr	r3, [r7, #24]
  403a8e:	440b      	add	r3, r1
  403a90:	18d0      	adds	r0, r2, r3
  403a92:	68fb      	ldr	r3, [r7, #12]
  403a94:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403a96:	68bb      	ldr	r3, [r7, #8]
  403a98:	18d1      	adds	r1, r2, r3
            dcode->code128.character - start);
  403a9a:	68fb      	ldr	r3, [r7, #12]
  403a9c:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403aa0:	f343 130b 	sbfx	r3, r3, #4, #12
  403aa4:	b29b      	uxth	r3, r3
    unsigned delta = end - start;
    unsigned newlen = dcode->code128.character + delta;
    size_buf(dcode, newlen);

    /* relocate unprocessed data to end of buffer */
    memmove(dcode->buf + start + delta, dcode->buf + start,
  403aa6:	b21a      	sxth	r2, r3
  403aa8:	68bb      	ldr	r3, [r7, #8]
  403aaa:	1ad3      	subs	r3, r2, r3
  403aac:	461a      	mov	r2, r3
  403aae:	4b6f      	ldr	r3, [pc, #444]	; (403c6c <postprocess_c+0x218>)
  403ab0:	4798      	blx	r3
            dcode->code128.character - start);
    dcode->code128.character = newlen;
  403ab2:	697b      	ldr	r3, [r7, #20]
  403ab4:	b29b      	uxth	r3, r3
  403ab6:	011b      	lsls	r3, r3, #4
  403ab8:	b21b      	sxth	r3, r3
  403aba:	111b      	asrs	r3, r3, #4
  403abc:	b299      	uxth	r1, r3
  403abe:	68fa      	ldr	r2, [r7, #12]
  403ac0:	f8b2 3104 	ldrh.w	r3, [r2, #260]	; 0x104
  403ac4:	f361 130f 	bfi	r3, r1, #4, #12
  403ac8:	f8a2 3104 	strh.w	r3, [r2, #260]	; 0x104

    for(i = 0, j = dst; i < delta; i++, j += 2) {
  403acc:	2300      	movs	r3, #0
  403ace:	627b      	str	r3, [r7, #36]	; 0x24
  403ad0:	683b      	ldr	r3, [r7, #0]
  403ad2:	623b      	str	r3, [r7, #32]
  403ad4:	e0be      	b.n	403c54 <postprocess_c+0x200>
        /* convert each set C character into two ASCII digits */
        unsigned char code = dcode->buf[start + delta + i];
  403ad6:	68fb      	ldr	r3, [r7, #12]
  403ad8:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403ada:	68b9      	ldr	r1, [r7, #8]
  403adc:	69bb      	ldr	r3, [r7, #24]
  403ade:	4419      	add	r1, r3
  403ae0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403ae2:	440b      	add	r3, r1
  403ae4:	4413      	add	r3, r2
  403ae6:	781b      	ldrb	r3, [r3, #0]
  403ae8:	77fb      	strb	r3, [r7, #31]
        dcode->buf[j] = '0';
  403aea:	68fb      	ldr	r3, [r7, #12]
  403aec:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403aee:	6a3b      	ldr	r3, [r7, #32]
  403af0:	4413      	add	r3, r2
  403af2:	2230      	movs	r2, #48	; 0x30
  403af4:	701a      	strb	r2, [r3, #0]
        if(code >= 50) {
  403af6:	7ffb      	ldrb	r3, [r7, #31]
  403af8:	2b31      	cmp	r3, #49	; 0x31
  403afa:	d90e      	bls.n	403b1a <postprocess_c+0xc6>
            code -= 50;
  403afc:	7ffb      	ldrb	r3, [r7, #31]
  403afe:	3b32      	subs	r3, #50	; 0x32
  403b00:	77fb      	strb	r3, [r7, #31]
            dcode->buf[j] += 5;
  403b02:	68fb      	ldr	r3, [r7, #12]
  403b04:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403b06:	6a3b      	ldr	r3, [r7, #32]
  403b08:	4413      	add	r3, r2
  403b0a:	68fa      	ldr	r2, [r7, #12]
  403b0c:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  403b0e:	6a3a      	ldr	r2, [r7, #32]
  403b10:	440a      	add	r2, r1
  403b12:	7812      	ldrb	r2, [r2, #0]
  403b14:	3205      	adds	r2, #5
  403b16:	b2d2      	uxtb	r2, r2
  403b18:	701a      	strb	r2, [r3, #0]
        }
        if(code >= 30) {
  403b1a:	7ffb      	ldrb	r3, [r7, #31]
  403b1c:	2b1d      	cmp	r3, #29
  403b1e:	d90e      	bls.n	403b3e <postprocess_c+0xea>
            code -= 30;
  403b20:	7ffb      	ldrb	r3, [r7, #31]
  403b22:	3b1e      	subs	r3, #30
  403b24:	77fb      	strb	r3, [r7, #31]
            dcode->buf[j] += 3;
  403b26:	68fb      	ldr	r3, [r7, #12]
  403b28:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403b2a:	6a3b      	ldr	r3, [r7, #32]
  403b2c:	4413      	add	r3, r2
  403b2e:	68fa      	ldr	r2, [r7, #12]
  403b30:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  403b32:	6a3a      	ldr	r2, [r7, #32]
  403b34:	440a      	add	r2, r1
  403b36:	7812      	ldrb	r2, [r2, #0]
  403b38:	3203      	adds	r2, #3
  403b3a:	b2d2      	uxtb	r2, r2
  403b3c:	701a      	strb	r2, [r3, #0]
        }
        if(code >= 20) {
  403b3e:	7ffb      	ldrb	r3, [r7, #31]
  403b40:	2b13      	cmp	r3, #19
  403b42:	d90e      	bls.n	403b62 <postprocess_c+0x10e>
            code -= 20;
  403b44:	7ffb      	ldrb	r3, [r7, #31]
  403b46:	3b14      	subs	r3, #20
  403b48:	77fb      	strb	r3, [r7, #31]
            dcode->buf[j] += 2;
  403b4a:	68fb      	ldr	r3, [r7, #12]
  403b4c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403b4e:	6a3b      	ldr	r3, [r7, #32]
  403b50:	4413      	add	r3, r2
  403b52:	68fa      	ldr	r2, [r7, #12]
  403b54:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  403b56:	6a3a      	ldr	r2, [r7, #32]
  403b58:	440a      	add	r2, r1
  403b5a:	7812      	ldrb	r2, [r2, #0]
  403b5c:	3202      	adds	r2, #2
  403b5e:	b2d2      	uxtb	r2, r2
  403b60:	701a      	strb	r2, [r3, #0]
        }
        if(code >= 10) {
  403b62:	7ffb      	ldrb	r3, [r7, #31]
  403b64:	2b09      	cmp	r3, #9
  403b66:	d90e      	bls.n	403b86 <postprocess_c+0x132>
            code -= 10;
  403b68:	7ffb      	ldrb	r3, [r7, #31]
  403b6a:	3b0a      	subs	r3, #10
  403b6c:	77fb      	strb	r3, [r7, #31]
            dcode->buf[j] += 1;
  403b6e:	68fb      	ldr	r3, [r7, #12]
  403b70:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403b72:	6a3b      	ldr	r3, [r7, #32]
  403b74:	4413      	add	r3, r2
  403b76:	68fa      	ldr	r2, [r7, #12]
  403b78:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  403b7a:	6a3a      	ldr	r2, [r7, #32]
  403b7c:	440a      	add	r2, r1
  403b7e:	7812      	ldrb	r2, [r2, #0]
  403b80:	3201      	adds	r2, #1
  403b82:	b2d2      	uxtb	r2, r2
  403b84:	701a      	strb	r2, [r3, #0]
        }
        zassert(dcode->buf[j] <= '9', delta,
  403b86:	68fb      	ldr	r3, [r7, #12]
  403b88:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403b8a:	6a3b      	ldr	r3, [r7, #32]
  403b8c:	4413      	add	r3, r2
  403b8e:	781b      	ldrb	r3, [r3, #0]
  403b90:	2b39      	cmp	r3, #57	; 0x39
  403b92:	d926      	bls.n	403be2 <postprocess_c+0x18e>
  403b94:	4b36      	ldr	r3, [pc, #216]	; (403c70 <postprocess_c+0x21c>)
  403b96:	681b      	ldr	r3, [r3, #0]
  403b98:	68dc      	ldr	r4, [r3, #12]
  403b9a:	68fb      	ldr	r3, [r7, #12]
  403b9c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403b9e:	68fb      	ldr	r3, [r7, #12]
  403ba0:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403ba4:	f343 130b 	sbfx	r3, r3, #4, #12
  403ba8:	b29b      	uxth	r3, r3
  403baa:	b21b      	sxth	r3, r3
  403bac:	4610      	mov	r0, r2
  403bae:	4619      	mov	r1, r3
  403bb0:	4b30      	ldr	r3, [pc, #192]	; (403c74 <postprocess_c+0x220>)
  403bb2:	4798      	blx	r3
  403bb4:	4602      	mov	r2, r0
  403bb6:	4b30      	ldr	r3, [pc, #192]	; (403c78 <postprocess_c+0x224>)
  403bb8:	9300      	str	r3, [sp, #0]
  403bba:	4b30      	ldr	r3, [pc, #192]	; (403c7c <postprocess_c+0x228>)
  403bbc:	9301      	str	r3, [sp, #4]
  403bbe:	68bb      	ldr	r3, [r7, #8]
  403bc0:	9302      	str	r3, [sp, #8]
  403bc2:	687b      	ldr	r3, [r7, #4]
  403bc4:	9303      	str	r3, [sp, #12]
  403bc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403bc8:	9304      	str	r3, [sp, #16]
  403bca:	6a3b      	ldr	r3, [r7, #32]
  403bcc:	9305      	str	r3, [sp, #20]
  403bce:	9206      	str	r2, [sp, #24]
  403bd0:	4620      	mov	r0, r4
  403bd2:	492b      	ldr	r1, [pc, #172]	; (403c80 <postprocess_c+0x22c>)
  403bd4:	4a2b      	ldr	r2, [pc, #172]	; (403c84 <postprocess_c+0x230>)
  403bd6:	f44f 739f 	mov.w	r3, #318	; 0x13e
  403bda:	4c2b      	ldr	r4, [pc, #172]	; (403c88 <postprocess_c+0x234>)
  403bdc:	47a0      	blx	r4
  403bde:	69bb      	ldr	r3, [r7, #24]
  403be0:	e03e      	b.n	403c60 <postprocess_c+0x20c>
                "start=%x end=%x i=%x j=%x %s\n", start, end, i, j,
                _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));
        zassert(code <= 9, delta,
  403be2:	7ffb      	ldrb	r3, [r7, #31]
  403be4:	2b09      	cmp	r3, #9
  403be6:	d926      	bls.n	403c36 <postprocess_c+0x1e2>
  403be8:	4b21      	ldr	r3, [pc, #132]	; (403c70 <postprocess_c+0x21c>)
  403bea:	681b      	ldr	r3, [r3, #0]
  403bec:	68dc      	ldr	r4, [r3, #12]
  403bee:	68fb      	ldr	r3, [r7, #12]
  403bf0:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403bf2:	68fb      	ldr	r3, [r7, #12]
  403bf4:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403bf8:	f343 130b 	sbfx	r3, r3, #4, #12
  403bfc:	b29b      	uxth	r3, r3
  403bfe:	b21b      	sxth	r3, r3
  403c00:	4610      	mov	r0, r2
  403c02:	4619      	mov	r1, r3
  403c04:	4b1b      	ldr	r3, [pc, #108]	; (403c74 <postprocess_c+0x220>)
  403c06:	4798      	blx	r3
  403c08:	4602      	mov	r2, r0
  403c0a:	4b1b      	ldr	r3, [pc, #108]	; (403c78 <postprocess_c+0x224>)
  403c0c:	9300      	str	r3, [sp, #0]
  403c0e:	4b1f      	ldr	r3, [pc, #124]	; (403c8c <postprocess_c+0x238>)
  403c10:	9301      	str	r3, [sp, #4]
  403c12:	68bb      	ldr	r3, [r7, #8]
  403c14:	9302      	str	r3, [sp, #8]
  403c16:	687b      	ldr	r3, [r7, #4]
  403c18:	9303      	str	r3, [sp, #12]
  403c1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403c1c:	9304      	str	r3, [sp, #16]
  403c1e:	6a3b      	ldr	r3, [r7, #32]
  403c20:	9305      	str	r3, [sp, #20]
  403c22:	9206      	str	r2, [sp, #24]
  403c24:	4620      	mov	r0, r4
  403c26:	4916      	ldr	r1, [pc, #88]	; (403c80 <postprocess_c+0x22c>)
  403c28:	4a16      	ldr	r2, [pc, #88]	; (403c84 <postprocess_c+0x230>)
  403c2a:	f240 1341 	movw	r3, #321	; 0x141
  403c2e:	4c16      	ldr	r4, [pc, #88]	; (403c88 <postprocess_c+0x234>)
  403c30:	47a0      	blx	r4
  403c32:	69bb      	ldr	r3, [r7, #24]
  403c34:	e014      	b.n	403c60 <postprocess_c+0x20c>
                "start=%x end=%x i=%x j=%x %s\n", start, end, i, j,
                _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));
        dcode->buf[j + 1] = '0' + code;
  403c36:	68fb      	ldr	r3, [r7, #12]
  403c38:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403c3a:	6a3b      	ldr	r3, [r7, #32]
  403c3c:	3301      	adds	r3, #1
  403c3e:	4413      	add	r3, r2
  403c40:	7ffa      	ldrb	r2, [r7, #31]
  403c42:	3230      	adds	r2, #48	; 0x30
  403c44:	b2d2      	uxtb	r2, r2
  403c46:	701a      	strb	r2, [r3, #0]
    /* relocate unprocessed data to end of buffer */
    memmove(dcode->buf + start + delta, dcode->buf + start,
            dcode->code128.character - start);
    dcode->code128.character = newlen;

    for(i = 0, j = dst; i < delta; i++, j += 2) {
  403c48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403c4a:	3301      	adds	r3, #1
  403c4c:	627b      	str	r3, [r7, #36]	; 0x24
  403c4e:	6a3b      	ldr	r3, [r7, #32]
  403c50:	3302      	adds	r3, #2
  403c52:	623b      	str	r3, [r7, #32]
  403c54:	6a7a      	ldr	r2, [r7, #36]	; 0x24
  403c56:	69bb      	ldr	r3, [r7, #24]
  403c58:	429a      	cmp	r2, r3
  403c5a:	f4ff af3c 	bcc.w	403ad6 <postprocess_c+0x82>
        zassert(code <= 9, delta,
                "start=%x end=%x i=%x j=%x %s\n", start, end, i, j,
                _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));
        dcode->buf[j + 1] = '0' + code;
    }
    return(delta);
  403c5e:	69bb      	ldr	r3, [r7, #24]
}
  403c60:	4618      	mov	r0, r3
  403c62:	372c      	adds	r7, #44	; 0x2c
  403c64:	46bd      	mov	sp, r7
  403c66:	bd90      	pop	{r4, r7, pc}
  403c68:	0040328d 	.word	0x0040328d
  403c6c:	0043500d 	.word	0x0043500d
  403c70:	200012d0 	.word	0x200012d0
  403c74:	00405759 	.word	0x00405759
  403c78:	0043c130 	.word	0x0043c130
  403c7c:	0043bd94 	.word	0x0043bd94
  403c80:	0043bd48 	.word	0x0043bd48
  403c84:	0043bc54 	.word	0x0043bc54
  403c88:	0043413d 	.word	0x0043413d
  403c8c:	0043bdac 	.word	0x0043bdac

00403c90 <postprocess>:

/* resolve scan direction and convert to ASCII */
static inline unsigned char postprocess (zbar_decoder_t *dcode)
{
  403c90:	b5f0      	push	{r4, r5, r6, r7, lr}
  403c92:	b093      	sub	sp, #76	; 0x4c
  403c94:	af08      	add	r7, sp, #32
  403c96:	6078      	str	r0, [r7, #4]
    unsigned i, j, cexp;
    unsigned char code = 0, charset;
  403c98:	2300      	movs	r3, #0
  403c9a:	767b      	strb	r3, [r7, #25]
    code128_decoder_t *dcode128 = &dcode->code128;
  403c9c:	687b      	ldr	r3, [r7, #4]
  403c9e:	f503 7382 	add.w	r3, r3, #260	; 0x104
  403ca2:	617b      	str	r3, [r7, #20]
    dbprintf(2, "\n    postproc len=%d", dcode128->character);
  403ca4:	bf00      	nop
    dcode->modifiers = 0;
  403ca6:	687b      	ldr	r3, [r7, #4]
  403ca8:	2200      	movs	r2, #0
  403caa:	649a      	str	r2, [r3, #72]	; 0x48
    dcode->direction = 1 - 2 * dcode128->direction;
  403cac:	697b      	ldr	r3, [r7, #20]
  403cae:	781b      	ldrb	r3, [r3, #0]
  403cb0:	f3c3 0300 	ubfx	r3, r3, #0, #1
  403cb4:	b2db      	uxtb	r3, r3
  403cb6:	461a      	mov	r2, r3
  403cb8:	4613      	mov	r3, r2
  403cba:	07db      	lsls	r3, r3, #31
  403cbc:	1a9b      	subs	r3, r3, r2
  403cbe:	005b      	lsls	r3, r3, #1
  403cc0:	1c5a      	adds	r2, r3, #1
  403cc2:	687b      	ldr	r3, [r7, #4]
  403cc4:	64da      	str	r2, [r3, #76]	; 0x4c
    if(dcode128->direction) {
  403cc6:	697b      	ldr	r3, [r7, #20]
  403cc8:	781b      	ldrb	r3, [r3, #0]
  403cca:	f003 0301 	and.w	r3, r3, #1
  403cce:	b2db      	uxtb	r3, r3
  403cd0:	2b00      	cmp	r3, #0
  403cd2:	d067      	beq.n	403da4 <postprocess+0x114>
        /* reverse buffer */
        dbprintf(2, " (rev)");
  403cd4:	bf00      	nop
        for(i = 0; i < dcode128->character / 2; i++) {
  403cd6:	2300      	movs	r3, #0
  403cd8:	627b      	str	r3, [r7, #36]	; 0x24
  403cda:	e022      	b.n	403d22 <postprocess+0x92>
            unsigned j = dcode128->character - 1 - i;
  403cdc:	697b      	ldr	r3, [r7, #20]
  403cde:	881b      	ldrh	r3, [r3, #0]
  403ce0:	f343 130b 	sbfx	r3, r3, #4, #12
  403ce4:	b29b      	uxth	r3, r3
  403ce6:	b21a      	sxth	r2, r3
  403ce8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403cea:	1ad3      	subs	r3, r2, r3
  403cec:	3b01      	subs	r3, #1
  403cee:	613b      	str	r3, [r7, #16]
            code = dcode->buf[i];
  403cf0:	687b      	ldr	r3, [r7, #4]
  403cf2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403cf4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403cf6:	4413      	add	r3, r2
  403cf8:	781b      	ldrb	r3, [r3, #0]
  403cfa:	767b      	strb	r3, [r7, #25]
            dcode->buf[i] = dcode->buf[j];
  403cfc:	687b      	ldr	r3, [r7, #4]
  403cfe:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403d00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403d02:	4413      	add	r3, r2
  403d04:	687a      	ldr	r2, [r7, #4]
  403d06:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  403d08:	693a      	ldr	r2, [r7, #16]
  403d0a:	440a      	add	r2, r1
  403d0c:	7812      	ldrb	r2, [r2, #0]
  403d0e:	701a      	strb	r2, [r3, #0]
            dcode->buf[j] = code;
  403d10:	687b      	ldr	r3, [r7, #4]
  403d12:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403d14:	693b      	ldr	r3, [r7, #16]
  403d16:	4413      	add	r3, r2
  403d18:	7e7a      	ldrb	r2, [r7, #25]
  403d1a:	701a      	strb	r2, [r3, #0]
    dcode->modifiers = 0;
    dcode->direction = 1 - 2 * dcode128->direction;
    if(dcode128->direction) {
        /* reverse buffer */
        dbprintf(2, " (rev)");
        for(i = 0; i < dcode128->character / 2; i++) {
  403d1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403d1e:	3301      	adds	r3, #1
  403d20:	627b      	str	r3, [r7, #36]	; 0x24
  403d22:	697b      	ldr	r3, [r7, #20]
  403d24:	881b      	ldrh	r3, [r3, #0]
  403d26:	f343 130b 	sbfx	r3, r3, #4, #12
  403d2a:	b29b      	uxth	r3, r3
  403d2c:	b21b      	sxth	r3, r3
  403d2e:	0fda      	lsrs	r2, r3, #31
  403d30:	4413      	add	r3, r2
  403d32:	105b      	asrs	r3, r3, #1
  403d34:	b29b      	uxth	r3, r3
  403d36:	b21a      	sxth	r2, r3
  403d38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403d3a:	429a      	cmp	r2, r3
  403d3c:	d8ce      	bhi.n	403cdc <postprocess+0x4c>
            unsigned j = dcode128->character - 1 - i;
            code = dcode->buf[i];
            dcode->buf[i] = dcode->buf[j];
            dcode->buf[j] = code;
        }
        zassert(dcode->buf[dcode128->character - 1] == STOP_REV, 1,
  403d3e:	687b      	ldr	r3, [r7, #4]
  403d40:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403d42:	697b      	ldr	r3, [r7, #20]
  403d44:	881b      	ldrh	r3, [r3, #0]
  403d46:	f343 130b 	sbfx	r3, r3, #4, #12
  403d4a:	b29b      	uxth	r3, r3
  403d4c:	b21b      	sxth	r3, r3
  403d4e:	3b01      	subs	r3, #1
  403d50:	4413      	add	r3, r2
  403d52:	781b      	ldrb	r3, [r3, #0]
  403d54:	2b6b      	cmp	r3, #107	; 0x6b
  403d56:	d058      	beq.n	403e0a <postprocess+0x17a>
  403d58:	4b91      	ldr	r3, [pc, #580]	; (403fa0 <postprocess+0x310>)
  403d5a:	681b      	ldr	r3, [r3, #0]
  403d5c:	68dc      	ldr	r4, [r3, #12]
  403d5e:	697b      	ldr	r3, [r7, #20]
  403d60:	781b      	ldrb	r3, [r3, #0]
  403d62:	f3c3 0300 	ubfx	r3, r3, #0, #1
  403d66:	b2db      	uxtb	r3, r3
  403d68:	461d      	mov	r5, r3
  403d6a:	687b      	ldr	r3, [r7, #4]
  403d6c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403d6e:	687b      	ldr	r3, [r7, #4]
  403d70:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403d74:	f343 130b 	sbfx	r3, r3, #4, #12
  403d78:	b29b      	uxth	r3, r3
  403d7a:	b21b      	sxth	r3, r3
  403d7c:	4610      	mov	r0, r2
  403d7e:	4619      	mov	r1, r3
  403d80:	4b88      	ldr	r3, [pc, #544]	; (403fa4 <postprocess+0x314>)
  403d82:	4798      	blx	r3
  403d84:	4602      	mov	r2, r0
  403d86:	4b88      	ldr	r3, [pc, #544]	; (403fa8 <postprocess+0x318>)
  403d88:	9300      	str	r3, [sp, #0]
  403d8a:	4b88      	ldr	r3, [pc, #544]	; (403fac <postprocess+0x31c>)
  403d8c:	9301      	str	r3, [sp, #4]
  403d8e:	9502      	str	r5, [sp, #8]
  403d90:	9203      	str	r2, [sp, #12]
  403d92:	4620      	mov	r0, r4
  403d94:	4986      	ldr	r1, [pc, #536]	; (403fb0 <postprocess+0x320>)
  403d96:	4a87      	ldr	r2, [pc, #540]	; (403fb4 <postprocess+0x324>)
  403d98:	f240 135b 	movw	r3, #347	; 0x15b
  403d9c:	4c86      	ldr	r4, [pc, #536]	; (403fb8 <postprocess+0x328>)
  403d9e:	47a0      	blx	r4
  403da0:	2301      	movs	r3, #1
  403da2:	e22f      	b.n	404204 <postprocess+0x574>
                "dir=%x %s\n", dcode128->direction,
                _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));
    }
    else
        zassert(dcode->buf[dcode128->character - 1] == STOP_FWD, 1,
  403da4:	687b      	ldr	r3, [r7, #4]
  403da6:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403da8:	697b      	ldr	r3, [r7, #20]
  403daa:	881b      	ldrh	r3, [r3, #0]
  403dac:	f343 130b 	sbfx	r3, r3, #4, #12
  403db0:	b29b      	uxth	r3, r3
  403db2:	b21b      	sxth	r3, r3
  403db4:	3b01      	subs	r3, #1
  403db6:	4413      	add	r3, r2
  403db8:	781b      	ldrb	r3, [r3, #0]
  403dba:	2b6a      	cmp	r3, #106	; 0x6a
  403dbc:	d025      	beq.n	403e0a <postprocess+0x17a>
  403dbe:	4b78      	ldr	r3, [pc, #480]	; (403fa0 <postprocess+0x310>)
  403dc0:	681b      	ldr	r3, [r3, #0]
  403dc2:	68dc      	ldr	r4, [r3, #12]
  403dc4:	697b      	ldr	r3, [r7, #20]
  403dc6:	781b      	ldrb	r3, [r3, #0]
  403dc8:	f3c3 0300 	ubfx	r3, r3, #0, #1
  403dcc:	b2db      	uxtb	r3, r3
  403dce:	461d      	mov	r5, r3
  403dd0:	687b      	ldr	r3, [r7, #4]
  403dd2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403dd4:	687b      	ldr	r3, [r7, #4]
  403dd6:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403dda:	f343 130b 	sbfx	r3, r3, #4, #12
  403dde:	b29b      	uxth	r3, r3
  403de0:	b21b      	sxth	r3, r3
  403de2:	4610      	mov	r0, r2
  403de4:	4619      	mov	r1, r3
  403de6:	4b6f      	ldr	r3, [pc, #444]	; (403fa4 <postprocess+0x314>)
  403de8:	4798      	blx	r3
  403dea:	4602      	mov	r2, r0
  403dec:	4b6e      	ldr	r3, [pc, #440]	; (403fa8 <postprocess+0x318>)
  403dee:	9300      	str	r3, [sp, #0]
  403df0:	4b72      	ldr	r3, [pc, #456]	; (403fbc <postprocess+0x32c>)
  403df2:	9301      	str	r3, [sp, #4]
  403df4:	9502      	str	r5, [sp, #8]
  403df6:	9203      	str	r2, [sp, #12]
  403df8:	4620      	mov	r0, r4
  403dfa:	496d      	ldr	r1, [pc, #436]	; (403fb0 <postprocess+0x320>)
  403dfc:	4a6d      	ldr	r2, [pc, #436]	; (403fb4 <postprocess+0x324>)
  403dfe:	f44f 73b0 	mov.w	r3, #352	; 0x160
  403e02:	4c6d      	ldr	r4, [pc, #436]	; (403fb8 <postprocess+0x328>)
  403e04:	47a0      	blx	r4
  403e06:	2301      	movs	r3, #1
  403e08:	e1fc      	b.n	404204 <postprocess+0x574>
                "dir=%x %s\n", dcode128->direction,
                _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));

    code = dcode->buf[0];
  403e0a:	687b      	ldr	r3, [r7, #4]
  403e0c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  403e0e:	781b      	ldrb	r3, [r3, #0]
  403e10:	767b      	strb	r3, [r7, #25]
    zassert(code >= START_A && code <= START_C, 1, "%s\n",
  403e12:	7e7b      	ldrb	r3, [r7, #25]
  403e14:	2b66      	cmp	r3, #102	; 0x66
  403e16:	d902      	bls.n	403e1e <postprocess+0x18e>
  403e18:	7e7b      	ldrb	r3, [r7, #25]
  403e1a:	2b69      	cmp	r3, #105	; 0x69
  403e1c:	d91e      	bls.n	403e5c <postprocess+0x1cc>
  403e1e:	4b60      	ldr	r3, [pc, #384]	; (403fa0 <postprocess+0x310>)
  403e20:	681b      	ldr	r3, [r3, #0]
  403e22:	68dc      	ldr	r4, [r3, #12]
  403e24:	687b      	ldr	r3, [r7, #4]
  403e26:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403e28:	687b      	ldr	r3, [r7, #4]
  403e2a:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403e2e:	f343 130b 	sbfx	r3, r3, #4, #12
  403e32:	b29b      	uxth	r3, r3
  403e34:	b21b      	sxth	r3, r3
  403e36:	4610      	mov	r0, r2
  403e38:	4619      	mov	r1, r3
  403e3a:	4b5a      	ldr	r3, [pc, #360]	; (403fa4 <postprocess+0x314>)
  403e3c:	4798      	blx	r3
  403e3e:	4602      	mov	r2, r0
  403e40:	4b59      	ldr	r3, [pc, #356]	; (403fa8 <postprocess+0x318>)
  403e42:	9300      	str	r3, [sp, #0]
  403e44:	4b5e      	ldr	r3, [pc, #376]	; (403fc0 <postprocess+0x330>)
  403e46:	9301      	str	r3, [sp, #4]
  403e48:	9202      	str	r2, [sp, #8]
  403e4a:	4620      	mov	r0, r4
  403e4c:	495d      	ldr	r1, [pc, #372]	; (403fc4 <postprocess+0x334>)
  403e4e:	4a59      	ldr	r2, [pc, #356]	; (403fb4 <postprocess+0x324>)
  403e50:	f44f 73b2 	mov.w	r3, #356	; 0x164
  403e54:	4c58      	ldr	r4, [pc, #352]	; (403fb8 <postprocess+0x328>)
  403e56:	47a0      	blx	r4
  403e58:	2301      	movs	r3, #1
  403e5a:	e1d3      	b.n	404204 <postprocess+0x574>
            _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));

    charset = code - START_A;
  403e5c:	7e7b      	ldrb	r3, [r7, #25]
  403e5e:	3b67      	subs	r3, #103	; 0x67
  403e60:	76fb      	strb	r3, [r7, #27]
    cexp = (code == START_C) ? 1 : 0;
  403e62:	7e7b      	ldrb	r3, [r7, #25]
  403e64:	2b69      	cmp	r3, #105	; 0x69
  403e66:	bf0c      	ite	eq
  403e68:	2301      	moveq	r3, #1
  403e6a:	2300      	movne	r3, #0
  403e6c:	b2db      	uxtb	r3, r3
  403e6e:	61fb      	str	r3, [r7, #28]
    dbprintf(2, " start=%c", 'A' + charset);
  403e70:	bf00      	nop

    for(i = 1, j = 0; i < dcode128->character - 2; i++) {
  403e72:	2301      	movs	r3, #1
  403e74:	627b      	str	r3, [r7, #36]	; 0x24
  403e76:	2300      	movs	r3, #0
  403e78:	623b      	str	r3, [r7, #32]
  403e7a:	e13e      	b.n	4040fa <postprocess+0x46a>
        unsigned char code = dcode->buf[i];
  403e7c:	687b      	ldr	r3, [r7, #4]
  403e7e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403e80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403e82:	4413      	add	r3, r2
  403e84:	781b      	ldrb	r3, [r3, #0]
  403e86:	76bb      	strb	r3, [r7, #26]
        zassert(!(code & 0x80), 1,
  403e88:	7ebb      	ldrb	r3, [r7, #26]
  403e8a:	b25b      	sxtb	r3, r3
  403e8c:	2b00      	cmp	r3, #0
  403e8e:	da28      	bge.n	403ee2 <postprocess+0x252>
  403e90:	4b43      	ldr	r3, [pc, #268]	; (403fa0 <postprocess+0x310>)
  403e92:	681b      	ldr	r3, [r3, #0]
  403e94:	68de      	ldr	r6, [r3, #12]
  403e96:	7ebd      	ldrb	r5, [r7, #26]
  403e98:	7efc      	ldrb	r4, [r7, #27]
  403e9a:	687b      	ldr	r3, [r7, #4]
  403e9c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403e9e:	687b      	ldr	r3, [r7, #4]
  403ea0:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403ea4:	f343 130b 	sbfx	r3, r3, #4, #12
  403ea8:	b29b      	uxth	r3, r3
  403eaa:	b21b      	sxth	r3, r3
  403eac:	4610      	mov	r0, r2
  403eae:	4619      	mov	r1, r3
  403eb0:	4b3c      	ldr	r3, [pc, #240]	; (403fa4 <postprocess+0x314>)
  403eb2:	4798      	blx	r3
  403eb4:	4602      	mov	r2, r0
  403eb6:	4b3c      	ldr	r3, [pc, #240]	; (403fa8 <postprocess+0x318>)
  403eb8:	9300      	str	r3, [sp, #0]
  403eba:	4b43      	ldr	r3, [pc, #268]	; (403fc8 <postprocess+0x338>)
  403ebc:	9301      	str	r3, [sp, #4]
  403ebe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403ec0:	9302      	str	r3, [sp, #8]
  403ec2:	6a3b      	ldr	r3, [r7, #32]
  403ec4:	9303      	str	r3, [sp, #12]
  403ec6:	9504      	str	r5, [sp, #16]
  403ec8:	9405      	str	r4, [sp, #20]
  403eca:	69fb      	ldr	r3, [r7, #28]
  403ecc:	9306      	str	r3, [sp, #24]
  403ece:	9207      	str	r2, [sp, #28]
  403ed0:	4630      	mov	r0, r6
  403ed2:	493e      	ldr	r1, [pc, #248]	; (403fcc <postprocess+0x33c>)
  403ed4:	4a37      	ldr	r2, [pc, #220]	; (403fb4 <postprocess+0x324>)
  403ed6:	f240 136f 	movw	r3, #367	; 0x16f
  403eda:	4c37      	ldr	r4, [pc, #220]	; (403fb8 <postprocess+0x328>)
  403edc:	47a0      	blx	r4
  403ede:	2301      	movs	r3, #1
  403ee0:	e190      	b.n	404204 <postprocess+0x574>
                "i=%x j=%x code=%02x charset=%x cexp=%x %s\n",
                i, j, code, charset, cexp,
                _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));

        if((charset & 0x2) && (code < 100))
  403ee2:	7efb      	ldrb	r3, [r7, #27]
  403ee4:	f003 0302 	and.w	r3, r3, #2
  403ee8:	2b00      	cmp	r3, #0
  403eea:	d003      	beq.n	403ef4 <postprocess+0x264>
  403eec:	7ebb      	ldrb	r3, [r7, #26]
  403eee:	2b63      	cmp	r3, #99	; 0x63
  403ef0:	d800      	bhi.n	403ef4 <postprocess+0x264>
            /* defer character set C for expansion */
            continue;
  403ef2:	e0ff      	b.n	4040f4 <postprocess+0x464>
        else if(code < 0x60) {
  403ef4:	7ebb      	ldrb	r3, [r7, #26]
  403ef6:	2b5f      	cmp	r3, #95	; 0x5f
  403ef8:	d820      	bhi.n	403f3c <postprocess+0x2ac>
            /* convert character set B to ASCII */
            code = code + 0x20;
  403efa:	7ebb      	ldrb	r3, [r7, #26]
  403efc:	3320      	adds	r3, #32
  403efe:	76bb      	strb	r3, [r7, #26]
            if((!charset || (charset == 0x81)) && (code >= 0x60))
  403f00:	7efb      	ldrb	r3, [r7, #27]
  403f02:	2b00      	cmp	r3, #0
  403f04:	d002      	beq.n	403f0c <postprocess+0x27c>
  403f06:	7efb      	ldrb	r3, [r7, #27]
  403f08:	2b81      	cmp	r3, #129	; 0x81
  403f0a:	d105      	bne.n	403f18 <postprocess+0x288>
  403f0c:	7ebb      	ldrb	r3, [r7, #26]
  403f0e:	2b5f      	cmp	r3, #95	; 0x5f
  403f10:	d902      	bls.n	403f18 <postprocess+0x288>
                /* convert character set A to ASCII */
                code -= 0x60;
  403f12:	7ebb      	ldrb	r3, [r7, #26]
  403f14:	3b60      	subs	r3, #96	; 0x60
  403f16:	76bb      	strb	r3, [r7, #26]
            dcode->buf[j++] = code;
  403f18:	687b      	ldr	r3, [r7, #4]
  403f1a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403f1c:	6a3b      	ldr	r3, [r7, #32]
  403f1e:	1c59      	adds	r1, r3, #1
  403f20:	6239      	str	r1, [r7, #32]
  403f22:	4413      	add	r3, r2
  403f24:	7eba      	ldrb	r2, [r7, #26]
  403f26:	701a      	strb	r2, [r3, #0]
            if(charset & 0x80)
  403f28:	7efb      	ldrb	r3, [r7, #27]
  403f2a:	b25b      	sxtb	r3, r3
  403f2c:	2b00      	cmp	r3, #0
  403f2e:	f280 80e1 	bge.w	4040f4 <postprocess+0x464>
                charset &= 0x7f;
  403f32:	7efb      	ldrb	r3, [r7, #27]
  403f34:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  403f38:	76fb      	strb	r3, [r7, #27]
  403f3a:	e0db      	b.n	4040f4 <postprocess+0x464>
        }
        else {
            dbprintf(2, " %02x", code);
  403f3c:	bf00      	nop
            if(charset & 0x2) {
  403f3e:	7efb      	ldrb	r3, [r7, #27]
  403f40:	f003 0302 	and.w	r3, r3, #2
  403f44:	2b00      	cmp	r3, #0
  403f46:	d057      	beq.n	403ff8 <postprocess+0x368>
                unsigned delta;
                /* expand character set C to ASCII */
                zassert(cexp, 1, "i=%x j=%x code=%02x charset=%x cexp=%x %s\n",
  403f48:	69fb      	ldr	r3, [r7, #28]
  403f4a:	2b00      	cmp	r3, #0
  403f4c:	d142      	bne.n	403fd4 <postprocess+0x344>
  403f4e:	4b14      	ldr	r3, [pc, #80]	; (403fa0 <postprocess+0x310>)
  403f50:	681b      	ldr	r3, [r3, #0]
  403f52:	68de      	ldr	r6, [r3, #12]
  403f54:	7ebd      	ldrb	r5, [r7, #26]
  403f56:	7efc      	ldrb	r4, [r7, #27]
  403f58:	687b      	ldr	r3, [r7, #4]
  403f5a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  403f5c:	687b      	ldr	r3, [r7, #4]
  403f5e:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  403f62:	f343 130b 	sbfx	r3, r3, #4, #12
  403f66:	b29b      	uxth	r3, r3
  403f68:	b21b      	sxth	r3, r3
  403f6a:	4610      	mov	r0, r2
  403f6c:	4619      	mov	r1, r3
  403f6e:	4b0d      	ldr	r3, [pc, #52]	; (403fa4 <postprocess+0x314>)
  403f70:	4798      	blx	r3
  403f72:	4602      	mov	r2, r0
  403f74:	4b0c      	ldr	r3, [pc, #48]	; (403fa8 <postprocess+0x318>)
  403f76:	9300      	str	r3, [sp, #0]
  403f78:	4b15      	ldr	r3, [pc, #84]	; (403fd0 <postprocess+0x340>)
  403f7a:	9301      	str	r3, [sp, #4]
  403f7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  403f7e:	9302      	str	r3, [sp, #8]
  403f80:	6a3b      	ldr	r3, [r7, #32]
  403f82:	9303      	str	r3, [sp, #12]
  403f84:	9504      	str	r5, [sp, #16]
  403f86:	9405      	str	r4, [sp, #20]
  403f88:	69fb      	ldr	r3, [r7, #28]
  403f8a:	9306      	str	r3, [sp, #24]
  403f8c:	9207      	str	r2, [sp, #28]
  403f8e:	4630      	mov	r0, r6
  403f90:	490e      	ldr	r1, [pc, #56]	; (403fcc <postprocess+0x33c>)
  403f92:	4a08      	ldr	r2, [pc, #32]	; (403fb4 <postprocess+0x324>)
  403f94:	f44f 73c3 	mov.w	r3, #390	; 0x186
  403f98:	4c07      	ldr	r4, [pc, #28]	; (403fb8 <postprocess+0x328>)
  403f9a:	47a0      	blx	r4
  403f9c:	2301      	movs	r3, #1
  403f9e:	e131      	b.n	404204 <postprocess+0x574>
  403fa0:	200012d0 	.word	0x200012d0
  403fa4:	00405759 	.word	0x00405759
  403fa8:	0043c124 	.word	0x0043c124
  403fac:	0043bdf0 	.word	0x0043bdf0
  403fb0:	0043bdb8 	.word	0x0043bdb8
  403fb4:	0043bc54 	.word	0x0043bc54
  403fb8:	0043413d 	.word	0x0043413d
  403fbc:	0043be20 	.word	0x0043be20
  403fc0:	0043be80 	.word	0x0043be80
  403fc4:	0043be50 	.word	0x0043be50
  403fc8:	0043befc 	.word	0x0043befc
  403fcc:	0043bea4 	.word	0x0043bea4
  403fd0:	0043bf0c 	.word	0x0043bf0c
                        i, j, code, charset, cexp,
                        _zbar_decoder_buf_dump(dcode->buf,
                                                dcode->code128.character));
                delta = postprocess_c(dcode, cexp, i, j);
  403fd4:	6878      	ldrne	r0, [r7, #4]
  403fd6:	69f9      	ldr	r1, [r7, #28]
  403fd8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
  403fda:	6a3b      	ldr	r3, [r7, #32]
  403fdc:	4c8b      	ldr	r4, [pc, #556]	; (40420c <postprocess+0x57c>)
  403fde:	47a0      	blx	r4
  403fe0:	60f8      	str	r0, [r7, #12]
                i += delta;
  403fe2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
  403fe4:	68fb      	ldr	r3, [r7, #12]
  403fe6:	4413      	add	r3, r2
  403fe8:	627b      	str	r3, [r7, #36]	; 0x24
                j += delta * 2;
  403fea:	68fb      	ldr	r3, [r7, #12]
  403fec:	005b      	lsls	r3, r3, #1
  403fee:	6a3a      	ldr	r2, [r7, #32]
  403ff0:	4413      	add	r3, r2
  403ff2:	623b      	str	r3, [r7, #32]
                cexp = 0;
  403ff4:	2300      	movs	r3, #0
  403ff6:	61fb      	str	r3, [r7, #28]
            }
            if(code < CODE_C) {
  403ff8:	7ebb      	ldrb	r3, [r7, #26]
  403ffa:	2b62      	cmp	r3, #98	; 0x62
  403ffc:	d807      	bhi.n	40400e <postprocess+0x37e>
                if(code == SHIFT)
  403ffe:	7ebb      	ldrb	r3, [r7, #26]
  404000:	2b62      	cmp	r3, #98	; 0x62
  404002:	d16f      	bne.n	4040e4 <postprocess+0x454>
                    charset |= 0x80;
  404004:	7efb      	ldrb	r3, [r7, #27]
  404006:	f063 037f 	orn	r3, r3, #127	; 0x7f
  40400a:	76fb      	strb	r3, [r7, #27]
  40400c:	e06a      	b.n	4040e4 <postprocess+0x454>
                }
                else if(code == FNC3) {
                    /* FIXME FNC3 - initialize */
                }
            }
            else if(code == FNC1) {
  40400e:	7ebb      	ldrb	r3, [r7, #26]
  404010:	2b66      	cmp	r3, #102	; 0x66
  404012:	d128      	bne.n	404066 <postprocess+0x3d6>
                /* FNC1 - Code 128 subsets or ASCII 0x1d */
                if(i == 1)
  404014:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  404016:	2b01      	cmp	r3, #1
  404018:	d106      	bne.n	404028 <postprocess+0x398>
                    dcode->modifiers |= MOD(ZBAR_MOD_GS1);
  40401a:	687b      	ldr	r3, [r7, #4]
  40401c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
  40401e:	f043 0201 	orr.w	r2, r3, #1
  404022:	687b      	ldr	r3, [r7, #4]
  404024:	649a      	str	r2, [r3, #72]	; 0x48
  404026:	e05d      	b.n	4040e4 <postprocess+0x454>
                else if(i == 2)
  404028:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  40402a:	2b02      	cmp	r3, #2
  40402c:	d106      	bne.n	40403c <postprocess+0x3ac>
                    dcode->modifiers |= MOD(ZBAR_MOD_AIM);
  40402e:	687b      	ldr	r3, [r7, #4]
  404030:	6c9b      	ldr	r3, [r3, #72]	; 0x48
  404032:	f043 0202 	orr.w	r2, r3, #2
  404036:	687b      	ldr	r3, [r7, #4]
  404038:	649a      	str	r2, [r3, #72]	; 0x48
  40403a:	e053      	b.n	4040e4 <postprocess+0x454>
                else if(i < dcode->code128.character - 3)
  40403c:	687b      	ldr	r3, [r7, #4]
  40403e:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  404042:	f343 130b 	sbfx	r3, r3, #4, #12
  404046:	b29b      	uxth	r3, r3
  404048:	b21b      	sxth	r3, r3
  40404a:	3b03      	subs	r3, #3
  40404c:	461a      	mov	r2, r3
  40404e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  404050:	429a      	cmp	r2, r3
  404052:	d947      	bls.n	4040e4 <postprocess+0x454>
                    dcode->buf[j++] = 0x1d;
  404054:	687b      	ldr	r3, [r7, #4]
  404056:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404058:	6a3b      	ldr	r3, [r7, #32]
  40405a:	1c59      	adds	r1, r3, #1
  40405c:	6239      	str	r1, [r7, #32]
  40405e:	4413      	add	r3, r2
  404060:	221d      	movs	r2, #29
  404062:	701a      	strb	r2, [r3, #0]
  404064:	e03e      	b.n	4040e4 <postprocess+0x454>
                /*else drop trailing FNC1 */
            }
            else if(code >= START_A) {
  404066:	7ebb      	ldrb	r3, [r7, #26]
  404068:	2b66      	cmp	r3, #102	; 0x66
  40406a:	d902      	bls.n	404072 <postprocess+0x3e2>
                dbprintf(1, " [truncated]\n");
  40406c:	bf00      	nop
                return(1);
  40406e:	2301      	movs	r3, #1
  404070:	e0c8      	b.n	404204 <postprocess+0x574>
            }
            else {
                unsigned char newset = CODE_A - code;
  404072:	7ebb      	ldrb	r3, [r7, #26]
  404074:	f1c3 0365 	rsb	r3, r3, #101	; 0x65
  404078:	72fb      	strb	r3, [r7, #11]
                zassert(code >= CODE_C && code <= CODE_A, 1,
  40407a:	7ebb      	ldrb	r3, [r7, #26]
  40407c:	2b62      	cmp	r3, #98	; 0x62
  40407e:	d902      	bls.n	404086 <postprocess+0x3f6>
  404080:	7ebb      	ldrb	r3, [r7, #26]
  404082:	2b65      	cmp	r3, #101	; 0x65
  404084:	d928      	bls.n	4040d8 <postprocess+0x448>
  404086:	4b62      	ldr	r3, [pc, #392]	; (404210 <postprocess+0x580>)
  404088:	681b      	ldr	r3, [r3, #0]
  40408a:	68de      	ldr	r6, [r3, #12]
  40408c:	7ebd      	ldrb	r5, [r7, #26]
  40408e:	7efc      	ldrb	r4, [r7, #27]
  404090:	687b      	ldr	r3, [r7, #4]
  404092:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404094:	687b      	ldr	r3, [r7, #4]
  404096:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  40409a:	f343 130b 	sbfx	r3, r3, #4, #12
  40409e:	b29b      	uxth	r3, r3
  4040a0:	b21b      	sxth	r3, r3
  4040a2:	4610      	mov	r0, r2
  4040a4:	4619      	mov	r1, r3
  4040a6:	4b5b      	ldr	r3, [pc, #364]	; (404214 <postprocess+0x584>)
  4040a8:	4798      	blx	r3
  4040aa:	4602      	mov	r2, r0
  4040ac:	4b5a      	ldr	r3, [pc, #360]	; (404218 <postprocess+0x588>)
  4040ae:	9300      	str	r3, [sp, #0]
  4040b0:	4b5a      	ldr	r3, [pc, #360]	; (40421c <postprocess+0x58c>)
  4040b2:	9301      	str	r3, [sp, #4]
  4040b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4040b6:	9302      	str	r3, [sp, #8]
  4040b8:	6a3b      	ldr	r3, [r7, #32]
  4040ba:	9303      	str	r3, [sp, #12]
  4040bc:	9504      	str	r5, [sp, #16]
  4040be:	9405      	str	r4, [sp, #20]
  4040c0:	69fb      	ldr	r3, [r7, #28]
  4040c2:	9306      	str	r3, [sp, #24]
  4040c4:	9207      	str	r2, [sp, #28]
  4040c6:	4630      	mov	r0, r6
  4040c8:	4955      	ldr	r1, [pc, #340]	; (404220 <postprocess+0x590>)
  4040ca:	4a56      	ldr	r2, [pc, #344]	; (404224 <postprocess+0x594>)
  4040cc:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
  4040d0:	4c55      	ldr	r4, [pc, #340]	; (404228 <postprocess+0x598>)
  4040d2:	47a0      	blx	r4
  4040d4:	2301      	movs	r3, #1
  4040d6:	e095      	b.n	404204 <postprocess+0x574>
                        "i=%x j=%x code=%02x charset=%x cexp=%x %s\n",
                        i, j, code, charset, cexp,
                        _zbar_decoder_buf_dump(dcode->buf,
                                                dcode->code128.character));
                if(newset != charset)
  4040d8:	7afa      	ldrb	r2, [r7, #11]
  4040da:	7efb      	ldrb	r3, [r7, #27]
  4040dc:	429a      	cmp	r2, r3
  4040de:	d001      	beq.n	4040e4 <postprocess+0x454>
                    charset = newset;
  4040e0:	7afb      	ldrb	r3, [r7, #11]
  4040e2:	76fb      	strb	r3, [r7, #27]
                else {
                    /* FIXME FNC4 - extended ASCII */
                }
            }
            if(charset & 0x2)
  4040e4:	7efb      	ldrb	r3, [r7, #27]
  4040e6:	f003 0302 	and.w	r3, r3, #2
  4040ea:	2b00      	cmp	r3, #0
  4040ec:	d002      	beq.n	4040f4 <postprocess+0x464>
                cexp = i + 1;
  4040ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4040f0:	3301      	adds	r3, #1
  4040f2:	61fb      	str	r3, [r7, #28]

    charset = code - START_A;
    cexp = (code == START_C) ? 1 : 0;
    dbprintf(2, " start=%c", 'A' + charset);

    for(i = 1, j = 0; i < dcode128->character - 2; i++) {
  4040f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4040f6:	3301      	adds	r3, #1
  4040f8:	627b      	str	r3, [r7, #36]	; 0x24
  4040fa:	697b      	ldr	r3, [r7, #20]
  4040fc:	881b      	ldrh	r3, [r3, #0]
  4040fe:	f343 130b 	sbfx	r3, r3, #4, #12
  404102:	b29b      	uxth	r3, r3
  404104:	b21b      	sxth	r3, r3
  404106:	3b02      	subs	r3, #2
  404108:	461a      	mov	r2, r3
  40410a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  40410c:	429a      	cmp	r2, r3
  40410e:	f63f aeb5 	bhi.w	403e7c <postprocess+0x1ec>
            }
            if(charset & 0x2)
                cexp = i + 1;
        }
    }
    if(charset & 0x2) {
  404112:	7efb      	ldrb	r3, [r7, #27]
  404114:	f003 0302 	and.w	r3, r3, #2
  404118:	2b00      	cmp	r3, #0
  40411a:	d036      	beq.n	40418a <postprocess+0x4fa>
        zassert(cexp, 1, "i=%x j=%x code=%02x charset=%x cexp=%x %s\n",
  40411c:	69fb      	ldr	r3, [r7, #28]
  40411e:	2b00      	cmp	r3, #0
  404120:	d128      	bne.n	404174 <postprocess+0x4e4>
  404122:	4b3b      	ldr	r3, [pc, #236]	; (404210 <postprocess+0x580>)
  404124:	681b      	ldr	r3, [r3, #0]
  404126:	68de      	ldr	r6, [r3, #12]
  404128:	7e7d      	ldrb	r5, [r7, #25]
  40412a:	7efc      	ldrb	r4, [r7, #27]
  40412c:	687b      	ldr	r3, [r7, #4]
  40412e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404130:	687b      	ldr	r3, [r7, #4]
  404132:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  404136:	f343 130b 	sbfx	r3, r3, #4, #12
  40413a:	b29b      	uxth	r3, r3
  40413c:	b21b      	sxth	r3, r3
  40413e:	4610      	mov	r0, r2
  404140:	4619      	mov	r1, r3
  404142:	4b34      	ldr	r3, [pc, #208]	; (404214 <postprocess+0x584>)
  404144:	4798      	blx	r3
  404146:	4602      	mov	r2, r0
  404148:	4b33      	ldr	r3, [pc, #204]	; (404218 <postprocess+0x588>)
  40414a:	9300      	str	r3, [sp, #0]
  40414c:	4b37      	ldr	r3, [pc, #220]	; (40422c <postprocess+0x59c>)
  40414e:	9301      	str	r3, [sp, #4]
  404150:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  404152:	9302      	str	r3, [sp, #8]
  404154:	6a3b      	ldr	r3, [r7, #32]
  404156:	9303      	str	r3, [sp, #12]
  404158:	9504      	str	r5, [sp, #16]
  40415a:	9405      	str	r4, [sp, #20]
  40415c:	69fb      	ldr	r3, [r7, #28]
  40415e:	9306      	str	r3, [sp, #24]
  404160:	9207      	str	r2, [sp, #28]
  404162:	4630      	mov	r0, r6
  404164:	492e      	ldr	r1, [pc, #184]	; (404220 <postprocess+0x590>)
  404166:	4a2f      	ldr	r2, [pc, #188]	; (404224 <postprocess+0x594>)
  404168:	f240 13b9 	movw	r3, #441	; 0x1b9
  40416c:	4c2e      	ldr	r4, [pc, #184]	; (404228 <postprocess+0x598>)
  40416e:	47a0      	blx	r4
  404170:	2301      	movs	r3, #1
  404172:	e047      	b.n	404204 <postprocess+0x574>
                i, j, code, charset, cexp,
                _zbar_decoder_buf_dump(dcode->buf,
                                        dcode->code128.character));
        j += postprocess_c(dcode, cexp, i, j) * 2;
  404174:	6878      	ldr	r0, [r7, #4]
  404176:	69f9      	ldr	r1, [r7, #28]
  404178:	6a7a      	ldr	r2, [r7, #36]	; 0x24
  40417a:	6a3b      	ldr	r3, [r7, #32]
  40417c:	4c23      	ldr	r4, [pc, #140]	; (40420c <postprocess+0x57c>)
  40417e:	47a0      	blx	r4
  404180:	4603      	mov	r3, r0
  404182:	005b      	lsls	r3, r3, #1
  404184:	6a3a      	ldr	r2, [r7, #32]
  404186:	4413      	add	r3, r2
  404188:	623b      	str	r3, [r7, #32]
    }
    zassert(j < dcode->buf_alloc, 1, "j=%02x %s\n", j,
  40418a:	687b      	ldr	r3, [r7, #4]
  40418c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
  40418e:	6a3b      	ldr	r3, [r7, #32]
  404190:	429a      	cmp	r2, r3
  404192:	d820      	bhi.n	4041d6 <postprocess+0x546>
  404194:	4b1e      	ldr	r3, [pc, #120]	; (404210 <postprocess+0x580>)
  404196:	681b      	ldr	r3, [r3, #0]
  404198:	68dc      	ldr	r4, [r3, #12]
  40419a:	687b      	ldr	r3, [r7, #4]
  40419c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  40419e:	687b      	ldr	r3, [r7, #4]
  4041a0:	f8b3 3104 	ldrh.w	r3, [r3, #260]	; 0x104
  4041a4:	f343 130b 	sbfx	r3, r3, #4, #12
  4041a8:	b29b      	uxth	r3, r3
  4041aa:	b21b      	sxth	r3, r3
  4041ac:	4610      	mov	r0, r2
  4041ae:	4619      	mov	r1, r3
  4041b0:	4b18      	ldr	r3, [pc, #96]	; (404214 <postprocess+0x584>)
  4041b2:	4798      	blx	r3
  4041b4:	4602      	mov	r2, r0
  4041b6:	4b18      	ldr	r3, [pc, #96]	; (404218 <postprocess+0x588>)
  4041b8:	9300      	str	r3, [sp, #0]
  4041ba:	4b1d      	ldr	r3, [pc, #116]	; (404230 <postprocess+0x5a0>)
  4041bc:	9301      	str	r3, [sp, #4]
  4041be:	6a3b      	ldr	r3, [r7, #32]
  4041c0:	9302      	str	r3, [sp, #8]
  4041c2:	9203      	str	r2, [sp, #12]
  4041c4:	4620      	mov	r0, r4
  4041c6:	491b      	ldr	r1, [pc, #108]	; (404234 <postprocess+0x5a4>)
  4041c8:	4a16      	ldr	r2, [pc, #88]	; (404224 <postprocess+0x594>)
  4041ca:	f240 13bd 	movw	r3, #445	; 0x1bd
  4041ce:	4c16      	ldr	r4, [pc, #88]	; (404228 <postprocess+0x598>)
  4041d0:	47a0      	blx	r4
  4041d2:	2301      	movs	r3, #1
  4041d4:	e016      	b.n	404204 <postprocess+0x574>
            _zbar_decoder_buf_dump(dcode->buf, dcode->code128.character));
    dcode->buflen = j;
  4041d6:	687b      	ldr	r3, [r7, #4]
  4041d8:	6a3a      	ldr	r2, [r7, #32]
  4041da:	659a      	str	r2, [r3, #88]	; 0x58
    dcode->buf[j] = '\0';
  4041dc:	687b      	ldr	r3, [r7, #4]
  4041de:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  4041e0:	6a3b      	ldr	r3, [r7, #32]
  4041e2:	4413      	add	r3, r2
  4041e4:	2200      	movs	r2, #0
  4041e6:	701a      	strb	r2, [r3, #0]
    dcode->code128.character = j;
  4041e8:	6a3b      	ldr	r3, [r7, #32]
  4041ea:	b29b      	uxth	r3, r3
  4041ec:	011b      	lsls	r3, r3, #4
  4041ee:	b21b      	sxth	r3, r3
  4041f0:	111b      	asrs	r3, r3, #4
  4041f2:	b299      	uxth	r1, r3
  4041f4:	687a      	ldr	r2, [r7, #4]
  4041f6:	f8b2 3104 	ldrh.w	r3, [r2, #260]	; 0x104
  4041fa:	f361 130f 	bfi	r3, r1, #4, #12
  4041fe:	f8a2 3104 	strh.w	r3, [r2, #260]	; 0x104
    return(0);
  404202:	2300      	movs	r3, #0
}
  404204:	4618      	mov	r0, r3
  404206:	372c      	adds	r7, #44	; 0x2c
  404208:	46bd      	mov	sp, r7
  40420a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40420c:	00403a55 	.word	0x00403a55
  404210:	200012d0 	.word	0x200012d0
  404214:	00405759 	.word	0x00405759
  404218:	0043c124 	.word	0x0043c124
  40421c:	0043bf14 	.word	0x0043bf14
  404220:	0043bea4 	.word	0x0043bea4
  404224:	0043bc54 	.word	0x0043bc54
  404228:	0043413d 	.word	0x0043413d
  40422c:	0043bf0c 	.word	0x0043bf0c
  404230:	0043bf70 	.word	0x0043bf70
  404234:	0043bf38 	.word	0x0043bf38

00404238 <_zbar_decode_code128>:

zbar_symbol_type_t _zbar_decode_code128 (zbar_decoder_t *dcode)
{
  404238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40423c:	b08e      	sub	sp, #56	; 0x38
  40423e:	af06      	add	r7, sp, #24
  404240:	6078      	str	r0, [r7, #4]
    code128_decoder_t *dcode128 = &dcode->code128;
  404242:	687b      	ldr	r3, [r7, #4]
  404244:	f503 7382 	add.w	r3, r3, #260	; 0x104
  404248:	617b      	str	r3, [r7, #20]
    signed char c;

    /* update latest character width */
    dcode128->s6 -= get_width(dcode, 6);
  40424a:	6878      	ldr	r0, [r7, #4]
  40424c:	2106      	movs	r1, #6
  40424e:	4b9c      	ldr	r3, [pc, #624]	; (4044c0 <_zbar_decode_code128+0x288>)
  404250:	4798      	blx	r3
  404252:	4602      	mov	r2, r0
  404254:	697b      	ldr	r3, [r7, #20]
  404256:	685b      	ldr	r3, [r3, #4]
  404258:	1a9a      	subs	r2, r3, r2
  40425a:	697b      	ldr	r3, [r7, #20]
  40425c:	605a      	str	r2, [r3, #4]
    dcode128->s6 += get_width(dcode, 0);
  40425e:	6878      	ldr	r0, [r7, #4]
  404260:	2100      	movs	r1, #0
  404262:	4b97      	ldr	r3, [pc, #604]	; (4044c0 <_zbar_decode_code128+0x288>)
  404264:	4798      	blx	r3
  404266:	4602      	mov	r2, r0
  404268:	697b      	ldr	r3, [r7, #20]
  40426a:	685b      	ldr	r3, [r3, #4]
  40426c:	441a      	add	r2, r3
  40426e:	697b      	ldr	r3, [r7, #20]
  404270:	605a      	str	r2, [r3, #4]

    if((dcode128->character < 0)
  404272:	697b      	ldr	r3, [r7, #20]
  404274:	881b      	ldrh	r3, [r3, #0]
  404276:	f343 130b 	sbfx	r3, r3, #4, #12
  40427a:	b29b      	uxth	r3, r3
  40427c:	b21b      	sxth	r3, r3
  40427e:	2b00      	cmp	r3, #0
  404280:	da09      	bge.n	404296 <_zbar_decode_code128+0x5e>
       ? get_color(dcode) != ZBAR_SPACE
  404282:	6878      	ldr	r0, [r7, #4]
  404284:	4b8f      	ldr	r3, [pc, #572]	; (4044c4 <_zbar_decode_code128+0x28c>)
  404286:	4798      	blx	r3
  404288:	4603      	mov	r3, r0

    /* update latest character width */
    dcode128->s6 -= get_width(dcode, 6);
    dcode128->s6 += get_width(dcode, 0);

    if((dcode128->character < 0)
  40428a:	2b00      	cmp	r3, #0
  40428c:	bf14      	ite	ne
  40428e:	2301      	movne	r3, #1
  404290:	2300      	moveq	r3, #0
  404292:	b2db      	uxtb	r3, r3
  404294:	e026      	b.n	4042e4 <_zbar_decode_code128+0xac>
       ? get_color(dcode) != ZBAR_SPACE
       : (/* process every 6th element of active symbol */
          ++dcode128->element != 6 ||
  404296:	697b      	ldr	r3, [r7, #20]
  404298:	781b      	ldrb	r3, [r3, #0]
  40429a:	f3c3 0342 	ubfx	r3, r3, #1, #3
  40429e:	b2db      	uxtb	r3, r3
  4042a0:	3301      	adds	r3, #1
  4042a2:	f003 0307 	and.w	r3, r3, #7
  4042a6:	b2d9      	uxtb	r1, r3
  4042a8:	697a      	ldr	r2, [r7, #20]
  4042aa:	7813      	ldrb	r3, [r2, #0]
  4042ac:	f361 0343 	bfi	r3, r1, #1, #3
  4042b0:	7013      	strb	r3, [r2, #0]
  4042b2:	697b      	ldr	r3, [r7, #20]
  4042b4:	781b      	ldrb	r3, [r3, #0]
  4042b6:	f3c3 0342 	ubfx	r3, r3, #1, #3
  4042ba:	b2db      	uxtb	r3, r3
  4042bc:	2b06      	cmp	r3, #6
  4042be:	d10b      	bne.n	4042d8 <_zbar_decode_code128+0xa0>
          /* decode color based on direction */
          get_color(dcode) != dcode128->direction))
  4042c0:	6878      	ldr	r0, [r7, #4]
  4042c2:	4b80      	ldr	r3, [pc, #512]	; (4044c4 <_zbar_decode_code128+0x28c>)
  4042c4:	4798      	blx	r3
  4042c6:	4603      	mov	r3, r0
  4042c8:	461a      	mov	r2, r3
  4042ca:	697b      	ldr	r3, [r7, #20]
  4042cc:	781b      	ldrb	r3, [r3, #0]
  4042ce:	f3c3 0300 	ubfx	r3, r3, #0, #1
  4042d2:	b2db      	uxtb	r3, r3
    dcode128->s6 += get_width(dcode, 0);

    if((dcode128->character < 0)
       ? get_color(dcode) != ZBAR_SPACE
       : (/* process every 6th element of active symbol */
          ++dcode128->element != 6 ||
  4042d4:	429a      	cmp	r2, r3
  4042d6:	d001      	beq.n	4042dc <_zbar_decode_code128+0xa4>
  4042d8:	2301      	movs	r3, #1
  4042da:	e000      	b.n	4042de <_zbar_decode_code128+0xa6>
  4042dc:	2300      	movs	r3, #0

    /* update latest character width */
    dcode128->s6 -= get_width(dcode, 6);
    dcode128->s6 += get_width(dcode, 0);

    if((dcode128->character < 0)
  4042de:	f003 0301 	and.w	r3, r3, #1
  4042e2:	b2db      	uxtb	r3, r3
  4042e4:	2b00      	cmp	r3, #0
  4042e6:	d001      	beq.n	4042ec <_zbar_decode_code128+0xb4>
       ? get_color(dcode) != ZBAR_SPACE
       : (/* process every 6th element of active symbol */
          ++dcode128->element != 6 ||
          /* decode color based on direction */
          get_color(dcode) != dcode128->direction))
        return(0);
  4042e8:	2300      	movs	r3, #0
  4042ea:	e1a0      	b.n	40462e <_zbar_decode_code128+0x3f6>
    dcode128->element = 0;
  4042ec:	697a      	ldr	r2, [r7, #20]
  4042ee:	7813      	ldrb	r3, [r2, #0]
  4042f0:	f36f 0343 	bfc	r3, #1, #3
  4042f4:	7013      	strb	r3, [r2, #0]

    dbprintf(2, "      code128[%c%02d+%x]:",
  4042f6:	bf00      	nop
             (dcode128->direction) ? '<' : '>',
             dcode128->character, dcode128->element);

    c = decode6(dcode);
  4042f8:	6878      	ldr	r0, [r7, #4]
  4042fa:	4b73      	ldr	r3, [pc, #460]	; (4044c8 <_zbar_decode_code128+0x290>)
  4042fc:	4798      	blx	r3
  4042fe:	4603      	mov	r3, r0
  404300:	74fb      	strb	r3, [r7, #19]
    if(dcode128->character < 0) {
  404302:	697b      	ldr	r3, [r7, #20]
  404304:	881b      	ldrh	r3, [r3, #0]
  404306:	f343 130b 	sbfx	r3, r3, #4, #12
  40430a:	b29b      	uxth	r3, r3
  40430c:	b21b      	sxth	r3, r3
  40430e:	2b00      	cmp	r3, #0
  404310:	da47      	bge.n	4043a2 <_zbar_decode_code128+0x16a>
        unsigned qz;
        dbprintf(2, " c=%02x", c);
  404312:	bf00      	nop
        if(c < START_A || c > STOP_REV || c == STOP_FWD) {
  404314:	f997 3013 	ldrsb.w	r3, [r7, #19]
  404318:	2b66      	cmp	r3, #102	; 0x66
  40431a:	dd07      	ble.n	40432c <_zbar_decode_code128+0xf4>
  40431c:	f997 3013 	ldrsb.w	r3, [r7, #19]
  404320:	2b6b      	cmp	r3, #107	; 0x6b
  404322:	dc03      	bgt.n	40432c <_zbar_decode_code128+0xf4>
  404324:	f997 3013 	ldrsb.w	r3, [r7, #19]
  404328:	2b6a      	cmp	r3, #106	; 0x6a
  40432a:	d102      	bne.n	404332 <_zbar_decode_code128+0xfa>
            dbprintf(2, " [invalid]\n");
  40432c:	bf00      	nop
            return(0);
  40432e:	2300      	movs	r3, #0
  404330:	e17d      	b.n	40462e <_zbar_decode_code128+0x3f6>
        }
        qz = get_width(dcode, 6);
  404332:	6878      	ldr	r0, [r7, #4]
  404334:	2106      	movs	r1, #6
  404336:	4b62      	ldr	r3, [pc, #392]	; (4044c0 <_zbar_decode_code128+0x288>)
  404338:	4798      	blx	r3
  40433a:	60f8      	str	r0, [r7, #12]
        if(qz && qz < (dcode128->s6 * 3) / 4) {
  40433c:	68fb      	ldr	r3, [r7, #12]
  40433e:	2b00      	cmp	r3, #0
  404340:	d00b      	beq.n	40435a <_zbar_decode_code128+0x122>
  404342:	697b      	ldr	r3, [r7, #20]
  404344:	685a      	ldr	r2, [r3, #4]
  404346:	4613      	mov	r3, r2
  404348:	005b      	lsls	r3, r3, #1
  40434a:	4413      	add	r3, r2
  40434c:	089a      	lsrs	r2, r3, #2
  40434e:	68fb      	ldr	r3, [r7, #12]
  404350:	429a      	cmp	r2, r3
  404352:	d902      	bls.n	40435a <_zbar_decode_code128+0x122>
            dbprintf(2, " [invalid qz %d]\n", qz);
  404354:	bf00      	nop
            return(0);
  404356:	2300      	movs	r3, #0
  404358:	e169      	b.n	40462e <_zbar_decode_code128+0x3f6>
        }
        /* decoded valid start/stop */
        /* initialize state */
        dcode128->character = 1;
  40435a:	697a      	ldr	r2, [r7, #20]
  40435c:	8813      	ldrh	r3, [r2, #0]
  40435e:	2101      	movs	r1, #1
  404360:	f361 130f 	bfi	r3, r1, #4, #12
  404364:	8013      	strh	r3, [r2, #0]
        if(c == STOP_REV) {
  404366:	f997 3013 	ldrsb.w	r3, [r7, #19]
  40436a:	2b6b      	cmp	r3, #107	; 0x6b
  40436c:	d10a      	bne.n	404384 <_zbar_decode_code128+0x14c>
            dcode128->direction = ZBAR_BAR;
  40436e:	697a      	ldr	r2, [r7, #20]
  404370:	7813      	ldrb	r3, [r2, #0]
  404372:	f043 0301 	orr.w	r3, r3, #1
  404376:	7013      	strb	r3, [r2, #0]
            dcode128->element = 7;
  404378:	697a      	ldr	r2, [r7, #20]
  40437a:	7813      	ldrb	r3, [r2, #0]
  40437c:	f043 030e 	orr.w	r3, r3, #14
  404380:	7013      	strb	r3, [r2, #0]
  404382:	e004      	b.n	40438e <_zbar_decode_code128+0x156>
        }
        else
            dcode128->direction = ZBAR_SPACE;
  404384:	697a      	ldr	r2, [r7, #20]
  404386:	7813      	ldrb	r3, [r2, #0]
  404388:	f36f 0300 	bfc	r3, #0, #1
  40438c:	7013      	strb	r3, [r2, #0]
        dcode128->start = c;
  40438e:	7cfa      	ldrb	r2, [r7, #19]
  404390:	697b      	ldr	r3, [r7, #20]
  404392:	709a      	strb	r2, [r3, #2]
        dcode128->width = dcode128->s6;
  404394:	697b      	ldr	r3, [r7, #20]
  404396:	685a      	ldr	r2, [r3, #4]
  404398:	697b      	ldr	r3, [r7, #20]
  40439a:	609a      	str	r2, [r3, #8]
        dbprintf(2, " dir=%x [valid start]\n", dcode128->direction);
  40439c:	bf00      	nop
        return(0);
  40439e:	2300      	movs	r3, #0
  4043a0:	e145      	b.n	40462e <_zbar_decode_code128+0x3f6>
    }
    else if(c < 0 || size_buf(dcode, dcode128->character + 1)) {
  4043a2:	f997 3013 	ldrsb.w	r3, [r7, #19]
  4043a6:	2b00      	cmp	r3, #0
  4043a8:	db0d      	blt.n	4043c6 <_zbar_decode_code128+0x18e>
  4043aa:	697b      	ldr	r3, [r7, #20]
  4043ac:	881b      	ldrh	r3, [r3, #0]
  4043ae:	f343 130b 	sbfx	r3, r3, #4, #12
  4043b2:	b29b      	uxth	r3, r3
  4043b4:	b21b      	sxth	r3, r3
  4043b6:	3301      	adds	r3, #1
  4043b8:	6878      	ldr	r0, [r7, #4]
  4043ba:	4619      	mov	r1, r3
  4043bc:	4b43      	ldr	r3, [pc, #268]	; (4044cc <_zbar_decode_code128+0x294>)
  4043be:	4798      	blx	r3
  4043c0:	4603      	mov	r3, r0
  4043c2:	2b00      	cmp	r3, #0
  4043c4:	d015      	beq.n	4043f2 <_zbar_decode_code128+0x1ba>
        dbprintf(1, (c < 0) ? " [aborted]\n" : " [overflow]\n");
  4043c6:	bf00      	nop
        if(dcode128->character > 1)
  4043c8:	697b      	ldr	r3, [r7, #20]
  4043ca:	881b      	ldrh	r3, [r3, #0]
  4043cc:	f343 130b 	sbfx	r3, r3, #4, #12
  4043d0:	b29b      	uxth	r3, r3
  4043d2:	b21b      	sxth	r3, r3
  4043d4:	2b01      	cmp	r3, #1
  4043d6:	dd03      	ble.n	4043e0 <_zbar_decode_code128+0x1a8>
            release_lock(dcode, ZBAR_CODE128);
  4043d8:	6878      	ldr	r0, [r7, #4]
  4043da:	2180      	movs	r1, #128	; 0x80
  4043dc:	4b3c      	ldr	r3, [pc, #240]	; (4044d0 <_zbar_decode_code128+0x298>)
  4043de:	4798      	blx	r3
        dcode128->character = -1;
  4043e0:	697a      	ldr	r2, [r7, #20]
  4043e2:	8813      	ldrh	r3, [r2, #0]
  4043e4:	f04f 31ff 	mov.w	r1, #4294967295
  4043e8:	f361 130f 	bfi	r3, r1, #4, #12
  4043ec:	8013      	strh	r3, [r2, #0]
        return(0);
  4043ee:	2300      	movs	r3, #0
  4043f0:	e11d      	b.n	40462e <_zbar_decode_code128+0x3f6>
    }
    else {
        unsigned dw;
        if(dcode128->width > dcode128->s6)
  4043f2:	697b      	ldr	r3, [r7, #20]
  4043f4:	689a      	ldr	r2, [r3, #8]
  4043f6:	697b      	ldr	r3, [r7, #20]
  4043f8:	685b      	ldr	r3, [r3, #4]
  4043fa:	429a      	cmp	r2, r3
  4043fc:	d906      	bls.n	40440c <_zbar_decode_code128+0x1d4>
            dw = dcode128->width - dcode128->s6;
  4043fe:	697b      	ldr	r3, [r7, #20]
  404400:	689a      	ldr	r2, [r3, #8]
  404402:	697b      	ldr	r3, [r7, #20]
  404404:	685b      	ldr	r3, [r3, #4]
  404406:	1ad3      	subs	r3, r2, r3
  404408:	61fb      	str	r3, [r7, #28]
  40440a:	e005      	b.n	404418 <_zbar_decode_code128+0x1e0>
        else
            dw = dcode128->s6 - dcode128->width;
  40440c:	697b      	ldr	r3, [r7, #20]
  40440e:	685a      	ldr	r2, [r3, #4]
  404410:	697b      	ldr	r3, [r7, #20]
  404412:	689b      	ldr	r3, [r3, #8]
  404414:	1ad3      	subs	r3, r2, r3
  404416:	61fb      	str	r3, [r7, #28]
        dw *= 4;
  404418:	69fb      	ldr	r3, [r7, #28]
  40441a:	009b      	lsls	r3, r3, #2
  40441c:	61fb      	str	r3, [r7, #28]
        if(dw > dcode128->width) {
  40441e:	697b      	ldr	r3, [r7, #20]
  404420:	689a      	ldr	r2, [r3, #8]
  404422:	69fb      	ldr	r3, [r7, #28]
  404424:	429a      	cmp	r2, r3
  404426:	d215      	bcs.n	404454 <_zbar_decode_code128+0x21c>
            dbprintf(1, " [width var]\n");
  404428:	bf00      	nop
            if(dcode128->character > 1)
  40442a:	697b      	ldr	r3, [r7, #20]
  40442c:	881b      	ldrh	r3, [r3, #0]
  40442e:	f343 130b 	sbfx	r3, r3, #4, #12
  404432:	b29b      	uxth	r3, r3
  404434:	b21b      	sxth	r3, r3
  404436:	2b01      	cmp	r3, #1
  404438:	dd03      	ble.n	404442 <_zbar_decode_code128+0x20a>
                release_lock(dcode, ZBAR_CODE128);
  40443a:	6878      	ldr	r0, [r7, #4]
  40443c:	2180      	movs	r1, #128	; 0x80
  40443e:	4b24      	ldr	r3, [pc, #144]	; (4044d0 <_zbar_decode_code128+0x298>)
  404440:	4798      	blx	r3
            dcode128->character = -1;
  404442:	697a      	ldr	r2, [r7, #20]
  404444:	8813      	ldrh	r3, [r2, #0]
  404446:	f04f 31ff 	mov.w	r1, #4294967295
  40444a:	f361 130f 	bfi	r3, r1, #4, #12
  40444e:	8013      	strh	r3, [r2, #0]
            return(0);
  404450:	2300      	movs	r3, #0
  404452:	e0ec      	b.n	40462e <_zbar_decode_code128+0x3f6>
        }
    }
    dcode128->width = dcode128->s6;
  404454:	697b      	ldr	r3, [r7, #20]
  404456:	685a      	ldr	r2, [r3, #4]
  404458:	697b      	ldr	r3, [r7, #20]
  40445a:	609a      	str	r2, [r3, #8]

    zassert(dcode->buf_alloc > dcode128->character, 0,
  40445c:	687b      	ldr	r3, [r7, #4]
  40445e:	6d5a      	ldr	r2, [r3, #84]	; 0x54
  404460:	697b      	ldr	r3, [r7, #20]
  404462:	881b      	ldrh	r3, [r3, #0]
  404464:	f343 130b 	sbfx	r3, r3, #4, #12
  404468:	b29b      	uxth	r3, r3
  40446a:	b21b      	sxth	r3, r3
  40446c:	429a      	cmp	r2, r3
  40446e:	d83f      	bhi.n	4044f0 <_zbar_decode_code128+0x2b8>
  404470:	4b18      	ldr	r3, [pc, #96]	; (4044d4 <_zbar_decode_code128+0x29c>)
  404472:	681b      	ldr	r3, [r3, #0]
  404474:	f8d3 800c 	ldr.w	r8, [r3, #12]
  404478:	687b      	ldr	r3, [r7, #4]
  40447a:	6d5e      	ldr	r6, [r3, #84]	; 0x54
  40447c:	697b      	ldr	r3, [r7, #20]
  40447e:	881b      	ldrh	r3, [r3, #0]
  404480:	f343 130b 	sbfx	r3, r3, #4, #12
  404484:	b29b      	uxth	r3, r3
  404486:	b21d      	sxth	r5, r3
  404488:	f997 4013 	ldrsb.w	r4, [r7, #19]
  40448c:	687b      	ldr	r3, [r7, #4]
  40448e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404490:	687b      	ldr	r3, [r7, #4]
  404492:	6d5b      	ldr	r3, [r3, #84]	; 0x54
  404494:	4610      	mov	r0, r2
  404496:	4619      	mov	r1, r3
  404498:	4b0f      	ldr	r3, [pc, #60]	; (4044d8 <_zbar_decode_code128+0x2a0>)
  40449a:	4798      	blx	r3
  40449c:	4602      	mov	r2, r0
  40449e:	4b0f      	ldr	r3, [pc, #60]	; (4044dc <_zbar_decode_code128+0x2a4>)
  4044a0:	9300      	str	r3, [sp, #0]
  4044a2:	4b0f      	ldr	r3, [pc, #60]	; (4044e0 <_zbar_decode_code128+0x2a8>)
  4044a4:	9301      	str	r3, [sp, #4]
  4044a6:	9602      	str	r6, [sp, #8]
  4044a8:	9503      	str	r5, [sp, #12]
  4044aa:	9404      	str	r4, [sp, #16]
  4044ac:	9205      	str	r2, [sp, #20]
  4044ae:	4640      	mov	r0, r8
  4044b0:	490c      	ldr	r1, [pc, #48]	; (4044e4 <_zbar_decode_code128+0x2ac>)
  4044b2:	4a0d      	ldr	r2, [pc, #52]	; (4044e8 <_zbar_decode_code128+0x2b0>)
  4044b4:	f44f 7304 	mov.w	r3, #528	; 0x210
  4044b8:	4c0c      	ldr	r4, [pc, #48]	; (4044ec <_zbar_decode_code128+0x2b4>)
  4044ba:	47a0      	blx	r4
  4044bc:	2300      	movs	r3, #0
  4044be:	e0b6      	b.n	40462e <_zbar_decode_code128+0x3f6>
  4044c0:	00403175 	.word	0x00403175
  4044c4:	00403155 	.word	0x00403155
  4044c8:	00403605 	.word	0x00403605
  4044cc:	0040328d 	.word	0x0040328d
  4044d0:	0040321d 	.word	0x0040321d
  4044d4:	200012d0 	.word	0x200012d0
  4044d8:	00405759 	.word	0x00405759
  4044dc:	0043c0ec 	.word	0x0043c0ec
  4044e0:	0043bfd0 	.word	0x0043bfd0
  4044e4:	0043bf88 	.word	0x0043bf88
  4044e8:	0043bc54 	.word	0x0043bc54
  4044ec:	0043413d 	.word	0x0043413d
            "alloc=%x idx=%x c=%02x %s\n",
            dcode->buf_alloc, dcode128->character, c,
            _zbar_decoder_buf_dump(dcode->buf, dcode->buf_alloc));

    if(dcode128->character == 1) {
  4044f0:	697b      	ldr	r3, [r7, #20]
  4044f2:	881b      	ldrh	r3, [r3, #0]
  4044f4:	f023 030f 	bic.w	r3, r3, #15
  4044f8:	b29b      	uxth	r3, r3
  4044fa:	2b10      	cmp	r3, #16
  4044fc:	d114      	bne.n	404528 <_zbar_decode_code128+0x2f0>
        /* lock shared resources */
        if(acquire_lock(dcode, ZBAR_CODE128)) {
  4044fe:	6878      	ldr	r0, [r7, #4]
  404500:	2180      	movs	r1, #128	; 0x80
  404502:	4b4d      	ldr	r3, [pc, #308]	; (404638 <_zbar_decode_code128+0x400>)
  404504:	4798      	blx	r3
  404506:	4603      	mov	r3, r0
  404508:	2b00      	cmp	r3, #0
  40450a:	d008      	beq.n	40451e <_zbar_decode_code128+0x2e6>
            dcode128->character = -1;
  40450c:	697a      	ldr	r2, [r7, #20]
  40450e:	8813      	ldrh	r3, [r2, #0]
  404510:	f04f 31ff 	mov.w	r1, #4294967295
  404514:	f361 130f 	bfi	r3, r1, #4, #12
  404518:	8013      	strh	r3, [r2, #0]
            return(0);
  40451a:	2300      	movs	r3, #0
  40451c:	e087      	b.n	40462e <_zbar_decode_code128+0x3f6>
        }
        dcode->buf[0] = dcode128->start;
  40451e:	687b      	ldr	r3, [r7, #4]
  404520:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  404522:	697a      	ldr	r2, [r7, #20]
  404524:	7892      	ldrb	r2, [r2, #2]
  404526:	701a      	strb	r2, [r3, #0]
    }

    dcode->buf[dcode128->character++] = c;
  404528:	687b      	ldr	r3, [r7, #4]
  40452a:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
  40452c:	697b      	ldr	r3, [r7, #20]
  40452e:	881b      	ldrh	r3, [r3, #0]
  404530:	f343 130b 	sbfx	r3, r3, #4, #12
  404534:	b29c      	uxth	r4, r3
  404536:	4623      	mov	r3, r4
  404538:	f3c3 030b 	ubfx	r3, r3, #0, #12
  40453c:	b29b      	uxth	r3, r3
  40453e:	3301      	adds	r3, #1
  404540:	f3c3 030b 	ubfx	r3, r3, #0, #12
  404544:	b29b      	uxth	r3, r3
  404546:	011b      	lsls	r3, r3, #4
  404548:	b21b      	sxth	r3, r3
  40454a:	111b      	asrs	r3, r3, #4
  40454c:	b298      	uxth	r0, r3
  40454e:	697a      	ldr	r2, [r7, #20]
  404550:	8813      	ldrh	r3, [r2, #0]
  404552:	f360 130f 	bfi	r3, r0, #4, #12
  404556:	8013      	strh	r3, [r2, #0]
  404558:	b223      	sxth	r3, r4
  40455a:	440b      	add	r3, r1
  40455c:	7cfa      	ldrb	r2, [r7, #19]
  40455e:	701a      	strb	r2, [r3, #0]

    if(dcode128->character > 2 &&
  404560:	697b      	ldr	r3, [r7, #20]
  404562:	881b      	ldrh	r3, [r3, #0]
  404564:	f343 130b 	sbfx	r3, r3, #4, #12
  404568:	b29b      	uxth	r3, r3
  40456a:	b21b      	sxth	r3, r3
  40456c:	2b02      	cmp	r3, #2
  40456e:	dd5c      	ble.n	40462a <_zbar_decode_code128+0x3f2>
       ((dcode128->direction)
        ? c >= START_A && c <= START_C
  404570:	697b      	ldr	r3, [r7, #20]
  404572:	781b      	ldrb	r3, [r3, #0]
  404574:	f003 0301 	and.w	r3, r3, #1
  404578:	b2db      	uxtb	r3, r3
        dcode->buf[0] = dcode128->start;
    }

    dcode->buf[dcode128->character++] = c;

    if(dcode128->character > 2 &&
  40457a:	2b00      	cmp	r3, #0
  40457c:	d00e      	beq.n	40459c <_zbar_decode_code128+0x364>
       ((dcode128->direction)
        ? c >= START_A && c <= START_C
  40457e:	f997 3013 	ldrsb.w	r3, [r7, #19]
  404582:	2b66      	cmp	r3, #102	; 0x66
  404584:	dd05      	ble.n	404592 <_zbar_decode_code128+0x35a>
  404586:	f997 3013 	ldrsb.w	r3, [r7, #19]
  40458a:	2b69      	cmp	r3, #105	; 0x69
  40458c:	dc01      	bgt.n	404592 <_zbar_decode_code128+0x35a>
  40458e:	2301      	movs	r3, #1
  404590:	e000      	b.n	404594 <_zbar_decode_code128+0x35c>
  404592:	2300      	movs	r3, #0
        dcode->buf[0] = dcode128->start;
    }

    dcode->buf[dcode128->character++] = c;

    if(dcode128->character > 2 &&
  404594:	f003 0301 	and.w	r3, r3, #1
  404598:	b2db      	uxtb	r3, r3
  40459a:	e006      	b.n	4045aa <_zbar_decode_code128+0x372>
  40459c:	f997 3013 	ldrsb.w	r3, [r7, #19]
  4045a0:	2b6a      	cmp	r3, #106	; 0x6a
  4045a2:	bf0c      	ite	eq
  4045a4:	2301      	moveq	r3, #1
  4045a6:	2300      	movne	r3, #0
  4045a8:	b2db      	uxtb	r3, r3
  4045aa:	2b00      	cmp	r3, #0
  4045ac:	d03d      	beq.n	40462a <_zbar_decode_code128+0x3f2>
       ((dcode128->direction)
        ? c >= START_A && c <= START_C
        : c == STOP_FWD)) {
        /* FIXME STOP_FWD should check extra bar (and QZ!) */
        zbar_symbol_type_t sym = ZBAR_CODE128;
  4045ae:	2380      	movs	r3, #128	; 0x80
  4045b0:	837b      	strh	r3, [r7, #26]
        if(validate_checksum(dcode) || postprocess(dcode))
  4045b2:	6878      	ldr	r0, [r7, #4]
  4045b4:	4b21      	ldr	r3, [pc, #132]	; (40463c <_zbar_decode_code128+0x404>)
  4045b6:	4798      	blx	r3
  4045b8:	4603      	mov	r3, r0
  4045ba:	2b00      	cmp	r3, #0
  4045bc:	d105      	bne.n	4045ca <_zbar_decode_code128+0x392>
  4045be:	6878      	ldr	r0, [r7, #4]
  4045c0:	4b1f      	ldr	r3, [pc, #124]	; (404640 <_zbar_decode_code128+0x408>)
  4045c2:	4798      	blx	r3
  4045c4:	4603      	mov	r3, r0
  4045c6:	2b00      	cmp	r3, #0
  4045c8:	d002      	beq.n	4045d0 <_zbar_decode_code128+0x398>
            sym = ZBAR_NONE;
  4045ca:	2300      	movs	r3, #0
  4045cc:	837b      	strh	r3, [r7, #26]
  4045ce:	e01c      	b.n	40460a <_zbar_decode_code128+0x3d2>
        else if(dcode128->character < CFG(*dcode128, ZBAR_CFG_MIN_LEN) ||
  4045d0:	697b      	ldr	r3, [r7, #20]
  4045d2:	881b      	ldrh	r3, [r3, #0]
  4045d4:	f343 130b 	sbfx	r3, r3, #4, #12
  4045d8:	b29b      	uxth	r3, r3
  4045da:	b21a      	sxth	r2, r3
  4045dc:	697b      	ldr	r3, [r7, #20]
  4045de:	691b      	ldr	r3, [r3, #16]
  4045e0:	429a      	cmp	r2, r3
  4045e2:	db0d      	blt.n	404600 <_zbar_decode_code128+0x3c8>
                (CFG(*dcode128, ZBAR_CFG_MAX_LEN) > 0 &&
  4045e4:	697b      	ldr	r3, [r7, #20]
  4045e6:	695b      	ldr	r3, [r3, #20]
        : c == STOP_FWD)) {
        /* FIXME STOP_FWD should check extra bar (and QZ!) */
        zbar_symbol_type_t sym = ZBAR_CODE128;
        if(validate_checksum(dcode) || postprocess(dcode))
            sym = ZBAR_NONE;
        else if(dcode128->character < CFG(*dcode128, ZBAR_CFG_MIN_LEN) ||
  4045e8:	2b00      	cmp	r3, #0
  4045ea:	dd0d      	ble.n	404608 <_zbar_decode_code128+0x3d0>
                (CFG(*dcode128, ZBAR_CFG_MAX_LEN) > 0 &&
                 dcode128->character > CFG(*dcode128, ZBAR_CFG_MAX_LEN))) {
  4045ec:	697b      	ldr	r3, [r7, #20]
  4045ee:	881b      	ldrh	r3, [r3, #0]
  4045f0:	f343 130b 	sbfx	r3, r3, #4, #12
  4045f4:	b29b      	uxth	r3, r3
  4045f6:	b21a      	sxth	r2, r3
  4045f8:	697b      	ldr	r3, [r7, #20]
  4045fa:	695b      	ldr	r3, [r3, #20]
        /* FIXME STOP_FWD should check extra bar (and QZ!) */
        zbar_symbol_type_t sym = ZBAR_CODE128;
        if(validate_checksum(dcode) || postprocess(dcode))
            sym = ZBAR_NONE;
        else if(dcode128->character < CFG(*dcode128, ZBAR_CFG_MIN_LEN) ||
                (CFG(*dcode128, ZBAR_CFG_MAX_LEN) > 0 &&
  4045fc:	429a      	cmp	r2, r3
  4045fe:	dd03      	ble.n	404608 <_zbar_decode_code128+0x3d0>
                 dcode128->character > CFG(*dcode128, ZBAR_CFG_MAX_LEN))) {
            dbprintf(2, " [invalid len]\n");
  404600:	bf00      	nop
            sym = ZBAR_NONE;
  404602:	2300      	movs	r3, #0
  404604:	837b      	strh	r3, [r7, #26]
  404606:	e000      	b.n	40460a <_zbar_decode_code128+0x3d2>
        }
        else
            dbprintf(2, " [valid end]\n");
  404608:	bf00      	nop
        dcode128->character = -1;
  40460a:	697a      	ldr	r2, [r7, #20]
  40460c:	8813      	ldrh	r3, [r2, #0]
  40460e:	f04f 31ff 	mov.w	r1, #4294967295
  404612:	f361 130f 	bfi	r3, r1, #4, #12
  404616:	8013      	strh	r3, [r2, #0]
        if(!sym)
  404618:	8b7b      	ldrh	r3, [r7, #26]
  40461a:	2b00      	cmp	r3, #0
  40461c:	d103      	bne.n	404626 <_zbar_decode_code128+0x3ee>
            release_lock(dcode, ZBAR_CODE128);
  40461e:	6878      	ldr	r0, [r7, #4]
  404620:	2180      	movs	r1, #128	; 0x80
  404622:	4b08      	ldr	r3, [pc, #32]	; (404644 <_zbar_decode_code128+0x40c>)
  404624:	4798      	blx	r3
        return(sym);
  404626:	8b7b      	ldrh	r3, [r7, #26]
  404628:	e001      	b.n	40462e <_zbar_decode_code128+0x3f6>
    }

    dbprintf(2, "\n");
  40462a:	bf00      	nop
    return(0);
  40462c:	2300      	movs	r3, #0
}
  40462e:	4618      	mov	r0, r3
  404630:	3720      	adds	r7, #32
  404632:	46bd      	mov	sp, r7
  404634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404638:	004031e9 	.word	0x004031e9
  40463c:	00403851 	.word	0x00403851
  404640:	00403c91 	.word	0x00403c91
  404644:	0040321d 	.word	0x0040321d

00404648 <get_color>:
#endif
};

/* return current element color */
static inline char get_color (const zbar_decoder_t *dcode)
{
  404648:	b480      	push	{r7}
  40464a:	b083      	sub	sp, #12
  40464c:	af00      	add	r7, sp, #0
  40464e:	6078      	str	r0, [r7, #4]
    return(dcode->idx & 1);
  404650:	687b      	ldr	r3, [r7, #4]
  404652:	781b      	ldrb	r3, [r3, #0]
  404654:	f003 0301 	and.w	r3, r3, #1
  404658:	b2db      	uxtb	r3, r3
}
  40465a:	4618      	mov	r0, r3
  40465c:	370c      	adds	r7, #12
  40465e:	46bd      	mov	sp, r7
  404660:	f85d 7b04 	ldr.w	r7, [sp], #4
  404664:	4770      	bx	lr
  404666:	bf00      	nop

00404668 <get_width>:

/* retrieve i-th previous element width */
static inline unsigned get_width (const zbar_decoder_t *dcode,
                                  unsigned char offset)
{
  404668:	b480      	push	{r7}
  40466a:	b083      	sub	sp, #12
  40466c:	af00      	add	r7, sp, #0
  40466e:	6078      	str	r0, [r7, #4]
  404670:	460b      	mov	r3, r1
  404672:	70fb      	strb	r3, [r7, #3]
    return(dcode->w[(dcode->idx - offset) & (DECODE_WINDOW - 1)]);
  404674:	687b      	ldr	r3, [r7, #4]
  404676:	781b      	ldrb	r3, [r3, #0]
  404678:	461a      	mov	r2, r3
  40467a:	78fb      	ldrb	r3, [r7, #3]
  40467c:	1ad3      	subs	r3, r2, r3
  40467e:	f003 030f 	and.w	r3, r3, #15
  404682:	687a      	ldr	r2, [r7, #4]
  404684:	009b      	lsls	r3, r3, #2
  404686:	4413      	add	r3, r2
  404688:	685b      	ldr	r3, [r3, #4]
}
  40468a:	4618      	mov	r0, r3
  40468c:	370c      	adds	r7, #12
  40468e:	46bd      	mov	sp, r7
  404690:	f85d 7b04 	ldr.w	r7, [sp], #4
  404694:	4770      	bx	lr
  404696:	bf00      	nop

00404698 <decode_e>:
 *   - n should be > 3
 */
static inline int decode_e (unsigned e,
                            unsigned s,
                            unsigned n)
{
  404698:	b480      	push	{r7}
  40469a:	b087      	sub	sp, #28
  40469c:	af00      	add	r7, sp, #0
  40469e:	60f8      	str	r0, [r7, #12]
  4046a0:	60b9      	str	r1, [r7, #8]
  4046a2:	607a      	str	r2, [r7, #4]
    /* result is encoded number of units - 2
     * (for use as zero based index)
     * or -1 if invalid
     */
    unsigned char E = ((e * n * 2 + 1) / s - 3) / 2;
  4046a4:	68fb      	ldr	r3, [r7, #12]
  4046a6:	687a      	ldr	r2, [r7, #4]
  4046a8:	fb02 f303 	mul.w	r3, r2, r3
  4046ac:	005b      	lsls	r3, r3, #1
  4046ae:	1c5a      	adds	r2, r3, #1
  4046b0:	68bb      	ldr	r3, [r7, #8]
  4046b2:	fbb2 f3f3 	udiv	r3, r2, r3
  4046b6:	3b03      	subs	r3, #3
  4046b8:	085b      	lsrs	r3, r3, #1
  4046ba:	75fb      	strb	r3, [r7, #23]
    return((E >= n - 3) ? -1 : E);
  4046bc:	7dfa      	ldrb	r2, [r7, #23]
  4046be:	687b      	ldr	r3, [r7, #4]
  4046c0:	3b03      	subs	r3, #3
  4046c2:	429a      	cmp	r2, r3
  4046c4:	d201      	bcs.n	4046ca <decode_e+0x32>
  4046c6:	7dfb      	ldrb	r3, [r7, #23]
  4046c8:	e001      	b.n	4046ce <decode_e+0x36>
  4046ca:	f04f 33ff 	mov.w	r3, #4294967295
}
  4046ce:	4618      	mov	r0, r3
  4046d0:	371c      	adds	r7, #28
  4046d2:	46bd      	mov	sp, r7
  4046d4:	f85d 7b04 	ldr.w	r7, [sp], #4
  4046d8:	4770      	bx	lr
  4046da:	bf00      	nop

004046dc <acquire_lock>:
}

/* acquire shared state lock */
static inline char acquire_lock (zbar_decoder_t *dcode,
                                 zbar_symbol_type_t req)
{
  4046dc:	b480      	push	{r7}
  4046de:	b083      	sub	sp, #12
  4046e0:	af00      	add	r7, sp, #0
  4046e2:	6078      	str	r0, [r7, #4]
  4046e4:	460b      	mov	r3, r1
  4046e6:	807b      	strh	r3, [r7, #2]
    if(dcode->lock) {
  4046e8:	687b      	ldr	r3, [r7, #4]
  4046ea:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  4046ee:	2b00      	cmp	r3, #0
  4046f0:	d002      	beq.n	4046f8 <acquire_lock+0x1c>
        dbprintf(2, " [locked %d]\n", dcode->lock);
  4046f2:	bf00      	nop
        return(1);
  4046f4:	2301      	movs	r3, #1
  4046f6:	e004      	b.n	404702 <acquire_lock+0x26>
    }
    dcode->lock = req;
  4046f8:	687b      	ldr	r3, [r7, #4]
  4046fa:	887a      	ldrh	r2, [r7, #2]
  4046fc:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    return(0);
  404700:	2300      	movs	r3, #0
}
  404702:	4618      	mov	r0, r3
  404704:	370c      	adds	r7, #12
  404706:	46bd      	mov	sp, r7
  404708:	f85d 7b04 	ldr.w	r7, [sp], #4
  40470c:	4770      	bx	lr
  40470e:	bf00      	nop

00404710 <release_lock>:

/* check and release shared state lock */
static inline char release_lock (zbar_decoder_t *dcode,
                                 zbar_symbol_type_t req)
{
  404710:	b590      	push	{r4, r7, lr}
  404712:	b087      	sub	sp, #28
  404714:	af04      	add	r7, sp, #16
  404716:	6078      	str	r0, [r7, #4]
  404718:	460b      	mov	r3, r1
  40471a:	807b      	strh	r3, [r7, #2]
    zassert(dcode->lock == req, 1, "lock=%d req=%d\n",
  40471c:	687b      	ldr	r3, [r7, #4]
  40471e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  404722:	887a      	ldrh	r2, [r7, #2]
  404724:	429a      	cmp	r2, r3
  404726:	d016      	beq.n	404756 <release_lock+0x46>
  404728:	4b0f      	ldr	r3, [pc, #60]	; (404768 <release_lock+0x58>)
  40472a:	681b      	ldr	r3, [r3, #0]
  40472c:	68d9      	ldr	r1, [r3, #12]
  40472e:	687b      	ldr	r3, [r7, #4]
  404730:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  404734:	4618      	mov	r0, r3
  404736:	887b      	ldrh	r3, [r7, #2]
  404738:	4a0c      	ldr	r2, [pc, #48]	; (40476c <release_lock+0x5c>)
  40473a:	9200      	str	r2, [sp, #0]
  40473c:	4a0c      	ldr	r2, [pc, #48]	; (404770 <release_lock+0x60>)
  40473e:	9201      	str	r2, [sp, #4]
  404740:	9002      	str	r0, [sp, #8]
  404742:	9303      	str	r3, [sp, #12]
  404744:	4608      	mov	r0, r1
  404746:	490b      	ldr	r1, [pc, #44]	; (404774 <release_lock+0x64>)
  404748:	4a0b      	ldr	r2, [pc, #44]	; (404778 <release_lock+0x68>)
  40474a:	f240 1307 	movw	r3, #263	; 0x107
  40474e:	4c0b      	ldr	r4, [pc, #44]	; (40477c <release_lock+0x6c>)
  404750:	47a0      	blx	r4
  404752:	2301      	movs	r3, #1
  404754:	e004      	b.n	404760 <release_lock+0x50>
            dcode->lock, req);
    dcode->lock = 0;
  404756:	687b      	ldr	r3, [r7, #4]
  404758:	2200      	movs	r2, #0
  40475a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    return(0);
  40475e:	2300      	movs	r3, #0
}
  404760:	4618      	mov	r0, r3
  404762:	370c      	adds	r7, #12
  404764:	46bd      	mov	sp, r7
  404766:	bd90      	pop	{r4, r7, pc}
  404768:	200012d0 	.word	0x200012d0
  40476c:	0043c42c 	.word	0x0043c42c
  404770:	0043c1bc 	.word	0x0043c1bc
  404774:	0043c150 	.word	0x0043c150
  404778:	0043c18c 	.word	0x0043c18c
  40477c:	0043413d 	.word	0x0043413d

00404780 <size_buf>:

/* ensure output buffer has sufficient allocation for request */
static inline char size_buf (zbar_decoder_t *dcode,
                             unsigned len)
{
  404780:	b580      	push	{r7, lr}
  404782:	b084      	sub	sp, #16
  404784:	af00      	add	r7, sp, #0
  404786:	6078      	str	r0, [r7, #4]
  404788:	6039      	str	r1, [r7, #0]
    unsigned char *buf;
    if(len <= BUFFER_MIN)
  40478a:	683b      	ldr	r3, [r7, #0]
  40478c:	2b20      	cmp	r3, #32
  40478e:	d801      	bhi.n	404794 <size_buf+0x14>
        return(0);
  404790:	2300      	movs	r3, #0
  404792:	e031      	b.n	4047f8 <size_buf+0x78>
    if(len < dcode->buf_alloc)
  404794:	687b      	ldr	r3, [r7, #4]
  404796:	6d5a      	ldr	r2, [r3, #84]	; 0x54
  404798:	683b      	ldr	r3, [r7, #0]
  40479a:	429a      	cmp	r2, r3
  40479c:	d901      	bls.n	4047a2 <size_buf+0x22>
        /* FIXME size reduction heuristic? */
        return(0);
  40479e:	2300      	movs	r3, #0
  4047a0:	e02a      	b.n	4047f8 <size_buf+0x78>
    if(len > BUFFER_MAX)
  4047a2:	683b      	ldr	r3, [r7, #0]
  4047a4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  4047a8:	d901      	bls.n	4047ae <size_buf+0x2e>
        return(1);
  4047aa:	2301      	movs	r3, #1
  4047ac:	e024      	b.n	4047f8 <size_buf+0x78>
    if(len < dcode->buf_alloc + BUFFER_INCR) {
  4047ae:	687b      	ldr	r3, [r7, #4]
  4047b0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
  4047b2:	f103 0210 	add.w	r2, r3, #16
  4047b6:	683b      	ldr	r3, [r7, #0]
  4047b8:	429a      	cmp	r2, r3
  4047ba:	d90a      	bls.n	4047d2 <size_buf+0x52>
        len = dcode->buf_alloc + BUFFER_INCR;
  4047bc:	687b      	ldr	r3, [r7, #4]
  4047be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
  4047c0:	3310      	adds	r3, #16
  4047c2:	603b      	str	r3, [r7, #0]
        if(len > BUFFER_MAX)
  4047c4:	683b      	ldr	r3, [r7, #0]
  4047c6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  4047ca:	d902      	bls.n	4047d2 <size_buf+0x52>
            len = BUFFER_MAX;
  4047cc:	f44f 7380 	mov.w	r3, #256	; 0x100
  4047d0:	603b      	str	r3, [r7, #0]
    }
    buf = realloc(dcode->buf, len);
  4047d2:	687b      	ldr	r3, [r7, #4]
  4047d4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  4047d6:	4618      	mov	r0, r3
  4047d8:	6839      	ldr	r1, [r7, #0]
  4047da:	4b09      	ldr	r3, [pc, #36]	; (404800 <size_buf+0x80>)
  4047dc:	4798      	blx	r3
  4047de:	60f8      	str	r0, [r7, #12]
    if(!buf)
  4047e0:	68fb      	ldr	r3, [r7, #12]
  4047e2:	2b00      	cmp	r3, #0
  4047e4:	d101      	bne.n	4047ea <size_buf+0x6a>
        return(1);
  4047e6:	2301      	movs	r3, #1
  4047e8:	e006      	b.n	4047f8 <size_buf+0x78>
    dcode->buf = buf;
  4047ea:	687b      	ldr	r3, [r7, #4]
  4047ec:	68fa      	ldr	r2, [r7, #12]
  4047ee:	65da      	str	r2, [r3, #92]	; 0x5c
    dcode->buf_alloc = len;
  4047f0:	687b      	ldr	r3, [r7, #4]
  4047f2:	683a      	ldr	r2, [r7, #0]
  4047f4:	655a      	str	r2, [r3, #84]	; 0x54
    return(0);
  4047f6:	2300      	movs	r3, #0
}
  4047f8:	4618      	mov	r0, r3
  4047fa:	3710      	adds	r7, #16
  4047fc:	46bd      	mov	sp, r7
  4047fe:	bd80      	pop	{r7, pc}
  404800:	00435179 	.word	0x00435179

00404804 <code39_decode1>:
    "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%*";

static inline unsigned char code39_decode1 (unsigned char enc,
                                            unsigned e,
                                            unsigned s)
{
  404804:	b580      	push	{r7, lr}
  404806:	b086      	sub	sp, #24
  404808:	af00      	add	r7, sp, #0
  40480a:	4603      	mov	r3, r0
  40480c:	60b9      	str	r1, [r7, #8]
  40480e:	607a      	str	r2, [r7, #4]
  404810:	73fb      	strb	r3, [r7, #15]
    unsigned char E = decode_e(e, s, 72);
  404812:	68b8      	ldr	r0, [r7, #8]
  404814:	6879      	ldr	r1, [r7, #4]
  404816:	2248      	movs	r2, #72	; 0x48
  404818:	4b0d      	ldr	r3, [pc, #52]	; (404850 <code39_decode1+0x4c>)
  40481a:	4798      	blx	r3
  40481c:	4603      	mov	r3, r0
  40481e:	75fb      	strb	r3, [r7, #23]
    if(E > 18)
  404820:	7dfb      	ldrb	r3, [r7, #23]
  404822:	2b12      	cmp	r3, #18
  404824:	d901      	bls.n	40482a <code39_decode1+0x26>
        return(0xff);
  404826:	23ff      	movs	r3, #255	; 0xff
  404828:	e00d      	b.n	404846 <code39_decode1+0x42>
    enc <<= 1;
  40482a:	7bfb      	ldrb	r3, [r7, #15]
  40482c:	005b      	lsls	r3, r3, #1
  40482e:	73fb      	strb	r3, [r7, #15]
    if(E > 6) {
  404830:	7dfb      	ldrb	r3, [r7, #23]
  404832:	2b06      	cmp	r3, #6
  404834:	d905      	bls.n	404842 <code39_decode1+0x3e>
        enc |= 1;
  404836:	7bfb      	ldrb	r3, [r7, #15]
  404838:	f043 0301 	orr.w	r3, r3, #1
  40483c:	73fb      	strb	r3, [r7, #15]
        dbprintf(2, "1");
  40483e:	bf00      	nop
  404840:	e000      	b.n	404844 <code39_decode1+0x40>
    }
    else
        dbprintf(2, "0");
  404842:	bf00      	nop
    return(enc);
  404844:	7bfb      	ldrb	r3, [r7, #15]
}
  404846:	4618      	mov	r0, r3
  404848:	3718      	adds	r7, #24
  40484a:	46bd      	mov	sp, r7
  40484c:	bd80      	pop	{r7, pc}
  40484e:	bf00      	nop
  404850:	00404699 	.word	0x00404699

00404854 <code39_decode9>:

static inline signed char code39_decode9 (zbar_decoder_t *dcode)
{
  404854:	b590      	push	{r4, r7, lr}
  404856:	b08d      	sub	sp, #52	; 0x34
  404858:	af06      	add	r7, sp, #24
  40485a:	6078      	str	r0, [r7, #4]
    code39_decoder_t *dcode39 = &dcode->code39;
  40485c:	687b      	ldr	r3, [r7, #4]
  40485e:	33ec      	adds	r3, #236	; 0xec
  404860:	613b      	str	r3, [r7, #16]

    if(dcode39->s9 < 9)
  404862:	693b      	ldr	r3, [r7, #16]
  404864:	685b      	ldr	r3, [r3, #4]
  404866:	2b08      	cmp	r3, #8
  404868:	d801      	bhi.n	40486e <code39_decode9+0x1a>
        return(-1);
  40486a:	23ff      	movs	r3, #255	; 0xff
  40486c:	e0c8      	b.n	404a00 <code39_decode9+0x1ac>

    /* threshold bar width ratios */
    unsigned char i, enc = 0;
  40486e:	2300      	movs	r3, #0
  404870:	75bb      	strb	r3, [r7, #22]
    for(i = 0; i < 5; i++) {
  404872:	2300      	movs	r3, #0
  404874:	75fb      	strb	r3, [r7, #23]
  404876:	e016      	b.n	4048a6 <code39_decode9+0x52>
        enc = code39_decode1(enc, get_width(dcode, i), dcode39->s9);
  404878:	7dfb      	ldrb	r3, [r7, #23]
  40487a:	6878      	ldr	r0, [r7, #4]
  40487c:	4619      	mov	r1, r3
  40487e:	4b63      	ldr	r3, [pc, #396]	; (404a0c <code39_decode9+0x1b8>)
  404880:	4798      	blx	r3
  404882:	4601      	mov	r1, r0
  404884:	693b      	ldr	r3, [r7, #16]
  404886:	685b      	ldr	r3, [r3, #4]
  404888:	7dba      	ldrb	r2, [r7, #22]
  40488a:	4610      	mov	r0, r2
  40488c:	461a      	mov	r2, r3
  40488e:	4b60      	ldr	r3, [pc, #384]	; (404a10 <code39_decode9+0x1bc>)
  404890:	4798      	blx	r3
  404892:	4603      	mov	r3, r0
  404894:	75bb      	strb	r3, [r7, #22]
        if(enc == 0xff)
  404896:	7dbb      	ldrb	r3, [r7, #22]
  404898:	2bff      	cmp	r3, #255	; 0xff
  40489a:	d101      	bne.n	4048a0 <code39_decode9+0x4c>
            return(-1);
  40489c:	23ff      	movs	r3, #255	; 0xff
  40489e:	e0af      	b.n	404a00 <code39_decode9+0x1ac>
    if(dcode39->s9 < 9)
        return(-1);

    /* threshold bar width ratios */
    unsigned char i, enc = 0;
    for(i = 0; i < 5; i++) {
  4048a0:	7dfb      	ldrb	r3, [r7, #23]
  4048a2:	3301      	adds	r3, #1
  4048a4:	75fb      	strb	r3, [r7, #23]
  4048a6:	7dfb      	ldrb	r3, [r7, #23]
  4048a8:	2b04      	cmp	r3, #4
  4048aa:	d9e5      	bls.n	404878 <code39_decode9+0x24>
        enc = code39_decode1(enc, get_width(dcode, i), dcode39->s9);
        if(enc == 0xff)
            return(-1);
    }
    zassert(enc < 0x20, -1, " enc=%x s9=%x\n", enc, dcode39->s9);
  4048ac:	7dbb      	ldrb	r3, [r7, #22]
  4048ae:	2b1f      	cmp	r3, #31
  4048b0:	d912      	bls.n	4048d8 <code39_decode9+0x84>
  4048b2:	4b58      	ldr	r3, [pc, #352]	; (404a14 <code39_decode9+0x1c0>)
  4048b4:	681b      	ldr	r3, [r3, #0]
  4048b6:	68d8      	ldr	r0, [r3, #12]
  4048b8:	7dba      	ldrb	r2, [r7, #22]
  4048ba:	693b      	ldr	r3, [r7, #16]
  4048bc:	685b      	ldr	r3, [r3, #4]
  4048be:	4956      	ldr	r1, [pc, #344]	; (404a18 <code39_decode9+0x1c4>)
  4048c0:	9100      	str	r1, [sp, #0]
  4048c2:	4956      	ldr	r1, [pc, #344]	; (404a1c <code39_decode9+0x1c8>)
  4048c4:	9101      	str	r1, [sp, #4]
  4048c6:	9202      	str	r2, [sp, #8]
  4048c8:	9303      	str	r3, [sp, #12]
  4048ca:	4955      	ldr	r1, [pc, #340]	; (404a20 <code39_decode9+0x1cc>)
  4048cc:	4a55      	ldr	r2, [pc, #340]	; (404a24 <code39_decode9+0x1d0>)
  4048ce:	23a0      	movs	r3, #160	; 0xa0
  4048d0:	4c55      	ldr	r4, [pc, #340]	; (404a28 <code39_decode9+0x1d4>)
  4048d2:	47a0      	blx	r4
  4048d4:	23ff      	movs	r3, #255	; 0xff
  4048d6:	e093      	b.n	404a00 <code39_decode9+0x1ac>

    /* lookup first 5 encoded widths for coarse decode */
    unsigned char idx = code39_hi[enc];
  4048d8:	7dbb      	ldrb	r3, [r7, #22]
  4048da:	4a54      	ldr	r2, [pc, #336]	; (404a2c <code39_decode9+0x1d8>)
  4048dc:	5cd3      	ldrb	r3, [r2, r3]
  4048de:	757b      	strb	r3, [r7, #21]
    if(idx == 0xff)
  4048e0:	7d7b      	ldrb	r3, [r7, #21]
  4048e2:	2bff      	cmp	r3, #255	; 0xff
  4048e4:	d101      	bne.n	4048ea <code39_decode9+0x96>
        return(-1);
  4048e6:	23ff      	movs	r3, #255	; 0xff
  4048e8:	e08a      	b.n	404a00 <code39_decode9+0x1ac>

    /* encode remaining widths (NB first encoded width is lost) */
    for(; i < 9; i++) {
  4048ea:	e016      	b.n	40491a <code39_decode9+0xc6>
        enc = code39_decode1(enc, get_width(dcode, i), dcode39->s9);
  4048ec:	7dfb      	ldrb	r3, [r7, #23]
  4048ee:	6878      	ldr	r0, [r7, #4]
  4048f0:	4619      	mov	r1, r3
  4048f2:	4b46      	ldr	r3, [pc, #280]	; (404a0c <code39_decode9+0x1b8>)
  4048f4:	4798      	blx	r3
  4048f6:	4601      	mov	r1, r0
  4048f8:	693b      	ldr	r3, [r7, #16]
  4048fa:	685b      	ldr	r3, [r3, #4]
  4048fc:	7dba      	ldrb	r2, [r7, #22]
  4048fe:	4610      	mov	r0, r2
  404900:	461a      	mov	r2, r3
  404902:	4b43      	ldr	r3, [pc, #268]	; (404a10 <code39_decode9+0x1bc>)
  404904:	4798      	blx	r3
  404906:	4603      	mov	r3, r0
  404908:	75bb      	strb	r3, [r7, #22]
        if(enc == 0xff)
  40490a:	7dbb      	ldrb	r3, [r7, #22]
  40490c:	2bff      	cmp	r3, #255	; 0xff
  40490e:	d101      	bne.n	404914 <code39_decode9+0xc0>
            return(-1);
  404910:	23ff      	movs	r3, #255	; 0xff
  404912:	e075      	b.n	404a00 <code39_decode9+0x1ac>
    unsigned char idx = code39_hi[enc];
    if(idx == 0xff)
        return(-1);

    /* encode remaining widths (NB first encoded width is lost) */
    for(; i < 9; i++) {
  404914:	7dfb      	ldrb	r3, [r7, #23]
  404916:	3301      	adds	r3, #1
  404918:	75fb      	strb	r3, [r7, #23]
  40491a:	7dfb      	ldrb	r3, [r7, #23]
  40491c:	2b08      	cmp	r3, #8
  40491e:	d9e5      	bls.n	4048ec <code39_decode9+0x98>
        enc = code39_decode1(enc, get_width(dcode, i), dcode39->s9);
        if(enc == 0xff)
            return(-1);
    }

    if((idx & 0xc0) == 0x80)
  404920:	7d7b      	ldrb	r3, [r7, #21]
  404922:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
  404926:	2b80      	cmp	r3, #128	; 0x80
  404928:	d10c      	bne.n	404944 <code39_decode9+0xf0>
        idx = (idx & 0x3f) + ((enc >> 3) & 1);
  40492a:	7d7b      	ldrb	r3, [r7, #21]
  40492c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  404930:	b2da      	uxtb	r2, r3
  404932:	7dbb      	ldrb	r3, [r7, #22]
  404934:	08db      	lsrs	r3, r3, #3
  404936:	b2db      	uxtb	r3, r3
  404938:	f003 0301 	and.w	r3, r3, #1
  40493c:	b2db      	uxtb	r3, r3
  40493e:	4413      	add	r3, r2
  404940:	757b      	strb	r3, [r7, #21]
  404942:	e022      	b.n	40498a <code39_decode9+0x136>
    else if((idx & 0xc0) == 0xc0)
  404944:	7d7b      	ldrb	r3, [r7, #21]
  404946:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
  40494a:	2bc0      	cmp	r3, #192	; 0xc0
  40494c:	d10c      	bne.n	404968 <code39_decode9+0x114>
        idx = (idx & 0x3f) + ((enc >> 2) & 1);
  40494e:	7d7b      	ldrb	r3, [r7, #21]
  404950:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  404954:	b2da      	uxtb	r2, r3
  404956:	7dbb      	ldrb	r3, [r7, #22]
  404958:	089b      	lsrs	r3, r3, #2
  40495a:	b2db      	uxtb	r3, r3
  40495c:	f003 0301 	and.w	r3, r3, #1
  404960:	b2db      	uxtb	r3, r3
  404962:	4413      	add	r3, r2
  404964:	757b      	strb	r3, [r7, #21]
  404966:	e010      	b.n	40498a <code39_decode9+0x136>
    else if(idx & 0xc0)
  404968:	7d7b      	ldrb	r3, [r7, #21]
  40496a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
  40496e:	2b00      	cmp	r3, #0
  404970:	d00b      	beq.n	40498a <code39_decode9+0x136>
        idx = (idx & 0x3f) + ((enc >> 2) & 3);
  404972:	7d7b      	ldrb	r3, [r7, #21]
  404974:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  404978:	b2da      	uxtb	r2, r3
  40497a:	7dbb      	ldrb	r3, [r7, #22]
  40497c:	089b      	lsrs	r3, r3, #2
  40497e:	b2db      	uxtb	r3, r3
  404980:	f003 0303 	and.w	r3, r3, #3
  404984:	b2db      	uxtb	r3, r3
  404986:	4413      	add	r3, r2
  404988:	757b      	strb	r3, [r7, #21]
    zassert(idx < 0x2c, -1, " idx=%x enc=%x s9=%x\n", idx, enc, dcode39->s9);
  40498a:	7d7b      	ldrb	r3, [r7, #21]
  40498c:	2b2b      	cmp	r3, #43	; 0x2b
  40498e:	d915      	bls.n	4049bc <code39_decode9+0x168>
  404990:	4b20      	ldr	r3, [pc, #128]	; (404a14 <code39_decode9+0x1c0>)
  404992:	681b      	ldr	r3, [r3, #0]
  404994:	68dc      	ldr	r4, [r3, #12]
  404996:	7d79      	ldrb	r1, [r7, #21]
  404998:	7dba      	ldrb	r2, [r7, #22]
  40499a:	693b      	ldr	r3, [r7, #16]
  40499c:	685b      	ldr	r3, [r3, #4]
  40499e:	481e      	ldr	r0, [pc, #120]	; (404a18 <code39_decode9+0x1c4>)
  4049a0:	9000      	str	r0, [sp, #0]
  4049a2:	4823      	ldr	r0, [pc, #140]	; (404a30 <code39_decode9+0x1dc>)
  4049a4:	9001      	str	r0, [sp, #4]
  4049a6:	9102      	str	r1, [sp, #8]
  4049a8:	9203      	str	r2, [sp, #12]
  4049aa:	9304      	str	r3, [sp, #16]
  4049ac:	4620      	mov	r0, r4
  4049ae:	4921      	ldr	r1, [pc, #132]	; (404a34 <code39_decode9+0x1e0>)
  4049b0:	4a1c      	ldr	r2, [pc, #112]	; (404a24 <code39_decode9+0x1d0>)
  4049b2:	23b4      	movs	r3, #180	; 0xb4
  4049b4:	4c1c      	ldr	r4, [pc, #112]	; (404a28 <code39_decode9+0x1d4>)
  4049b6:	47a0      	blx	r4
  4049b8:	23ff      	movs	r3, #255	; 0xff
  4049ba:	e021      	b.n	404a00 <code39_decode9+0x1ac>

    const char39_t *c = &code39_encodings[idx];
  4049bc:	7d7a      	ldrb	r2, [r7, #21]
  4049be:	4613      	mov	r3, r2
  4049c0:	005b      	lsls	r3, r3, #1
  4049c2:	4413      	add	r3, r2
  4049c4:	4a1c      	ldr	r2, [pc, #112]	; (404a38 <code39_decode9+0x1e4>)
  4049c6:	4413      	add	r3, r2
  4049c8:	60fb      	str	r3, [r7, #12]
    dbprintf(2, " i=%02x chk=%02x c=%02x/%02x", idx, c->chk, c->fwd, c->rev);
  4049ca:	bf00      	nop
    if(enc != c->chk)
  4049cc:	68fb      	ldr	r3, [r7, #12]
  4049ce:	781b      	ldrb	r3, [r3, #0]
  4049d0:	7dba      	ldrb	r2, [r7, #22]
  4049d2:	429a      	cmp	r2, r3
  4049d4:	d001      	beq.n	4049da <code39_decode9+0x186>
        return(-1);
  4049d6:	23ff      	movs	r3, #255	; 0xff
  4049d8:	e012      	b.n	404a00 <code39_decode9+0x1ac>

    dcode39->width = dcode39->s9;
  4049da:	693b      	ldr	r3, [r7, #16]
  4049dc:	685a      	ldr	r2, [r3, #4]
  4049de:	693b      	ldr	r3, [r7, #16]
  4049e0:	609a      	str	r2, [r3, #8]
    return((dcode39->direction) ? c->rev : c->fwd);
  4049e2:	693b      	ldr	r3, [r7, #16]
  4049e4:	781b      	ldrb	r3, [r3, #0]
  4049e6:	f003 0301 	and.w	r3, r3, #1
  4049ea:	b2db      	uxtb	r3, r3
  4049ec:	2b00      	cmp	r3, #0
  4049ee:	d003      	beq.n	4049f8 <code39_decode9+0x1a4>
  4049f0:	68fb      	ldr	r3, [r7, #12]
  4049f2:	785b      	ldrb	r3, [r3, #1]
  4049f4:	b2db      	uxtb	r3, r3
  4049f6:	e002      	b.n	4049fe <code39_decode9+0x1aa>
  4049f8:	68fb      	ldr	r3, [r7, #12]
  4049fa:	789b      	ldrb	r3, [r3, #2]
  4049fc:	b2db      	uxtb	r3, r3
  4049fe:	b2db      	uxtb	r3, r3
  404a00:	b25b      	sxtb	r3, r3
}
  404a02:	4618      	mov	r0, r3
  404a04:	371c      	adds	r7, #28
  404a06:	46bd      	mov	sp, r7
  404a08:	bd90      	pop	{r4, r7, pc}
  404a0a:	bf00      	nop
  404a0c:	00404669 	.word	0x00404669
  404a10:	00404805 	.word	0x00404805
  404a14:	200012d0 	.word	0x200012d0
  404a18:	0043c41c 	.word	0x0043c41c
  404a1c:	0043c230 	.word	0x0043c230
  404a20:	0043c1d0 	.word	0x0043c1d0
  404a24:	0043c20c 	.word	0x0043c20c
  404a28:	0043413d 	.word	0x0043413d
  404a2c:	0043c324 	.word	0x0043c324
  404a30:	0043c280 	.word	0x0043c280
  404a34:	0043c23c 	.word	0x0043c23c
  404a38:	0043c344 	.word	0x0043c344

00404a3c <code39_decode_start>:

static inline signed char code39_decode_start (zbar_decoder_t *dcode)
{
  404a3c:	b580      	push	{r7, lr}
  404a3e:	b086      	sub	sp, #24
  404a40:	af00      	add	r7, sp, #0
  404a42:	6078      	str	r0, [r7, #4]
    code39_decoder_t *dcode39 = &dcode->code39;
  404a44:	687b      	ldr	r3, [r7, #4]
  404a46:	33ec      	adds	r3, #236	; 0xec
  404a48:	617b      	str	r3, [r7, #20]
    dbprintf(2, " s=%d ", dcode39->s9);
  404a4a:	bf00      	nop

    signed char c = code39_decode9(dcode);
  404a4c:	6878      	ldr	r0, [r7, #4]
  404a4e:	4b25      	ldr	r3, [pc, #148]	; (404ae4 <code39_decode_start+0xa8>)
  404a50:	4798      	blx	r3
  404a52:	4603      	mov	r3, r0
  404a54:	74fb      	strb	r3, [r7, #19]
    if(c != 0x19 && c != 0x2b) {
  404a56:	f997 3013 	ldrsb.w	r3, [r7, #19]
  404a5a:	2b19      	cmp	r3, #25
  404a5c:	d006      	beq.n	404a6c <code39_decode_start+0x30>
  404a5e:	f997 3013 	ldrsb.w	r3, [r7, #19]
  404a62:	2b2b      	cmp	r3, #43	; 0x2b
  404a64:	d002      	beq.n	404a6c <code39_decode_start+0x30>
        dbprintf(2, "\n");
  404a66:	bf00      	nop
        return(ZBAR_NONE);
  404a68:	2300      	movs	r3, #0
  404a6a:	e036      	b.n	404ada <code39_decode_start+0x9e>
    }
    dcode39->direction ^= (c == 0x19);
  404a6c:	697b      	ldr	r3, [r7, #20]
  404a6e:	781b      	ldrb	r3, [r3, #0]
  404a70:	f3c3 0300 	ubfx	r3, r3, #0, #1
  404a74:	b2db      	uxtb	r3, r3
  404a76:	b2da      	uxtb	r2, r3
  404a78:	f997 3013 	ldrsb.w	r3, [r7, #19]
  404a7c:	2b19      	cmp	r3, #25
  404a7e:	bf0c      	ite	eq
  404a80:	2301      	moveq	r3, #1
  404a82:	2300      	movne	r3, #0
  404a84:	b2db      	uxtb	r3, r3
  404a86:	b2db      	uxtb	r3, r3
  404a88:	4053      	eors	r3, r2
  404a8a:	b2db      	uxtb	r3, r3
  404a8c:	b2db      	uxtb	r3, r3
  404a8e:	f003 0301 	and.w	r3, r3, #1
  404a92:	b2d9      	uxtb	r1, r3
  404a94:	697a      	ldr	r2, [r7, #20]
  404a96:	7813      	ldrb	r3, [r2, #0]
  404a98:	f361 0300 	bfi	r3, r1, #0, #1
  404a9c:	7013      	strb	r3, [r2, #0]

    /* check leading quiet zone - spec is 10x */
    unsigned quiet = get_width(dcode, 9);
  404a9e:	6878      	ldr	r0, [r7, #4]
  404aa0:	2109      	movs	r1, #9
  404aa2:	4b11      	ldr	r3, [pc, #68]	; (404ae8 <code39_decode_start+0xac>)
  404aa4:	4798      	blx	r3
  404aa6:	60f8      	str	r0, [r7, #12]
    if(quiet && quiet < dcode39->s9 / 2) {
  404aa8:	68fb      	ldr	r3, [r7, #12]
  404aaa:	2b00      	cmp	r3, #0
  404aac:	d008      	beq.n	404ac0 <code39_decode_start+0x84>
  404aae:	697b      	ldr	r3, [r7, #20]
  404ab0:	685b      	ldr	r3, [r3, #4]
  404ab2:	085a      	lsrs	r2, r3, #1
  404ab4:	68fb      	ldr	r3, [r7, #12]
  404ab6:	429a      	cmp	r2, r3
  404ab8:	d902      	bls.n	404ac0 <code39_decode_start+0x84>
        dbprintf(2, " [invalid quiet]\n");
  404aba:	bf00      	nop
        return(ZBAR_NONE);
  404abc:	2300      	movs	r3, #0
  404abe:	e00c      	b.n	404ada <code39_decode_start+0x9e>
    }

    dcode39->element = 9;
  404ac0:	697a      	ldr	r2, [r7, #20]
  404ac2:	7813      	ldrb	r3, [r2, #0]
  404ac4:	2109      	movs	r1, #9
  404ac6:	f361 0344 	bfi	r3, r1, #1, #4
  404aca:	7013      	strb	r3, [r2, #0]
    dcode39->character = 0;
  404acc:	697a      	ldr	r2, [r7, #20]
  404ace:	6813      	ldr	r3, [r2, #0]
  404ad0:	f36f 1350 	bfc	r3, #5, #12
  404ad4:	6013      	str	r3, [r2, #0]
    dbprintf(1, " dir=%x [valid start]\n", dcode39->direction);
  404ad6:	bf00      	nop
    return(ZBAR_PARTIAL);
  404ad8:	2301      	movs	r3, #1
  404ada:	b25b      	sxtb	r3, r3
}
  404adc:	4618      	mov	r0, r3
  404ade:	3718      	adds	r7, #24
  404ae0:	46bd      	mov	sp, r7
  404ae2:	bd80      	pop	{r7, pc}
  404ae4:	00404855 	.word	0x00404855
  404ae8:	00404669 	.word	0x00404669

00404aec <code39_postprocess>:

static inline int code39_postprocess (zbar_decoder_t *dcode)
{
  404aec:	b590      	push	{r4, r7, lr}
  404aee:	b08b      	sub	sp, #44	; 0x2c
  404af0:	af04      	add	r7, sp, #16
  404af2:	6078      	str	r0, [r7, #4]
    code39_decoder_t *dcode39 = &dcode->code39;
  404af4:	687b      	ldr	r3, [r7, #4]
  404af6:	33ec      	adds	r3, #236	; 0xec
  404af8:	613b      	str	r3, [r7, #16]
    dcode->direction = 1 - 2 * dcode39->direction;
  404afa:	693b      	ldr	r3, [r7, #16]
  404afc:	781b      	ldrb	r3, [r3, #0]
  404afe:	f3c3 0300 	ubfx	r3, r3, #0, #1
  404b02:	b2db      	uxtb	r3, r3
  404b04:	461a      	mov	r2, r3
  404b06:	4613      	mov	r3, r2
  404b08:	07db      	lsls	r3, r3, #31
  404b0a:	1a9b      	subs	r3, r3, r2
  404b0c:	005b      	lsls	r3, r3, #1
  404b0e:	1c5a      	adds	r2, r3, #1
  404b10:	687b      	ldr	r3, [r7, #4]
  404b12:	64da      	str	r2, [r3, #76]	; 0x4c
    int i;
    if(dcode39->direction) {
  404b14:	693b      	ldr	r3, [r7, #16]
  404b16:	781b      	ldrb	r3, [r3, #0]
  404b18:	f003 0301 	and.w	r3, r3, #1
  404b1c:	b2db      	uxtb	r3, r3
  404b1e:	2b00      	cmp	r3, #0
  404b20:	d034      	beq.n	404b8c <code39_postprocess+0xa0>
        /* reverse buffer */
        dbprintf(2, " (rev)");
  404b22:	bf00      	nop
        for(i = 0; i < dcode39->character / 2; i++) {
  404b24:	2300      	movs	r3, #0
  404b26:	617b      	str	r3, [r7, #20]
  404b28:	e022      	b.n	404b70 <code39_postprocess+0x84>
            unsigned j = dcode39->character - 1 - i;
  404b2a:	693b      	ldr	r3, [r7, #16]
  404b2c:	681b      	ldr	r3, [r3, #0]
  404b2e:	f343 134b 	sbfx	r3, r3, #5, #12
  404b32:	b29b      	uxth	r3, r3
  404b34:	b21b      	sxth	r3, r3
  404b36:	1e5a      	subs	r2, r3, #1
  404b38:	697b      	ldr	r3, [r7, #20]
  404b3a:	1ad3      	subs	r3, r2, r3
  404b3c:	60fb      	str	r3, [r7, #12]
            char code = dcode->buf[i];
  404b3e:	687b      	ldr	r3, [r7, #4]
  404b40:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404b42:	697b      	ldr	r3, [r7, #20]
  404b44:	4413      	add	r3, r2
  404b46:	781b      	ldrb	r3, [r3, #0]
  404b48:	72fb      	strb	r3, [r7, #11]
            dcode->buf[i] = dcode->buf[j];
  404b4a:	687b      	ldr	r3, [r7, #4]
  404b4c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404b4e:	697b      	ldr	r3, [r7, #20]
  404b50:	4413      	add	r3, r2
  404b52:	687a      	ldr	r2, [r7, #4]
  404b54:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  404b56:	68fa      	ldr	r2, [r7, #12]
  404b58:	440a      	add	r2, r1
  404b5a:	7812      	ldrb	r2, [r2, #0]
  404b5c:	701a      	strb	r2, [r3, #0]
            dcode->buf[j] = code;
  404b5e:	687b      	ldr	r3, [r7, #4]
  404b60:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404b62:	68fb      	ldr	r3, [r7, #12]
  404b64:	4413      	add	r3, r2
  404b66:	7afa      	ldrb	r2, [r7, #11]
  404b68:	701a      	strb	r2, [r3, #0]
    dcode->direction = 1 - 2 * dcode39->direction;
    int i;
    if(dcode39->direction) {
        /* reverse buffer */
        dbprintf(2, " (rev)");
        for(i = 0; i < dcode39->character / 2; i++) {
  404b6a:	697b      	ldr	r3, [r7, #20]
  404b6c:	3301      	adds	r3, #1
  404b6e:	617b      	str	r3, [r7, #20]
  404b70:	693b      	ldr	r3, [r7, #16]
  404b72:	681b      	ldr	r3, [r3, #0]
  404b74:	f343 134b 	sbfx	r3, r3, #5, #12
  404b78:	b29b      	uxth	r3, r3
  404b7a:	b21b      	sxth	r3, r3
  404b7c:	0fda      	lsrs	r2, r3, #31
  404b7e:	4413      	add	r3, r2
  404b80:	105b      	asrs	r3, r3, #1
  404b82:	b29b      	uxth	r3, r3
  404b84:	b21a      	sxth	r2, r3
  404b86:	697b      	ldr	r3, [r7, #20]
  404b88:	429a      	cmp	r2, r3
  404b8a:	dcce      	bgt.n	404b2a <code39_postprocess+0x3e>
            char code = dcode->buf[i];
            dcode->buf[i] = dcode->buf[j];
            dcode->buf[j] = code;
        }
    }
    for(i = 0; i < dcode39->character; i++)
  404b8c:	2300      	movs	r3, #0
  404b8e:	617b      	str	r3, [r7, #20]
  404b90:	e018      	b.n	404bc4 <code39_postprocess+0xd8>
        dcode->buf[i] = ((dcode->buf[i] < 0x2b)
  404b92:	687b      	ldr	r3, [r7, #4]
  404b94:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404b96:	697b      	ldr	r3, [r7, #20]
  404b98:	4413      	add	r3, r2
  404b9a:	687a      	ldr	r2, [r7, #4]
  404b9c:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  404b9e:	697a      	ldr	r2, [r7, #20]
  404ba0:	440a      	add	r2, r1
  404ba2:	7812      	ldrb	r2, [r2, #0]
  404ba4:	2a2a      	cmp	r2, #42	; 0x2a
  404ba6:	d808      	bhi.n	404bba <code39_postprocess+0xce>
                         ? code39_characters[(unsigned)dcode->buf[i]]
  404ba8:	687a      	ldr	r2, [r7, #4]
  404baa:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
  404bac:	697a      	ldr	r2, [r7, #20]
  404bae:	440a      	add	r2, r1
  404bb0:	7812      	ldrb	r2, [r2, #0]
  404bb2:	4611      	mov	r1, r2
            dcode->buf[i] = dcode->buf[j];
            dcode->buf[j] = code;
        }
    }
    for(i = 0; i < dcode39->character; i++)
        dcode->buf[i] = ((dcode->buf[i] < 0x2b)
  404bb4:	4a23      	ldr	r2, [pc, #140]	; (404c44 <code39_postprocess+0x158>)
  404bb6:	5c52      	ldrb	r2, [r2, r1]
  404bb8:	e000      	b.n	404bbc <code39_postprocess+0xd0>
  404bba:	223f      	movs	r2, #63	; 0x3f
  404bbc:	701a      	strb	r2, [r3, #0]
            char code = dcode->buf[i];
            dcode->buf[i] = dcode->buf[j];
            dcode->buf[j] = code;
        }
    }
    for(i = 0; i < dcode39->character; i++)
  404bbe:	697b      	ldr	r3, [r7, #20]
  404bc0:	3301      	adds	r3, #1
  404bc2:	617b      	str	r3, [r7, #20]
  404bc4:	693b      	ldr	r3, [r7, #16]
  404bc6:	681b      	ldr	r3, [r3, #0]
  404bc8:	f343 134b 	sbfx	r3, r3, #5, #12
  404bcc:	b29b      	uxth	r3, r3
  404bce:	b21a      	sxth	r2, r3
  404bd0:	697b      	ldr	r3, [r7, #20]
  404bd2:	429a      	cmp	r2, r3
  404bd4:	dcdd      	bgt.n	404b92 <code39_postprocess+0xa6>
        dcode->buf[i] = ((dcode->buf[i] < 0x2b)
                         ? code39_characters[(unsigned)dcode->buf[i]]
                         : '?');
    zassert(i < dcode->buf_alloc, -1, "i=%02x %s\n", i,
  404bd6:	697a      	ldr	r2, [r7, #20]
  404bd8:	687b      	ldr	r3, [r7, #4]
  404bda:	6d5b      	ldr	r3, [r3, #84]	; 0x54
  404bdc:	429a      	cmp	r2, r3
  404bde:	d31f      	bcc.n	404c20 <code39_postprocess+0x134>
  404be0:	4b19      	ldr	r3, [pc, #100]	; (404c48 <code39_postprocess+0x15c>)
  404be2:	681b      	ldr	r3, [r3, #0]
  404be4:	68dc      	ldr	r4, [r3, #12]
  404be6:	687b      	ldr	r3, [r7, #4]
  404be8:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404bea:	693b      	ldr	r3, [r7, #16]
  404bec:	681b      	ldr	r3, [r3, #0]
  404bee:	f343 134b 	sbfx	r3, r3, #5, #12
  404bf2:	b29b      	uxth	r3, r3
  404bf4:	b21b      	sxth	r3, r3
  404bf6:	4610      	mov	r0, r2
  404bf8:	4619      	mov	r1, r3
  404bfa:	4b14      	ldr	r3, [pc, #80]	; (404c4c <code39_postprocess+0x160>)
  404bfc:	4798      	blx	r3
  404bfe:	4602      	mov	r2, r0
  404c00:	4b13      	ldr	r3, [pc, #76]	; (404c50 <code39_postprocess+0x164>)
  404c02:	9300      	str	r3, [sp, #0]
  404c04:	4b13      	ldr	r3, [pc, #76]	; (404c54 <code39_postprocess+0x168>)
  404c06:	9301      	str	r3, [sp, #4]
  404c08:	697b      	ldr	r3, [r7, #20]
  404c0a:	9302      	str	r3, [sp, #8]
  404c0c:	9203      	str	r2, [sp, #12]
  404c0e:	4620      	mov	r0, r4
  404c10:	4911      	ldr	r1, [pc, #68]	; (404c58 <code39_postprocess+0x16c>)
  404c12:	4a12      	ldr	r2, [pc, #72]	; (404c5c <code39_postprocess+0x170>)
  404c14:	23ec      	movs	r3, #236	; 0xec
  404c16:	4c12      	ldr	r4, [pc, #72]	; (404c60 <code39_postprocess+0x174>)
  404c18:	47a0      	blx	r4
  404c1a:	f04f 33ff 	mov.w	r3, #4294967295
  404c1e:	e00c      	b.n	404c3a <code39_postprocess+0x14e>
            _zbar_decoder_buf_dump(dcode->buf, dcode39->character));
    dcode->buflen = i;
  404c20:	697a      	ldr	r2, [r7, #20]
  404c22:	687b      	ldr	r3, [r7, #4]
  404c24:	659a      	str	r2, [r3, #88]	; 0x58
    dcode->buf[i] = '\0';
  404c26:	687b      	ldr	r3, [r7, #4]
  404c28:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404c2a:	697b      	ldr	r3, [r7, #20]
  404c2c:	4413      	add	r3, r2
  404c2e:	2200      	movs	r2, #0
  404c30:	701a      	strb	r2, [r3, #0]
    dcode->modifiers = 0;
  404c32:	687b      	ldr	r3, [r7, #4]
  404c34:	2200      	movs	r2, #0
  404c36:	649a      	str	r2, [r3, #72]	; 0x48
    return(0);
  404c38:	2300      	movs	r3, #0
}
  404c3a:	4618      	mov	r0, r3
  404c3c:	371c      	adds	r7, #28
  404c3e:	46bd      	mov	sp, r7
  404c40:	bd90      	pop	{r4, r7, pc}
  404c42:	bf00      	nop
  404c44:	0043c3c8 	.word	0x0043c3c8
  404c48:	200012d0 	.word	0x200012d0
  404c4c:	00405759 	.word	0x00405759
  404c50:	0043c408 	.word	0x0043c408
  404c54:	0043c2c4 	.word	0x0043c2c4
  404c58:	0043c28c 	.word	0x0043c28c
  404c5c:	0043c20c 	.word	0x0043c20c
  404c60:	0043413d 	.word	0x0043413d

00404c64 <check_width>:

static inline int
check_width (unsigned ref,
             unsigned w)
{
  404c64:	b480      	push	{r7}
  404c66:	b085      	sub	sp, #20
  404c68:	af00      	add	r7, sp, #0
  404c6a:	6078      	str	r0, [r7, #4]
  404c6c:	6039      	str	r1, [r7, #0]
    unsigned dref = ref;
  404c6e:	687b      	ldr	r3, [r7, #4]
  404c70:	60fb      	str	r3, [r7, #12]
    ref *= 4;
  404c72:	687b      	ldr	r3, [r7, #4]
  404c74:	009b      	lsls	r3, r3, #2
  404c76:	607b      	str	r3, [r7, #4]
    w *= 4;
  404c78:	683b      	ldr	r3, [r7, #0]
  404c7a:	009b      	lsls	r3, r3, #2
  404c7c:	603b      	str	r3, [r7, #0]
    return(ref - dref <= w && w <= ref + dref);
  404c7e:	687a      	ldr	r2, [r7, #4]
  404c80:	68fb      	ldr	r3, [r7, #12]
  404c82:	1ad2      	subs	r2, r2, r3
  404c84:	683b      	ldr	r3, [r7, #0]
  404c86:	429a      	cmp	r2, r3
  404c88:	d807      	bhi.n	404c9a <check_width+0x36>
  404c8a:	687a      	ldr	r2, [r7, #4]
  404c8c:	68fb      	ldr	r3, [r7, #12]
  404c8e:	441a      	add	r2, r3
  404c90:	683b      	ldr	r3, [r7, #0]
  404c92:	429a      	cmp	r2, r3
  404c94:	d301      	bcc.n	404c9a <check_width+0x36>
  404c96:	2301      	movs	r3, #1
  404c98:	e000      	b.n	404c9c <check_width+0x38>
  404c9a:	2300      	movs	r3, #0
}
  404c9c:	4618      	mov	r0, r3
  404c9e:	3714      	adds	r7, #20
  404ca0:	46bd      	mov	sp, r7
  404ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
  404ca6:	4770      	bx	lr

00404ca8 <_zbar_decode_code39>:

zbar_symbol_type_t _zbar_decode_code39 (zbar_decoder_t *dcode)
{
  404ca8:	b590      	push	{r4, r7, lr}
  404caa:	b08b      	sub	sp, #44	; 0x2c
  404cac:	af04      	add	r7, sp, #16
  404cae:	6078      	str	r0, [r7, #4]
    code39_decoder_t *dcode39 = &dcode->code39;
  404cb0:	687b      	ldr	r3, [r7, #4]
  404cb2:	33ec      	adds	r3, #236	; 0xec
  404cb4:	613b      	str	r3, [r7, #16]

    /* update latest character width */
    dcode39->s9 -= get_width(dcode, 9);
  404cb6:	6878      	ldr	r0, [r7, #4]
  404cb8:	2109      	movs	r1, #9
  404cba:	4b99      	ldr	r3, [pc, #612]	; (404f20 <_zbar_decode_code39+0x278>)
  404cbc:	4798      	blx	r3
  404cbe:	4602      	mov	r2, r0
  404cc0:	693b      	ldr	r3, [r7, #16]
  404cc2:	685b      	ldr	r3, [r3, #4]
  404cc4:	1a9a      	subs	r2, r3, r2
  404cc6:	693b      	ldr	r3, [r7, #16]
  404cc8:	605a      	str	r2, [r3, #4]
    dcode39->s9 += get_width(dcode, 0);
  404cca:	6878      	ldr	r0, [r7, #4]
  404ccc:	2100      	movs	r1, #0
  404cce:	4b94      	ldr	r3, [pc, #592]	; (404f20 <_zbar_decode_code39+0x278>)
  404cd0:	4798      	blx	r3
  404cd2:	4602      	mov	r2, r0
  404cd4:	693b      	ldr	r3, [r7, #16]
  404cd6:	685b      	ldr	r3, [r3, #4]
  404cd8:	441a      	add	r2, r3
  404cda:	693b      	ldr	r3, [r7, #16]
  404cdc:	605a      	str	r2, [r3, #4]

    if(dcode39->character < 0) {
  404cde:	693b      	ldr	r3, [r7, #16]
  404ce0:	681b      	ldr	r3, [r3, #0]
  404ce2:	f343 134b 	sbfx	r3, r3, #5, #12
  404ce6:	b29b      	uxth	r3, r3
  404ce8:	b21b      	sxth	r3, r3
  404cea:	2b00      	cmp	r3, #0
  404cec:	da0e      	bge.n	404d0c <_zbar_decode_code39+0x64>
        if(get_color(dcode) != ZBAR_BAR)
  404cee:	6878      	ldr	r0, [r7, #4]
  404cf0:	4b8c      	ldr	r3, [pc, #560]	; (404f24 <_zbar_decode_code39+0x27c>)
  404cf2:	4798      	blx	r3
  404cf4:	4603      	mov	r3, r0
  404cf6:	2b01      	cmp	r3, #1
  404cf8:	d001      	beq.n	404cfe <_zbar_decode_code39+0x56>
            return(ZBAR_NONE);
  404cfa:	2300      	movs	r3, #0
  404cfc:	e15b      	b.n	404fb6 <_zbar_decode_code39+0x30e>
        dbprintf(2, "      code39:");
  404cfe:	bf00      	nop
        return(code39_decode_start(dcode));
  404d00:	6878      	ldr	r0, [r7, #4]
  404d02:	4b89      	ldr	r3, [pc, #548]	; (404f28 <_zbar_decode_code39+0x280>)
  404d04:	4798      	blx	r3
  404d06:	4603      	mov	r3, r0
  404d08:	b29b      	uxth	r3, r3
  404d0a:	e154      	b.n	404fb6 <_zbar_decode_code39+0x30e>
    }

    if(++dcode39->element < 9)
  404d0c:	693b      	ldr	r3, [r7, #16]
  404d0e:	781b      	ldrb	r3, [r3, #0]
  404d10:	f3c3 0343 	ubfx	r3, r3, #1, #4
  404d14:	b2db      	uxtb	r3, r3
  404d16:	3301      	adds	r3, #1
  404d18:	f003 030f 	and.w	r3, r3, #15
  404d1c:	b2d9      	uxtb	r1, r3
  404d1e:	693a      	ldr	r2, [r7, #16]
  404d20:	7813      	ldrb	r3, [r2, #0]
  404d22:	f361 0344 	bfi	r3, r1, #1, #4
  404d26:	7013      	strb	r3, [r2, #0]
  404d28:	693b      	ldr	r3, [r7, #16]
  404d2a:	781b      	ldrb	r3, [r3, #0]
  404d2c:	f3c3 0343 	ubfx	r3, r3, #1, #4
  404d30:	b2db      	uxtb	r3, r3
  404d32:	2b08      	cmp	r3, #8
  404d34:	dc01      	bgt.n	404d3a <_zbar_decode_code39+0x92>
        return(ZBAR_NONE);
  404d36:	2300      	movs	r3, #0
  404d38:	e13d      	b.n	404fb6 <_zbar_decode_code39+0x30e>

    dbprintf(2, "      code39[%c%02d+%x]",
  404d3a:	bf00      	nop
             (dcode39->direction) ? '<' : '>',
             dcode39->character, dcode39->element);

    if(dcode39->element == 10) {
  404d3c:	693b      	ldr	r3, [r7, #16]
  404d3e:	781b      	ldrb	r3, [r3, #0]
  404d40:	f003 031e 	and.w	r3, r3, #30
  404d44:	b2db      	uxtb	r3, r3
  404d46:	2b14      	cmp	r3, #20
  404d48:	f040 808e 	bne.w	404e68 <_zbar_decode_code39+0x1c0>
        unsigned space = get_width(dcode, 0);
  404d4c:	6878      	ldr	r0, [r7, #4]
  404d4e:	2100      	movs	r1, #0
  404d50:	4b73      	ldr	r3, [pc, #460]	; (404f20 <_zbar_decode_code39+0x278>)
  404d52:	4798      	blx	r3
  404d54:	60f8      	str	r0, [r7, #12]
        if(dcode39->character &&
  404d56:	693b      	ldr	r3, [r7, #16]
  404d58:	681a      	ldr	r2, [r3, #0]
  404d5a:	4b74      	ldr	r3, [pc, #464]	; (404f2c <_zbar_decode_code39+0x284>)
  404d5c:	4013      	ands	r3, r2
  404d5e:	2b00      	cmp	r3, #0
  404d60:	d062      	beq.n	404e28 <_zbar_decode_code39+0x180>
           dcode->buf[dcode39->character - 1] == 0x2b) {  /* STOP */
  404d62:	687b      	ldr	r3, [r7, #4]
  404d64:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  404d66:	693b      	ldr	r3, [r7, #16]
  404d68:	681b      	ldr	r3, [r3, #0]
  404d6a:	f343 134b 	sbfx	r3, r3, #5, #12
  404d6e:	b29b      	uxth	r3, r3
  404d70:	b21b      	sxth	r3, r3
  404d72:	3b01      	subs	r3, #1
  404d74:	4413      	add	r3, r2
  404d76:	781b      	ldrb	r3, [r3, #0]
             (dcode39->direction) ? '<' : '>',
             dcode39->character, dcode39->element);

    if(dcode39->element == 10) {
        unsigned space = get_width(dcode, 0);
        if(dcode39->character &&
  404d78:	2b2b      	cmp	r3, #43	; 0x2b
  404d7a:	d155      	bne.n	404e28 <_zbar_decode_code39+0x180>
           dcode->buf[dcode39->character - 1] == 0x2b) {  /* STOP */
            /* trim STOP character */
            dcode39->character--;
  404d7c:	693b      	ldr	r3, [r7, #16]
  404d7e:	681b      	ldr	r3, [r3, #0]
  404d80:	f343 134b 	sbfx	r3, r3, #5, #12
  404d84:	b29b      	uxth	r3, r3
  404d86:	f3c3 030b 	ubfx	r3, r3, #0, #12
  404d8a:	b29b      	uxth	r3, r3
  404d8c:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
  404d90:	f3c3 030b 	ubfx	r3, r3, #0, #12
  404d94:	b29b      	uxth	r3, r3
  404d96:	011b      	lsls	r3, r3, #4
  404d98:	b21b      	sxth	r3, r3
  404d9a:	111b      	asrs	r3, r3, #4
  404d9c:	b299      	uxth	r1, r3
  404d9e:	693a      	ldr	r2, [r7, #16]
  404da0:	6813      	ldr	r3, [r2, #0]
  404da2:	f361 1350 	bfi	r3, r1, #5, #12
  404da6:	6013      	str	r3, [r2, #0]
            zbar_symbol_type_t sym = ZBAR_NONE;
  404da8:	2300      	movs	r3, #0
  404daa:	82fb      	strh	r3, [r7, #22]

            /* trailing quiet zone check */
            if(space && space < dcode39->width / 2)
  404dac:	68fb      	ldr	r3, [r7, #12]
  404dae:	2b00      	cmp	r3, #0
  404db0:	d007      	beq.n	404dc2 <_zbar_decode_code39+0x11a>
  404db2:	693b      	ldr	r3, [r7, #16]
  404db4:	689b      	ldr	r3, [r3, #8]
  404db6:	085a      	lsrs	r2, r3, #1
  404db8:	68fb      	ldr	r3, [r7, #12]
  404dba:	429a      	cmp	r2, r3
  404dbc:	d901      	bls.n	404dc2 <_zbar_decode_code39+0x11a>
                dbprintf(2, " [invalid qz]\n");
  404dbe:	bf00      	nop
            /* trim STOP character */
            dcode39->character--;
            zbar_symbol_type_t sym = ZBAR_NONE;

            /* trailing quiet zone check */
            if(space && space < dcode39->width / 2)
  404dc0:	e022      	b.n	404e08 <_zbar_decode_code39+0x160>
                dbprintf(2, " [invalid qz]\n");
            else if(dcode39->character < CFG(*dcode39, ZBAR_CFG_MIN_LEN) ||
  404dc2:	693b      	ldr	r3, [r7, #16]
  404dc4:	681b      	ldr	r3, [r3, #0]
  404dc6:	f343 134b 	sbfx	r3, r3, #5, #12
  404dca:	b29b      	uxth	r3, r3
  404dcc:	b21a      	sxth	r2, r3
  404dce:	693b      	ldr	r3, [r7, #16]
  404dd0:	691b      	ldr	r3, [r3, #16]
  404dd2:	429a      	cmp	r2, r3
  404dd4:	db0d      	blt.n	404df2 <_zbar_decode_code39+0x14a>
                    (CFG(*dcode39, ZBAR_CFG_MAX_LEN) > 0 &&
  404dd6:	693b      	ldr	r3, [r7, #16]
  404dd8:	695b      	ldr	r3, [r3, #20]
            zbar_symbol_type_t sym = ZBAR_NONE;

            /* trailing quiet zone check */
            if(space && space < dcode39->width / 2)
                dbprintf(2, " [invalid qz]\n");
            else if(dcode39->character < CFG(*dcode39, ZBAR_CFG_MIN_LEN) ||
  404dda:	2b00      	cmp	r3, #0
  404ddc:	dd0b      	ble.n	404df6 <_zbar_decode_code39+0x14e>
                    (CFG(*dcode39, ZBAR_CFG_MAX_LEN) > 0 &&
                     dcode39->character > CFG(*dcode39, ZBAR_CFG_MAX_LEN)))
  404dde:	693b      	ldr	r3, [r7, #16]
  404de0:	681b      	ldr	r3, [r3, #0]
  404de2:	f343 134b 	sbfx	r3, r3, #5, #12
  404de6:	b29b      	uxth	r3, r3
  404de8:	b21a      	sxth	r2, r3
  404dea:	693b      	ldr	r3, [r7, #16]
  404dec:	695b      	ldr	r3, [r3, #20]

            /* trailing quiet zone check */
            if(space && space < dcode39->width / 2)
                dbprintf(2, " [invalid qz]\n");
            else if(dcode39->character < CFG(*dcode39, ZBAR_CFG_MIN_LEN) ||
                    (CFG(*dcode39, ZBAR_CFG_MAX_LEN) > 0 &&
  404dee:	429a      	cmp	r2, r3
  404df0:	dd01      	ble.n	404df6 <_zbar_decode_code39+0x14e>
                     dcode39->character > CFG(*dcode39, ZBAR_CFG_MAX_LEN)))
                dbprintf(2, " [invalid len]\n");
  404df2:	bf00      	nop
            zbar_symbol_type_t sym = ZBAR_NONE;

            /* trailing quiet zone check */
            if(space && space < dcode39->width / 2)
                dbprintf(2, " [invalid qz]\n");
            else if(dcode39->character < CFG(*dcode39, ZBAR_CFG_MIN_LEN) ||
  404df4:	e008      	b.n	404e08 <_zbar_decode_code39+0x160>
                    (CFG(*dcode39, ZBAR_CFG_MAX_LEN) > 0 &&
                     dcode39->character > CFG(*dcode39, ZBAR_CFG_MAX_LEN)))
                dbprintf(2, " [invalid len]\n");
            else if(!code39_postprocess(dcode)) {
  404df6:	6878      	ldr	r0, [r7, #4]
  404df8:	4b4d      	ldr	r3, [pc, #308]	; (404f30 <_zbar_decode_code39+0x288>)
  404dfa:	4798      	blx	r3
  404dfc:	4603      	mov	r3, r0
  404dfe:	2b00      	cmp	r3, #0
  404e00:	d102      	bne.n	404e08 <_zbar_decode_code39+0x160>
                /* FIXME checksum */
                dbprintf(2, " [valid end]\n");
  404e02:	bf00      	nop
                sym = ZBAR_CODE39;
  404e04:	2327      	movs	r3, #39	; 0x27
  404e06:	82fb      	strh	r3, [r7, #22]
            }
            dcode39->character = -1;
  404e08:	693a      	ldr	r2, [r7, #16]
  404e0a:	6813      	ldr	r3, [r2, #0]
  404e0c:	f04f 31ff 	mov.w	r1, #4294967295
  404e10:	f361 1350 	bfi	r3, r1, #5, #12
  404e14:	6013      	str	r3, [r2, #0]
            if(!sym)
  404e16:	8afb      	ldrh	r3, [r7, #22]
  404e18:	2b00      	cmp	r3, #0
  404e1a:	d103      	bne.n	404e24 <_zbar_decode_code39+0x17c>
                release_lock(dcode, ZBAR_CODE39);
  404e1c:	6878      	ldr	r0, [r7, #4]
  404e1e:	2127      	movs	r1, #39	; 0x27
  404e20:	4b44      	ldr	r3, [pc, #272]	; (404f34 <_zbar_decode_code39+0x28c>)
  404e22:	4798      	blx	r3
            return(sym);
  404e24:	8afb      	ldrh	r3, [r7, #22]
  404e26:	e0c6      	b.n	404fb6 <_zbar_decode_code39+0x30e>
        }
        if(space > dcode39->width / 2) {
  404e28:	693b      	ldr	r3, [r7, #16]
  404e2a:	689b      	ldr	r3, [r3, #8]
  404e2c:	085a      	lsrs	r2, r3, #1
  404e2e:	68fb      	ldr	r3, [r7, #12]
  404e30:	429a      	cmp	r2, r3
  404e32:	d211      	bcs.n	404e58 <_zbar_decode_code39+0x1b0>
            /* inter-character space check failure */
            dbprintf(2, " ics>%d [invalid ics]", dcode39->width);
  404e34:	bf00      	nop
            if(dcode39->character)
  404e36:	693b      	ldr	r3, [r7, #16]
  404e38:	681a      	ldr	r2, [r3, #0]
  404e3a:	4b3c      	ldr	r3, [pc, #240]	; (404f2c <_zbar_decode_code39+0x284>)
  404e3c:	4013      	ands	r3, r2
  404e3e:	2b00      	cmp	r3, #0
  404e40:	d003      	beq.n	404e4a <_zbar_decode_code39+0x1a2>
                release_lock(dcode, ZBAR_CODE39);
  404e42:	6878      	ldr	r0, [r7, #4]
  404e44:	2127      	movs	r1, #39	; 0x27
  404e46:	4b3b      	ldr	r3, [pc, #236]	; (404f34 <_zbar_decode_code39+0x28c>)
  404e48:	4798      	blx	r3
            dcode39->character = -1;
  404e4a:	693a      	ldr	r2, [r7, #16]
  404e4c:	6813      	ldr	r3, [r2, #0]
  404e4e:	f04f 31ff 	mov.w	r1, #4294967295
  404e52:	f361 1350 	bfi	r3, r1, #5, #12
  404e56:	6013      	str	r3, [r2, #0]
        }
        dcode39->element = 0;
  404e58:	693a      	ldr	r2, [r7, #16]
  404e5a:	7813      	ldrb	r3, [r2, #0]
  404e5c:	f36f 0344 	bfc	r3, #1, #4
  404e60:	7013      	strb	r3, [r2, #0]
        dbprintf(2, "\n");
  404e62:	bf00      	nop
        return(ZBAR_NONE);
  404e64:	2300      	movs	r3, #0
  404e66:	e0a6      	b.n	404fb6 <_zbar_decode_code39+0x30e>
    }

    dbprintf(2, " s=%d ", dcode39->s9);
  404e68:	bf00      	nop
    if(!check_width(dcode39->width, dcode39->s9)) {
  404e6a:	693b      	ldr	r3, [r7, #16]
  404e6c:	689a      	ldr	r2, [r3, #8]
  404e6e:	693b      	ldr	r3, [r7, #16]
  404e70:	685b      	ldr	r3, [r3, #4]
  404e72:	4610      	mov	r0, r2
  404e74:	4619      	mov	r1, r3
  404e76:	4b30      	ldr	r3, [pc, #192]	; (404f38 <_zbar_decode_code39+0x290>)
  404e78:	4798      	blx	r3
  404e7a:	4603      	mov	r3, r0
  404e7c:	2b00      	cmp	r3, #0
  404e7e:	d113      	bne.n	404ea8 <_zbar_decode_code39+0x200>
        dbprintf(2, " [width]\n");
  404e80:	bf00      	nop
        if(dcode39->character)
  404e82:	693b      	ldr	r3, [r7, #16]
  404e84:	681a      	ldr	r2, [r3, #0]
  404e86:	4b29      	ldr	r3, [pc, #164]	; (404f2c <_zbar_decode_code39+0x284>)
  404e88:	4013      	ands	r3, r2
  404e8a:	2b00      	cmp	r3, #0
  404e8c:	d003      	beq.n	404e96 <_zbar_decode_code39+0x1ee>
            release_lock(dcode, ZBAR_CODE39);
  404e8e:	6878      	ldr	r0, [r7, #4]
  404e90:	2127      	movs	r1, #39	; 0x27
  404e92:	4b28      	ldr	r3, [pc, #160]	; (404f34 <_zbar_decode_code39+0x28c>)
  404e94:	4798      	blx	r3
        dcode39->character = -1;
  404e96:	693a      	ldr	r2, [r7, #16]
  404e98:	6813      	ldr	r3, [r2, #0]
  404e9a:	f04f 31ff 	mov.w	r1, #4294967295
  404e9e:	f361 1350 	bfi	r3, r1, #5, #12
  404ea2:	6013      	str	r3, [r2, #0]
        return(ZBAR_NONE);
  404ea4:	2300      	movs	r3, #0
  404ea6:	e086      	b.n	404fb6 <_zbar_decode_code39+0x30e>
    }

    signed char c = code39_decode9(dcode);
  404ea8:	6878      	ldr	r0, [r7, #4]
  404eaa:	4b24      	ldr	r3, [pc, #144]	; (404f3c <_zbar_decode_code39+0x294>)
  404eac:	4798      	blx	r3
  404eae:	4603      	mov	r3, r0
  404eb0:	72fb      	strb	r3, [r7, #11]
    dbprintf(2, " c=%d", c);
  404eb2:	bf00      	nop

    /* lock shared resources */
    if(!dcode39->character && acquire_lock(dcode, ZBAR_CODE39)) {
  404eb4:	693b      	ldr	r3, [r7, #16]
  404eb6:	681a      	ldr	r2, [r3, #0]
  404eb8:	4b1c      	ldr	r3, [pc, #112]	; (404f2c <_zbar_decode_code39+0x284>)
  404eba:	4013      	ands	r3, r2
  404ebc:	2b00      	cmp	r3, #0
  404ebe:	d10f      	bne.n	404ee0 <_zbar_decode_code39+0x238>
  404ec0:	6878      	ldr	r0, [r7, #4]
  404ec2:	2127      	movs	r1, #39	; 0x27
  404ec4:	4b1e      	ldr	r3, [pc, #120]	; (404f40 <_zbar_decode_code39+0x298>)
  404ec6:	4798      	blx	r3
  404ec8:	4603      	mov	r3, r0
  404eca:	2b00      	cmp	r3, #0
  404ecc:	d008      	beq.n	404ee0 <_zbar_decode_code39+0x238>
        dcode39->character = -1;
  404ece:	693a      	ldr	r2, [r7, #16]
  404ed0:	6813      	ldr	r3, [r2, #0]
  404ed2:	f04f 31ff 	mov.w	r1, #4294967295
  404ed6:	f361 1350 	bfi	r3, r1, #5, #12
  404eda:	6013      	str	r3, [r2, #0]
        return(ZBAR_PARTIAL);
  404edc:	2301      	movs	r3, #1
  404ede:	e06a      	b.n	404fb6 <_zbar_decode_code39+0x30e>
    }

    if(c < 0 || size_buf(dcode, dcode39->character + 1)) {
  404ee0:	f997 300b 	ldrsb.w	r3, [r7, #11]
  404ee4:	2b00      	cmp	r3, #0
  404ee6:	db0d      	blt.n	404f04 <_zbar_decode_code39+0x25c>
  404ee8:	693b      	ldr	r3, [r7, #16]
  404eea:	681b      	ldr	r3, [r3, #0]
  404eec:	f343 134b 	sbfx	r3, r3, #5, #12
  404ef0:	b29b      	uxth	r3, r3
  404ef2:	b21b      	sxth	r3, r3
  404ef4:	3301      	adds	r3, #1
  404ef6:	6878      	ldr	r0, [r7, #4]
  404ef8:	4619      	mov	r1, r3
  404efa:	4b12      	ldr	r3, [pc, #72]	; (404f44 <_zbar_decode_code39+0x29c>)
  404efc:	4798      	blx	r3
  404efe:	4603      	mov	r3, r0
  404f00:	2b00      	cmp	r3, #0
  404f02:	d021      	beq.n	404f48 <_zbar_decode_code39+0x2a0>
        dbprintf(1, (c < 0) ? " [aborted]\n" : " [overflow]\n");
  404f04:	bf00      	nop
        release_lock(dcode, ZBAR_CODE39);
  404f06:	6878      	ldr	r0, [r7, #4]
  404f08:	2127      	movs	r1, #39	; 0x27
  404f0a:	4b0a      	ldr	r3, [pc, #40]	; (404f34 <_zbar_decode_code39+0x28c>)
  404f0c:	4798      	blx	r3
        dcode39->character = -1;
  404f0e:	693a      	ldr	r2, [r7, #16]
  404f10:	6813      	ldr	r3, [r2, #0]
  404f12:	f04f 31ff 	mov.w	r1, #4294967295
  404f16:	f361 1350 	bfi	r3, r1, #5, #12
  404f1a:	6013      	str	r3, [r2, #0]
        return(ZBAR_NONE);
  404f1c:	2300      	movs	r3, #0
  404f1e:	e04a      	b.n	404fb6 <_zbar_decode_code39+0x30e>
  404f20:	00404669 	.word	0x00404669
  404f24:	00404649 	.word	0x00404649
  404f28:	00404a3d 	.word	0x00404a3d
  404f2c:	0001ffe0 	.word	0x0001ffe0
  404f30:	00404aed 	.word	0x00404aed
  404f34:	00404711 	.word	0x00404711
  404f38:	00404c65 	.word	0x00404c65
  404f3c:	00404855 	.word	0x00404855
  404f40:	004046dd 	.word	0x004046dd
  404f44:	00404781 	.word	0x00404781
    }
    else {
        zassert(c < 0x2c, ZBAR_NONE, "c=%02x s9=%x\n", c, dcode39->s9);
  404f48:	f997 300b 	ldrsb.w	r3, [r7, #11]
  404f4c:	2b2b      	cmp	r3, #43	; 0x2b
  404f4e:	dd14      	ble.n	404f7a <_zbar_decode_code39+0x2d2>
  404f50:	4b1b      	ldr	r3, [pc, #108]	; (404fc0 <_zbar_decode_code39+0x318>)
  404f52:	681b      	ldr	r3, [r3, #0]
  404f54:	68d8      	ldr	r0, [r3, #12]
  404f56:	f997 200b 	ldrsb.w	r2, [r7, #11]
  404f5a:	693b      	ldr	r3, [r7, #16]
  404f5c:	685b      	ldr	r3, [r3, #4]
  404f5e:	4919      	ldr	r1, [pc, #100]	; (404fc4 <_zbar_decode_code39+0x31c>)
  404f60:	9100      	str	r1, [sp, #0]
  404f62:	4919      	ldr	r1, [pc, #100]	; (404fc8 <_zbar_decode_code39+0x320>)
  404f64:	9101      	str	r1, [sp, #4]
  404f66:	9202      	str	r2, [sp, #8]
  404f68:	9303      	str	r3, [sp, #12]
  404f6a:	4918      	ldr	r1, [pc, #96]	; (404fcc <_zbar_decode_code39+0x324>)
  404f6c:	4a18      	ldr	r2, [pc, #96]	; (404fd0 <_zbar_decode_code39+0x328>)
  404f6e:	f240 1351 	movw	r3, #337	; 0x151
  404f72:	4c18      	ldr	r4, [pc, #96]	; (404fd4 <_zbar_decode_code39+0x32c>)
  404f74:	47a0      	blx	r4
  404f76:	2300      	movs	r3, #0
  404f78:	e01d      	b.n	404fb6 <_zbar_decode_code39+0x30e>
        dbprintf(2, "\n");
  404f7a:	bf00      	nop
    }

    dcode->buf[dcode39->character++] = c;
  404f7c:	687b      	ldr	r3, [r7, #4]
  404f7e:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
  404f80:	693b      	ldr	r3, [r7, #16]
  404f82:	681b      	ldr	r3, [r3, #0]
  404f84:	f343 134b 	sbfx	r3, r3, #5, #12
  404f88:	b29c      	uxth	r4, r3
  404f8a:	4623      	mov	r3, r4
  404f8c:	f3c3 030b 	ubfx	r3, r3, #0, #12
  404f90:	b29b      	uxth	r3, r3
  404f92:	3301      	adds	r3, #1
  404f94:	f3c3 030b 	ubfx	r3, r3, #0, #12
  404f98:	b29b      	uxth	r3, r3
  404f9a:	011b      	lsls	r3, r3, #4
  404f9c:	b21b      	sxth	r3, r3
  404f9e:	111b      	asrs	r3, r3, #4
  404fa0:	b298      	uxth	r0, r3
  404fa2:	693a      	ldr	r2, [r7, #16]
  404fa4:	6813      	ldr	r3, [r2, #0]
  404fa6:	f360 1350 	bfi	r3, r0, #5, #12
  404faa:	6013      	str	r3, [r2, #0]
  404fac:	b223      	sxth	r3, r4
  404fae:	440b      	add	r3, r1
  404fb0:	7afa      	ldrb	r2, [r7, #11]
  404fb2:	701a      	strb	r2, [r3, #0]

    return(ZBAR_NONE);
  404fb4:	2300      	movs	r3, #0
}
  404fb6:	4618      	mov	r0, r3
  404fb8:	371c      	adds	r7, #28
  404fba:	46bd      	mov	sp, r7
  404fbc:	bd90      	pop	{r4, r7, pc}
  404fbe:	bf00      	nop
  404fc0:	200012d0 	.word	0x200012d0
  404fc4:	0043c3f4 	.word	0x0043c3f4
  404fc8:	0043c318 	.word	0x0043c318
  404fcc:	0043c2dc 	.word	0x0043c2dc
  404fd0:	0043c20c 	.word	0x0043c20c
  404fd4:	0043413d 	.word	0x0043413d

00404fd8 <ean_new_scan>:
    unsigned ean2_config;
} ean_decoder_t;

/* reset EAN/UPC pass specific state */
static inline void ean_new_scan (ean_decoder_t *ean)
{
  404fd8:	b480      	push	{r7}
  404fda:	b083      	sub	sp, #12
  404fdc:	af00      	add	r7, sp, #0
  404fde:	6078      	str	r0, [r7, #4]
    ean->pass[0].state = ean->pass[1].state = -1;
  404fe0:	687b      	ldr	r3, [r7, #4]
  404fe2:	22ff      	movs	r2, #255	; 0xff
  404fe4:	741a      	strb	r2, [r3, #16]
  404fe6:	687b      	ldr	r3, [r7, #4]
  404fe8:	7c1a      	ldrb	r2, [r3, #16]
  404fea:	687b      	ldr	r3, [r7, #4]
  404fec:	701a      	strb	r2, [r3, #0]
    ean->pass[2].state = ean->pass[3].state = -1;
  404fee:	687b      	ldr	r3, [r7, #4]
  404ff0:	22ff      	movs	r2, #255	; 0xff
  404ff2:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  404ff6:	687b      	ldr	r3, [r7, #4]
  404ff8:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
  404ffc:	687b      	ldr	r3, [r7, #4]
  404ffe:	f883 2020 	strb.w	r2, [r3, #32]
    ean->s4 = 0;
  405002:	687b      	ldr	r3, [r7, #4]
  405004:	2200      	movs	r2, #0
  405006:	649a      	str	r2, [r3, #72]	; 0x48
}
  405008:	370c      	adds	r7, #12
  40500a:	46bd      	mov	sp, r7
  40500c:	f85d 7b04 	ldr.w	r7, [sp], #4
  405010:	4770      	bx	lr
  405012:	bf00      	nop

00405014 <ean_reset>:

/* reset all EAN/UPC state */
static inline void ean_reset (ean_decoder_t *ean)
{
  405014:	b580      	push	{r7, lr}
  405016:	b082      	sub	sp, #8
  405018:	af00      	add	r7, sp, #0
  40501a:	6078      	str	r0, [r7, #4]
    ean_new_scan(ean);
  40501c:	6878      	ldr	r0, [r7, #4]
  40501e:	4b07      	ldr	r3, [pc, #28]	; (40503c <ean_reset+0x28>)
  405020:	4798      	blx	r3
    ean->left = ean->right = ZBAR_NONE;
  405022:	687b      	ldr	r3, [r7, #4]
  405024:	2200      	movs	r2, #0
  405026:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
  40502a:	687b      	ldr	r3, [r7, #4]
  40502c:	f8b3 2042 	ldrh.w	r2, [r3, #66]	; 0x42
  405030:	687b      	ldr	r3, [r7, #4]
  405032:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
}
  405036:	3708      	adds	r7, #8
  405038:	46bd      	mov	sp, r7
  40503a:	bd80      	pop	{r7, pc}
  40503c:	00404fd9 	.word	0x00404fd9

00405040 <code39_reset>:
    int configs[NUM_CFGS];      /* int valued configurations */
} code39_decoder_t;

/* reset Code 39 specific state */
static inline void code39_reset (code39_decoder_t *dcode39)
{
  405040:	b480      	push	{r7}
  405042:	b083      	sub	sp, #12
  405044:	af00      	add	r7, sp, #0
  405046:	6078      	str	r0, [r7, #4]
    dcode39->direction = 0;
  405048:	687a      	ldr	r2, [r7, #4]
  40504a:	7813      	ldrb	r3, [r2, #0]
  40504c:	f36f 0300 	bfc	r3, #0, #1
  405050:	7013      	strb	r3, [r2, #0]
    dcode39->element = 0;
  405052:	687a      	ldr	r2, [r7, #4]
  405054:	7813      	ldrb	r3, [r2, #0]
  405056:	f36f 0344 	bfc	r3, #1, #4
  40505a:	7013      	strb	r3, [r2, #0]
    dcode39->character = -1;
  40505c:	687a      	ldr	r2, [r7, #4]
  40505e:	6813      	ldr	r3, [r2, #0]
  405060:	f04f 31ff 	mov.w	r1, #4294967295
  405064:	f361 1350 	bfi	r3, r1, #5, #12
  405068:	6013      	str	r3, [r2, #0]
    dcode39->s9 = 0;
  40506a:	687b      	ldr	r3, [r7, #4]
  40506c:	2200      	movs	r2, #0
  40506e:	605a      	str	r2, [r3, #4]
}
  405070:	370c      	adds	r7, #12
  405072:	46bd      	mov	sp, r7
  405074:	f85d 7b04 	ldr.w	r7, [sp], #4
  405078:	4770      	bx	lr
  40507a:	bf00      	nop

0040507c <code128_reset>:
    int configs[NUM_CFGS];      /* int valued configurations */
} code128_decoder_t;

/* reset Code 128 specific state */
static inline void code128_reset (code128_decoder_t *dcode128)
{
  40507c:	b480      	push	{r7}
  40507e:	b083      	sub	sp, #12
  405080:	af00      	add	r7, sp, #0
  405082:	6078      	str	r0, [r7, #4]
    dcode128->direction = 0;
  405084:	687a      	ldr	r2, [r7, #4]
  405086:	7813      	ldrb	r3, [r2, #0]
  405088:	f36f 0300 	bfc	r3, #0, #1
  40508c:	7013      	strb	r3, [r2, #0]
    dcode128->element = 0;
  40508e:	687a      	ldr	r2, [r7, #4]
  405090:	7813      	ldrb	r3, [r2, #0]
  405092:	f36f 0343 	bfc	r3, #1, #3
  405096:	7013      	strb	r3, [r2, #0]
    dcode128->character = -1;
  405098:	687a      	ldr	r2, [r7, #4]
  40509a:	8813      	ldrh	r3, [r2, #0]
  40509c:	f04f 31ff 	mov.w	r1, #4294967295
  4050a0:	f361 130f 	bfi	r3, r1, #4, #12
  4050a4:	8013      	strh	r3, [r2, #0]
    dcode128->s6 = 0;
  4050a6:	687b      	ldr	r3, [r7, #4]
  4050a8:	2200      	movs	r2, #0
  4050aa:	605a      	str	r2, [r3, #4]
}
  4050ac:	370c      	adds	r7, #12
  4050ae:	46bd      	mov	sp, r7
  4050b0:	f85d 7b04 	ldr.w	r7, [sp], #4
  4050b4:	4770      	bx	lr
  4050b6:	bf00      	nop

004050b8 <get_width>:
}

/* retrieve i-th previous element width */
static inline unsigned get_width (const zbar_decoder_t *dcode,
                                  unsigned char offset)
{
  4050b8:	b480      	push	{r7}
  4050ba:	b083      	sub	sp, #12
  4050bc:	af00      	add	r7, sp, #0
  4050be:	6078      	str	r0, [r7, #4]
  4050c0:	460b      	mov	r3, r1
  4050c2:	70fb      	strb	r3, [r7, #3]
    return(dcode->w[(dcode->idx - offset) & (DECODE_WINDOW - 1)]);
  4050c4:	687b      	ldr	r3, [r7, #4]
  4050c6:	781b      	ldrb	r3, [r3, #0]
  4050c8:	461a      	mov	r2, r3
  4050ca:	78fb      	ldrb	r3, [r7, #3]
  4050cc:	1ad3      	subs	r3, r2, r3
  4050ce:	f003 030f 	and.w	r3, r3, #15
  4050d2:	687a      	ldr	r2, [r7, #4]
  4050d4:	009b      	lsls	r3, r3, #2
  4050d6:	4413      	add	r3, r2
  4050d8:	685b      	ldr	r3, [r3, #4]
}
  4050da:	4618      	mov	r0, r3
  4050dc:	370c      	adds	r7, #12
  4050de:	46bd      	mov	sp, r7
  4050e0:	f85d 7b04 	ldr.w	r7, [sp], #4
  4050e4:	4770      	bx	lr
  4050e6:	bf00      	nop

004050e8 <release_lock>:
}

/* check and release shared state lock */
static inline char release_lock (zbar_decoder_t *dcode,
                                 zbar_symbol_type_t req)
{
  4050e8:	b590      	push	{r4, r7, lr}
  4050ea:	b087      	sub	sp, #28
  4050ec:	af04      	add	r7, sp, #16
  4050ee:	6078      	str	r0, [r7, #4]
  4050f0:	460b      	mov	r3, r1
  4050f2:	807b      	strh	r3, [r7, #2]
    zassert(dcode->lock == req, 1, "lock=%d req=%d\n",
  4050f4:	687b      	ldr	r3, [r7, #4]
  4050f6:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  4050fa:	887a      	ldrh	r2, [r7, #2]
  4050fc:	429a      	cmp	r2, r3
  4050fe:	d016      	beq.n	40512e <release_lock+0x46>
  405100:	4b0f      	ldr	r3, [pc, #60]	; (405140 <release_lock+0x58>)
  405102:	681b      	ldr	r3, [r3, #0]
  405104:	68d9      	ldr	r1, [r3, #12]
  405106:	687b      	ldr	r3, [r7, #4]
  405108:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  40510c:	4618      	mov	r0, r3
  40510e:	887b      	ldrh	r3, [r7, #2]
  405110:	4a0c      	ldr	r2, [pc, #48]	; (405144 <release_lock+0x5c>)
  405112:	9200      	str	r2, [sp, #0]
  405114:	4a0c      	ldr	r2, [pc, #48]	; (405148 <release_lock+0x60>)
  405116:	9201      	str	r2, [sp, #4]
  405118:	9002      	str	r0, [sp, #8]
  40511a:	9303      	str	r3, [sp, #12]
  40511c:	4608      	mov	r0, r1
  40511e:	490b      	ldr	r1, [pc, #44]	; (40514c <release_lock+0x64>)
  405120:	4a0b      	ldr	r2, [pc, #44]	; (405150 <release_lock+0x68>)
  405122:	f240 1307 	movw	r3, #263	; 0x107
  405126:	4c0b      	ldr	r4, [pc, #44]	; (405154 <release_lock+0x6c>)
  405128:	47a0      	blx	r4
  40512a:	2301      	movs	r3, #1
  40512c:	e004      	b.n	405138 <release_lock+0x50>
            dcode->lock, req);
    dcode->lock = 0;
  40512e:	687b      	ldr	r3, [r7, #4]
  405130:	2200      	movs	r2, #0
  405132:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    return(0);
  405136:	2300      	movs	r3, #0
}
  405138:	4618      	mov	r0, r3
  40513a:	370c      	adds	r7, #12
  40513c:	46bd      	mov	sp, r7
  40513e:	bd90      	pop	{r4, r7, pc}
  405140:	200012d0 	.word	0x200012d0
  405144:	0043c4d8 	.word	0x0043c4d8
  405148:	0043c4a8 	.word	0x0043c4a8
  40514c:	0043c43c 	.word	0x0043c43c
  405150:	0043c478 	.word	0x0043c478
  405154:	0043413d 	.word	0x0043413d

00405158 <zbar_decoder_create>:
#endif
#include "debug.h"
#include "decoder.h"

zbar_decoder_t *zbar_decoder_create ()
{
  405158:	b580      	push	{r7, lr}
  40515a:	b082      	sub	sp, #8
  40515c:	af00      	add	r7, sp, #0
    zbar_decoder_t *dcode = calloc(1, sizeof(zbar_decoder_t));
  40515e:	2001      	movs	r0, #1
  405160:	f44f 718e 	mov.w	r1, #284	; 0x11c
  405164:	4b1f      	ldr	r3, [pc, #124]	; (4051e4 <zbar_decoder_create+0x8c>)
  405166:	4798      	blx	r3
  405168:	4603      	mov	r3, r0
  40516a:	607b      	str	r3, [r7, #4]
    dcode->buf_alloc = BUFFER_MIN;
  40516c:	687b      	ldr	r3, [r7, #4]
  40516e:	2220      	movs	r2, #32
  405170:	655a      	str	r2, [r3, #84]	; 0x54
    dcode->buf = malloc(dcode->buf_alloc);
  405172:	687b      	ldr	r3, [r7, #4]
  405174:	6d5b      	ldr	r3, [r3, #84]	; 0x54
  405176:	4618      	mov	r0, r3
  405178:	4b1b      	ldr	r3, [pc, #108]	; (4051e8 <zbar_decoder_create+0x90>)
  40517a:	4798      	blx	r3
  40517c:	4603      	mov	r3, r0
  40517e:	461a      	mov	r2, r3
  405180:	687b      	ldr	r3, [r7, #4]
  405182:	65da      	str	r2, [r3, #92]	; 0x5c

    /* initialize default configs */
#ifdef ENABLE_EAN
    dcode->ean.enable = 1;
  405184:	687b      	ldr	r3, [r7, #4]
  405186:	2201      	movs	r2, #1
  405188:	f883 20ca 	strb.w	r2, [r3, #202]	; 0xca
    dcode->ean.ean13_config = ((1 << ZBAR_CFG_ENABLE) |
  40518c:	687b      	ldr	r3, [r7, #4]
  40518e:	2205      	movs	r2, #5
  405190:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
                               (1 << ZBAR_CFG_EMIT_CHECK));
    dcode->ean.ean8_config = ((1 << ZBAR_CFG_ENABLE) |
  405194:	687b      	ldr	r3, [r7, #4]
  405196:	2205      	movs	r2, #5
  405198:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
                              (1 << ZBAR_CFG_EMIT_CHECK));
    dcode->ean.upca_config = 1 << ZBAR_CFG_EMIT_CHECK;
  40519c:	687b      	ldr	r3, [r7, #4]
  40519e:	2204      	movs	r2, #4
  4051a0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    dcode->ean.upce_config = 1 << ZBAR_CFG_EMIT_CHECK;
  4051a4:	687b      	ldr	r3, [r7, #4]
  4051a6:	2204      	movs	r2, #4
  4051a8:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
    dcode->ean.isbn10_config = 1 << ZBAR_CFG_EMIT_CHECK;
  4051ac:	687b      	ldr	r3, [r7, #4]
  4051ae:	2204      	movs	r2, #4
  4051b0:	f8c3 20dc 	str.w	r2, [r3, #220]	; 0xdc
    dcode->ean.isbn13_config = 1 << ZBAR_CFG_EMIT_CHECK;
  4051b4:	687b      	ldr	r3, [r7, #4]
  4051b6:	2204      	movs	r2, #4
  4051b8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
#ifdef ENABLE_CODABAR
    dcode->codabar.config = 1 << ZBAR_CFG_ENABLE;
    CFG(dcode->codabar, ZBAR_CFG_MIN_LEN) = 4;
#endif
#ifdef ENABLE_CODE39
    dcode->code39.config = 1 << ZBAR_CFG_ENABLE;
  4051bc:	687b      	ldr	r3, [r7, #4]
  4051be:	2201      	movs	r2, #1
  4051c0:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
    CFG(dcode->code39, ZBAR_CFG_MIN_LEN) = 1;
  4051c4:	687b      	ldr	r3, [r7, #4]
  4051c6:	2201      	movs	r2, #1
  4051c8:	f8c3 20fc 	str.w	r2, [r3, #252]	; 0xfc
#endif
#ifdef ENABLE_CODE93
    dcode->code93.config = 1 << ZBAR_CFG_ENABLE;
#endif
#ifdef ENABLE_CODE128
    dcode->code128.config = 1 << ZBAR_CFG_ENABLE;
  4051cc:	687b      	ldr	r3, [r7, #4]
  4051ce:	2201      	movs	r2, #1
  4051d0:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
#endif
#ifdef ENABLE_QRCODE
    dcode->qrf.config = 1 << ZBAR_CFG_ENABLE;
#endif

    zbar_decoder_reset(dcode);
  4051d4:	6878      	ldr	r0, [r7, #4]
  4051d6:	4b05      	ldr	r3, [pc, #20]	; (4051ec <zbar_decoder_create+0x94>)
  4051d8:	4798      	blx	r3
    return(dcode);
  4051da:	687b      	ldr	r3, [r7, #4]
}
  4051dc:	4618      	mov	r0, r3
  4051de:	3708      	adds	r7, #8
  4051e0:	46bd      	mov	sp, r7
  4051e2:	bd80      	pop	{r7, pc}
  4051e4:	00433d91 	.word	0x00433d91
  4051e8:	0043489d 	.word	0x0043489d
  4051ec:	0040521d 	.word	0x0040521d

004051f0 <zbar_decoder_destroy>:

void zbar_decoder_destroy (zbar_decoder_t *dcode)
{
  4051f0:	b580      	push	{r7, lr}
  4051f2:	b082      	sub	sp, #8
  4051f4:	af00      	add	r7, sp, #0
  4051f6:	6078      	str	r0, [r7, #4]
#ifdef ENABLE_DATABAR
    if(dcode->databar.segs)
        free(dcode->databar.segs);
#endif
    if(dcode->buf)
  4051f8:	687b      	ldr	r3, [r7, #4]
  4051fa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  4051fc:	2b00      	cmp	r3, #0
  4051fe:	d004      	beq.n	40520a <zbar_decoder_destroy+0x1a>
        free(dcode->buf);
  405200:	687b      	ldr	r3, [r7, #4]
  405202:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  405204:	4618      	mov	r0, r3
  405206:	4b04      	ldr	r3, [pc, #16]	; (405218 <zbar_decoder_destroy+0x28>)
  405208:	4798      	blx	r3
    free(dcode);
  40520a:	6878      	ldr	r0, [r7, #4]
  40520c:	4b02      	ldr	r3, [pc, #8]	; (405218 <zbar_decoder_destroy+0x28>)
  40520e:	4798      	blx	r3
}
  405210:	3708      	adds	r7, #8
  405212:	46bd      	mov	sp, r7
  405214:	bd80      	pop	{r7, pc}
  405216:	bf00      	nop
  405218:	004348ad 	.word	0x004348ad

0040521c <zbar_decoder_reset>:

void zbar_decoder_reset (zbar_decoder_t *dcode)
{
  40521c:	b580      	push	{r7, lr}
  40521e:	b082      	sub	sp, #8
  405220:	af00      	add	r7, sp, #0
  405222:	6078      	str	r0, [r7, #4]
    memset(dcode, 0, (long)&dcode->buf_alloc - (long)dcode);
  405224:	6878      	ldr	r0, [r7, #4]
  405226:	2100      	movs	r1, #0
  405228:	2254      	movs	r2, #84	; 0x54
  40522a:	4b0a      	ldr	r3, [pc, #40]	; (405254 <zbar_decoder_reset+0x38>)
  40522c:	4798      	blx	r3
#ifdef ENABLE_EAN
    ean_reset(&dcode->ean);
  40522e:	687b      	ldr	r3, [r7, #4]
  405230:	3368      	adds	r3, #104	; 0x68
  405232:	4618      	mov	r0, r3
  405234:	4b08      	ldr	r3, [pc, #32]	; (405258 <zbar_decoder_reset+0x3c>)
  405236:	4798      	blx	r3
#endif
#ifdef ENABLE_CODABAR
    codabar_reset(&dcode->codabar);
#endif
#ifdef ENABLE_CODE39
    code39_reset(&dcode->code39);
  405238:	687b      	ldr	r3, [r7, #4]
  40523a:	33ec      	adds	r3, #236	; 0xec
  40523c:	4618      	mov	r0, r3
  40523e:	4b07      	ldr	r3, [pc, #28]	; (40525c <zbar_decoder_reset+0x40>)
  405240:	4798      	blx	r3
#endif
#ifdef ENABLE_CODE93
    code93_reset(&dcode->code93);
#endif
#ifdef ENABLE_CODE128
    code128_reset(&dcode->code128);
  405242:	687b      	ldr	r3, [r7, #4]
  405244:	f503 7382 	add.w	r3, r3, #260	; 0x104
  405248:	4618      	mov	r0, r3
  40524a:	4b05      	ldr	r3, [pc, #20]	; (405260 <zbar_decoder_reset+0x44>)
  40524c:	4798      	blx	r3
    pdf417_reset(&dcode->pdf417);
#endif
#ifdef ENABLE_QRCODE
    qr_finder_reset(&dcode->qrf);
#endif
}
  40524e:	3708      	adds	r7, #8
  405250:	46bd      	mov	sp, r7
  405252:	bd80      	pop	{r7, pc}
  405254:	004350d5 	.word	0x004350d5
  405258:	00405015 	.word	0x00405015
  40525c:	00405041 	.word	0x00405041
  405260:	0040507d 	.word	0x0040507d

00405264 <zbar_decoder_new_scan>:

void zbar_decoder_new_scan (zbar_decoder_t *dcode)
{
  405264:	b580      	push	{r7, lr}
  405266:	b082      	sub	sp, #8
  405268:	af00      	add	r7, sp, #0
  40526a:	6078      	str	r0, [r7, #4]
    /* soft reset decoder */
    memset(dcode->w, 0, sizeof(dcode->w));
  40526c:	687b      	ldr	r3, [r7, #4]
  40526e:	3304      	adds	r3, #4
  405270:	4618      	mov	r0, r3
  405272:	2100      	movs	r1, #0
  405274:	2240      	movs	r2, #64	; 0x40
  405276:	4b0f      	ldr	r3, [pc, #60]	; (4052b4 <zbar_decoder_new_scan+0x50>)
  405278:	4798      	blx	r3
    dcode->lock = 0;
  40527a:	687b      	ldr	r3, [r7, #4]
  40527c:	2200      	movs	r2, #0
  40527e:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    dcode->idx = 0;
  405282:	687b      	ldr	r3, [r7, #4]
  405284:	2200      	movs	r2, #0
  405286:	701a      	strb	r2, [r3, #0]
    dcode->s6 = 0;
  405288:	687b      	ldr	r3, [r7, #4]
  40528a:	2200      	movs	r2, #0
  40528c:	651a      	str	r2, [r3, #80]	; 0x50
#ifdef ENABLE_EAN
    ean_new_scan(&dcode->ean);
  40528e:	687b      	ldr	r3, [r7, #4]
  405290:	3368      	adds	r3, #104	; 0x68
  405292:	4618      	mov	r0, r3
  405294:	4b08      	ldr	r3, [pc, #32]	; (4052b8 <zbar_decoder_new_scan+0x54>)
  405296:	4798      	blx	r3
#endif
#ifdef ENABLE_CODABAR
    codabar_reset(&dcode->codabar);
#endif
#ifdef ENABLE_CODE39
    code39_reset(&dcode->code39);
  405298:	687b      	ldr	r3, [r7, #4]
  40529a:	33ec      	adds	r3, #236	; 0xec
  40529c:	4618      	mov	r0, r3
  40529e:	4b07      	ldr	r3, [pc, #28]	; (4052bc <zbar_decoder_new_scan+0x58>)
  4052a0:	4798      	blx	r3
#endif
#ifdef ENABLE_CODE93
    code93_reset(&dcode->code93);
#endif
#ifdef ENABLE_CODE128
    code128_reset(&dcode->code128);
  4052a2:	687b      	ldr	r3, [r7, #4]
  4052a4:	f503 7382 	add.w	r3, r3, #260	; 0x104
  4052a8:	4618      	mov	r0, r3
  4052aa:	4b05      	ldr	r3, [pc, #20]	; (4052c0 <zbar_decoder_new_scan+0x5c>)
  4052ac:	4798      	blx	r3
    pdf417_reset(&dcode->pdf417);
#endif
#ifdef ENABLE_QRCODE
    qr_finder_reset(&dcode->qrf);
#endif
}
  4052ae:	3708      	adds	r7, #8
  4052b0:	46bd      	mov	sp, r7
  4052b2:	bd80      	pop	{r7, pc}
  4052b4:	004350d5 	.word	0x004350d5
  4052b8:	00404fd9 	.word	0x00404fd9
  4052bc:	00405041 	.word	0x00405041
  4052c0:	0040507d 	.word	0x0040507d

004052c4 <zbar_decoder_get_data>:
{
    return(get_color(dcode));
}

const char *zbar_decoder_get_data (const zbar_decoder_t *dcode)
{
  4052c4:	b480      	push	{r7}
  4052c6:	b083      	sub	sp, #12
  4052c8:	af00      	add	r7, sp, #0
  4052ca:	6078      	str	r0, [r7, #4]
    return((char*)dcode->buf);
  4052cc:	687b      	ldr	r3, [r7, #4]
  4052ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
}
  4052d0:	4618      	mov	r0, r3
  4052d2:	370c      	adds	r7, #12
  4052d4:	46bd      	mov	sp, r7
  4052d6:	f85d 7b04 	ldr.w	r7, [sp], #4
  4052da:	4770      	bx	lr

004052dc <zbar_decoder_get_data_length>:

unsigned int zbar_decoder_get_data_length (const zbar_decoder_t *dcode)
{
  4052dc:	b480      	push	{r7}
  4052de:	b083      	sub	sp, #12
  4052e0:	af00      	add	r7, sp, #0
  4052e2:	6078      	str	r0, [r7, #4]
    return(dcode->buflen);
  4052e4:	687b      	ldr	r3, [r7, #4]
  4052e6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
  4052e8:	4618      	mov	r0, r3
  4052ea:	370c      	adds	r7, #12
  4052ec:	46bd      	mov	sp, r7
  4052ee:	f85d 7b04 	ldr.w	r7, [sp], #4
  4052f2:	4770      	bx	lr

004052f4 <zbar_decoder_get_direction>:

int zbar_decoder_get_direction (const zbar_decoder_t *dcode)
{
  4052f4:	b480      	push	{r7}
  4052f6:	b083      	sub	sp, #12
  4052f8:	af00      	add	r7, sp, #0
  4052fa:	6078      	str	r0, [r7, #4]
    return(dcode->direction);
  4052fc:	687b      	ldr	r3, [r7, #4]
  4052fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
  405300:	4618      	mov	r0, r3
  405302:	370c      	adds	r7, #12
  405304:	46bd      	mov	sp, r7
  405306:	f85d 7b04 	ldr.w	r7, [sp], #4
  40530a:	4770      	bx	lr

0040530c <zbar_decoder_set_handler>:

zbar_decoder_handler_t *
zbar_decoder_set_handler (zbar_decoder_t *dcode,
                          zbar_decoder_handler_t *handler)
{
  40530c:	b480      	push	{r7}
  40530e:	b085      	sub	sp, #20
  405310:	af00      	add	r7, sp, #0
  405312:	6078      	str	r0, [r7, #4]
  405314:	6039      	str	r1, [r7, #0]
    zbar_decoder_handler_t *result = dcode->handler;
  405316:	687b      	ldr	r3, [r7, #4]
  405318:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  40531a:	60fb      	str	r3, [r7, #12]
    dcode->handler = handler;
  40531c:	687b      	ldr	r3, [r7, #4]
  40531e:	683a      	ldr	r2, [r7, #0]
  405320:	665a      	str	r2, [r3, #100]	; 0x64
    return(result);
  405322:	68fb      	ldr	r3, [r7, #12]
}
  405324:	4618      	mov	r0, r3
  405326:	3714      	adds	r7, #20
  405328:	46bd      	mov	sp, r7
  40532a:	f85d 7b04 	ldr.w	r7, [sp], #4
  40532e:	4770      	bx	lr

00405330 <zbar_decoder_set_userdata>:

void zbar_decoder_set_userdata (zbar_decoder_t *dcode,
                                void *userdata)
{
  405330:	b480      	push	{r7}
  405332:	b083      	sub	sp, #12
  405334:	af00      	add	r7, sp, #0
  405336:	6078      	str	r0, [r7, #4]
  405338:	6039      	str	r1, [r7, #0]
    dcode->userdata = userdata;
  40533a:	687b      	ldr	r3, [r7, #4]
  40533c:	683a      	ldr	r2, [r7, #0]
  40533e:	661a      	str	r2, [r3, #96]	; 0x60
}
  405340:	370c      	adds	r7, #12
  405342:	46bd      	mov	sp, r7
  405344:	f85d 7b04 	ldr.w	r7, [sp], #4
  405348:	4770      	bx	lr
  40534a:	bf00      	nop

0040534c <zbar_decoder_get_userdata>:

void *zbar_decoder_get_userdata (const zbar_decoder_t *dcode)
{
  40534c:	b480      	push	{r7}
  40534e:	b083      	sub	sp, #12
  405350:	af00      	add	r7, sp, #0
  405352:	6078      	str	r0, [r7, #4]
    return(dcode->userdata);
  405354:	687b      	ldr	r3, [r7, #4]
  405356:	6e1b      	ldr	r3, [r3, #96]	; 0x60
}
  405358:	4618      	mov	r0, r3
  40535a:	370c      	adds	r7, #12
  40535c:	46bd      	mov	sp, r7
  40535e:	f85d 7b04 	ldr.w	r7, [sp], #4
  405362:	4770      	bx	lr

00405364 <zbar_decoder_get_type>:

zbar_symbol_type_t zbar_decoder_get_type (const zbar_decoder_t *dcode)
{
  405364:	b480      	push	{r7}
  405366:	b083      	sub	sp, #12
  405368:	af00      	add	r7, sp, #0
  40536a:	6078      	str	r0, [r7, #4]
    return(dcode->type);
  40536c:	687b      	ldr	r3, [r7, #4]
  40536e:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
}
  405372:	4618      	mov	r0, r3
  405374:	370c      	adds	r7, #12
  405376:	46bd      	mov	sp, r7
  405378:	f85d 7b04 	ldr.w	r7, [sp], #4
  40537c:	4770      	bx	lr
  40537e:	bf00      	nop

00405380 <zbar_decoder_get_modifiers>:

unsigned int zbar_decoder_get_modifiers (const zbar_decoder_t *dcode)
{
  405380:	b480      	push	{r7}
  405382:	b083      	sub	sp, #12
  405384:	af00      	add	r7, sp, #0
  405386:	6078      	str	r0, [r7, #4]
    return(dcode->modifiers);
  405388:	687b      	ldr	r3, [r7, #4]
  40538a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
  40538c:	4618      	mov	r0, r3
  40538e:	370c      	adds	r7, #12
  405390:	46bd      	mov	sp, r7
  405392:	f85d 7b04 	ldr.w	r7, [sp], #4
  405396:	4770      	bx	lr

00405398 <zbar_decode_width>:

zbar_symbol_type_t zbar_decode_width (zbar_decoder_t *dcode,
                                      unsigned w)
{
  405398:	b580      	push	{r7, lr}
  40539a:	b084      	sub	sp, #16
  40539c:	af00      	add	r7, sp, #0
  40539e:	6078      	str	r0, [r7, #4]
  4053a0:	6039      	str	r1, [r7, #0]
    zbar_symbol_type_t tmp, sym = ZBAR_NONE;
  4053a2:	2300      	movs	r3, #0
  4053a4:	81fb      	strh	r3, [r7, #14]

    dcode->w[dcode->idx & (DECODE_WINDOW - 1)] = w;
  4053a6:	687b      	ldr	r3, [r7, #4]
  4053a8:	781b      	ldrb	r3, [r3, #0]
  4053aa:	f003 030f 	and.w	r3, r3, #15
  4053ae:	687a      	ldr	r2, [r7, #4]
  4053b0:	009b      	lsls	r3, r3, #2
  4053b2:	4413      	add	r3, r2
  4053b4:	683a      	ldr	r2, [r7, #0]
  4053b6:	605a      	str	r2, [r3, #4]
    dbprintf(1, "    decode[%x]: w=%d (%g)\n", dcode->idx, w, (w / 32.));
  4053b8:	bf00      	nop

    /* update shared character width */
    dcode->s6 -= get_width(dcode, 7);
  4053ba:	6878      	ldr	r0, [r7, #4]
  4053bc:	2107      	movs	r1, #7
  4053be:	4b36      	ldr	r3, [pc, #216]	; (405498 <zbar_decode_width+0x100>)
  4053c0:	4798      	blx	r3
  4053c2:	4602      	mov	r2, r0
  4053c4:	687b      	ldr	r3, [r7, #4]
  4053c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
  4053c8:	1a9a      	subs	r2, r3, r2
  4053ca:	687b      	ldr	r3, [r7, #4]
  4053cc:	651a      	str	r2, [r3, #80]	; 0x50
    dcode->s6 += get_width(dcode, 1);
  4053ce:	6878      	ldr	r0, [r7, #4]
  4053d0:	2101      	movs	r1, #1
  4053d2:	4b31      	ldr	r3, [pc, #196]	; (405498 <zbar_decode_width+0x100>)
  4053d4:	4798      	blx	r3
  4053d6:	4602      	mov	r2, r0
  4053d8:	687b      	ldr	r3, [r7, #4]
  4053da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
  4053dc:	441a      	add	r2, r3
  4053de:	687b      	ldr	r3, [r7, #4]
  4053e0:	651a      	str	r2, [r3, #80]	; 0x50
    if(TEST_CFG(dcode->qrf.config, ZBAR_CFG_ENABLE) &&
       (tmp = _zbar_find_qr(dcode)) > ZBAR_PARTIAL)
        sym = tmp;
#endif
#ifdef ENABLE_EAN
    if((dcode->ean.enable) &&
  4053e2:	687b      	ldr	r3, [r7, #4]
  4053e4:	f893 30ca 	ldrb.w	r3, [r3, #202]	; 0xca
  4053e8:	2b00      	cmp	r3, #0
  4053ea:	d009      	beq.n	405400 <zbar_decode_width+0x68>
  4053ec:	6878      	ldr	r0, [r7, #4]
  4053ee:	4b2b      	ldr	r3, [pc, #172]	; (40549c <zbar_decode_width+0x104>)
  4053f0:	4798      	blx	r3
  4053f2:	4603      	mov	r3, r0
  4053f4:	81bb      	strh	r3, [r7, #12]
  4053f6:	89bb      	ldrh	r3, [r7, #12]
  4053f8:	2b00      	cmp	r3, #0
  4053fa:	d001      	beq.n	405400 <zbar_decode_width+0x68>
       (tmp = _zbar_decode_ean(dcode)))
        sym = tmp;
  4053fc:	89bb      	ldrh	r3, [r7, #12]
  4053fe:	81fb      	strh	r3, [r7, #14]
#endif
#ifdef ENABLE_CODE39
    if(TEST_CFG(dcode->code39.config, ZBAR_CFG_ENABLE) &&
  405400:	687b      	ldr	r3, [r7, #4]
  405402:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
  405406:	f003 0301 	and.w	r3, r3, #1
  40540a:	2b00      	cmp	r3, #0
  40540c:	d009      	beq.n	405422 <zbar_decode_width+0x8a>
  40540e:	6878      	ldr	r0, [r7, #4]
  405410:	4b23      	ldr	r3, [pc, #140]	; (4054a0 <zbar_decode_width+0x108>)
  405412:	4798      	blx	r3
  405414:	4603      	mov	r3, r0
  405416:	81bb      	strh	r3, [r7, #12]
  405418:	89bb      	ldrh	r3, [r7, #12]
  40541a:	2b01      	cmp	r3, #1
  40541c:	d901      	bls.n	405422 <zbar_decode_width+0x8a>
       (tmp = _zbar_decode_code39(dcode)) > ZBAR_PARTIAL)
        sym = tmp;
  40541e:	89bb      	ldrh	r3, [r7, #12]
  405420:	81fb      	strh	r3, [r7, #14]
    if(TEST_CFG(dcode->code93.config, ZBAR_CFG_ENABLE) &&
       (tmp = _zbar_decode_code93(dcode)) > ZBAR_PARTIAL)
        sym = tmp;
#endif
#ifdef ENABLE_CODE128
    if(TEST_CFG(dcode->code128.config, ZBAR_CFG_ENABLE) &&
  405422:	687b      	ldr	r3, [r7, #4]
  405424:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
  405428:	f003 0301 	and.w	r3, r3, #1
  40542c:	2b00      	cmp	r3, #0
  40542e:	d009      	beq.n	405444 <zbar_decode_width+0xac>
  405430:	6878      	ldr	r0, [r7, #4]
  405432:	4b1c      	ldr	r3, [pc, #112]	; (4054a4 <zbar_decode_width+0x10c>)
  405434:	4798      	blx	r3
  405436:	4603      	mov	r3, r0
  405438:	81bb      	strh	r3, [r7, #12]
  40543a:	89bb      	ldrh	r3, [r7, #12]
  40543c:	2b01      	cmp	r3, #1
  40543e:	d901      	bls.n	405444 <zbar_decode_width+0xac>
       (tmp = _zbar_decode_code128(dcode)) > ZBAR_PARTIAL)
        sym = tmp;
  405440:	89bb      	ldrh	r3, [r7, #12]
  405442:	81fb      	strh	r3, [r7, #14]
    if(TEST_CFG(dcode->pdf417.config, ZBAR_CFG_ENABLE) &&
       (tmp = _zbar_decode_pdf417(dcode)) > ZBAR_PARTIAL)
        sym = tmp;
#endif

    dcode->idx++;
  405444:	687b      	ldr	r3, [r7, #4]
  405446:	781b      	ldrb	r3, [r3, #0]
  405448:	3301      	adds	r3, #1
  40544a:	b2da      	uxtb	r2, r3
  40544c:	687b      	ldr	r3, [r7, #4]
  40544e:	701a      	strb	r2, [r3, #0]
    dcode->type = sym;
  405450:	687b      	ldr	r3, [r7, #4]
  405452:	89fa      	ldrh	r2, [r7, #14]
  405454:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    if(sym) {
  405458:	89fb      	ldrh	r3, [r7, #14]
  40545a:	2b00      	cmp	r3, #0
  40545c:	d017      	beq.n	40548e <zbar_decode_width+0xf6>
        if(dcode->lock && sym > ZBAR_PARTIAL && sym != ZBAR_QRCODE)
  40545e:	687b      	ldr	r3, [r7, #4]
  405460:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  405464:	2b00      	cmp	r3, #0
  405466:	d00a      	beq.n	40547e <zbar_decode_width+0xe6>
  405468:	89fb      	ldrh	r3, [r7, #14]
  40546a:	2b01      	cmp	r3, #1
  40546c:	d907      	bls.n	40547e <zbar_decode_width+0xe6>
  40546e:	89fb      	ldrh	r3, [r7, #14]
  405470:	2b40      	cmp	r3, #64	; 0x40
  405472:	d004      	beq.n	40547e <zbar_decode_width+0xe6>
            release_lock(dcode, sym);
  405474:	89fb      	ldrh	r3, [r7, #14]
  405476:	6878      	ldr	r0, [r7, #4]
  405478:	4619      	mov	r1, r3
  40547a:	4b0b      	ldr	r3, [pc, #44]	; (4054a8 <zbar_decode_width+0x110>)
  40547c:	4798      	blx	r3
        if(dcode->handler)
  40547e:	687b      	ldr	r3, [r7, #4]
  405480:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  405482:	2b00      	cmp	r3, #0
  405484:	d003      	beq.n	40548e <zbar_decode_width+0xf6>
            dcode->handler(dcode);
  405486:	687b      	ldr	r3, [r7, #4]
  405488:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  40548a:	6878      	ldr	r0, [r7, #4]
  40548c:	4798      	blx	r3
    }
    return(sym);
  40548e:	89fb      	ldrh	r3, [r7, #14]
}
  405490:	4618      	mov	r0, r3
  405492:	3710      	adds	r7, #16
  405494:	46bd      	mov	sp, r7
  405496:	bd80      	pop	{r7, pc}
  405498:	004050b9 	.word	0x004050b9
  40549c:	00406ea5 	.word	0x00406ea5
  4054a0:	00404ca9 	.word	0x00404ca9
  4054a4:	00404239 	.word	0x00404239
  4054a8:	004050e9 	.word	0x004050e9

004054ac <decoder_get_configp>:

static inline const unsigned int*
decoder_get_configp (const zbar_decoder_t *dcode,
                     zbar_symbol_type_t sym)
{
  4054ac:	b480      	push	{r7}
  4054ae:	b085      	sub	sp, #20
  4054b0:	af00      	add	r7, sp, #0
  4054b2:	6078      	str	r0, [r7, #4]
  4054b4:	460b      	mov	r3, r1
  4054b6:	807b      	strh	r3, [r7, #2]
    const unsigned int *config;
    switch(sym) {
  4054b8:	887b      	ldrh	r3, [r7, #2]
  4054ba:	2b0a      	cmp	r3, #10
  4054bc:	d033      	beq.n	405526 <decoder_get_configp+0x7a>
  4054be:	2b0a      	cmp	r3, #10
  4054c0:	dc0b      	bgt.n	4054da <decoder_get_configp+0x2e>
  4054c2:	2b05      	cmp	r3, #5
  4054c4:	d01f      	beq.n	405506 <decoder_get_configp+0x5a>
  4054c6:	2b05      	cmp	r3, #5
  4054c8:	dc02      	bgt.n	4054d0 <decoder_get_configp+0x24>
  4054ca:	2b02      	cmp	r3, #2
  4054cc:	d017      	beq.n	4054fe <decoder_get_configp+0x52>
  4054ce:	e03b      	b.n	405548 <decoder_get_configp+0x9c>
  4054d0:	2b08      	cmp	r3, #8
  4054d2:	d01c      	beq.n	40550e <decoder_get_configp+0x62>
  4054d4:	2b09      	cmp	r3, #9
  4054d6:	d022      	beq.n	40551e <decoder_get_configp+0x72>
  4054d8:	e036      	b.n	405548 <decoder_get_configp+0x9c>
  4054da:	2b0e      	cmp	r3, #14
  4054dc:	d027      	beq.n	40552e <decoder_get_configp+0x82>
  4054de:	2b0e      	cmp	r3, #14
  4054e0:	dc04      	bgt.n	4054ec <decoder_get_configp+0x40>
  4054e2:	2b0c      	cmp	r3, #12
  4054e4:	d017      	beq.n	405516 <decoder_get_configp+0x6a>
  4054e6:	2b0d      	cmp	r3, #13
  4054e8:	d005      	beq.n	4054f6 <decoder_get_configp+0x4a>
  4054ea:	e02d      	b.n	405548 <decoder_get_configp+0x9c>
  4054ec:	2b27      	cmp	r3, #39	; 0x27
  4054ee:	d022      	beq.n	405536 <decoder_get_configp+0x8a>
  4054f0:	2b80      	cmp	r3, #128	; 0x80
  4054f2:	d024      	beq.n	40553e <decoder_get_configp+0x92>
  4054f4:	e028      	b.n	405548 <decoder_get_configp+0x9c>
#ifdef ENABLE_EAN
    case ZBAR_EAN13:
        config = &dcode->ean.ean13_config;
  4054f6:	687b      	ldr	r3, [r7, #4]
  4054f8:	33cc      	adds	r3, #204	; 0xcc
  4054fa:	60fb      	str	r3, [r7, #12]
        break;
  4054fc:	e026      	b.n	40554c <decoder_get_configp+0xa0>

    case ZBAR_EAN2:
        config = &dcode->ean.ean2_config;
  4054fe:	687b      	ldr	r3, [r7, #4]
  405500:	33e8      	adds	r3, #232	; 0xe8
  405502:	60fb      	str	r3, [r7, #12]
        break;
  405504:	e022      	b.n	40554c <decoder_get_configp+0xa0>

    case ZBAR_EAN5:
        config = &dcode->ean.ean5_config;
  405506:	687b      	ldr	r3, [r7, #4]
  405508:	33e4      	adds	r3, #228	; 0xe4
  40550a:	60fb      	str	r3, [r7, #12]
        break;
  40550c:	e01e      	b.n	40554c <decoder_get_configp+0xa0>

    case ZBAR_EAN8:
        config = &dcode->ean.ean8_config;
  40550e:	687b      	ldr	r3, [r7, #4]
  405510:	33d0      	adds	r3, #208	; 0xd0
  405512:	60fb      	str	r3, [r7, #12]
        break;
  405514:	e01a      	b.n	40554c <decoder_get_configp+0xa0>

    case ZBAR_UPCA:
        config = &dcode->ean.upca_config;
  405516:	687b      	ldr	r3, [r7, #4]
  405518:	33d4      	adds	r3, #212	; 0xd4
  40551a:	60fb      	str	r3, [r7, #12]
        break;
  40551c:	e016      	b.n	40554c <decoder_get_configp+0xa0>

    case ZBAR_UPCE:
        config = &dcode->ean.upce_config;
  40551e:	687b      	ldr	r3, [r7, #4]
  405520:	33d8      	adds	r3, #216	; 0xd8
  405522:	60fb      	str	r3, [r7, #12]
        break;
  405524:	e012      	b.n	40554c <decoder_get_configp+0xa0>

    case ZBAR_ISBN10:
        config = &dcode->ean.isbn10_config;
  405526:	687b      	ldr	r3, [r7, #4]
  405528:	33dc      	adds	r3, #220	; 0xdc
  40552a:	60fb      	str	r3, [r7, #12]
        break;
  40552c:	e00e      	b.n	40554c <decoder_get_configp+0xa0>

    case ZBAR_ISBN13:
        config = &dcode->ean.isbn13_config;
  40552e:	687b      	ldr	r3, [r7, #4]
  405530:	33e0      	adds	r3, #224	; 0xe0
  405532:	60fb      	str	r3, [r7, #12]
        break;
  405534:	e00a      	b.n	40554c <decoder_get_configp+0xa0>
        break;
#endif

#ifdef ENABLE_CODE39
    case ZBAR_CODE39:
        config = &dcode->code39.config;
  405536:	687b      	ldr	r3, [r7, #4]
  405538:	33f8      	adds	r3, #248	; 0xf8
  40553a:	60fb      	str	r3, [r7, #12]
        break;
  40553c:	e006      	b.n	40554c <decoder_get_configp+0xa0>
        break;
#endif

#ifdef ENABLE_CODE128
    case ZBAR_CODE128:
        config = &dcode->code128.config;
  40553e:	687b      	ldr	r3, [r7, #4]
  405540:	f503 7388 	add.w	r3, r3, #272	; 0x110
  405544:	60fb      	str	r3, [r7, #12]
        break;
  405546:	e001      	b.n	40554c <decoder_get_configp+0xa0>
        config = &dcode->qrf.config;
        break;
#endif

    default:
        config = NULL;
  405548:	2300      	movs	r3, #0
  40554a:	60fb      	str	r3, [r7, #12]
    }
    return(config);
  40554c:	68fb      	ldr	r3, [r7, #12]
}
  40554e:	4618      	mov	r0, r3
  405550:	3714      	adds	r7, #20
  405552:	46bd      	mov	sp, r7
  405554:	f85d 7b04 	ldr.w	r7, [sp], #4
  405558:	4770      	bx	lr
  40555a:	bf00      	nop

0040555c <zbar_decoder_get_configs>:

unsigned int zbar_decoder_get_configs (const zbar_decoder_t *dcode,
                                       zbar_symbol_type_t sym)
{
  40555c:	b580      	push	{r7, lr}
  40555e:	b084      	sub	sp, #16
  405560:	af00      	add	r7, sp, #0
  405562:	6078      	str	r0, [r7, #4]
  405564:	460b      	mov	r3, r1
  405566:	807b      	strh	r3, [r7, #2]
    const unsigned *config = decoder_get_configp(dcode, sym);
  405568:	887b      	ldrh	r3, [r7, #2]
  40556a:	6878      	ldr	r0, [r7, #4]
  40556c:	4619      	mov	r1, r3
  40556e:	4b07      	ldr	r3, [pc, #28]	; (40558c <zbar_decoder_get_configs+0x30>)
  405570:	4798      	blx	r3
  405572:	60f8      	str	r0, [r7, #12]
    if(!config)
  405574:	68fb      	ldr	r3, [r7, #12]
  405576:	2b00      	cmp	r3, #0
  405578:	d101      	bne.n	40557e <zbar_decoder_get_configs+0x22>
        return(0);
  40557a:	2300      	movs	r3, #0
  40557c:	e001      	b.n	405582 <zbar_decoder_get_configs+0x26>
    return(*config);
  40557e:	68fb      	ldr	r3, [r7, #12]
  405580:	681b      	ldr	r3, [r3, #0]
}
  405582:	4618      	mov	r0, r3
  405584:	3710      	adds	r7, #16
  405586:	46bd      	mov	sp, r7
  405588:	bd80      	pop	{r7, pc}
  40558a:	bf00      	nop
  40558c:	004054ad 	.word	0x004054ad

00405590 <decoder_set_config_bool>:

static inline int decoder_set_config_bool (zbar_decoder_t *dcode,
                                           zbar_symbol_type_t sym,
                                           zbar_config_t cfg,
                                           int val)
{
  405590:	b580      	push	{r7, lr}
  405592:	b086      	sub	sp, #24
  405594:	af00      	add	r7, sp, #0
  405596:	60f8      	str	r0, [r7, #12]
  405598:	607b      	str	r3, [r7, #4]
  40559a:	460b      	mov	r3, r1
  40559c:	817b      	strh	r3, [r7, #10]
  40559e:	4613      	mov	r3, r2
  4055a0:	813b      	strh	r3, [r7, #8]
    unsigned *config = (void*)decoder_get_configp(dcode, sym);
  4055a2:	897b      	ldrh	r3, [r7, #10]
  4055a4:	68f8      	ldr	r0, [r7, #12]
  4055a6:	4619      	mov	r1, r3
  4055a8:	4b30      	ldr	r3, [pc, #192]	; (40566c <decoder_set_config_bool+0xdc>)
  4055aa:	4798      	blx	r3
  4055ac:	6178      	str	r0, [r7, #20]
    if(!config || cfg >= ZBAR_CFG_NUM)
  4055ae:	697b      	ldr	r3, [r7, #20]
  4055b0:	2b00      	cmp	r3, #0
  4055b2:	d002      	beq.n	4055ba <decoder_set_config_bool+0x2a>
  4055b4:	893b      	ldrh	r3, [r7, #8]
  4055b6:	2b03      	cmp	r3, #3
  4055b8:	d901      	bls.n	4055be <decoder_set_config_bool+0x2e>
        return(1);
  4055ba:	2301      	movs	r3, #1
  4055bc:	e052      	b.n	405664 <decoder_set_config_bool+0xd4>

    if(!val)
  4055be:	687b      	ldr	r3, [r7, #4]
  4055c0:	2b00      	cmp	r3, #0
  4055c2:	d10a      	bne.n	4055da <decoder_set_config_bool+0x4a>
        *config &= ~(1 << cfg);
  4055c4:	697b      	ldr	r3, [r7, #20]
  4055c6:	681b      	ldr	r3, [r3, #0]
  4055c8:	893a      	ldrh	r2, [r7, #8]
  4055ca:	2101      	movs	r1, #1
  4055cc:	fa01 f202 	lsl.w	r2, r1, r2
  4055d0:	43d2      	mvns	r2, r2
  4055d2:	401a      	ands	r2, r3
  4055d4:	697b      	ldr	r3, [r7, #20]
  4055d6:	601a      	str	r2, [r3, #0]
  4055d8:	e00e      	b.n	4055f8 <decoder_set_config_bool+0x68>
    else if(val == 1)
  4055da:	687b      	ldr	r3, [r7, #4]
  4055dc:	2b01      	cmp	r3, #1
  4055de:	d109      	bne.n	4055f4 <decoder_set_config_bool+0x64>
        *config |= (1 << cfg);
  4055e0:	697b      	ldr	r3, [r7, #20]
  4055e2:	681b      	ldr	r3, [r3, #0]
  4055e4:	893a      	ldrh	r2, [r7, #8]
  4055e6:	2101      	movs	r1, #1
  4055e8:	fa01 f202 	lsl.w	r2, r1, r2
  4055ec:	431a      	orrs	r2, r3
  4055ee:	697b      	ldr	r3, [r7, #20]
  4055f0:	601a      	str	r2, [r3, #0]
  4055f2:	e001      	b.n	4055f8 <decoder_set_config_bool+0x68>
    else
        return(1);
  4055f4:	2301      	movs	r3, #1
  4055f6:	e035      	b.n	405664 <decoder_set_config_bool+0xd4>

#ifdef ENABLE_EAN
    dcode->ean.enable = TEST_CFG(dcode->ean.ean13_config |
  4055f8:	68fb      	ldr	r3, [r7, #12]
  4055fa:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
  4055fe:	b2da      	uxtb	r2, r3
  405600:	68fb      	ldr	r3, [r7, #12]
  405602:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
  405606:	b2db      	uxtb	r3, r3
  405608:	4313      	orrs	r3, r2
  40560a:	b2da      	uxtb	r2, r3
  40560c:	68fb      	ldr	r3, [r7, #12]
  40560e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
  405612:	b2db      	uxtb	r3, r3
  405614:	4313      	orrs	r3, r2
  405616:	b2da      	uxtb	r2, r3
  405618:	68fb      	ldr	r3, [r7, #12]
  40561a:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
  40561e:	b2db      	uxtb	r3, r3
  405620:	4313      	orrs	r3, r2
  405622:	b2da      	uxtb	r2, r3
  405624:	68fb      	ldr	r3, [r7, #12]
  405626:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  40562a:	b2db      	uxtb	r3, r3
  40562c:	4313      	orrs	r3, r2
  40562e:	b2da      	uxtb	r2, r3
  405630:	68fb      	ldr	r3, [r7, #12]
  405632:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
  405636:	b2db      	uxtb	r3, r3
  405638:	4313      	orrs	r3, r2
  40563a:	b2da      	uxtb	r2, r3
  40563c:	68fb      	ldr	r3, [r7, #12]
  40563e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	; 0xdc
  405642:	b2db      	uxtb	r3, r3
  405644:	4313      	orrs	r3, r2
  405646:	b2da      	uxtb	r2, r3
  405648:	68fb      	ldr	r3, [r7, #12]
  40564a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  40564e:	b2db      	uxtb	r3, r3
  405650:	4313      	orrs	r3, r2
  405652:	b2db      	uxtb	r3, r3
  405654:	b2db      	uxtb	r3, r3
  405656:	f003 0301 	and.w	r3, r3, #1
  40565a:	b2da      	uxtb	r2, r3
  40565c:	68fb      	ldr	r3, [r7, #12]
  40565e:	f883 20ca 	strb.w	r2, [r3, #202]	; 0xca
                                 dcode->ean.isbn10_config |
                                 dcode->ean.isbn13_config,
                                 ZBAR_CFG_ENABLE);
#endif

    return(0);
  405662:	2300      	movs	r3, #0
}
  405664:	4618      	mov	r0, r3
  405666:	3718      	adds	r7, #24
  405668:	46bd      	mov	sp, r7
  40566a:	bd80      	pop	{r7, pc}
  40566c:	004054ad 	.word	0x004054ad

00405670 <decoder_set_config_int>:

static inline int decoder_set_config_int (zbar_decoder_t *dcode,
                                          zbar_symbol_type_t sym,
                                          zbar_config_t cfg,
                                          int val)
{
  405670:	b480      	push	{r7}
  405672:	b085      	sub	sp, #20
  405674:	af00      	add	r7, sp, #0
  405676:	60f8      	str	r0, [r7, #12]
  405678:	607b      	str	r3, [r7, #4]
  40567a:	460b      	mov	r3, r1
  40567c:	817b      	strh	r3, [r7, #10]
  40567e:	4613      	mov	r3, r2
  405680:	813b      	strh	r3, [r7, #8]
    switch(sym) {
  405682:	897b      	ldrh	r3, [r7, #10]
  405684:	2b27      	cmp	r3, #39	; 0x27
  405686:	d002      	beq.n	40568e <decoder_set_config_int+0x1e>
  405688:	2b80      	cmp	r3, #128	; 0x80
  40568a:	d009      	beq.n	4056a0 <decoder_set_config_int+0x30>
  40568c:	e011      	b.n	4056b2 <decoder_set_config_int+0x42>
        CFG(dcode->codabar, cfg) = val;
        break;
#endif
#ifdef ENABLE_CODE39
    case ZBAR_CODE39:
        CFG(dcode->code39, cfg) = val;
  40568e:	893b      	ldrh	r3, [r7, #8]
  405690:	3b20      	subs	r3, #32
  405692:	68fa      	ldr	r2, [r7, #12]
  405694:	333e      	adds	r3, #62	; 0x3e
  405696:	009b      	lsls	r3, r3, #2
  405698:	4413      	add	r3, r2
  40569a:	687a      	ldr	r2, [r7, #4]
  40569c:	605a      	str	r2, [r3, #4]
        break;
  40569e:	e00a      	b.n	4056b6 <decoder_set_config_int+0x46>
        CFG(dcode->code93, cfg) = val;
        break;
#endif
#ifdef ENABLE_CODE128
    case ZBAR_CODE128:
        CFG(dcode->code128, cfg) = val;
  4056a0:	893b      	ldrh	r3, [r7, #8]
  4056a2:	3b20      	subs	r3, #32
  4056a4:	68fa      	ldr	r2, [r7, #12]
  4056a6:	3344      	adds	r3, #68	; 0x44
  4056a8:	009b      	lsls	r3, r3, #2
  4056aa:	4413      	add	r3, r2
  4056ac:	687a      	ldr	r2, [r7, #4]
  4056ae:	605a      	str	r2, [r3, #4]
        break;
  4056b0:	e001      	b.n	4056b6 <decoder_set_config_int+0x46>
        CFG(dcode->pdf417, cfg) = val;
        break;
#endif

    default:
        return(1);
  4056b2:	2301      	movs	r3, #1
  4056b4:	e000      	b.n	4056b8 <decoder_set_config_int+0x48>
    }
    return(0);
  4056b6:	2300      	movs	r3, #0
}
  4056b8:	4618      	mov	r0, r3
  4056ba:	3714      	adds	r7, #20
  4056bc:	46bd      	mov	sp, r7
  4056be:	f85d 7b04 	ldr.w	r7, [sp], #4
  4056c2:	4770      	bx	lr

004056c4 <zbar_decoder_set_config>:

int zbar_decoder_set_config (zbar_decoder_t *dcode,
                             zbar_symbol_type_t sym,
                             zbar_config_t cfg,
                             int val)
{
  4056c4:	b590      	push	{r4, r7, lr}
  4056c6:	b087      	sub	sp, #28
  4056c8:	af00      	add	r7, sp, #0
  4056ca:	60f8      	str	r0, [r7, #12]
  4056cc:	607b      	str	r3, [r7, #4]
  4056ce:	460b      	mov	r3, r1
  4056d0:	817b      	strh	r3, [r7, #10]
  4056d2:	4613      	mov	r3, r2
  4056d4:	813b      	strh	r3, [r7, #8]
    if(sym == ZBAR_NONE) {
  4056d6:	897b      	ldrh	r3, [r7, #10]
  4056d8:	2b00      	cmp	r3, #0
  4056da:	d114      	bne.n	405706 <zbar_decoder_set_config+0x42>
            ZBAR_I25, ZBAR_DATABAR, ZBAR_DATABAR_EXP, ZBAR_CODABAR,
	    ZBAR_CODE39, ZBAR_CODE93, ZBAR_CODE128, ZBAR_QRCODE, 
	    ZBAR_PDF417, 0
        };
        const zbar_symbol_type_t *symp;
        for(symp = all; *symp; symp++)
  4056dc:	4b1b      	ldr	r3, [pc, #108]	; (40574c <zbar_decoder_set_config+0x88>)
  4056de:	617b      	str	r3, [r7, #20]
  4056e0:	e00b      	b.n	4056fa <zbar_decoder_set_config+0x36>
            zbar_decoder_set_config(dcode, *symp, cfg, val);
  4056e2:	697b      	ldr	r3, [r7, #20]
  4056e4:	881a      	ldrh	r2, [r3, #0]
  4056e6:	893b      	ldrh	r3, [r7, #8]
  4056e8:	68f8      	ldr	r0, [r7, #12]
  4056ea:	4611      	mov	r1, r2
  4056ec:	461a      	mov	r2, r3
  4056ee:	687b      	ldr	r3, [r7, #4]
  4056f0:	f7ff ffe8 	bl	4056c4 <zbar_decoder_set_config>
            ZBAR_I25, ZBAR_DATABAR, ZBAR_DATABAR_EXP, ZBAR_CODABAR,
	    ZBAR_CODE39, ZBAR_CODE93, ZBAR_CODE128, ZBAR_QRCODE, 
	    ZBAR_PDF417, 0
        };
        const zbar_symbol_type_t *symp;
        for(symp = all; *symp; symp++)
  4056f4:	697b      	ldr	r3, [r7, #20]
  4056f6:	3302      	adds	r3, #2
  4056f8:	617b      	str	r3, [r7, #20]
  4056fa:	697b      	ldr	r3, [r7, #20]
  4056fc:	881b      	ldrh	r3, [r3, #0]
  4056fe:	2b00      	cmp	r3, #0
  405700:	d1ef      	bne.n	4056e2 <zbar_decoder_set_config+0x1e>
            zbar_decoder_set_config(dcode, *symp, cfg, val);
        return(0);
  405702:	2300      	movs	r3, #0
  405704:	e01d      	b.n	405742 <zbar_decoder_set_config+0x7e>
    }

    if(cfg >= 0 && cfg < ZBAR_CFG_NUM)
  405706:	893b      	ldrh	r3, [r7, #8]
  405708:	2b03      	cmp	r3, #3
  40570a:	d809      	bhi.n	405720 <zbar_decoder_set_config+0x5c>
        return(decoder_set_config_bool(dcode, sym, cfg, val));
  40570c:	897a      	ldrh	r2, [r7, #10]
  40570e:	893b      	ldrh	r3, [r7, #8]
  405710:	68f8      	ldr	r0, [r7, #12]
  405712:	4611      	mov	r1, r2
  405714:	461a      	mov	r2, r3
  405716:	687b      	ldr	r3, [r7, #4]
  405718:	4c0d      	ldr	r4, [pc, #52]	; (405750 <zbar_decoder_set_config+0x8c>)
  40571a:	47a0      	blx	r4
  40571c:	4603      	mov	r3, r0
  40571e:	e010      	b.n	405742 <zbar_decoder_set_config+0x7e>
    else if(cfg >= ZBAR_CFG_MIN_LEN && cfg <= ZBAR_CFG_MAX_LEN)
  405720:	893b      	ldrh	r3, [r7, #8]
  405722:	2b1f      	cmp	r3, #31
  405724:	d90c      	bls.n	405740 <zbar_decoder_set_config+0x7c>
  405726:	893b      	ldrh	r3, [r7, #8]
  405728:	2b21      	cmp	r3, #33	; 0x21
  40572a:	d809      	bhi.n	405740 <zbar_decoder_set_config+0x7c>
        return(decoder_set_config_int(dcode, sym, cfg, val));
  40572c:	897a      	ldrh	r2, [r7, #10]
  40572e:	893b      	ldrh	r3, [r7, #8]
  405730:	68f8      	ldr	r0, [r7, #12]
  405732:	4611      	mov	r1, r2
  405734:	461a      	mov	r2, r3
  405736:	687b      	ldr	r3, [r7, #4]
  405738:	4c06      	ldr	r4, [pc, #24]	; (405754 <zbar_decoder_set_config+0x90>)
  40573a:	47a0      	blx	r4
  40573c:	4603      	mov	r3, r0
  40573e:	e000      	b.n	405742 <zbar_decoder_set_config+0x7e>
    else
        return(1);
  405740:	2301      	movs	r3, #1
}
  405742:	4618      	mov	r0, r3
  405744:	371c      	adds	r7, #28
  405746:	46bd      	mov	sp, r7
  405748:	bd90      	pop	{r4, r7, pc}
  40574a:	bf00      	nop
  40574c:	0043c4e8 	.word	0x0043c4e8
  405750:	00405591 	.word	0x00405591
  405754:	00405671 	.word	0x00405671

00405758 <_zbar_decoder_buf_dump>:
static char *decoder_dump = NULL;
static unsigned decoder_dumplen = 0;

const char *_zbar_decoder_buf_dump (unsigned char *buf,
                                    unsigned int buflen)
{
  405758:	b5b0      	push	{r4, r5, r7, lr}
  40575a:	b088      	sub	sp, #32
  40575c:	af02      	add	r7, sp, #8
  40575e:	6078      	str	r0, [r7, #4]
  405760:	6039      	str	r1, [r7, #0]
    int dumplen = (buflen * 3) + 12;
  405762:	683a      	ldr	r2, [r7, #0]
  405764:	4613      	mov	r3, r2
  405766:	005b      	lsls	r3, r3, #1
  405768:	4413      	add	r3, r2
  40576a:	330c      	adds	r3, #12
  40576c:	60fb      	str	r3, [r7, #12]
    char *p;
    int i;

    if(!decoder_dump || dumplen > decoder_dumplen) {
  40576e:	4b2a      	ldr	r3, [pc, #168]	; (405818 <_zbar_decoder_buf_dump+0xc0>)
  405770:	681b      	ldr	r3, [r3, #0]
  405772:	2b00      	cmp	r3, #0
  405774:	d004      	beq.n	405780 <_zbar_decoder_buf_dump+0x28>
  405776:	68fa      	ldr	r2, [r7, #12]
  405778:	4b28      	ldr	r3, [pc, #160]	; (40581c <_zbar_decoder_buf_dump+0xc4>)
  40577a:	681b      	ldr	r3, [r3, #0]
  40577c:	429a      	cmp	r2, r3
  40577e:	d913      	bls.n	4057a8 <_zbar_decoder_buf_dump+0x50>
        if(decoder_dump)
  405780:	4b25      	ldr	r3, [pc, #148]	; (405818 <_zbar_decoder_buf_dump+0xc0>)
  405782:	681b      	ldr	r3, [r3, #0]
  405784:	2b00      	cmp	r3, #0
  405786:	d004      	beq.n	405792 <_zbar_decoder_buf_dump+0x3a>
            free(decoder_dump);
  405788:	4b23      	ldr	r3, [pc, #140]	; (405818 <_zbar_decoder_buf_dump+0xc0>)
  40578a:	681b      	ldr	r3, [r3, #0]
  40578c:	4618      	mov	r0, r3
  40578e:	4b24      	ldr	r3, [pc, #144]	; (405820 <_zbar_decoder_buf_dump+0xc8>)
  405790:	4798      	blx	r3
        decoder_dump = malloc(dumplen);
  405792:	68fb      	ldr	r3, [r7, #12]
  405794:	4618      	mov	r0, r3
  405796:	4b23      	ldr	r3, [pc, #140]	; (405824 <_zbar_decoder_buf_dump+0xcc>)
  405798:	4798      	blx	r3
  40579a:	4603      	mov	r3, r0
  40579c:	461a      	mov	r2, r3
  40579e:	4b1e      	ldr	r3, [pc, #120]	; (405818 <_zbar_decoder_buf_dump+0xc0>)
  4057a0:	601a      	str	r2, [r3, #0]
        decoder_dumplen = dumplen;
  4057a2:	68fb      	ldr	r3, [r7, #12]
  4057a4:	4a1d      	ldr	r2, [pc, #116]	; (40581c <_zbar_decoder_buf_dump+0xc4>)
  4057a6:	6013      	str	r3, [r2, #0]
    }
    p = decoder_dump +
  4057a8:	4b1b      	ldr	r3, [pc, #108]	; (405818 <_zbar_decoder_buf_dump+0xc0>)
  4057aa:	681c      	ldr	r4, [r3, #0]
        snprintf(decoder_dump, 12, "buf[%04x]=",
  4057ac:	4b1a      	ldr	r3, [pc, #104]	; (405818 <_zbar_decoder_buf_dump+0xc0>)
  4057ae:	6819      	ldr	r1, [r3, #0]
  4057b0:	683b      	ldr	r3, [r7, #0]
  4057b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
  4057b6:	4293      	cmp	r3, r2
  4057b8:	bf28      	it	cs
  4057ba:	4613      	movcs	r3, r2
  4057bc:	4608      	mov	r0, r1
  4057be:	210c      	movs	r1, #12
  4057c0:	4a19      	ldr	r2, [pc, #100]	; (405828 <_zbar_decoder_buf_dump+0xd0>)
  4057c2:	4d1a      	ldr	r5, [pc, #104]	; (40582c <_zbar_decoder_buf_dump+0xd4>)
  4057c4:	47a8      	blx	r5
  4057c6:	4603      	mov	r3, r0
        if(decoder_dump)
            free(decoder_dump);
        decoder_dump = malloc(dumplen);
        decoder_dumplen = dumplen;
    }
    p = decoder_dump +
  4057c8:	4423      	add	r3, r4
  4057ca:	617b      	str	r3, [r7, #20]
        snprintf(decoder_dump, 12, "buf[%04x]=",
                 (buflen > 0xffff) ? 0xffff : buflen);
    for(i = 0; i < buflen; i++)
  4057cc:	2300      	movs	r3, #0
  4057ce:	613b      	str	r3, [r7, #16]
  4057d0:	e018      	b.n	405804 <_zbar_decoder_buf_dump+0xac>
        p += snprintf(p, 4, "%s%02x", (i) ? " " : "",  buf[i]);
  4057d2:	693b      	ldr	r3, [r7, #16]
  4057d4:	2b00      	cmp	r3, #0
  4057d6:	d001      	beq.n	4057dc <_zbar_decoder_buf_dump+0x84>
  4057d8:	4c15      	ldr	r4, [pc, #84]	; (405830 <_zbar_decoder_buf_dump+0xd8>)
  4057da:	e000      	b.n	4057de <_zbar_decoder_buf_dump+0x86>
  4057dc:	4c15      	ldr	r4, [pc, #84]	; (405834 <_zbar_decoder_buf_dump+0xdc>)
  4057de:	693b      	ldr	r3, [r7, #16]
  4057e0:	687a      	ldr	r2, [r7, #4]
  4057e2:	4413      	add	r3, r2
  4057e4:	781b      	ldrb	r3, [r3, #0]
  4057e6:	9300      	str	r3, [sp, #0]
  4057e8:	6978      	ldr	r0, [r7, #20]
  4057ea:	2104      	movs	r1, #4
  4057ec:	4a12      	ldr	r2, [pc, #72]	; (405838 <_zbar_decoder_buf_dump+0xe0>)
  4057ee:	4623      	mov	r3, r4
  4057f0:	4c0e      	ldr	r4, [pc, #56]	; (40582c <_zbar_decoder_buf_dump+0xd4>)
  4057f2:	47a0      	blx	r4
  4057f4:	4603      	mov	r3, r0
  4057f6:	461a      	mov	r2, r3
  4057f8:	697b      	ldr	r3, [r7, #20]
  4057fa:	4413      	add	r3, r2
  4057fc:	617b      	str	r3, [r7, #20]
        decoder_dumplen = dumplen;
    }
    p = decoder_dump +
        snprintf(decoder_dump, 12, "buf[%04x]=",
                 (buflen > 0xffff) ? 0xffff : buflen);
    for(i = 0; i < buflen; i++)
  4057fe:	693b      	ldr	r3, [r7, #16]
  405800:	3301      	adds	r3, #1
  405802:	613b      	str	r3, [r7, #16]
  405804:	693a      	ldr	r2, [r7, #16]
  405806:	683b      	ldr	r3, [r7, #0]
  405808:	429a      	cmp	r2, r3
  40580a:	d3e2      	bcc.n	4057d2 <_zbar_decoder_buf_dump+0x7a>
        p += snprintf(p, 4, "%s%02x", (i) ? " " : "",  buf[i]);
    return(decoder_dump);
  40580c:	4b02      	ldr	r3, [pc, #8]	; (405818 <_zbar_decoder_buf_dump+0xc0>)
  40580e:	681b      	ldr	r3, [r3, #0]
}
  405810:	4618      	mov	r0, r3
  405812:	3718      	adds	r7, #24
  405814:	46bd      	mov	sp, r7
  405816:	bdb0      	pop	{r4, r5, r7, pc}
  405818:	20001bcc 	.word	0x20001bcc
  40581c:	20001bd0 	.word	0x20001bd0
  405820:	004348ad 	.word	0x004348ad
  405824:	0043489d 	.word	0x0043489d
  405828:	0043c4bc 	.word	0x0043c4bc
  40582c:	0043562d 	.word	0x0043562d
  405830:	0043c4c8 	.word	0x0043c4c8
  405834:	0043c4cc 	.word	0x0043c4cc
  405838:	0043c4d0 	.word	0x0043c4d0

0040583c <ean_get_config>:

static inline unsigned ean_get_config (ean_decoder_t *ean,
                                       zbar_symbol_type_t sym)
{
  40583c:	b480      	push	{r7}
  40583e:	b083      	sub	sp, #12
  405840:	af00      	add	r7, sp, #0
  405842:	6078      	str	r0, [r7, #4]
  405844:	460b      	mov	r3, r1
  405846:	807b      	strh	r3, [r7, #2]
    switch(sym) {
  405848:	887b      	ldrh	r3, [r7, #2]
  40584a:	3b02      	subs	r3, #2
  40584c:	2b0c      	cmp	r3, #12
  40584e:	d836      	bhi.n	4058be <ean_get_config+0x82>
  405850:	a201      	add	r2, pc, #4	; (adr r2, 405858 <ean_get_config+0x1c>)
  405852:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  405856:	bf00      	nop
  405858:	0040588d 	.word	0x0040588d
  40585c:	004058bf 	.word	0x004058bf
  405860:	004058bf 	.word	0x004058bf
  405864:	00405895 	.word	0x00405895
  405868:	004058bf 	.word	0x004058bf
  40586c:	004058bf 	.word	0x004058bf
  405870:	0040589b 	.word	0x0040589b
  405874:	004058a1 	.word	0x004058a1
  405878:	004058a7 	.word	0x004058a7
  40587c:	004058bf 	.word	0x004058bf
  405880:	004058ad 	.word	0x004058ad
  405884:	004058b3 	.word	0x004058b3
  405888:	004058b9 	.word	0x004058b9
    case ZBAR_EAN2:   return(ean->ean2_config);
  40588c:	687b      	ldr	r3, [r7, #4]
  40588e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
  405892:	e015      	b.n	4058c0 <ean_get_config+0x84>
    case ZBAR_EAN5:   return(ean->ean5_config);
  405894:	687b      	ldr	r3, [r7, #4]
  405896:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
  405898:	e012      	b.n	4058c0 <ean_get_config+0x84>
    case ZBAR_EAN8:   return(ean->ean8_config);
  40589a:	687b      	ldr	r3, [r7, #4]
  40589c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40589e:	e00f      	b.n	4058c0 <ean_get_config+0x84>
    case ZBAR_UPCE:   return(ean->upce_config);
  4058a0:	687b      	ldr	r3, [r7, #4]
  4058a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  4058a4:	e00c      	b.n	4058c0 <ean_get_config+0x84>
    case ZBAR_ISBN10: return(ean->isbn10_config);
  4058a6:	687b      	ldr	r3, [r7, #4]
  4058a8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  4058aa:	e009      	b.n	4058c0 <ean_get_config+0x84>
    case ZBAR_UPCA:   return(ean->upca_config);
  4058ac:	687b      	ldr	r3, [r7, #4]
  4058ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
  4058b0:	e006      	b.n	4058c0 <ean_get_config+0x84>
    case ZBAR_EAN13:  return(ean->ean13_config);
  4058b2:	687b      	ldr	r3, [r7, #4]
  4058b4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  4058b6:	e003      	b.n	4058c0 <ean_get_config+0x84>
    case ZBAR_ISBN13: return(ean->isbn13_config);
  4058b8:	687b      	ldr	r3, [r7, #4]
  4058ba:	6f9b      	ldr	r3, [r3, #120]	; 0x78
  4058bc:	e000      	b.n	4058c0 <ean_get_config+0x84>
    default:          return(0);
  4058be:	2300      	movs	r3, #0
    }
}
  4058c0:	4618      	mov	r0, r3
  4058c2:	370c      	adds	r7, #12
  4058c4:	46bd      	mov	sp, r7
  4058c6:	f85d 7b04 	ldr.w	r7, [sp], #4
  4058ca:	4770      	bx	lr

004058cc <get_color>:
#endif
};

/* return current element color */
static inline char get_color (const zbar_decoder_t *dcode)
{
  4058cc:	b480      	push	{r7}
  4058ce:	b083      	sub	sp, #12
  4058d0:	af00      	add	r7, sp, #0
  4058d2:	6078      	str	r0, [r7, #4]
    return(dcode->idx & 1);
  4058d4:	687b      	ldr	r3, [r7, #4]
  4058d6:	781b      	ldrb	r3, [r3, #0]
  4058d8:	f003 0301 	and.w	r3, r3, #1
  4058dc:	b2db      	uxtb	r3, r3
}
  4058de:	4618      	mov	r0, r3
  4058e0:	370c      	adds	r7, #12
  4058e2:	46bd      	mov	sp, r7
  4058e4:	f85d 7b04 	ldr.w	r7, [sp], #4
  4058e8:	4770      	bx	lr
  4058ea:	bf00      	nop

004058ec <get_width>:

/* retrieve i-th previous element width */
static inline unsigned get_width (const zbar_decoder_t *dcode,
                                  unsigned char offset)
{
  4058ec:	b480      	push	{r7}
  4058ee:	b083      	sub	sp, #12
  4058f0:	af00      	add	r7, sp, #0
  4058f2:	6078      	str	r0, [r7, #4]
  4058f4:	460b      	mov	r3, r1
  4058f6:	70fb      	strb	r3, [r7, #3]
    return(dcode->w[(dcode->idx - offset) & (DECODE_WINDOW - 1)]);
  4058f8:	687b      	ldr	r3, [r7, #4]
  4058fa:	781b      	ldrb	r3, [r3, #0]
  4058fc:	461a      	mov	r2, r3
  4058fe:	78fb      	ldrb	r3, [r7, #3]
  405900:	1ad3      	subs	r3, r2, r3
  405902:	f003 030f 	and.w	r3, r3, #15
  405906:	687a      	ldr	r2, [r7, #4]
  405908:	009b      	lsls	r3, r3, #2
  40590a:	4413      	add	r3, r2
  40590c:	685b      	ldr	r3, [r3, #4]
}
  40590e:	4618      	mov	r0, r3
  405910:	370c      	adds	r7, #12
  405912:	46bd      	mov	sp, r7
  405914:	f85d 7b04 	ldr.w	r7, [sp], #4
  405918:	4770      	bx	lr
  40591a:	bf00      	nop

0040591c <calc_s>:
 *   - size of character is n elements
 */
static inline unsigned calc_s (const zbar_decoder_t *dcode,
                               unsigned char offset,
                               unsigned char n)
{
  40591c:	b580      	push	{r7, lr}
  40591e:	b084      	sub	sp, #16
  405920:	af00      	add	r7, sp, #0
  405922:	6078      	str	r0, [r7, #4]
  405924:	460b      	mov	r3, r1
  405926:	70fb      	strb	r3, [r7, #3]
  405928:	4613      	mov	r3, r2
  40592a:	70bb      	strb	r3, [r7, #2]
    /* FIXME check that this gets unrolled for constant n */
    unsigned s = 0;
  40592c:	2300      	movs	r3, #0
  40592e:	60fb      	str	r3, [r7, #12]
    while(n--)
  405930:	e00a      	b.n	405948 <calc_s+0x2c>
        s += get_width(dcode, offset++);
  405932:	78fb      	ldrb	r3, [r7, #3]
  405934:	1c5a      	adds	r2, r3, #1
  405936:	70fa      	strb	r2, [r7, #3]
  405938:	6878      	ldr	r0, [r7, #4]
  40593a:	4619      	mov	r1, r3
  40593c:	4b07      	ldr	r3, [pc, #28]	; (40595c <calc_s+0x40>)
  40593e:	4798      	blx	r3
  405940:	4602      	mov	r2, r0
  405942:	68fb      	ldr	r3, [r7, #12]
  405944:	4413      	add	r3, r2
  405946:	60fb      	str	r3, [r7, #12]
                               unsigned char offset,
                               unsigned char n)
{
    /* FIXME check that this gets unrolled for constant n */
    unsigned s = 0;
    while(n--)
  405948:	78bb      	ldrb	r3, [r7, #2]
  40594a:	1e5a      	subs	r2, r3, #1
  40594c:	70ba      	strb	r2, [r7, #2]
  40594e:	2b00      	cmp	r3, #0
  405950:	d1ef      	bne.n	405932 <calc_s+0x16>
        s += get_width(dcode, offset++);
    return(s);
  405952:	68fb      	ldr	r3, [r7, #12]
}
  405954:	4618      	mov	r0, r3
  405956:	3710      	adds	r7, #16
  405958:	46bd      	mov	sp, r7
  40595a:	bd80      	pop	{r7, pc}
  40595c:	004058ed 	.word	0x004058ed

00405960 <decode_e>:
 *   - n should be > 3
 */
static inline int decode_e (unsigned e,
                            unsigned s,
                            unsigned n)
{
  405960:	b480      	push	{r7}
  405962:	b087      	sub	sp, #28
  405964:	af00      	add	r7, sp, #0
  405966:	60f8      	str	r0, [r7, #12]
  405968:	60b9      	str	r1, [r7, #8]
  40596a:	607a      	str	r2, [r7, #4]
    /* result is encoded number of units - 2
     * (for use as zero based index)
     * or -1 if invalid
     */
    unsigned char E = ((e * n * 2 + 1) / s - 3) / 2;
  40596c:	68fb      	ldr	r3, [r7, #12]
  40596e:	687a      	ldr	r2, [r7, #4]
  405970:	fb02 f303 	mul.w	r3, r2, r3
  405974:	005b      	lsls	r3, r3, #1
  405976:	1c5a      	adds	r2, r3, #1
  405978:	68bb      	ldr	r3, [r7, #8]
  40597a:	fbb2 f3f3 	udiv	r3, r2, r3
  40597e:	3b03      	subs	r3, #3
  405980:	085b      	lsrs	r3, r3, #1
  405982:	75fb      	strb	r3, [r7, #23]
    return((E >= n - 3) ? -1 : E);
  405984:	7dfa      	ldrb	r2, [r7, #23]
  405986:	687b      	ldr	r3, [r7, #4]
  405988:	3b03      	subs	r3, #3
  40598a:	429a      	cmp	r2, r3
  40598c:	d201      	bcs.n	405992 <decode_e+0x32>
  40598e:	7dfb      	ldrb	r3, [r7, #23]
  405990:	e001      	b.n	405996 <decode_e+0x36>
  405992:	f04f 33ff 	mov.w	r3, #4294967295
}
  405996:	4618      	mov	r0, r3
  405998:	371c      	adds	r7, #28
  40599a:	46bd      	mov	sp, r7
  40599c:	f85d 7b04 	ldr.w	r7, [sp], #4
  4059a0:	4770      	bx	lr
  4059a2:	bf00      	nop

004059a4 <acquire_lock>:
}

/* acquire shared state lock */
static inline char acquire_lock (zbar_decoder_t *dcode,
                                 zbar_symbol_type_t req)
{
  4059a4:	b480      	push	{r7}
  4059a6:	b083      	sub	sp, #12
  4059a8:	af00      	add	r7, sp, #0
  4059aa:	6078      	str	r0, [r7, #4]
  4059ac:	460b      	mov	r3, r1
  4059ae:	807b      	strh	r3, [r7, #2]
    if(dcode->lock) {
  4059b0:	687b      	ldr	r3, [r7, #4]
  4059b2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
  4059b6:	2b00      	cmp	r3, #0
  4059b8:	d002      	beq.n	4059c0 <acquire_lock+0x1c>
        dbprintf(2, " [locked %d]\n", dcode->lock);
  4059ba:	bf00      	nop
        return(1);
  4059bc:	2301      	movs	r3, #1
  4059be:	e004      	b.n	4059ca <acquire_lock+0x26>
    }
    dcode->lock = req;
  4059c0:	687b      	ldr	r3, [r7, #4]
  4059c2:	887a      	ldrh	r2, [r7, #2]
  4059c4:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    return(0);
  4059c8:	2300      	movs	r3, #0
}
  4059ca:	4618      	mov	r0, r3
  4059cc:	370c      	adds	r7, #12
  4059ce:	46bd      	mov	sp, r7
  4059d0:	f85d 7b04 	ldr.w	r7, [sp], #4
  4059d4:	4770      	bx	lr
  4059d6:	bf00      	nop

004059d8 <check_width>:
}
#endif

static inline int check_width (unsigned w0,
                               unsigned w1)
{
  4059d8:	b480      	push	{r7}
  4059da:	b085      	sub	sp, #20
  4059dc:	af00      	add	r7, sp, #0
  4059de:	6078      	str	r0, [r7, #4]
  4059e0:	6039      	str	r1, [r7, #0]
    unsigned dw0 = w0;
  4059e2:	687b      	ldr	r3, [r7, #4]
  4059e4:	60fb      	str	r3, [r7, #12]
    w0 *= 8;
  4059e6:	687b      	ldr	r3, [r7, #4]
  4059e8:	00db      	lsls	r3, r3, #3
  4059ea:	607b      	str	r3, [r7, #4]
    w1 *= 8;
  4059ec:	683b      	ldr	r3, [r7, #0]
  4059ee:	00db      	lsls	r3, r3, #3
  4059f0:	603b      	str	r3, [r7, #0]
    return(w0 - dw0 <= w1 && w1 <= w0 + dw0);
  4059f2:	687a      	ldr	r2, [r7, #4]
  4059f4:	68fb      	ldr	r3, [r7, #12]
  4059f6:	1ad2      	subs	r2, r2, r3
  4059f8:	683b      	ldr	r3, [r7, #0]
  4059fa:	429a      	cmp	r2, r3
  4059fc:	d807      	bhi.n	405a0e <check_width+0x36>
  4059fe:	687a      	ldr	r2, [r7, #4]
  405a00:	68fb      	ldr	r3, [r7, #12]
  405a02:	441a      	add	r2, r3
  405a04:	683b      	ldr	r3, [r7, #0]
  405a06:	429a      	cmp	r2, r3
  405a08:	d301      	bcc.n	405a0e <check_width+0x36>
  405a0a:	2301      	movs	r3, #1
  405a0c:	e000      	b.n	405a10 <check_width+0x38>
  405a0e:	2300      	movs	r3, #0
}
  405a10:	4618      	mov	r0, r3
  405a12:	3714      	adds	r7, #20
  405a14:	46bd      	mov	sp, r7
  405a16:	f85d 7b04 	ldr.w	r7, [sp], #4
  405a1a:	4770      	bx	lr

00405a1c <aux_end>:
/* evaluate previous N (>= 2) widths as auxiliary pattern,
 * using preceding 4 as character width
 */
static inline signed char aux_end (zbar_decoder_t *dcode,
                                   unsigned char fwd)
{
  405a1c:	b590      	push	{r4, r7, lr}
  405a1e:	b087      	sub	sp, #28
  405a20:	af00      	add	r7, sp, #0
  405a22:	6078      	str	r0, [r7, #4]
  405a24:	460b      	mov	r3, r1
  405a26:	70fb      	strb	r3, [r7, #3]
    signed char code, i;

    /* reference width from previous character */
    unsigned s = calc_s(dcode, 4 + fwd, 4);
  405a28:	78fb      	ldrb	r3, [r7, #3]
  405a2a:	3304      	adds	r3, #4
  405a2c:	b2db      	uxtb	r3, r3
  405a2e:	6878      	ldr	r0, [r7, #4]
  405a30:	4619      	mov	r1, r3
  405a32:	2204      	movs	r2, #4
  405a34:	4b2c      	ldr	r3, [pc, #176]	; (405ae8 <aux_end+0xcc>)
  405a36:	4798      	blx	r3
  405a38:	6138      	str	r0, [r7, #16]

    /* check quiet zone */
    unsigned qz = get_width(dcode, 0);
  405a3a:	6878      	ldr	r0, [r7, #4]
  405a3c:	2100      	movs	r1, #0
  405a3e:	4b2b      	ldr	r3, [pc, #172]	; (405aec <aux_end+0xd0>)
  405a40:	4798      	blx	r3
  405a42:	60f8      	str	r0, [r7, #12]
    if(!fwd && qz && qz <= s * 3 / 4) {
  405a44:	78fb      	ldrb	r3, [r7, #3]
  405a46:	2b00      	cmp	r3, #0
  405a48:	d10d      	bne.n	405a66 <aux_end+0x4a>
  405a4a:	68fb      	ldr	r3, [r7, #12]
  405a4c:	2b00      	cmp	r3, #0
  405a4e:	d00a      	beq.n	405a66 <aux_end+0x4a>
  405a50:	693a      	ldr	r2, [r7, #16]
  405a52:	4613      	mov	r3, r2
  405a54:	005b      	lsls	r3, r3, #1
  405a56:	4413      	add	r3, r2
  405a58:	089a      	lsrs	r2, r3, #2
  405a5a:	68fb      	ldr	r3, [r7, #12]
  405a5c:	429a      	cmp	r2, r3
  405a5e:	d302      	bcc.n	405a66 <aux_end+0x4a>
        dbprintf(2, " [invalid quiet]");
  405a60:	bf00      	nop
        return(-1);
  405a62:	23ff      	movs	r3, #255	; 0xff
  405a64:	e03b      	b.n	405ade <aux_end+0xc2>
    }

    dbprintf(2, " (");
  405a66:	bf00      	nop
    code = 0;
  405a68:	2300      	movs	r3, #0
  405a6a:	75fb      	strb	r3, [r7, #23]
    for(i = 1 - fwd; i < 3 + fwd; i++) {
  405a6c:	78fb      	ldrb	r3, [r7, #3]
  405a6e:	f1c3 0301 	rsb	r3, r3, #1
  405a72:	b2db      	uxtb	r3, r3
  405a74:	75bb      	strb	r3, [r7, #22]
  405a76:	e02a      	b.n	405ace <aux_end+0xb2>
        unsigned e = get_width(dcode, i) + get_width(dcode, i + 1);
  405a78:	7dbb      	ldrb	r3, [r7, #22]
  405a7a:	6878      	ldr	r0, [r7, #4]
  405a7c:	4619      	mov	r1, r3
  405a7e:	4b1b      	ldr	r3, [pc, #108]	; (405aec <aux_end+0xd0>)
  405a80:	4798      	blx	r3
  405a82:	4604      	mov	r4, r0
  405a84:	7dbb      	ldrb	r3, [r7, #22]
  405a86:	3301      	adds	r3, #1
  405a88:	b2db      	uxtb	r3, r3
  405a8a:	6878      	ldr	r0, [r7, #4]
  405a8c:	4619      	mov	r1, r3
  405a8e:	4b17      	ldr	r3, [pc, #92]	; (405aec <aux_end+0xd0>)
  405a90:	4798      	blx	r3
  405a92:	4603      	mov	r3, r0
  405a94:	4423      	add	r3, r4
  405a96:	60bb      	str	r3, [r7, #8]
        dbprintf(2, " %d", e);
  405a98:	bf00      	nop
        code = (code << 2) | decode_e(e, s, 7);
  405a9a:	f997 3017 	ldrsb.w	r3, [r7, #23]
  405a9e:	009b      	lsls	r3, r3, #2
  405aa0:	b2dc      	uxtb	r4, r3
  405aa2:	68b8      	ldr	r0, [r7, #8]
  405aa4:	6939      	ldr	r1, [r7, #16]
  405aa6:	2207      	movs	r2, #7
  405aa8:	4b11      	ldr	r3, [pc, #68]	; (405af0 <aux_end+0xd4>)
  405aaa:	4798      	blx	r3
  405aac:	4603      	mov	r3, r0
  405aae:	b2db      	uxtb	r3, r3
  405ab0:	4622      	mov	r2, r4
  405ab2:	4313      	orrs	r3, r2
  405ab4:	75fb      	strb	r3, [r7, #23]
        if(code < 0) {
  405ab6:	f997 3017 	ldrsb.w	r3, [r7, #23]
  405aba:	2b00      	cmp	r3, #0
  405abc:	da02      	bge.n	405ac4 <aux_end+0xa8>
            dbprintf(2, " [invalid end guard]");
  405abe:	bf00      	nop
            return(-1);
  405ac0:	23ff      	movs	r3, #255	; 0xff
  405ac2:	e00c      	b.n	405ade <aux_end+0xc2>
        return(-1);
    }

    dbprintf(2, " (");
    code = 0;
    for(i = 1 - fwd; i < 3 + fwd; i++) {
  405ac4:	7dbb      	ldrb	r3, [r7, #22]
  405ac6:	b2db      	uxtb	r3, r3
  405ac8:	3301      	adds	r3, #1
  405aca:	b2db      	uxtb	r3, r3
  405acc:	75bb      	strb	r3, [r7, #22]
  405ace:	f997 2016 	ldrsb.w	r2, [r7, #22]
  405ad2:	78fb      	ldrb	r3, [r7, #3]
  405ad4:	3303      	adds	r3, #3
  405ad6:	429a      	cmp	r2, r3
  405ad8:	dbce      	blt.n	405a78 <aux_end+0x5c>
        if(code < 0) {
            dbprintf(2, " [invalid end guard]");
            return(-1);
        }
    }
    dbprintf(2, ") s=%d aux=%x", s, code);
  405ada:	bf00      	nop
    return(code);
  405adc:	7dfb      	ldrb	r3, [r7, #23]
  405ade:	b25b      	sxtb	r3, r3
}
  405ae0:	4618      	mov	r0, r3
  405ae2:	371c      	adds	r7, #28
  405ae4:	46bd      	mov	sp, r7
  405ae6:	bd90      	pop	{r4, r7, pc}
  405ae8:	0040591d 	.word	0x0040591d
  405aec:	004058ed 	.word	0x004058ed
  405af0:	00405961 	.word	0x00405961

00405af4 <aux_start>:

/* determine possible auxiliary pattern
 * using current 4 as possible character
 */
static inline signed char aux_start (zbar_decoder_t *dcode)
{
  405af4:	b590      	push	{r4, r7, lr}
  405af6:	b089      	sub	sp, #36	; 0x24
  405af8:	af00      	add	r7, sp, #0
  405afa:	6078      	str	r0, [r7, #4]
    /* FIXME NB add-on has no guard in reverse */
    unsigned e1, e2 = get_width(dcode, 5) + get_width(dcode, 6);
  405afc:	6878      	ldr	r0, [r7, #4]
  405afe:	2105      	movs	r1, #5
  405b00:	4b4b      	ldr	r3, [pc, #300]	; (405c30 <aux_start+0x13c>)
  405b02:	4798      	blx	r3
  405b04:	4604      	mov	r4, r0
  405b06:	6878      	ldr	r0, [r7, #4]
  405b08:	2106      	movs	r1, #6
  405b0a:	4b49      	ldr	r3, [pc, #292]	; (405c30 <aux_start+0x13c>)
  405b0c:	4798      	blx	r3
  405b0e:	4603      	mov	r3, r0
  405b10:	4423      	add	r3, r4
  405b12:	61fb      	str	r3, [r7, #28]
    unsigned char E1;
    if(dcode->ean.s4 < 6)
  405b14:	687b      	ldr	r3, [r7, #4]
  405b16:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405b1a:	2b05      	cmp	r3, #5
  405b1c:	d801      	bhi.n	405b22 <aux_start+0x2e>
        return(-1);
  405b1e:	23ff      	movs	r3, #255	; 0xff
  405b20:	e080      	b.n	405c24 <aux_start+0x130>

    if(decode_e(e2, dcode->ean.s4, 7)) {
  405b22:	687b      	ldr	r3, [r7, #4]
  405b24:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405b28:	69f8      	ldr	r0, [r7, #28]
  405b2a:	4619      	mov	r1, r3
  405b2c:	2207      	movs	r2, #7
  405b2e:	4b41      	ldr	r3, [pc, #260]	; (405c34 <aux_start+0x140>)
  405b30:	4798      	blx	r3
  405b32:	4603      	mov	r3, r0
  405b34:	2b00      	cmp	r3, #0
  405b36:	d002      	beq.n	405b3e <aux_start+0x4a>
        dbprintf(2, " [invalid any]");
  405b38:	bf00      	nop
        return(-1);
  405b3a:	23ff      	movs	r3, #255	; 0xff
  405b3c:	e072      	b.n	405c24 <aux_start+0x130>
    }

    e1 = get_width(dcode, 4) + get_width(dcode, 5);
  405b3e:	6878      	ldr	r0, [r7, #4]
  405b40:	2104      	movs	r1, #4
  405b42:	4b3b      	ldr	r3, [pc, #236]	; (405c30 <aux_start+0x13c>)
  405b44:	4798      	blx	r3
  405b46:	4604      	mov	r4, r0
  405b48:	6878      	ldr	r0, [r7, #4]
  405b4a:	2105      	movs	r1, #5
  405b4c:	4b38      	ldr	r3, [pc, #224]	; (405c30 <aux_start+0x13c>)
  405b4e:	4798      	blx	r3
  405b50:	4603      	mov	r3, r0
  405b52:	4423      	add	r3, r4
  405b54:	61bb      	str	r3, [r7, #24]
    E1 = decode_e(e1, dcode->ean.s4, 7);
  405b56:	687b      	ldr	r3, [r7, #4]
  405b58:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405b5c:	69b8      	ldr	r0, [r7, #24]
  405b5e:	4619      	mov	r1, r3
  405b60:	2207      	movs	r2, #7
  405b62:	4b34      	ldr	r3, [pc, #208]	; (405c34 <aux_start+0x140>)
  405b64:	4798      	blx	r3
  405b66:	4603      	mov	r3, r0
  405b68:	75fb      	strb	r3, [r7, #23]

    if(get_color(dcode) == ZBAR_BAR) {
  405b6a:	6878      	ldr	r0, [r7, #4]
  405b6c:	4b32      	ldr	r3, [pc, #200]	; (405c38 <aux_start+0x144>)
  405b6e:	4798      	blx	r3
  405b70:	4603      	mov	r3, r0
  405b72:	2b01      	cmp	r3, #1
  405b74:	d120      	bne.n	405bb8 <aux_start+0xc4>
        /* check for quiet-zone */
        unsigned qz = get_width(dcode, 7);
  405b76:	6878      	ldr	r0, [r7, #4]
  405b78:	2107      	movs	r1, #7
  405b7a:	4b2d      	ldr	r3, [pc, #180]	; (405c30 <aux_start+0x13c>)
  405b7c:	4798      	blx	r3
  405b7e:	6138      	str	r0, [r7, #16]
        if(!qz || qz > dcode->ean.s4 * 3 / 4) {
  405b80:	693b      	ldr	r3, [r7, #16]
  405b82:	2b00      	cmp	r3, #0
  405b84:	d009      	beq.n	405b9a <aux_start+0xa6>
  405b86:	687b      	ldr	r3, [r7, #4]
  405b88:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
  405b8c:	4613      	mov	r3, r2
  405b8e:	005b      	lsls	r3, r3, #1
  405b90:	4413      	add	r3, r2
  405b92:	089a      	lsrs	r2, r3, #2
  405b94:	693b      	ldr	r3, [r7, #16]
  405b96:	429a      	cmp	r2, r3
  405b98:	d20b      	bcs.n	405bb2 <aux_start+0xbe>
            if(!E1) {
  405b9a:	7dfb      	ldrb	r3, [r7, #23]
  405b9c:	2b00      	cmp	r3, #0
  405b9e:	d102      	bne.n	405ba6 <aux_start+0xb2>
                dbprintf(2, " [valid normal]");
  405ba0:	bf00      	nop
                return(0); /* normal symbol start */
  405ba2:	2300      	movs	r3, #0
  405ba4:	e03e      	b.n	405c24 <aux_start+0x130>
            }
            else if(E1 == 1) {
  405ba6:	7dfb      	ldrb	r3, [r7, #23]
  405ba8:	2b01      	cmp	r3, #1
  405baa:	d102      	bne.n	405bb2 <aux_start+0xbe>
                dbprintf(2, " [valid add-on]");
  405bac:	bf00      	nop
                return(STATE_ADDON); /* add-on symbol start */
  405bae:	2340      	movs	r3, #64	; 0x40
  405bb0:	e038      	b.n	405c24 <aux_start+0x130>
            }
        }
        dbprintf(2, " [invalid start]");
  405bb2:	bf00      	nop
        return(-1);
  405bb4:	23ff      	movs	r3, #255	; 0xff
  405bb6:	e035      	b.n	405c24 <aux_start+0x130>
    }

    if(!E1) {
  405bb8:	7dfb      	ldrb	r3, [r7, #23]
  405bba:	2b00      	cmp	r3, #0
  405bbc:	d130      	bne.n	405c20 <aux_start+0x12c>
        /* attempting decode from SPACE => validate center guard */
        unsigned e3 = get_width(dcode, 6) + get_width(dcode, 7);
  405bbe:	6878      	ldr	r0, [r7, #4]
  405bc0:	2106      	movs	r1, #6
  405bc2:	4b1b      	ldr	r3, [pc, #108]	; (405c30 <aux_start+0x13c>)
  405bc4:	4798      	blx	r3
  405bc6:	4604      	mov	r4, r0
  405bc8:	6878      	ldr	r0, [r7, #4]
  405bca:	2107      	movs	r1, #7
  405bcc:	4b18      	ldr	r3, [pc, #96]	; (405c30 <aux_start+0x13c>)
  405bce:	4798      	blx	r3
  405bd0:	4603      	mov	r3, r0
  405bd2:	4423      	add	r3, r4
  405bd4:	60fb      	str	r3, [r7, #12]
        unsigned e4 = get_width(dcode, 7) + get_width(dcode, 8);
  405bd6:	6878      	ldr	r0, [r7, #4]
  405bd8:	2107      	movs	r1, #7
  405bda:	4b15      	ldr	r3, [pc, #84]	; (405c30 <aux_start+0x13c>)
  405bdc:	4798      	blx	r3
  405bde:	4604      	mov	r4, r0
  405be0:	6878      	ldr	r0, [r7, #4]
  405be2:	2108      	movs	r1, #8
  405be4:	4b12      	ldr	r3, [pc, #72]	; (405c30 <aux_start+0x13c>)
  405be6:	4798      	blx	r3
  405be8:	4603      	mov	r3, r0
  405bea:	4423      	add	r3, r4
  405bec:	60bb      	str	r3, [r7, #8]
        if(!decode_e(e3, dcode->ean.s4, 7) &&
  405bee:	687b      	ldr	r3, [r7, #4]
  405bf0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405bf4:	68f8      	ldr	r0, [r7, #12]
  405bf6:	4619      	mov	r1, r3
  405bf8:	2207      	movs	r2, #7
  405bfa:	4b0e      	ldr	r3, [pc, #56]	; (405c34 <aux_start+0x140>)
  405bfc:	4798      	blx	r3
  405bfe:	4603      	mov	r3, r0
  405c00:	2b00      	cmp	r3, #0
  405c02:	d10d      	bne.n	405c20 <aux_start+0x12c>
           !decode_e(e4, dcode->ean.s4, 7)) {
  405c04:	687b      	ldr	r3, [r7, #4]
  405c06:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405c0a:	68b8      	ldr	r0, [r7, #8]
  405c0c:	4619      	mov	r1, r3
  405c0e:	2207      	movs	r2, #7
  405c10:	4b08      	ldr	r3, [pc, #32]	; (405c34 <aux_start+0x140>)
  405c12:	4798      	blx	r3
  405c14:	4603      	mov	r3, r0

    if(!E1) {
        /* attempting decode from SPACE => validate center guard */
        unsigned e3 = get_width(dcode, 6) + get_width(dcode, 7);
        unsigned e4 = get_width(dcode, 7) + get_width(dcode, 8);
        if(!decode_e(e3, dcode->ean.s4, 7) &&
  405c16:	2b00      	cmp	r3, #0
  405c18:	d102      	bne.n	405c20 <aux_start+0x12c>
           !decode_e(e4, dcode->ean.s4, 7)) {
            dbprintf(2, " [valid center]");
  405c1a:	bf00      	nop
            return(0); /* start after center guard */
  405c1c:	2300      	movs	r3, #0
  405c1e:	e001      	b.n	405c24 <aux_start+0x130>
        }
    }
    dbprintf(2, " [invalid center]");
  405c20:	bf00      	nop
    return(-1);
  405c22:	23ff      	movs	r3, #255	; 0xff
  405c24:	b25b      	sxtb	r3, r3
}
  405c26:	4618      	mov	r0, r3
  405c28:	3724      	adds	r7, #36	; 0x24
  405c2a:	46bd      	mov	sp, r7
  405c2c:	bd90      	pop	{r4, r7, pc}
  405c2e:	bf00      	nop
  405c30:	004058ed 	.word	0x004058ed
  405c34:	00405961 	.word	0x00405961
  405c38:	004058cd 	.word	0x004058cd

00405c3c <aux_mid>:

/* check addon delimiter using current 4 as character
 */
static inline signed char aux_mid (zbar_decoder_t *dcode)
{
  405c3c:	b590      	push	{r4, r7, lr}
  405c3e:	b085      	sub	sp, #20
  405c40:	af00      	add	r7, sp, #0
  405c42:	6078      	str	r0, [r7, #4]
    unsigned e = get_width(dcode, 4) + get_width(dcode, 5);
  405c44:	6878      	ldr	r0, [r7, #4]
  405c46:	2104      	movs	r1, #4
  405c48:	4b0c      	ldr	r3, [pc, #48]	; (405c7c <aux_mid+0x40>)
  405c4a:	4798      	blx	r3
  405c4c:	4604      	mov	r4, r0
  405c4e:	6878      	ldr	r0, [r7, #4]
  405c50:	2105      	movs	r1, #5
  405c52:	4b0a      	ldr	r3, [pc, #40]	; (405c7c <aux_mid+0x40>)
  405c54:	4798      	blx	r3
  405c56:	4603      	mov	r3, r0
  405c58:	4423      	add	r3, r4
  405c5a:	60fb      	str	r3, [r7, #12]
    return(decode_e(e, dcode->ean.s4, 7));
  405c5c:	687b      	ldr	r3, [r7, #4]
  405c5e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405c62:	68f8      	ldr	r0, [r7, #12]
  405c64:	4619      	mov	r1, r3
  405c66:	2207      	movs	r2, #7
  405c68:	4b05      	ldr	r3, [pc, #20]	; (405c80 <aux_mid+0x44>)
  405c6a:	4798      	blx	r3
  405c6c:	4603      	mov	r3, r0
  405c6e:	b2db      	uxtb	r3, r3
  405c70:	b25b      	sxtb	r3, r3
}
  405c72:	4618      	mov	r0, r3
  405c74:	3714      	adds	r7, #20
  405c76:	46bd      	mov	sp, r7
  405c78:	bd90      	pop	{r4, r7, pc}
  405c7a:	bf00      	nop
  405c7c:	004058ed 	.word	0x004058ed
  405c80:	00405961 	.word	0x00405961

00405c84 <decode4>:

/* attempt to decode previous 4 widths (2 bars and 2 spaces) as a character */
static inline signed char decode4 (zbar_decoder_t *dcode)
{
  405c84:	b5f0      	push	{r4, r5, r6, r7, lr}
  405c86:	b091      	sub	sp, #68	; 0x44
  405c88:	af08      	add	r7, sp, #32
  405c8a:	6078      	str	r0, [r7, #4]
    signed char code;

    /* calculate similar edge measurements */
    unsigned e1 = ((get_color(dcode) == ZBAR_BAR)
  405c8c:	6878      	ldr	r0, [r7, #4]
  405c8e:	4b69      	ldr	r3, [pc, #420]	; (405e34 <decode4+0x1b0>)
  405c90:	4798      	blx	r3
  405c92:	4603      	mov	r3, r0
                   ? get_width(dcode, 0) + get_width(dcode, 1)
                   : get_width(dcode, 2) + get_width(dcode, 3));
  405c94:	2b01      	cmp	r3, #1
  405c96:	d10b      	bne.n	405cb0 <decode4+0x2c>
{
    signed char code;

    /* calculate similar edge measurements */
    unsigned e1 = ((get_color(dcode) == ZBAR_BAR)
                   ? get_width(dcode, 0) + get_width(dcode, 1)
  405c98:	6878      	ldr	r0, [r7, #4]
  405c9a:	2100      	movs	r1, #0
  405c9c:	4b66      	ldr	r3, [pc, #408]	; (405e38 <decode4+0x1b4>)
  405c9e:	4798      	blx	r3
  405ca0:	4604      	mov	r4, r0
  405ca2:	6878      	ldr	r0, [r7, #4]
  405ca4:	2101      	movs	r1, #1
  405ca6:	4b64      	ldr	r3, [pc, #400]	; (405e38 <decode4+0x1b4>)
  405ca8:	4798      	blx	r3
  405caa:	4603      	mov	r3, r0
                   : get_width(dcode, 2) + get_width(dcode, 3));
  405cac:	4423      	add	r3, r4
  405cae:	e00a      	b.n	405cc6 <decode4+0x42>
  405cb0:	6878      	ldr	r0, [r7, #4]
  405cb2:	2102      	movs	r1, #2
  405cb4:	4b60      	ldr	r3, [pc, #384]	; (405e38 <decode4+0x1b4>)
  405cb6:	4798      	blx	r3
  405cb8:	4604      	mov	r4, r0
  405cba:	6878      	ldr	r0, [r7, #4]
  405cbc:	2103      	movs	r1, #3
  405cbe:	4b5e      	ldr	r3, [pc, #376]	; (405e38 <decode4+0x1b4>)
  405cc0:	4798      	blx	r3
  405cc2:	4603      	mov	r3, r0
  405cc4:	4423      	add	r3, r4
static inline signed char decode4 (zbar_decoder_t *dcode)
{
    signed char code;

    /* calculate similar edge measurements */
    unsigned e1 = ((get_color(dcode) == ZBAR_BAR)
  405cc6:	61bb      	str	r3, [r7, #24]
                   ? get_width(dcode, 0) + get_width(dcode, 1)
                   : get_width(dcode, 2) + get_width(dcode, 3));
    unsigned e2 = get_width(dcode, 1) + get_width(dcode, 2);
  405cc8:	6878      	ldr	r0, [r7, #4]
  405cca:	2101      	movs	r1, #1
  405ccc:	4b5a      	ldr	r3, [pc, #360]	; (405e38 <decode4+0x1b4>)
  405cce:	4798      	blx	r3
  405cd0:	4604      	mov	r4, r0
  405cd2:	6878      	ldr	r0, [r7, #4]
  405cd4:	2102      	movs	r1, #2
  405cd6:	4b58      	ldr	r3, [pc, #352]	; (405e38 <decode4+0x1b4>)
  405cd8:	4798      	blx	r3
  405cda:	4603      	mov	r3, r0
  405cdc:	4423      	add	r3, r4
  405cde:	617b      	str	r3, [r7, #20]
    dbprintf(2, "\n        e1=%d e2=%d", e1, e2);
  405ce0:	bf00      	nop

    if(dcode->ean.s4 < 6)
  405ce2:	687b      	ldr	r3, [r7, #4]
  405ce4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405ce8:	2b05      	cmp	r3, #5
  405cea:	d801      	bhi.n	405cf0 <decode4+0x6c>
        return(-1);
  405cec:	23ff      	movs	r3, #255	; 0xff
  405cee:	e09c      	b.n	405e2a <decode4+0x1a6>

    /* create compacted encoding for direct lookup */
    code = ((decode_e(e1, dcode->ean.s4, 7) << 2) |
  405cf0:	687b      	ldr	r3, [r7, #4]
  405cf2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405cf6:	69b8      	ldr	r0, [r7, #24]
  405cf8:	4619      	mov	r1, r3
  405cfa:	2207      	movs	r2, #7
  405cfc:	4b4f      	ldr	r3, [pc, #316]	; (405e3c <decode4+0x1b8>)
  405cfe:	4798      	blx	r3
  405d00:	4603      	mov	r3, r0
  405d02:	009b      	lsls	r3, r3, #2
  405d04:	b2dc      	uxtb	r4, r3
             decode_e(e2, dcode->ean.s4, 7));
  405d06:	687b      	ldr	r3, [r7, #4]
  405d08:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  405d0c:	6978      	ldr	r0, [r7, #20]
  405d0e:	4619      	mov	r1, r3
  405d10:	2207      	movs	r2, #7
  405d12:	4b4a      	ldr	r3, [pc, #296]	; (405e3c <decode4+0x1b8>)
  405d14:	4798      	blx	r3
  405d16:	4603      	mov	r3, r0

    if(dcode->ean.s4 < 6)
        return(-1);

    /* create compacted encoding for direct lookup */
    code = ((decode_e(e1, dcode->ean.s4, 7) << 2) |
  405d18:	b2db      	uxtb	r3, r3
  405d1a:	4622      	mov	r2, r4
  405d1c:	4313      	orrs	r3, r2
  405d1e:	77fb      	strb	r3, [r7, #31]
             decode_e(e2, dcode->ean.s4, 7));
    if(code < 0)
  405d20:	f997 301f 	ldrsb.w	r3, [r7, #31]
  405d24:	2b00      	cmp	r3, #0
  405d26:	da01      	bge.n	405d2c <decode4+0xa8>
        return(-1);
  405d28:	23ff      	movs	r3, #255	; 0xff
  405d2a:	e07e      	b.n	405e2a <decode4+0x1a6>
    dbprintf(2, " code=%x", code);
  405d2c:	bf00      	nop
       E1E2 == 34 (0110)
       E1E2 == 43 (1001)
       E1E2 == 33 (0101)
       E1E2 == 44 (1010)
     */
    if((1 << code) & 0x0660) {
  405d2e:	f997 301f 	ldrsb.w	r3, [r7, #31]
  405d32:	f44f 62cc 	mov.w	r2, #1632	; 0x660
  405d36:	fa42 f303 	asr.w	r3, r2, r3
  405d3a:	f003 0301 	and.w	r3, r3, #1
  405d3e:	2b00      	cmp	r3, #0
  405d40:	d04c      	beq.n	405ddc <decode4+0x158>
        unsigned char mid, alt;
        /* use sum of bar widths */
        unsigned d2 = ((get_color(dcode) == ZBAR_BAR)
  405d42:	6878      	ldr	r0, [r7, #4]
  405d44:	4b3b      	ldr	r3, [pc, #236]	; (405e34 <decode4+0x1b0>)
  405d46:	4798      	blx	r3
  405d48:	4603      	mov	r3, r0
                       ? get_width(dcode, 0) + get_width(dcode, 2)
                       : get_width(dcode, 1) + get_width(dcode, 3));
  405d4a:	2b01      	cmp	r3, #1
  405d4c:	d10b      	bne.n	405d66 <decode4+0xe2>
     */
    if((1 << code) & 0x0660) {
        unsigned char mid, alt;
        /* use sum of bar widths */
        unsigned d2 = ((get_color(dcode) == ZBAR_BAR)
                       ? get_width(dcode, 0) + get_width(dcode, 2)
  405d4e:	6878      	ldr	r0, [r7, #4]
  405d50:	2100      	movs	r1, #0
  405d52:	4b39      	ldr	r3, [pc, #228]	; (405e38 <decode4+0x1b4>)
  405d54:	4798      	blx	r3
  405d56:	4604      	mov	r4, r0
  405d58:	6878      	ldr	r0, [r7, #4]
  405d5a:	2102      	movs	r1, #2
  405d5c:	4b36      	ldr	r3, [pc, #216]	; (405e38 <decode4+0x1b4>)
  405d5e:	4798      	blx	r3
  405d60:	4603      	mov	r3, r0
                       : get_width(dcode, 1) + get_width(dcode, 3));
  405d62:	4423      	add	r3, r4
  405d64:	e00a      	b.n	405d7c <decode4+0xf8>
  405d66:	6878      	ldr	r0, [r7, #4]
  405d68:	2101      	movs	r1, #1
  405d6a:	4b33      	ldr	r3, [pc, #204]	; (405e38 <decode4+0x1b4>)
  405d6c:	4798      	blx	r3
  405d6e:	4604      	mov	r4, r0
  405d70:	6878      	ldr	r0, [r7, #4]
  405d72:	2103      	movs	r1, #3
  405d74:	4b30      	ldr	r3, [pc, #192]	; (405e38 <decode4+0x1b4>)
  405d76:	4798      	blx	r3
  405d78:	4603      	mov	r3, r0
  405d7a:	4423      	add	r3, r4
       E1E2 == 44 (1010)
     */
    if((1 << code) & 0x0660) {
        unsigned char mid, alt;
        /* use sum of bar widths */
        unsigned d2 = ((get_color(dcode) == ZBAR_BAR)
  405d7c:	613b      	str	r3, [r7, #16]
                       ? get_width(dcode, 0) + get_width(dcode, 2)
                       : get_width(dcode, 1) + get_width(dcode, 3));
        d2 *= 7;
  405d7e:	693a      	ldr	r2, [r7, #16]
  405d80:	4613      	mov	r3, r2
  405d82:	00db      	lsls	r3, r3, #3
  405d84:	1a9b      	subs	r3, r3, r2
  405d86:	613b      	str	r3, [r7, #16]
        mid = (((1 << code) & 0x0420)
                             ? 3     /* E1E2 in 33,44 */
  405d88:	f997 301f 	ldrsb.w	r3, [r7, #31]
  405d8c:	f44f 6284 	mov.w	r2, #1056	; 0x420
  405d90:	fa42 f303 	asr.w	r3, r2, r3
  405d94:	f003 0301 	and.w	r3, r3, #1
        /* use sum of bar widths */
        unsigned d2 = ((get_color(dcode) == ZBAR_BAR)
                       ? get_width(dcode, 0) + get_width(dcode, 2)
                       : get_width(dcode, 1) + get_width(dcode, 3));
        d2 *= 7;
        mid = (((1 << code) & 0x0420)
  405d98:	2b00      	cmp	r3, #0
  405d9a:	d001      	beq.n	405da0 <decode4+0x11c>
  405d9c:	2303      	movs	r3, #3
  405d9e:	e000      	b.n	405da2 <decode4+0x11e>
  405da0:	2304      	movs	r3, #4
  405da2:	73fb      	strb	r3, [r7, #15]
                             ? 3     /* E1E2 in 33,44 */
                             : 4);   /* E1E2 in 34,43 */
        alt = d2 > (mid * dcode->ean.s4);
  405da4:	7bfb      	ldrb	r3, [r7, #15]
  405da6:	687a      	ldr	r2, [r7, #4]
  405da8:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
  405dac:	fb02 f203 	mul.w	r2, r2, r3
  405db0:	693b      	ldr	r3, [r7, #16]
  405db2:	429a      	cmp	r2, r3
  405db4:	bf34      	ite	cc
  405db6:	2301      	movcc	r3, #1
  405db8:	2300      	movcs	r3, #0
  405dba:	b2db      	uxtb	r3, r3
  405dbc:	73bb      	strb	r3, [r7, #14]
        if(alt)
  405dbe:	7bbb      	ldrb	r3, [r7, #14]
  405dc0:	2b00      	cmp	r3, #0
  405dc2:	d00a      	beq.n	405dda <decode4+0x156>
            code = ((code >> 1) & 3) | 0x10; /* compress code space */
  405dc4:	f997 301f 	ldrsb.w	r3, [r7, #31]
  405dc8:	105b      	asrs	r3, r3, #1
  405dca:	b2db      	uxtb	r3, r3
  405dcc:	f003 0303 	and.w	r3, r3, #3
  405dd0:	b2db      	uxtb	r3, r3
  405dd2:	f043 0310 	orr.w	r3, r3, #16
  405dd6:	77fb      	strb	r3, [r7, #31]
        dbprintf(2, " (d2=%d(%d) alt=%d)", d2, mid * dcode->ean.s4, alt);
  405dd8:	e7ff      	b.n	405dda <decode4+0x156>
  405dda:	bf00      	nop
    }
    dbprintf(2, " char=%02x", digits[(unsigned char)code]);
  405ddc:	bf00      	nop
    zassert(code < 0x14, -1, "code=%02x e1=%x e2=%x s4=%x color=%x\n",
  405dde:	f997 301f 	ldrsb.w	r3, [r7, #31]
  405de2:	2b13      	cmp	r3, #19
  405de4:	dd20      	ble.n	405e28 <decode4+0x1a4>
  405de6:	4b16      	ldr	r3, [pc, #88]	; (405e40 <decode4+0x1bc>)
  405de8:	681b      	ldr	r3, [r3, #0]
  405dea:	68de      	ldr	r6, [r3, #12]
  405dec:	f997 501f 	ldrsb.w	r5, [r7, #31]
  405df0:	687b      	ldr	r3, [r7, #4]
  405df2:	f8d3 40b0 	ldr.w	r4, [r3, #176]	; 0xb0
  405df6:	6878      	ldr	r0, [r7, #4]
  405df8:	4b0e      	ldr	r3, [pc, #56]	; (405e34 <decode4+0x1b0>)
  405dfa:	4798      	blx	r3
  405dfc:	4603      	mov	r3, r0
  405dfe:	461a      	mov	r2, r3
  405e00:	4b10      	ldr	r3, [pc, #64]	; (405e44 <decode4+0x1c0>)
  405e02:	9300      	str	r3, [sp, #0]
  405e04:	4b10      	ldr	r3, [pc, #64]	; (405e48 <decode4+0x1c4>)
  405e06:	9301      	str	r3, [sp, #4]
  405e08:	9502      	str	r5, [sp, #8]
  405e0a:	69bb      	ldr	r3, [r7, #24]
  405e0c:	9303      	str	r3, [sp, #12]
  405e0e:	697b      	ldr	r3, [r7, #20]
  405e10:	9304      	str	r3, [sp, #16]
  405e12:	9405      	str	r4, [sp, #20]
  405e14:	9206      	str	r2, [sp, #24]
  405e16:	4630      	mov	r0, r6
  405e18:	490c      	ldr	r1, [pc, #48]	; (405e4c <decode4+0x1c8>)
  405e1a:	4a0d      	ldr	r2, [pc, #52]	; (405e50 <decode4+0x1cc>)
  405e1c:	f240 1301 	movw	r3, #257	; 0x101
  405e20:	4c0c      	ldr	r4, [pc, #48]	; (405e54 <decode4+0x1d0>)
  405e22:	47a0      	blx	r4
  405e24:	23ff      	movs	r3, #255	; 0xff
  405e26:	e000      	b.n	405e2a <decode4+0x1a6>
            code, e1, e2, dcode->ean.s4, get_color(dcode));
    return(code);
  405e28:	7ffb      	ldrb	r3, [r7, #31]
  405e2a:	b25b      	sxtb	r3, r3
}
  405e2c:	4618      	mov	r0, r3
  405e2e:	3724      	adds	r7, #36	; 0x24
  405e30:	46bd      	mov	sp, r7
  405e32:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405e34:	004058cd 	.word	0x004058cd
  405e38:	004058ed 	.word	0x004058ed
  405e3c:	00405961 	.word	0x00405961
  405e40:	200012d0 	.word	0x200012d0
  405e44:	0043c6e0 	.word	0x0043c6e0
  405e48:	0043c5b8 	.word	0x0043c5b8
  405e4c:	0043c540 	.word	0x0043c540
  405e50:	0043c594 	.word	0x0043c594
  405e54:	0043413d 	.word	0x0043413d

00405e58 <ean_part_end2>:

static inline char ean_part_end2 (ean_decoder_t *ean,
                                  ean_pass_t *pass)
{
  405e58:	b480      	push	{r7}
  405e5a:	b085      	sub	sp, #20
  405e5c:	af00      	add	r7, sp, #0
  405e5e:	6078      	str	r0, [r7, #4]
  405e60:	6039      	str	r1, [r7, #0]
    if(!TEST_CFG(ean->ean2_config, ZBAR_CFG_ENABLE))
  405e62:	687b      	ldr	r3, [r7, #4]
  405e64:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
  405e68:	f003 0301 	and.w	r3, r3, #1
  405e6c:	2b00      	cmp	r3, #0
  405e6e:	d101      	bne.n	405e74 <ean_part_end2+0x1c>
        return(ZBAR_NONE);
  405e70:	2300      	movs	r3, #0
  405e72:	e02e      	b.n	405ed2 <ean_part_end2+0x7a>

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) >> 3 |
  405e74:	683b      	ldr	r3, [r7, #0]
  405e76:	7a5b      	ldrb	r3, [r3, #9]
  405e78:	f003 0310 	and.w	r3, r3, #16
  405e7c:	10db      	asrs	r3, r3, #3
  405e7e:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 4);
  405e80:	683b      	ldr	r3, [r7, #0]
  405e82:	7a9b      	ldrb	r3, [r3, #10]
  405e84:	f003 0310 	and.w	r3, r3, #16
  405e88:	111b      	asrs	r3, r3, #4
{
    if(!TEST_CFG(ean->ean2_config, ZBAR_CFG_ENABLE))
        return(ZBAR_NONE);

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) >> 3 |
  405e8a:	b2db      	uxtb	r3, r3
  405e8c:	4313      	orrs	r3, r2
  405e8e:	b2db      	uxtb	r3, r3
  405e90:	73fb      	strb	r3, [r7, #15]
                         (pass->raw[2] & 0x10) >> 4);
    /* calculate "checksum" */
    unsigned char chk = ~((pass->raw[1] & 0xf) * 10 +
  405e92:	683b      	ldr	r3, [r7, #0]
  405e94:	7a5b      	ldrb	r3, [r3, #9]
  405e96:	f003 030f 	and.w	r3, r3, #15
  405e9a:	b2db      	uxtb	r3, r3
  405e9c:	461a      	mov	r2, r3
  405e9e:	0092      	lsls	r2, r2, #2
  405ea0:	4413      	add	r3, r2
  405ea2:	005b      	lsls	r3, r3, #1
  405ea4:	b2da      	uxtb	r2, r3
                          (pass->raw[2] & 0xf)) & 0x3;
  405ea6:	683b      	ldr	r3, [r7, #0]
  405ea8:	7a9b      	ldrb	r3, [r3, #10]

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) >> 3 |
                         (pass->raw[2] & 0x10) >> 4);
    /* calculate "checksum" */
    unsigned char chk = ~((pass->raw[1] & 0xf) * 10 +
  405eaa:	f003 030f 	and.w	r3, r3, #15
  405eae:	b2db      	uxtb	r3, r3
  405eb0:	4413      	add	r3, r2
  405eb2:	b2db      	uxtb	r3, r3
  405eb4:	43db      	mvns	r3, r3
  405eb6:	b2db      	uxtb	r3, r3
  405eb8:	f003 0303 	and.w	r3, r3, #3
  405ebc:	73bb      	strb	r3, [r7, #14]
                          (pass->raw[2] & 0xf)) & 0x3;
    dbprintf(2, " par=%x chk=%x", par, chk);
  405ebe:	bf00      	nop
    if(par != chk)
  405ec0:	7bfa      	ldrb	r2, [r7, #15]
  405ec2:	7bbb      	ldrb	r3, [r7, #14]
  405ec4:	429a      	cmp	r2, r3
  405ec6:	d001      	beq.n	405ecc <ean_part_end2+0x74>
        return(ZBAR_NONE);
  405ec8:	2300      	movs	r3, #0
  405eca:	e002      	b.n	405ed2 <ean_part_end2+0x7a>

    dbprintf(2, "\n");
  405ecc:	bf00      	nop
    dbprintf(1, "decode2=%x%x\n",
  405ece:	bf00      	nop
             pass->raw[1] & 0xf, pass->raw[2] & 0xf);
    return(ZBAR_EAN2);
  405ed0:	2302      	movs	r3, #2
}
  405ed2:	4618      	mov	r0, r3
  405ed4:	3714      	adds	r7, #20
  405ed6:	46bd      	mov	sp, r7
  405ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
  405edc:	4770      	bx	lr
  405ede:	bf00      	nop

00405ee0 <ean_part_end4>:

static inline zbar_symbol_type_t ean_part_end4 (ean_pass_t *pass,
                                                unsigned char fwd)
{
  405ee0:	b480      	push	{r7}
  405ee2:	b085      	sub	sp, #20
  405ee4:	af00      	add	r7, sp, #0
  405ee6:	6078      	str	r0, [r7, #4]
  405ee8:	460b      	mov	r3, r1
  405eea:	70fb      	strb	r3, [r7, #3]
    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) >> 1 |
  405eec:	687b      	ldr	r3, [r7, #4]
  405eee:	7a5b      	ldrb	r3, [r3, #9]
  405ef0:	f003 0310 	and.w	r3, r3, #16
  405ef4:	105b      	asrs	r3, r3, #1
  405ef6:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 2 |
  405ef8:	687b      	ldr	r3, [r7, #4]
  405efa:	7a9b      	ldrb	r3, [r3, #10]
  405efc:	f003 0310 	and.w	r3, r3, #16
  405f00:	109b      	asrs	r3, r3, #2

static inline zbar_symbol_type_t ean_part_end4 (ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) >> 1 |
  405f02:	b2db      	uxtb	r3, r3
  405f04:	4313      	orrs	r3, r2
  405f06:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 2 |
                         (pass->raw[3] & 0x10) >> 3 |
  405f08:	687b      	ldr	r3, [r7, #4]
  405f0a:	7adb      	ldrb	r3, [r3, #11]
  405f0c:	f003 0310 	and.w	r3, r3, #16
  405f10:	10db      	asrs	r3, r3, #3

static inline zbar_symbol_type_t ean_part_end4 (ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) >> 1 |
  405f12:	b2db      	uxtb	r3, r3
  405f14:	4313      	orrs	r3, r2
  405f16:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 2 |
                         (pass->raw[3] & 0x10) >> 3 |
                         (pass->raw[4] & 0x10) >> 4);
  405f18:	687b      	ldr	r3, [r7, #4]
  405f1a:	7b1b      	ldrb	r3, [r3, #12]
  405f1c:	f003 0310 	and.w	r3, r3, #16
  405f20:	111b      	asrs	r3, r3, #4

static inline zbar_symbol_type_t ean_part_end4 (ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) >> 1 |
  405f22:	b2db      	uxtb	r3, r3
  405f24:	4313      	orrs	r3, r2
  405f26:	b2db      	uxtb	r3, r3
  405f28:	73fb      	strb	r3, [r7, #15]
                         (pass->raw[2] & 0x10) >> 2 |
                         (pass->raw[3] & 0x10) >> 3 |
                         (pass->raw[4] & 0x10) >> 4);

    dbprintf(2, " par=%x", par);
  405f2a:	bf00      	nop
    if(par && par != 0xf)
  405f2c:	7bfb      	ldrb	r3, [r7, #15]
  405f2e:	2b00      	cmp	r3, #0
  405f30:	d004      	beq.n	405f3c <ean_part_end4+0x5c>
  405f32:	7bfb      	ldrb	r3, [r7, #15]
  405f34:	2b0f      	cmp	r3, #15
  405f36:	d001      	beq.n	405f3c <ean_part_end4+0x5c>
        /* invalid parity combination */
        return(ZBAR_NONE);
  405f38:	2300      	movs	r3, #0
  405f3a:	e02d      	b.n	405f98 <ean_part_end4+0xb8>

    if(!par == fwd) {
  405f3c:	7bfb      	ldrb	r3, [r7, #15]
  405f3e:	2b00      	cmp	r3, #0
  405f40:	bf0c      	ite	eq
  405f42:	2301      	moveq	r3, #1
  405f44:	2300      	movne	r3, #0
  405f46:	b2db      	uxtb	r3, r3
  405f48:	461a      	mov	r2, r3
  405f4a:	78fb      	ldrb	r3, [r7, #3]
  405f4c:	429a      	cmp	r2, r3
  405f4e:	d11a      	bne.n	405f86 <ean_part_end4+0xa6>
        /* reverse sampled digits */
        unsigned char tmp = pass->raw[1];
  405f50:	687b      	ldr	r3, [r7, #4]
  405f52:	7a5b      	ldrb	r3, [r3, #9]
  405f54:	73bb      	strb	r3, [r7, #14]
        pass->state |= STATE_REV;
  405f56:	687b      	ldr	r3, [r7, #4]
  405f58:	781b      	ldrb	r3, [r3, #0]
  405f5a:	f063 037f 	orn	r3, r3, #127	; 0x7f
  405f5e:	b2da      	uxtb	r2, r3
  405f60:	687b      	ldr	r3, [r7, #4]
  405f62:	701a      	strb	r2, [r3, #0]
        pass->raw[1] = pass->raw[4];
  405f64:	687b      	ldr	r3, [r7, #4]
  405f66:	7b1a      	ldrb	r2, [r3, #12]
  405f68:	687b      	ldr	r3, [r7, #4]
  405f6a:	725a      	strb	r2, [r3, #9]
        pass->raw[4] = tmp;
  405f6c:	687b      	ldr	r3, [r7, #4]
  405f6e:	7bba      	ldrb	r2, [r7, #14]
  405f70:	731a      	strb	r2, [r3, #12]
        tmp = pass->raw[2];
  405f72:	687b      	ldr	r3, [r7, #4]
  405f74:	7a9b      	ldrb	r3, [r3, #10]
  405f76:	73bb      	strb	r3, [r7, #14]
        pass->raw[2] = pass->raw[3];
  405f78:	687b      	ldr	r3, [r7, #4]
  405f7a:	7ada      	ldrb	r2, [r3, #11]
  405f7c:	687b      	ldr	r3, [r7, #4]
  405f7e:	729a      	strb	r2, [r3, #10]
        pass->raw[3] = tmp;
  405f80:	687b      	ldr	r3, [r7, #4]
  405f82:	7bba      	ldrb	r2, [r7, #14]
  405f84:	72da      	strb	r2, [r3, #11]
    }

    dbprintf(2, "\n");
  405f86:	bf00      	nop
    dbprintf(1, "decode4=%x%x%x%x\n",
  405f88:	bf00      	nop
             pass->raw[1] & 0xf, pass->raw[2] & 0xf,
             pass->raw[3] & 0xf, pass->raw[4] & 0xf);
    if(!par)
  405f8a:	7bfb      	ldrb	r3, [r7, #15]
  405f8c:	2b00      	cmp	r3, #0
  405f8e:	d102      	bne.n	405f96 <ean_part_end4+0xb6>
        return(ZBAR_EAN8 | EAN_RIGHT);
  405f90:	f241 0308 	movw	r3, #4104	; 0x1008
  405f94:	e000      	b.n	405f98 <ean_part_end4+0xb8>
    return(ZBAR_EAN8 | EAN_LEFT);
  405f96:	2308      	movs	r3, #8
}
  405f98:	4618      	mov	r0, r3
  405f9a:	3714      	adds	r7, #20
  405f9c:	46bd      	mov	sp, r7
  405f9e:	f85d 7b04 	ldr.w	r7, [sp], #4
  405fa2:	4770      	bx	lr

00405fa4 <ean_part_end5>:

static inline char ean_part_end5 (ean_decoder_t *ean,
                                  ean_pass_t *pass)
{
  405fa4:	b480      	push	{r7}
  405fa6:	b085      	sub	sp, #20
  405fa8:	af00      	add	r7, sp, #0
  405faa:	6078      	str	r0, [r7, #4]
  405fac:	6039      	str	r1, [r7, #0]
    if(!TEST_CFG(ean->ean5_config, ZBAR_CFG_ENABLE))
  405fae:	687b      	ldr	r3, [r7, #4]
  405fb0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
  405fb2:	f003 0301 	and.w	r3, r3, #1
  405fb6:	2b00      	cmp	r3, #0
  405fb8:	d101      	bne.n	405fbe <ean_part_end5+0x1a>
        return(ZBAR_NONE);
  405fba:	2300      	movs	r3, #0
  405fbc:	e071      	b.n	4060a2 <ean_part_end5+0xfe>

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) |
  405fbe:	683b      	ldr	r3, [r7, #0]
  405fc0:	7a5b      	ldrb	r3, [r3, #9]
  405fc2:	b2db      	uxtb	r3, r3
  405fc4:	f003 0310 	and.w	r3, r3, #16
  405fc8:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 1 |
  405fca:	683b      	ldr	r3, [r7, #0]
  405fcc:	7a9b      	ldrb	r3, [r3, #10]
  405fce:	f003 0310 	and.w	r3, r3, #16
  405fd2:	105b      	asrs	r3, r3, #1
{
    if(!TEST_CFG(ean->ean5_config, ZBAR_CFG_ENABLE))
        return(ZBAR_NONE);

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) |
  405fd4:	b2db      	uxtb	r3, r3
  405fd6:	4313      	orrs	r3, r2
  405fd8:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 1 |
                         (pass->raw[3] & 0x10) >> 2 |
  405fda:	683b      	ldr	r3, [r7, #0]
  405fdc:	7adb      	ldrb	r3, [r3, #11]
  405fde:	f003 0310 	and.w	r3, r3, #16
  405fe2:	109b      	asrs	r3, r3, #2
{
    if(!TEST_CFG(ean->ean5_config, ZBAR_CFG_ENABLE))
        return(ZBAR_NONE);

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) |
  405fe4:	b2db      	uxtb	r3, r3
  405fe6:	4313      	orrs	r3, r2
  405fe8:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 1 |
                         (pass->raw[3] & 0x10) >> 2 |
                         (pass->raw[4] & 0x10) >> 3 |
  405fea:	683b      	ldr	r3, [r7, #0]
  405fec:	7b1b      	ldrb	r3, [r3, #12]
  405fee:	f003 0310 	and.w	r3, r3, #16
  405ff2:	10db      	asrs	r3, r3, #3
{
    if(!TEST_CFG(ean->ean5_config, ZBAR_CFG_ENABLE))
        return(ZBAR_NONE);

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) |
  405ff4:	b2db      	uxtb	r3, r3
  405ff6:	4313      	orrs	r3, r2
  405ff8:	b2da      	uxtb	r2, r3
                         (pass->raw[2] & 0x10) >> 1 |
                         (pass->raw[3] & 0x10) >> 2 |
                         (pass->raw[4] & 0x10) >> 3 |
                         (pass->raw[5] & 0x10) >> 4);
  405ffa:	683b      	ldr	r3, [r7, #0]
  405ffc:	7b5b      	ldrb	r3, [r3, #13]
  405ffe:	f003 0310 	and.w	r3, r3, #16
  406002:	111b      	asrs	r3, r3, #4
{
    if(!TEST_CFG(ean->ean5_config, ZBAR_CFG_ENABLE))
        return(ZBAR_NONE);

    /* extract parity bits */
    unsigned char par = ((pass->raw[1] & 0x10) |
  406004:	b2db      	uxtb	r3, r3
  406006:	4313      	orrs	r3, r2
  406008:	b2db      	uxtb	r3, r3
  40600a:	73bb      	strb	r3, [r7, #14]
                         (pass->raw[2] & 0x10) >> 1 |
                         (pass->raw[3] & 0x10) >> 2 |
                         (pass->raw[4] & 0x10) >> 3 |
                         (pass->raw[5] & 0x10) >> 4);
    /* calculate checksum */
    unsigned char chk = (((pass->raw[1] & 0x0f) +
  40600c:	683b      	ldr	r3, [r7, #0]
  40600e:	7a5b      	ldrb	r3, [r3, #9]
  406010:	f003 010f 	and.w	r1, r3, #15
                          (pass->raw[2] & 0x0f) * 3 +
  406014:	683b      	ldr	r3, [r7, #0]
  406016:	7a9b      	ldrb	r3, [r3, #10]
  406018:	f003 020f 	and.w	r2, r3, #15
  40601c:	4613      	mov	r3, r2
  40601e:	005b      	lsls	r3, r3, #1
  406020:	4413      	add	r3, r2
                         (pass->raw[2] & 0x10) >> 1 |
                         (pass->raw[3] & 0x10) >> 2 |
                         (pass->raw[4] & 0x10) >> 3 |
                         (pass->raw[5] & 0x10) >> 4);
    /* calculate checksum */
    unsigned char chk = (((pass->raw[1] & 0x0f) +
  406022:	18ca      	adds	r2, r1, r3
                          (pass->raw[2] & 0x0f) * 3 +
                          (pass->raw[3] & 0x0f) +
  406024:	683b      	ldr	r3, [r7, #0]
  406026:	7adb      	ldrb	r3, [r3, #11]
  406028:	f003 030f 	and.w	r3, r3, #15
                         (pass->raw[3] & 0x10) >> 2 |
                         (pass->raw[4] & 0x10) >> 3 |
                         (pass->raw[5] & 0x10) >> 4);
    /* calculate checksum */
    unsigned char chk = (((pass->raw[1] & 0x0f) +
                          (pass->raw[2] & 0x0f) * 3 +
  40602c:	18d1      	adds	r1, r2, r3
                          (pass->raw[3] & 0x0f) +
                          (pass->raw[4] & 0x0f) * 3 +
  40602e:	683b      	ldr	r3, [r7, #0]
  406030:	7b1b      	ldrb	r3, [r3, #12]
  406032:	f003 020f 	and.w	r2, r3, #15
  406036:	4613      	mov	r3, r2
  406038:	005b      	lsls	r3, r3, #1
  40603a:	4413      	add	r3, r2
                         (pass->raw[4] & 0x10) >> 3 |
                         (pass->raw[5] & 0x10) >> 4);
    /* calculate checksum */
    unsigned char chk = (((pass->raw[1] & 0x0f) +
                          (pass->raw[2] & 0x0f) * 3 +
                          (pass->raw[3] & 0x0f) +
  40603c:	18ca      	adds	r2, r1, r3
                          (pass->raw[4] & 0x0f) * 3 +
                          (pass->raw[5] & 0x0f)) * 3) % 10;
  40603e:	683b      	ldr	r3, [r7, #0]
  406040:	7b5b      	ldrb	r3, [r3, #13]
  406042:	f003 030f 	and.w	r3, r3, #15
                         (pass->raw[5] & 0x10) >> 4);
    /* calculate checksum */
    unsigned char chk = (((pass->raw[1] & 0x0f) +
                          (pass->raw[2] & 0x0f) * 3 +
                          (pass->raw[3] & 0x0f) +
                          (pass->raw[4] & 0x0f) * 3 +
  406046:	441a      	add	r2, r3
                          (pass->raw[5] & 0x0f)) * 3) % 10;
  406048:	4613      	mov	r3, r2
  40604a:	005b      	lsls	r3, r3, #1
  40604c:	441a      	add	r2, r3
  40604e:	4b18      	ldr	r3, [pc, #96]	; (4060b0 <ean_part_end5+0x10c>)
  406050:	fb83 1302 	smull	r1, r3, r3, r2
  406054:	1099      	asrs	r1, r3, #2
  406056:	17d3      	asrs	r3, r2, #31
  406058:	1ac9      	subs	r1, r1, r3
  40605a:	460b      	mov	r3, r1
  40605c:	009b      	lsls	r3, r3, #2
  40605e:	440b      	add	r3, r1
  406060:	005b      	lsls	r3, r3, #1
  406062:	1ad1      	subs	r1, r2, r3
                         (pass->raw[2] & 0x10) >> 1 |
                         (pass->raw[3] & 0x10) >> 2 |
                         (pass->raw[4] & 0x10) >> 3 |
                         (pass->raw[5] & 0x10) >> 4);
    /* calculate checksum */
    unsigned char chk = (((pass->raw[1] & 0x0f) +
  406064:	460b      	mov	r3, r1
  406066:	737b      	strb	r3, [r7, #13]
                          (pass->raw[2] & 0x0f) * 3 +
                          (pass->raw[3] & 0x0f) +
                          (pass->raw[4] & 0x0f) * 3 +
                          (pass->raw[5] & 0x0f)) * 3) % 10;

    unsigned char parchk = parity_decode[par >> 1];
  406068:	7bbb      	ldrb	r3, [r7, #14]
  40606a:	085b      	lsrs	r3, r3, #1
  40606c:	b2db      	uxtb	r3, r3
  40606e:	461a      	mov	r2, r3
  406070:	4b10      	ldr	r3, [pc, #64]	; (4060b4 <ean_part_end5+0x110>)
  406072:	5c9b      	ldrb	r3, [r3, r2]
  406074:	73fb      	strb	r3, [r7, #15]
    if(par & 1)
  406076:	7bbb      	ldrb	r3, [r7, #14]
  406078:	f003 0301 	and.w	r3, r3, #1
  40607c:	2b00      	cmp	r3, #0
  40607e:	d002      	beq.n	406086 <ean_part_end5+0xe2>
        parchk >>= 4;
  406080:	7bfb      	ldrb	r3, [r7, #15]
  406082:	091b      	lsrs	r3, r3, #4
  406084:	73fb      	strb	r3, [r7, #15]
    parchk &= 0xf;
  406086:	7bfb      	ldrb	r3, [r7, #15]
  406088:	f003 030f 	and.w	r3, r3, #15
  40608c:	73fb      	strb	r3, [r7, #15]
    dbprintf(2, " par=%x(%d) chk=%d", par, parchk, chk);
  40608e:	bf00      	nop
    if(parchk != chk)
  406090:	7bfa      	ldrb	r2, [r7, #15]
  406092:	7b7b      	ldrb	r3, [r7, #13]
  406094:	429a      	cmp	r2, r3
  406096:	d001      	beq.n	40609c <ean_part_end5+0xf8>
        return(ZBAR_NONE);
  406098:	2300      	movs	r3, #0
  40609a:	e002      	b.n	4060a2 <ean_part_end5+0xfe>

    dbprintf(2, "\n");
  40609c:	bf00      	nop
    dbprintf(1, "decode5=%x%x%x%x%x\n",
  40609e:	bf00      	nop
             pass->raw[1] & 0xf, pass->raw[2] & 0xf,
             pass->raw[3] & 0xf, pass->raw[4] & 0xf,
             pass->raw[5] & 0xf);

    return(ZBAR_EAN5);
  4060a0:	2305      	movs	r3, #5
}
  4060a2:	4618      	mov	r0, r3
  4060a4:	3714      	adds	r7, #20
  4060a6:	46bd      	mov	sp, r7
  4060a8:	f85d 7b04 	ldr.w	r7, [sp], #4
  4060ac:	4770      	bx	lr
  4060ae:	bf00      	nop
  4060b0:	66666667 	.word	0x66666667
  4060b4:	0043c520 	.word	0x0043c520

004060b8 <ean_part_end7>:

static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
  4060b8:	b480      	push	{r7}
  4060ba:	b087      	sub	sp, #28
  4060bc:	af00      	add	r7, sp, #0
  4060be:	60f8      	str	r0, [r7, #12]
  4060c0:	60b9      	str	r1, [r7, #8]
  4060c2:	4613      	mov	r3, r2
  4060c4:	71fb      	strb	r3, [r7, #7]
    /* calculate parity index */
    unsigned char par = ((fwd)
  4060c6:	79fb      	ldrb	r3, [r7, #7]
  4060c8:	2b00      	cmp	r3, #0
  4060ca:	d02f      	beq.n	40612c <ean_part_end7+0x74>
                         ? ((pass->raw[1] & 0x10) << 1 |
  4060cc:	68bb      	ldr	r3, [r7, #8]
  4060ce:	7a5b      	ldrb	r3, [r3, #9]
  4060d0:	f003 0310 	and.w	r3, r3, #16
  4060d4:	005b      	lsls	r3, r3, #1
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  4060d6:	b2da      	uxtb	r2, r3
                         ? ((pass->raw[1] & 0x10) << 1 |
                            (pass->raw[2] & 0x10) |
  4060d8:	68bb      	ldr	r3, [r7, #8]
  4060da:	7a9b      	ldrb	r3, [r3, #10]
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  4060dc:	b2db      	uxtb	r3, r3
  4060de:	f003 0310 	and.w	r3, r3, #16
  4060e2:	b2db      	uxtb	r3, r3
  4060e4:	4313      	orrs	r3, r2
  4060e6:	b2da      	uxtb	r2, r3
                         ? ((pass->raw[1] & 0x10) << 1 |
                            (pass->raw[2] & 0x10) |
                            (pass->raw[3] & 0x10) >> 1 |
  4060e8:	68bb      	ldr	r3, [r7, #8]
  4060ea:	7adb      	ldrb	r3, [r3, #11]
  4060ec:	f003 0310 	and.w	r3, r3, #16
  4060f0:	105b      	asrs	r3, r3, #1
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  4060f2:	b2db      	uxtb	r3, r3
  4060f4:	4313      	orrs	r3, r2
  4060f6:	b2da      	uxtb	r2, r3
                         ? ((pass->raw[1] & 0x10) << 1 |
                            (pass->raw[2] & 0x10) |
                            (pass->raw[3] & 0x10) >> 1 |
                            (pass->raw[4] & 0x10) >> 2 |
  4060f8:	68bb      	ldr	r3, [r7, #8]
  4060fa:	7b1b      	ldrb	r3, [r3, #12]
  4060fc:	f003 0310 	and.w	r3, r3, #16
  406100:	109b      	asrs	r3, r3, #2
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406102:	b2db      	uxtb	r3, r3
  406104:	4313      	orrs	r3, r2
  406106:	b2da      	uxtb	r2, r3
                         ? ((pass->raw[1] & 0x10) << 1 |
                            (pass->raw[2] & 0x10) |
                            (pass->raw[3] & 0x10) >> 1 |
                            (pass->raw[4] & 0x10) >> 2 |
                            (pass->raw[5] & 0x10) >> 3 |
  406108:	68bb      	ldr	r3, [r7, #8]
  40610a:	7b5b      	ldrb	r3, [r3, #13]
  40610c:	f003 0310 	and.w	r3, r3, #16
  406110:	10db      	asrs	r3, r3, #3
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406112:	b2db      	uxtb	r3, r3
  406114:	4313      	orrs	r3, r2
  406116:	b2da      	uxtb	r2, r3
                         ? ((pass->raw[1] & 0x10) << 1 |
                            (pass->raw[2] & 0x10) |
                            (pass->raw[3] & 0x10) >> 1 |
                            (pass->raw[4] & 0x10) >> 2 |
                            (pass->raw[5] & 0x10) >> 3 |
                            (pass->raw[6] & 0x10) >> 4)
  406118:	68bb      	ldr	r3, [r7, #8]
  40611a:	7b9b      	ldrb	r3, [r3, #14]
  40611c:	f003 0310 	and.w	r3, r3, #16
  406120:	111b      	asrs	r3, r3, #4
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406122:	b2db      	uxtb	r3, r3
  406124:	4313      	orrs	r3, r2
  406126:	b2db      	uxtb	r3, r3
  406128:	b2db      	uxtb	r3, r3
  40612a:	e02e      	b.n	40618a <ean_part_end7+0xd2>
                            (pass->raw[2] & 0x10) |
                            (pass->raw[3] & 0x10) >> 1 |
                            (pass->raw[4] & 0x10) >> 2 |
                            (pass->raw[5] & 0x10) >> 3 |
                            (pass->raw[6] & 0x10) >> 4)
                         : ((pass->raw[1] & 0x10) >> 4 |
  40612c:	68bb      	ldr	r3, [r7, #8]
  40612e:	7a5b      	ldrb	r3, [r3, #9]
  406130:	f003 0310 	and.w	r3, r3, #16
  406134:	111b      	asrs	r3, r3, #4
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406136:	b2da      	uxtb	r2, r3
                            (pass->raw[3] & 0x10) >> 1 |
                            (pass->raw[4] & 0x10) >> 2 |
                            (pass->raw[5] & 0x10) >> 3 |
                            (pass->raw[6] & 0x10) >> 4)
                         : ((pass->raw[1] & 0x10) >> 4 |
                            (pass->raw[2] & 0x10) >> 3 |
  406138:	68bb      	ldr	r3, [r7, #8]
  40613a:	7a9b      	ldrb	r3, [r3, #10]
  40613c:	f003 0310 	and.w	r3, r3, #16
  406140:	10db      	asrs	r3, r3, #3
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406142:	b2db      	uxtb	r3, r3
  406144:	4313      	orrs	r3, r2
  406146:	b2da      	uxtb	r2, r3
                            (pass->raw[4] & 0x10) >> 2 |
                            (pass->raw[5] & 0x10) >> 3 |
                            (pass->raw[6] & 0x10) >> 4)
                         : ((pass->raw[1] & 0x10) >> 4 |
                            (pass->raw[2] & 0x10) >> 3 |
                            (pass->raw[3] & 0x10) >> 2 |
  406148:	68bb      	ldr	r3, [r7, #8]
  40614a:	7adb      	ldrb	r3, [r3, #11]
  40614c:	f003 0310 	and.w	r3, r3, #16
  406150:	109b      	asrs	r3, r3, #2
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406152:	b2db      	uxtb	r3, r3
  406154:	4313      	orrs	r3, r2
  406156:	b2da      	uxtb	r2, r3
                            (pass->raw[5] & 0x10) >> 3 |
                            (pass->raw[6] & 0x10) >> 4)
                         : ((pass->raw[1] & 0x10) >> 4 |
                            (pass->raw[2] & 0x10) >> 3 |
                            (pass->raw[3] & 0x10) >> 2 |
                            (pass->raw[4] & 0x10) >> 1 |
  406158:	68bb      	ldr	r3, [r7, #8]
  40615a:	7b1b      	ldrb	r3, [r3, #12]
  40615c:	f003 0310 	and.w	r3, r3, #16
  406160:	105b      	asrs	r3, r3, #1
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406162:	b2db      	uxtb	r3, r3
  406164:	4313      	orrs	r3, r2
  406166:	b2da      	uxtb	r2, r3
                            (pass->raw[6] & 0x10) >> 4)
                         : ((pass->raw[1] & 0x10) >> 4 |
                            (pass->raw[2] & 0x10) >> 3 |
                            (pass->raw[3] & 0x10) >> 2 |
                            (pass->raw[4] & 0x10) >> 1 |
                            (pass->raw[5] & 0x10) |
  406168:	68bb      	ldr	r3, [r7, #8]
  40616a:	7b5b      	ldrb	r3, [r3, #13]
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  40616c:	b2db      	uxtb	r3, r3
  40616e:	f003 0310 	and.w	r3, r3, #16
  406172:	b2db      	uxtb	r3, r3
  406174:	4313      	orrs	r3, r2
  406176:	b2da      	uxtb	r2, r3
                         : ((pass->raw[1] & 0x10) >> 4 |
                            (pass->raw[2] & 0x10) >> 3 |
                            (pass->raw[3] & 0x10) >> 2 |
                            (pass->raw[4] & 0x10) >> 1 |
                            (pass->raw[5] & 0x10) |
                            (pass->raw[6] & 0x10) << 1));
  406178:	68bb      	ldr	r3, [r7, #8]
  40617a:	7b9b      	ldrb	r3, [r3, #14]
  40617c:	f003 0310 	and.w	r3, r3, #16
  406180:	005b      	lsls	r3, r3, #1
static inline zbar_symbol_type_t ean_part_end7 (ean_decoder_t *ean,
                                                ean_pass_t *pass,
                                                unsigned char fwd)
{
    /* calculate parity index */
    unsigned char par = ((fwd)
  406182:	b2db      	uxtb	r3, r3
  406184:	4313      	orrs	r3, r2
  406186:	b2db      	uxtb	r3, r3
  406188:	b2db      	uxtb	r3, r3
  40618a:	75bb      	strb	r3, [r7, #22]
                            (pass->raw[4] & 0x10) >> 1 |
                            (pass->raw[5] & 0x10) |
                            (pass->raw[6] & 0x10) << 1));

    /* lookup parity combination */
    pass->raw[0] = parity_decode[par >> 1];
  40618c:	7dbb      	ldrb	r3, [r7, #22]
  40618e:	085b      	lsrs	r3, r3, #1
  406190:	b2db      	uxtb	r3, r3
  406192:	461a      	mov	r2, r3
  406194:	4b39      	ldr	r3, [pc, #228]	; (40627c <ean_part_end7+0x1c4>)
  406196:	5c9a      	ldrb	r2, [r3, r2]
  406198:	68bb      	ldr	r3, [r7, #8]
  40619a:	721a      	strb	r2, [r3, #8]
    if(par & 1)
  40619c:	7dbb      	ldrb	r3, [r7, #22]
  40619e:	f003 0301 	and.w	r3, r3, #1
  4061a2:	2b00      	cmp	r3, #0
  4061a4:	d005      	beq.n	4061b2 <ean_part_end7+0xfa>
        pass->raw[0] >>= 4;
  4061a6:	68bb      	ldr	r3, [r7, #8]
  4061a8:	7a1b      	ldrb	r3, [r3, #8]
  4061aa:	091b      	lsrs	r3, r3, #4
  4061ac:	b2da      	uxtb	r2, r3
  4061ae:	68bb      	ldr	r3, [r7, #8]
  4061b0:	721a      	strb	r2, [r3, #8]
    pass->raw[0] &= 0xf;
  4061b2:	68bb      	ldr	r3, [r7, #8]
  4061b4:	7a1b      	ldrb	r3, [r3, #8]
  4061b6:	f003 030f 	and.w	r3, r3, #15
  4061ba:	b2da      	uxtb	r2, r3
  4061bc:	68bb      	ldr	r3, [r7, #8]
  4061be:	721a      	strb	r2, [r3, #8]
    dbprintf(2, " par=%02x(%x)", par, pass->raw[0]);
  4061c0:	bf00      	nop

    if(pass->raw[0] == 0xf)
  4061c2:	68bb      	ldr	r3, [r7, #8]
  4061c4:	7a1b      	ldrb	r3, [r3, #8]
  4061c6:	2b0f      	cmp	r3, #15
  4061c8:	d101      	bne.n	4061ce <ean_part_end7+0x116>
        /* invalid parity combination */
        return(ZBAR_NONE);
  4061ca:	2300      	movs	r3, #0
  4061cc:	e050      	b.n	406270 <ean_part_end7+0x1b8>

    if(!par == fwd) {
  4061ce:	7dbb      	ldrb	r3, [r7, #22]
  4061d0:	2b00      	cmp	r3, #0
  4061d2:	bf0c      	ite	eq
  4061d4:	2301      	moveq	r3, #1
  4061d6:	2300      	movne	r3, #0
  4061d8:	b2db      	uxtb	r3, r3
  4061da:	461a      	mov	r2, r3
  4061dc:	79fb      	ldrb	r3, [r7, #7]
  4061de:	429a      	cmp	r2, r3
  4061e0:	d126      	bne.n	406230 <ean_part_end7+0x178>
        unsigned char i;
        pass->state |= STATE_REV;
  4061e2:	68bb      	ldr	r3, [r7, #8]
  4061e4:	781b      	ldrb	r3, [r3, #0]
  4061e6:	f063 037f 	orn	r3, r3, #127	; 0x7f
  4061ea:	b2da      	uxtb	r2, r3
  4061ec:	68bb      	ldr	r3, [r7, #8]
  4061ee:	701a      	strb	r2, [r3, #0]
        /* reverse sampled digits */
        for(i = 1; i < 4; i++) {
  4061f0:	2301      	movs	r3, #1
  4061f2:	75fb      	strb	r3, [r7, #23]
  4061f4:	e019      	b.n	40622a <ean_part_end7+0x172>
            unsigned char tmp = pass->raw[i];
  4061f6:	7dfb      	ldrb	r3, [r7, #23]
  4061f8:	68ba      	ldr	r2, [r7, #8]
  4061fa:	4413      	add	r3, r2
  4061fc:	7a1b      	ldrb	r3, [r3, #8]
  4061fe:	757b      	strb	r3, [r7, #21]
            pass->raw[i] = pass->raw[7 - i];
  406200:	7dfb      	ldrb	r3, [r7, #23]
  406202:	7dfa      	ldrb	r2, [r7, #23]
  406204:	f1c2 0207 	rsb	r2, r2, #7
  406208:	68b9      	ldr	r1, [r7, #8]
  40620a:	440a      	add	r2, r1
  40620c:	7a11      	ldrb	r1, [r2, #8]
  40620e:	68ba      	ldr	r2, [r7, #8]
  406210:	4413      	add	r3, r2
  406212:	460a      	mov	r2, r1
  406214:	721a      	strb	r2, [r3, #8]
            pass->raw[7 - i] = tmp;
  406216:	7dfb      	ldrb	r3, [r7, #23]
  406218:	f1c3 0307 	rsb	r3, r3, #7
  40621c:	68ba      	ldr	r2, [r7, #8]
  40621e:	4413      	add	r3, r2
  406220:	7d7a      	ldrb	r2, [r7, #21]
  406222:	721a      	strb	r2, [r3, #8]

    if(!par == fwd) {
        unsigned char i;
        pass->state |= STATE_REV;
        /* reverse sampled digits */
        for(i = 1; i < 4; i++) {
  406224:	7dfb      	ldrb	r3, [r7, #23]
  406226:	3301      	adds	r3, #1
  406228:	75fb      	strb	r3, [r7, #23]
  40622a:	7dfb      	ldrb	r3, [r7, #23]
  40622c:	2b03      	cmp	r3, #3
  40622e:	d9e2      	bls.n	4061f6 <ean_part_end7+0x13e>
            pass->raw[i] = pass->raw[7 - i];
            pass->raw[7 - i] = tmp;
        }
    }

    dbprintf(2, "\n");
  406230:	bf00      	nop
    dbprintf(1, "decode=%x%x%x%x%x%x%x(%02x)\n",
  406232:	bf00      	nop
             pass->raw[0] & 0xf, pass->raw[1] & 0xf,
             pass->raw[2] & 0xf, pass->raw[3] & 0xf,
             pass->raw[4] & 0xf, pass->raw[5] & 0xf,
             pass->raw[6] & 0xf, par);

    if(TEST_CFG(ean->ean13_config, ZBAR_CFG_ENABLE)) {
  406234:	68fb      	ldr	r3, [r7, #12]
  406236:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  406238:	f003 0301 	and.w	r3, r3, #1
  40623c:	2b00      	cmp	r3, #0
  40623e:	d00c      	beq.n	40625a <ean_part_end7+0x1a2>
        if(!par)
  406240:	7dbb      	ldrb	r3, [r7, #22]
  406242:	2b00      	cmp	r3, #0
  406244:	d102      	bne.n	40624c <ean_part_end7+0x194>
            return(ZBAR_EAN13 | EAN_RIGHT);
  406246:	f241 030d 	movw	r3, #4109	; 0x100d
  40624a:	e011      	b.n	406270 <ean_part_end7+0x1b8>
        if(par & 0x20)
  40624c:	7dbb      	ldrb	r3, [r7, #22]
  40624e:	f003 0320 	and.w	r3, r3, #32
  406252:	2b00      	cmp	r3, #0
  406254:	d001      	beq.n	40625a <ean_part_end7+0x1a2>
            return(ZBAR_EAN13 | EAN_LEFT);
  406256:	230d      	movs	r3, #13
  406258:	e00a      	b.n	406270 <ean_part_end7+0x1b8>
    }
    if(par && !(par & 0x20))
  40625a:	7dbb      	ldrb	r3, [r7, #22]
  40625c:	2b00      	cmp	r3, #0
  40625e:	d006      	beq.n	40626e <ean_part_end7+0x1b6>
  406260:	7dbb      	ldrb	r3, [r7, #22]
  406262:	f003 0320 	and.w	r3, r3, #32
  406266:	2b00      	cmp	r3, #0
  406268:	d101      	bne.n	40626e <ean_part_end7+0x1b6>
        return(ZBAR_UPCE);
  40626a:	2309      	movs	r3, #9
  40626c:	e000      	b.n	406270 <ean_part_end7+0x1b8>

    return(ZBAR_NONE);
  40626e:	2300      	movs	r3, #0
}
  406270:	4618      	mov	r0, r3
  406272:	371c      	adds	r7, #28
  406274:	46bd      	mov	sp, r7
  406276:	f85d 7b04 	ldr.w	r7, [sp], #4
  40627a:	4770      	bx	lr
  40627c:	0043c520 	.word	0x0043c520

00406280 <decode_pass>:

/* update state for one of 4 parallel passes */
static inline zbar_symbol_type_t decode_pass (zbar_decoder_t *dcode,
                                              ean_pass_t *pass)
{
  406280:	b580      	push	{r7, lr}
  406282:	b08a      	sub	sp, #40	; 0x28
  406284:	af00      	add	r7, sp, #0
  406286:	6078      	str	r0, [r7, #4]
  406288:	6039      	str	r1, [r7, #0]
    unsigned char idx, fwd;
    pass->state++;
  40628a:	683b      	ldr	r3, [r7, #0]
  40628c:	781b      	ldrb	r3, [r3, #0]
  40628e:	b2db      	uxtb	r3, r3
  406290:	b2db      	uxtb	r3, r3
  406292:	3301      	adds	r3, #1
  406294:	b2db      	uxtb	r3, r3
  406296:	b2da      	uxtb	r2, r3
  406298:	683b      	ldr	r3, [r7, #0]
  40629a:	701a      	strb	r2, [r3, #0]
    idx = pass->state & STATE_IDX;
  40629c:	683b      	ldr	r3, [r7, #0]
  40629e:	781b      	ldrb	r3, [r3, #0]
  4062a0:	b2db      	uxtb	r3, r3
  4062a2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  4062a6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    fwd = pass->state & 1;
  4062aa:	683b      	ldr	r3, [r7, #0]
  4062ac:	781b      	ldrb	r3, [r3, #0]
  4062ae:	b2db      	uxtb	r3, r3
  4062b0:	f003 0301 	and.w	r3, r3, #1
  4062b4:	76fb      	strb	r3, [r7, #27]

    if(get_color(dcode) == ZBAR_SPACE) {
  4062b6:	6878      	ldr	r0, [r7, #4]
  4062b8:	4baa      	ldr	r3, [pc, #680]	; (406564 <decode_pass+0x2e4>)
  4062ba:	4798      	blx	r3
  4062bc:	4603      	mov	r3, r0
  4062be:	2b00      	cmp	r3, #0
  4062c0:	f040 80cb 	bne.w	40645a <decode_pass+0x1da>
        if(pass->state & STATE_ADDON) {
  4062c4:	683b      	ldr	r3, [r7, #0]
  4062c6:	781b      	ldrb	r3, [r3, #0]
  4062c8:	b2db      	uxtb	r3, r3
  4062ca:	f003 0340 	and.w	r3, r3, #64	; 0x40
  4062ce:	2b00      	cmp	r3, #0
  4062d0:	d062      	beq.n	406398 <decode_pass+0x118>
            dbprintf(2, " i=%d", idx);
  4062d2:	bf00      	nop
            if(idx == 0x09 || idx == 0x21) {
  4062d4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  4062d8:	2b09      	cmp	r3, #9
  4062da:	d003      	beq.n	4062e4 <decode_pass+0x64>
  4062dc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  4062e0:	2b21      	cmp	r3, #33	; 0x21
  4062e2:	d144      	bne.n	40636e <decode_pass+0xee>
                unsigned qz = get_width(dcode, 0);
  4062e4:	6878      	ldr	r0, [r7, #4]
  4062e6:	2100      	movs	r1, #0
  4062e8:	4b9f      	ldr	r3, [pc, #636]	; (406568 <decode_pass+0x2e8>)
  4062ea:	4798      	blx	r3
  4062ec:	6178      	str	r0, [r7, #20]
                unsigned s = calc_s(dcode, 1, 4);
  4062ee:	6878      	ldr	r0, [r7, #4]
  4062f0:	2101      	movs	r1, #1
  4062f2:	2204      	movs	r2, #4
  4062f4:	4b9d      	ldr	r3, [pc, #628]	; (40656c <decode_pass+0x2ec>)
  4062f6:	4798      	blx	r3
  4062f8:	6138      	str	r0, [r7, #16]
                zbar_symbol_type_t part = !qz || (qz >= s * 3 / 4);
  4062fa:	697b      	ldr	r3, [r7, #20]
  4062fc:	2b00      	cmp	r3, #0
  4062fe:	d007      	beq.n	406310 <decode_pass+0x90>
  406300:	693a      	ldr	r2, [r7, #16]
  406302:	4613      	mov	r3, r2
  406304:	005b      	lsls	r3, r3, #1
  406306:	4413      	add	r3, r2
  406308:	089a      	lsrs	r2, r3, #2
  40630a:	697b      	ldr	r3, [r7, #20]
  40630c:	429a      	cmp	r2, r3
  40630e:	d801      	bhi.n	406314 <decode_pass+0x94>
  406310:	2301      	movs	r3, #1
  406312:	e000      	b.n	406316 <decode_pass+0x96>
  406314:	2300      	movs	r3, #0
  406316:	84bb      	strh	r3, [r7, #36]	; 0x24
                if(part && idx == 0x09)
  406318:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
  40631a:	2b00      	cmp	r3, #0
  40631c:	d00c      	beq.n	406338 <decode_pass+0xb8>
  40631e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406322:	2b09      	cmp	r3, #9
  406324:	d108      	bne.n	406338 <decode_pass+0xb8>
                    part = ean_part_end2(&dcode->ean, pass);
  406326:	687b      	ldr	r3, [r7, #4]
  406328:	3368      	adds	r3, #104	; 0x68
  40632a:	4618      	mov	r0, r3
  40632c:	6839      	ldr	r1, [r7, #0]
  40632e:	4b90      	ldr	r3, [pc, #576]	; (406570 <decode_pass+0x2f0>)
  406330:	4798      	blx	r3
  406332:	4603      	mov	r3, r0
  406334:	84bb      	strh	r3, [r7, #36]	; 0x24
  406336:	e00a      	b.n	40634e <decode_pass+0xce>
                else if(part)
  406338:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
  40633a:	2b00      	cmp	r3, #0
  40633c:	d007      	beq.n	40634e <decode_pass+0xce>
                    part = ean_part_end5(&dcode->ean, pass);
  40633e:	687b      	ldr	r3, [r7, #4]
  406340:	3368      	adds	r3, #104	; 0x68
  406342:	4618      	mov	r0, r3
  406344:	6839      	ldr	r1, [r7, #0]
  406346:	4b8b      	ldr	r3, [pc, #556]	; (406574 <decode_pass+0x2f4>)
  406348:	4798      	blx	r3
  40634a:	4603      	mov	r3, r0
  40634c:	84bb      	strh	r3, [r7, #36]	; 0x24

                if(part || idx == 0x21) {
  40634e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
  406350:	2b00      	cmp	r3, #0
  406352:	d103      	bne.n	40635c <decode_pass+0xdc>
  406354:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406358:	2b21      	cmp	r3, #33	; 0x21
  40635a:	d108      	bne.n	40636e <decode_pass+0xee>
                    dcode->ean.direction = 0;
  40635c:	687b      	ldr	r3, [r7, #4]
  40635e:	2200      	movs	r2, #0
  406360:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
                    pass->state = -1;
  406364:	683b      	ldr	r3, [r7, #0]
  406366:	22ff      	movs	r2, #255	; 0xff
  406368:	701a      	strb	r2, [r3, #0]
                    return(part);
  40636a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
  40636c:	e12b      	b.n	4065c6 <decode_pass+0x346>
                }
            }
            if((idx & 7) == 1) {
  40636e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406372:	f003 0307 	and.w	r3, r3, #7
  406376:	2b01      	cmp	r3, #1
  406378:	d16f      	bne.n	40645a <decode_pass+0x1da>
                dbprintf(2, " +");
  40637a:	bf00      	nop
                pass->state += 2;
  40637c:	683b      	ldr	r3, [r7, #0]
  40637e:	781b      	ldrb	r3, [r3, #0]
  406380:	b2db      	uxtb	r3, r3
  406382:	3302      	adds	r3, #2
  406384:	b2db      	uxtb	r3, r3
  406386:	b2da      	uxtb	r2, r3
  406388:	683b      	ldr	r3, [r7, #0]
  40638a:	701a      	strb	r2, [r3, #0]
                idx += 2;
  40638c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406390:	3302      	adds	r3, #2
  406392:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  406396:	e060      	b.n	40645a <decode_pass+0x1da>
            }
        }
        else if((idx == 0x10 || idx == 0x11) &&
  406398:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  40639c:	2b10      	cmp	r3, #16
  40639e:	d003      	beq.n	4063a8 <decode_pass+0x128>
  4063a0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  4063a4:	2b11      	cmp	r3, #17
  4063a6:	d126      	bne.n	4063f6 <decode_pass+0x176>
                TEST_CFG(dcode->ean.ean8_config, ZBAR_CFG_ENABLE) &&
  4063a8:	687b      	ldr	r3, [r7, #4]
  4063aa:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
  4063ae:	f003 0301 	and.w	r3, r3, #1
                dbprintf(2, " +");
                pass->state += 2;
                idx += 2;
            }
        }
        else if((idx == 0x10 || idx == 0x11) &&
  4063b2:	2b00      	cmp	r3, #0
  4063b4:	d01f      	beq.n	4063f6 <decode_pass+0x176>
                TEST_CFG(dcode->ean.ean8_config, ZBAR_CFG_ENABLE) &&
                !aux_end(dcode, fwd)) {
  4063b6:	7efb      	ldrb	r3, [r7, #27]
  4063b8:	6878      	ldr	r0, [r7, #4]
  4063ba:	4619      	mov	r1, r3
  4063bc:	4b6e      	ldr	r3, [pc, #440]	; (406578 <decode_pass+0x2f8>)
  4063be:	4798      	blx	r3
  4063c0:	4603      	mov	r3, r0
                pass->state += 2;
                idx += 2;
            }
        }
        else if((idx == 0x10 || idx == 0x11) &&
                TEST_CFG(dcode->ean.ean8_config, ZBAR_CFG_ENABLE) &&
  4063c2:	2b00      	cmp	r3, #0
  4063c4:	d117      	bne.n	4063f6 <decode_pass+0x176>
                !aux_end(dcode, fwd)) {
            dbprintf(2, " fwd=%x", fwd);
  4063c6:	bf00      	nop
            zbar_symbol_type_t part = ean_part_end4(pass, fwd);
  4063c8:	7efb      	ldrb	r3, [r7, #27]
  4063ca:	6838      	ldr	r0, [r7, #0]
  4063cc:	4619      	mov	r1, r3
  4063ce:	4b6b      	ldr	r3, [pc, #428]	; (40657c <decode_pass+0x2fc>)
  4063d0:	4798      	blx	r3
  4063d2:	4603      	mov	r3, r0
  4063d4:	81fb      	strh	r3, [r7, #14]
            if(part)
  4063d6:	89fb      	ldrh	r3, [r7, #14]
  4063d8:	2b00      	cmp	r3, #0
  4063da:	d007      	beq.n	4063ec <decode_pass+0x16c>
                dcode->ean.direction = (pass->state & STATE_REV) != 0;
  4063dc:	683b      	ldr	r3, [r7, #0]
  4063de:	781b      	ldrb	r3, [r3, #0]
  4063e0:	09db      	lsrs	r3, r3, #7
  4063e2:	b2db      	uxtb	r3, r3
  4063e4:	461a      	mov	r2, r3
  4063e6:	687b      	ldr	r3, [r7, #4]
  4063e8:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
            pass->state = -1;
  4063ec:	683b      	ldr	r3, [r7, #0]
  4063ee:	22ff      	movs	r2, #255	; 0xff
  4063f0:	701a      	strb	r2, [r3, #0]
            return(part);
  4063f2:	89fb      	ldrh	r3, [r7, #14]
  4063f4:	e0e7      	b.n	4065c6 <decode_pass+0x346>
        }
	else if((idx == 0x18 || idx == 0x19)) {
  4063f6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  4063fa:	2b18      	cmp	r3, #24
  4063fc:	d003      	beq.n	406406 <decode_pass+0x186>
  4063fe:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406402:	2b19      	cmp	r3, #25
  406404:	d129      	bne.n	40645a <decode_pass+0x1da>
	  zbar_symbol_type_t part = ZBAR_NONE;
  406406:	2300      	movs	r3, #0
  406408:	847b      	strh	r3, [r7, #34]	; 0x22
	  dbprintf(2, " fwd=%x", fwd);
  40640a:	bf00      	nop
	  if(!aux_end(dcode, fwd) && pass->raw[5] != 0xff)
  40640c:	7efb      	ldrb	r3, [r7, #27]
  40640e:	6878      	ldr	r0, [r7, #4]
  406410:	4619      	mov	r1, r3
  406412:	4b59      	ldr	r3, [pc, #356]	; (406578 <decode_pass+0x2f8>)
  406414:	4798      	blx	r3
  406416:	4603      	mov	r3, r0
  406418:	2b00      	cmp	r3, #0
  40641a:	d10e      	bne.n	40643a <decode_pass+0x1ba>
  40641c:	683b      	ldr	r3, [r7, #0]
  40641e:	7b5b      	ldrb	r3, [r3, #13]
  406420:	2bff      	cmp	r3, #255	; 0xff
  406422:	d00a      	beq.n	40643a <decode_pass+0x1ba>
	    part = ean_part_end7(&dcode->ean, pass, fwd);
  406424:	687b      	ldr	r3, [r7, #4]
  406426:	f103 0268 	add.w	r2, r3, #104	; 0x68
  40642a:	7efb      	ldrb	r3, [r7, #27]
  40642c:	4610      	mov	r0, r2
  40642e:	6839      	ldr	r1, [r7, #0]
  406430:	461a      	mov	r2, r3
  406432:	4b53      	ldr	r3, [pc, #332]	; (406580 <decode_pass+0x300>)
  406434:	4798      	blx	r3
  406436:	4603      	mov	r3, r0
  406438:	847b      	strh	r3, [r7, #34]	; 0x22
	  if(part)
  40643a:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
  40643c:	2b00      	cmp	r3, #0
  40643e:	d007      	beq.n	406450 <decode_pass+0x1d0>
	    dcode->ean.direction = (pass->state & STATE_REV) != 0;
  406440:	683b      	ldr	r3, [r7, #0]
  406442:	781b      	ldrb	r3, [r3, #0]
  406444:	09db      	lsrs	r3, r3, #7
  406446:	b2db      	uxtb	r3, r3
  406448:	461a      	mov	r2, r3
  40644a:	687b      	ldr	r3, [r7, #4]
  40644c:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
	  pass->state = -1;
  406450:	683b      	ldr	r3, [r7, #0]
  406452:	22ff      	movs	r2, #255	; 0xff
  406454:	701a      	strb	r2, [r3, #0]
	  return(part);
  406456:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
  406458:	e0b5      	b.n	4065c6 <decode_pass+0x346>
        }
    }

    if(pass->state & STATE_ADDON)
  40645a:	683b      	ldr	r3, [r7, #0]
  40645c:	781b      	ldrb	r3, [r3, #0]
  40645e:	b2db      	uxtb	r3, r3
  406460:	f003 0340 	and.w	r3, r3, #64	; 0x40
  406464:	2b00      	cmp	r3, #0
  406466:	d004      	beq.n	406472 <decode_pass+0x1f2>
        idx >>= 1;
  406468:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  40646c:	085b      	lsrs	r3, r3, #1
  40646e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

    if(!(idx & 0x03) && idx <= 0x14) {
  406472:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406476:	f003 0303 	and.w	r3, r3, #3
  40647a:	2b00      	cmp	r3, #0
  40647c:	f040 80a2 	bne.w	4065c4 <decode_pass+0x344>
  406480:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406484:	2b14      	cmp	r3, #20
  406486:	f200 809d 	bhi.w	4065c4 <decode_pass+0x344>
        signed char code = -1;
  40648a:	23ff      	movs	r3, #255	; 0xff
  40648c:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
        unsigned w = pass->width;
  406490:	683b      	ldr	r3, [r7, #0]
  406492:	685b      	ldr	r3, [r3, #4]
  406494:	61fb      	str	r3, [r7, #28]
        if(!dcode->ean.s4)
  406496:	687b      	ldr	r3, [r7, #4]
  406498:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  40649c:	2b00      	cmp	r3, #0
  40649e:	d101      	bne.n	4064a4 <decode_pass+0x224>
            return(0);
  4064a0:	2300      	movs	r3, #0
  4064a2:	e090      	b.n	4065c6 <decode_pass+0x346>
        /* validate guard bars before decoding first char of symbol */
        if(!pass->state) {
  4064a4:	683b      	ldr	r3, [r7, #0]
  4064a6:	781b      	ldrb	r3, [r3, #0]
  4064a8:	2b00      	cmp	r3, #0
  4064aa:	d11a      	bne.n	4064e2 <decode_pass+0x262>
            pass->state = aux_start(dcode);
  4064ac:	6878      	ldr	r0, [r7, #4]
  4064ae:	4b35      	ldr	r3, [pc, #212]	; (406584 <decode_pass+0x304>)
  4064b0:	4798      	blx	r3
  4064b2:	4603      	mov	r3, r0
  4064b4:	461a      	mov	r2, r3
  4064b6:	683b      	ldr	r3, [r7, #0]
  4064b8:	701a      	strb	r2, [r3, #0]
            pass->width = dcode->ean.s4;
  4064ba:	687b      	ldr	r3, [r7, #4]
  4064bc:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
  4064c0:	683b      	ldr	r3, [r7, #0]
  4064c2:	605a      	str	r2, [r3, #4]
            if(pass->state < 0)
  4064c4:	683b      	ldr	r3, [r7, #0]
  4064c6:	781b      	ldrb	r3, [r3, #0]
  4064c8:	b25b      	sxtb	r3, r3
  4064ca:	2b00      	cmp	r3, #0
  4064cc:	da01      	bge.n	4064d2 <decode_pass+0x252>
                return(0);
  4064ce:	2300      	movs	r3, #0
  4064d0:	e079      	b.n	4065c6 <decode_pass+0x346>
            idx = pass->state & STATE_IDX;
  4064d2:	683b      	ldr	r3, [r7, #0]
  4064d4:	781b      	ldrb	r3, [r3, #0]
  4064d6:	b2db      	uxtb	r3, r3
  4064d8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  4064dc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  4064e0:	e017      	b.n	406512 <decode_pass+0x292>
        }
        else {
            w = check_width(w, dcode->ean.s4);
  4064e2:	687b      	ldr	r3, [r7, #4]
  4064e4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  4064e8:	69f8      	ldr	r0, [r7, #28]
  4064ea:	4619      	mov	r1, r3
  4064ec:	4b26      	ldr	r3, [pc, #152]	; (406588 <decode_pass+0x308>)
  4064ee:	4798      	blx	r3
  4064f0:	4603      	mov	r3, r0
  4064f2:	61fb      	str	r3, [r7, #28]
            if(w)
  4064f4:	69fb      	ldr	r3, [r7, #28]
  4064f6:	2b00      	cmp	r3, #0
  4064f8:	d00b      	beq.n	406512 <decode_pass+0x292>
                pass->width = (pass->width + dcode->ean.s4 * 3) / 4;
  4064fa:	683b      	ldr	r3, [r7, #0]
  4064fc:	6859      	ldr	r1, [r3, #4]
  4064fe:	687b      	ldr	r3, [r7, #4]
  406500:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
  406504:	4613      	mov	r3, r2
  406506:	005b      	lsls	r3, r3, #1
  406508:	4413      	add	r3, r2
  40650a:	440b      	add	r3, r1
  40650c:	089a      	lsrs	r2, r3, #2
  40650e:	683b      	ldr	r3, [r7, #0]
  406510:	605a      	str	r2, [r3, #4]
        }

        if(w)
  406512:	69fb      	ldr	r3, [r7, #28]
  406514:	2b00      	cmp	r3, #0
  406516:	d006      	beq.n	406526 <decode_pass+0x2a6>
            code = decode4(dcode);
  406518:	6878      	ldr	r0, [r7, #4]
  40651a:	4b1c      	ldr	r3, [pc, #112]	; (40658c <decode_pass+0x30c>)
  40651c:	4798      	blx	r3
  40651e:	4603      	mov	r3, r0
  406520:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
  406524:	e000      	b.n	406528 <decode_pass+0x2a8>
        else
            dbprintf(2, " [bad width]");
  406526:	bf00      	nop

        if((code < 0 && idx != 0x10) || 
  406528:	f997 3021 	ldrsb.w	r3, [r7, #33]	; 0x21
  40652c:	2b00      	cmp	r3, #0
  40652e:	da03      	bge.n	406538 <decode_pass+0x2b8>
  406530:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  406534:	2b10      	cmp	r3, #16
  406536:	d110      	bne.n	40655a <decode_pass+0x2da>
  406538:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  40653c:	2b00      	cmp	r3, #0
  40653e:	d029      	beq.n	406594 <decode_pass+0x314>
           (idx > 0 && (pass->state & STATE_ADDON) && aux_mid(dcode)))
  406540:	683b      	ldr	r3, [r7, #0]
  406542:	781b      	ldrb	r3, [r3, #0]
  406544:	b2db      	uxtb	r3, r3
  406546:	f003 0340 	and.w	r3, r3, #64	; 0x40
  40654a:	2b00      	cmp	r3, #0
  40654c:	d022      	beq.n	406594 <decode_pass+0x314>
  40654e:	6878      	ldr	r0, [r7, #4]
  406550:	4b0f      	ldr	r3, [pc, #60]	; (406590 <decode_pass+0x310>)
  406552:	4798      	blx	r3
  406554:	4603      	mov	r3, r0
  406556:	2b00      	cmp	r3, #0
  406558:	d01c      	beq.n	406594 <decode_pass+0x314>
            pass->state = -1;
  40655a:	683b      	ldr	r3, [r7, #0]
  40655c:	22ff      	movs	r2, #255	; 0xff
  40655e:	701a      	strb	r2, [r3, #0]
  406560:	e030      	b.n	4065c4 <decode_pass+0x344>
  406562:	bf00      	nop
  406564:	004058cd 	.word	0x004058cd
  406568:	004058ed 	.word	0x004058ed
  40656c:	0040591d 	.word	0x0040591d
  406570:	00405e59 	.word	0x00405e59
  406574:	00405fa5 	.word	0x00405fa5
  406578:	00405a1d 	.word	0x00405a1d
  40657c:	00405ee1 	.word	0x00405ee1
  406580:	004060b9 	.word	0x004060b9
  406584:	00405af5 	.word	0x00405af5
  406588:	004059d9 	.word	0x004059d9
  40658c:	00405c85 	.word	0x00405c85
  406590:	00405c3d 	.word	0x00405c3d
        else if(code < 0)
  406594:	f997 3021 	ldrsb.w	r3, [r7, #33]	; 0x21
  406598:	2b00      	cmp	r3, #0
  40659a:	da03      	bge.n	4065a4 <decode_pass+0x324>
            pass->raw[5] = 0xff;
  40659c:	683b      	ldr	r3, [r7, #0]
  40659e:	22ff      	movs	r2, #255	; 0xff
  4065a0:	735a      	strb	r2, [r3, #13]
  4065a2:	e00f      	b.n	4065c4 <decode_pass+0x344>
        else {
            dbprintf(2, "\n        raw[%x]=%02x =>", idx >> 2,
  4065a4:	bf00      	nop
                     digits[(unsigned char)code]);
            pass->raw[(idx >> 2) + 1] = digits[(unsigned char)code];
  4065a6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  4065aa:	089b      	lsrs	r3, r3, #2
  4065ac:	b2db      	uxtb	r3, r3
  4065ae:	3301      	adds	r3, #1
  4065b0:	f897 2021 	ldrb.w	r2, [r7, #33]	; 0x21
  4065b4:	4611      	mov	r1, r2
  4065b6:	4a06      	ldr	r2, [pc, #24]	; (4065d0 <decode_pass+0x350>)
  4065b8:	5c51      	ldrb	r1, [r2, r1]
  4065ba:	683a      	ldr	r2, [r7, #0]
  4065bc:	4413      	add	r3, r2
  4065be:	460a      	mov	r2, r1
  4065c0:	721a      	strb	r2, [r3, #8]
            dbprintf(2, " raw=%d%d%d%d%d%d%d",
  4065c2:	bf00      	nop
                     pass->raw[2] & 0xf, pass->raw[3] & 0xf,
                     pass->raw[4] & 0xf, pass->raw[5] & 0xf,
                     pass->raw[6] & 0xf);
        }
    }
    return(0);
  4065c4:	2300      	movs	r3, #0
}
  4065c6:	4618      	mov	r0, r3
  4065c8:	3728      	adds	r7, #40	; 0x28
  4065ca:	46bd      	mov	sp, r7
  4065cc:	bd80      	pop	{r7, pc}
  4065ce:	bf00      	nop
  4065d0:	0043c50c 	.word	0x0043c50c

004065d4 <ean_verify_checksum>:

static inline signed char ean_verify_checksum (ean_decoder_t *ean,
                                               int n)
{
  4065d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4065d8:	b08a      	sub	sp, #40	; 0x28
  4065da:	af06      	add	r7, sp, #24
  4065dc:	6078      	str	r0, [r7, #4]
  4065de:	6039      	str	r1, [r7, #0]
    unsigned char chk = 0;
  4065e0:	2300      	movs	r3, #0
  4065e2:	73fb      	strb	r3, [r7, #15]
    unsigned char i, d;
    for(i = 0; i < n; i++) {
  4065e4:	2300      	movs	r3, #0
  4065e6:	73bb      	strb	r3, [r7, #14]
  4065e8:	e047      	b.n	40667a <ean_verify_checksum+0xa6>
        unsigned char d = ean->buf[i];
  4065ea:	7bbb      	ldrb	r3, [r7, #14]
  4065ec:	687a      	ldr	r2, [r7, #4]
  4065ee:	4413      	add	r3, r2
  4065f0:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
  4065f4:	737b      	strb	r3, [r7, #13]
        zassert(d < 10, -1, "i=%x d=%x chk=%x %s\n", i, d, chk,
  4065f6:	7b7b      	ldrb	r3, [r7, #13]
  4065f8:	2b09      	cmp	r3, #9
  4065fa:	d91e      	bls.n	40663a <ean_verify_checksum+0x66>
  4065fc:	4b4e      	ldr	r3, [pc, #312]	; (406738 <ean_verify_checksum+0x164>)
  4065fe:	681b      	ldr	r3, [r3, #0]
  406600:	f8d3 800c 	ldr.w	r8, [r3, #12]
  406604:	7bbe      	ldrb	r6, [r7, #14]
  406606:	7b7d      	ldrb	r5, [r7, #13]
  406608:	7bfc      	ldrb	r4, [r7, #15]
  40660a:	687b      	ldr	r3, [r7, #4]
  40660c:	3350      	adds	r3, #80	; 0x50
  40660e:	4618      	mov	r0, r3
  406610:	2112      	movs	r1, #18
  406612:	4b4a      	ldr	r3, [pc, #296]	; (40673c <ean_verify_checksum+0x168>)
  406614:	4798      	blx	r3
  406616:	4602      	mov	r2, r0
  406618:	4b49      	ldr	r3, [pc, #292]	; (406740 <ean_verify_checksum+0x16c>)
  40661a:	9300      	str	r3, [sp, #0]
  40661c:	4b49      	ldr	r3, [pc, #292]	; (406744 <ean_verify_checksum+0x170>)
  40661e:	9301      	str	r3, [sp, #4]
  406620:	9602      	str	r6, [sp, #8]
  406622:	9503      	str	r5, [sp, #12]
  406624:	9404      	str	r4, [sp, #16]
  406626:	9205      	str	r2, [sp, #20]
  406628:	4640      	mov	r0, r8
  40662a:	4947      	ldr	r1, [pc, #284]	; (406748 <ean_verify_checksum+0x174>)
  40662c:	4a47      	ldr	r2, [pc, #284]	; (40674c <ean_verify_checksum+0x178>)
  40662e:	f240 230a 	movw	r3, #522	; 0x20a
  406632:	4c47      	ldr	r4, [pc, #284]	; (406750 <ean_verify_checksum+0x17c>)
  406634:	47a0      	blx	r4
  406636:	23ff      	movs	r3, #255	; 0xff
  406638:	e078      	b.n	40672c <ean_verify_checksum+0x158>
                _zbar_decoder_buf_dump((void*)ean->buf, 18));
        chk += d;
  40663a:	7bfa      	ldrb	r2, [r7, #15]
  40663c:	7b7b      	ldrb	r3, [r7, #13]
  40663e:	4413      	add	r3, r2
  406640:	73fb      	strb	r3, [r7, #15]
        if((i ^ n) & 1) {
  406642:	7bba      	ldrb	r2, [r7, #14]
  406644:	683b      	ldr	r3, [r7, #0]
  406646:	4053      	eors	r3, r2
  406648:	f003 0301 	and.w	r3, r3, #1
  40664c:	2b00      	cmp	r3, #0
  40664e:	d00b      	beq.n	406668 <ean_verify_checksum+0x94>
            chk += d << 1;
  406650:	7b7b      	ldrb	r3, [r7, #13]
  406652:	005b      	lsls	r3, r3, #1
  406654:	b2da      	uxtb	r2, r3
  406656:	7bfb      	ldrb	r3, [r7, #15]
  406658:	4413      	add	r3, r2
  40665a:	73fb      	strb	r3, [r7, #15]
            if(chk >= 20)
  40665c:	7bfb      	ldrb	r3, [r7, #15]
  40665e:	2b13      	cmp	r3, #19
  406660:	d902      	bls.n	406668 <ean_verify_checksum+0x94>
                chk -= 20;
  406662:	7bfb      	ldrb	r3, [r7, #15]
  406664:	3b14      	subs	r3, #20
  406666:	73fb      	strb	r3, [r7, #15]
        }
        if(chk >= 10)
  406668:	7bfb      	ldrb	r3, [r7, #15]
  40666a:	2b09      	cmp	r3, #9
  40666c:	d902      	bls.n	406674 <ean_verify_checksum+0xa0>
            chk -= 10;
  40666e:	7bfb      	ldrb	r3, [r7, #15]
  406670:	3b0a      	subs	r3, #10
  406672:	73fb      	strb	r3, [r7, #15]
static inline signed char ean_verify_checksum (ean_decoder_t *ean,
                                               int n)
{
    unsigned char chk = 0;
    unsigned char i, d;
    for(i = 0; i < n; i++) {
  406674:	7bbb      	ldrb	r3, [r7, #14]
  406676:	3301      	adds	r3, #1
  406678:	73bb      	strb	r3, [r7, #14]
  40667a:	7bba      	ldrb	r2, [r7, #14]
  40667c:	683b      	ldr	r3, [r7, #0]
  40667e:	429a      	cmp	r2, r3
  406680:	dbb3      	blt.n	4065ea <ean_verify_checksum+0x16>
                chk -= 20;
        }
        if(chk >= 10)
            chk -= 10;
    }
    zassert(chk < 10, -1, "chk=%x n=%x %s", chk, n,
  406682:	7bfb      	ldrb	r3, [r7, #15]
  406684:	2b09      	cmp	r3, #9
  406686:	d91b      	bls.n	4066c0 <ean_verify_checksum+0xec>
  406688:	4b2b      	ldr	r3, [pc, #172]	; (406738 <ean_verify_checksum+0x164>)
  40668a:	681b      	ldr	r3, [r3, #0]
  40668c:	68dd      	ldr	r5, [r3, #12]
  40668e:	7bfc      	ldrb	r4, [r7, #15]
  406690:	687b      	ldr	r3, [r7, #4]
  406692:	3350      	adds	r3, #80	; 0x50
  406694:	4618      	mov	r0, r3
  406696:	2112      	movs	r1, #18
  406698:	4b28      	ldr	r3, [pc, #160]	; (40673c <ean_verify_checksum+0x168>)
  40669a:	4798      	blx	r3
  40669c:	4602      	mov	r2, r0
  40669e:	4b28      	ldr	r3, [pc, #160]	; (406740 <ean_verify_checksum+0x16c>)
  4066a0:	9300      	str	r3, [sp, #0]
  4066a2:	4b2c      	ldr	r3, [pc, #176]	; (406754 <ean_verify_checksum+0x180>)
  4066a4:	9301      	str	r3, [sp, #4]
  4066a6:	9402      	str	r4, [sp, #8]
  4066a8:	683b      	ldr	r3, [r7, #0]
  4066aa:	9303      	str	r3, [sp, #12]
  4066ac:	9204      	str	r2, [sp, #16]
  4066ae:	4628      	mov	r0, r5
  4066b0:	4929      	ldr	r1, [pc, #164]	; (406758 <ean_verify_checksum+0x184>)
  4066b2:	4a26      	ldr	r2, [pc, #152]	; (40674c <ean_verify_checksum+0x178>)
  4066b4:	f240 2315 	movw	r3, #533	; 0x215
  4066b8:	4c25      	ldr	r4, [pc, #148]	; (406750 <ean_verify_checksum+0x17c>)
  4066ba:	47a0      	blx	r4
  4066bc:	23ff      	movs	r3, #255	; 0xff
  4066be:	e035      	b.n	40672c <ean_verify_checksum+0x158>
            _zbar_decoder_buf_dump((void*)ean->buf, 18));
    if(chk)
  4066c0:	7bfb      	ldrb	r3, [r7, #15]
  4066c2:	2b00      	cmp	r3, #0
  4066c4:	d003      	beq.n	4066ce <ean_verify_checksum+0xfa>
        chk = 10 - chk;
  4066c6:	7bfb      	ldrb	r3, [r7, #15]
  4066c8:	f1c3 030a 	rsb	r3, r3, #10
  4066cc:	73fb      	strb	r3, [r7, #15]
    d = ean->buf[n];
  4066ce:	687a      	ldr	r2, [r7, #4]
  4066d0:	683b      	ldr	r3, [r7, #0]
  4066d2:	4413      	add	r3, r2
  4066d4:	3350      	adds	r3, #80	; 0x50
  4066d6:	781b      	ldrb	r3, [r3, #0]
  4066d8:	733b      	strb	r3, [r7, #12]
    zassert(d < 10, -1, "n=%x d=%x chk=%x %s\n", n, d, chk,
  4066da:	7b3b      	ldrb	r3, [r7, #12]
  4066dc:	2b09      	cmp	r3, #9
  4066de:	d91d      	bls.n	40671c <ean_verify_checksum+0x148>
  4066e0:	4b15      	ldr	r3, [pc, #84]	; (406738 <ean_verify_checksum+0x164>)
  4066e2:	681b      	ldr	r3, [r3, #0]
  4066e4:	68de      	ldr	r6, [r3, #12]
  4066e6:	7b3d      	ldrb	r5, [r7, #12]
  4066e8:	7bfc      	ldrb	r4, [r7, #15]
  4066ea:	687b      	ldr	r3, [r7, #4]
  4066ec:	3350      	adds	r3, #80	; 0x50
  4066ee:	4618      	mov	r0, r3
  4066f0:	2112      	movs	r1, #18
  4066f2:	4b12      	ldr	r3, [pc, #72]	; (40673c <ean_verify_checksum+0x168>)
  4066f4:	4798      	blx	r3
  4066f6:	4602      	mov	r2, r0
  4066f8:	4b11      	ldr	r3, [pc, #68]	; (406740 <ean_verify_checksum+0x16c>)
  4066fa:	9300      	str	r3, [sp, #0]
  4066fc:	4b11      	ldr	r3, [pc, #68]	; (406744 <ean_verify_checksum+0x170>)
  4066fe:	9301      	str	r3, [sp, #4]
  406700:	683b      	ldr	r3, [r7, #0]
  406702:	9302      	str	r3, [sp, #8]
  406704:	9503      	str	r5, [sp, #12]
  406706:	9404      	str	r4, [sp, #16]
  406708:	9205      	str	r2, [sp, #20]
  40670a:	4630      	mov	r0, r6
  40670c:	4913      	ldr	r1, [pc, #76]	; (40675c <ean_verify_checksum+0x188>)
  40670e:	4a0f      	ldr	r2, [pc, #60]	; (40674c <ean_verify_checksum+0x178>)
  406710:	f240 231a 	movw	r3, #538	; 0x21a
  406714:	4c0e      	ldr	r4, [pc, #56]	; (406750 <ean_verify_checksum+0x17c>)
  406716:	47a0      	blx	r4
  406718:	23ff      	movs	r3, #255	; 0xff
  40671a:	e007      	b.n	40672c <ean_verify_checksum+0x158>
            _zbar_decoder_buf_dump((void*)ean->buf, 18));
    if(chk != d) {
  40671c:	7bfa      	ldrb	r2, [r7, #15]
  40671e:	7b3b      	ldrb	r3, [r7, #12]
  406720:	429a      	cmp	r2, r3
  406722:	d002      	beq.n	40672a <ean_verify_checksum+0x156>
        dbprintf(1, "\nchecksum mismatch %d != %d (%s)\n",
  406724:	bf00      	nop
                 chk, d, dsprintbuf(ean));
        return(-1);
  406726:	23ff      	movs	r3, #255	; 0xff
  406728:	e000      	b.n	40672c <ean_verify_checksum+0x158>
    }
    return(0);
  40672a:	2300      	movs	r3, #0
  40672c:	b25b      	sxtb	r3, r3
}
  40672e:	4618      	mov	r0, r3
  406730:	3710      	adds	r7, #16
  406732:	46bd      	mov	sp, r7
  406734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406738:	200012d0 	.word	0x200012d0
  40673c:	00405759 	.word	0x00405759
  406740:	0043c6e8 	.word	0x0043c6e8
  406744:	0043c608 	.word	0x0043c608
  406748:	0043c5c4 	.word	0x0043c5c4
  40674c:	0043c594 	.word	0x0043c594
  406750:	0043413d 	.word	0x0043413d
  406754:	0043c64c 	.word	0x0043c64c
  406758:	0043c610 	.word	0x0043c610
  40675c:	0043c658 	.word	0x0043c658

00406760 <isbn10_calc_checksum>:

static inline unsigned char isbn10_calc_checksum (ean_decoder_t *ean)
{
  406760:	b5f0      	push	{r4, r5, r6, r7, lr}
  406762:	b08b      	sub	sp, #44	; 0x2c
  406764:	af06      	add	r7, sp, #24
  406766:	6078      	str	r0, [r7, #4]
    unsigned int chk = 0;
  406768:	2300      	movs	r3, #0
  40676a:	60fb      	str	r3, [r7, #12]
    unsigned char w;
    for(w = 10; w > 1; w--) {
  40676c:	230a      	movs	r3, #10
  40676e:	72fb      	strb	r3, [r7, #11]
  406770:	e033      	b.n	4067da <isbn10_calc_checksum+0x7a>
        unsigned char d = ean->buf[13 - w];
  406772:	7afb      	ldrb	r3, [r7, #11]
  406774:	f1c3 030d 	rsb	r3, r3, #13
  406778:	687a      	ldr	r2, [r7, #4]
  40677a:	4413      	add	r3, r2
  40677c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
  406780:	72bb      	strb	r3, [r7, #10]
        zassert(d < 10, '?', "w=%x d=%x chk=%x %s\n", w, d, chk,
  406782:	7abb      	ldrb	r3, [r7, #10]
  406784:	2b09      	cmp	r3, #9
  406786:	d91d      	bls.n	4067c4 <isbn10_calc_checksum+0x64>
  406788:	4b26      	ldr	r3, [pc, #152]	; (406824 <isbn10_calc_checksum+0xc4>)
  40678a:	681b      	ldr	r3, [r3, #0]
  40678c:	68de      	ldr	r6, [r3, #12]
  40678e:	7afd      	ldrb	r5, [r7, #11]
  406790:	7abc      	ldrb	r4, [r7, #10]
  406792:	687b      	ldr	r3, [r7, #4]
  406794:	3350      	adds	r3, #80	; 0x50
  406796:	4618      	mov	r0, r3
  406798:	2112      	movs	r1, #18
  40679a:	4b23      	ldr	r3, [pc, #140]	; (406828 <isbn10_calc_checksum+0xc8>)
  40679c:	4798      	blx	r3
  40679e:	4602      	mov	r2, r0
  4067a0:	4b22      	ldr	r3, [pc, #136]	; (40682c <isbn10_calc_checksum+0xcc>)
  4067a2:	9300      	str	r3, [sp, #0]
  4067a4:	4b22      	ldr	r3, [pc, #136]	; (406830 <isbn10_calc_checksum+0xd0>)
  4067a6:	9301      	str	r3, [sp, #4]
  4067a8:	9502      	str	r5, [sp, #8]
  4067aa:	9403      	str	r4, [sp, #12]
  4067ac:	68fb      	ldr	r3, [r7, #12]
  4067ae:	9304      	str	r3, [sp, #16]
  4067b0:	9205      	str	r2, [sp, #20]
  4067b2:	4630      	mov	r0, r6
  4067b4:	491f      	ldr	r1, [pc, #124]	; (406834 <isbn10_calc_checksum+0xd4>)
  4067b6:	4a20      	ldr	r2, [pc, #128]	; (406838 <isbn10_calc_checksum+0xd8>)
  4067b8:	f240 232a 	movw	r3, #554	; 0x22a
  4067bc:	4c1f      	ldr	r4, [pc, #124]	; (40683c <isbn10_calc_checksum+0xdc>)
  4067be:	47a0      	blx	r4
  4067c0:	233f      	movs	r3, #63	; 0x3f
  4067c2:	e02b      	b.n	40681c <isbn10_calc_checksum+0xbc>
                _zbar_decoder_buf_dump((void*)ean->buf, 18));
        chk += d * w;
  4067c4:	7abb      	ldrb	r3, [r7, #10]
  4067c6:	7afa      	ldrb	r2, [r7, #11]
  4067c8:	fb02 f303 	mul.w	r3, r2, r3
  4067cc:	461a      	mov	r2, r3
  4067ce:	68fb      	ldr	r3, [r7, #12]
  4067d0:	4413      	add	r3, r2
  4067d2:	60fb      	str	r3, [r7, #12]

static inline unsigned char isbn10_calc_checksum (ean_decoder_t *ean)
{
    unsigned int chk = 0;
    unsigned char w;
    for(w = 10; w > 1; w--) {
  4067d4:	7afb      	ldrb	r3, [r7, #11]
  4067d6:	3b01      	subs	r3, #1
  4067d8:	72fb      	strb	r3, [r7, #11]
  4067da:	7afb      	ldrb	r3, [r7, #11]
  4067dc:	2b01      	cmp	r3, #1
  4067de:	d8c8      	bhi.n	406772 <isbn10_calc_checksum+0x12>
        unsigned char d = ean->buf[13 - w];
        zassert(d < 10, '?', "w=%x d=%x chk=%x %s\n", w, d, chk,
                _zbar_decoder_buf_dump((void*)ean->buf, 18));
        chk += d * w;
    }
    chk = chk % 11;
  4067e0:	68f9      	ldr	r1, [r7, #12]
  4067e2:	4b17      	ldr	r3, [pc, #92]	; (406840 <isbn10_calc_checksum+0xe0>)
  4067e4:	fba3 2301 	umull	r2, r3, r3, r1
  4067e8:	08da      	lsrs	r2, r3, #3
  4067ea:	4613      	mov	r3, r2
  4067ec:	009b      	lsls	r3, r3, #2
  4067ee:	4413      	add	r3, r2
  4067f0:	005b      	lsls	r3, r3, #1
  4067f2:	4413      	add	r3, r2
  4067f4:	1acb      	subs	r3, r1, r3
  4067f6:	60fb      	str	r3, [r7, #12]
    if(!chk)
  4067f8:	68fb      	ldr	r3, [r7, #12]
  4067fa:	2b00      	cmp	r3, #0
  4067fc:	d101      	bne.n	406802 <isbn10_calc_checksum+0xa2>
        return('0');
  4067fe:	2330      	movs	r3, #48	; 0x30
  406800:	e00c      	b.n	40681c <isbn10_calc_checksum+0xbc>
    chk = 11 - chk;
  406802:	68fb      	ldr	r3, [r7, #12]
  406804:	f1c3 030b 	rsb	r3, r3, #11
  406808:	60fb      	str	r3, [r7, #12]
    if(chk < 10)
  40680a:	68fb      	ldr	r3, [r7, #12]
  40680c:	2b09      	cmp	r3, #9
  40680e:	d804      	bhi.n	40681a <isbn10_calc_checksum+0xba>
        return(chk + '0');
  406810:	68fb      	ldr	r3, [r7, #12]
  406812:	b2db      	uxtb	r3, r3
  406814:	3330      	adds	r3, #48	; 0x30
  406816:	b2db      	uxtb	r3, r3
  406818:	e000      	b.n	40681c <isbn10_calc_checksum+0xbc>
    return('X');
  40681a:	2358      	movs	r3, #88	; 0x58
}
  40681c:	4618      	mov	r0, r3
  40681e:	3714      	adds	r7, #20
  406820:	46bd      	mov	sp, r7
  406822:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406824:	200012d0 	.word	0x200012d0
  406828:	00405759 	.word	0x00405759
  40682c:	0043c6fc 	.word	0x0043c6fc
  406830:	0043c608 	.word	0x0043c608
  406834:	0043c69c 	.word	0x0043c69c
  406838:	0043c594 	.word	0x0043c594
  40683c:	0043413d 	.word	0x0043413d
  406840:	ba2e8ba3 	.word	0xba2e8ba3

00406844 <ean_expand_upce>:

static inline void ean_expand_upce (ean_decoder_t *ean,
                                    ean_pass_t *pass)
{
  406844:	b480      	push	{r7}
  406846:	b085      	sub	sp, #20
  406848:	af00      	add	r7, sp, #0
  40684a:	6078      	str	r0, [r7, #4]
  40684c:	6039      	str	r1, [r7, #0]
    int i = 0;
  40684e:	2300      	movs	r3, #0
  406850:	60fb      	str	r3, [r7, #12]
    unsigned char decode;
    /* parity encoded digit is checksum */
    ean->buf[12] = pass->raw[i++];
  406852:	68fb      	ldr	r3, [r7, #12]
  406854:	1c5a      	adds	r2, r3, #1
  406856:	60fa      	str	r2, [r7, #12]
  406858:	683a      	ldr	r2, [r7, #0]
  40685a:	4413      	add	r3, r2
  40685c:	7a1b      	ldrb	r3, [r3, #8]
  40685e:	b2da      	uxtb	r2, r3
  406860:	687b      	ldr	r3, [r7, #4]
  406862:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    decode = pass->raw[6] & 0xf;
  406866:	683b      	ldr	r3, [r7, #0]
  406868:	7b9b      	ldrb	r3, [r3, #14]
  40686a:	f003 030f 	and.w	r3, r3, #15
  40686e:	72fb      	strb	r3, [r7, #11]
    ean->buf[0] = 0;
  406870:	687b      	ldr	r3, [r7, #4]
  406872:	2200      	movs	r2, #0
  406874:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
    ean->buf[1] = 0;
  406878:	687b      	ldr	r3, [r7, #4]
  40687a:	2200      	movs	r2, #0
  40687c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    ean->buf[2] = pass->raw[i++] & 0xf;
  406880:	68fb      	ldr	r3, [r7, #12]
  406882:	1c5a      	adds	r2, r3, #1
  406884:	60fa      	str	r2, [r7, #12]
  406886:	683a      	ldr	r2, [r7, #0]
  406888:	4413      	add	r3, r2
  40688a:	7a1b      	ldrb	r3, [r3, #8]
  40688c:	b2db      	uxtb	r3, r3
  40688e:	f003 030f 	and.w	r3, r3, #15
  406892:	b2da      	uxtb	r2, r3
  406894:	687b      	ldr	r3, [r7, #4]
  406896:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
    ean->buf[3] = pass->raw[i++] & 0xf;
  40689a:	68fb      	ldr	r3, [r7, #12]
  40689c:	1c5a      	adds	r2, r3, #1
  40689e:	60fa      	str	r2, [r7, #12]
  4068a0:	683a      	ldr	r2, [r7, #0]
  4068a2:	4413      	add	r3, r2
  4068a4:	7a1b      	ldrb	r3, [r3, #8]
  4068a6:	b2db      	uxtb	r3, r3
  4068a8:	f003 030f 	and.w	r3, r3, #15
  4068ac:	b2da      	uxtb	r2, r3
  4068ae:	687b      	ldr	r3, [r7, #4]
  4068b0:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
    ean->buf[4] = (decode < 3) ? decode : pass->raw[i++] & 0xf;
  4068b4:	7afb      	ldrb	r3, [r7, #11]
  4068b6:	2b02      	cmp	r3, #2
  4068b8:	d801      	bhi.n	4068be <ean_expand_upce+0x7a>
  4068ba:	7afb      	ldrb	r3, [r7, #11]
  4068bc:	e009      	b.n	4068d2 <ean_expand_upce+0x8e>
  4068be:	68fb      	ldr	r3, [r7, #12]
  4068c0:	1c5a      	adds	r2, r3, #1
  4068c2:	60fa      	str	r2, [r7, #12]
  4068c4:	683a      	ldr	r2, [r7, #0]
  4068c6:	4413      	add	r3, r2
  4068c8:	7a1b      	ldrb	r3, [r3, #8]
  4068ca:	b2db      	uxtb	r3, r3
  4068cc:	f003 030f 	and.w	r3, r3, #15
  4068d0:	b2db      	uxtb	r3, r3
  4068d2:	687a      	ldr	r2, [r7, #4]
  4068d4:	f882 3054 	strb.w	r3, [r2, #84]	; 0x54
    ean->buf[5] = (decode < 4) ? 0 : pass->raw[i++] & 0xf;
  4068d8:	7afb      	ldrb	r3, [r7, #11]
  4068da:	2b03      	cmp	r3, #3
  4068dc:	d90a      	bls.n	4068f4 <ean_expand_upce+0xb0>
  4068de:	68fb      	ldr	r3, [r7, #12]
  4068e0:	1c5a      	adds	r2, r3, #1
  4068e2:	60fa      	str	r2, [r7, #12]
  4068e4:	683a      	ldr	r2, [r7, #0]
  4068e6:	4413      	add	r3, r2
  4068e8:	7a1b      	ldrb	r3, [r3, #8]
  4068ea:	b2db      	uxtb	r3, r3
  4068ec:	f003 030f 	and.w	r3, r3, #15
  4068f0:	b2da      	uxtb	r2, r3
  4068f2:	e000      	b.n	4068f6 <ean_expand_upce+0xb2>
  4068f4:	2200      	movs	r2, #0
  4068f6:	687b      	ldr	r3, [r7, #4]
  4068f8:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
    ean->buf[6] = (decode < 5) ? 0 : pass->raw[i++] & 0xf;
  4068fc:	7afb      	ldrb	r3, [r7, #11]
  4068fe:	2b04      	cmp	r3, #4
  406900:	d90a      	bls.n	406918 <ean_expand_upce+0xd4>
  406902:	68fb      	ldr	r3, [r7, #12]
  406904:	1c5a      	adds	r2, r3, #1
  406906:	60fa      	str	r2, [r7, #12]
  406908:	683a      	ldr	r2, [r7, #0]
  40690a:	4413      	add	r3, r2
  40690c:	7a1b      	ldrb	r3, [r3, #8]
  40690e:	b2db      	uxtb	r3, r3
  406910:	f003 030f 	and.w	r3, r3, #15
  406914:	b2da      	uxtb	r2, r3
  406916:	e000      	b.n	40691a <ean_expand_upce+0xd6>
  406918:	2200      	movs	r2, #0
  40691a:	687b      	ldr	r3, [r7, #4]
  40691c:	f883 2056 	strb.w	r2, [r3, #86]	; 0x56
    ean->buf[7] = 0;
  406920:	687b      	ldr	r3, [r7, #4]
  406922:	2200      	movs	r2, #0
  406924:	f883 2057 	strb.w	r2, [r3, #87]	; 0x57
    ean->buf[8] = 0;
  406928:	687b      	ldr	r3, [r7, #4]
  40692a:	2200      	movs	r2, #0
  40692c:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
    ean->buf[9] = (decode < 3) ? pass->raw[i++] & 0xf : 0;
  406930:	7afb      	ldrb	r3, [r7, #11]
  406932:	2b02      	cmp	r3, #2
  406934:	d80a      	bhi.n	40694c <ean_expand_upce+0x108>
  406936:	68fb      	ldr	r3, [r7, #12]
  406938:	1c5a      	adds	r2, r3, #1
  40693a:	60fa      	str	r2, [r7, #12]
  40693c:	683a      	ldr	r2, [r7, #0]
  40693e:	4413      	add	r3, r2
  406940:	7a1b      	ldrb	r3, [r3, #8]
  406942:	b2db      	uxtb	r3, r3
  406944:	f003 030f 	and.w	r3, r3, #15
  406948:	b2da      	uxtb	r2, r3
  40694a:	e000      	b.n	40694e <ean_expand_upce+0x10a>
  40694c:	2200      	movs	r2, #0
  40694e:	687b      	ldr	r3, [r7, #4]
  406950:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
    ean->buf[10] = (decode < 4) ? pass->raw[i++] & 0xf : 0;
  406954:	7afb      	ldrb	r3, [r7, #11]
  406956:	2b03      	cmp	r3, #3
  406958:	d80a      	bhi.n	406970 <ean_expand_upce+0x12c>
  40695a:	68fb      	ldr	r3, [r7, #12]
  40695c:	1c5a      	adds	r2, r3, #1
  40695e:	60fa      	str	r2, [r7, #12]
  406960:	683a      	ldr	r2, [r7, #0]
  406962:	4413      	add	r3, r2
  406964:	7a1b      	ldrb	r3, [r3, #8]
  406966:	b2db      	uxtb	r3, r3
  406968:	f003 030f 	and.w	r3, r3, #15
  40696c:	b2da      	uxtb	r2, r3
  40696e:	e000      	b.n	406972 <ean_expand_upce+0x12e>
  406970:	2200      	movs	r2, #0
  406972:	687b      	ldr	r3, [r7, #4]
  406974:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
    ean->buf[11] = (decode < 5) ? pass->raw[i] & 0xf : decode;
  406978:	7afb      	ldrb	r3, [r7, #11]
  40697a:	2b04      	cmp	r3, #4
  40697c:	d809      	bhi.n	406992 <ean_expand_upce+0x14e>
  40697e:	683a      	ldr	r2, [r7, #0]
  406980:	68fb      	ldr	r3, [r7, #12]
  406982:	4413      	add	r3, r2
  406984:	3308      	adds	r3, #8
  406986:	781b      	ldrb	r3, [r3, #0]
  406988:	b2db      	uxtb	r3, r3
  40698a:	f003 030f 	and.w	r3, r3, #15
  40698e:	b2db      	uxtb	r3, r3
  406990:	e000      	b.n	406994 <ean_expand_upce+0x150>
  406992:	7afb      	ldrb	r3, [r7, #11]
  406994:	687a      	ldr	r2, [r7, #4]
  406996:	f882 305b 	strb.w	r3, [r2, #91]	; 0x5b
}
  40699a:	3714      	adds	r7, #20
  40699c:	46bd      	mov	sp, r7
  40699e:	f85d 7b04 	ldr.w	r7, [sp], #4
  4069a2:	4770      	bx	lr

004069a4 <integrate_partial>:

static inline zbar_symbol_type_t integrate_partial (ean_decoder_t *ean,
                                                    ean_pass_t *pass,
                                                    zbar_symbol_type_t part)
{
  4069a4:	b580      	push	{r7, lr}
  4069a6:	b086      	sub	sp, #24
  4069a8:	af00      	add	r7, sp, #0
  4069aa:	60f8      	str	r0, [r7, #12]
  4069ac:	60b9      	str	r1, [r7, #8]
  4069ae:	4613      	mov	r3, r2
  4069b0:	80fb      	strh	r3, [r7, #6]
    /* copy raw data into holding buffer */
    /* if same partial is not consistent, reset others */
    dbprintf(2, " integrate part=%x (%s)", part, dsprintbuf(ean));
  4069b2:	bf00      	nop
    signed char i, j;

    if((ean->left && ((part & ZBAR_SYMBOL) != ean->left)) ||
  4069b4:	68fb      	ldr	r3, [r7, #12]
  4069b6:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
  4069ba:	2b00      	cmp	r3, #0
  4069bc:	d006      	beq.n	4069cc <integrate_partial+0x28>
  4069be:	88fb      	ldrh	r3, [r7, #6]
  4069c0:	b2db      	uxtb	r3, r3
  4069c2:	68fa      	ldr	r2, [r7, #12]
  4069c4:	f8b2 2040 	ldrh.w	r2, [r2, #64]	; 0x40
  4069c8:	4293      	cmp	r3, r2
  4069ca:	d10b      	bne.n	4069e4 <integrate_partial+0x40>
       (ean->right && ((part & ZBAR_SYMBOL) != ean->right))) {
  4069cc:	68fb      	ldr	r3, [r7, #12]
  4069ce:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
    /* copy raw data into holding buffer */
    /* if same partial is not consistent, reset others */
    dbprintf(2, " integrate part=%x (%s)", part, dsprintbuf(ean));
    signed char i, j;

    if((ean->left && ((part & ZBAR_SYMBOL) != ean->left)) ||
  4069d2:	2b00      	cmp	r3, #0
  4069d4:	d011      	beq.n	4069fa <integrate_partial+0x56>
       (ean->right && ((part & ZBAR_SYMBOL) != ean->right))) {
  4069d6:	88fb      	ldrh	r3, [r7, #6]
  4069d8:	b2db      	uxtb	r3, r3
  4069da:	68fa      	ldr	r2, [r7, #12]
  4069dc:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
  4069e0:	4293      	cmp	r3, r2
  4069e2:	d00a      	beq.n	4069fa <integrate_partial+0x56>
        /* partial mismatch - reset collected parts */
        dbprintf(2, " rst(type %x %x)", ean->left, ean->right);
  4069e4:	bf00      	nop
        ean->left = ean->right = ZBAR_NONE;
  4069e6:	68fb      	ldr	r3, [r7, #12]
  4069e8:	2200      	movs	r2, #0
  4069ea:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
  4069ee:	68fb      	ldr	r3, [r7, #12]
  4069f0:	f8b3 2042 	ldrh.w	r2, [r3, #66]	; 0x42
  4069f4:	68fb      	ldr	r3, [r7, #12]
  4069f6:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    }

    if((ean->left || ean->right) &&
  4069fa:	68fb      	ldr	r3, [r7, #12]
  4069fc:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
  406a00:	2b00      	cmp	r3, #0
  406a02:	d104      	bne.n	406a0e <integrate_partial+0x6a>
  406a04:	68fb      	ldr	r3, [r7, #12]
  406a06:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
  406a0a:	2b00      	cmp	r3, #0
  406a0c:	d015      	beq.n	406a3a <integrate_partial+0x96>
       !check_width(ean->width, pass->width)) {
  406a0e:	68fb      	ldr	r3, [r7, #12]
  406a10:	6cda      	ldr	r2, [r3, #76]	; 0x4c
  406a12:	68bb      	ldr	r3, [r7, #8]
  406a14:	685b      	ldr	r3, [r3, #4]
  406a16:	4610      	mov	r0, r2
  406a18:	4619      	mov	r1, r3
  406a1a:	4ba9      	ldr	r3, [pc, #676]	; (406cc0 <integrate_partial+0x31c>)
  406a1c:	4798      	blx	r3
  406a1e:	4603      	mov	r3, r0
        /* partial mismatch - reset collected parts */
        dbprintf(2, " rst(type %x %x)", ean->left, ean->right);
        ean->left = ean->right = ZBAR_NONE;
    }

    if((ean->left || ean->right) &&
  406a20:	2b00      	cmp	r3, #0
  406a22:	d10a      	bne.n	406a3a <integrate_partial+0x96>
       !check_width(ean->width, pass->width)) {
      dbprintf(2, " rst(width %d)", pass->width);
  406a24:	bf00      	nop
      ean->left = ean->right = ZBAR_NONE;
  406a26:	68fb      	ldr	r3, [r7, #12]
  406a28:	2200      	movs	r2, #0
  406a2a:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
  406a2e:	68fb      	ldr	r3, [r7, #12]
  406a30:	f8b3 2042 	ldrh.w	r2, [r3, #66]	; 0x42
  406a34:	68fb      	ldr	r3, [r7, #12]
  406a36:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    }


    if(part & EAN_RIGHT) {
  406a3a:	88fb      	ldrh	r3, [r7, #6]
  406a3c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  406a40:	2b00      	cmp	r3, #0
  406a42:	d04f      	beq.n	406ae4 <integrate_partial+0x140>
        part &= ZBAR_SYMBOL;
  406a44:	88fb      	ldrh	r3, [r7, #6]
  406a46:	b2db      	uxtb	r3, r3
  406a48:	80fb      	strh	r3, [r7, #6]
        j = part - 1;
  406a4a:	88fb      	ldrh	r3, [r7, #6]
  406a4c:	b2db      	uxtb	r3, r3
  406a4e:	3b01      	subs	r3, #1
  406a50:	b2db      	uxtb	r3, r3
  406a52:	75bb      	strb	r3, [r7, #22]
        for(i = part >> 1; i; i--, j--) {
  406a54:	88fb      	ldrh	r3, [r7, #6]
  406a56:	085b      	lsrs	r3, r3, #1
  406a58:	b29b      	uxth	r3, r3
  406a5a:	75fb      	strb	r3, [r7, #23]
  406a5c:	e033      	b.n	406ac6 <integrate_partial+0x122>
            unsigned char digit = pass->raw[i] & 0xf;
  406a5e:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406a62:	68ba      	ldr	r2, [r7, #8]
  406a64:	4413      	add	r3, r2
  406a66:	7a1b      	ldrb	r3, [r3, #8]
  406a68:	f003 030f 	and.w	r3, r3, #15
  406a6c:	757b      	strb	r3, [r7, #21]
            if(ean->right && ean->buf[j] != digit) {
  406a6e:	68fb      	ldr	r3, [r7, #12]
  406a70:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
  406a74:	2b00      	cmp	r3, #0
  406a76:	d014      	beq.n	406aa2 <integrate_partial+0xfe>
  406a78:	f997 3016 	ldrsb.w	r3, [r7, #22]
  406a7c:	68fa      	ldr	r2, [r7, #12]
  406a7e:	4413      	add	r3, r2
  406a80:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
  406a84:	b25a      	sxtb	r2, r3
  406a86:	7d7b      	ldrb	r3, [r7, #21]
  406a88:	429a      	cmp	r2, r3
  406a8a:	d00a      	beq.n	406aa2 <integrate_partial+0xfe>
                /* partial mismatch - reset collected parts */
                dbprintf(2, " rst(right)");
  406a8c:	bf00      	nop
                ean->left = ean->right = ZBAR_NONE;
  406a8e:	68fb      	ldr	r3, [r7, #12]
  406a90:	2200      	movs	r2, #0
  406a92:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
  406a96:	68fb      	ldr	r3, [r7, #12]
  406a98:	f8b3 2042 	ldrh.w	r2, [r3, #66]	; 0x42
  406a9c:	68fb      	ldr	r3, [r7, #12]
  406a9e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
            }
            ean->buf[j] = digit;
  406aa2:	f997 3016 	ldrsb.w	r3, [r7, #22]
  406aa6:	7d79      	ldrb	r1, [r7, #21]
  406aa8:	68fa      	ldr	r2, [r7, #12]
  406aaa:	4413      	add	r3, r2
  406aac:	460a      	mov	r2, r1
  406aae:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50


    if(part & EAN_RIGHT) {
        part &= ZBAR_SYMBOL;
        j = part - 1;
        for(i = part >> 1; i; i--, j--) {
  406ab2:	7dfb      	ldrb	r3, [r7, #23]
  406ab4:	b2db      	uxtb	r3, r3
  406ab6:	3b01      	subs	r3, #1
  406ab8:	b2db      	uxtb	r3, r3
  406aba:	75fb      	strb	r3, [r7, #23]
  406abc:	7dbb      	ldrb	r3, [r7, #22]
  406abe:	b2db      	uxtb	r3, r3
  406ac0:	3b01      	subs	r3, #1
  406ac2:	b2db      	uxtb	r3, r3
  406ac4:	75bb      	strb	r3, [r7, #22]
  406ac6:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406aca:	2b00      	cmp	r3, #0
  406acc:	d1c7      	bne.n	406a5e <integrate_partial+0xba>
                dbprintf(2, " rst(right)");
                ean->left = ean->right = ZBAR_NONE;
            }
            ean->buf[j] = digit;
        }
        ean->right = part;
  406ace:	68fb      	ldr	r3, [r7, #12]
  406ad0:	88fa      	ldrh	r2, [r7, #6]
  406ad2:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
        part &= ean->left;  /* FIXME!? */
  406ad6:	68fb      	ldr	r3, [r7, #12]
  406ad8:	f8b3 2040 	ldrh.w	r2, [r3, #64]	; 0x40
  406adc:	88fb      	ldrh	r3, [r7, #6]
  406ade:	4013      	ands	r3, r2
  406ae0:	80fb      	strh	r3, [r7, #6]
  406ae2:	e07a      	b.n	406bda <integrate_partial+0x236>
    }
    else if(part == ZBAR_EAN13 || part == ZBAR_EAN8) /* EAN_LEFT */ {
  406ae4:	88fb      	ldrh	r3, [r7, #6]
  406ae6:	2b0d      	cmp	r3, #13
  406ae8:	d002      	beq.n	406af0 <integrate_partial+0x14c>
  406aea:	88fb      	ldrh	r3, [r7, #6]
  406aec:	2b08      	cmp	r3, #8
  406aee:	d14b      	bne.n	406b88 <integrate_partial+0x1e4>
        j = (part - 1) >> 1;
  406af0:	88fb      	ldrh	r3, [r7, #6]
  406af2:	3b01      	subs	r3, #1
  406af4:	105b      	asrs	r3, r3, #1
  406af6:	75bb      	strb	r3, [r7, #22]
        for(i = part >> 1; j >= 0; i--, j--) {
  406af8:	88fb      	ldrh	r3, [r7, #6]
  406afa:	085b      	lsrs	r3, r3, #1
  406afc:	b29b      	uxth	r3, r3
  406afe:	75fb      	strb	r3, [r7, #23]
  406b00:	e033      	b.n	406b6a <integrate_partial+0x1c6>
            unsigned char digit = pass->raw[i] & 0xf;
  406b02:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406b06:	68ba      	ldr	r2, [r7, #8]
  406b08:	4413      	add	r3, r2
  406b0a:	7a1b      	ldrb	r3, [r3, #8]
  406b0c:	f003 030f 	and.w	r3, r3, #15
  406b10:	753b      	strb	r3, [r7, #20]
            if(ean->left && ean->buf[j] != digit) {
  406b12:	68fb      	ldr	r3, [r7, #12]
  406b14:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
  406b18:	2b00      	cmp	r3, #0
  406b1a:	d014      	beq.n	406b46 <integrate_partial+0x1a2>
  406b1c:	f997 3016 	ldrsb.w	r3, [r7, #22]
  406b20:	68fa      	ldr	r2, [r7, #12]
  406b22:	4413      	add	r3, r2
  406b24:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
  406b28:	b25a      	sxtb	r2, r3
  406b2a:	7d3b      	ldrb	r3, [r7, #20]
  406b2c:	429a      	cmp	r2, r3
  406b2e:	d00a      	beq.n	406b46 <integrate_partial+0x1a2>
                /* partial mismatch - reset collected parts */
                dbprintf(2, " rst(left)");
  406b30:	bf00      	nop
                ean->left = ean->right = ZBAR_NONE;
  406b32:	68fb      	ldr	r3, [r7, #12]
  406b34:	2200      	movs	r2, #0
  406b36:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
  406b3a:	68fb      	ldr	r3, [r7, #12]
  406b3c:	f8b3 2042 	ldrh.w	r2, [r3, #66]	; 0x42
  406b40:	68fb      	ldr	r3, [r7, #12]
  406b42:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
            }
            ean->buf[j] = digit;
  406b46:	f997 3016 	ldrsb.w	r3, [r7, #22]
  406b4a:	7d39      	ldrb	r1, [r7, #20]
  406b4c:	68fa      	ldr	r2, [r7, #12]
  406b4e:	4413      	add	r3, r2
  406b50:	460a      	mov	r2, r1
  406b52:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
        ean->right = part;
        part &= ean->left;  /* FIXME!? */
    }
    else if(part == ZBAR_EAN13 || part == ZBAR_EAN8) /* EAN_LEFT */ {
        j = (part - 1) >> 1;
        for(i = part >> 1; j >= 0; i--, j--) {
  406b56:	7dfb      	ldrb	r3, [r7, #23]
  406b58:	b2db      	uxtb	r3, r3
  406b5a:	3b01      	subs	r3, #1
  406b5c:	b2db      	uxtb	r3, r3
  406b5e:	75fb      	strb	r3, [r7, #23]
  406b60:	7dbb      	ldrb	r3, [r7, #22]
  406b62:	b2db      	uxtb	r3, r3
  406b64:	3b01      	subs	r3, #1
  406b66:	b2db      	uxtb	r3, r3
  406b68:	75bb      	strb	r3, [r7, #22]
  406b6a:	f997 3016 	ldrsb.w	r3, [r7, #22]
  406b6e:	2b00      	cmp	r3, #0
  406b70:	dac7      	bge.n	406b02 <integrate_partial+0x15e>
                dbprintf(2, " rst(left)");
                ean->left = ean->right = ZBAR_NONE;
            }
            ean->buf[j] = digit;
        }
        ean->left = part;
  406b72:	68fb      	ldr	r3, [r7, #12]
  406b74:	88fa      	ldrh	r2, [r7, #6]
  406b76:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
        part &= ean->right;  /* FIXME!? */
  406b7a:	68fb      	ldr	r3, [r7, #12]
  406b7c:	f8b3 2042 	ldrh.w	r2, [r3, #66]	; 0x42
  406b80:	88fb      	ldrh	r3, [r7, #6]
  406b82:	4013      	ands	r3, r2
  406b84:	80fb      	strh	r3, [r7, #6]
  406b86:	e028      	b.n	406bda <integrate_partial+0x236>
    }
    else if(part != ZBAR_UPCE) /* add-ons */ {
  406b88:	88fb      	ldrh	r3, [r7, #6]
  406b8a:	2b09      	cmp	r3, #9
  406b8c:	d021      	beq.n	406bd2 <integrate_partial+0x22e>
        for(i = part; i > 0; i--)
  406b8e:	88fb      	ldrh	r3, [r7, #6]
  406b90:	75fb      	strb	r3, [r7, #23]
  406b92:	e015      	b.n	406bc0 <integrate_partial+0x21c>
            ean->buf[i - 1] = pass->raw[i] & 0xf;
  406b94:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406b98:	3b01      	subs	r3, #1
  406b9a:	f997 2017 	ldrsb.w	r2, [r7, #23]
  406b9e:	68b9      	ldr	r1, [r7, #8]
  406ba0:	440a      	add	r2, r1
  406ba2:	7a12      	ldrb	r2, [r2, #8]
  406ba4:	b2d2      	uxtb	r2, r2
  406ba6:	f002 020f 	and.w	r2, r2, #15
  406baa:	b2d1      	uxtb	r1, r2
  406bac:	68fa      	ldr	r2, [r7, #12]
  406bae:	4413      	add	r3, r2
  406bb0:	460a      	mov	r2, r1
  406bb2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
        }
        ean->left = part;
        part &= ean->right;  /* FIXME!? */
    }
    else if(part != ZBAR_UPCE) /* add-ons */ {
        for(i = part; i > 0; i--)
  406bb6:	7dfb      	ldrb	r3, [r7, #23]
  406bb8:	b2db      	uxtb	r3, r3
  406bba:	3b01      	subs	r3, #1
  406bbc:	b2db      	uxtb	r3, r3
  406bbe:	75fb      	strb	r3, [r7, #23]
  406bc0:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406bc4:	2b00      	cmp	r3, #0
  406bc6:	dce5      	bgt.n	406b94 <integrate_partial+0x1f0>
            ean->buf[i - 1] = pass->raw[i] & 0xf;
        ean->left = part;
  406bc8:	68fb      	ldr	r3, [r7, #12]
  406bca:	88fa      	ldrh	r2, [r7, #6]
  406bcc:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  406bd0:	e003      	b.n	406bda <integrate_partial+0x236>
    }
    else
        ean_expand_upce(ean, pass);
  406bd2:	68f8      	ldr	r0, [r7, #12]
  406bd4:	68b9      	ldr	r1, [r7, #8]
  406bd6:	4b3b      	ldr	r3, [pc, #236]	; (406cc4 <integrate_partial+0x320>)
  406bd8:	4798      	blx	r3

    ean->width = pass->width;
  406bda:	68bb      	ldr	r3, [r7, #8]
  406bdc:	685a      	ldr	r2, [r3, #4]
  406bde:	68fb      	ldr	r3, [r7, #12]
  406be0:	64da      	str	r2, [r3, #76]	; 0x4c

    if(!part)
  406be2:	88fb      	ldrh	r3, [r7, #6]
  406be4:	2b00      	cmp	r3, #0
  406be6:	d101      	bne.n	406bec <integrate_partial+0x248>
        part = ZBAR_PARTIAL;
  406be8:	2301      	movs	r3, #1
  406bea:	80fb      	strh	r3, [r7, #6]

    if(((part == ZBAR_EAN13 ||
  406bec:	88fb      	ldrh	r3, [r7, #6]
  406bee:	2b0d      	cmp	r3, #13
  406bf0:	d002      	beq.n	406bf8 <integrate_partial+0x254>
  406bf2:	88fb      	ldrh	r3, [r7, #6]
  406bf4:	2b09      	cmp	r3, #9
  406bf6:	d106      	bne.n	406c06 <integrate_partial+0x262>
         part == ZBAR_UPCE) && ean_verify_checksum(ean, 12)) ||
  406bf8:	68f8      	ldr	r0, [r7, #12]
  406bfa:	210c      	movs	r1, #12
  406bfc:	4b32      	ldr	r3, [pc, #200]	; (406cc8 <integrate_partial+0x324>)
  406bfe:	4798      	blx	r3
  406c00:	4603      	mov	r3, r0
  406c02:	2b00      	cmp	r3, #0
  406c04:	d109      	bne.n	406c1a <integrate_partial+0x276>
  406c06:	88fb      	ldrh	r3, [r7, #6]
  406c08:	2b08      	cmp	r3, #8
  406c0a:	d116      	bne.n	406c3a <integrate_partial+0x296>
       (part == ZBAR_EAN8 && ean_verify_checksum(ean, 7))) {
  406c0c:	68f8      	ldr	r0, [r7, #12]
  406c0e:	2107      	movs	r1, #7
  406c10:	4b2d      	ldr	r3, [pc, #180]	; (406cc8 <integrate_partial+0x324>)
  406c12:	4798      	blx	r3
  406c14:	4603      	mov	r3, r0
  406c16:	2b00      	cmp	r3, #0
  406c18:	d00f      	beq.n	406c3a <integrate_partial+0x296>
        /* invalid checksum */
        if(ean->right)
  406c1a:	68fb      	ldr	r3, [r7, #12]
  406c1c:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
  406c20:	2b00      	cmp	r3, #0
  406c22:	d004      	beq.n	406c2e <integrate_partial+0x28a>
	  ean->left = ZBAR_NONE;
  406c24:	68fb      	ldr	r3, [r7, #12]
  406c26:	2200      	movs	r2, #0
  406c28:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  406c2c:	e003      	b.n	406c36 <integrate_partial+0x292>
        else
	  ean->right = ZBAR_NONE;
  406c2e:	68fb      	ldr	r3, [r7, #12]
  406c30:	2200      	movs	r2, #0
  406c32:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
        part = ZBAR_NONE;
  406c36:	2300      	movs	r3, #0
  406c38:	80fb      	strh	r3, [r7, #6]
    }

    if(part == ZBAR_EAN13) {
  406c3a:	88fb      	ldrh	r3, [r7, #6]
  406c3c:	2b0d      	cmp	r3, #13
  406c3e:	d145      	bne.n	406ccc <integrate_partial+0x328>
        /* special case EAN-13 subsets */
        if(!ean->buf[0] && TEST_CFG(ean->upca_config, ZBAR_CFG_ENABLE))
  406c40:	68fb      	ldr	r3, [r7, #12]
  406c42:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
  406c46:	2b00      	cmp	r3, #0
  406c48:	d108      	bne.n	406c5c <integrate_partial+0x2b8>
  406c4a:	68fb      	ldr	r3, [r7, #12]
  406c4c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
  406c4e:	f003 0301 	and.w	r3, r3, #1
  406c52:	2b00      	cmp	r3, #0
  406c54:	d002      	beq.n	406c5c <integrate_partial+0x2b8>
            part = ZBAR_UPCA;
  406c56:	230c      	movs	r3, #12
  406c58:	80fb      	strh	r3, [r7, #6]
  406c5a:	e030      	b.n	406cbe <integrate_partial+0x31a>
        else if(ean->buf[0] == 9 && ean->buf[1] == 7) {
  406c5c:	68fb      	ldr	r3, [r7, #12]
  406c5e:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
  406c62:	b25b      	sxtb	r3, r3
  406c64:	2b09      	cmp	r3, #9
  406c66:	f040 8083 	bne.w	406d70 <integrate_partial+0x3cc>
  406c6a:	68fb      	ldr	r3, [r7, #12]
  406c6c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
  406c70:	b25b      	sxtb	r3, r3
  406c72:	2b07      	cmp	r3, #7
  406c74:	d17c      	bne.n	406d70 <integrate_partial+0x3cc>
            /* ISBN-10 has priority over ISBN-13(?) */
            if(ean->buf[2] == 8 &&
  406c76:	68fb      	ldr	r3, [r7, #12]
  406c78:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
  406c7c:	b25b      	sxtb	r3, r3
  406c7e:	2b08      	cmp	r3, #8
  406c80:	d108      	bne.n	406c94 <integrate_partial+0x2f0>
               TEST_CFG(ean->isbn10_config, ZBAR_CFG_ENABLE))
  406c82:	68fb      	ldr	r3, [r7, #12]
  406c84:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  406c86:	f003 0301 	and.w	r3, r3, #1
        /* special case EAN-13 subsets */
        if(!ean->buf[0] && TEST_CFG(ean->upca_config, ZBAR_CFG_ENABLE))
            part = ZBAR_UPCA;
        else if(ean->buf[0] == 9 && ean->buf[1] == 7) {
            /* ISBN-10 has priority over ISBN-13(?) */
            if(ean->buf[2] == 8 &&
  406c8a:	2b00      	cmp	r3, #0
  406c8c:	d002      	beq.n	406c94 <integrate_partial+0x2f0>
               TEST_CFG(ean->isbn10_config, ZBAR_CFG_ENABLE))
                part = ZBAR_ISBN10;
  406c8e:	230a      	movs	r3, #10
  406c90:	80fb      	strh	r3, [r7, #6]
  406c92:	e014      	b.n	406cbe <integrate_partial+0x31a>
            else if((ean->buf[2] == 8 || ean->buf[2] == 9) &&
  406c94:	68fb      	ldr	r3, [r7, #12]
  406c96:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
  406c9a:	b25b      	sxtb	r3, r3
  406c9c:	2b08      	cmp	r3, #8
  406c9e:	d005      	beq.n	406cac <integrate_partial+0x308>
  406ca0:	68fb      	ldr	r3, [r7, #12]
  406ca2:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
  406ca6:	b25b      	sxtb	r3, r3
  406ca8:	2b09      	cmp	r3, #9
  406caa:	d161      	bne.n	406d70 <integrate_partial+0x3cc>
               TEST_CFG(ean->isbn13_config, ZBAR_CFG_ENABLE))
  406cac:	68fb      	ldr	r3, [r7, #12]
  406cae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
  406cb0:	f003 0301 	and.w	r3, r3, #1
        else if(ean->buf[0] == 9 && ean->buf[1] == 7) {
            /* ISBN-10 has priority over ISBN-13(?) */
            if(ean->buf[2] == 8 &&
               TEST_CFG(ean->isbn10_config, ZBAR_CFG_ENABLE))
                part = ZBAR_ISBN10;
            else if((ean->buf[2] == 8 || ean->buf[2] == 9) &&
  406cb4:	2b00      	cmp	r3, #0
  406cb6:	d05b      	beq.n	406d70 <integrate_partial+0x3cc>
               TEST_CFG(ean->isbn13_config, ZBAR_CFG_ENABLE))
                part = ZBAR_ISBN13;
  406cb8:	230e      	movs	r3, #14
  406cba:	80fb      	strh	r3, [r7, #6]
  406cbc:	e058      	b.n	406d70 <integrate_partial+0x3cc>
  406cbe:	e057      	b.n	406d70 <integrate_partial+0x3cc>
  406cc0:	004059d9 	.word	0x004059d9
  406cc4:	00406845 	.word	0x00406845
  406cc8:	004065d5 	.word	0x004065d5
        }
    }
    else if(part == ZBAR_UPCE) {
  406ccc:	88fb      	ldrh	r3, [r7, #6]
  406cce:	2b09      	cmp	r3, #9
  406cd0:	d14e      	bne.n	406d70 <integrate_partial+0x3cc>
        if(TEST_CFG(ean->upce_config, ZBAR_CFG_ENABLE)) {
  406cd2:	68fb      	ldr	r3, [r7, #12]
  406cd4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  406cd6:	f003 0301 	and.w	r3, r3, #1
  406cda:	2b00      	cmp	r3, #0
  406cdc:	d034      	beq.n	406d48 <integrate_partial+0x3a4>
            /* UPC-E was decompressed for checksum verification,
             * but user requested compressed result
             */
            ean->buf[0] = ean->buf[1] = 0;
  406cde:	68fb      	ldr	r3, [r7, #12]
  406ce0:	2200      	movs	r2, #0
  406ce2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  406ce6:	68fb      	ldr	r3, [r7, #12]
  406ce8:	f893 2051 	ldrb.w	r2, [r3, #81]	; 0x51
  406cec:	68fb      	ldr	r3, [r7, #12]
  406cee:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
            for(i = 2; i < 8; i++)
  406cf2:	2302      	movs	r3, #2
  406cf4:	75fb      	strb	r3, [r7, #23]
  406cf6:	e015      	b.n	406d24 <integrate_partial+0x380>
                ean->buf[i] = pass->raw[i - 1] & 0xf;
  406cf8:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406cfc:	f997 2017 	ldrsb.w	r2, [r7, #23]
  406d00:	3a01      	subs	r2, #1
  406d02:	68b9      	ldr	r1, [r7, #8]
  406d04:	440a      	add	r2, r1
  406d06:	7a12      	ldrb	r2, [r2, #8]
  406d08:	b2d2      	uxtb	r2, r2
  406d0a:	f002 020f 	and.w	r2, r2, #15
  406d0e:	b2d1      	uxtb	r1, r2
  406d10:	68fa      	ldr	r2, [r7, #12]
  406d12:	4413      	add	r3, r2
  406d14:	460a      	mov	r2, r1
  406d16:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
        if(TEST_CFG(ean->upce_config, ZBAR_CFG_ENABLE)) {
            /* UPC-E was decompressed for checksum verification,
             * but user requested compressed result
             */
            ean->buf[0] = ean->buf[1] = 0;
            for(i = 2; i < 8; i++)
  406d1a:	7dfb      	ldrb	r3, [r7, #23]
  406d1c:	b2db      	uxtb	r3, r3
  406d1e:	3301      	adds	r3, #1
  406d20:	b2db      	uxtb	r3, r3
  406d22:	75fb      	strb	r3, [r7, #23]
  406d24:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406d28:	2b07      	cmp	r3, #7
  406d2a:	dde5      	ble.n	406cf8 <integrate_partial+0x354>
                ean->buf[i] = pass->raw[i - 1] & 0xf;
            ean->buf[i] = pass->raw[0] & 0xf;
  406d2c:	f997 3017 	ldrsb.w	r3, [r7, #23]
  406d30:	68ba      	ldr	r2, [r7, #8]
  406d32:	7a12      	ldrb	r2, [r2, #8]
  406d34:	b2d2      	uxtb	r2, r2
  406d36:	f002 020f 	and.w	r2, r2, #15
  406d3a:	b2d1      	uxtb	r1, r2
  406d3c:	68fa      	ldr	r2, [r7, #12]
  406d3e:	4413      	add	r3, r2
  406d40:	460a      	mov	r2, r1
  406d42:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  406d46:	e013      	b.n	406d70 <integrate_partial+0x3cc>
        }
        else if(TEST_CFG(ean->upca_config, ZBAR_CFG_ENABLE))
  406d48:	68fb      	ldr	r3, [r7, #12]
  406d4a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
  406d4c:	f003 0301 	and.w	r3, r3, #1
  406d50:	2b00      	cmp	r3, #0
  406d52:	d002      	beq.n	406d5a <integrate_partial+0x3b6>
            /* UPC-E reported as UPC-A has priority over EAN-13 */
            part = ZBAR_UPCA;
  406d54:	230c      	movs	r3, #12
  406d56:	80fb      	strh	r3, [r7, #6]
  406d58:	e00a      	b.n	406d70 <integrate_partial+0x3cc>
        else if(TEST_CFG(ean->ean13_config, ZBAR_CFG_ENABLE))
  406d5a:	68fb      	ldr	r3, [r7, #12]
  406d5c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  406d5e:	f003 0301 	and.w	r3, r3, #1
  406d62:	2b00      	cmp	r3, #0
  406d64:	d002      	beq.n	406d6c <integrate_partial+0x3c8>
            part = ZBAR_EAN13;
  406d66:	230d      	movs	r3, #13
  406d68:	80fb      	strh	r3, [r7, #6]
  406d6a:	e001      	b.n	406d70 <integrate_partial+0x3cc>
        else
            part = ZBAR_NONE;
  406d6c:	2300      	movs	r3, #0
  406d6e:	80fb      	strh	r3, [r7, #6]
    }

    dbprintf(2, " dir=%d %x/%x=%x",
  406d70:	bf00      	nop
             ean->direction, ean->left, ean->right, part);
    return(part);
  406d72:	88fb      	ldrh	r3, [r7, #6]
}
  406d74:	4618      	mov	r0, r3
  406d76:	3718      	adds	r7, #24
  406d78:	46bd      	mov	sp, r7
  406d7a:	bd80      	pop	{r7, pc}

00406d7c <postprocess>:

/* copy result to output buffer */
static inline void postprocess (zbar_decoder_t *dcode,
                                zbar_symbol_type_t sym)
{
  406d7c:	b590      	push	{r4, r7, lr}
  406d7e:	b087      	sub	sp, #28
  406d80:	af00      	add	r7, sp, #0
  406d82:	6078      	str	r0, [r7, #4]
  406d84:	460b      	mov	r3, r1
  406d86:	807b      	strh	r3, [r7, #2]
    ean_decoder_t *ean = &dcode->ean;
  406d88:	687b      	ldr	r3, [r7, #4]
  406d8a:	3368      	adds	r3, #104	; 0x68
  406d8c:	60bb      	str	r3, [r7, #8]
    zbar_symbol_type_t base = sym;
  406d8e:	887b      	ldrh	r3, [r7, #2]
  406d90:	82fb      	strh	r3, [r7, #22]
    int i = 0, j = 0;
  406d92:	2300      	movs	r3, #0
  406d94:	613b      	str	r3, [r7, #16]
  406d96:	2300      	movs	r3, #0
  406d98:	60fb      	str	r3, [r7, #12]
    if(base > ZBAR_PARTIAL) {
  406d9a:	8afb      	ldrh	r3, [r7, #22]
  406d9c:	2b01      	cmp	r3, #1
  406d9e:	d963      	bls.n	406e68 <postprocess+0xec>
        if(base == ZBAR_UPCA)
  406da0:	8afb      	ldrh	r3, [r7, #22]
  406da2:	2b0c      	cmp	r3, #12
  406da4:	d102      	bne.n	406dac <postprocess+0x30>
            i = 1;
  406da6:	2301      	movs	r3, #1
  406da8:	613b      	str	r3, [r7, #16]
  406daa:	e013      	b.n	406dd4 <postprocess+0x58>
        else if(base == ZBAR_UPCE) {
  406dac:	8afb      	ldrh	r3, [r7, #22]
  406dae:	2b09      	cmp	r3, #9
  406db0:	d105      	bne.n	406dbe <postprocess+0x42>
            i = 1;
  406db2:	2301      	movs	r3, #1
  406db4:	613b      	str	r3, [r7, #16]
            base--;
  406db6:	8afb      	ldrh	r3, [r7, #22]
  406db8:	3b01      	subs	r3, #1
  406dba:	82fb      	strh	r3, [r7, #22]
  406dbc:	e00a      	b.n	406dd4 <postprocess+0x58>
        }
        else if(base == ZBAR_ISBN13)
  406dbe:	8afb      	ldrh	r3, [r7, #22]
  406dc0:	2b0e      	cmp	r3, #14
  406dc2:	d102      	bne.n	406dca <postprocess+0x4e>
            base = ZBAR_EAN13;
  406dc4:	230d      	movs	r3, #13
  406dc6:	82fb      	strh	r3, [r7, #22]
  406dc8:	e004      	b.n	406dd4 <postprocess+0x58>
        else if(base == ZBAR_ISBN10)
  406dca:	8afb      	ldrh	r3, [r7, #22]
  406dcc:	2b0a      	cmp	r3, #10
  406dce:	d101      	bne.n	406dd4 <postprocess+0x58>
            i = 3;
  406dd0:	2303      	movs	r3, #3
  406dd2:	613b      	str	r3, [r7, #16]

        if(base == ZBAR_ISBN10 ||
  406dd4:	8afb      	ldrh	r3, [r7, #22]
  406dd6:	2b0a      	cmp	r3, #10
  406dd8:	d00c      	beq.n	406df4 <postprocess+0x78>
  406dda:	8afb      	ldrh	r3, [r7, #22]
  406ddc:	2b05      	cmp	r3, #5
  406dde:	d90c      	bls.n	406dfa <postprocess+0x7e>
           (base > ZBAR_EAN5 &&
            !TEST_CFG(ean_get_config(ean, sym), ZBAR_CFG_EMIT_CHECK)))
  406de0:	887b      	ldrh	r3, [r7, #2]
  406de2:	68b8      	ldr	r0, [r7, #8]
  406de4:	4619      	mov	r1, r3
  406de6:	4b2d      	ldr	r3, [pc, #180]	; (406e9c <postprocess+0x120>)
  406de8:	4798      	blx	r3
  406dea:	4603      	mov	r3, r0
  406dec:	f003 0304 	and.w	r3, r3, #4
            base = ZBAR_EAN13;
        else if(base == ZBAR_ISBN10)
            i = 3;

        if(base == ZBAR_ISBN10 ||
           (base > ZBAR_EAN5 &&
  406df0:	2b00      	cmp	r3, #0
  406df2:	d102      	bne.n	406dfa <postprocess+0x7e>
            !TEST_CFG(ean_get_config(ean, sym), ZBAR_CFG_EMIT_CHECK)))
            base--;
  406df4:	8afb      	ldrh	r3, [r7, #22]
  406df6:	3b01      	subs	r3, #1
  406df8:	82fb      	strh	r3, [r7, #22]

        for(; j < base && ean->buf[i] >= 0; i++, j++)
  406dfa:	e012      	b.n	406e22 <postprocess+0xa6>
            dcode->buf[j] = ean->buf[i] + '0';
  406dfc:	687b      	ldr	r3, [r7, #4]
  406dfe:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  406e00:	68fb      	ldr	r3, [r7, #12]
  406e02:	4413      	add	r3, r2
  406e04:	68b9      	ldr	r1, [r7, #8]
  406e06:	693a      	ldr	r2, [r7, #16]
  406e08:	440a      	add	r2, r1
  406e0a:	3250      	adds	r2, #80	; 0x50
  406e0c:	7812      	ldrb	r2, [r2, #0]
  406e0e:	b2d2      	uxtb	r2, r2
  406e10:	3230      	adds	r2, #48	; 0x30
  406e12:	b2d2      	uxtb	r2, r2
  406e14:	701a      	strb	r2, [r3, #0]
        if(base == ZBAR_ISBN10 ||
           (base > ZBAR_EAN5 &&
            !TEST_CFG(ean_get_config(ean, sym), ZBAR_CFG_EMIT_CHECK)))
            base--;

        for(; j < base && ean->buf[i] >= 0; i++, j++)
  406e16:	693b      	ldr	r3, [r7, #16]
  406e18:	3301      	adds	r3, #1
  406e1a:	613b      	str	r3, [r7, #16]
  406e1c:	68fb      	ldr	r3, [r7, #12]
  406e1e:	3301      	adds	r3, #1
  406e20:	60fb      	str	r3, [r7, #12]
  406e22:	8afa      	ldrh	r2, [r7, #22]
  406e24:	68fb      	ldr	r3, [r7, #12]
  406e26:	429a      	cmp	r2, r3
  406e28:	dd07      	ble.n	406e3a <postprocess+0xbe>
  406e2a:	68ba      	ldr	r2, [r7, #8]
  406e2c:	693b      	ldr	r3, [r7, #16]
  406e2e:	4413      	add	r3, r2
  406e30:	3350      	adds	r3, #80	; 0x50
  406e32:	781b      	ldrb	r3, [r3, #0]
  406e34:	b25b      	sxtb	r3, r3
  406e36:	2b00      	cmp	r3, #0
  406e38:	dae0      	bge.n	406dfc <postprocess+0x80>
            dcode->buf[j] = ean->buf[i] + '0';

        if(sym == ZBAR_ISBN10 && j == 9 &&
  406e3a:	887b      	ldrh	r3, [r7, #2]
  406e3c:	2b0a      	cmp	r3, #10
  406e3e:	d113      	bne.n	406e68 <postprocess+0xec>
  406e40:	68fb      	ldr	r3, [r7, #12]
  406e42:	2b09      	cmp	r3, #9
  406e44:	d110      	bne.n	406e68 <postprocess+0xec>
           TEST_CFG(ean->isbn10_config, ZBAR_CFG_EMIT_CHECK))
  406e46:	68bb      	ldr	r3, [r7, #8]
  406e48:	6f5b      	ldr	r3, [r3, #116]	; 0x74
            base--;

        for(; j < base && ean->buf[i] >= 0; i++, j++)
            dcode->buf[j] = ean->buf[i] + '0';

        if(sym == ZBAR_ISBN10 && j == 9 &&
  406e4a:	f003 0304 	and.w	r3, r3, #4
  406e4e:	2b00      	cmp	r3, #0
  406e50:	d00a      	beq.n	406e68 <postprocess+0xec>
           TEST_CFG(ean->isbn10_config, ZBAR_CFG_EMIT_CHECK))
            /* recalculate ISBN-10 check digit */
            dcode->buf[j++] = isbn10_calc_checksum(ean);
  406e52:	687b      	ldr	r3, [r7, #4]
  406e54:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  406e56:	68fb      	ldr	r3, [r7, #12]
  406e58:	1c59      	adds	r1, r3, #1
  406e5a:	60f9      	str	r1, [r7, #12]
  406e5c:	18d4      	adds	r4, r2, r3
  406e5e:	68b8      	ldr	r0, [r7, #8]
  406e60:	4b0f      	ldr	r3, [pc, #60]	; (406ea0 <postprocess+0x124>)
  406e62:	4798      	blx	r3
  406e64:	4603      	mov	r3, r0
  406e66:	7023      	strb	r3, [r4, #0]
    }
    dcode->buflen = j;
  406e68:	68fa      	ldr	r2, [r7, #12]
  406e6a:	687b      	ldr	r3, [r7, #4]
  406e6c:	659a      	str	r2, [r3, #88]	; 0x58
    dcode->buf[j] = '\0';
  406e6e:	687b      	ldr	r3, [r7, #4]
  406e70:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  406e72:	68fb      	ldr	r3, [r7, #12]
  406e74:	4413      	add	r3, r2
  406e76:	2200      	movs	r2, #0
  406e78:	701a      	strb	r2, [r3, #0]
    dcode->direction = 1 - 2 * ean->direction;
  406e7a:	68bb      	ldr	r3, [r7, #8]
  406e7c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  406e7e:	4613      	mov	r3, r2
  406e80:	07db      	lsls	r3, r3, #31
  406e82:	1a9b      	subs	r3, r3, r2
  406e84:	005b      	lsls	r3, r3, #1
  406e86:	1c5a      	adds	r2, r3, #1
  406e88:	687b      	ldr	r3, [r7, #4]
  406e8a:	64da      	str	r2, [r3, #76]	; 0x4c
    dcode->modifiers = 0;
  406e8c:	687b      	ldr	r3, [r7, #4]
  406e8e:	2200      	movs	r2, #0
  406e90:	649a      	str	r2, [r3, #72]	; 0x48
    dbprintf(2, " base=%d j=%d (%s)", base, j, dcode->buf);
  406e92:	bf00      	nop
}
  406e94:	371c      	adds	r7, #28
  406e96:	46bd      	mov	sp, r7
  406e98:	bd90      	pop	{r4, r7, pc}
  406e9a:	bf00      	nop
  406e9c:	0040583d 	.word	0x0040583d
  406ea0:	00406761 	.word	0x00406761

00406ea4 <_zbar_decode_ean>:

zbar_symbol_type_t _zbar_decode_ean (zbar_decoder_t *dcode)
{
  406ea4:	b580      	push	{r7, lr}
  406ea6:	b086      	sub	sp, #24
  406ea8:	af00      	add	r7, sp, #0
  406eaa:	6078      	str	r0, [r7, #4]
    /* process upto 4 separate passes */
    zbar_symbol_type_t sym = ZBAR_NONE;
  406eac:	2300      	movs	r3, #0
  406eae:	82fb      	strh	r3, [r7, #22]
    unsigned char pass_idx = dcode->idx & 3;
  406eb0:	687b      	ldr	r3, [r7, #4]
  406eb2:	781b      	ldrb	r3, [r3, #0]
  406eb4:	f003 0303 	and.w	r3, r3, #3
  406eb8:	753b      	strb	r3, [r7, #20]
    unsigned char i;

    /* update latest character width */
    dcode->ean.s4 -= get_width(dcode, 4);
  406eba:	6878      	ldr	r0, [r7, #4]
  406ebc:	2104      	movs	r1, #4
  406ebe:	4b3b      	ldr	r3, [pc, #236]	; (406fac <_zbar_decode_ean+0x108>)
  406ec0:	4798      	blx	r3
  406ec2:	4602      	mov	r2, r0
  406ec4:	687b      	ldr	r3, [r7, #4]
  406ec6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  406eca:	1a9a      	subs	r2, r3, r2
  406ecc:	687b      	ldr	r3, [r7, #4]
  406ece:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
    dcode->ean.s4 += get_width(dcode, 0);
  406ed2:	6878      	ldr	r0, [r7, #4]
  406ed4:	2100      	movs	r1, #0
  406ed6:	4b35      	ldr	r3, [pc, #212]	; (406fac <_zbar_decode_ean+0x108>)
  406ed8:	4798      	blx	r3
  406eda:	4602      	mov	r2, r0
  406edc:	687b      	ldr	r3, [r7, #4]
  406ede:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
  406ee2:	441a      	add	r2, r3
  406ee4:	687b      	ldr	r3, [r7, #4]
  406ee6:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0

    for(i = 0; i < 4; i++) {
  406eea:	2300      	movs	r3, #0
  406eec:	757b      	strb	r3, [r7, #21]
  406eee:	e054      	b.n	406f9a <_zbar_decode_ean+0xf6>
        ean_pass_t *pass = &dcode->ean.pass[i];
  406ef0:	7d7b      	ldrb	r3, [r7, #21]
  406ef2:	011b      	lsls	r3, r3, #4
  406ef4:	3368      	adds	r3, #104	; 0x68
  406ef6:	687a      	ldr	r2, [r7, #4]
  406ef8:	4413      	add	r3, r2
  406efa:	613b      	str	r3, [r7, #16]
        if(pass->state >= 0 ||
  406efc:	693b      	ldr	r3, [r7, #16]
  406efe:	781b      	ldrb	r3, [r3, #0]
  406f00:	b25b      	sxtb	r3, r3
  406f02:	2b00      	cmp	r3, #0
  406f04:	da03      	bge.n	406f0e <_zbar_decode_ean+0x6a>
  406f06:	7d7a      	ldrb	r2, [r7, #21]
  406f08:	7d3b      	ldrb	r3, [r7, #20]
  406f0a:	429a      	cmp	r2, r3
  406f0c:	d142      	bne.n	406f94 <_zbar_decode_ean+0xf0>
           i == pass_idx)
        {
            zbar_symbol_type_t part;
            dbprintf(2, "      ean[%x/%x]: idx=%x st=%d s=%d",
  406f0e:	bf00      	nop
                     i, pass_idx, dcode->idx, pass->state, dcode->ean.s4);
            part = decode_pass(dcode, pass);
  406f10:	6878      	ldr	r0, [r7, #4]
  406f12:	6939      	ldr	r1, [r7, #16]
  406f14:	4b26      	ldr	r3, [pc, #152]	; (406fb0 <_zbar_decode_ean+0x10c>)
  406f16:	4798      	blx	r3
  406f18:	4603      	mov	r3, r0
  406f1a:	81fb      	strh	r3, [r7, #14]
            if(part) {
  406f1c:	89fb      	ldrh	r3, [r7, #14]
  406f1e:	2b00      	cmp	r3, #0
  406f20:	d037      	beq.n	406f92 <_zbar_decode_ean+0xee>
                /* update accumulated data from new partial decode */
                sym = integrate_partial(&dcode->ean, pass, part);
  406f22:	687b      	ldr	r3, [r7, #4]
  406f24:	f103 0268 	add.w	r2, r3, #104	; 0x68
  406f28:	89fb      	ldrh	r3, [r7, #14]
  406f2a:	4610      	mov	r0, r2
  406f2c:	6939      	ldr	r1, [r7, #16]
  406f2e:	461a      	mov	r2, r3
  406f30:	4b20      	ldr	r3, [pc, #128]	; (406fb4 <_zbar_decode_ean+0x110>)
  406f32:	4798      	blx	r3
  406f34:	4603      	mov	r3, r0
  406f36:	82fb      	strh	r3, [r7, #22]
                if(sym) {
  406f38:	8afb      	ldrh	r3, [r7, #22]
  406f3a:	2b00      	cmp	r3, #0
  406f3c:	d029      	beq.n	406f92 <_zbar_decode_ean+0xee>
                    /* this pass valid => _reset_ all passes */
                    dbprintf(2, " sym=%x", sym);
  406f3e:	bf00      	nop
                    dcode->ean.pass[0].state = dcode->ean.pass[1].state = -1;
  406f40:	687b      	ldr	r3, [r7, #4]
  406f42:	22ff      	movs	r2, #255	; 0xff
  406f44:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
  406f48:	687b      	ldr	r3, [r7, #4]
  406f4a:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
  406f4e:	687b      	ldr	r3, [r7, #4]
  406f50:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
                    dcode->ean.pass[2].state = dcode->ean.pass[3].state = -1;
  406f54:	687b      	ldr	r3, [r7, #4]
  406f56:	22ff      	movs	r2, #255	; 0xff
  406f58:	f883 2098 	strb.w	r2, [r3, #152]	; 0x98
  406f5c:	687b      	ldr	r3, [r7, #4]
  406f5e:	f893 2098 	ldrb.w	r2, [r3, #152]	; 0x98
  406f62:	687b      	ldr	r3, [r7, #4]
  406f64:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
                    if(sym > ZBAR_PARTIAL) {
  406f68:	8afb      	ldrh	r3, [r7, #22]
  406f6a:	2b01      	cmp	r3, #1
  406f6c:	d911      	bls.n	406f92 <_zbar_decode_ean+0xee>
                        if(!acquire_lock(dcode, sym))
  406f6e:	8afb      	ldrh	r3, [r7, #22]
  406f70:	6878      	ldr	r0, [r7, #4]
  406f72:	4619      	mov	r1, r3
  406f74:	4b10      	ldr	r3, [pc, #64]	; (406fb8 <_zbar_decode_ean+0x114>)
  406f76:	4798      	blx	r3
  406f78:	4603      	mov	r3, r0
  406f7a:	2b00      	cmp	r3, #0
  406f7c:	d105      	bne.n	406f8a <_zbar_decode_ean+0xe6>
                            postprocess(dcode, sym);
  406f7e:	8afb      	ldrh	r3, [r7, #22]
  406f80:	6878      	ldr	r0, [r7, #4]
  406f82:	4619      	mov	r1, r3
  406f84:	4b0d      	ldr	r3, [pc, #52]	; (406fbc <_zbar_decode_ean+0x118>)
  406f86:	4798      	blx	r3
  406f88:	e003      	b.n	406f92 <_zbar_decode_ean+0xee>
                        else {
                            dbprintf(1, " [locked %d]", dcode->lock);
  406f8a:	bf00      	nop
                            sym = ZBAR_PARTIAL;
  406f8c:	2301      	movs	r3, #1
  406f8e:	82fb      	strh	r3, [r7, #22]
                        }
                    }
                }
            }
            dbprintf(2, "\n");
  406f90:	e7ff      	b.n	406f92 <_zbar_decode_ean+0xee>
  406f92:	bf00      	nop

    /* update latest character width */
    dcode->ean.s4 -= get_width(dcode, 4);
    dcode->ean.s4 += get_width(dcode, 0);

    for(i = 0; i < 4; i++) {
  406f94:	7d7b      	ldrb	r3, [r7, #21]
  406f96:	3301      	adds	r3, #1
  406f98:	757b      	strb	r3, [r7, #21]
  406f9a:	7d7b      	ldrb	r3, [r7, #21]
  406f9c:	2b03      	cmp	r3, #3
  406f9e:	d9a7      	bls.n	406ef0 <_zbar_decode_ean+0x4c>
                }
            }
            dbprintf(2, "\n");
        }
    }
    return(sym);
  406fa0:	8afb      	ldrh	r3, [r7, #22]
}
  406fa2:	4618      	mov	r0, r3
  406fa4:	3718      	adds	r7, #24
  406fa6:	46bd      	mov	sp, r7
  406fa8:	bd80      	pop	{r7, pc}
  406faa:	bf00      	nop
  406fac:	004058ed 	.word	0x004058ed
  406fb0:	00406281 	.word	0x00406281
  406fb4:	004069a5 	.word	0x004069a5
  406fb8:	004059a5 	.word	0x004059a5
  406fbc:	00406d7d 	.word	0x00406d7d

00406fc0 <_zbar_refcnt>:

typedef int refcnt_t;

static inline int _zbar_refcnt (refcnt_t *cnt,
                                int delta)
{
  406fc0:	b590      	push	{r4, r7, lr}
  406fc2:	b085      	sub	sp, #20
  406fc4:	af00      	add	r7, sp, #0
  406fc6:	6078      	str	r0, [r7, #4]
  406fc8:	6039      	str	r1, [r7, #0]
    int rc = (*cnt += delta);
  406fca:	687b      	ldr	r3, [r7, #4]
  406fcc:	681a      	ldr	r2, [r3, #0]
  406fce:	683b      	ldr	r3, [r7, #0]
  406fd0:	441a      	add	r2, r3
  406fd2:	687b      	ldr	r3, [r7, #4]
  406fd4:	601a      	str	r2, [r3, #0]
  406fd6:	687b      	ldr	r3, [r7, #4]
  406fd8:	681b      	ldr	r3, [r3, #0]
  406fda:	60fb      	str	r3, [r7, #12]
    assert(rc >= 0);
  406fdc:	68fb      	ldr	r3, [r7, #12]
  406fde:	2b00      	cmp	r3, #0
  406fe0:	da05      	bge.n	406fee <_zbar_refcnt+0x2e>
  406fe2:	4805      	ldr	r0, [pc, #20]	; (406ff8 <_zbar_refcnt+0x38>)
  406fe4:	2157      	movs	r1, #87	; 0x57
  406fe6:	4a05      	ldr	r2, [pc, #20]	; (406ffc <_zbar_refcnt+0x3c>)
  406fe8:	4b05      	ldr	r3, [pc, #20]	; (407000 <_zbar_refcnt+0x40>)
  406fea:	4c06      	ldr	r4, [pc, #24]	; (407004 <_zbar_refcnt+0x44>)
  406fec:	47a0      	blx	r4
    return(rc);
  406fee:	68fb      	ldr	r3, [r7, #12]
}
  406ff0:	4618      	mov	r0, r3
  406ff2:	3714      	adds	r7, #20
  406ff4:	46bd      	mov	sp, r7
  406ff6:	bd90      	pop	{r4, r7, pc}
  406ff8:	0043c714 	.word	0x0043c714
  406ffc:	0043c7dc 	.word	0x0043c7dc
  407000:	0043c740 	.word	0x0043c740
  407004:	00433d55 	.word	0x00433d55

00407008 <_zbar_image_refcnt>:
# define zbar_image_write_png(...)
#endif

static inline void _zbar_image_refcnt (zbar_image_t *img,
                                       int delta)
{
  407008:	b580      	push	{r7, lr}
  40700a:	b082      	sub	sp, #8
  40700c:	af00      	add	r7, sp, #0
  40700e:	6078      	str	r0, [r7, #4]
  407010:	6039      	str	r1, [r7, #0]
    if(!_zbar_refcnt(&img->refcnt, delta) && delta <= 0) {
  407012:	687b      	ldr	r3, [r7, #4]
  407014:	332c      	adds	r3, #44	; 0x2c
  407016:	4618      	mov	r0, r3
  407018:	6839      	ldr	r1, [r7, #0]
  40701a:	4b0d      	ldr	r3, [pc, #52]	; (407050 <_zbar_image_refcnt+0x48>)
  40701c:	4798      	blx	r3
  40701e:	4603      	mov	r3, r0
  407020:	2b00      	cmp	r3, #0
  407022:	d111      	bne.n	407048 <_zbar_image_refcnt+0x40>
  407024:	683b      	ldr	r3, [r7, #0]
  407026:	2b00      	cmp	r3, #0
  407028:	dc0e      	bgt.n	407048 <_zbar_image_refcnt+0x40>
        if(img->cleanup)
  40702a:	687b      	ldr	r3, [r7, #4]
  40702c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  40702e:	2b00      	cmp	r3, #0
  407030:	d003      	beq.n	40703a <_zbar_image_refcnt+0x32>
            img->cleanup(img);
  407032:	687b      	ldr	r3, [r7, #4]
  407034:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  407036:	6878      	ldr	r0, [r7, #4]
  407038:	4798      	blx	r3
        if(!img->src)
  40703a:	687b      	ldr	r3, [r7, #4]
  40703c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40703e:	2b00      	cmp	r3, #0
  407040:	d102      	bne.n	407048 <_zbar_image_refcnt+0x40>
            _zbar_image_free(img);
  407042:	6878      	ldr	r0, [r7, #4]
  407044:	4b03      	ldr	r3, [pc, #12]	; (407054 <_zbar_image_refcnt+0x4c>)
  407046:	4798      	blx	r3
    }
}
  407048:	3708      	adds	r7, #8
  40704a:	46bd      	mov	sp, r7
  40704c:	bd80      	pop	{r7, pc}
  40704e:	bf00      	nop
  407050:	00406fc1 	.word	0x00406fc1
  407054:	00407095 	.word	0x00407095

00407058 <zbar_image_create>:
#include "error.h"
#include "image.h"
#include "refcnt.h"

zbar_image_t *zbar_image_create ()
{
  407058:	b580      	push	{r7, lr}
  40705a:	b082      	sub	sp, #8
  40705c:	af00      	add	r7, sp, #0
    zbar_image_t *img = calloc(1, sizeof(zbar_image_t));
  40705e:	2001      	movs	r0, #1
  407060:	2144      	movs	r1, #68	; 0x44
  407062:	4b09      	ldr	r3, [pc, #36]	; (407088 <zbar_image_create+0x30>)
  407064:	4798      	blx	r3
  407066:	4603      	mov	r3, r0
  407068:	607b      	str	r3, [r7, #4]
    _zbar_refcnt_init();
  40706a:	4b08      	ldr	r3, [pc, #32]	; (40708c <zbar_image_create+0x34>)
  40706c:	4798      	blx	r3
    _zbar_image_refcnt(img, 1);
  40706e:	6878      	ldr	r0, [r7, #4]
  407070:	2101      	movs	r1, #1
  407072:	4b07      	ldr	r3, [pc, #28]	; (407090 <zbar_image_create+0x38>)
  407074:	4798      	blx	r3
    img->srcidx = -1;
  407076:	687b      	ldr	r3, [r7, #4]
  407078:	f04f 32ff 	mov.w	r2, #4294967295
  40707c:	635a      	str	r2, [r3, #52]	; 0x34
    return(img);
  40707e:	687b      	ldr	r3, [r7, #4]
}
  407080:	4618      	mov	r0, r3
  407082:	3708      	adds	r7, #8
  407084:	46bd      	mov	sp, r7
  407086:	bd80      	pop	{r7, pc}
  407088:	00433d91 	.word	0x00433d91
  40708c:	004088b1 	.word	0x004088b1
  407090:	00407009 	.word	0x00407009

00407094 <_zbar_image_free>:

void _zbar_image_free (zbar_image_t *img)
{
  407094:	b580      	push	{r7, lr}
  407096:	b082      	sub	sp, #8
  407098:	af00      	add	r7, sp, #0
  40709a:	6078      	str	r0, [r7, #4]
    if(img->syms) {
  40709c:	687b      	ldr	r3, [r7, #4]
  40709e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  4070a0:	2b00      	cmp	r3, #0
  4070a2:	d009      	beq.n	4070b8 <_zbar_image_free+0x24>
        zbar_symbol_set_ref(img->syms, -1);
  4070a4:	687b      	ldr	r3, [r7, #4]
  4070a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  4070a8:	4618      	mov	r0, r3
  4070aa:	f04f 31ff 	mov.w	r1, #4294967295
  4070ae:	4b05      	ldr	r3, [pc, #20]	; (4070c4 <_zbar_image_free+0x30>)
  4070b0:	4798      	blx	r3
        img->syms = NULL;
  4070b2:	687b      	ldr	r3, [r7, #4]
  4070b4:	2200      	movs	r2, #0
  4070b6:	641a      	str	r2, [r3, #64]	; 0x40
    }
    free(img);
  4070b8:	6878      	ldr	r0, [r7, #4]
  4070ba:	4b03      	ldr	r3, [pc, #12]	; (4070c8 <_zbar_image_free+0x34>)
  4070bc:	4798      	blx	r3
}
  4070be:	3708      	adds	r7, #8
  4070c0:	46bd      	mov	sp, r7
  4070c2:	bd80      	pop	{r7, pc}
  4070c4:	0040929d 	.word	0x0040929d
  4070c8:	004348ad 	.word	0x004348ad

004070cc <zbar_image_set_format>:
    return(img->datalen);
}

void zbar_image_set_format (zbar_image_t *img,
                            unsigned long fmt)
{
  4070cc:	b480      	push	{r7}
  4070ce:	b083      	sub	sp, #12
  4070d0:	af00      	add	r7, sp, #0
  4070d2:	6078      	str	r0, [r7, #4]
  4070d4:	6039      	str	r1, [r7, #0]
    img->format = fmt;
  4070d6:	687b      	ldr	r3, [r7, #4]
  4070d8:	683a      	ldr	r2, [r7, #0]
  4070da:	601a      	str	r2, [r3, #0]
}
  4070dc:	370c      	adds	r7, #12
  4070de:	46bd      	mov	sp, r7
  4070e0:	f85d 7b04 	ldr.w	r7, [sp], #4
  4070e4:	4770      	bx	lr
  4070e6:	bf00      	nop

004070e8 <zbar_image_set_size>:
}

void zbar_image_set_size (zbar_image_t *img,
                          unsigned w,
                          unsigned h)
{
  4070e8:	b480      	push	{r7}
  4070ea:	b085      	sub	sp, #20
  4070ec:	af00      	add	r7, sp, #0
  4070ee:	60f8      	str	r0, [r7, #12]
  4070f0:	60b9      	str	r1, [r7, #8]
  4070f2:	607a      	str	r2, [r7, #4]
    img->crop_x = img->crop_y = 0;
  4070f4:	68fb      	ldr	r3, [r7, #12]
  4070f6:	2200      	movs	r2, #0
  4070f8:	619a      	str	r2, [r3, #24]
  4070fa:	68fb      	ldr	r3, [r7, #12]
  4070fc:	699a      	ldr	r2, [r3, #24]
  4070fe:	68fb      	ldr	r3, [r7, #12]
  407100:	615a      	str	r2, [r3, #20]
    img->width = img->crop_w = w;
  407102:	68fb      	ldr	r3, [r7, #12]
  407104:	68ba      	ldr	r2, [r7, #8]
  407106:	61da      	str	r2, [r3, #28]
  407108:	68fb      	ldr	r3, [r7, #12]
  40710a:	69da      	ldr	r2, [r3, #28]
  40710c:	68fb      	ldr	r3, [r7, #12]
  40710e:	605a      	str	r2, [r3, #4]
    img->height = img->crop_h = h;
  407110:	68fb      	ldr	r3, [r7, #12]
  407112:	687a      	ldr	r2, [r7, #4]
  407114:	621a      	str	r2, [r3, #32]
  407116:	68fb      	ldr	r3, [r7, #12]
  407118:	6a1a      	ldr	r2, [r3, #32]
  40711a:	68fb      	ldr	r3, [r7, #12]
  40711c:	609a      	str	r2, [r3, #8]
}
  40711e:	3714      	adds	r7, #20
  407120:	46bd      	mov	sp, r7
  407122:	f85d 7b04 	ldr.w	r7, [sp], #4
  407126:	4770      	bx	lr

00407128 <zbar_image_free_data>:
    img->crop_y = y;
    img->crop_h = h;
}

inline void zbar_image_free_data (zbar_image_t *img)
{
  407128:	b590      	push	{r4, r7, lr}
  40712a:	b085      	sub	sp, #20
  40712c:	af00      	add	r7, sp, #0
  40712e:	6078      	str	r0, [r7, #4]
    if(!img)
  407130:	687b      	ldr	r3, [r7, #4]
  407132:	2b00      	cmp	r3, #0
  407134:	d100      	bne.n	407138 <zbar_image_free_data+0x10>
        return;
  407136:	e043      	b.n	4071c0 <zbar_image_free_data+0x98>
    if(img->src) {
  407138:	687b      	ldr	r3, [r7, #4]
  40713a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40713c:	2b00      	cmp	r3, #0
  40713e:	d020      	beq.n	407182 <zbar_image_free_data+0x5a>
        zbar_image_t *newimg;
        /* replace video image w/new copy */
        assert(img->refcnt); /* FIXME needs lock */
  407140:	687b      	ldr	r3, [r7, #4]
  407142:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407144:	2b00      	cmp	r3, #0
  407146:	d105      	bne.n	407154 <zbar_image_free_data+0x2c>
  407148:	481f      	ldr	r0, [pc, #124]	; (4071c8 <zbar_image_free_data+0xa0>)
  40714a:	219a      	movs	r1, #154	; 0x9a
  40714c:	4a1f      	ldr	r2, [pc, #124]	; (4071cc <zbar_image_free_data+0xa4>)
  40714e:	4b20      	ldr	r3, [pc, #128]	; (4071d0 <zbar_image_free_data+0xa8>)
  407150:	4c20      	ldr	r4, [pc, #128]	; (4071d4 <zbar_image_free_data+0xac>)
  407152:	47a0      	blx	r4
        newimg = zbar_image_create();
  407154:	4b20      	ldr	r3, [pc, #128]	; (4071d8 <zbar_image_free_data+0xb0>)
  407156:	4798      	blx	r3
  407158:	60f8      	str	r0, [r7, #12]
        memcpy(newimg, img, sizeof(zbar_image_t));
  40715a:	68f8      	ldr	r0, [r7, #12]
  40715c:	6879      	ldr	r1, [r7, #4]
  40715e:	2244      	movs	r2, #68	; 0x44
  407160:	4b1e      	ldr	r3, [pc, #120]	; (4071dc <zbar_image_free_data+0xb4>)
  407162:	4798      	blx	r3
        /* recycle video image */
        newimg->cleanup(newimg);
  407164:	68fb      	ldr	r3, [r7, #12]
  407166:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  407168:	68f8      	ldr	r0, [r7, #12]
  40716a:	4798      	blx	r3
        /* detach old image from src */
        img->cleanup = NULL;
  40716c:	687b      	ldr	r3, [r7, #4]
  40716e:	2200      	movs	r2, #0
  407170:	629a      	str	r2, [r3, #40]	; 0x28
        img->src = NULL;
  407172:	687b      	ldr	r3, [r7, #4]
  407174:	2200      	movs	r2, #0
  407176:	631a      	str	r2, [r3, #48]	; 0x30
        img->srcidx = -1;
  407178:	687b      	ldr	r3, [r7, #4]
  40717a:	f04f 32ff 	mov.w	r2, #4294967295
  40717e:	635a      	str	r2, [r3, #52]	; 0x34
  407180:	e01b      	b.n	4071ba <zbar_image_free_data+0x92>
    }
    else if(img->cleanup && img->data) {
  407182:	687b      	ldr	r3, [r7, #4]
  407184:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  407186:	2b00      	cmp	r3, #0
  407188:	d017      	beq.n	4071ba <zbar_image_free_data+0x92>
  40718a:	687b      	ldr	r3, [r7, #4]
  40718c:	68db      	ldr	r3, [r3, #12]
  40718e:	2b00      	cmp	r3, #0
  407190:	d013      	beq.n	4071ba <zbar_image_free_data+0x92>
        if(img->cleanup != zbar_image_free_data) {
  407192:	687b      	ldr	r3, [r7, #4]
  407194:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  407196:	4a12      	ldr	r2, [pc, #72]	; (4071e0 <zbar_image_free_data+0xb8>)
  407198:	4293      	cmp	r3, r2
  40719a:	d009      	beq.n	4071b0 <zbar_image_free_data+0x88>
            /* using function address to detect this case is a bad idea;
             * windows link libraries add an extra layer of indirection...
             * this works around that problem (bug #2796277)
             */
            zbar_image_cleanup_handler_t *cleanup = img->cleanup;
  40719c:	687b      	ldr	r3, [r7, #4]
  40719e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  4071a0:	60bb      	str	r3, [r7, #8]
            img->cleanup = zbar_image_free_data;
  4071a2:	687b      	ldr	r3, [r7, #4]
  4071a4:	4a0e      	ldr	r2, [pc, #56]	; (4071e0 <zbar_image_free_data+0xb8>)
  4071a6:	629a      	str	r2, [r3, #40]	; 0x28
            cleanup(img);
  4071a8:	68bb      	ldr	r3, [r7, #8]
  4071aa:	6878      	ldr	r0, [r7, #4]
  4071ac:	4798      	blx	r3
  4071ae:	e004      	b.n	4071ba <zbar_image_free_data+0x92>
        }
        else
            free((void*)img->data);
  4071b0:	687b      	ldr	r3, [r7, #4]
  4071b2:	68db      	ldr	r3, [r3, #12]
  4071b4:	4618      	mov	r0, r3
  4071b6:	4b0b      	ldr	r3, [pc, #44]	; (4071e4 <zbar_image_free_data+0xbc>)
  4071b8:	4798      	blx	r3
    }
    img->data = NULL;
  4071ba:	687b      	ldr	r3, [r7, #4]
  4071bc:	2200      	movs	r2, #0
  4071be:	60da      	str	r2, [r3, #12]
}
  4071c0:	3714      	adds	r7, #20
  4071c2:	46bd      	mov	sp, r7
  4071c4:	bd90      	pop	{r4, r7, pc}
  4071c6:	bf00      	nop
  4071c8:	0043c748 	.word	0x0043c748
  4071cc:	0043c7ec 	.word	0x0043c7ec
  4071d0:	0043c76c 	.word	0x0043c76c
  4071d4:	00433d55 	.word	0x00433d55
  4071d8:	00407059 	.word	0x00407059
  4071dc:	00434ed9 	.word	0x00434ed9
  4071e0:	00407129 	.word	0x00407129
  4071e4:	004348ad 	.word	0x004348ad

004071e8 <zbar_image_set_data>:

void zbar_image_set_data (zbar_image_t *img,
                          const void *data,
                          unsigned long len,
                          zbar_image_cleanup_handler_t *cleanup)
{
  4071e8:	b580      	push	{r7, lr}
  4071ea:	b084      	sub	sp, #16
  4071ec:	af00      	add	r7, sp, #0
  4071ee:	60f8      	str	r0, [r7, #12]
  4071f0:	60b9      	str	r1, [r7, #8]
  4071f2:	607a      	str	r2, [r7, #4]
  4071f4:	603b      	str	r3, [r7, #0]
    zbar_image_free_data(img);
  4071f6:	68f8      	ldr	r0, [r7, #12]
  4071f8:	4b06      	ldr	r3, [pc, #24]	; (407214 <zbar_image_set_data+0x2c>)
  4071fa:	4798      	blx	r3
    img->data = data;
  4071fc:	68fb      	ldr	r3, [r7, #12]
  4071fe:	68ba      	ldr	r2, [r7, #8]
  407200:	60da      	str	r2, [r3, #12]
    img->datalen = len;
  407202:	68fb      	ldr	r3, [r7, #12]
  407204:	687a      	ldr	r2, [r7, #4]
  407206:	611a      	str	r2, [r3, #16]
    img->cleanup = cleanup;
  407208:	68fb      	ldr	r3, [r7, #12]
  40720a:	683a      	ldr	r2, [r7, #0]
  40720c:	629a      	str	r2, [r3, #40]	; 0x28
}
  40720e:	3710      	adds	r7, #16
  407210:	46bd      	mov	sp, r7
  407212:	bd80      	pop	{r7, pc}
  407214:	00407129 	.word	0x00407129

00407218 <zbar_image_first_symbol>:
        zbar_symbol_set_ref(img->syms, -1);
    img->syms = (zbar_symbol_set_t*)syms;
}

const zbar_symbol_t *zbar_image_first_symbol (const zbar_image_t *img)
{
  407218:	b480      	push	{r7}
  40721a:	b083      	sub	sp, #12
  40721c:	af00      	add	r7, sp, #0
  40721e:	6078      	str	r0, [r7, #4]
    return((img->syms) ? img->syms->head : NULL);
  407220:	687b      	ldr	r3, [r7, #4]
  407222:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  407224:	2b00      	cmp	r3, #0
  407226:	d003      	beq.n	407230 <zbar_image_first_symbol+0x18>
  407228:	687b      	ldr	r3, [r7, #4]
  40722a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  40722c:	689b      	ldr	r3, [r3, #8]
  40722e:	e000      	b.n	407232 <zbar_image_first_symbol+0x1a>
  407230:	2300      	movs	r3, #0
}
  407232:	4618      	mov	r0, r3
  407234:	370c      	adds	r7, #12
  407236:	46bd      	mov	sp, r7
  407238:	f85d 7b04 	ldr.w	r7, [sp], #4
  40723c:	4770      	bx	lr
  40723e:	bf00      	nop

00407240 <_zbar_refcnt>:

typedef int refcnt_t;

static inline int _zbar_refcnt (refcnt_t *cnt,
                                int delta)
{
  407240:	b590      	push	{r4, r7, lr}
  407242:	b085      	sub	sp, #20
  407244:	af00      	add	r7, sp, #0
  407246:	6078      	str	r0, [r7, #4]
  407248:	6039      	str	r1, [r7, #0]
    int rc = (*cnt += delta);
  40724a:	687b      	ldr	r3, [r7, #4]
  40724c:	681a      	ldr	r2, [r3, #0]
  40724e:	683b      	ldr	r3, [r7, #0]
  407250:	441a      	add	r2, r3
  407252:	687b      	ldr	r3, [r7, #4]
  407254:	601a      	str	r2, [r3, #0]
  407256:	687b      	ldr	r3, [r7, #4]
  407258:	681b      	ldr	r3, [r3, #0]
  40725a:	60fb      	str	r3, [r7, #12]
    assert(rc >= 0);
  40725c:	68fb      	ldr	r3, [r7, #12]
  40725e:	2b00      	cmp	r3, #0
  407260:	da05      	bge.n	40726e <_zbar_refcnt+0x2e>
  407262:	4805      	ldr	r0, [pc, #20]	; (407278 <_zbar_refcnt+0x38>)
  407264:	2157      	movs	r1, #87	; 0x57
  407266:	4a05      	ldr	r2, [pc, #20]	; (40727c <_zbar_refcnt+0x3c>)
  407268:	4b05      	ldr	r3, [pc, #20]	; (407280 <_zbar_refcnt+0x40>)
  40726a:	4c06      	ldr	r4, [pc, #24]	; (407284 <_zbar_refcnt+0x44>)
  40726c:	47a0      	blx	r4
    return(rc);
  40726e:	68fb      	ldr	r3, [r7, #12]
}
  407270:	4618      	mov	r0, r3
  407272:	3714      	adds	r7, #20
  407274:	46bd      	mov	sp, r7
  407276:	bd90      	pop	{r4, r7, pc}
  407278:	0043c804 	.word	0x0043c804
  40727c:	0043caf8 	.word	0x0043caf8
  407280:	0043c830 	.word	0x0043c830
  407284:	00433d55 	.word	0x00433d55

00407288 <sym_add_point>:
extern void _zbar_symbol_set_free(zbar_symbol_set_t*);

static inline void sym_add_point (zbar_symbol_t *sym,
                                  int x,
                                  int y)
{
  407288:	b580      	push	{r7, lr}
  40728a:	b086      	sub	sp, #24
  40728c:	af00      	add	r7, sp, #0
  40728e:	60f8      	str	r0, [r7, #12]
  407290:	60b9      	str	r1, [r7, #8]
  407292:	607a      	str	r2, [r7, #4]
    int i = sym->npts;
  407294:	68fb      	ldr	r3, [r7, #12]
  407296:	69db      	ldr	r3, [r3, #28]
  407298:	617b      	str	r3, [r7, #20]
    if(++sym->npts >= sym->pts_alloc)
  40729a:	68fb      	ldr	r3, [r7, #12]
  40729c:	69db      	ldr	r3, [r3, #28]
  40729e:	1c5a      	adds	r2, r3, #1
  4072a0:	68fb      	ldr	r3, [r7, #12]
  4072a2:	61da      	str	r2, [r3, #28]
  4072a4:	68fb      	ldr	r3, [r7, #12]
  4072a6:	69da      	ldr	r2, [r3, #28]
  4072a8:	68fb      	ldr	r3, [r7, #12]
  4072aa:	699b      	ldr	r3, [r3, #24]
  4072ac:	429a      	cmp	r2, r3
  4072ae:	d310      	bcc.n	4072d2 <sym_add_point+0x4a>
        sym->pts = realloc(sym->pts, ++sym->pts_alloc * sizeof(point_t));
  4072b0:	68fb      	ldr	r3, [r7, #12]
  4072b2:	6a19      	ldr	r1, [r3, #32]
  4072b4:	68fb      	ldr	r3, [r7, #12]
  4072b6:	699b      	ldr	r3, [r3, #24]
  4072b8:	1c5a      	adds	r2, r3, #1
  4072ba:	68fb      	ldr	r3, [r7, #12]
  4072bc:	619a      	str	r2, [r3, #24]
  4072be:	68fb      	ldr	r3, [r7, #12]
  4072c0:	699b      	ldr	r3, [r3, #24]
  4072c2:	00db      	lsls	r3, r3, #3
  4072c4:	4608      	mov	r0, r1
  4072c6:	4619      	mov	r1, r3
  4072c8:	4b0a      	ldr	r3, [pc, #40]	; (4072f4 <sym_add_point+0x6c>)
  4072ca:	4798      	blx	r3
  4072cc:	4602      	mov	r2, r0
  4072ce:	68fb      	ldr	r3, [r7, #12]
  4072d0:	621a      	str	r2, [r3, #32]
    sym->pts[i].x = x;
  4072d2:	68fb      	ldr	r3, [r7, #12]
  4072d4:	6a1a      	ldr	r2, [r3, #32]
  4072d6:	697b      	ldr	r3, [r7, #20]
  4072d8:	00db      	lsls	r3, r3, #3
  4072da:	4413      	add	r3, r2
  4072dc:	68ba      	ldr	r2, [r7, #8]
  4072de:	601a      	str	r2, [r3, #0]
    sym->pts[i].y = y;
  4072e0:	68fb      	ldr	r3, [r7, #12]
  4072e2:	6a1a      	ldr	r2, [r3, #32]
  4072e4:	697b      	ldr	r3, [r7, #20]
  4072e6:	00db      	lsls	r3, r3, #3
  4072e8:	4413      	add	r3, r2
  4072ea:	687a      	ldr	r2, [r7, #4]
  4072ec:	605a      	str	r2, [r3, #4]
}
  4072ee:	3718      	adds	r7, #24
  4072f0:	46bd      	mov	sp, r7
  4072f2:	bd80      	pop	{r7, pc}
  4072f4:	00435179 	.word	0x00435179

004072f8 <_zbar_symbol_refcnt>:

static inline void _zbar_symbol_refcnt (zbar_symbol_t *sym,
                                        int delta)
{
  4072f8:	b580      	push	{r7, lr}
  4072fa:	b082      	sub	sp, #8
  4072fc:	af00      	add	r7, sp, #0
  4072fe:	6078      	str	r0, [r7, #4]
  407300:	6039      	str	r1, [r7, #0]
    if(!_zbar_refcnt(&sym->refcnt, delta) && delta <= 0)
  407302:	687b      	ldr	r3, [r7, #4]
  407304:	3328      	adds	r3, #40	; 0x28
  407306:	4618      	mov	r0, r3
  407308:	6839      	ldr	r1, [r7, #0]
  40730a:	4b07      	ldr	r3, [pc, #28]	; (407328 <_zbar_symbol_refcnt+0x30>)
  40730c:	4798      	blx	r3
  40730e:	4603      	mov	r3, r0
  407310:	2b00      	cmp	r3, #0
  407312:	d105      	bne.n	407320 <_zbar_symbol_refcnt+0x28>
  407314:	683b      	ldr	r3, [r7, #0]
  407316:	2b00      	cmp	r3, #0
  407318:	dc02      	bgt.n	407320 <_zbar_symbol_refcnt+0x28>
        _zbar_symbol_free(sym);
  40731a:	6878      	ldr	r0, [r7, #4]
  40731c:	4b03      	ldr	r3, [pc, #12]	; (40732c <_zbar_symbol_refcnt+0x34>)
  40731e:	4798      	blx	r3
}
  407320:	3708      	adds	r7, #8
  407322:	46bd      	mov	sp, r7
  407324:	bd80      	pop	{r7, pc}
  407326:	bf00      	nop
  407328:	00407241 	.word	0x00407241
  40732c:	00409169 	.word	0x00409169

00407330 <_zbar_image_scanner_recycle_syms>:
#endif
};

void _zbar_image_scanner_recycle_syms (zbar_image_scanner_t *iscn,
                                       zbar_symbol_t *sym)
{
  407330:	b590      	push	{r4, r7, lr}
  407332:	b087      	sub	sp, #28
  407334:	af00      	add	r7, sp, #0
  407336:	6078      	str	r0, [r7, #4]
  407338:	6039      	str	r1, [r7, #0]
    zbar_symbol_t *next = NULL;
  40733a:	2300      	movs	r3, #0
  40733c:	613b      	str	r3, [r7, #16]
    for(; sym; sym = next) {
  40733e:	e08f      	b.n	407460 <_zbar_image_scanner_recycle_syms+0x130>
        next = sym->next;
  407340:	683b      	ldr	r3, [r7, #0]
  407342:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407344:	613b      	str	r3, [r7, #16]
        if(sym->refcnt && _zbar_refcnt(&sym->refcnt, -1)) {
  407346:	683b      	ldr	r3, [r7, #0]
  407348:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  40734a:	2b00      	cmp	r3, #0
  40734c:	d017      	beq.n	40737e <_zbar_image_scanner_recycle_syms+0x4e>
  40734e:	683b      	ldr	r3, [r7, #0]
  407350:	3328      	adds	r3, #40	; 0x28
  407352:	4618      	mov	r0, r3
  407354:	f04f 31ff 	mov.w	r1, #4294967295
  407358:	4b45      	ldr	r3, [pc, #276]	; (407470 <_zbar_image_scanner_recycle_syms+0x140>)
  40735a:	4798      	blx	r3
  40735c:	4603      	mov	r3, r0
  40735e:	2b00      	cmp	r3, #0
  407360:	d00d      	beq.n	40737e <_zbar_image_scanner_recycle_syms+0x4e>
            /* unlink referenced symbol */
            /* FIXME handle outstanding component refs (currently unsupported)
             */
            assert(sym->data_alloc);
  407362:	683b      	ldr	r3, [r7, #0]
  407364:	68db      	ldr	r3, [r3, #12]
  407366:	2b00      	cmp	r3, #0
  407368:	d105      	bne.n	407376 <_zbar_image_scanner_recycle_syms+0x46>
  40736a:	4842      	ldr	r0, [pc, #264]	; (407474 <_zbar_image_scanner_recycle_syms+0x144>)
  40736c:	2185      	movs	r1, #133	; 0x85
  40736e:	4a42      	ldr	r2, [pc, #264]	; (407478 <_zbar_image_scanner_recycle_syms+0x148>)
  407370:	4b42      	ldr	r3, [pc, #264]	; (40747c <_zbar_image_scanner_recycle_syms+0x14c>)
  407372:	4c43      	ldr	r4, [pc, #268]	; (407480 <_zbar_image_scanner_recycle_syms+0x150>)
  407374:	47a0      	blx	r4
            sym->next = NULL;
  407376:	683b      	ldr	r3, [r7, #0]
  407378:	2200      	movs	r2, #0
  40737a:	62da      	str	r2, [r3, #44]	; 0x2c
  40737c:	e06e      	b.n	40745c <_zbar_image_scanner_recycle_syms+0x12c>
        }
        else {
            int i;
            recycle_bucket_t *bucket;
            /* recycle unreferenced symbol */
            if(!sym->data_alloc) {
  40737e:	683b      	ldr	r3, [r7, #0]
  407380:	68db      	ldr	r3, [r3, #12]
  407382:	2b00      	cmp	r3, #0
  407384:	d105      	bne.n	407392 <_zbar_image_scanner_recycle_syms+0x62>
                sym->data = NULL;
  407386:	683b      	ldr	r3, [r7, #0]
  407388:	2200      	movs	r2, #0
  40738a:	615a      	str	r2, [r3, #20]
                sym->datalen = 0;
  40738c:	683b      	ldr	r3, [r7, #0]
  40738e:	2200      	movs	r2, #0
  407390:	611a      	str	r2, [r3, #16]
            }
            if(sym->syms) {
  407392:	683b      	ldr	r3, [r7, #0]
  407394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  407396:	2b00      	cmp	r3, #0
  407398:	d022      	beq.n	4073e0 <_zbar_image_scanner_recycle_syms+0xb0>
                if(_zbar_refcnt(&sym->syms->refcnt, -1))
  40739a:	683b      	ldr	r3, [r7, #0]
  40739c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40739e:	4618      	mov	r0, r3
  4073a0:	f04f 31ff 	mov.w	r1, #4294967295
  4073a4:	4b32      	ldr	r3, [pc, #200]	; (407470 <_zbar_image_scanner_recycle_syms+0x140>)
  4073a6:	4798      	blx	r3
  4073a8:	4603      	mov	r3, r0
  4073aa:	2b00      	cmp	r3, #0
  4073ac:	d005      	beq.n	4073ba <_zbar_image_scanner_recycle_syms+0x8a>
                    assert(0);
  4073ae:	4831      	ldr	r0, [pc, #196]	; (407474 <_zbar_image_scanner_recycle_syms+0x144>)
  4073b0:	2192      	movs	r1, #146	; 0x92
  4073b2:	4a31      	ldr	r2, [pc, #196]	; (407478 <_zbar_image_scanner_recycle_syms+0x148>)
  4073b4:	4b33      	ldr	r3, [pc, #204]	; (407484 <_zbar_image_scanner_recycle_syms+0x154>)
  4073b6:	4c32      	ldr	r4, [pc, #200]	; (407480 <_zbar_image_scanner_recycle_syms+0x150>)
  4073b8:	47a0      	blx	r4
                _zbar_image_scanner_recycle_syms(iscn, sym->syms->head);
  4073ba:	683b      	ldr	r3, [r7, #0]
  4073bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4073be:	689b      	ldr	r3, [r3, #8]
  4073c0:	6878      	ldr	r0, [r7, #4]
  4073c2:	4619      	mov	r1, r3
  4073c4:	f7ff ffb4 	bl	407330 <_zbar_image_scanner_recycle_syms>
                sym->syms->head = NULL;
  4073c8:	683b      	ldr	r3, [r7, #0]
  4073ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4073cc:	2200      	movs	r2, #0
  4073ce:	609a      	str	r2, [r3, #8]
                _zbar_symbol_set_free(sym->syms);
  4073d0:	683b      	ldr	r3, [r7, #0]
  4073d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4073d4:	4618      	mov	r0, r3
  4073d6:	4b2c      	ldr	r3, [pc, #176]	; (407488 <_zbar_image_scanner_recycle_syms+0x158>)
  4073d8:	4798      	blx	r3
                sym->syms = NULL;
  4073da:	683b      	ldr	r3, [r7, #0]
  4073dc:	2200      	movs	r2, #0
  4073de:	631a      	str	r2, [r3, #48]	; 0x30
            }
            for(i = 0; i < RECYCLE_BUCKETS; i++)
  4073e0:	2300      	movs	r3, #0
  4073e2:	617b      	str	r3, [r7, #20]
  4073e4:	e00b      	b.n	4073fe <_zbar_image_scanner_recycle_syms+0xce>
                if(sym->data_alloc < 1 << (i * 2))
  4073e6:	683b      	ldr	r3, [r7, #0]
  4073e8:	68da      	ldr	r2, [r3, #12]
  4073ea:	697b      	ldr	r3, [r7, #20]
  4073ec:	005b      	lsls	r3, r3, #1
  4073ee:	fa22 f303 	lsr.w	r3, r2, r3
  4073f2:	2b00      	cmp	r3, #0
  4073f4:	d100      	bne.n	4073f8 <_zbar_image_scanner_recycle_syms+0xc8>
                    break;
  4073f6:	e005      	b.n	407404 <_zbar_image_scanner_recycle_syms+0xd4>
                _zbar_image_scanner_recycle_syms(iscn, sym->syms->head);
                sym->syms->head = NULL;
                _zbar_symbol_set_free(sym->syms);
                sym->syms = NULL;
            }
            for(i = 0; i < RECYCLE_BUCKETS; i++)
  4073f8:	697b      	ldr	r3, [r7, #20]
  4073fa:	3301      	adds	r3, #1
  4073fc:	617b      	str	r3, [r7, #20]
  4073fe:	697b      	ldr	r3, [r7, #20]
  407400:	2b04      	cmp	r3, #4
  407402:	ddf0      	ble.n	4073e6 <_zbar_image_scanner_recycle_syms+0xb6>
                if(sym->data_alloc < 1 << (i * 2))
                    break;
            if(i == RECYCLE_BUCKETS) {
  407404:	697b      	ldr	r3, [r7, #20]
  407406:	2b05      	cmp	r3, #5
  407408:	d116      	bne.n	407438 <_zbar_image_scanner_recycle_syms+0x108>
                assert(sym->data);
  40740a:	683b      	ldr	r3, [r7, #0]
  40740c:	695b      	ldr	r3, [r3, #20]
  40740e:	2b00      	cmp	r3, #0
  407410:	d105      	bne.n	40741e <_zbar_image_scanner_recycle_syms+0xee>
  407412:	4818      	ldr	r0, [pc, #96]	; (407474 <_zbar_image_scanner_recycle_syms+0x144>)
  407414:	219c      	movs	r1, #156	; 0x9c
  407416:	4a18      	ldr	r2, [pc, #96]	; (407478 <_zbar_image_scanner_recycle_syms+0x148>)
  407418:	4b1c      	ldr	r3, [pc, #112]	; (40748c <_zbar_image_scanner_recycle_syms+0x15c>)
  40741a:	4c19      	ldr	r4, [pc, #100]	; (407480 <_zbar_image_scanner_recycle_syms+0x150>)
  40741c:	47a0      	blx	r4
                free(sym->data);
  40741e:	683b      	ldr	r3, [r7, #0]
  407420:	695b      	ldr	r3, [r3, #20]
  407422:	4618      	mov	r0, r3
  407424:	4b1a      	ldr	r3, [pc, #104]	; (407490 <_zbar_image_scanner_recycle_syms+0x160>)
  407426:	4798      	blx	r3
                sym->data = NULL;
  407428:	683b      	ldr	r3, [r7, #0]
  40742a:	2200      	movs	r2, #0
  40742c:	615a      	str	r2, [r3, #20]
                sym->data_alloc = 0;
  40742e:	683b      	ldr	r3, [r7, #0]
  407430:	2200      	movs	r2, #0
  407432:	60da      	str	r2, [r3, #12]
                i = 0;
  407434:	2300      	movs	r3, #0
  407436:	617b      	str	r3, [r7, #20]
            }
            bucket = &iscn->recycle[i];
  407438:	697b      	ldr	r3, [r7, #20]
  40743a:	3306      	adds	r3, #6
  40743c:	00db      	lsls	r3, r3, #3
  40743e:	687a      	ldr	r2, [r7, #4]
  407440:	4413      	add	r3, r2
  407442:	60fb      	str	r3, [r7, #12]
            /* FIXME cap bucket fill */
            bucket->nsyms++;
  407444:	68fb      	ldr	r3, [r7, #12]
  407446:	681b      	ldr	r3, [r3, #0]
  407448:	1c5a      	adds	r2, r3, #1
  40744a:	68fb      	ldr	r3, [r7, #12]
  40744c:	601a      	str	r2, [r3, #0]
            sym->next = bucket->head;
  40744e:	68fb      	ldr	r3, [r7, #12]
  407450:	685a      	ldr	r2, [r3, #4]
  407452:	683b      	ldr	r3, [r7, #0]
  407454:	62da      	str	r2, [r3, #44]	; 0x2c
            bucket->head = sym;
  407456:	68fb      	ldr	r3, [r7, #12]
  407458:	683a      	ldr	r2, [r7, #0]
  40745a:	605a      	str	r2, [r3, #4]

void _zbar_image_scanner_recycle_syms (zbar_image_scanner_t *iscn,
                                       zbar_symbol_t *sym)
{
    zbar_symbol_t *next = NULL;
    for(; sym; sym = next) {
  40745c:	693b      	ldr	r3, [r7, #16]
  40745e:	603b      	str	r3, [r7, #0]
  407460:	683b      	ldr	r3, [r7, #0]
  407462:	2b00      	cmp	r3, #0
  407464:	f47f af6c 	bne.w	407340 <_zbar_image_scanner_recycle_syms+0x10>
            bucket->nsyms++;
            sym->next = bucket->head;
            bucket->head = sym;
        }
    }
}
  407468:	371c      	adds	r7, #28
  40746a:	46bd      	mov	sp, r7
  40746c:	bd90      	pop	{r4, r7, pc}
  40746e:	bf00      	nop
  407470:	00407241 	.word	0x00407241
  407474:	0043c838 	.word	0x0043c838
  407478:	0043cad4 	.word	0x0043cad4
  40747c:	0043c864 	.word	0x0043c864
  407480:	00433d55 	.word	0x00433d55
  407484:	0043c874 	.word	0x0043c874
  407488:	00409251 	.word	0x00409251
  40748c:	0043c878 	.word	0x0043c878
  407490:	004348ad 	.word	0x004348ad

00407494 <recycle_syms>:

static inline int recycle_syms (zbar_image_scanner_t *iscn,
                                zbar_symbol_set_t *syms)
{
  407494:	b580      	push	{r7, lr}
  407496:	b082      	sub	sp, #8
  407498:	af00      	add	r7, sp, #0
  40749a:	6078      	str	r0, [r7, #4]
  40749c:	6039      	str	r1, [r7, #0]
    if(_zbar_refcnt(&syms->refcnt, -1))
  40749e:	683b      	ldr	r3, [r7, #0]
  4074a0:	4618      	mov	r0, r3
  4074a2:	f04f 31ff 	mov.w	r1, #4294967295
  4074a6:	4b0e      	ldr	r3, [pc, #56]	; (4074e0 <recycle_syms+0x4c>)
  4074a8:	4798      	blx	r3
  4074aa:	4603      	mov	r3, r0
  4074ac:	2b00      	cmp	r3, #0
  4074ae:	d001      	beq.n	4074b4 <recycle_syms+0x20>
        return(1);
  4074b0:	2301      	movs	r3, #1
  4074b2:	e010      	b.n	4074d6 <recycle_syms+0x42>

    _zbar_image_scanner_recycle_syms(iscn, syms->head);
  4074b4:	683b      	ldr	r3, [r7, #0]
  4074b6:	689b      	ldr	r3, [r3, #8]
  4074b8:	6878      	ldr	r0, [r7, #4]
  4074ba:	4619      	mov	r1, r3
  4074bc:	4b09      	ldr	r3, [pc, #36]	; (4074e4 <recycle_syms+0x50>)
  4074be:	4798      	blx	r3
    syms->head = syms->tail = NULL;
  4074c0:	683b      	ldr	r3, [r7, #0]
  4074c2:	2200      	movs	r2, #0
  4074c4:	60da      	str	r2, [r3, #12]
  4074c6:	683b      	ldr	r3, [r7, #0]
  4074c8:	68da      	ldr	r2, [r3, #12]
  4074ca:	683b      	ldr	r3, [r7, #0]
  4074cc:	609a      	str	r2, [r3, #8]
    syms->nsyms = 0;
  4074ce:	683b      	ldr	r3, [r7, #0]
  4074d0:	2200      	movs	r2, #0
  4074d2:	605a      	str	r2, [r3, #4]
    return(0);
  4074d4:	2300      	movs	r3, #0
}
  4074d6:	4618      	mov	r0, r3
  4074d8:	3708      	adds	r7, #8
  4074da:	46bd      	mov	sp, r7
  4074dc:	bd80      	pop	{r7, pc}
  4074de:	bf00      	nop
  4074e0:	00407241 	.word	0x00407241
  4074e4:	00407331 	.word	0x00407331

004074e8 <zbar_image_scanner_recycle_image>:

inline void zbar_image_scanner_recycle_image (zbar_image_scanner_t *iscn,
                                              zbar_image_t *img)
{
  4074e8:	b580      	push	{r7, lr}
  4074ea:	b084      	sub	sp, #16
  4074ec:	af00      	add	r7, sp, #0
  4074ee:	6078      	str	r0, [r7, #4]
  4074f0:	6039      	str	r1, [r7, #0]
    zbar_symbol_set_t *syms = iscn->syms;
  4074f2:	687b      	ldr	r3, [r7, #4]
  4074f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4074f6:	60fb      	str	r3, [r7, #12]
    if(syms && syms->refcnt) {
  4074f8:	68fb      	ldr	r3, [r7, #12]
  4074fa:	2b00      	cmp	r3, #0
  4074fc:	d01c      	beq.n	407538 <zbar_image_scanner_recycle_image+0x50>
  4074fe:	68fb      	ldr	r3, [r7, #12]
  407500:	681b      	ldr	r3, [r3, #0]
  407502:	2b00      	cmp	r3, #0
  407504:	d018      	beq.n	407538 <zbar_image_scanner_recycle_image+0x50>
        if(recycle_syms(iscn, syms)) {
  407506:	6878      	ldr	r0, [r7, #4]
  407508:	68f9      	ldr	r1, [r7, #12]
  40750a:	4b23      	ldr	r3, [pc, #140]	; (407598 <zbar_image_scanner_recycle_image+0xb0>)
  40750c:	4798      	blx	r3
  40750e:	4603      	mov	r3, r0
  407510:	2b00      	cmp	r3, #0
  407512:	d00a      	beq.n	40752a <zbar_image_scanner_recycle_image+0x42>
            STAT(iscn_syms_inuse);
  407514:	687b      	ldr	r3, [r7, #4]
  407516:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
  40751a:	1c5a      	adds	r2, r3, #1
  40751c:	687b      	ldr	r3, [r7, #4]
  40751e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
            iscn->syms = NULL;
  407522:	687b      	ldr	r3, [r7, #4]
  407524:	2200      	movs	r2, #0
  407526:	62da      	str	r2, [r3, #44]	; 0x2c
  407528:	e006      	b.n	407538 <zbar_image_scanner_recycle_image+0x50>
        }
        else
            STAT(iscn_syms_recycle);
  40752a:	687b      	ldr	r3, [r7, #4]
  40752c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
  407530:	1c5a      	adds	r2, r3, #1
  407532:	687b      	ldr	r3, [r7, #4]
  407534:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
    }

    syms = img->syms;
  407538:	683b      	ldr	r3, [r7, #0]
  40753a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  40753c:	60fb      	str	r3, [r7, #12]
    img->syms = NULL;
  40753e:	683b      	ldr	r3, [r7, #0]
  407540:	2200      	movs	r2, #0
  407542:	641a      	str	r2, [r3, #64]	; 0x40
    if(syms && recycle_syms(iscn, syms))
  407544:	68fb      	ldr	r3, [r7, #12]
  407546:	2b00      	cmp	r3, #0
  407548:	d00e      	beq.n	407568 <zbar_image_scanner_recycle_image+0x80>
  40754a:	6878      	ldr	r0, [r7, #4]
  40754c:	68f9      	ldr	r1, [r7, #12]
  40754e:	4b12      	ldr	r3, [pc, #72]	; (407598 <zbar_image_scanner_recycle_image+0xb0>)
  407550:	4798      	blx	r3
  407552:	4603      	mov	r3, r0
  407554:	2b00      	cmp	r3, #0
  407556:	d007      	beq.n	407568 <zbar_image_scanner_recycle_image+0x80>
        STAT(img_syms_inuse);
  407558:	687b      	ldr	r3, [r7, #4]
  40755a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
  40755e:	1c5a      	adds	r2, r3, #1
  407560:	687b      	ldr	r3, [r7, #4]
  407562:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
  407566:	e014      	b.n	407592 <zbar_image_scanner_recycle_image+0xaa>
    else if(syms) {
  407568:	68fb      	ldr	r3, [r7, #12]
  40756a:	2b00      	cmp	r3, #0
  40756c:	d011      	beq.n	407592 <zbar_image_scanner_recycle_image+0xaa>
        STAT(img_syms_recycle);
  40756e:	687b      	ldr	r3, [r7, #4]
  407570:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
  407574:	1c5a      	adds	r2, r3, #1
  407576:	687b      	ldr	r3, [r7, #4]
  407578:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0

        /* select one set to resurrect, destroy the other */
        if(iscn->syms)
  40757c:	687b      	ldr	r3, [r7, #4]
  40757e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407580:	2b00      	cmp	r3, #0
  407582:	d003      	beq.n	40758c <zbar_image_scanner_recycle_image+0xa4>
            _zbar_symbol_set_free(syms);
  407584:	68f8      	ldr	r0, [r7, #12]
  407586:	4b05      	ldr	r3, [pc, #20]	; (40759c <zbar_image_scanner_recycle_image+0xb4>)
  407588:	4798      	blx	r3
  40758a:	e002      	b.n	407592 <zbar_image_scanner_recycle_image+0xaa>
        else
            iscn->syms = syms;
  40758c:	687b      	ldr	r3, [r7, #4]
  40758e:	68fa      	ldr	r2, [r7, #12]
  407590:	62da      	str	r2, [r3, #44]	; 0x2c
    }
}
  407592:	3710      	adds	r7, #16
  407594:	46bd      	mov	sp, r7
  407596:	bd80      	pop	{r7, pc}
  407598:	00407495 	.word	0x00407495
  40759c:	00409251 	.word	0x00409251

004075a0 <_zbar_image_scanner_alloc_sym>:

inline zbar_symbol_t*
_zbar_image_scanner_alloc_sym (zbar_image_scanner_t *iscn,
                               zbar_symbol_type_t type,
                               int datalen)
{
  4075a0:	b590      	push	{r4, r7, lr}
  4075a2:	b087      	sub	sp, #28
  4075a4:	af00      	add	r7, sp, #0
  4075a6:	60f8      	str	r0, [r7, #12]
  4075a8:	460b      	mov	r3, r1
  4075aa:	607a      	str	r2, [r7, #4]
  4075ac:	817b      	strh	r3, [r7, #10]
    /* recycle old or alloc new symbol */
    zbar_symbol_t *sym = NULL;
  4075ae:	2300      	movs	r3, #0
  4075b0:	617b      	str	r3, [r7, #20]
    int i;
    for(i = 0; i < RECYCLE_BUCKETS - 1; i++)
  4075b2:	2300      	movs	r3, #0
  4075b4:	613b      	str	r3, [r7, #16]
  4075b6:	e00a      	b.n	4075ce <_zbar_image_scanner_alloc_sym+0x2e>
        if(datalen <= 1 << (i * 2))
  4075b8:	693b      	ldr	r3, [r7, #16]
  4075ba:	005b      	lsls	r3, r3, #1
  4075bc:	2201      	movs	r2, #1
  4075be:	409a      	lsls	r2, r3
  4075c0:	687b      	ldr	r3, [r7, #4]
  4075c2:	429a      	cmp	r2, r3
  4075c4:	db00      	blt.n	4075c8 <_zbar_image_scanner_alloc_sym+0x28>
            break;
  4075c6:	e005      	b.n	4075d4 <_zbar_image_scanner_alloc_sym+0x34>
                               int datalen)
{
    /* recycle old or alloc new symbol */
    zbar_symbol_t *sym = NULL;
    int i;
    for(i = 0; i < RECYCLE_BUCKETS - 1; i++)
  4075c8:	693b      	ldr	r3, [r7, #16]
  4075ca:	3301      	adds	r3, #1
  4075cc:	613b      	str	r3, [r7, #16]
  4075ce:	693b      	ldr	r3, [r7, #16]
  4075d0:	2b03      	cmp	r3, #3
  4075d2:	ddf1      	ble.n	4075b8 <_zbar_image_scanner_alloc_sym+0x18>
        if(datalen <= 1 << (i * 2))
            break;

    for(; i > 0; i--)
  4075d4:	e018      	b.n	407608 <_zbar_image_scanner_alloc_sym+0x68>
        if((sym = iscn->recycle[i].head)) {
  4075d6:	68fa      	ldr	r2, [r7, #12]
  4075d8:	693b      	ldr	r3, [r7, #16]
  4075da:	3306      	adds	r3, #6
  4075dc:	00db      	lsls	r3, r3, #3
  4075de:	4413      	add	r3, r2
  4075e0:	685b      	ldr	r3, [r3, #4]
  4075e2:	617b      	str	r3, [r7, #20]
  4075e4:	697b      	ldr	r3, [r7, #20]
  4075e6:	2b00      	cmp	r3, #0
  4075e8:	d00b      	beq.n	407602 <_zbar_image_scanner_alloc_sym+0x62>
            STAT(sym_recycle[i]);
  4075ea:	68fb      	ldr	r3, [r7, #12]
  4075ec:	693a      	ldr	r2, [r7, #16]
  4075ee:	3236      	adds	r2, #54	; 0x36
  4075f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  4075f4:	1c59      	adds	r1, r3, #1
  4075f6:	68fb      	ldr	r3, [r7, #12]
  4075f8:	693a      	ldr	r2, [r7, #16]
  4075fa:	3236      	adds	r2, #54	; 0x36
  4075fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
            break;
  407600:	e005      	b.n	40760e <_zbar_image_scanner_alloc_sym+0x6e>
    int i;
    for(i = 0; i < RECYCLE_BUCKETS - 1; i++)
        if(datalen <= 1 << (i * 2))
            break;

    for(; i > 0; i--)
  407602:	693b      	ldr	r3, [r7, #16]
  407604:	3b01      	subs	r3, #1
  407606:	613b      	str	r3, [r7, #16]
  407608:	693b      	ldr	r3, [r7, #16]
  40760a:	2b00      	cmp	r3, #0
  40760c:	dce3      	bgt.n	4075d6 <_zbar_image_scanner_alloc_sym+0x36>
        if((sym = iscn->recycle[i].head)) {
            STAT(sym_recycle[i]);
            break;
        }

    if(sym) {
  40760e:	697b      	ldr	r3, [r7, #20]
  407610:	2b00      	cmp	r3, #0
  407612:	d023      	beq.n	40765c <_zbar_image_scanner_alloc_sym+0xbc>
        iscn->recycle[i].head = sym->next;
  407614:	697b      	ldr	r3, [r7, #20]
  407616:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  407618:	68f9      	ldr	r1, [r7, #12]
  40761a:	693b      	ldr	r3, [r7, #16]
  40761c:	3306      	adds	r3, #6
  40761e:	00db      	lsls	r3, r3, #3
  407620:	440b      	add	r3, r1
  407622:	605a      	str	r2, [r3, #4]
        sym->next = NULL;
  407624:	697b      	ldr	r3, [r7, #20]
  407626:	2200      	movs	r2, #0
  407628:	62da      	str	r2, [r3, #44]	; 0x2c
        assert(iscn->recycle[i].nsyms);
  40762a:	68fb      	ldr	r3, [r7, #12]
  40762c:	693a      	ldr	r2, [r7, #16]
  40762e:	3206      	adds	r2, #6
  407630:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
  407634:	2b00      	cmp	r3, #0
  407636:	d105      	bne.n	407644 <_zbar_image_scanner_alloc_sym+0xa4>
  407638:	483b      	ldr	r0, [pc, #236]	; (407728 <_zbar_image_scanner_alloc_sym+0x188>)
  40763a:	21e8      	movs	r1, #232	; 0xe8
  40763c:	4a3b      	ldr	r2, [pc, #236]	; (40772c <_zbar_image_scanner_alloc_sym+0x18c>)
  40763e:	4b3c      	ldr	r3, [pc, #240]	; (407730 <_zbar_image_scanner_alloc_sym+0x190>)
  407640:	4c3c      	ldr	r4, [pc, #240]	; (407734 <_zbar_image_scanner_alloc_sym+0x194>)
  407642:	47a0      	blx	r4
        iscn->recycle[i].nsyms--;
  407644:	68fb      	ldr	r3, [r7, #12]
  407646:	693a      	ldr	r2, [r7, #16]
  407648:	3206      	adds	r2, #6
  40764a:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
  40764e:	1e59      	subs	r1, r3, #1
  407650:	68fb      	ldr	r3, [r7, #12]
  407652:	693a      	ldr	r2, [r7, #16]
  407654:	3206      	adds	r2, #6
  407656:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
  40765a:	e00c      	b.n	407676 <_zbar_image_scanner_alloc_sym+0xd6>
    }
    else {
        sym = calloc(1, sizeof(zbar_symbol_t));
  40765c:	2001      	movs	r0, #1
  40765e:	2140      	movs	r1, #64	; 0x40
  407660:	4b35      	ldr	r3, [pc, #212]	; (407738 <_zbar_image_scanner_alloc_sym+0x198>)
  407662:	4798      	blx	r3
  407664:	4603      	mov	r3, r0
  407666:	617b      	str	r3, [r7, #20]
        STAT(sym_new);
  407668:	68fb      	ldr	r3, [r7, #12]
  40766a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  40766e:	1c5a      	adds	r2, r3, #1
  407670:	68fb      	ldr	r3, [r7, #12]
  407672:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    }

    /* init new symbol */
    sym->type = type;
  407676:	697b      	ldr	r3, [r7, #20]
  407678:	897a      	ldrh	r2, [r7, #10]
  40767a:	801a      	strh	r2, [r3, #0]
    sym->quality = 1;
  40767c:	697b      	ldr	r3, [r7, #20]
  40767e:	2201      	movs	r2, #1
  407680:	63da      	str	r2, [r3, #60]	; 0x3c
    sym->npts = 0;
  407682:	697b      	ldr	r3, [r7, #20]
  407684:	2200      	movs	r2, #0
  407686:	61da      	str	r2, [r3, #28]
    sym->orient = ZBAR_ORIENT_UNKNOWN;
  407688:	697b      	ldr	r3, [r7, #20]
  40768a:	22ff      	movs	r2, #255	; 0xff
  40768c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    sym->cache_count = 0;
  407690:	697b      	ldr	r3, [r7, #20]
  407692:	2200      	movs	r2, #0
  407694:	639a      	str	r2, [r3, #56]	; 0x38
    sym->time = iscn->time;
  407696:	68fb      	ldr	r3, [r7, #12]
  407698:	691a      	ldr	r2, [r3, #16]
  40769a:	697b      	ldr	r3, [r7, #20]
  40769c:	635a      	str	r2, [r3, #52]	; 0x34
    assert(!sym->syms);
  40769e:	697b      	ldr	r3, [r7, #20]
  4076a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4076a2:	2b00      	cmp	r3, #0
  4076a4:	d005      	beq.n	4076b2 <_zbar_image_scanner_alloc_sym+0x112>
  4076a6:	4820      	ldr	r0, [pc, #128]	; (407728 <_zbar_image_scanner_alloc_sym+0x188>)
  4076a8:	21f7      	movs	r1, #247	; 0xf7
  4076aa:	4a20      	ldr	r2, [pc, #128]	; (40772c <_zbar_image_scanner_alloc_sym+0x18c>)
  4076ac:	4b23      	ldr	r3, [pc, #140]	; (40773c <_zbar_image_scanner_alloc_sym+0x19c>)
  4076ae:	4c21      	ldr	r4, [pc, #132]	; (407734 <_zbar_image_scanner_alloc_sym+0x194>)
  4076b0:	47a0      	blx	r4

    if(datalen > 0) {
  4076b2:	687b      	ldr	r3, [r7, #4]
  4076b4:	2b00      	cmp	r3, #0
  4076b6:	dd1e      	ble.n	4076f6 <_zbar_image_scanner_alloc_sym+0x156>
        sym->datalen = datalen - 1;
  4076b8:	687b      	ldr	r3, [r7, #4]
  4076ba:	3b01      	subs	r3, #1
  4076bc:	461a      	mov	r2, r3
  4076be:	697b      	ldr	r3, [r7, #20]
  4076c0:	611a      	str	r2, [r3, #16]
        if(sym->data_alloc < datalen) {
  4076c2:	697b      	ldr	r3, [r7, #20]
  4076c4:	68da      	ldr	r2, [r3, #12]
  4076c6:	687b      	ldr	r3, [r7, #4]
  4076c8:	429a      	cmp	r2, r3
  4076ca:	d227      	bcs.n	40771c <_zbar_image_scanner_alloc_sym+0x17c>
            if(sym->data)
  4076cc:	697b      	ldr	r3, [r7, #20]
  4076ce:	695b      	ldr	r3, [r3, #20]
  4076d0:	2b00      	cmp	r3, #0
  4076d2:	d004      	beq.n	4076de <_zbar_image_scanner_alloc_sym+0x13e>
                free(sym->data);
  4076d4:	697b      	ldr	r3, [r7, #20]
  4076d6:	695b      	ldr	r3, [r3, #20]
  4076d8:	4618      	mov	r0, r3
  4076da:	4b19      	ldr	r3, [pc, #100]	; (407740 <_zbar_image_scanner_alloc_sym+0x1a0>)
  4076dc:	4798      	blx	r3
            sym->data_alloc = datalen;
  4076de:	687a      	ldr	r2, [r7, #4]
  4076e0:	697b      	ldr	r3, [r7, #20]
  4076e2:	60da      	str	r2, [r3, #12]
            sym->data = malloc(datalen);
  4076e4:	687b      	ldr	r3, [r7, #4]
  4076e6:	4618      	mov	r0, r3
  4076e8:	4b16      	ldr	r3, [pc, #88]	; (407744 <_zbar_image_scanner_alloc_sym+0x1a4>)
  4076ea:	4798      	blx	r3
  4076ec:	4603      	mov	r3, r0
  4076ee:	461a      	mov	r2, r3
  4076f0:	697b      	ldr	r3, [r7, #20]
  4076f2:	615a      	str	r2, [r3, #20]
  4076f4:	e012      	b.n	40771c <_zbar_image_scanner_alloc_sym+0x17c>
        }
    }
    else {
        if(sym->data)
  4076f6:	697b      	ldr	r3, [r7, #20]
  4076f8:	695b      	ldr	r3, [r3, #20]
  4076fa:	2b00      	cmp	r3, #0
  4076fc:	d004      	beq.n	407708 <_zbar_image_scanner_alloc_sym+0x168>
            free(sym->data);
  4076fe:	697b      	ldr	r3, [r7, #20]
  407700:	695b      	ldr	r3, [r3, #20]
  407702:	4618      	mov	r0, r3
  407704:	4b0e      	ldr	r3, [pc, #56]	; (407740 <_zbar_image_scanner_alloc_sym+0x1a0>)
  407706:	4798      	blx	r3
        sym->data = NULL;
  407708:	697b      	ldr	r3, [r7, #20]
  40770a:	2200      	movs	r2, #0
  40770c:	615a      	str	r2, [r3, #20]
        sym->datalen = sym->data_alloc = 0;
  40770e:	697b      	ldr	r3, [r7, #20]
  407710:	2200      	movs	r2, #0
  407712:	60da      	str	r2, [r3, #12]
  407714:	697b      	ldr	r3, [r7, #20]
  407716:	68da      	ldr	r2, [r3, #12]
  407718:	697b      	ldr	r3, [r7, #20]
  40771a:	611a      	str	r2, [r3, #16]
    }
    return(sym);
  40771c:	697b      	ldr	r3, [r7, #20]
}
  40771e:	4618      	mov	r0, r3
  407720:	371c      	adds	r7, #28
  407722:	46bd      	mov	sp, r7
  407724:	bd90      	pop	{r4, r7, pc}
  407726:	bf00      	nop
  407728:	0043c838 	.word	0x0043c838
  40772c:	0043cb08 	.word	0x0043cb08
  407730:	0043c884 	.word	0x0043c884
  407734:	00433d55 	.word	0x00433d55
  407738:	00433d91 	.word	0x00433d91
  40773c:	0043c89c 	.word	0x0043c89c
  407740:	004348ad 	.word	0x004348ad
  407744:	0043489d 	.word	0x0043489d

00407748 <cache_lookup>:

static inline zbar_symbol_t *cache_lookup (zbar_image_scanner_t *iscn,
                                           zbar_symbol_t *sym)
{
  407748:	b580      	push	{r7, lr}
  40774a:	b084      	sub	sp, #16
  40774c:	af00      	add	r7, sp, #0
  40774e:	6078      	str	r0, [r7, #4]
  407750:	6039      	str	r1, [r7, #0]
    /* search for matching entry in cache */
    zbar_symbol_t **entry = &iscn->cache;
  407752:	687b      	ldr	r3, [r7, #4]
  407754:	335c      	adds	r3, #92	; 0x5c
  407756:	60fb      	str	r3, [r7, #12]
    while(*entry) {
  407758:	e03c      	b.n	4077d4 <cache_lookup+0x8c>
        if((*entry)->type == sym->type &&
  40775a:	68fb      	ldr	r3, [r7, #12]
  40775c:	681b      	ldr	r3, [r3, #0]
  40775e:	881a      	ldrh	r2, [r3, #0]
  407760:	683b      	ldr	r3, [r7, #0]
  407762:	881b      	ldrh	r3, [r3, #0]
  407764:	429a      	cmp	r2, r3
  407766:	d116      	bne.n	407796 <cache_lookup+0x4e>
           (*entry)->datalen == sym->datalen &&
  407768:	68fb      	ldr	r3, [r7, #12]
  40776a:	681b      	ldr	r3, [r3, #0]
  40776c:	691a      	ldr	r2, [r3, #16]
  40776e:	683b      	ldr	r3, [r7, #0]
  407770:	691b      	ldr	r3, [r3, #16]
                                           zbar_symbol_t *sym)
{
    /* search for matching entry in cache */
    zbar_symbol_t **entry = &iscn->cache;
    while(*entry) {
        if((*entry)->type == sym->type &&
  407772:	429a      	cmp	r2, r3
  407774:	d10f      	bne.n	407796 <cache_lookup+0x4e>
           (*entry)->datalen == sym->datalen &&
           !memcmp((*entry)->data, sym->data, sym->datalen))
  407776:	68fb      	ldr	r3, [r7, #12]
  407778:	681b      	ldr	r3, [r3, #0]
  40777a:	6959      	ldr	r1, [r3, #20]
  40777c:	683b      	ldr	r3, [r7, #0]
  40777e:	695a      	ldr	r2, [r3, #20]
  407780:	683b      	ldr	r3, [r7, #0]
  407782:	691b      	ldr	r3, [r3, #16]
  407784:	4608      	mov	r0, r1
  407786:	4611      	mov	r1, r2
  407788:	461a      	mov	r2, r3
  40778a:	4b17      	ldr	r3, [pc, #92]	; (4077e8 <cache_lookup+0xa0>)
  40778c:	4798      	blx	r3
  40778e:	4603      	mov	r3, r0
{
    /* search for matching entry in cache */
    zbar_symbol_t **entry = &iscn->cache;
    while(*entry) {
        if((*entry)->type == sym->type &&
           (*entry)->datalen == sym->datalen &&
  407790:	2b00      	cmp	r3, #0
  407792:	d100      	bne.n	407796 <cache_lookup+0x4e>
           !memcmp((*entry)->data, sym->data, sym->datalen))
            break;
  407794:	e022      	b.n	4077dc <cache_lookup+0x94>
        if((sym->time - (*entry)->time) > CACHE_TIMEOUT) {
  407796:	683b      	ldr	r3, [r7, #0]
  407798:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  40779a:	68fb      	ldr	r3, [r7, #12]
  40779c:	681b      	ldr	r3, [r3, #0]
  40779e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4077a0:	1ad3      	subs	r3, r2, r3
  4077a2:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
  4077a6:	d911      	bls.n	4077cc <cache_lookup+0x84>
            /* recycle stale cache entry */
            zbar_symbol_t *next = (*entry)->next;
  4077a8:	68fb      	ldr	r3, [r7, #12]
  4077aa:	681b      	ldr	r3, [r3, #0]
  4077ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4077ae:	60bb      	str	r3, [r7, #8]
            (*entry)->next = NULL;
  4077b0:	68fb      	ldr	r3, [r7, #12]
  4077b2:	681b      	ldr	r3, [r3, #0]
  4077b4:	2200      	movs	r2, #0
  4077b6:	62da      	str	r2, [r3, #44]	; 0x2c
            _zbar_image_scanner_recycle_syms(iscn, *entry);
  4077b8:	68fb      	ldr	r3, [r7, #12]
  4077ba:	681b      	ldr	r3, [r3, #0]
  4077bc:	6878      	ldr	r0, [r7, #4]
  4077be:	4619      	mov	r1, r3
  4077c0:	4b0a      	ldr	r3, [pc, #40]	; (4077ec <cache_lookup+0xa4>)
  4077c2:	4798      	blx	r3
            *entry = next;
  4077c4:	68fb      	ldr	r3, [r7, #12]
  4077c6:	68ba      	ldr	r2, [r7, #8]
  4077c8:	601a      	str	r2, [r3, #0]
  4077ca:	e003      	b.n	4077d4 <cache_lookup+0x8c>
        }
        else
            entry = &(*entry)->next;
  4077cc:	68fb      	ldr	r3, [r7, #12]
  4077ce:	681b      	ldr	r3, [r3, #0]
  4077d0:	332c      	adds	r3, #44	; 0x2c
  4077d2:	60fb      	str	r3, [r7, #12]
static inline zbar_symbol_t *cache_lookup (zbar_image_scanner_t *iscn,
                                           zbar_symbol_t *sym)
{
    /* search for matching entry in cache */
    zbar_symbol_t **entry = &iscn->cache;
    while(*entry) {
  4077d4:	68fb      	ldr	r3, [r7, #12]
  4077d6:	681b      	ldr	r3, [r3, #0]
  4077d8:	2b00      	cmp	r3, #0
  4077da:	d1be      	bne.n	40775a <cache_lookup+0x12>
            *entry = next;
        }
        else
            entry = &(*entry)->next;
    }
    return(*entry);
  4077dc:	68fb      	ldr	r3, [r7, #12]
  4077de:	681b      	ldr	r3, [r3, #0]
}
  4077e0:	4618      	mov	r0, r3
  4077e2:	3710      	adds	r7, #16
  4077e4:	46bd      	mov	sp, r7
  4077e6:	bd80      	pop	{r7, pc}
  4077e8:	00434e75 	.word	0x00434e75
  4077ec:	00407331 	.word	0x00407331

004077f0 <cache_sym>:

static inline void cache_sym (zbar_image_scanner_t *iscn,
                              zbar_symbol_t *sym)
{
  4077f0:	b580      	push	{r7, lr}
  4077f2:	b08a      	sub	sp, #40	; 0x28
  4077f4:	af00      	add	r7, sp, #0
  4077f6:	6078      	str	r0, [r7, #4]
  4077f8:	6039      	str	r1, [r7, #0]
    if(iscn->enable_cache) {
  4077fa:	687b      	ldr	r3, [r7, #4]
  4077fc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
  4077fe:	2b00      	cmp	r3, #0
  407800:	f000 8083 	beq.w	40790a <cache_sym+0x11a>
        uint32_t age, near_thresh, far_thresh, dup;
        zbar_symbol_t *entry = cache_lookup(iscn, sym);
  407804:	6878      	ldr	r0, [r7, #4]
  407806:	6839      	ldr	r1, [r7, #0]
  407808:	4b43      	ldr	r3, [pc, #268]	; (407918 <cache_sym+0x128>)
  40780a:	4798      	blx	r3
  40780c:	6278      	str	r0, [r7, #36]	; 0x24
        if(!entry) {
  40780e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407810:	2b00      	cmp	r3, #0
  407812:	d12d      	bne.n	407870 <cache_sym+0x80>
            /* FIXME reuse sym */
            entry = _zbar_image_scanner_alloc_sym(iscn, sym->type,
  407814:	683b      	ldr	r3, [r7, #0]
  407816:	881a      	ldrh	r2, [r3, #0]
                                                  sym->datalen + 1);
  407818:	683b      	ldr	r3, [r7, #0]
  40781a:	691b      	ldr	r3, [r3, #16]
  40781c:	3301      	adds	r3, #1
    if(iscn->enable_cache) {
        uint32_t age, near_thresh, far_thresh, dup;
        zbar_symbol_t *entry = cache_lookup(iscn, sym);
        if(!entry) {
            /* FIXME reuse sym */
            entry = _zbar_image_scanner_alloc_sym(iscn, sym->type,
  40781e:	6878      	ldr	r0, [r7, #4]
  407820:	4611      	mov	r1, r2
  407822:	461a      	mov	r2, r3
  407824:	4b3d      	ldr	r3, [pc, #244]	; (40791c <cache_sym+0x12c>)
  407826:	4798      	blx	r3
  407828:	6278      	str	r0, [r7, #36]	; 0x24
                                                  sym->datalen + 1);
            entry->configs = sym->configs;
  40782a:	683b      	ldr	r3, [r7, #0]
  40782c:	685a      	ldr	r2, [r3, #4]
  40782e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407830:	605a      	str	r2, [r3, #4]
            entry->modifiers = sym->modifiers;
  407832:	683b      	ldr	r3, [r7, #0]
  407834:	689a      	ldr	r2, [r3, #8]
  407836:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407838:	609a      	str	r2, [r3, #8]
            memcpy(entry->data, sym->data, sym->datalen);
  40783a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  40783c:	6959      	ldr	r1, [r3, #20]
  40783e:	683b      	ldr	r3, [r7, #0]
  407840:	695a      	ldr	r2, [r3, #20]
  407842:	683b      	ldr	r3, [r7, #0]
  407844:	691b      	ldr	r3, [r3, #16]
  407846:	4608      	mov	r0, r1
  407848:	4611      	mov	r1, r2
  40784a:	461a      	mov	r2, r3
  40784c:	4b34      	ldr	r3, [pc, #208]	; (407920 <cache_sym+0x130>)
  40784e:	4798      	blx	r3
            entry->time = sym->time - CACHE_HYSTERESIS;
  407850:	683b      	ldr	r3, [r7, #0]
  407852:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  407854:	f5a3 62fa 	sub.w	r2, r3, #2000	; 0x7d0
  407858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  40785a:	635a      	str	r2, [r3, #52]	; 0x34
            entry->cache_count = 0;
  40785c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  40785e:	2200      	movs	r2, #0
  407860:	639a      	str	r2, [r3, #56]	; 0x38
            /* add to cache */
            entry->next = iscn->cache;
  407862:	687b      	ldr	r3, [r7, #4]
  407864:	6dda      	ldr	r2, [r3, #92]	; 0x5c
  407866:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407868:	62da      	str	r2, [r3, #44]	; 0x2c
            iscn->cache = entry;
  40786a:	687b      	ldr	r3, [r7, #4]
  40786c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
  40786e:	65da      	str	r2, [r3, #92]	; 0x5c
        }

        /* consistency check and hysteresis */
        age = sym->time - entry->time;
  407870:	683b      	ldr	r3, [r7, #0]
  407872:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  407874:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407876:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  407878:	1ad3      	subs	r3, r2, r3
  40787a:	623b      	str	r3, [r7, #32]
        entry->time = sym->time;
  40787c:	683b      	ldr	r3, [r7, #0]
  40787e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  407880:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407882:	635a      	str	r2, [r3, #52]	; 0x34
        near_thresh = (age < CACHE_PROXIMITY);
  407884:	6a3b      	ldr	r3, [r7, #32]
  407886:	f240 32e7 	movw	r2, #999	; 0x3e7
  40788a:	4293      	cmp	r3, r2
  40788c:	bf94      	ite	ls
  40788e:	2301      	movls	r3, #1
  407890:	2300      	movhi	r3, #0
  407892:	b2db      	uxtb	r3, r3
  407894:	61fb      	str	r3, [r7, #28]
        far_thresh = (age >= CACHE_HYSTERESIS);
  407896:	6a3b      	ldr	r3, [r7, #32]
  407898:	f240 72cf 	movw	r2, #1999	; 0x7cf
  40789c:	4293      	cmp	r3, r2
  40789e:	bf8c      	ite	hi
  4078a0:	2301      	movhi	r3, #1
  4078a2:	2300      	movls	r3, #0
  4078a4:	b2db      	uxtb	r3, r3
  4078a6:	61bb      	str	r3, [r7, #24]
        dup = (entry->cache_count >= 0);
  4078a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4078aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  4078ac:	43db      	mvns	r3, r3
  4078ae:	0fdb      	lsrs	r3, r3, #31
  4078b0:	b2db      	uxtb	r3, r3
  4078b2:	617b      	str	r3, [r7, #20]
        if((!dup && !near_thresh) || far_thresh) {
  4078b4:	697b      	ldr	r3, [r7, #20]
  4078b6:	2b00      	cmp	r3, #0
  4078b8:	d102      	bne.n	4078c0 <cache_sym+0xd0>
  4078ba:	69fb      	ldr	r3, [r7, #28]
  4078bc:	2b00      	cmp	r3, #0
  4078be:	d002      	beq.n	4078c6 <cache_sym+0xd6>
  4078c0:	69bb      	ldr	r3, [r7, #24]
  4078c2:	2b00      	cmp	r3, #0
  4078c4:	d011      	beq.n	4078ea <cache_sym+0xfa>
            int type = sym->type;
  4078c6:	683b      	ldr	r3, [r7, #0]
  4078c8:	881b      	ldrh	r3, [r3, #0]
  4078ca:	613b      	str	r3, [r7, #16]
            int h = _zbar_get_symbol_hash(type);
  4078cc:	693b      	ldr	r3, [r7, #16]
  4078ce:	b29b      	uxth	r3, r3
  4078d0:	4618      	mov	r0, r3
  4078d2:	4b14      	ldr	r3, [pc, #80]	; (407924 <cache_sym+0x134>)
  4078d4:	4798      	blx	r3
  4078d6:	60f8      	str	r0, [r7, #12]
            entry->cache_count = -iscn->sym_configs[0][h];
  4078d8:	687b      	ldr	r3, [r7, #4]
  4078da:	68fa      	ldr	r2, [r7, #12]
  4078dc:	321c      	adds	r2, #28
  4078de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  4078e2:	425a      	negs	r2, r3
  4078e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4078e6:	639a      	str	r2, [r3, #56]	; 0x38
        age = sym->time - entry->time;
        entry->time = sym->time;
        near_thresh = (age < CACHE_PROXIMITY);
        far_thresh = (age >= CACHE_HYSTERESIS);
        dup = (entry->cache_count >= 0);
        if((!dup && !near_thresh) || far_thresh) {
  4078e8:	e00a      	b.n	407900 <cache_sym+0x110>
            int type = sym->type;
            int h = _zbar_get_symbol_hash(type);
            entry->cache_count = -iscn->sym_configs[0][h];
        }
        else if(dup || near_thresh)
  4078ea:	697b      	ldr	r3, [r7, #20]
  4078ec:	2b00      	cmp	r3, #0
  4078ee:	d102      	bne.n	4078f6 <cache_sym+0x106>
  4078f0:	69fb      	ldr	r3, [r7, #28]
  4078f2:	2b00      	cmp	r3, #0
  4078f4:	d004      	beq.n	407900 <cache_sym+0x110>
            entry->cache_count++;
  4078f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4078f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  4078fa:	1c5a      	adds	r2, r3, #1
  4078fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4078fe:	639a      	str	r2, [r3, #56]	; 0x38

        sym->cache_count = entry->cache_count;
  407900:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407902:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  407904:	683b      	ldr	r3, [r7, #0]
  407906:	639a      	str	r2, [r3, #56]	; 0x38
  407908:	e002      	b.n	407910 <cache_sym+0x120>
    }
    else
        sym->cache_count = 0;
  40790a:	683b      	ldr	r3, [r7, #0]
  40790c:	2200      	movs	r2, #0
  40790e:	639a      	str	r2, [r3, #56]	; 0x38
}
  407910:	3728      	adds	r7, #40	; 0x28
  407912:	46bd      	mov	sp, r7
  407914:	bd80      	pop	{r7, pc}
  407916:	bf00      	nop
  407918:	00407749 	.word	0x00407749
  40791c:	004075a1 	.word	0x004075a1
  407920:	00434ed9 	.word	0x00434ed9
  407924:	004090ed 	.word	0x004090ed

00407928 <_zbar_image_scanner_add_sym>:

void _zbar_image_scanner_add_sym(zbar_image_scanner_t *iscn,
                                 zbar_symbol_t *sym)
{
  407928:	b580      	push	{r7, lr}
  40792a:	b084      	sub	sp, #16
  40792c:	af00      	add	r7, sp, #0
  40792e:	6078      	str	r0, [r7, #4]
  407930:	6039      	str	r1, [r7, #0]
    zbar_symbol_set_t *syms;
    cache_sym(iscn, sym);
  407932:	6878      	ldr	r0, [r7, #4]
  407934:	6839      	ldr	r1, [r7, #0]
  407936:	4b1b      	ldr	r3, [pc, #108]	; (4079a4 <_zbar_image_scanner_add_sym+0x7c>)
  407938:	4798      	blx	r3

    syms = iscn->syms;
  40793a:	687b      	ldr	r3, [r7, #4]
  40793c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40793e:	60fb      	str	r3, [r7, #12]
    if(sym->cache_count || !syms->tail) {
  407940:	683b      	ldr	r3, [r7, #0]
  407942:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  407944:	2b00      	cmp	r3, #0
  407946:	d103      	bne.n	407950 <_zbar_image_scanner_add_sym+0x28>
  407948:	68fb      	ldr	r3, [r7, #12]
  40794a:	68db      	ldr	r3, [r3, #12]
  40794c:	2b00      	cmp	r3, #0
  40794e:	d107      	bne.n	407960 <_zbar_image_scanner_add_sym+0x38>
        sym->next = syms->head;
  407950:	68fb      	ldr	r3, [r7, #12]
  407952:	689a      	ldr	r2, [r3, #8]
  407954:	683b      	ldr	r3, [r7, #0]
  407956:	62da      	str	r2, [r3, #44]	; 0x2c
        syms->head = sym;
  407958:	68fb      	ldr	r3, [r7, #12]
  40795a:	683a      	ldr	r2, [r7, #0]
  40795c:	609a      	str	r2, [r3, #8]
  40795e:	e008      	b.n	407972 <_zbar_image_scanner_add_sym+0x4a>
    }
    else {
        sym->next = syms->tail->next;
  407960:	68fb      	ldr	r3, [r7, #12]
  407962:	68db      	ldr	r3, [r3, #12]
  407964:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  407966:	683b      	ldr	r3, [r7, #0]
  407968:	62da      	str	r2, [r3, #44]	; 0x2c
        syms->tail->next = sym;
  40796a:	68fb      	ldr	r3, [r7, #12]
  40796c:	68db      	ldr	r3, [r3, #12]
  40796e:	683a      	ldr	r2, [r7, #0]
  407970:	62da      	str	r2, [r3, #44]	; 0x2c
    }

    if(!sym->cache_count)
  407972:	683b      	ldr	r3, [r7, #0]
  407974:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  407976:	2b00      	cmp	r3, #0
  407978:	d105      	bne.n	407986 <_zbar_image_scanner_add_sym+0x5e>
        syms->nsyms++;
  40797a:	68fb      	ldr	r3, [r7, #12]
  40797c:	685b      	ldr	r3, [r3, #4]
  40797e:	1c5a      	adds	r2, r3, #1
  407980:	68fb      	ldr	r3, [r7, #12]
  407982:	605a      	str	r2, [r3, #4]
  407984:	e006      	b.n	407994 <_zbar_image_scanner_add_sym+0x6c>
    else if(!syms->tail)
  407986:	68fb      	ldr	r3, [r7, #12]
  407988:	68db      	ldr	r3, [r3, #12]
  40798a:	2b00      	cmp	r3, #0
  40798c:	d102      	bne.n	407994 <_zbar_image_scanner_add_sym+0x6c>
        syms->tail = sym;
  40798e:	68fb      	ldr	r3, [r7, #12]
  407990:	683a      	ldr	r2, [r7, #0]
  407992:	60da      	str	r2, [r3, #12]

    _zbar_symbol_refcnt(sym, 1);
  407994:	6838      	ldr	r0, [r7, #0]
  407996:	2101      	movs	r1, #1
  407998:	4b03      	ldr	r3, [pc, #12]	; (4079a8 <_zbar_image_scanner_add_sym+0x80>)
  40799a:	4798      	blx	r3
}
  40799c:	3710      	adds	r7, #16
  40799e:	46bd      	mov	sp, r7
  4079a0:	bd80      	pop	{r7, pc}
  4079a2:	bf00      	nop
  4079a4:	004077f1 	.word	0x004077f1
  4079a8:	004072f9 	.word	0x004072f9

004079ac <symbol_handler>:
    _zbar_qr_found_line(iscn->qr, vert, line);
}
#endif

static void symbol_handler (zbar_decoder_t *dcode)
{
  4079ac:	b5b0      	push	{r4, r5, r7, lr}
  4079ae:	b090      	sub	sp, #64	; 0x40
  4079b0:	af04      	add	r7, sp, #16
  4079b2:	6078      	str	r0, [r7, #4]
    zbar_image_scanner_t *iscn = zbar_decoder_get_userdata(dcode);
  4079b4:	6878      	ldr	r0, [r7, #4]
  4079b6:	4b89      	ldr	r3, [pc, #548]	; (407bdc <symbol_handler+0x230>)
  4079b8:	4798      	blx	r3
  4079ba:	6238      	str	r0, [r7, #32]
    zbar_symbol_type_t type = zbar_decoder_get_type(dcode);
  4079bc:	6878      	ldr	r0, [r7, #4]
  4079be:	4b88      	ldr	r3, [pc, #544]	; (407be0 <symbol_handler+0x234>)
  4079c0:	4798      	blx	r3
  4079c2:	4603      	mov	r3, r0
  4079c4:	83fb      	strh	r3, [r7, #30]
    int x = 0, y = 0, dir;
  4079c6:	2300      	movs	r3, #0
  4079c8:	62fb      	str	r3, [r7, #44]	; 0x2c
  4079ca:	2300      	movs	r3, #0
  4079cc:	62bb      	str	r3, [r7, #40]	; 0x28
    if(type == ZBAR_QRCODE) {
        qr_handler(iscn);
        return;
    }
#else
    assert(type != ZBAR_QRCODE);
  4079ce:	8bfb      	ldrh	r3, [r7, #30]
  4079d0:	2b40      	cmp	r3, #64	; 0x40
  4079d2:	d106      	bne.n	4079e2 <symbol_handler+0x36>
  4079d4:	4883      	ldr	r0, [pc, #524]	; (407be4 <symbol_handler+0x238>)
  4079d6:	f44f 71cc 	mov.w	r1, #408	; 0x198
  4079da:	4a83      	ldr	r2, [pc, #524]	; (407be8 <symbol_handler+0x23c>)
  4079dc:	4b83      	ldr	r3, [pc, #524]	; (407bec <symbol_handler+0x240>)
  4079de:	4c84      	ldr	r4, [pc, #528]	; (407bf0 <symbol_handler+0x244>)
  4079e0:	47a0      	blx	r4
#endif

    if(TEST_CFG(iscn, ZBAR_CFG_POSITION)) {
  4079e2:	6a3b      	ldr	r3, [r7, #32]
  4079e4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
  4079e6:	f003 0301 	and.w	r3, r3, #1
  4079ea:	2b00      	cmp	r3, #0
  4079ec:	d028      	beq.n	407a40 <symbol_handler+0x94>
        /* tmp position fixup */
        int w = zbar_scanner_get_width(iscn->scn);
  4079ee:	6a3b      	ldr	r3, [r7, #32]
  4079f0:	681b      	ldr	r3, [r3, #0]
  4079f2:	4618      	mov	r0, r3
  4079f4:	4b7f      	ldr	r3, [pc, #508]	; (407bf4 <symbol_handler+0x248>)
  4079f6:	4798      	blx	r3
  4079f8:	4603      	mov	r3, r0
  4079fa:	61bb      	str	r3, [r7, #24]
        int u = iscn->umin + iscn->du * zbar_scanner_get_edge(iscn->scn, w, 0);
  4079fc:	6a3b      	ldr	r3, [r7, #32]
  4079fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  407a00:	461c      	mov	r4, r3
  407a02:	6a3b      	ldr	r3, [r7, #32]
  407a04:	6a1b      	ldr	r3, [r3, #32]
  407a06:	461d      	mov	r5, r3
  407a08:	6a3b      	ldr	r3, [r7, #32]
  407a0a:	681a      	ldr	r2, [r3, #0]
  407a0c:	69bb      	ldr	r3, [r7, #24]
  407a0e:	4610      	mov	r0, r2
  407a10:	4619      	mov	r1, r3
  407a12:	2200      	movs	r2, #0
  407a14:	4b78      	ldr	r3, [pc, #480]	; (407bf8 <symbol_handler+0x24c>)
  407a16:	4798      	blx	r3
  407a18:	4603      	mov	r3, r0
  407a1a:	fb03 f305 	mul.w	r3, r3, r5
  407a1e:	4423      	add	r3, r4
  407a20:	617b      	str	r3, [r7, #20]
        if(iscn->dx) {
  407a22:	6a3b      	ldr	r3, [r7, #32]
  407a24:	699b      	ldr	r3, [r3, #24]
  407a26:	2b00      	cmp	r3, #0
  407a28:	d005      	beq.n	407a36 <symbol_handler+0x8a>
            x = u;
  407a2a:	697b      	ldr	r3, [r7, #20]
  407a2c:	62fb      	str	r3, [r7, #44]	; 0x2c
            y = iscn->v;
  407a2e:	6a3b      	ldr	r3, [r7, #32]
  407a30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  407a32:	62bb      	str	r3, [r7, #40]	; 0x28
  407a34:	e004      	b.n	407a40 <symbol_handler+0x94>
        }
        else {
            x = iscn->v;
  407a36:	6a3b      	ldr	r3, [r7, #32]
  407a38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  407a3a:	62fb      	str	r3, [r7, #44]	; 0x2c
            y = u;
  407a3c:	697b      	ldr	r3, [r7, #20]
  407a3e:	62bb      	str	r3, [r7, #40]	; 0x28
        }
    }

    /* FIXME debug flag to save/display all PARTIALs */
    if(type <= ZBAR_PARTIAL) {
  407a40:	8bfb      	ldrh	r3, [r7, #30]
  407a42:	2b01      	cmp	r3, #1
  407a44:	d810      	bhi.n	407a68 <symbol_handler+0xbc>
        zprintf(256, "partial symbol @(%d,%d)\n", x, y);
  407a46:	4b6d      	ldr	r3, [pc, #436]	; (407bfc <symbol_handler+0x250>)
  407a48:	681b      	ldr	r3, [r3, #0]
  407a4a:	2bff      	cmp	r3, #255	; 0xff
  407a4c:	dd0b      	ble.n	407a66 <symbol_handler+0xba>
  407a4e:	4b6c      	ldr	r3, [pc, #432]	; (407c00 <symbol_handler+0x254>)
  407a50:	681b      	ldr	r3, [r3, #0]
  407a52:	68da      	ldr	r2, [r3, #12]
  407a54:	6abb      	ldr	r3, [r7, #40]	; 0x28
  407a56:	9300      	str	r3, [sp, #0]
  407a58:	4610      	mov	r0, r2
  407a5a:	496a      	ldr	r1, [pc, #424]	; (407c04 <symbol_handler+0x258>)
  407a5c:	4a62      	ldr	r2, [pc, #392]	; (407be8 <symbol_handler+0x23c>)
  407a5e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  407a60:	4c69      	ldr	r4, [pc, #420]	; (407c08 <symbol_handler+0x25c>)
  407a62:	47a0      	blx	r4
        return;
  407a64:	e0b6      	b.n	407bd4 <symbol_handler+0x228>
  407a66:	e0b5      	b.n	407bd4 <symbol_handler+0x228>
    }

    data = zbar_decoder_get_data(dcode);
  407a68:	6878      	ldr	r0, [r7, #4]
  407a6a:	4b68      	ldr	r3, [pc, #416]	; (407c0c <symbol_handler+0x260>)
  407a6c:	4798      	blx	r3
  407a6e:	6138      	str	r0, [r7, #16]
    datalen = zbar_decoder_get_data_length(dcode);
  407a70:	6878      	ldr	r0, [r7, #4]
  407a72:	4b67      	ldr	r3, [pc, #412]	; (407c10 <symbol_handler+0x264>)
  407a74:	4798      	blx	r3
  407a76:	60f8      	str	r0, [r7, #12]

    /* FIXME need better symbol matching */
    for(sym = iscn->syms->head; sym; sym = sym->next)
  407a78:	6a3b      	ldr	r3, [r7, #32]
  407a7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407a7c:	689b      	ldr	r3, [r3, #8]
  407a7e:	627b      	str	r3, [r7, #36]	; 0x24
  407a80:	e03f      	b.n	407b02 <symbol_handler+0x156>
        if(sym->type == type &&
  407a82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407a84:	881b      	ldrh	r3, [r3, #0]
  407a86:	8bfa      	ldrh	r2, [r7, #30]
  407a88:	429a      	cmp	r2, r3
  407a8a:	d137      	bne.n	407afc <symbol_handler+0x150>
           sym->datalen == datalen &&
  407a8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407a8e:	691a      	ldr	r2, [r3, #16]
    data = zbar_decoder_get_data(dcode);
    datalen = zbar_decoder_get_data_length(dcode);

    /* FIXME need better symbol matching */
    for(sym = iscn->syms->head; sym; sym = sym->next)
        if(sym->type == type &&
  407a90:	68fb      	ldr	r3, [r7, #12]
  407a92:	429a      	cmp	r2, r3
  407a94:	d132      	bne.n	407afc <symbol_handler+0x150>
           sym->datalen == datalen &&
           !memcmp(sym->data, data, datalen)) {
  407a96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407a98:	695b      	ldr	r3, [r3, #20]
  407a9a:	4618      	mov	r0, r3
  407a9c:	6939      	ldr	r1, [r7, #16]
  407a9e:	68fa      	ldr	r2, [r7, #12]
  407aa0:	4b5c      	ldr	r3, [pc, #368]	; (407c14 <symbol_handler+0x268>)
  407aa2:	4798      	blx	r3
  407aa4:	4603      	mov	r3, r0
    datalen = zbar_decoder_get_data_length(dcode);

    /* FIXME need better symbol matching */
    for(sym = iscn->syms->head; sym; sym = sym->next)
        if(sym->type == type &&
           sym->datalen == datalen &&
  407aa6:	2b00      	cmp	r3, #0
  407aa8:	d128      	bne.n	407afc <symbol_handler+0x150>
           !memcmp(sym->data, data, datalen)) {
            sym->quality++;
  407aaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407aac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  407aae:	1c5a      	adds	r2, r3, #1
  407ab0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407ab2:	63da      	str	r2, [r3, #60]	; 0x3c
            zprintf(224, "dup symbol @(%d,%d): dup %s: %.20s\n",
  407ab4:	4b51      	ldr	r3, [pc, #324]	; (407bfc <symbol_handler+0x250>)
  407ab6:	681b      	ldr	r3, [r3, #0]
  407ab8:	2bdf      	cmp	r3, #223	; 0xdf
  407aba:	dd12      	ble.n	407ae2 <symbol_handler+0x136>
  407abc:	4b50      	ldr	r3, [pc, #320]	; (407c00 <symbol_handler+0x254>)
  407abe:	681b      	ldr	r3, [r3, #0]
  407ac0:	68dc      	ldr	r4, [r3, #12]
  407ac2:	8bfb      	ldrh	r3, [r7, #30]
  407ac4:	4618      	mov	r0, r3
  407ac6:	4b54      	ldr	r3, [pc, #336]	; (407c18 <symbol_handler+0x26c>)
  407ac8:	4798      	blx	r3
  407aca:	4602      	mov	r2, r0
  407acc:	6abb      	ldr	r3, [r7, #40]	; 0x28
  407ace:	9300      	str	r3, [sp, #0]
  407ad0:	9201      	str	r2, [sp, #4]
  407ad2:	693b      	ldr	r3, [r7, #16]
  407ad4:	9302      	str	r3, [sp, #8]
  407ad6:	4620      	mov	r0, r4
  407ad8:	4950      	ldr	r1, [pc, #320]	; (407c1c <symbol_handler+0x270>)
  407ada:	4a43      	ldr	r2, [pc, #268]	; (407be8 <symbol_handler+0x23c>)
  407adc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  407ade:	4c4a      	ldr	r4, [pc, #296]	; (407c08 <symbol_handler+0x25c>)
  407ae0:	47a0      	blx	r4
                    x, y, zbar_get_symbol_name(type), data);
            if(TEST_CFG(iscn, ZBAR_CFG_POSITION))
  407ae2:	6a3b      	ldr	r3, [r7, #32]
  407ae4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
  407ae6:	f003 0301 	and.w	r3, r3, #1
  407aea:	2b00      	cmp	r3, #0
  407aec:	d005      	beq.n	407afa <symbol_handler+0x14e>
                /* add new point to existing set */
                /* FIXME should be polygon */
                sym_add_point(sym, x, y);
  407aee:	6a78      	ldr	r0, [r7, #36]	; 0x24
  407af0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
  407af2:	6aba      	ldr	r2, [r7, #40]	; 0x28
  407af4:	4b4a      	ldr	r3, [pc, #296]	; (407c20 <symbol_handler+0x274>)
  407af6:	4798      	blx	r3
            return;
  407af8:	e06c      	b.n	407bd4 <symbol_handler+0x228>
  407afa:	e06b      	b.n	407bd4 <symbol_handler+0x228>

    data = zbar_decoder_get_data(dcode);
    datalen = zbar_decoder_get_data_length(dcode);

    /* FIXME need better symbol matching */
    for(sym = iscn->syms->head; sym; sym = sym->next)
  407afc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407afe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407b00:	627b      	str	r3, [r7, #36]	; 0x24
  407b02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407b04:	2b00      	cmp	r3, #0
  407b06:	d1bc      	bne.n	407a82 <symbol_handler+0xd6>
                /* FIXME should be polygon */
                sym_add_point(sym, x, y);
            return;
        }

    sym = _zbar_image_scanner_alloc_sym(iscn, type, datalen + 1);
  407b08:	68fb      	ldr	r3, [r7, #12]
  407b0a:	3301      	adds	r3, #1
  407b0c:	461a      	mov	r2, r3
  407b0e:	8bfb      	ldrh	r3, [r7, #30]
  407b10:	6a38      	ldr	r0, [r7, #32]
  407b12:	4619      	mov	r1, r3
  407b14:	4b43      	ldr	r3, [pc, #268]	; (407c24 <symbol_handler+0x278>)
  407b16:	4798      	blx	r3
  407b18:	6278      	str	r0, [r7, #36]	; 0x24
    sym->configs = zbar_decoder_get_configs(dcode, type);
  407b1a:	8bfb      	ldrh	r3, [r7, #30]
  407b1c:	6878      	ldr	r0, [r7, #4]
  407b1e:	4619      	mov	r1, r3
  407b20:	4b41      	ldr	r3, [pc, #260]	; (407c28 <symbol_handler+0x27c>)
  407b22:	4798      	blx	r3
  407b24:	4602      	mov	r2, r0
  407b26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407b28:	605a      	str	r2, [r3, #4]
    sym->modifiers = zbar_decoder_get_modifiers(dcode);
  407b2a:	6878      	ldr	r0, [r7, #4]
  407b2c:	4b3f      	ldr	r3, [pc, #252]	; (407c2c <symbol_handler+0x280>)
  407b2e:	4798      	blx	r3
  407b30:	4602      	mov	r2, r0
  407b32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407b34:	609a      	str	r2, [r3, #8]
    /* FIXME grab decoder buffer */
    memcpy(sym->data, data, datalen + 1);
  407b36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407b38:	695a      	ldr	r2, [r3, #20]
  407b3a:	68fb      	ldr	r3, [r7, #12]
  407b3c:	3301      	adds	r3, #1
  407b3e:	4610      	mov	r0, r2
  407b40:	6939      	ldr	r1, [r7, #16]
  407b42:	461a      	mov	r2, r3
  407b44:	4b3a      	ldr	r3, [pc, #232]	; (407c30 <symbol_handler+0x284>)
  407b46:	4798      	blx	r3

    /* initialize first point */
    if(TEST_CFG(iscn, ZBAR_CFG_POSITION)) {
  407b48:	6a3b      	ldr	r3, [r7, #32]
  407b4a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
  407b4c:	f003 0301 	and.w	r3, r3, #1
  407b50:	2b00      	cmp	r3, #0
  407b52:	d01b      	beq.n	407b8c <symbol_handler+0x1e0>
        zprintf(192, "new symbol @(%d,%d): %s: %.20s\n",
  407b54:	4b29      	ldr	r3, [pc, #164]	; (407bfc <symbol_handler+0x250>)
  407b56:	681b      	ldr	r3, [r3, #0]
  407b58:	2bbf      	cmp	r3, #191	; 0xbf
  407b5a:	dd12      	ble.n	407b82 <symbol_handler+0x1d6>
  407b5c:	4b28      	ldr	r3, [pc, #160]	; (407c00 <symbol_handler+0x254>)
  407b5e:	681b      	ldr	r3, [r3, #0]
  407b60:	68dc      	ldr	r4, [r3, #12]
  407b62:	8bfb      	ldrh	r3, [r7, #30]
  407b64:	4618      	mov	r0, r3
  407b66:	4b2c      	ldr	r3, [pc, #176]	; (407c18 <symbol_handler+0x26c>)
  407b68:	4798      	blx	r3
  407b6a:	4602      	mov	r2, r0
  407b6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
  407b6e:	9300      	str	r3, [sp, #0]
  407b70:	9201      	str	r2, [sp, #4]
  407b72:	693b      	ldr	r3, [r7, #16]
  407b74:	9302      	str	r3, [sp, #8]
  407b76:	4620      	mov	r0, r4
  407b78:	492e      	ldr	r1, [pc, #184]	; (407c34 <symbol_handler+0x288>)
  407b7a:	4a1b      	ldr	r2, [pc, #108]	; (407be8 <symbol_handler+0x23c>)
  407b7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  407b7e:	4c22      	ldr	r4, [pc, #136]	; (407c08 <symbol_handler+0x25c>)
  407b80:	47a0      	blx	r4
                x, y, zbar_get_symbol_name(type), data);
        sym_add_point(sym, x, y);
  407b82:	6a78      	ldr	r0, [r7, #36]	; 0x24
  407b84:	6af9      	ldr	r1, [r7, #44]	; 0x2c
  407b86:	6aba      	ldr	r2, [r7, #40]	; 0x28
  407b88:	4b25      	ldr	r3, [pc, #148]	; (407c20 <symbol_handler+0x274>)
  407b8a:	4798      	blx	r3
    }

    dir = zbar_decoder_get_direction(dcode);
  407b8c:	6878      	ldr	r0, [r7, #4]
  407b8e:	4b2a      	ldr	r3, [pc, #168]	; (407c38 <symbol_handler+0x28c>)
  407b90:	4798      	blx	r3
  407b92:	60b8      	str	r0, [r7, #8]
    if(dir)
  407b94:	68bb      	ldr	r3, [r7, #8]
  407b96:	2b00      	cmp	r3, #0
  407b98:	d018      	beq.n	407bcc <symbol_handler+0x220>
        sym->orient = (iscn->dy != 0) + ((iscn->du ^ dir) & 2);
  407b9a:	6a3b      	ldr	r3, [r7, #32]
  407b9c:	69db      	ldr	r3, [r3, #28]
  407b9e:	2b00      	cmp	r3, #0
  407ba0:	bf14      	ite	ne
  407ba2:	2301      	movne	r3, #1
  407ba4:	2300      	moveq	r3, #0
  407ba6:	b2db      	uxtb	r3, r3
  407ba8:	461a      	mov	r2, r3
  407baa:	6a3b      	ldr	r3, [r7, #32]
  407bac:	6a1b      	ldr	r3, [r3, #32]
  407bae:	b2d9      	uxtb	r1, r3
  407bb0:	68bb      	ldr	r3, [r7, #8]
  407bb2:	b2db      	uxtb	r3, r3
  407bb4:	404b      	eors	r3, r1
  407bb6:	b2db      	uxtb	r3, r3
  407bb8:	b2db      	uxtb	r3, r3
  407bba:	f003 0302 	and.w	r3, r3, #2
  407bbe:	b2db      	uxtb	r3, r3
  407bc0:	4413      	add	r3, r2
  407bc2:	b2db      	uxtb	r3, r3
  407bc4:	b2da      	uxtb	r2, r3
  407bc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  407bc8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    _zbar_image_scanner_add_sym(iscn, sym);
  407bcc:	6a38      	ldr	r0, [r7, #32]
  407bce:	6a79      	ldr	r1, [r7, #36]	; 0x24
  407bd0:	4b1a      	ldr	r3, [pc, #104]	; (407c3c <symbol_handler+0x290>)
  407bd2:	4798      	blx	r3
}
  407bd4:	3730      	adds	r7, #48	; 0x30
  407bd6:	46bd      	mov	sp, r7
  407bd8:	bdb0      	pop	{r4, r5, r7, pc}
  407bda:	bf00      	nop
  407bdc:	0040534d 	.word	0x0040534d
  407be0:	00405365 	.word	0x00405365
  407be4:	0043c838 	.word	0x0043c838
  407be8:	0043cb28 	.word	0x0043cb28
  407bec:	0043c8a8 	.word	0x0043c8a8
  407bf0:	00433d55 	.word	0x00433d55
  407bf4:	00408951 	.word	0x00408951
  407bf8:	00408969 	.word	0x00408969
  407bfc:	20001bd4 	.word	0x20001bd4
  407c00:	200012d0 	.word	0x200012d0
  407c04:	0043c8bc 	.word	0x0043c8bc
  407c08:	0043413d 	.word	0x0043413d
  407c0c:	004052c5 	.word	0x004052c5
  407c10:	004052dd 	.word	0x004052dd
  407c14:	00434e75 	.word	0x00434e75
  407c18:	00408e31 	.word	0x00408e31
  407c1c:	0043c8dc 	.word	0x0043c8dc
  407c20:	00407289 	.word	0x00407289
  407c24:	004075a1 	.word	0x004075a1
  407c28:	0040555d 	.word	0x0040555d
  407c2c:	00405381 	.word	0x00405381
  407c30:	00434ed9 	.word	0x00434ed9
  407c34:	0043c904 	.word	0x0043c904
  407c38:	004052f5 	.word	0x004052f5
  407c3c:	00407929 	.word	0x00407929

00407c40 <zbar_image_scanner_create>:

zbar_image_scanner_t *zbar_image_scanner_create ()
{
  407c40:	b590      	push	{r4, r7, lr}
  407c42:	b083      	sub	sp, #12
  407c44:	af00      	add	r7, sp, #0
    zbar_image_scanner_t *iscn = calloc(1, sizeof(zbar_image_scanner_t));
  407c46:	2001      	movs	r0, #1
  407c48:	21ec      	movs	r1, #236	; 0xec
  407c4a:	4b35      	ldr	r3, [pc, #212]	; (407d20 <zbar_image_scanner_create+0xe0>)
  407c4c:	4798      	blx	r3
  407c4e:	4603      	mov	r3, r0
  407c50:	607b      	str	r3, [r7, #4]
    if(!iscn)
  407c52:	687b      	ldr	r3, [r7, #4]
  407c54:	2b00      	cmp	r3, #0
  407c56:	d101      	bne.n	407c5c <zbar_image_scanner_create+0x1c>
        return(NULL);
  407c58:	2300      	movs	r3, #0
  407c5a:	e05c      	b.n	407d16 <zbar_image_scanner_create+0xd6>
    iscn->dcode = zbar_decoder_create();
  407c5c:	4b31      	ldr	r3, [pc, #196]	; (407d24 <zbar_image_scanner_create+0xe4>)
  407c5e:	4798      	blx	r3
  407c60:	4602      	mov	r2, r0
  407c62:	687b      	ldr	r3, [r7, #4]
  407c64:	605a      	str	r2, [r3, #4]
    iscn->scn = zbar_scanner_create(iscn->dcode);
  407c66:	687b      	ldr	r3, [r7, #4]
  407c68:	685b      	ldr	r3, [r3, #4]
  407c6a:	4618      	mov	r0, r3
  407c6c:	4b2e      	ldr	r3, [pc, #184]	; (407d28 <zbar_image_scanner_create+0xe8>)
  407c6e:	4798      	blx	r3
  407c70:	4602      	mov	r2, r0
  407c72:	687b      	ldr	r3, [r7, #4]
  407c74:	601a      	str	r2, [r3, #0]
    if(!iscn->dcode || !iscn->scn) {
  407c76:	687b      	ldr	r3, [r7, #4]
  407c78:	685b      	ldr	r3, [r3, #4]
  407c7a:	2b00      	cmp	r3, #0
  407c7c:	d003      	beq.n	407c86 <zbar_image_scanner_create+0x46>
  407c7e:	687b      	ldr	r3, [r7, #4]
  407c80:	681b      	ldr	r3, [r3, #0]
  407c82:	2b00      	cmp	r3, #0
  407c84:	d104      	bne.n	407c90 <zbar_image_scanner_create+0x50>
        zbar_image_scanner_destroy(iscn);
  407c86:	6878      	ldr	r0, [r7, #4]
  407c88:	4b28      	ldr	r3, [pc, #160]	; (407d2c <zbar_image_scanner_create+0xec>)
  407c8a:	4798      	blx	r3
        return(NULL);
  407c8c:	2300      	movs	r3, #0
  407c8e:	e042      	b.n	407d16 <zbar_image_scanner_create+0xd6>
    }
    zbar_decoder_set_userdata(iscn->dcode, iscn);
  407c90:	687b      	ldr	r3, [r7, #4]
  407c92:	685b      	ldr	r3, [r3, #4]
  407c94:	4618      	mov	r0, r3
  407c96:	6879      	ldr	r1, [r7, #4]
  407c98:	4b25      	ldr	r3, [pc, #148]	; (407d30 <zbar_image_scanner_create+0xf0>)
  407c9a:	4798      	blx	r3
    zbar_decoder_set_handler(iscn->dcode, symbol_handler);
  407c9c:	687b      	ldr	r3, [r7, #4]
  407c9e:	685b      	ldr	r3, [r3, #4]
  407ca0:	4618      	mov	r0, r3
  407ca2:	4924      	ldr	r1, [pc, #144]	; (407d34 <zbar_image_scanner_create+0xf4>)
  407ca4:	4b24      	ldr	r3, [pc, #144]	; (407d38 <zbar_image_scanner_create+0xf8>)
  407ca6:	4798      	blx	r3
#ifdef ENABLE_QRCODE
    iscn->qr = _zbar_qr_create();
#endif

    /* apply default configuration */
    CFG(iscn, ZBAR_CFG_X_DENSITY) = 1;
  407ca8:	687b      	ldr	r3, [r7, #4]
  407caa:	2201      	movs	r2, #1
  407cac:	669a      	str	r2, [r3, #104]	; 0x68
    CFG(iscn, ZBAR_CFG_Y_DENSITY) = 1;
  407cae:	687b      	ldr	r3, [r7, #4]
  407cb0:	2201      	movs	r2, #1
  407cb2:	66da      	str	r2, [r3, #108]	; 0x6c
    zbar_image_scanner_set_config(iscn, 0, ZBAR_CFG_POSITION, 1);
  407cb4:	6878      	ldr	r0, [r7, #4]
  407cb6:	2100      	movs	r1, #0
  407cb8:	2280      	movs	r2, #128	; 0x80
  407cba:	2301      	movs	r3, #1
  407cbc:	4c1f      	ldr	r4, [pc, #124]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407cbe:	47a0      	blx	r4
    zbar_image_scanner_set_config(iscn, 0, ZBAR_CFG_UNCERTAINTY, 2);
  407cc0:	6878      	ldr	r0, [r7, #4]
  407cc2:	2100      	movs	r1, #0
  407cc4:	2240      	movs	r2, #64	; 0x40
  407cc6:	2302      	movs	r3, #2
  407cc8:	4c1c      	ldr	r4, [pc, #112]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407cca:	47a0      	blx	r4
    zbar_image_scanner_set_config(iscn, ZBAR_QRCODE, ZBAR_CFG_UNCERTAINTY, 0);
  407ccc:	6878      	ldr	r0, [r7, #4]
  407cce:	2140      	movs	r1, #64	; 0x40
  407cd0:	2240      	movs	r2, #64	; 0x40
  407cd2:	2300      	movs	r3, #0
  407cd4:	4c19      	ldr	r4, [pc, #100]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407cd6:	47a0      	blx	r4
    zbar_image_scanner_set_config(iscn, ZBAR_CODE128, ZBAR_CFG_UNCERTAINTY, 0);
  407cd8:	6878      	ldr	r0, [r7, #4]
  407cda:	2180      	movs	r1, #128	; 0x80
  407cdc:	2240      	movs	r2, #64	; 0x40
  407cde:	2300      	movs	r3, #0
  407ce0:	4c16      	ldr	r4, [pc, #88]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407ce2:	47a0      	blx	r4
    zbar_image_scanner_set_config(iscn, ZBAR_CODE93, ZBAR_CFG_UNCERTAINTY, 0);
  407ce4:	6878      	ldr	r0, [r7, #4]
  407ce6:	215d      	movs	r1, #93	; 0x5d
  407ce8:	2240      	movs	r2, #64	; 0x40
  407cea:	2300      	movs	r3, #0
  407cec:	4c13      	ldr	r4, [pc, #76]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407cee:	47a0      	blx	r4
    zbar_image_scanner_set_config(iscn, ZBAR_CODE39, ZBAR_CFG_UNCERTAINTY, 0);
  407cf0:	6878      	ldr	r0, [r7, #4]
  407cf2:	2127      	movs	r1, #39	; 0x27
  407cf4:	2240      	movs	r2, #64	; 0x40
  407cf6:	2300      	movs	r3, #0
  407cf8:	4c10      	ldr	r4, [pc, #64]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407cfa:	47a0      	blx	r4
    zbar_image_scanner_set_config(iscn, ZBAR_CODABAR, ZBAR_CFG_UNCERTAINTY, 1);
  407cfc:	6878      	ldr	r0, [r7, #4]
  407cfe:	2126      	movs	r1, #38	; 0x26
  407d00:	2240      	movs	r2, #64	; 0x40
  407d02:	2301      	movs	r3, #1
  407d04:	4c0d      	ldr	r4, [pc, #52]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407d06:	47a0      	blx	r4
    zbar_image_scanner_set_config(iscn, ZBAR_COMPOSITE, ZBAR_CFG_UNCERTAINTY, 0);
  407d08:	6878      	ldr	r0, [r7, #4]
  407d0a:	210f      	movs	r1, #15
  407d0c:	2240      	movs	r2, #64	; 0x40
  407d0e:	2300      	movs	r3, #0
  407d10:	4c0a      	ldr	r4, [pc, #40]	; (407d3c <zbar_image_scanner_create+0xfc>)
  407d12:	47a0      	blx	r4
    return(iscn);
  407d14:	687b      	ldr	r3, [r7, #4]
}
  407d16:	4618      	mov	r0, r3
  407d18:	370c      	adds	r7, #12
  407d1a:	46bd      	mov	sp, r7
  407d1c:	bd90      	pop	{r4, r7, pc}
  407d1e:	bf00      	nop
  407d20:	00433d91 	.word	0x00433d91
  407d24:	00405159 	.word	0x00405159
  407d28:	004088bd 	.word	0x004088bd
  407d2c:	00407e39 	.word	0x00407e39
  407d30:	00405331 	.word	0x00405331
  407d34:	004079ad 	.word	0x004079ad
  407d38:	0040530d 	.word	0x0040530d
  407d3c:	00407f09 	.word	0x00407f09

00407d40 <dump_stats>:

#ifndef NO_STATS
static inline void dump_stats (const zbar_image_scanner_t *iscn)
{
  407d40:	b590      	push	{r4, r7, lr}
  407d42:	b087      	sub	sp, #28
  407d44:	af02      	add	r7, sp, #8
  407d46:	6078      	str	r0, [r7, #4]
    int i;
    zprintf(1, "symbol sets allocated   = %-4d\n", iscn->stat_syms_new);
  407d48:	4b32      	ldr	r3, [pc, #200]	; (407e14 <dump_stats+0xd4>)
  407d4a:	681b      	ldr	r3, [r3, #0]
  407d4c:	2b00      	cmp	r3, #0
  407d4e:	dd0a      	ble.n	407d66 <dump_stats+0x26>
  407d50:	4b31      	ldr	r3, [pc, #196]	; (407e18 <dump_stats+0xd8>)
  407d52:	681b      	ldr	r3, [r3, #0]
  407d54:	68da      	ldr	r2, [r3, #12]
  407d56:	687b      	ldr	r3, [r7, #4]
  407d58:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
  407d5c:	4610      	mov	r0, r2
  407d5e:	492f      	ldr	r1, [pc, #188]	; (407e1c <dump_stats+0xdc>)
  407d60:	4a2f      	ldr	r2, [pc, #188]	; (407e20 <dump_stats+0xe0>)
  407d62:	4c30      	ldr	r4, [pc, #192]	; (407e24 <dump_stats+0xe4>)
  407d64:	47a0      	blx	r4
    zprintf(1, "    scanner syms in use = %-4d\trecycled  = %-4d\n",
  407d66:	4b2b      	ldr	r3, [pc, #172]	; (407e14 <dump_stats+0xd4>)
  407d68:	681b      	ldr	r3, [r3, #0]
  407d6a:	2b00      	cmp	r3, #0
  407d6c:	dd0f      	ble.n	407d8e <dump_stats+0x4e>
  407d6e:	4b2a      	ldr	r3, [pc, #168]	; (407e18 <dump_stats+0xd8>)
  407d70:	681b      	ldr	r3, [r3, #0]
  407d72:	68da      	ldr	r2, [r3, #12]
  407d74:	687b      	ldr	r3, [r7, #4]
  407d76:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
  407d7a:	687b      	ldr	r3, [r7, #4]
  407d7c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
  407d80:	9300      	str	r3, [sp, #0]
  407d82:	4610      	mov	r0, r2
  407d84:	4928      	ldr	r1, [pc, #160]	; (407e28 <dump_stats+0xe8>)
  407d86:	4a26      	ldr	r2, [pc, #152]	; (407e20 <dump_stats+0xe0>)
  407d88:	4623      	mov	r3, r4
  407d8a:	4c26      	ldr	r4, [pc, #152]	; (407e24 <dump_stats+0xe4>)
  407d8c:	47a0      	blx	r4
            iscn->stat_iscn_syms_inuse, iscn->stat_iscn_syms_recycle);
    zprintf(1, "    image syms in use   = %-4d\trecycled  = %-4d\n",
  407d8e:	4b21      	ldr	r3, [pc, #132]	; (407e14 <dump_stats+0xd4>)
  407d90:	681b      	ldr	r3, [r3, #0]
  407d92:	2b00      	cmp	r3, #0
  407d94:	dd0f      	ble.n	407db6 <dump_stats+0x76>
  407d96:	4b20      	ldr	r3, [pc, #128]	; (407e18 <dump_stats+0xd8>)
  407d98:	681b      	ldr	r3, [r3, #0]
  407d9a:	68da      	ldr	r2, [r3, #12]
  407d9c:	687b      	ldr	r3, [r7, #4]
  407d9e:	f8d3 40cc 	ldr.w	r4, [r3, #204]	; 0xcc
  407da2:	687b      	ldr	r3, [r7, #4]
  407da4:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
  407da8:	9300      	str	r3, [sp, #0]
  407daa:	4610      	mov	r0, r2
  407dac:	491f      	ldr	r1, [pc, #124]	; (407e2c <dump_stats+0xec>)
  407dae:	4a1c      	ldr	r2, [pc, #112]	; (407e20 <dump_stats+0xe0>)
  407db0:	4623      	mov	r3, r4
  407db2:	4c1c      	ldr	r4, [pc, #112]	; (407e24 <dump_stats+0xe4>)
  407db4:	47a0      	blx	r4
            iscn->stat_img_syms_inuse, iscn->stat_img_syms_recycle);
    zprintf(1, "symbols allocated       = %-4d\n", iscn->stat_sym_new);
  407db6:	4b17      	ldr	r3, [pc, #92]	; (407e14 <dump_stats+0xd4>)
  407db8:	681b      	ldr	r3, [r3, #0]
  407dba:	2b00      	cmp	r3, #0
  407dbc:	dd0a      	ble.n	407dd4 <dump_stats+0x94>
  407dbe:	4b16      	ldr	r3, [pc, #88]	; (407e18 <dump_stats+0xd8>)
  407dc0:	681b      	ldr	r3, [r3, #0]
  407dc2:	68da      	ldr	r2, [r3, #12]
  407dc4:	687b      	ldr	r3, [r7, #4]
  407dc6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  407dca:	4610      	mov	r0, r2
  407dcc:	4918      	ldr	r1, [pc, #96]	; (407e30 <dump_stats+0xf0>)
  407dce:	4a14      	ldr	r2, [pc, #80]	; (407e20 <dump_stats+0xe0>)
  407dd0:	4c14      	ldr	r4, [pc, #80]	; (407e24 <dump_stats+0xe4>)
  407dd2:	47a0      	blx	r4
    for(i = 0; i < RECYCLE_BUCKETS; i++)
  407dd4:	2300      	movs	r3, #0
  407dd6:	60fb      	str	r3, [r7, #12]
  407dd8:	e015      	b.n	407e06 <dump_stats+0xc6>
        zprintf(1, "     recycled[%d]        = %-4d\n",
  407dda:	4b0e      	ldr	r3, [pc, #56]	; (407e14 <dump_stats+0xd4>)
  407ddc:	681b      	ldr	r3, [r3, #0]
  407dde:	2b00      	cmp	r3, #0
  407de0:	dd0e      	ble.n	407e00 <dump_stats+0xc0>
  407de2:	4b0d      	ldr	r3, [pc, #52]	; (407e18 <dump_stats+0xd8>)
  407de4:	681b      	ldr	r3, [r3, #0]
  407de6:	68d9      	ldr	r1, [r3, #12]
  407de8:	687b      	ldr	r3, [r7, #4]
  407dea:	68fa      	ldr	r2, [r7, #12]
  407dec:	3236      	adds	r2, #54	; 0x36
  407dee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  407df2:	9300      	str	r3, [sp, #0]
  407df4:	4608      	mov	r0, r1
  407df6:	490f      	ldr	r1, [pc, #60]	; (407e34 <dump_stats+0xf4>)
  407df8:	4a09      	ldr	r2, [pc, #36]	; (407e20 <dump_stats+0xe0>)
  407dfa:	68fb      	ldr	r3, [r7, #12]
  407dfc:	4c09      	ldr	r4, [pc, #36]	; (407e24 <dump_stats+0xe4>)
  407dfe:	47a0      	blx	r4
    zprintf(1, "    scanner syms in use = %-4d\trecycled  = %-4d\n",
            iscn->stat_iscn_syms_inuse, iscn->stat_iscn_syms_recycle);
    zprintf(1, "    image syms in use   = %-4d\trecycled  = %-4d\n",
            iscn->stat_img_syms_inuse, iscn->stat_img_syms_recycle);
    zprintf(1, "symbols allocated       = %-4d\n", iscn->stat_sym_new);
    for(i = 0; i < RECYCLE_BUCKETS; i++)
  407e00:	68fb      	ldr	r3, [r7, #12]
  407e02:	3301      	adds	r3, #1
  407e04:	60fb      	str	r3, [r7, #12]
  407e06:	68fb      	ldr	r3, [r7, #12]
  407e08:	2b04      	cmp	r3, #4
  407e0a:	dde6      	ble.n	407dda <dump_stats+0x9a>
        zprintf(1, "     recycled[%d]        = %-4d\n",
                i, iscn->stat_sym_recycle[i]);
}
  407e0c:	3714      	adds	r7, #20
  407e0e:	46bd      	mov	sp, r7
  407e10:	bd90      	pop	{r4, r7, pc}
  407e12:	bf00      	nop
  407e14:	20001bd4 	.word	0x20001bd4
  407e18:	200012d0 	.word	0x200012d0
  407e1c:	0043c928 	.word	0x0043c928
  407e20:	0043cb38 	.word	0x0043cb38
  407e24:	0043413d 	.word	0x0043413d
  407e28:	0043c94c 	.word	0x0043c94c
  407e2c:	0043c984 	.word	0x0043c984
  407e30:	0043c9bc 	.word	0x0043c9bc
  407e34:	0043c9e0 	.word	0x0043c9e0

00407e38 <zbar_image_scanner_destroy>:
#endif

void zbar_image_scanner_destroy (zbar_image_scanner_t *iscn)
{
  407e38:	b580      	push	{r7, lr}
  407e3a:	b086      	sub	sp, #24
  407e3c:	af00      	add	r7, sp, #0
  407e3e:	6078      	str	r0, [r7, #4]
    int i;
    dump_stats(iscn);
  407e40:	6878      	ldr	r0, [r7, #4]
  407e42:	4b2a      	ldr	r3, [pc, #168]	; (407eec <zbar_image_scanner_destroy+0xb4>)
  407e44:	4798      	blx	r3
    if(iscn->syms) {
  407e46:	687b      	ldr	r3, [r7, #4]
  407e48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407e4a:	2b00      	cmp	r3, #0
  407e4c:	d014      	beq.n	407e78 <zbar_image_scanner_destroy+0x40>
        if(iscn->syms->refcnt)
  407e4e:	687b      	ldr	r3, [r7, #4]
  407e50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407e52:	681b      	ldr	r3, [r3, #0]
  407e54:	2b00      	cmp	r3, #0
  407e56:	d007      	beq.n	407e68 <zbar_image_scanner_destroy+0x30>
            zbar_symbol_set_ref(iscn->syms, -1);
  407e58:	687b      	ldr	r3, [r7, #4]
  407e5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407e5c:	4618      	mov	r0, r3
  407e5e:	f04f 31ff 	mov.w	r1, #4294967295
  407e62:	4b23      	ldr	r3, [pc, #140]	; (407ef0 <zbar_image_scanner_destroy+0xb8>)
  407e64:	4798      	blx	r3
  407e66:	e004      	b.n	407e72 <zbar_image_scanner_destroy+0x3a>
        else
            _zbar_symbol_set_free(iscn->syms);
  407e68:	687b      	ldr	r3, [r7, #4]
  407e6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407e6c:	4618      	mov	r0, r3
  407e6e:	4b21      	ldr	r3, [pc, #132]	; (407ef4 <zbar_image_scanner_destroy+0xbc>)
  407e70:	4798      	blx	r3
        iscn->syms = NULL;
  407e72:	687b      	ldr	r3, [r7, #4]
  407e74:	2200      	movs	r2, #0
  407e76:	62da      	str	r2, [r3, #44]	; 0x2c
    }
    if(iscn->scn)
  407e78:	687b      	ldr	r3, [r7, #4]
  407e7a:	681b      	ldr	r3, [r3, #0]
  407e7c:	2b00      	cmp	r3, #0
  407e7e:	d004      	beq.n	407e8a <zbar_image_scanner_destroy+0x52>
        zbar_scanner_destroy(iscn->scn);
  407e80:	687b      	ldr	r3, [r7, #4]
  407e82:	681b      	ldr	r3, [r3, #0]
  407e84:	4618      	mov	r0, r3
  407e86:	4b1c      	ldr	r3, [pc, #112]	; (407ef8 <zbar_image_scanner_destroy+0xc0>)
  407e88:	4798      	blx	r3
    iscn->scn = NULL;
  407e8a:	687b      	ldr	r3, [r7, #4]
  407e8c:	2200      	movs	r2, #0
  407e8e:	601a      	str	r2, [r3, #0]
    if(iscn->dcode)
  407e90:	687b      	ldr	r3, [r7, #4]
  407e92:	685b      	ldr	r3, [r3, #4]
  407e94:	2b00      	cmp	r3, #0
  407e96:	d004      	beq.n	407ea2 <zbar_image_scanner_destroy+0x6a>
        zbar_decoder_destroy(iscn->dcode);
  407e98:	687b      	ldr	r3, [r7, #4]
  407e9a:	685b      	ldr	r3, [r3, #4]
  407e9c:	4618      	mov	r0, r3
  407e9e:	4b17      	ldr	r3, [pc, #92]	; (407efc <zbar_image_scanner_destroy+0xc4>)
  407ea0:	4798      	blx	r3
    iscn->dcode = NULL;
  407ea2:	687b      	ldr	r3, [r7, #4]
  407ea4:	2200      	movs	r2, #0
  407ea6:	605a      	str	r2, [r3, #4]
    for(i = 0; i < RECYCLE_BUCKETS; i++) {
  407ea8:	2300      	movs	r3, #0
  407eaa:	617b      	str	r3, [r7, #20]
  407eac:	e015      	b.n	407eda <zbar_image_scanner_destroy+0xa2>
        zbar_symbol_t *sym, *next;
        for(sym = iscn->recycle[i].head; sym; sym = next) {
  407eae:	687a      	ldr	r2, [r7, #4]
  407eb0:	697b      	ldr	r3, [r7, #20]
  407eb2:	3306      	adds	r3, #6
  407eb4:	00db      	lsls	r3, r3, #3
  407eb6:	4413      	add	r3, r2
  407eb8:	685b      	ldr	r3, [r3, #4]
  407eba:	613b      	str	r3, [r7, #16]
  407ebc:	e007      	b.n	407ece <zbar_image_scanner_destroy+0x96>
            next = sym->next;
  407ebe:	693b      	ldr	r3, [r7, #16]
  407ec0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  407ec2:	60fb      	str	r3, [r7, #12]
            _zbar_symbol_free(sym);
  407ec4:	6938      	ldr	r0, [r7, #16]
  407ec6:	4b0e      	ldr	r3, [pc, #56]	; (407f00 <zbar_image_scanner_destroy+0xc8>)
  407ec8:	4798      	blx	r3
    if(iscn->dcode)
        zbar_decoder_destroy(iscn->dcode);
    iscn->dcode = NULL;
    for(i = 0; i < RECYCLE_BUCKETS; i++) {
        zbar_symbol_t *sym, *next;
        for(sym = iscn->recycle[i].head; sym; sym = next) {
  407eca:	68fb      	ldr	r3, [r7, #12]
  407ecc:	613b      	str	r3, [r7, #16]
  407ece:	693b      	ldr	r3, [r7, #16]
  407ed0:	2b00      	cmp	r3, #0
  407ed2:	d1f4      	bne.n	407ebe <zbar_image_scanner_destroy+0x86>
        zbar_scanner_destroy(iscn->scn);
    iscn->scn = NULL;
    if(iscn->dcode)
        zbar_decoder_destroy(iscn->dcode);
    iscn->dcode = NULL;
    for(i = 0; i < RECYCLE_BUCKETS; i++) {
  407ed4:	697b      	ldr	r3, [r7, #20]
  407ed6:	3301      	adds	r3, #1
  407ed8:	617b      	str	r3, [r7, #20]
  407eda:	697b      	ldr	r3, [r7, #20]
  407edc:	2b04      	cmp	r3, #4
  407ede:	dde6      	ble.n	407eae <zbar_image_scanner_destroy+0x76>
    if(iscn->qr) {
        _zbar_qr_destroy(iscn->qr);
        iscn->qr = NULL;
    }
#endif
    free(iscn);
  407ee0:	6878      	ldr	r0, [r7, #4]
  407ee2:	4b08      	ldr	r3, [pc, #32]	; (407f04 <zbar_image_scanner_destroy+0xcc>)
  407ee4:	4798      	blx	r3
}
  407ee6:	3718      	adds	r7, #24
  407ee8:	46bd      	mov	sp, r7
  407eea:	bd80      	pop	{r7, pc}
  407eec:	00407d41 	.word	0x00407d41
  407ef0:	0040929d 	.word	0x0040929d
  407ef4:	00409251 	.word	0x00409251
  407ef8:	004088f5 	.word	0x004088f5
  407efc:	004051f1 	.word	0x004051f1
  407f00:	00409169 	.word	0x00409169
  407f04:	004348ad 	.word	0x004348ad

00407f08 <zbar_image_scanner_set_config>:

int zbar_image_scanner_set_config (zbar_image_scanner_t *iscn,
                                   zbar_symbol_type_t sym,
                                   zbar_config_t cfg,
                                   int val)
{
  407f08:	b590      	push	{r4, r7, lr}
  407f0a:	b087      	sub	sp, #28
  407f0c:	af00      	add	r7, sp, #0
  407f0e:	60f8      	str	r0, [r7, #12]
  407f10:	607b      	str	r3, [r7, #4]
  407f12:	460b      	mov	r3, r1
  407f14:	817b      	strh	r3, [r7, #10]
  407f16:	4613      	mov	r3, r2
  407f18:	813b      	strh	r3, [r7, #8]
    if((sym == 0 || sym == ZBAR_COMPOSITE) && cfg == ZBAR_CFG_ENABLE) {
  407f1a:	897b      	ldrh	r3, [r7, #10]
  407f1c:	2b00      	cmp	r3, #0
  407f1e:	d002      	beq.n	407f26 <zbar_image_scanner_set_config+0x1e>
  407f20:	897b      	ldrh	r3, [r7, #10]
  407f22:	2b0f      	cmp	r3, #15
  407f24:	d110      	bne.n	407f48 <zbar_image_scanner_set_config+0x40>
  407f26:	893b      	ldrh	r3, [r7, #8]
  407f28:	2b00      	cmp	r3, #0
  407f2a:	d10d      	bne.n	407f48 <zbar_image_scanner_set_config+0x40>
        iscn->ean_config = !!val;
  407f2c:	687b      	ldr	r3, [r7, #4]
  407f2e:	2b00      	cmp	r3, #0
  407f30:	bf14      	ite	ne
  407f32:	2301      	movne	r3, #1
  407f34:	2300      	moveq	r3, #0
  407f36:	b2db      	uxtb	r3, r3
  407f38:	461a      	mov	r2, r3
  407f3a:	68fb      	ldr	r3, [r7, #12]
  407f3c:	665a      	str	r2, [r3, #100]	; 0x64
        if(sym)
  407f3e:	897b      	ldrh	r3, [r7, #10]
  407f40:	2b00      	cmp	r3, #0
  407f42:	d001      	beq.n	407f48 <zbar_image_scanner_set_config+0x40>
            return(0);
  407f44:	2300      	movs	r3, #0
  407f46:	e081      	b.n	40804c <zbar_image_scanner_set_config+0x144>
    }

    if(cfg < ZBAR_CFG_UNCERTAINTY)
  407f48:	893b      	ldrh	r3, [r7, #8]
  407f4a:	2b3f      	cmp	r3, #63	; 0x3f
  407f4c:	d80b      	bhi.n	407f66 <zbar_image_scanner_set_config+0x5e>
        return(zbar_decoder_set_config(iscn->dcode, sym, cfg, val));
  407f4e:	68fb      	ldr	r3, [r7, #12]
  407f50:	6859      	ldr	r1, [r3, #4]
  407f52:	897a      	ldrh	r2, [r7, #10]
  407f54:	893b      	ldrh	r3, [r7, #8]
  407f56:	4608      	mov	r0, r1
  407f58:	4611      	mov	r1, r2
  407f5a:	461a      	mov	r2, r3
  407f5c:	687b      	ldr	r3, [r7, #4]
  407f5e:	4c3d      	ldr	r4, [pc, #244]	; (408054 <zbar_image_scanner_set_config+0x14c>)
  407f60:	47a0      	blx	r4
  407f62:	4603      	mov	r3, r0
  407f64:	e072      	b.n	40804c <zbar_image_scanner_set_config+0x144>

    if(cfg < ZBAR_CFG_POSITION) {
  407f66:	893b      	ldrh	r3, [r7, #8]
  407f68:	2b7f      	cmp	r3, #127	; 0x7f
  407f6a:	d833      	bhi.n	407fd4 <zbar_image_scanner_set_config+0xcc>
        int c, i;
        if(cfg > ZBAR_CFG_UNCERTAINTY)
  407f6c:	893b      	ldrh	r3, [r7, #8]
  407f6e:	2b40      	cmp	r3, #64	; 0x40
  407f70:	d901      	bls.n	407f76 <zbar_image_scanner_set_config+0x6e>
            return(1);
  407f72:	2301      	movs	r3, #1
  407f74:	e06a      	b.n	40804c <zbar_image_scanner_set_config+0x144>
        c = cfg - ZBAR_CFG_UNCERTAINTY;
  407f76:	893b      	ldrh	r3, [r7, #8]
  407f78:	3b40      	subs	r3, #64	; 0x40
  407f7a:	613b      	str	r3, [r7, #16]
        if(sym > ZBAR_PARTIAL) {
  407f7c:	897b      	ldrh	r3, [r7, #10]
  407f7e:	2b01      	cmp	r3, #1
  407f80:	d911      	bls.n	407fa6 <zbar_image_scanner_set_config+0x9e>
            i = _zbar_get_symbol_hash(sym);
  407f82:	897b      	ldrh	r3, [r7, #10]
  407f84:	4618      	mov	r0, r3
  407f86:	4b34      	ldr	r3, [pc, #208]	; (408058 <zbar_image_scanner_set_config+0x150>)
  407f88:	4798      	blx	r3
  407f8a:	6178      	str	r0, [r7, #20]
            iscn->sym_configs[c][i] = val;
  407f8c:	68f9      	ldr	r1, [r7, #12]
  407f8e:	693a      	ldr	r2, [r7, #16]
  407f90:	4613      	mov	r3, r2
  407f92:	009b      	lsls	r3, r3, #2
  407f94:	4413      	add	r3, r2
  407f96:	009b      	lsls	r3, r3, #2
  407f98:	697a      	ldr	r2, [r7, #20]
  407f9a:	4413      	add	r3, r2
  407f9c:	331c      	adds	r3, #28
  407f9e:	687a      	ldr	r2, [r7, #4]
  407fa0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  407fa4:	e014      	b.n	407fd0 <zbar_image_scanner_set_config+0xc8>
        }
        else
            for(i = 0; i < NUM_SYMS; i++)
  407fa6:	2300      	movs	r3, #0
  407fa8:	617b      	str	r3, [r7, #20]
  407faa:	e00e      	b.n	407fca <zbar_image_scanner_set_config+0xc2>
                iscn->sym_configs[c][i] = val;
  407fac:	68f9      	ldr	r1, [r7, #12]
  407fae:	693a      	ldr	r2, [r7, #16]
  407fb0:	4613      	mov	r3, r2
  407fb2:	009b      	lsls	r3, r3, #2
  407fb4:	4413      	add	r3, r2
  407fb6:	009b      	lsls	r3, r3, #2
  407fb8:	697a      	ldr	r2, [r7, #20]
  407fba:	4413      	add	r3, r2
  407fbc:	331c      	adds	r3, #28
  407fbe:	687a      	ldr	r2, [r7, #4]
  407fc0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        if(sym > ZBAR_PARTIAL) {
            i = _zbar_get_symbol_hash(sym);
            iscn->sym_configs[c][i] = val;
        }
        else
            for(i = 0; i < NUM_SYMS; i++)
  407fc4:	697b      	ldr	r3, [r7, #20]
  407fc6:	3301      	adds	r3, #1
  407fc8:	617b      	str	r3, [r7, #20]
  407fca:	697b      	ldr	r3, [r7, #20]
  407fcc:	2b13      	cmp	r3, #19
  407fce:	dded      	ble.n	407fac <zbar_image_scanner_set_config+0xa4>
                iscn->sym_configs[c][i] = val;
        return(0);
  407fd0:	2300      	movs	r3, #0
  407fd2:	e03b      	b.n	40804c <zbar_image_scanner_set_config+0x144>
    }

    if(sym > ZBAR_PARTIAL)
  407fd4:	897b      	ldrh	r3, [r7, #10]
  407fd6:	2b01      	cmp	r3, #1
  407fd8:	d901      	bls.n	407fde <zbar_image_scanner_set_config+0xd6>
        return(1);
  407fda:	2301      	movs	r3, #1
  407fdc:	e036      	b.n	40804c <zbar_image_scanner_set_config+0x144>

    if(cfg >= ZBAR_CFG_X_DENSITY && cfg <= ZBAR_CFG_Y_DENSITY) {
  407fde:	893b      	ldrh	r3, [r7, #8]
  407fe0:	2bff      	cmp	r3, #255	; 0xff
  407fe2:	d90d      	bls.n	408000 <zbar_image_scanner_set_config+0xf8>
  407fe4:	893b      	ldrh	r3, [r7, #8]
  407fe6:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
  407fea:	d209      	bcs.n	408000 <zbar_image_scanner_set_config+0xf8>
        CFG(iscn, cfg) = val;
  407fec:	893b      	ldrh	r3, [r7, #8]
  407fee:	f5a3 7280 	sub.w	r2, r3, #256	; 0x100
  407ff2:	68fb      	ldr	r3, [r7, #12]
  407ff4:	321a      	adds	r2, #26
  407ff6:	6879      	ldr	r1, [r7, #4]
  407ff8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        return(0);
  407ffc:	2300      	movs	r3, #0
  407ffe:	e025      	b.n	40804c <zbar_image_scanner_set_config+0x144>
    }

    if(cfg > ZBAR_CFG_POSITION)
  408000:	893b      	ldrh	r3, [r7, #8]
  408002:	2b80      	cmp	r3, #128	; 0x80
  408004:	d901      	bls.n	40800a <zbar_image_scanner_set_config+0x102>
        return(1);
  408006:	2301      	movs	r3, #1
  408008:	e020      	b.n	40804c <zbar_image_scanner_set_config+0x144>
    cfg -= ZBAR_CFG_POSITION;
  40800a:	893b      	ldrh	r3, [r7, #8]
  40800c:	3b80      	subs	r3, #128	; 0x80
  40800e:	813b      	strh	r3, [r7, #8]

    if(!val)
  408010:	687b      	ldr	r3, [r7, #4]
  408012:	2b00      	cmp	r3, #0
  408014:	d10a      	bne.n	40802c <zbar_image_scanner_set_config+0x124>
        iscn->config &= ~(1 << cfg);
  408016:	68fb      	ldr	r3, [r7, #12]
  408018:	6e1b      	ldr	r3, [r3, #96]	; 0x60
  40801a:	893a      	ldrh	r2, [r7, #8]
  40801c:	2101      	movs	r1, #1
  40801e:	fa01 f202 	lsl.w	r2, r1, r2
  408022:	43d2      	mvns	r2, r2
  408024:	401a      	ands	r2, r3
  408026:	68fb      	ldr	r3, [r7, #12]
  408028:	661a      	str	r2, [r3, #96]	; 0x60
  40802a:	e00e      	b.n	40804a <zbar_image_scanner_set_config+0x142>
    else if(val == 1)
  40802c:	687b      	ldr	r3, [r7, #4]
  40802e:	2b01      	cmp	r3, #1
  408030:	d109      	bne.n	408046 <zbar_image_scanner_set_config+0x13e>
        iscn->config |= (1 << cfg);
  408032:	68fb      	ldr	r3, [r7, #12]
  408034:	6e1b      	ldr	r3, [r3, #96]	; 0x60
  408036:	893a      	ldrh	r2, [r7, #8]
  408038:	2101      	movs	r1, #1
  40803a:	fa01 f202 	lsl.w	r2, r1, r2
  40803e:	431a      	orrs	r2, r3
  408040:	68fb      	ldr	r3, [r7, #12]
  408042:	661a      	str	r2, [r3, #96]	; 0x60
  408044:	e001      	b.n	40804a <zbar_image_scanner_set_config+0x142>
    else
        return(1);
  408046:	2301      	movs	r3, #1
  408048:	e000      	b.n	40804c <zbar_image_scanner_set_config+0x144>

    return(0);
  40804a:	2300      	movs	r3, #0
}
  40804c:	4618      	mov	r0, r3
  40804e:	371c      	adds	r7, #28
  408050:	46bd      	mov	sp, r7
  408052:	bd90      	pop	{r4, r7, pc}
  408054:	004056c5 	.word	0x004056c5
  408058:	004090ed 	.word	0x004090ed

0040805c <quiet_border>:
{
    return(iscn->syms);
}

static inline void quiet_border (zbar_image_scanner_t *iscn)
{
  40805c:	b580      	push	{r7, lr}
  40805e:	b084      	sub	sp, #16
  408060:	af00      	add	r7, sp, #0
  408062:	6078      	str	r0, [r7, #4]
    /* flush scanner pipeline */
    zbar_scanner_t *scn = iscn->scn;
  408064:	687b      	ldr	r3, [r7, #4]
  408066:	681b      	ldr	r3, [r3, #0]
  408068:	60fb      	str	r3, [r7, #12]
    zbar_scanner_flush(scn);
  40806a:	68f8      	ldr	r0, [r7, #12]
  40806c:	4b05      	ldr	r3, [pc, #20]	; (408084 <quiet_border+0x28>)
  40806e:	4798      	blx	r3
    zbar_scanner_flush(scn);
  408070:	68f8      	ldr	r0, [r7, #12]
  408072:	4b04      	ldr	r3, [pc, #16]	; (408084 <quiet_border+0x28>)
  408074:	4798      	blx	r3
    zbar_scanner_new_scan(scn);
  408076:	68f8      	ldr	r0, [r7, #12]
  408078:	4b03      	ldr	r3, [pc, #12]	; (408088 <quiet_border+0x2c>)
  40807a:	4798      	blx	r3
}
  40807c:	3710      	adds	r7, #16
  40807e:	46bd      	mov	sp, r7
  408080:	bd80      	pop	{r7, pc}
  408082:	bf00      	nop
  408084:	00408ab9 	.word	0x00408ab9
  408088:	00408b49 	.word	0x00408b49

0040808c <zbar_scan_image>:
        p += (dx) + ((uintptr_t)(dy) * w);       \
    } while(0);

int zbar_scan_image (zbar_image_scanner_t *iscn,
                     zbar_image_t *img)
{
  40808c:	b590      	push	{r4, r7, lr}
  40808e:	b0a3      	sub	sp, #140	; 0x8c
  408090:	af02      	add	r7, sp, #8
  408092:	6078      	str	r0, [r7, #4]
  408094:	6039      	str	r1, [r7, #0]
    zbar_symbol_set_t *syms;
    const uint8_t *data;
    zbar_scanner_t *scn = iscn->scn;
  408096:	687b      	ldr	r3, [r7, #4]
  408098:	681b      	ldr	r3, [r3, #0]
  40809a:	647b      	str	r3, [r7, #68]	; 0x44
    int density;

    /* timestamp image
     * FIXME prefer video timestamp
     */
    iscn->time = 0;//_zbar_timer_now();
  40809c:	687b      	ldr	r3, [r7, #4]
  40809e:	2200      	movs	r2, #0
  4080a0:	611a      	str	r2, [r3, #16]
#ifdef ENABLE_QRCODE
    _zbar_qr_reset(iscn->qr);
#endif

    /* image must be in grayscale format */
    if(img->format != fourcc('Y','8','0','0') &&
  4080a2:	683b      	ldr	r3, [r7, #0]
  4080a4:	681b      	ldr	r3, [r3, #0]
  4080a6:	4a87      	ldr	r2, [pc, #540]	; (4082c4 <zbar_scan_image+0x238>)
  4080a8:	4293      	cmp	r3, r2
  4080aa:	d007      	beq.n	4080bc <zbar_scan_image+0x30>
       img->format != fourcc('G','R','E','Y'))
  4080ac:	683b      	ldr	r3, [r7, #0]
  4080ae:	681b      	ldr	r3, [r3, #0]
#ifdef ENABLE_QRCODE
    _zbar_qr_reset(iscn->qr);
#endif

    /* image must be in grayscale format */
    if(img->format != fourcc('Y','8','0','0') &&
  4080b0:	4a85      	ldr	r2, [pc, #532]	; (4082c8 <zbar_scan_image+0x23c>)
  4080b2:	4293      	cmp	r3, r2
  4080b4:	d002      	beq.n	4080bc <zbar_scan_image+0x30>
       img->format != fourcc('G','R','E','Y'))
        return(-1);
  4080b6:	f04f 33ff 	mov.w	r3, #4294967295
  4080ba:	e3ed      	b.n	408898 <zbar_scan_image+0x80c>
    iscn->img = img;
  4080bc:	687b      	ldr	r3, [r7, #4]
  4080be:	683a      	ldr	r2, [r7, #0]
  4080c0:	615a      	str	r2, [r3, #20]

    /* recycle previous scanner and image results */
    zbar_image_scanner_recycle_image(iscn, img);
  4080c2:	6878      	ldr	r0, [r7, #4]
  4080c4:	6839      	ldr	r1, [r7, #0]
  4080c6:	4b81      	ldr	r3, [pc, #516]	; (4082cc <zbar_scan_image+0x240>)
  4080c8:	4798      	blx	r3
    syms = iscn->syms;
  4080ca:	687b      	ldr	r3, [r7, #4]
  4080cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4080ce:	67fb      	str	r3, [r7, #124]	; 0x7c
    if(!syms) {
  4080d0:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  4080d2:	2b00      	cmp	r3, #0
  4080d4:	d113      	bne.n	4080fe <zbar_scan_image+0x72>
        syms = iscn->syms = _zbar_symbol_set_create();
  4080d6:	4b7e      	ldr	r3, [pc, #504]	; (4082d0 <zbar_scan_image+0x244>)
  4080d8:	4798      	blx	r3
  4080da:	4602      	mov	r2, r0
  4080dc:	687b      	ldr	r3, [r7, #4]
  4080de:	62da      	str	r2, [r3, #44]	; 0x2c
  4080e0:	687b      	ldr	r3, [r7, #4]
  4080e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4080e4:	67fb      	str	r3, [r7, #124]	; 0x7c
        STAT(syms_new);
  4080e6:	687b      	ldr	r3, [r7, #4]
  4080e8:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
  4080ec:	1c5a      	adds	r2, r3, #1
  4080ee:	687b      	ldr	r3, [r7, #4]
  4080f0:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
        zbar_symbol_set_ref(syms, 1);
  4080f4:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
  4080f6:	2101      	movs	r1, #1
  4080f8:	4b76      	ldr	r3, [pc, #472]	; (4082d4 <zbar_scan_image+0x248>)
  4080fa:	4798      	blx	r3
  4080fc:	e003      	b.n	408106 <zbar_scan_image+0x7a>
    }
    else
        zbar_symbol_set_ref(syms, 2);
  4080fe:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
  408100:	2102      	movs	r1, #2
  408102:	4b74      	ldr	r3, [pc, #464]	; (4082d4 <zbar_scan_image+0x248>)
  408104:	4798      	blx	r3
    img->syms = syms;
  408106:	683b      	ldr	r3, [r7, #0]
  408108:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
  40810a:	641a      	str	r2, [r3, #64]	; 0x40

    w = img->width;
  40810c:	683b      	ldr	r3, [r7, #0]
  40810e:	685b      	ldr	r3, [r3, #4]
  408110:	643b      	str	r3, [r7, #64]	; 0x40
    h = img->height;
  408112:	683b      	ldr	r3, [r7, #0]
  408114:	689b      	ldr	r3, [r3, #8]
  408116:	63fb      	str	r3, [r7, #60]	; 0x3c
    cx1 = img->crop_x + img->crop_w;
  408118:	683b      	ldr	r3, [r7, #0]
  40811a:	695a      	ldr	r2, [r3, #20]
  40811c:	683b      	ldr	r3, [r7, #0]
  40811e:	69db      	ldr	r3, [r3, #28]
  408120:	4413      	add	r3, r2
  408122:	63bb      	str	r3, [r7, #56]	; 0x38
    assert(cx1 <= w);
  408124:	6bba      	ldr	r2, [r7, #56]	; 0x38
  408126:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  408128:	429a      	cmp	r2, r3
  40812a:	d906      	bls.n	40813a <zbar_scan_image+0xae>
  40812c:	486a      	ldr	r0, [pc, #424]	; (4082d8 <zbar_scan_image+0x24c>)
  40812e:	f240 21ab 	movw	r1, #683	; 0x2ab
  408132:	4a6a      	ldr	r2, [pc, #424]	; (4082dc <zbar_scan_image+0x250>)
  408134:	4b6a      	ldr	r3, [pc, #424]	; (4082e0 <zbar_scan_image+0x254>)
  408136:	4c6b      	ldr	r4, [pc, #428]	; (4082e4 <zbar_scan_image+0x258>)
  408138:	47a0      	blx	r4
    cy1 = img->crop_y + img->crop_h;
  40813a:	683b      	ldr	r3, [r7, #0]
  40813c:	699a      	ldr	r2, [r3, #24]
  40813e:	683b      	ldr	r3, [r7, #0]
  408140:	6a1b      	ldr	r3, [r3, #32]
  408142:	4413      	add	r3, r2
  408144:	637b      	str	r3, [r7, #52]	; 0x34
    assert(cy1 <= h);
  408146:	6b7a      	ldr	r2, [r7, #52]	; 0x34
  408148:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
  40814a:	429a      	cmp	r2, r3
  40814c:	d906      	bls.n	40815c <zbar_scan_image+0xd0>
  40814e:	4862      	ldr	r0, [pc, #392]	; (4082d8 <zbar_scan_image+0x24c>)
  408150:	f240 21ad 	movw	r1, #685	; 0x2ad
  408154:	4a61      	ldr	r2, [pc, #388]	; (4082dc <zbar_scan_image+0x250>)
  408156:	4b64      	ldr	r3, [pc, #400]	; (4082e8 <zbar_scan_image+0x25c>)
  408158:	4c62      	ldr	r4, [pc, #392]	; (4082e4 <zbar_scan_image+0x258>)
  40815a:	47a0      	blx	r4
    data = img->data;
  40815c:	683b      	ldr	r3, [r7, #0]
  40815e:	68db      	ldr	r3, [r3, #12]
  408160:	633b      	str	r3, [r7, #48]	; 0x30

    //zbar_image_write_png(img, "debug.png");
    //svg_open("debug.svg", 0, 0, w, h);
    //svg_image("debug.png", w, h);

    zbar_scanner_new_scan(scn);
  408162:	6c78      	ldr	r0, [r7, #68]	; 0x44
  408164:	4b61      	ldr	r3, [pc, #388]	; (4082ec <zbar_scan_image+0x260>)
  408166:	4798      	blx	r3

    density = CFG(iscn, ZBAR_CFG_Y_DENSITY);
  408168:	687b      	ldr	r3, [r7, #4]
  40816a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
  40816c:	62fb      	str	r3, [r7, #44]	; 0x2c
    if(density > 0) {
  40816e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  408170:	2b00      	cmp	r3, #0
  408172:	f340 812b 	ble.w	4083cc <zbar_scan_image+0x340>
        const uint8_t *p = data;
  408176:	6b3b      	ldr	r3, [r7, #48]	; 0x30
  408178:	67bb      	str	r3, [r7, #120]	; 0x78
        int x = 0, y = 0;
  40817a:	2300      	movs	r3, #0
  40817c:	677b      	str	r3, [r7, #116]	; 0x74
  40817e:	2300      	movs	r3, #0
  408180:	673b      	str	r3, [r7, #112]	; 0x70

        int border = (((img->crop_h - 1) % density) + 1) / 2;
  408182:	683b      	ldr	r3, [r7, #0]
  408184:	6a1b      	ldr	r3, [r3, #32]
  408186:	3b01      	subs	r3, #1
  408188:	6afa      	ldr	r2, [r7, #44]	; 0x2c
  40818a:	fbb3 f1f2 	udiv	r1, r3, r2
  40818e:	fb02 f201 	mul.w	r2, r2, r1
  408192:	1a9b      	subs	r3, r3, r2
  408194:	3301      	adds	r3, #1
  408196:	085b      	lsrs	r3, r3, #1
  408198:	66fb      	str	r3, [r7, #108]	; 0x6c
        if(border > img->crop_h / 2)
  40819a:	6efa      	ldr	r2, [r7, #108]	; 0x6c
  40819c:	683b      	ldr	r3, [r7, #0]
  40819e:	6a1b      	ldr	r3, [r3, #32]
  4081a0:	085b      	lsrs	r3, r3, #1
  4081a2:	429a      	cmp	r2, r3
  4081a4:	d903      	bls.n	4081ae <zbar_scan_image+0x122>
            border = img->crop_h / 2;
  4081a6:	683b      	ldr	r3, [r7, #0]
  4081a8:	6a1b      	ldr	r3, [r3, #32]
  4081aa:	085b      	lsrs	r3, r3, #1
  4081ac:	66fb      	str	r3, [r7, #108]	; 0x6c
        border += img->crop_y;
  4081ae:	683b      	ldr	r3, [r7, #0]
  4081b0:	699a      	ldr	r2, [r3, #24]
  4081b2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
  4081b4:	4413      	add	r3, r2
  4081b6:	66fb      	str	r3, [r7, #108]	; 0x6c
        assert(border <= h);
  4081b8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
  4081ba:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
  4081bc:	429a      	cmp	r2, r3
  4081be:	d906      	bls.n	4081ce <zbar_scan_image+0x142>
  4081c0:	4845      	ldr	r0, [pc, #276]	; (4082d8 <zbar_scan_image+0x24c>)
  4081c2:	f240 21bf 	movw	r1, #703	; 0x2bf
  4081c6:	4a45      	ldr	r2, [pc, #276]	; (4082dc <zbar_scan_image+0x250>)
  4081c8:	4b49      	ldr	r3, [pc, #292]	; (4082f0 <zbar_scan_image+0x264>)
  4081ca:	4c46      	ldr	r4, [pc, #280]	; (4082e4 <zbar_scan_image+0x258>)
  4081cc:	47a0      	blx	r4
        //svg_group_start("scanner", 0, 1, 1, 0, 0);
        iscn->dy = 0;
  4081ce:	687b      	ldr	r3, [r7, #4]
  4081d0:	2200      	movs	r2, #0
  4081d2:	61da      	str	r2, [r3, #28]

        movedelta(img->crop_x, border);
  4081d4:	683b      	ldr	r3, [r7, #0]
  4081d6:	695a      	ldr	r2, [r3, #20]
  4081d8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  4081da:	4413      	add	r3, r2
  4081dc:	677b      	str	r3, [r7, #116]	; 0x74
  4081de:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  4081e0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
  4081e2:	4413      	add	r3, r2
  4081e4:	673b      	str	r3, [r7, #112]	; 0x70
  4081e6:	683b      	ldr	r3, [r7, #0]
  4081e8:	695a      	ldr	r2, [r3, #20]
  4081ea:	6efb      	ldr	r3, [r7, #108]	; 0x6c
  4081ec:	6c39      	ldr	r1, [r7, #64]	; 0x40
  4081ee:	fb01 f303 	mul.w	r3, r1, r3
  4081f2:	4413      	add	r3, r2
  4081f4:	6fba      	ldr	r2, [r7, #120]	; 0x78
  4081f6:	4413      	add	r3, r2
  4081f8:	67bb      	str	r3, [r7, #120]	; 0x78
        iscn->v = y;
  4081fa:	687b      	ldr	r3, [r7, #4]
  4081fc:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  4081fe:	629a      	str	r2, [r3, #40]	; 0x28

        while(y < cy1) {
  408200:	e0df      	b.n	4083c2 <zbar_scan_image+0x336>
            int cx0 = img->crop_x;;
  408202:	683b      	ldr	r3, [r7, #0]
  408204:	695b      	ldr	r3, [r3, #20]
  408206:	62bb      	str	r3, [r7, #40]	; 0x28
            zprintf(128, "img_x+: %04d,%04d @%p\n", x, y, p);
  408208:	4b3a      	ldr	r3, [pc, #232]	; (4082f4 <zbar_scan_image+0x268>)
  40820a:	681b      	ldr	r3, [r3, #0]
  40820c:	2b7f      	cmp	r3, #127	; 0x7f
  40820e:	dd0c      	ble.n	40822a <zbar_scan_image+0x19e>
  408210:	4b39      	ldr	r3, [pc, #228]	; (4082f8 <zbar_scan_image+0x26c>)
  408212:	681b      	ldr	r3, [r3, #0]
  408214:	68da      	ldr	r2, [r3, #12]
  408216:	6f3b      	ldr	r3, [r7, #112]	; 0x70
  408218:	9300      	str	r3, [sp, #0]
  40821a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  40821c:	9301      	str	r3, [sp, #4]
  40821e:	4610      	mov	r0, r2
  408220:	4936      	ldr	r1, [pc, #216]	; (4082fc <zbar_scan_image+0x270>)
  408222:	4a2e      	ldr	r2, [pc, #184]	; (4082dc <zbar_scan_image+0x250>)
  408224:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  408226:	4c36      	ldr	r4, [pc, #216]	; (408300 <zbar_scan_image+0x274>)
  408228:	47a0      	blx	r4
            //svg_path_start("vedge", 1. / 32, 0, y + 0.5);
            iscn->dx = iscn->du = 1;
  40822a:	687b      	ldr	r3, [r7, #4]
  40822c:	2201      	movs	r2, #1
  40822e:	621a      	str	r2, [r3, #32]
  408230:	687b      	ldr	r3, [r7, #4]
  408232:	6a1a      	ldr	r2, [r3, #32]
  408234:	687b      	ldr	r3, [r7, #4]
  408236:	619a      	str	r2, [r3, #24]
            iscn->umin = cx0;
  408238:	687b      	ldr	r3, [r7, #4]
  40823a:	6aba      	ldr	r2, [r7, #40]	; 0x28
  40823c:	625a      	str	r2, [r3, #36]	; 0x24
            while(x < cx1) {
  40823e:	e00f      	b.n	408260 <zbar_scan_image+0x1d4>
                uint8_t d = *p;
  408240:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  408242:	781b      	ldrb	r3, [r3, #0]
  408244:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
                movedelta(1, 0);
  408248:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  40824a:	3301      	adds	r3, #1
  40824c:	677b      	str	r3, [r7, #116]	; 0x74
  40824e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  408250:	3301      	adds	r3, #1
  408252:	67bb      	str	r3, [r7, #120]	; 0x78
                zbar_scan_y(scn, d);
  408254:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  408258:	6c78      	ldr	r0, [r7, #68]	; 0x44
  40825a:	4619      	mov	r1, r3
  40825c:	4b29      	ldr	r3, [pc, #164]	; (408304 <zbar_scan_image+0x278>)
  40825e:	4798      	blx	r3
            int cx0 = img->crop_x;;
            zprintf(128, "img_x+: %04d,%04d @%p\n", x, y, p);
            //svg_path_start("vedge", 1. / 32, 0, y + 0.5);
            iscn->dx = iscn->du = 1;
            iscn->umin = cx0;
            while(x < cx1) {
  408260:	6f7a      	ldr	r2, [r7, #116]	; 0x74
  408262:	6bbb      	ldr	r3, [r7, #56]	; 0x38
  408264:	429a      	cmp	r2, r3
  408266:	d3eb      	bcc.n	408240 <zbar_scan_image+0x1b4>
                uint8_t d = *p;
                movedelta(1, 0);
                zbar_scan_y(scn, d);
            }
            ASSERT_POS;
  408268:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  40826a:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  40826c:	fb02 f303 	mul.w	r3, r2, r3
  408270:	461a      	mov	r2, r3
  408272:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  408274:	4413      	add	r3, r2
  408276:	6b3a      	ldr	r2, [r7, #48]	; 0x30
  408278:	441a      	add	r2, r3
  40827a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  40827c:	429a      	cmp	r2, r3
  40827e:	d006      	beq.n	40828e <zbar_scan_image+0x202>
  408280:	4815      	ldr	r0, [pc, #84]	; (4082d8 <zbar_scan_image+0x24c>)
  408282:	f240 21d1 	movw	r1, #721	; 0x2d1
  408286:	4a15      	ldr	r2, [pc, #84]	; (4082dc <zbar_scan_image+0x250>)
  408288:	4b1f      	ldr	r3, [pc, #124]	; (408308 <zbar_scan_image+0x27c>)
  40828a:	4c16      	ldr	r4, [pc, #88]	; (4082e4 <zbar_scan_image+0x258>)
  40828c:	47a0      	blx	r4
            quiet_border(iscn);
  40828e:	6878      	ldr	r0, [r7, #4]
  408290:	4b1e      	ldr	r3, [pc, #120]	; (40830c <zbar_scan_image+0x280>)
  408292:	4798      	blx	r3
            //svg_path_end();

            movedelta(-1, density);
  408294:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  408296:	3b01      	subs	r3, #1
  408298:	677b      	str	r3, [r7, #116]	; 0x74
  40829a:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  40829c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  40829e:	4413      	add	r3, r2
  4082a0:	673b      	str	r3, [r7, #112]	; 0x70
  4082a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4082a4:	6c3a      	ldr	r2, [r7, #64]	; 0x40
  4082a6:	fb02 f303 	mul.w	r3, r2, r3
  4082aa:	3b01      	subs	r3, #1
  4082ac:	6fba      	ldr	r2, [r7, #120]	; 0x78
  4082ae:	4413      	add	r3, r2
  4082b0:	67bb      	str	r3, [r7, #120]	; 0x78
            iscn->v = y;
  4082b2:	687b      	ldr	r3, [r7, #4]
  4082b4:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  4082b6:	629a      	str	r2, [r3, #40]	; 0x28
            if(y >= cy1)
  4082b8:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  4082ba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
  4082bc:	429a      	cmp	r2, r3
  4082be:	d327      	bcc.n	408310 <zbar_scan_image+0x284>
                break;
  4082c0:	e084      	b.n	4083cc <zbar_scan_image+0x340>
  4082c2:	bf00      	nop
  4082c4:	30303859 	.word	0x30303859
  4082c8:	59455247 	.word	0x59455247
  4082cc:	004074e9 	.word	0x004074e9
  4082d0:	00409221 	.word	0x00409221
  4082d4:	0040929d 	.word	0x0040929d
  4082d8:	0043c838 	.word	0x0043c838
  4082dc:	0043cb44 	.word	0x0043cb44
  4082e0:	0043ca08 	.word	0x0043ca08
  4082e4:	00433d55 	.word	0x00433d55
  4082e8:	0043ca14 	.word	0x0043ca14
  4082ec:	00408b49 	.word	0x00408b49
  4082f0:	0043ca20 	.word	0x0043ca20
  4082f4:	20001bd4 	.word	0x20001bd4
  4082f8:	200012d0 	.word	0x200012d0
  4082fc:	0043ca2c 	.word	0x0043ca2c
  408300:	0043413d 	.word	0x0043413d
  408304:	00408bb5 	.word	0x00408bb5
  408308:	0043ca48 	.word	0x0043ca48
  40830c:	0040805d 	.word	0x0040805d

            zprintf(128, "img_x-: %04d,%04d @%p\n", x, y, p);
  408310:	4b92      	ldr	r3, [pc, #584]	; (40855c <zbar_scan_image+0x4d0>)
  408312:	681b      	ldr	r3, [r3, #0]
  408314:	2b7f      	cmp	r3, #127	; 0x7f
  408316:	dd0c      	ble.n	408332 <zbar_scan_image+0x2a6>
  408318:	4b91      	ldr	r3, [pc, #580]	; (408560 <zbar_scan_image+0x4d4>)
  40831a:	681b      	ldr	r3, [r3, #0]
  40831c:	68da      	ldr	r2, [r3, #12]
  40831e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
  408320:	9300      	str	r3, [sp, #0]
  408322:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  408324:	9301      	str	r3, [sp, #4]
  408326:	4610      	mov	r0, r2
  408328:	498e      	ldr	r1, [pc, #568]	; (408564 <zbar_scan_image+0x4d8>)
  40832a:	4a8f      	ldr	r2, [pc, #572]	; (408568 <zbar_scan_image+0x4dc>)
  40832c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  40832e:	4c8f      	ldr	r4, [pc, #572]	; (40856c <zbar_scan_image+0x4e0>)
  408330:	47a0      	blx	r4
            //svg_path_start("vedge", -1. / 32, w, y + 0.5);
            iscn->dx = iscn->du = -1;
  408332:	687b      	ldr	r3, [r7, #4]
  408334:	f04f 32ff 	mov.w	r2, #4294967295
  408338:	621a      	str	r2, [r3, #32]
  40833a:	687b      	ldr	r3, [r7, #4]
  40833c:	6a1a      	ldr	r2, [r3, #32]
  40833e:	687b      	ldr	r3, [r7, #4]
  408340:	619a      	str	r2, [r3, #24]
            iscn->umin = cx1;
  408342:	6bba      	ldr	r2, [r7, #56]	; 0x38
  408344:	687b      	ldr	r3, [r7, #4]
  408346:	625a      	str	r2, [r3, #36]	; 0x24
            while(x >= cx0) {
  408348:	e00f      	b.n	40836a <zbar_scan_image+0x2de>
                uint8_t d = *p;
  40834a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  40834c:	781b      	ldrb	r3, [r3, #0]
  40834e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
                movedelta(-1, 0);
  408352:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  408354:	3b01      	subs	r3, #1
  408356:	677b      	str	r3, [r7, #116]	; 0x74
  408358:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  40835a:	3b01      	subs	r3, #1
  40835c:	67bb      	str	r3, [r7, #120]	; 0x78
                zbar_scan_y(scn, d);
  40835e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  408362:	6c78      	ldr	r0, [r7, #68]	; 0x44
  408364:	4619      	mov	r1, r3
  408366:	4b82      	ldr	r3, [pc, #520]	; (408570 <zbar_scan_image+0x4e4>)
  408368:	4798      	blx	r3

            zprintf(128, "img_x-: %04d,%04d @%p\n", x, y, p);
            //svg_path_start("vedge", -1. / 32, w, y + 0.5);
            iscn->dx = iscn->du = -1;
            iscn->umin = cx1;
            while(x >= cx0) {
  40836a:	6f7a      	ldr	r2, [r7, #116]	; 0x74
  40836c:	6abb      	ldr	r3, [r7, #40]	; 0x28
  40836e:	429a      	cmp	r2, r3
  408370:	daeb      	bge.n	40834a <zbar_scan_image+0x2be>
                uint8_t d = *p;
                movedelta(-1, 0);
                zbar_scan_y(scn, d);
            }
            ASSERT_POS;
  408372:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  408374:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  408376:	fb02 f303 	mul.w	r3, r2, r3
  40837a:	461a      	mov	r2, r3
  40837c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  40837e:	4413      	add	r3, r2
  408380:	6b3a      	ldr	r2, [r7, #48]	; 0x30
  408382:	441a      	add	r2, r3
  408384:	6fbb      	ldr	r3, [r7, #120]	; 0x78
  408386:	429a      	cmp	r2, r3
  408388:	d006      	beq.n	408398 <zbar_scan_image+0x30c>
  40838a:	487a      	ldr	r0, [pc, #488]	; (408574 <zbar_scan_image+0x4e8>)
  40838c:	f240 21e3 	movw	r1, #739	; 0x2e3
  408390:	4a75      	ldr	r2, [pc, #468]	; (408568 <zbar_scan_image+0x4dc>)
  408392:	4b79      	ldr	r3, [pc, #484]	; (408578 <zbar_scan_image+0x4ec>)
  408394:	4c79      	ldr	r4, [pc, #484]	; (40857c <zbar_scan_image+0x4f0>)
  408396:	47a0      	blx	r4
            quiet_border(iscn);
  408398:	6878      	ldr	r0, [r7, #4]
  40839a:	4b79      	ldr	r3, [pc, #484]	; (408580 <zbar_scan_image+0x4f4>)
  40839c:	4798      	blx	r3
            //svg_path_end();

            movedelta(1, density);
  40839e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
  4083a0:	3301      	adds	r3, #1
  4083a2:	677b      	str	r3, [r7, #116]	; 0x74
  4083a4:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  4083a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4083a8:	4413      	add	r3, r2
  4083aa:	673b      	str	r3, [r7, #112]	; 0x70
  4083ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4083ae:	6c3a      	ldr	r2, [r7, #64]	; 0x40
  4083b0:	fb02 f303 	mul.w	r3, r2, r3
  4083b4:	3301      	adds	r3, #1
  4083b6:	6fba      	ldr	r2, [r7, #120]	; 0x78
  4083b8:	4413      	add	r3, r2
  4083ba:	67bb      	str	r3, [r7, #120]	; 0x78
            iscn->v = y;
  4083bc:	687b      	ldr	r3, [r7, #4]
  4083be:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  4083c0:	629a      	str	r2, [r3, #40]	; 0x28
        iscn->dy = 0;

        movedelta(img->crop_x, border);
        iscn->v = y;

        while(y < cy1) {
  4083c2:	6f3a      	ldr	r2, [r7, #112]	; 0x70
  4083c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
  4083c6:	429a      	cmp	r2, r3
  4083c8:	f4ff af1b 	bcc.w	408202 <zbar_scan_image+0x176>
            movedelta(1, density);
            iscn->v = y;
        }
        //svg_group_end();
    }
    iscn->dx = 0;
  4083cc:	687b      	ldr	r3, [r7, #4]
  4083ce:	2200      	movs	r2, #0
  4083d0:	619a      	str	r2, [r3, #24]

    density = CFG(iscn, ZBAR_CFG_X_DENSITY);
  4083d2:	687b      	ldr	r3, [r7, #4]
  4083d4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4083d6:	62fb      	str	r3, [r7, #44]	; 0x2c
    if(density > 0) {
  4083d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4083da:	2b00      	cmp	r3, #0
  4083dc:	f340 8117 	ble.w	40860e <zbar_scan_image+0x582>
        const uint8_t *p = data;
  4083e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
  4083e2:	66bb      	str	r3, [r7, #104]	; 0x68
        int x = 0, y = 0;
  4083e4:	2300      	movs	r3, #0
  4083e6:	667b      	str	r3, [r7, #100]	; 0x64
  4083e8:	2300      	movs	r3, #0
  4083ea:	663b      	str	r3, [r7, #96]	; 0x60

        int border = (((img->crop_w - 1) % density) + 1) / 2;
  4083ec:	683b      	ldr	r3, [r7, #0]
  4083ee:	69db      	ldr	r3, [r3, #28]
  4083f0:	3b01      	subs	r3, #1
  4083f2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
  4083f4:	fbb3 f1f2 	udiv	r1, r3, r2
  4083f8:	fb02 f201 	mul.w	r2, r2, r1
  4083fc:	1a9b      	subs	r3, r3, r2
  4083fe:	3301      	adds	r3, #1
  408400:	085b      	lsrs	r3, r3, #1
  408402:	65fb      	str	r3, [r7, #92]	; 0x5c
        if(border > img->crop_w / 2)
  408404:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
  408406:	683b      	ldr	r3, [r7, #0]
  408408:	69db      	ldr	r3, [r3, #28]
  40840a:	085b      	lsrs	r3, r3, #1
  40840c:	429a      	cmp	r2, r3
  40840e:	d903      	bls.n	408418 <zbar_scan_image+0x38c>
            border = img->crop_w / 2;
  408410:	683b      	ldr	r3, [r7, #0]
  408412:	69db      	ldr	r3, [r3, #28]
  408414:	085b      	lsrs	r3, r3, #1
  408416:	65fb      	str	r3, [r7, #92]	; 0x5c
        border += img->crop_x;
  408418:	683b      	ldr	r3, [r7, #0]
  40841a:	695a      	ldr	r2, [r3, #20]
  40841c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
  40841e:	4413      	add	r3, r2
  408420:	65fb      	str	r3, [r7, #92]	; 0x5c
        assert(border <= w);
  408422:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
  408424:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  408426:	429a      	cmp	r2, r3
  408428:	d906      	bls.n	408438 <zbar_scan_image+0x3ac>
  40842a:	4852      	ldr	r0, [pc, #328]	; (408574 <zbar_scan_image+0x4e8>)
  40842c:	f240 21f7 	movw	r1, #759	; 0x2f7
  408430:	4a4d      	ldr	r2, [pc, #308]	; (408568 <zbar_scan_image+0x4dc>)
  408432:	4b54      	ldr	r3, [pc, #336]	; (408584 <zbar_scan_image+0x4f8>)
  408434:	4c51      	ldr	r4, [pc, #324]	; (40857c <zbar_scan_image+0x4f0>)
  408436:	47a0      	blx	r4
        //svg_group_start("scanner", 90, 1, -1, 0, 0);
        movedelta(border, img->crop_y);
  408438:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  40843a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
  40843c:	4413      	add	r3, r2
  40843e:	667b      	str	r3, [r7, #100]	; 0x64
  408440:	683b      	ldr	r3, [r7, #0]
  408442:	699a      	ldr	r2, [r3, #24]
  408444:	6e3b      	ldr	r3, [r7, #96]	; 0x60
  408446:	4413      	add	r3, r2
  408448:	663b      	str	r3, [r7, #96]	; 0x60
  40844a:	683b      	ldr	r3, [r7, #0]
  40844c:	699b      	ldr	r3, [r3, #24]
  40844e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
  408450:	fb02 f203 	mul.w	r2, r2, r3
  408454:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
  408456:	4413      	add	r3, r2
  408458:	6eba      	ldr	r2, [r7, #104]	; 0x68
  40845a:	4413      	add	r3, r2
  40845c:	66bb      	str	r3, [r7, #104]	; 0x68
        iscn->v = x;
  40845e:	687b      	ldr	r3, [r7, #4]
  408460:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  408462:	629a      	str	r2, [r3, #40]	; 0x28

        while(x < cx1) {
  408464:	e0ce      	b.n	408604 <zbar_scan_image+0x578>
            int cy0 = img->crop_y;
  408466:	683b      	ldr	r3, [r7, #0]
  408468:	699b      	ldr	r3, [r3, #24]
  40846a:	623b      	str	r3, [r7, #32]
            zprintf(128, "img_y+: %04d,%04d @%p\n", x, y, p);
  40846c:	4b3b      	ldr	r3, [pc, #236]	; (40855c <zbar_scan_image+0x4d0>)
  40846e:	681b      	ldr	r3, [r3, #0]
  408470:	2b7f      	cmp	r3, #127	; 0x7f
  408472:	dd0c      	ble.n	40848e <zbar_scan_image+0x402>
  408474:	4b3a      	ldr	r3, [pc, #232]	; (408560 <zbar_scan_image+0x4d4>)
  408476:	681b      	ldr	r3, [r3, #0]
  408478:	68da      	ldr	r2, [r3, #12]
  40847a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
  40847c:	9300      	str	r3, [sp, #0]
  40847e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
  408480:	9301      	str	r3, [sp, #4]
  408482:	4610      	mov	r0, r2
  408484:	4940      	ldr	r1, [pc, #256]	; (408588 <zbar_scan_image+0x4fc>)
  408486:	4a38      	ldr	r2, [pc, #224]	; (408568 <zbar_scan_image+0x4dc>)
  408488:	6e7b      	ldr	r3, [r7, #100]	; 0x64
  40848a:	4c38      	ldr	r4, [pc, #224]	; (40856c <zbar_scan_image+0x4e0>)
  40848c:	47a0      	blx	r4
            //svg_path_start("vedge", 1. / 32, 0, x + 0.5);
            iscn->dy = iscn->du = 1;
  40848e:	687b      	ldr	r3, [r7, #4]
  408490:	2201      	movs	r2, #1
  408492:	621a      	str	r2, [r3, #32]
  408494:	687b      	ldr	r3, [r7, #4]
  408496:	6a1a      	ldr	r2, [r3, #32]
  408498:	687b      	ldr	r3, [r7, #4]
  40849a:	61da      	str	r2, [r3, #28]
            iscn->umin = cy0;
  40849c:	687b      	ldr	r3, [r7, #4]
  40849e:	6a3a      	ldr	r2, [r7, #32]
  4084a0:	625a      	str	r2, [r3, #36]	; 0x24
            while(y < cy1) {
  4084a2:	e00e      	b.n	4084c2 <zbar_scan_image+0x436>
                uint8_t d = *p;
  4084a4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
  4084a6:	781b      	ldrb	r3, [r3, #0]
  4084a8:	77fb      	strb	r3, [r7, #31]
                movedelta(0, 1);
  4084aa:	6e3b      	ldr	r3, [r7, #96]	; 0x60
  4084ac:	3301      	adds	r3, #1
  4084ae:	663b      	str	r3, [r7, #96]	; 0x60
  4084b0:	6eba      	ldr	r2, [r7, #104]	; 0x68
  4084b2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  4084b4:	4413      	add	r3, r2
  4084b6:	66bb      	str	r3, [r7, #104]	; 0x68
                zbar_scan_y(scn, d);
  4084b8:	7ffb      	ldrb	r3, [r7, #31]
  4084ba:	6c78      	ldr	r0, [r7, #68]	; 0x44
  4084bc:	4619      	mov	r1, r3
  4084be:	4b2c      	ldr	r3, [pc, #176]	; (408570 <zbar_scan_image+0x4e4>)
  4084c0:	4798      	blx	r3
            int cy0 = img->crop_y;
            zprintf(128, "img_y+: %04d,%04d @%p\n", x, y, p);
            //svg_path_start("vedge", 1. / 32, 0, x + 0.5);
            iscn->dy = iscn->du = 1;
            iscn->umin = cy0;
            while(y < cy1) {
  4084c2:	6e3a      	ldr	r2, [r7, #96]	; 0x60
  4084c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
  4084c6:	429a      	cmp	r2, r3
  4084c8:	d3ec      	bcc.n	4084a4 <zbar_scan_image+0x418>
                uint8_t d = *p;
                movedelta(0, 1);
                zbar_scan_y(scn, d);
            }
            ASSERT_POS;
  4084ca:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  4084cc:	6e3a      	ldr	r2, [r7, #96]	; 0x60
  4084ce:	fb02 f303 	mul.w	r3, r2, r3
  4084d2:	461a      	mov	r2, r3
  4084d4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
  4084d6:	4413      	add	r3, r2
  4084d8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
  4084da:	441a      	add	r2, r3
  4084dc:	6ebb      	ldr	r3, [r7, #104]	; 0x68
  4084de:	429a      	cmp	r2, r3
  4084e0:	d006      	beq.n	4084f0 <zbar_scan_image+0x464>
  4084e2:	4824      	ldr	r0, [pc, #144]	; (408574 <zbar_scan_image+0x4e8>)
  4084e4:	f240 3107 	movw	r1, #775	; 0x307
  4084e8:	4a1f      	ldr	r2, [pc, #124]	; (408568 <zbar_scan_image+0x4dc>)
  4084ea:	4b23      	ldr	r3, [pc, #140]	; (408578 <zbar_scan_image+0x4ec>)
  4084ec:	4c23      	ldr	r4, [pc, #140]	; (40857c <zbar_scan_image+0x4f0>)
  4084ee:	47a0      	blx	r4
            quiet_border(iscn);
  4084f0:	6878      	ldr	r0, [r7, #4]
  4084f2:	4b23      	ldr	r3, [pc, #140]	; (408580 <zbar_scan_image+0x4f4>)
  4084f4:	4798      	blx	r3
            //svg_path_end();

            movedelta(density, -1);
  4084f6:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  4084f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4084fa:	4413      	add	r3, r2
  4084fc:	667b      	str	r3, [r7, #100]	; 0x64
  4084fe:	6e3b      	ldr	r3, [r7, #96]	; 0x60
  408500:	3b01      	subs	r3, #1
  408502:	663b      	str	r3, [r7, #96]	; 0x60
  408504:	6afa      	ldr	r2, [r7, #44]	; 0x2c
  408506:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  408508:	1ad3      	subs	r3, r2, r3
  40850a:	6eba      	ldr	r2, [r7, #104]	; 0x68
  40850c:	4413      	add	r3, r2
  40850e:	66bb      	str	r3, [r7, #104]	; 0x68
            iscn->v = x;
  408510:	687b      	ldr	r3, [r7, #4]
  408512:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  408514:	629a      	str	r2, [r3, #40]	; 0x28
            if(x >= cx1)
  408516:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  408518:	6bbb      	ldr	r3, [r7, #56]	; 0x38
  40851a:	429a      	cmp	r2, r3
  40851c:	d300      	bcc.n	408520 <zbar_scan_image+0x494>
                break;
  40851e:	e076      	b.n	40860e <zbar_scan_image+0x582>

            zprintf(128, "img_y-: %04d,%04d @%p\n", x, y, p);
  408520:	4b0e      	ldr	r3, [pc, #56]	; (40855c <zbar_scan_image+0x4d0>)
  408522:	681b      	ldr	r3, [r3, #0]
  408524:	2b7f      	cmp	r3, #127	; 0x7f
  408526:	dd0c      	ble.n	408542 <zbar_scan_image+0x4b6>
  408528:	4b0d      	ldr	r3, [pc, #52]	; (408560 <zbar_scan_image+0x4d4>)
  40852a:	681b      	ldr	r3, [r3, #0]
  40852c:	68da      	ldr	r2, [r3, #12]
  40852e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
  408530:	9300      	str	r3, [sp, #0]
  408532:	6ebb      	ldr	r3, [r7, #104]	; 0x68
  408534:	9301      	str	r3, [sp, #4]
  408536:	4610      	mov	r0, r2
  408538:	4914      	ldr	r1, [pc, #80]	; (40858c <zbar_scan_image+0x500>)
  40853a:	4a0b      	ldr	r2, [pc, #44]	; (408568 <zbar_scan_image+0x4dc>)
  40853c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
  40853e:	4c0b      	ldr	r4, [pc, #44]	; (40856c <zbar_scan_image+0x4e0>)
  408540:	47a0      	blx	r4
            //svg_path_start("vedge", -1. / 32, h, x + 0.5);
            iscn->dy = iscn->du = -1;
  408542:	687b      	ldr	r3, [r7, #4]
  408544:	f04f 32ff 	mov.w	r2, #4294967295
  408548:	621a      	str	r2, [r3, #32]
  40854a:	687b      	ldr	r3, [r7, #4]
  40854c:	6a1a      	ldr	r2, [r3, #32]
  40854e:	687b      	ldr	r3, [r7, #4]
  408550:	61da      	str	r2, [r3, #28]
            iscn->umin = cy1;
  408552:	6b7a      	ldr	r2, [r7, #52]	; 0x34
  408554:	687b      	ldr	r3, [r7, #4]
  408556:	625a      	str	r2, [r3, #36]	; 0x24
            while(y >= cy0) {
  408558:	e02a      	b.n	4085b0 <zbar_scan_image+0x524>
  40855a:	bf00      	nop
  40855c:	20001bd4 	.word	0x20001bd4
  408560:	200012d0 	.word	0x200012d0
  408564:	0043ca68 	.word	0x0043ca68
  408568:	0043cb44 	.word	0x0043cb44
  40856c:	0043413d 	.word	0x0043413d
  408570:	00408bb5 	.word	0x00408bb5
  408574:	0043c838 	.word	0x0043c838
  408578:	0043ca48 	.word	0x0043ca48
  40857c:	00433d55 	.word	0x00433d55
  408580:	0040805d 	.word	0x0040805d
  408584:	0043ca84 	.word	0x0043ca84
  408588:	0043ca90 	.word	0x0043ca90
  40858c:	0043caac 	.word	0x0043caac
                uint8_t d = *p;
  408590:	6ebb      	ldr	r3, [r7, #104]	; 0x68
  408592:	781b      	ldrb	r3, [r3, #0]
  408594:	77bb      	strb	r3, [r7, #30]
                movedelta(0, -1);
  408596:	6e3b      	ldr	r3, [r7, #96]	; 0x60
  408598:	3b01      	subs	r3, #1
  40859a:	663b      	str	r3, [r7, #96]	; 0x60
  40859c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  40859e:	425b      	negs	r3, r3
  4085a0:	6eba      	ldr	r2, [r7, #104]	; 0x68
  4085a2:	4413      	add	r3, r2
  4085a4:	66bb      	str	r3, [r7, #104]	; 0x68
                zbar_scan_y(scn, d);
  4085a6:	7fbb      	ldrb	r3, [r7, #30]
  4085a8:	6c78      	ldr	r0, [r7, #68]	; 0x44
  4085aa:	4619      	mov	r1, r3
  4085ac:	4b86      	ldr	r3, [pc, #536]	; (4087c8 <zbar_scan_image+0x73c>)
  4085ae:	4798      	blx	r3

            zprintf(128, "img_y-: %04d,%04d @%p\n", x, y, p);
            //svg_path_start("vedge", -1. / 32, h, x + 0.5);
            iscn->dy = iscn->du = -1;
            iscn->umin = cy1;
            while(y >= cy0) {
  4085b0:	6e3a      	ldr	r2, [r7, #96]	; 0x60
  4085b2:	6a3b      	ldr	r3, [r7, #32]
  4085b4:	429a      	cmp	r2, r3
  4085b6:	daeb      	bge.n	408590 <zbar_scan_image+0x504>
                uint8_t d = *p;
                movedelta(0, -1);
                zbar_scan_y(scn, d);
            }
            ASSERT_POS;
  4085b8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  4085ba:	6e3a      	ldr	r2, [r7, #96]	; 0x60
  4085bc:	fb02 f303 	mul.w	r3, r2, r3
  4085c0:	461a      	mov	r2, r3
  4085c2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
  4085c4:	4413      	add	r3, r2
  4085c6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
  4085c8:	441a      	add	r2, r3
  4085ca:	6ebb      	ldr	r3, [r7, #104]	; 0x68
  4085cc:	429a      	cmp	r2, r3
  4085ce:	d006      	beq.n	4085de <zbar_scan_image+0x552>
  4085d0:	487e      	ldr	r0, [pc, #504]	; (4087cc <zbar_scan_image+0x740>)
  4085d2:	f240 3119 	movw	r1, #793	; 0x319
  4085d6:	4a7e      	ldr	r2, [pc, #504]	; (4087d0 <zbar_scan_image+0x744>)
  4085d8:	4b7e      	ldr	r3, [pc, #504]	; (4087d4 <zbar_scan_image+0x748>)
  4085da:	4c7f      	ldr	r4, [pc, #508]	; (4087d8 <zbar_scan_image+0x74c>)
  4085dc:	47a0      	blx	r4
            quiet_border(iscn);
  4085de:	6878      	ldr	r0, [r7, #4]
  4085e0:	4b7e      	ldr	r3, [pc, #504]	; (4087dc <zbar_scan_image+0x750>)
  4085e2:	4798      	blx	r3
            //svg_path_end();

            movedelta(density, 1);
  4085e4:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  4085e6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4085e8:	4413      	add	r3, r2
  4085ea:	667b      	str	r3, [r7, #100]	; 0x64
  4085ec:	6e3b      	ldr	r3, [r7, #96]	; 0x60
  4085ee:	3301      	adds	r3, #1
  4085f0:	663b      	str	r3, [r7, #96]	; 0x60
  4085f2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
  4085f4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
  4085f6:	4413      	add	r3, r2
  4085f8:	6eba      	ldr	r2, [r7, #104]	; 0x68
  4085fa:	4413      	add	r3, r2
  4085fc:	66bb      	str	r3, [r7, #104]	; 0x68
            iscn->v = x;
  4085fe:	687b      	ldr	r3, [r7, #4]
  408600:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  408602:	629a      	str	r2, [r3, #40]	; 0x28
        assert(border <= w);
        //svg_group_start("scanner", 90, 1, -1, 0, 0);
        movedelta(border, img->crop_y);
        iscn->v = x;

        while(x < cx1) {
  408604:	6e7a      	ldr	r2, [r7, #100]	; 0x64
  408606:	6bbb      	ldr	r3, [r7, #56]	; 0x38
  408608:	429a      	cmp	r2, r3
  40860a:	f4ff af2c 	bcc.w	408466 <zbar_scan_image+0x3da>
            movedelta(density, 1);
            iscn->v = x;
        }
        //svg_group_end();
    }
    iscn->dy = 0;
  40860e:	687b      	ldr	r3, [r7, #4]
  408610:	2200      	movs	r2, #0
  408612:	61da      	str	r2, [r3, #28]
    iscn->img = NULL;
  408614:	687b      	ldr	r3, [r7, #4]
  408616:	2200      	movs	r2, #0
  408618:	615a      	str	r2, [r3, #20]
    _zbar_qr_decode(iscn->qr, iscn, img);
#endif

    /* FIXME tmp hack to filter bad EAN results */
    /* FIXME tmp hack to merge simple case EAN add-ons */
    char filter = (!iscn->enable_cache &&
  40861a:	687b      	ldr	r3, [r7, #4]
  40861c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
  40861e:	2b00      	cmp	r3, #0
  408620:	d108      	bne.n	408634 <zbar_scan_image+0x5a8>
  408622:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  408624:	2b01      	cmp	r3, #1
  408626:	d003      	beq.n	408630 <zbar_scan_image+0x5a4>
                   (density == 1 || CFG(iscn, ZBAR_CFG_Y_DENSITY) == 1));
  408628:	687b      	ldr	r3, [r7, #4]
  40862a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
  40862c:	2b01      	cmp	r3, #1
  40862e:	d101      	bne.n	408634 <zbar_scan_image+0x5a8>
    _zbar_qr_decode(iscn->qr, iscn, img);
#endif

    /* FIXME tmp hack to filter bad EAN results */
    /* FIXME tmp hack to merge simple case EAN add-ons */
    char filter = (!iscn->enable_cache &&
  408630:	2301      	movs	r3, #1
  408632:	e000      	b.n	408636 <zbar_scan_image+0x5aa>
  408634:	2300      	movs	r3, #0
  408636:	777b      	strb	r3, [r7, #29]
                   (density == 1 || CFG(iscn, ZBAR_CFG_Y_DENSITY) == 1));
    int nean = 0, naddon = 0;
  408638:	2300      	movs	r3, #0
  40863a:	65bb      	str	r3, [r7, #88]	; 0x58
  40863c:	2300      	movs	r3, #0
  40863e:	657b      	str	r3, [r7, #84]	; 0x54
    if(syms->nsyms) {
  408640:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  408642:	685b      	ldr	r3, [r3, #4]
  408644:	2b00      	cmp	r3, #0
  408646:	f000 8116 	beq.w	408876 <zbar_scan_image+0x7ea>
        zbar_symbol_t **symp;
        for(symp = &syms->head; *symp; ) {
  40864a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  40864c:	3308      	adds	r3, #8
  40864e:	653b      	str	r3, [r7, #80]	; 0x50
  408650:	e065      	b.n	40871e <zbar_scan_image+0x692>
            zbar_symbol_t *sym = *symp;
  408652:	6d3b      	ldr	r3, [r7, #80]	; 0x50
  408654:	681b      	ldr	r3, [r3, #0]
  408656:	61bb      	str	r3, [r7, #24]
            if(sym->cache_count <= 0 &&
  408658:	69bb      	ldr	r3, [r7, #24]
  40865a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  40865c:	2b00      	cmp	r3, #0
  40865e:	dc5b      	bgt.n	408718 <zbar_scan_image+0x68c>
               ((sym->type < ZBAR_COMPOSITE && sym->type > ZBAR_PARTIAL) ||
  408660:	69bb      	ldr	r3, [r7, #24]
  408662:	881b      	ldrh	r3, [r3, #0]
    int nean = 0, naddon = 0;
    if(syms->nsyms) {
        zbar_symbol_t **symp;
        for(symp = &syms->head; *symp; ) {
            zbar_symbol_t *sym = *symp;
            if(sym->cache_count <= 0 &&
  408664:	2b0e      	cmp	r3, #14
  408666:	d803      	bhi.n	408670 <zbar_scan_image+0x5e4>
               ((sym->type < ZBAR_COMPOSITE && sym->type > ZBAR_PARTIAL) ||
  408668:	69bb      	ldr	r3, [r7, #24]
  40866a:	881b      	ldrh	r3, [r3, #0]
  40866c:	2b01      	cmp	r3, #1
  40866e:	d80b      	bhi.n	408688 <zbar_scan_image+0x5fc>
                sym->type == ZBAR_DATABAR ||
  408670:	69bb      	ldr	r3, [r7, #24]
  408672:	881b      	ldrh	r3, [r3, #0]
    if(syms->nsyms) {
        zbar_symbol_t **symp;
        for(symp = &syms->head; *symp; ) {
            zbar_symbol_t *sym = *symp;
            if(sym->cache_count <= 0 &&
               ((sym->type < ZBAR_COMPOSITE && sym->type > ZBAR_PARTIAL) ||
  408674:	2b22      	cmp	r3, #34	; 0x22
  408676:	d007      	beq.n	408688 <zbar_scan_image+0x5fc>
                sym->type == ZBAR_DATABAR ||
                sym->type == ZBAR_DATABAR_EXP ||
  408678:	69bb      	ldr	r3, [r7, #24]
  40867a:	881b      	ldrh	r3, [r3, #0]
        zbar_symbol_t **symp;
        for(symp = &syms->head; *symp; ) {
            zbar_symbol_t *sym = *symp;
            if(sym->cache_count <= 0 &&
               ((sym->type < ZBAR_COMPOSITE && sym->type > ZBAR_PARTIAL) ||
                sym->type == ZBAR_DATABAR ||
  40867c:	2b23      	cmp	r3, #35	; 0x23
  40867e:	d003      	beq.n	408688 <zbar_scan_image+0x5fc>
                sym->type == ZBAR_DATABAR_EXP ||
                sym->type == ZBAR_CODABAR))
  408680:	69bb      	ldr	r3, [r7, #24]
  408682:	881b      	ldrh	r3, [r3, #0]
        for(symp = &syms->head; *symp; ) {
            zbar_symbol_t *sym = *symp;
            if(sym->cache_count <= 0 &&
               ((sym->type < ZBAR_COMPOSITE && sym->type > ZBAR_PARTIAL) ||
                sym->type == ZBAR_DATABAR ||
                sym->type == ZBAR_DATABAR_EXP ||
  408684:	2b26      	cmp	r3, #38	; 0x26
  408686:	d147      	bne.n	408718 <zbar_scan_image+0x68c>
                sym->type == ZBAR_CODABAR))
            {
	        if((sym->type == ZBAR_CODABAR || filter) && sym->quality < 4) {
  408688:	69bb      	ldr	r3, [r7, #24]
  40868a:	881b      	ldrh	r3, [r3, #0]
  40868c:	2b26      	cmp	r3, #38	; 0x26
  40868e:	d002      	beq.n	408696 <zbar_scan_image+0x60a>
  408690:	7f7b      	ldrb	r3, [r7, #29]
  408692:	2b00      	cmp	r3, #0
  408694:	d02d      	beq.n	4086f2 <zbar_scan_image+0x666>
  408696:	69bb      	ldr	r3, [r7, #24]
  408698:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  40869a:	2b03      	cmp	r3, #3
  40869c:	dc29      	bgt.n	4086f2 <zbar_scan_image+0x666>
                    if(iscn->enable_cache) {
  40869e:	687b      	ldr	r3, [r7, #4]
  4086a0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
  4086a2:	2b00      	cmp	r3, #0
  4086a4:	d014      	beq.n	4086d0 <zbar_scan_image+0x644>
                        /* revert cache update */
                        zbar_symbol_t *entry = cache_lookup(iscn, sym);
  4086a6:	6878      	ldr	r0, [r7, #4]
  4086a8:	69b9      	ldr	r1, [r7, #24]
  4086aa:	4b4d      	ldr	r3, [pc, #308]	; (4087e0 <zbar_scan_image+0x754>)
  4086ac:	4798      	blx	r3
  4086ae:	6178      	str	r0, [r7, #20]
                        if(entry)
  4086b0:	697b      	ldr	r3, [r7, #20]
  4086b2:	2b00      	cmp	r3, #0
  4086b4:	d005      	beq.n	4086c2 <zbar_scan_image+0x636>
                            entry->cache_count--;
  4086b6:	697b      	ldr	r3, [r7, #20]
  4086b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  4086ba:	1e5a      	subs	r2, r3, #1
  4086bc:	697b      	ldr	r3, [r7, #20]
  4086be:	639a      	str	r2, [r3, #56]	; 0x38
  4086c0:	e006      	b.n	4086d0 <zbar_scan_image+0x644>
                        else
                            assert(0);
  4086c2:	4842      	ldr	r0, [pc, #264]	; (4087cc <zbar_scan_image+0x740>)
  4086c4:	f240 313f 	movw	r1, #831	; 0x33f
  4086c8:	4a41      	ldr	r2, [pc, #260]	; (4087d0 <zbar_scan_image+0x744>)
  4086ca:	4b46      	ldr	r3, [pc, #280]	; (4087e4 <zbar_scan_image+0x758>)
  4086cc:	4c42      	ldr	r4, [pc, #264]	; (4087d8 <zbar_scan_image+0x74c>)
  4086ce:	47a0      	blx	r4
                    }

                    /* recycle */
                    *symp = sym->next;
  4086d0:	69bb      	ldr	r3, [r7, #24]
  4086d2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  4086d4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
  4086d6:	601a      	str	r2, [r3, #0]
                    syms->nsyms--;
  4086d8:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  4086da:	685b      	ldr	r3, [r3, #4]
  4086dc:	1e5a      	subs	r2, r3, #1
  4086de:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  4086e0:	605a      	str	r2, [r3, #4]
                    sym->next = NULL;
  4086e2:	69bb      	ldr	r3, [r7, #24]
  4086e4:	2200      	movs	r2, #0
  4086e6:	62da      	str	r2, [r3, #44]	; 0x2c
                    _zbar_image_scanner_recycle_syms(iscn, sym);
  4086e8:	6878      	ldr	r0, [r7, #4]
  4086ea:	69b9      	ldr	r1, [r7, #24]
  4086ec:	4b3e      	ldr	r3, [pc, #248]	; (4087e8 <zbar_scan_image+0x75c>)
  4086ee:	4798      	blx	r3
                    continue;
  4086f0:	e015      	b.n	40871e <zbar_scan_image+0x692>
                }
                else if(sym->type < ZBAR_COMPOSITE &&
  4086f2:	69bb      	ldr	r3, [r7, #24]
  4086f4:	881b      	ldrh	r3, [r3, #0]
  4086f6:	2b0e      	cmp	r3, #14
  4086f8:	d80e      	bhi.n	408718 <zbar_scan_image+0x68c>
                        sym->type != ZBAR_ISBN10)
  4086fa:	69bb      	ldr	r3, [r7, #24]
  4086fc:	881b      	ldrh	r3, [r3, #0]
                    syms->nsyms--;
                    sym->next = NULL;
                    _zbar_image_scanner_recycle_syms(iscn, sym);
                    continue;
                }
                else if(sym->type < ZBAR_COMPOSITE &&
  4086fe:	2b0a      	cmp	r3, #10
  408700:	d00a      	beq.n	408718 <zbar_scan_image+0x68c>
                        sym->type != ZBAR_ISBN10)
                {
                    if(sym->type > ZBAR_EAN5)
  408702:	69bb      	ldr	r3, [r7, #24]
  408704:	881b      	ldrh	r3, [r3, #0]
  408706:	2b05      	cmp	r3, #5
  408708:	d903      	bls.n	408712 <zbar_scan_image+0x686>
                        nean++;
  40870a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
  40870c:	3301      	adds	r3, #1
  40870e:	65bb      	str	r3, [r7, #88]	; 0x58
  408710:	e002      	b.n	408718 <zbar_scan_image+0x68c>
                    else
                        naddon++;
  408712:	6d7b      	ldr	r3, [r7, #84]	; 0x54
  408714:	3301      	adds	r3, #1
  408716:	657b      	str	r3, [r7, #84]	; 0x54
                }
            }
            symp = &sym->next;
  408718:	69bb      	ldr	r3, [r7, #24]
  40871a:	332c      	adds	r3, #44	; 0x2c
  40871c:	653b      	str	r3, [r7, #80]	; 0x50
    char filter = (!iscn->enable_cache &&
                   (density == 1 || CFG(iscn, ZBAR_CFG_Y_DENSITY) == 1));
    int nean = 0, naddon = 0;
    if(syms->nsyms) {
        zbar_symbol_t **symp;
        for(symp = &syms->head; *symp; ) {
  40871e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
  408720:	681b      	ldr	r3, [r3, #0]
  408722:	2b00      	cmp	r3, #0
  408724:	d195      	bne.n	408652 <zbar_scan_image+0x5c6>
                }
            }
            symp = &sym->next;
        }

        if(nean == 1 && naddon == 1 && iscn->ean_config) {
  408726:	6dbb      	ldr	r3, [r7, #88]	; 0x58
  408728:	2b01      	cmp	r3, #1
  40872a:	f040 80a4 	bne.w	408876 <zbar_scan_image+0x7ea>
  40872e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
  408730:	2b01      	cmp	r3, #1
  408732:	f040 80a0 	bne.w	408876 <zbar_scan_image+0x7ea>
  408736:	687b      	ldr	r3, [r7, #4]
  408738:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  40873a:	2b00      	cmp	r3, #0
  40873c:	f000 809b 	beq.w	408876 <zbar_scan_image+0x7ea>
            /* create container symbol for composite result */
            zbar_symbol_t *ean = NULL, *addon = NULL;
  408740:	2300      	movs	r3, #0
  408742:	64fb      	str	r3, [r7, #76]	; 0x4c
  408744:	2300      	movs	r3, #0
  408746:	64bb      	str	r3, [r7, #72]	; 0x48
            for(symp = &syms->head; *symp; ) {
  408748:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  40874a:	3308      	adds	r3, #8
  40874c:	653b      	str	r3, [r7, #80]	; 0x50
  40874e:	e023      	b.n	408798 <zbar_scan_image+0x70c>
                zbar_symbol_t *sym = *symp;
  408750:	6d3b      	ldr	r3, [r7, #80]	; 0x50
  408752:	681b      	ldr	r3, [r3, #0]
  408754:	613b      	str	r3, [r7, #16]
                if(sym->type < ZBAR_COMPOSITE && sym->type > ZBAR_PARTIAL) {
  408756:	693b      	ldr	r3, [r7, #16]
  408758:	881b      	ldrh	r3, [r3, #0]
  40875a:	2b0e      	cmp	r3, #14
  40875c:	d819      	bhi.n	408792 <zbar_scan_image+0x706>
  40875e:	693b      	ldr	r3, [r7, #16]
  408760:	881b      	ldrh	r3, [r3, #0]
  408762:	2b01      	cmp	r3, #1
  408764:	d915      	bls.n	408792 <zbar_scan_image+0x706>
                    /* move to composite */
                    *symp = sym->next;
  408766:	693b      	ldr	r3, [r7, #16]
  408768:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  40876a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
  40876c:	601a      	str	r2, [r3, #0]
                    syms->nsyms--;
  40876e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  408770:	685b      	ldr	r3, [r3, #4]
  408772:	1e5a      	subs	r2, r3, #1
  408774:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  408776:	605a      	str	r2, [r3, #4]
                    sym->next = NULL;
  408778:	693b      	ldr	r3, [r7, #16]
  40877a:	2200      	movs	r2, #0
  40877c:	62da      	str	r2, [r3, #44]	; 0x2c
                    if(sym->type <= ZBAR_EAN5)
  40877e:	693b      	ldr	r3, [r7, #16]
  408780:	881b      	ldrh	r3, [r3, #0]
  408782:	2b05      	cmp	r3, #5
  408784:	d802      	bhi.n	40878c <zbar_scan_image+0x700>
                        addon = sym;
  408786:	693b      	ldr	r3, [r7, #16]
  408788:	64bb      	str	r3, [r7, #72]	; 0x48
  40878a:	e001      	b.n	408790 <zbar_scan_image+0x704>
                    else
                        ean = sym;
  40878c:	693b      	ldr	r3, [r7, #16]
  40878e:	64fb      	str	r3, [r7, #76]	; 0x4c
                if(sym->type < ZBAR_COMPOSITE && sym->type > ZBAR_PARTIAL) {
                    /* move to composite */
                    *symp = sym->next;
                    syms->nsyms--;
                    sym->next = NULL;
                    if(sym->type <= ZBAR_EAN5)
  408790:	e002      	b.n	408798 <zbar_scan_image+0x70c>
                        addon = sym;
                    else
                        ean = sym;
                }
                else
                    symp = &sym->next;
  408792:	693b      	ldr	r3, [r7, #16]
  408794:	332c      	adds	r3, #44	; 0x2c
  408796:	653b      	str	r3, [r7, #80]	; 0x50
        }

        if(nean == 1 && naddon == 1 && iscn->ean_config) {
            /* create container symbol for composite result */
            zbar_symbol_t *ean = NULL, *addon = NULL;
            for(symp = &syms->head; *symp; ) {
  408798:	6d3b      	ldr	r3, [r7, #80]	; 0x50
  40879a:	681b      	ldr	r3, [r3, #0]
  40879c:	2b00      	cmp	r3, #0
  40879e:	d1d7      	bne.n	408750 <zbar_scan_image+0x6c4>
                        ean = sym;
                }
                else
                    symp = &sym->next;
            }
            assert(ean);
  4087a0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4087a2:	2b00      	cmp	r3, #0
  4087a4:	d106      	bne.n	4087b4 <zbar_scan_image+0x728>
  4087a6:	4809      	ldr	r0, [pc, #36]	; (4087cc <zbar_scan_image+0x740>)
  4087a8:	f240 3167 	movw	r1, #871	; 0x367
  4087ac:	4a08      	ldr	r2, [pc, #32]	; (4087d0 <zbar_scan_image+0x744>)
  4087ae:	4b0f      	ldr	r3, [pc, #60]	; (4087ec <zbar_scan_image+0x760>)
  4087b0:	4c09      	ldr	r4, [pc, #36]	; (4087d8 <zbar_scan_image+0x74c>)
  4087b2:	47a0      	blx	r4
            assert(addon);
  4087b4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
  4087b6:	2b00      	cmp	r3, #0
  4087b8:	d11c      	bne.n	4087f4 <zbar_scan_image+0x768>
  4087ba:	4804      	ldr	r0, [pc, #16]	; (4087cc <zbar_scan_image+0x740>)
  4087bc:	f44f 715a 	mov.w	r1, #872	; 0x368
  4087c0:	4a03      	ldr	r2, [pc, #12]	; (4087d0 <zbar_scan_image+0x744>)
  4087c2:	4b0b      	ldr	r3, [pc, #44]	; (4087f0 <zbar_scan_image+0x764>)
  4087c4:	4c04      	ldr	r4, [pc, #16]	; (4087d8 <zbar_scan_image+0x74c>)
  4087c6:	47a0      	blx	r4
  4087c8:	00408bb5 	.word	0x00408bb5
  4087cc:	0043c838 	.word	0x0043c838
  4087d0:	0043cb44 	.word	0x0043cb44
  4087d4:	0043ca48 	.word	0x0043ca48
  4087d8:	00433d55 	.word	0x00433d55
  4087dc:	0040805d 	.word	0x0040805d
  4087e0:	00407749 	.word	0x00407749
  4087e4:	0043c874 	.word	0x0043c874
  4087e8:	00407331 	.word	0x00407331
  4087ec:	0043cac8 	.word	0x0043cac8
  4087f0:	0043cacc 	.word	0x0043cacc

            int datalen = ean->datalen + addon->datalen + 1;
  4087f4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4087f6:	691a      	ldr	r2, [r3, #16]
  4087f8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
  4087fa:	691b      	ldr	r3, [r3, #16]
  4087fc:	4413      	add	r3, r2
  4087fe:	3301      	adds	r3, #1
  408800:	60fb      	str	r3, [r7, #12]
            zbar_symbol_t *ean_sym =
  408802:	6878      	ldr	r0, [r7, #4]
  408804:	210f      	movs	r1, #15
  408806:	68fa      	ldr	r2, [r7, #12]
  408808:	4b25      	ldr	r3, [pc, #148]	; (4088a0 <zbar_scan_image+0x814>)
  40880a:	4798      	blx	r3
  40880c:	60b8      	str	r0, [r7, #8]
                _zbar_image_scanner_alloc_sym(iscn, ZBAR_COMPOSITE, datalen);
            ean_sym->orient = ean->orient;
  40880e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  408810:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
  408814:	68bb      	ldr	r3, [r7, #8]
  408816:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
            ean_sym->syms = _zbar_symbol_set_create();
  40881a:	4b22      	ldr	r3, [pc, #136]	; (4088a4 <zbar_scan_image+0x818>)
  40881c:	4798      	blx	r3
  40881e:	4602      	mov	r2, r0
  408820:	68bb      	ldr	r3, [r7, #8]
  408822:	631a      	str	r2, [r3, #48]	; 0x30
            memcpy(ean_sym->data, ean->data, ean->datalen);
  408824:	68bb      	ldr	r3, [r7, #8]
  408826:	6959      	ldr	r1, [r3, #20]
  408828:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40882a:	695a      	ldr	r2, [r3, #20]
  40882c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40882e:	691b      	ldr	r3, [r3, #16]
  408830:	4608      	mov	r0, r1
  408832:	4611      	mov	r1, r2
  408834:	461a      	mov	r2, r3
  408836:	4b1c      	ldr	r3, [pc, #112]	; (4088a8 <zbar_scan_image+0x81c>)
  408838:	4798      	blx	r3
            memcpy(ean_sym->data + ean->datalen,
  40883a:	68bb      	ldr	r3, [r7, #8]
  40883c:	695a      	ldr	r2, [r3, #20]
  40883e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  408840:	691b      	ldr	r3, [r3, #16]
  408842:	18d1      	adds	r1, r2, r3
                   addon->data, addon->datalen + 1);
  408844:	6cbb      	ldr	r3, [r7, #72]	; 0x48
  408846:	695a      	ldr	r2, [r3, #20]
  408848:	6cbb      	ldr	r3, [r7, #72]	; 0x48
  40884a:	691b      	ldr	r3, [r3, #16]
            zbar_symbol_t *ean_sym =
                _zbar_image_scanner_alloc_sym(iscn, ZBAR_COMPOSITE, datalen);
            ean_sym->orient = ean->orient;
            ean_sym->syms = _zbar_symbol_set_create();
            memcpy(ean_sym->data, ean->data, ean->datalen);
            memcpy(ean_sym->data + ean->datalen,
  40884c:	3301      	adds	r3, #1
  40884e:	4608      	mov	r0, r1
  408850:	4611      	mov	r1, r2
  408852:	461a      	mov	r2, r3
  408854:	4b14      	ldr	r3, [pc, #80]	; (4088a8 <zbar_scan_image+0x81c>)
  408856:	4798      	blx	r3
                   addon->data, addon->datalen + 1);
            ean_sym->syms->head = ean;
  408858:	68bb      	ldr	r3, [r7, #8]
  40885a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40885c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
  40885e:	609a      	str	r2, [r3, #8]
            ean->next = addon;
  408860:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  408862:	6cba      	ldr	r2, [r7, #72]	; 0x48
  408864:	62da      	str	r2, [r3, #44]	; 0x2c
            ean_sym->syms->nsyms = 2;
  408866:	68bb      	ldr	r3, [r7, #8]
  408868:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40886a:	2202      	movs	r2, #2
  40886c:	605a      	str	r2, [r3, #4]
            _zbar_image_scanner_add_sym(iscn, ean_sym);
  40886e:	6878      	ldr	r0, [r7, #4]
  408870:	68b9      	ldr	r1, [r7, #8]
  408872:	4b0e      	ldr	r3, [pc, #56]	; (4088ac <zbar_scan_image+0x820>)
  408874:	4798      	blx	r3
        }
    }

    if(syms->nsyms && iscn->handler)
  408876:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  408878:	685b      	ldr	r3, [r3, #4]
  40887a:	2b00      	cmp	r3, #0
  40887c:	d00a      	beq.n	408894 <zbar_scan_image+0x808>
  40887e:	687b      	ldr	r3, [r7, #4]
  408880:	68db      	ldr	r3, [r3, #12]
  408882:	2b00      	cmp	r3, #0
  408884:	d006      	beq.n	408894 <zbar_scan_image+0x808>
        iscn->handler(img, iscn->userdata);
  408886:	687b      	ldr	r3, [r7, #4]
  408888:	68db      	ldr	r3, [r3, #12]
  40888a:	687a      	ldr	r2, [r7, #4]
  40888c:	6892      	ldr	r2, [r2, #8]
  40888e:	6838      	ldr	r0, [r7, #0]
  408890:	4611      	mov	r1, r2
  408892:	4798      	blx	r3

    //svg_close();
    return(syms->nsyms);
  408894:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
  408896:	685b      	ldr	r3, [r3, #4]
}
  408898:	4618      	mov	r0, r3
  40889a:	3784      	adds	r7, #132	; 0x84
  40889c:	46bd      	mov	sp, r7
  40889e:	bd90      	pop	{r4, r7, pc}
  4088a0:	004075a1 	.word	0x004075a1
  4088a4:	00409221 	.word	0x00409221
  4088a8:	00434ed9 	.word	0x00434ed9
  4088ac:	00407929 	.word	0x00407929

004088b0 <_zbar_refcnt_init>:


#else

void _zbar_refcnt_init ()
{
  4088b0:	b480      	push	{r7}
  4088b2:	af00      	add	r7, sp, #0
}
  4088b4:	46bd      	mov	sp, r7
  4088b6:	f85d 7b04 	ldr.w	r7, [sp], #4
  4088ba:	4770      	bx	lr

004088bc <zbar_scanner_create>:
    unsigned last_edge;     /* interpolated position of last located edge */
    unsigned width;         /* last element width */
};

zbar_scanner_t *zbar_scanner_create (zbar_decoder_t *dcode)
{
  4088bc:	b580      	push	{r7, lr}
  4088be:	b084      	sub	sp, #16
  4088c0:	af00      	add	r7, sp, #0
  4088c2:	6078      	str	r0, [r7, #4]
    zbar_scanner_t *scn = malloc(sizeof(zbar_scanner_t));
  4088c4:	2030      	movs	r0, #48	; 0x30
  4088c6:	4b09      	ldr	r3, [pc, #36]	; (4088ec <zbar_scanner_create+0x30>)
  4088c8:	4798      	blx	r3
  4088ca:	4603      	mov	r3, r0
  4088cc:	60fb      	str	r3, [r7, #12]
    scn->decoder = dcode;
  4088ce:	68fb      	ldr	r3, [r7, #12]
  4088d0:	687a      	ldr	r2, [r7, #4]
  4088d2:	601a      	str	r2, [r3, #0]
    scn->y1_min_thresh = ZBAR_SCANNER_THRESH_MIN;
  4088d4:	68fb      	ldr	r3, [r7, #12]
  4088d6:	2204      	movs	r2, #4
  4088d8:	605a      	str	r2, [r3, #4]
    zbar_scanner_reset(scn);
  4088da:	68f8      	ldr	r0, [r7, #12]
  4088dc:	4b04      	ldr	r3, [pc, #16]	; (4088f0 <zbar_scanner_create+0x34>)
  4088de:	4798      	blx	r3
    return(scn);
  4088e0:	68fb      	ldr	r3, [r7, #12]
}
  4088e2:	4618      	mov	r0, r3
  4088e4:	3710      	adds	r7, #16
  4088e6:	46bd      	mov	sp, r7
  4088e8:	bd80      	pop	{r7, pc}
  4088ea:	bf00      	nop
  4088ec:	0043489d 	.word	0x0043489d
  4088f0:	0040890d 	.word	0x0040890d

004088f4 <zbar_scanner_destroy>:

void zbar_scanner_destroy (zbar_scanner_t *scn)
{
  4088f4:	b580      	push	{r7, lr}
  4088f6:	b082      	sub	sp, #8
  4088f8:	af00      	add	r7, sp, #0
  4088fa:	6078      	str	r0, [r7, #4]
    free(scn);
  4088fc:	6878      	ldr	r0, [r7, #4]
  4088fe:	4b02      	ldr	r3, [pc, #8]	; (408908 <zbar_scanner_destroy+0x14>)
  408900:	4798      	blx	r3
}
  408902:	3708      	adds	r7, #8
  408904:	46bd      	mov	sp, r7
  408906:	bd80      	pop	{r7, pc}
  408908:	004348ad 	.word	0x004348ad

0040890c <zbar_scanner_reset>:

zbar_symbol_type_t zbar_scanner_reset (zbar_scanner_t *scn)
{
  40890c:	b580      	push	{r7, lr}
  40890e:	b082      	sub	sp, #8
  408910:	af00      	add	r7, sp, #0
  408912:	6078      	str	r0, [r7, #4]
    memset(&scn->x, 0, sizeof(zbar_scanner_t) - offsetof(zbar_scanner_t, x));
  408914:	687b      	ldr	r3, [r7, #4]
  408916:	3308      	adds	r3, #8
  408918:	4618      	mov	r0, r3
  40891a:	2100      	movs	r1, #0
  40891c:	2228      	movs	r2, #40	; 0x28
  40891e:	4b0a      	ldr	r3, [pc, #40]	; (408948 <zbar_scanner_reset+0x3c>)
  408920:	4798      	blx	r3
    scn->y1_thresh = scn->y1_min_thresh;
  408922:	687b      	ldr	r3, [r7, #4]
  408924:	685a      	ldr	r2, [r3, #4]
  408926:	687b      	ldr	r3, [r7, #4]
  408928:	621a      	str	r2, [r3, #32]
    if(scn->decoder)
  40892a:	687b      	ldr	r3, [r7, #4]
  40892c:	681b      	ldr	r3, [r3, #0]
  40892e:	2b00      	cmp	r3, #0
  408930:	d004      	beq.n	40893c <zbar_scanner_reset+0x30>
        zbar_decoder_reset(scn->decoder);
  408932:	687b      	ldr	r3, [r7, #4]
  408934:	681b      	ldr	r3, [r3, #0]
  408936:	4618      	mov	r0, r3
  408938:	4b04      	ldr	r3, [pc, #16]	; (40894c <zbar_scanner_reset+0x40>)
  40893a:	4798      	blx	r3
    return(ZBAR_NONE);
  40893c:	2300      	movs	r3, #0
}
  40893e:	4618      	mov	r0, r3
  408940:	3708      	adds	r7, #8
  408942:	46bd      	mov	sp, r7
  408944:	bd80      	pop	{r7, pc}
  408946:	bf00      	nop
  408948:	004350d5 	.word	0x004350d5
  40894c:	0040521d 	.word	0x0040521d

00408950 <zbar_scanner_get_width>:

unsigned zbar_scanner_get_width (const zbar_scanner_t *scn)
{
  408950:	b480      	push	{r7}
  408952:	b083      	sub	sp, #12
  408954:	af00      	add	r7, sp, #0
  408956:	6078      	str	r0, [r7, #4]
    return(scn->width);
  408958:	687b      	ldr	r3, [r7, #4]
  40895a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
}
  40895c:	4618      	mov	r0, r3
  40895e:	370c      	adds	r7, #12
  408960:	46bd      	mov	sp, r7
  408962:	f85d 7b04 	ldr.w	r7, [sp], #4
  408966:	4770      	bx	lr

00408968 <zbar_scanner_get_edge>:

unsigned zbar_scanner_get_edge (const zbar_scanner_t *scn,
                                unsigned offset,
                                int prec)
{
  408968:	b480      	push	{r7}
  40896a:	b087      	sub	sp, #28
  40896c:	af00      	add	r7, sp, #0
  40896e:	60f8      	str	r0, [r7, #12]
  408970:	60b9      	str	r1, [r7, #8]
  408972:	607a      	str	r2, [r7, #4]
    unsigned edge = scn->last_edge - offset - (1 << ZBAR_FIXED) - ROUND;
  408974:	68fb      	ldr	r3, [r7, #12]
  408976:	6a9a      	ldr	r2, [r3, #40]	; 0x28
  408978:	68bb      	ldr	r3, [r7, #8]
  40897a:	1ad3      	subs	r3, r2, r3
  40897c:	3b30      	subs	r3, #48	; 0x30
  40897e:	617b      	str	r3, [r7, #20]
    prec = ZBAR_FIXED - prec;
  408980:	687b      	ldr	r3, [r7, #4]
  408982:	f1c3 0305 	rsb	r3, r3, #5
  408986:	607b      	str	r3, [r7, #4]
    if(prec > 0)
  408988:	687b      	ldr	r3, [r7, #4]
  40898a:	2b00      	cmp	r3, #0
  40898c:	dd04      	ble.n	408998 <zbar_scanner_get_edge+0x30>
        return(edge >> prec);
  40898e:	697a      	ldr	r2, [r7, #20]
  408990:	687b      	ldr	r3, [r7, #4]
  408992:	fa22 f303 	lsr.w	r3, r2, r3
  408996:	e009      	b.n	4089ac <zbar_scanner_get_edge+0x44>
    else if(!prec)
  408998:	687b      	ldr	r3, [r7, #4]
  40899a:	2b00      	cmp	r3, #0
  40899c:	d101      	bne.n	4089a2 <zbar_scanner_get_edge+0x3a>
        return(edge);
  40899e:	697b      	ldr	r3, [r7, #20]
  4089a0:	e004      	b.n	4089ac <zbar_scanner_get_edge+0x44>
    else
        return(edge << -prec);
  4089a2:	687b      	ldr	r3, [r7, #4]
  4089a4:	425b      	negs	r3, r3
  4089a6:	697a      	ldr	r2, [r7, #20]
  4089a8:	fa02 f303 	lsl.w	r3, r2, r3
}
  4089ac:	4618      	mov	r0, r3
  4089ae:	371c      	adds	r7, #28
  4089b0:	46bd      	mov	sp, r7
  4089b2:	f85d 7b04 	ldr.w	r7, [sp], #4
  4089b6:	4770      	bx	lr

004089b8 <calc_thresh>:
{
    return((scn->y1_sign <= 0) ? ZBAR_SPACE : ZBAR_BAR);
}

static inline unsigned calc_thresh (zbar_scanner_t *scn)
{
  4089b8:	b480      	push	{r7}
  4089ba:	b087      	sub	sp, #28
  4089bc:	af00      	add	r7, sp, #0
  4089be:	6078      	str	r0, [r7, #4]
    /* threshold 1st to improve noise rejection */
    unsigned dx, thresh = scn->y1_thresh;
  4089c0:	687b      	ldr	r3, [r7, #4]
  4089c2:	6a1b      	ldr	r3, [r3, #32]
  4089c4:	617b      	str	r3, [r7, #20]
    unsigned long t;
    if((thresh <= scn->y1_min_thresh) || !scn->width) {
  4089c6:	687b      	ldr	r3, [r7, #4]
  4089c8:	685a      	ldr	r2, [r3, #4]
  4089ca:	697b      	ldr	r3, [r7, #20]
  4089cc:	429a      	cmp	r2, r3
  4089ce:	d203      	bcs.n	4089d8 <calc_thresh+0x20>
  4089d0:	687b      	ldr	r3, [r7, #4]
  4089d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4089d4:	2b00      	cmp	r3, #0
  4089d6:	d103      	bne.n	4089e0 <calc_thresh+0x28>
        dbprintf(1, " tmin=%d", scn->y1_min_thresh);
  4089d8:	bf00      	nop
        return(scn->y1_min_thresh);
  4089da:	687b      	ldr	r3, [r7, #4]
  4089dc:	685b      	ldr	r3, [r3, #4]
  4089de:	e02a      	b.n	408a36 <calc_thresh+0x7e>
    }
    /* slowly return threshold to min */
    dx = (scn->x << ZBAR_FIXED) - scn->last_edge;
  4089e0:	687b      	ldr	r3, [r7, #4]
  4089e2:	689b      	ldr	r3, [r3, #8]
  4089e4:	015a      	lsls	r2, r3, #5
  4089e6:	687b      	ldr	r3, [r7, #4]
  4089e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  4089ea:	1ad3      	subs	r3, r2, r3
  4089ec:	613b      	str	r3, [r7, #16]
    t = thresh * dx;
  4089ee:	697b      	ldr	r3, [r7, #20]
  4089f0:	693a      	ldr	r2, [r7, #16]
  4089f2:	fb02 f303 	mul.w	r3, r2, r3
  4089f6:	60fb      	str	r3, [r7, #12]
    t /= scn->width;
  4089f8:	687b      	ldr	r3, [r7, #4]
  4089fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4089fc:	68fa      	ldr	r2, [r7, #12]
  4089fe:	fbb2 f3f3 	udiv	r3, r2, r3
  408a02:	60fb      	str	r3, [r7, #12]
    t /= ZBAR_SCANNER_THRESH_FADE;
  408a04:	68fb      	ldr	r3, [r7, #12]
  408a06:	08db      	lsrs	r3, r3, #3
  408a08:	60fb      	str	r3, [r7, #12]
    dbprintf(1, " thr=%d t=%ld x=%d last=%d.%d (%d)",
  408a0a:	bf00      	nop
             thresh, t, scn->x, scn->last_edge >> ZBAR_FIXED,
             scn->last_edge & ((1 << ZBAR_FIXED) - 1), dx);
    if(thresh > t) {
  408a0c:	697a      	ldr	r2, [r7, #20]
  408a0e:	68fb      	ldr	r3, [r7, #12]
  408a10:	429a      	cmp	r2, r3
  408a12:	d90a      	bls.n	408a2a <calc_thresh+0x72>
        thresh -= t;
  408a14:	697a      	ldr	r2, [r7, #20]
  408a16:	68fb      	ldr	r3, [r7, #12]
  408a18:	1ad3      	subs	r3, r2, r3
  408a1a:	617b      	str	r3, [r7, #20]
        if(thresh > scn->y1_min_thresh)
  408a1c:	687b      	ldr	r3, [r7, #4]
  408a1e:	685a      	ldr	r2, [r3, #4]
  408a20:	697b      	ldr	r3, [r7, #20]
  408a22:	429a      	cmp	r2, r3
  408a24:	d201      	bcs.n	408a2a <calc_thresh+0x72>
            return(thresh);
  408a26:	697b      	ldr	r3, [r7, #20]
  408a28:	e005      	b.n	408a36 <calc_thresh+0x7e>
    }
    scn->y1_thresh = scn->y1_min_thresh;
  408a2a:	687b      	ldr	r3, [r7, #4]
  408a2c:	685a      	ldr	r2, [r3, #4]
  408a2e:	687b      	ldr	r3, [r7, #4]
  408a30:	621a      	str	r2, [r3, #32]
    return(scn->y1_min_thresh);
  408a32:	687b      	ldr	r3, [r7, #4]
  408a34:	685b      	ldr	r3, [r3, #4]
}
  408a36:	4618      	mov	r0, r3
  408a38:	371c      	adds	r7, #28
  408a3a:	46bd      	mov	sp, r7
  408a3c:	f85d 7b04 	ldr.w	r7, [sp], #4
  408a40:	4770      	bx	lr
  408a42:	bf00      	nop

00408a44 <process_edge>:

static inline zbar_symbol_type_t process_edge (zbar_scanner_t *scn,
                                               int y1)
{
  408a44:	b580      	push	{r7, lr}
  408a46:	b082      	sub	sp, #8
  408a48:	af00      	add	r7, sp, #0
  408a4a:	6078      	str	r0, [r7, #4]
  408a4c:	6039      	str	r1, [r7, #0]
    if(!scn->y1_sign)
  408a4e:	687b      	ldr	r3, [r7, #4]
  408a50:	69db      	ldr	r3, [r3, #28]
  408a52:	2b00      	cmp	r3, #0
  408a54:	d107      	bne.n	408a66 <process_edge+0x22>
        scn->last_edge = scn->cur_edge = (1 << ZBAR_FIXED) + ROUND;
  408a56:	687b      	ldr	r3, [r7, #4]
  408a58:	2230      	movs	r2, #48	; 0x30
  408a5a:	625a      	str	r2, [r3, #36]	; 0x24
  408a5c:	687b      	ldr	r3, [r7, #4]
  408a5e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  408a60:	687b      	ldr	r3, [r7, #4]
  408a62:	629a      	str	r2, [r3, #40]	; 0x28
  408a64:	e007      	b.n	408a76 <process_edge+0x32>
    else if(!scn->last_edge)
  408a66:	687b      	ldr	r3, [r7, #4]
  408a68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  408a6a:	2b00      	cmp	r3, #0
  408a6c:	d103      	bne.n	408a76 <process_edge+0x32>
        scn->last_edge = scn->cur_edge;
  408a6e:	687b      	ldr	r3, [r7, #4]
  408a70:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  408a72:	687b      	ldr	r3, [r7, #4]
  408a74:	629a      	str	r2, [r3, #40]	; 0x28

    scn->width = scn->cur_edge - scn->last_edge;
  408a76:	687b      	ldr	r3, [r7, #4]
  408a78:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  408a7a:	687b      	ldr	r3, [r7, #4]
  408a7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
  408a7e:	1ad2      	subs	r2, r2, r3
  408a80:	687b      	ldr	r3, [r7, #4]
  408a82:	62da      	str	r2, [r3, #44]	; 0x2c
    dbprintf(1, " sgn=%d cur=%d.%d w=%d (%s)\n",
  408a84:	bf00      	nop
             scn->y1_sign, scn->cur_edge >> ZBAR_FIXED,
             scn->cur_edge & ((1 << ZBAR_FIXED) - 1), scn->width,
             ((y1 > 0) ? "SPACE" : "BAR"));
    scn->last_edge = scn->cur_edge;
  408a86:	687b      	ldr	r3, [r7, #4]
  408a88:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  408a8a:	687b      	ldr	r3, [r7, #4]
  408a8c:	629a      	str	r2, [r3, #40]	; 0x28
#if DEBUG_SVG > 1
    svg_path_moveto(SVG_ABS, scn->last_edge - (1 << ZBAR_FIXED) - ROUND, 0);
#endif

    /* pass to decoder */
    if(scn->decoder)
  408a8e:	687b      	ldr	r3, [r7, #4]
  408a90:	681b      	ldr	r3, [r3, #0]
  408a92:	2b00      	cmp	r3, #0
  408a94:	d009      	beq.n	408aaa <process_edge+0x66>
        return(zbar_decode_width(scn->decoder, scn->width));
  408a96:	687b      	ldr	r3, [r7, #4]
  408a98:	681a      	ldr	r2, [r3, #0]
  408a9a:	687b      	ldr	r3, [r7, #4]
  408a9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  408a9e:	4610      	mov	r0, r2
  408aa0:	4619      	mov	r1, r3
  408aa2:	4b04      	ldr	r3, [pc, #16]	; (408ab4 <process_edge+0x70>)
  408aa4:	4798      	blx	r3
  408aa6:	4603      	mov	r3, r0
  408aa8:	e000      	b.n	408aac <process_edge+0x68>
    return(ZBAR_PARTIAL);
  408aaa:	2301      	movs	r3, #1
}
  408aac:	4618      	mov	r0, r3
  408aae:	3708      	adds	r7, #8
  408ab0:	46bd      	mov	sp, r7
  408ab2:	bd80      	pop	{r7, pc}
  408ab4:	00405399 	.word	0x00405399

00408ab8 <zbar_scanner_flush>:

inline zbar_symbol_type_t zbar_scanner_flush (zbar_scanner_t *scn)
{
  408ab8:	b580      	push	{r7, lr}
  408aba:	b084      	sub	sp, #16
  408abc:	af00      	add	r7, sp, #0
  408abe:	6078      	str	r0, [r7, #4]
    unsigned x;
    if(!scn->y1_sign)
  408ac0:	687b      	ldr	r3, [r7, #4]
  408ac2:	69db      	ldr	r3, [r3, #28]
  408ac4:	2b00      	cmp	r3, #0
  408ac6:	d101      	bne.n	408acc <zbar_scanner_flush+0x14>
        return(ZBAR_NONE);
  408ac8:	2300      	movs	r3, #0
  408aca:	e034      	b.n	408b36 <zbar_scanner_flush+0x7e>

    x = (scn->x << ZBAR_FIXED) + ROUND;
  408acc:	687b      	ldr	r3, [r7, #4]
  408ace:	689b      	ldr	r3, [r3, #8]
  408ad0:	015b      	lsls	r3, r3, #5
  408ad2:	3310      	adds	r3, #16
  408ad4:	60fb      	str	r3, [r7, #12]

    if(scn->cur_edge != x || scn->y1_sign > 0) {
  408ad6:	687b      	ldr	r3, [r7, #4]
  408ad8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  408ada:	68fb      	ldr	r3, [r7, #12]
  408adc:	429a      	cmp	r2, r3
  408ade:	d103      	bne.n	408ae8 <zbar_scanner_flush+0x30>
  408ae0:	687b      	ldr	r3, [r7, #4]
  408ae2:	69db      	ldr	r3, [r3, #28]
  408ae4:	2b00      	cmp	r3, #0
  408ae6:	dd13      	ble.n	408b10 <zbar_scanner_flush+0x58>
        zbar_symbol_type_t edge = process_edge(scn, -scn->y1_sign);
  408ae8:	687b      	ldr	r3, [r7, #4]
  408aea:	69db      	ldr	r3, [r3, #28]
  408aec:	425b      	negs	r3, r3
  408aee:	6878      	ldr	r0, [r7, #4]
  408af0:	4619      	mov	r1, r3
  408af2:	4b13      	ldr	r3, [pc, #76]	; (408b40 <zbar_scanner_flush+0x88>)
  408af4:	4798      	blx	r3
  408af6:	4603      	mov	r3, r0
  408af8:	817b      	strh	r3, [r7, #10]
        dbprintf(1, "flush0:");
  408afa:	bf00      	nop
        scn->cur_edge = x;
  408afc:	687b      	ldr	r3, [r7, #4]
  408afe:	68fa      	ldr	r2, [r7, #12]
  408b00:	625a      	str	r2, [r3, #36]	; 0x24
        scn->y1_sign = -scn->y1_sign;
  408b02:	687b      	ldr	r3, [r7, #4]
  408b04:	69db      	ldr	r3, [r3, #28]
  408b06:	425a      	negs	r2, r3
  408b08:	687b      	ldr	r3, [r7, #4]
  408b0a:	61da      	str	r2, [r3, #28]
        return(edge);
  408b0c:	897b      	ldrh	r3, [r7, #10]
  408b0e:	e012      	b.n	408b36 <zbar_scanner_flush+0x7e>
    }

    scn->y1_sign = scn->width = 0;
  408b10:	687b      	ldr	r3, [r7, #4]
  408b12:	2200      	movs	r2, #0
  408b14:	62da      	str	r2, [r3, #44]	; 0x2c
  408b16:	687b      	ldr	r3, [r7, #4]
  408b18:	2200      	movs	r2, #0
  408b1a:	61da      	str	r2, [r3, #28]
    if(scn->decoder)
  408b1c:	687b      	ldr	r3, [r7, #4]
  408b1e:	681b      	ldr	r3, [r3, #0]
  408b20:	2b00      	cmp	r3, #0
  408b22:	d007      	beq.n	408b34 <zbar_scanner_flush+0x7c>
        return(zbar_decode_width(scn->decoder, 0));
  408b24:	687b      	ldr	r3, [r7, #4]
  408b26:	681b      	ldr	r3, [r3, #0]
  408b28:	4618      	mov	r0, r3
  408b2a:	2100      	movs	r1, #0
  408b2c:	4b05      	ldr	r3, [pc, #20]	; (408b44 <zbar_scanner_flush+0x8c>)
  408b2e:	4798      	blx	r3
  408b30:	4603      	mov	r3, r0
  408b32:	e000      	b.n	408b36 <zbar_scanner_flush+0x7e>
    return(ZBAR_PARTIAL);
  408b34:	2301      	movs	r3, #1
}
  408b36:	4618      	mov	r0, r3
  408b38:	3710      	adds	r7, #16
  408b3a:	46bd      	mov	sp, r7
  408b3c:	bd80      	pop	{r7, pc}
  408b3e:	bf00      	nop
  408b40:	00408a45 	.word	0x00408a45
  408b44:	00405399 	.word	0x00405399

00408b48 <zbar_scanner_new_scan>:

zbar_symbol_type_t zbar_scanner_new_scan (zbar_scanner_t *scn)
{
  408b48:	b580      	push	{r7, lr}
  408b4a:	b084      	sub	sp, #16
  408b4c:	af00      	add	r7, sp, #0
  408b4e:	6078      	str	r0, [r7, #4]
    zbar_symbol_type_t edge = ZBAR_NONE;
  408b50:	2300      	movs	r3, #0
  408b52:	81fb      	strh	r3, [r7, #14]
    while(scn->y1_sign) {
  408b54:	e00a      	b.n	408b6c <zbar_scanner_new_scan+0x24>
        zbar_symbol_type_t tmp = zbar_scanner_flush(scn);
  408b56:	6878      	ldr	r0, [r7, #4]
  408b58:	4b13      	ldr	r3, [pc, #76]	; (408ba8 <zbar_scanner_new_scan+0x60>)
  408b5a:	4798      	blx	r3
  408b5c:	4603      	mov	r3, r0
  408b5e:	81bb      	strh	r3, [r7, #12]
        if(tmp < 0 || tmp > edge)
  408b60:	89ba      	ldrh	r2, [r7, #12]
  408b62:	89fb      	ldrh	r3, [r7, #14]
  408b64:	429a      	cmp	r2, r3
  408b66:	d901      	bls.n	408b6c <zbar_scanner_new_scan+0x24>
            edge = tmp;
  408b68:	89bb      	ldrh	r3, [r7, #12]
  408b6a:	81fb      	strh	r3, [r7, #14]
}

zbar_symbol_type_t zbar_scanner_new_scan (zbar_scanner_t *scn)
{
    zbar_symbol_type_t edge = ZBAR_NONE;
    while(scn->y1_sign) {
  408b6c:	687b      	ldr	r3, [r7, #4]
  408b6e:	69db      	ldr	r3, [r3, #28]
  408b70:	2b00      	cmp	r3, #0
  408b72:	d1f0      	bne.n	408b56 <zbar_scanner_new_scan+0xe>
        if(tmp < 0 || tmp > edge)
            edge = tmp;
    }

    /* reset scanner and associated decoder */
    memset(&scn->x, 0, sizeof(zbar_scanner_t) - offsetof(zbar_scanner_t, x));
  408b74:	687b      	ldr	r3, [r7, #4]
  408b76:	3308      	adds	r3, #8
  408b78:	4618      	mov	r0, r3
  408b7a:	2100      	movs	r1, #0
  408b7c:	2228      	movs	r2, #40	; 0x28
  408b7e:	4b0b      	ldr	r3, [pc, #44]	; (408bac <zbar_scanner_new_scan+0x64>)
  408b80:	4798      	blx	r3
    scn->y1_thresh = scn->y1_min_thresh;
  408b82:	687b      	ldr	r3, [r7, #4]
  408b84:	685a      	ldr	r2, [r3, #4]
  408b86:	687b      	ldr	r3, [r7, #4]
  408b88:	621a      	str	r2, [r3, #32]
    if(scn->decoder)
  408b8a:	687b      	ldr	r3, [r7, #4]
  408b8c:	681b      	ldr	r3, [r3, #0]
  408b8e:	2b00      	cmp	r3, #0
  408b90:	d004      	beq.n	408b9c <zbar_scanner_new_scan+0x54>
        zbar_decoder_new_scan(scn->decoder);
  408b92:	687b      	ldr	r3, [r7, #4]
  408b94:	681b      	ldr	r3, [r3, #0]
  408b96:	4618      	mov	r0, r3
  408b98:	4b05      	ldr	r3, [pc, #20]	; (408bb0 <zbar_scanner_new_scan+0x68>)
  408b9a:	4798      	blx	r3
    return(edge);
  408b9c:	89fb      	ldrh	r3, [r7, #14]
}
  408b9e:	4618      	mov	r0, r3
  408ba0:	3710      	adds	r7, #16
  408ba2:	46bd      	mov	sp, r7
  408ba4:	bd80      	pop	{r7, pc}
  408ba6:	bf00      	nop
  408ba8:	00408ab9 	.word	0x00408ab9
  408bac:	004350d5 	.word	0x004350d5
  408bb0:	00405265 	.word	0x00405265

00408bb4 <zbar_scan_y>:

zbar_symbol_type_t zbar_scan_y (zbar_scanner_t *scn,
                                int y)
{
  408bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408bb8:	b085      	sub	sp, #20
  408bba:	af00      	add	r7, sp, #0
  408bbc:	6078      	str	r0, [r7, #4]
  408bbe:	6039      	str	r1, [r7, #0]
    /* FIXME calc and clip to max y range... */
    /* retrieve short value history */
    register int x = scn->x;
  408bc0:	687b      	ldr	r3, [r7, #4]
  408bc2:	689b      	ldr	r3, [r3, #8]
  408bc4:	461d      	mov	r5, r3
    register int y0_1 = scn->y0[(x - 1) & 3];
  408bc6:	1e6b      	subs	r3, r5, #1
  408bc8:	f003 0303 	and.w	r3, r3, #3
  408bcc:	687a      	ldr	r2, [r7, #4]
  408bce:	3302      	adds	r3, #2
  408bd0:	009b      	lsls	r3, r3, #2
  408bd2:	4413      	add	r3, r2
  408bd4:	685e      	ldr	r6, [r3, #4]
    register int y0_0 = y0_1;
  408bd6:	46b0      	mov	r8, r6
    register int y0_2, y0_3, y1_1, y2_1, y2_2;
    zbar_symbol_type_t edge;
    if(x) {
  408bd8:	2d00      	cmp	r5, #0
  408bda:	d012      	beq.n	408c02 <zbar_scan_y+0x4e>
        /* update weighted moving average */
        y0_0 += ((int)((y - y0_1) * EWMA_WEIGHT)) >> ZBAR_FIXED;
  408bdc:	683b      	ldr	r3, [r7, #0]
  408bde:	1b9b      	subs	r3, r3, r6
  408be0:	461a      	mov	r2, r3
  408be2:	4613      	mov	r3, r2
  408be4:	009b      	lsls	r3, r3, #2
  408be6:	4413      	add	r3, r2
  408be8:	009a      	lsls	r2, r3, #2
  408bea:	4413      	add	r3, r2
  408bec:	115b      	asrs	r3, r3, #5
  408bee:	4498      	add	r8, r3
        scn->y0[x & 3] = y0_0;
  408bf0:	f005 0303 	and.w	r3, r5, #3
  408bf4:	687a      	ldr	r2, [r7, #4]
  408bf6:	3302      	adds	r3, #2
  408bf8:	009b      	lsls	r3, r3, #2
  408bfa:	4413      	add	r3, r2
  408bfc:	f8c3 8004 	str.w	r8, [r3, #4]
  408c00:	e011      	b.n	408c26 <zbar_scan_y+0x72>
    }
    else
        y0_0 = y0_1 = scn->y0[0] = scn->y0[1] = scn->y0[2] = scn->y0[3] = y;
  408c02:	687b      	ldr	r3, [r7, #4]
  408c04:	683a      	ldr	r2, [r7, #0]
  408c06:	619a      	str	r2, [r3, #24]
  408c08:	687b      	ldr	r3, [r7, #4]
  408c0a:	699a      	ldr	r2, [r3, #24]
  408c0c:	687b      	ldr	r3, [r7, #4]
  408c0e:	615a      	str	r2, [r3, #20]
  408c10:	687b      	ldr	r3, [r7, #4]
  408c12:	695a      	ldr	r2, [r3, #20]
  408c14:	687b      	ldr	r3, [r7, #4]
  408c16:	611a      	str	r2, [r3, #16]
  408c18:	687b      	ldr	r3, [r7, #4]
  408c1a:	691a      	ldr	r2, [r3, #16]
  408c1c:	687b      	ldr	r3, [r7, #4]
  408c1e:	60da      	str	r2, [r3, #12]
  408c20:	687b      	ldr	r3, [r7, #4]
  408c22:	68de      	ldr	r6, [r3, #12]
  408c24:	46b0      	mov	r8, r6
    y0_2 = scn->y0[(x - 2) & 3];
  408c26:	1eab      	subs	r3, r5, #2
  408c28:	f003 0303 	and.w	r3, r3, #3
  408c2c:	687a      	ldr	r2, [r7, #4]
  408c2e:	3302      	adds	r3, #2
  408c30:	009b      	lsls	r3, r3, #2
  408c32:	4413      	add	r3, r2
  408c34:	f8d3 9004 	ldr.w	r9, [r3, #4]
    y0_3 = scn->y0[(x - 3) & 3];
  408c38:	1eeb      	subs	r3, r5, #3
  408c3a:	f003 0303 	and.w	r3, r3, #3
  408c3e:	687a      	ldr	r2, [r7, #4]
  408c40:	3302      	adds	r3, #2
  408c42:	009b      	lsls	r3, r3, #2
  408c44:	4413      	add	r3, r2
  408c46:	f8d3 b004 	ldr.w	fp, [r3, #4]
    /* 1st differential @ x-1 */
    y1_1 = y0_1 - y0_2;
  408c4a:	ebc9 0406 	rsb	r4, r9, r6
    {
        register int y1_2 = y0_2 - y0_3;
  408c4e:	ebcb 0a09 	rsb	sl, fp, r9
        if((abs(y1_1) < abs(y1_2)) &&
  408c52:	ea84 72e4 	eor.w	r2, r4, r4, asr #31
  408c56:	eba2 72e4 	sub.w	r2, r2, r4, asr #31
  408c5a:	ea8a 73ea 	eor.w	r3, sl, sl, asr #31
  408c5e:	eba3 73ea 	sub.w	r3, r3, sl, asr #31
  408c62:	429a      	cmp	r2, r3
  408c64:	da0a      	bge.n	408c7c <zbar_scan_y+0xc8>
           ((y1_1 >= 0) == (y1_2 >= 0)))
  408c66:	0fe3      	lsrs	r3, r4, #31
  408c68:	b2da      	uxtb	r2, r3
  408c6a:	ea6f 030a 	mvn.w	r3, sl
  408c6e:	0fdb      	lsrs	r3, r3, #31
  408c70:	b2db      	uxtb	r3, r3
  408c72:	4053      	eors	r3, r2
  408c74:	b2db      	uxtb	r3, r3
    y0_3 = scn->y0[(x - 3) & 3];
    /* 1st differential @ x-1 */
    y1_1 = y0_1 - y0_2;
    {
        register int y1_2 = y0_2 - y0_3;
        if((abs(y1_1) < abs(y1_2)) &&
  408c76:	2b00      	cmp	r3, #0
  408c78:	d000      	beq.n	408c7c <zbar_scan_y+0xc8>
           ((y1_1 >= 0) == (y1_2 >= 0)))
            y1_1 = y1_2;
  408c7a:	4654      	mov	r4, sl
    }

    /* 2nd differentials @ x-1 & x-2 */
    y2_1 = y0_0 - (y0_1 * 2) + y0_2;
  408c7c:	4633      	mov	r3, r6
  408c7e:	07db      	lsls	r3, r3, #31
  408c80:	1b9b      	subs	r3, r3, r6
  408c82:	005b      	lsls	r3, r3, #1
  408c84:	4443      	add	r3, r8
  408c86:	eb03 0809 	add.w	r8, r3, r9
    y2_2 = y0_1 - (y0_2 * 2) + y0_3;
  408c8a:	464b      	mov	r3, r9
  408c8c:	07db      	lsls	r3, r3, #31
  408c8e:	ebc9 0303 	rsb	r3, r9, r3
  408c92:	005b      	lsls	r3, r3, #1
  408c94:	4433      	add	r3, r6
  408c96:	eb03 060b 	add.w	r6, r3, fp

    dbprintf(1, "scan: x=%d y=%d y0=%d y1=%d y2=%d",
  408c9a:	bf00      	nop
             x, y, y0_1, y1_1, y2_1);

    edge = ZBAR_NONE;
  408c9c:	2300      	movs	r3, #0
  408c9e:	81fb      	strh	r3, [r7, #14]
    /* 2nd zero-crossing is 1st local min/max - could be edge */
    if((!y2_1 ||
  408ca0:	f1b8 0f00 	cmp.w	r8, #0
  408ca4:	d007      	beq.n	408cb6 <zbar_scan_y+0x102>
  408ca6:	f1b8 0f00 	cmp.w	r8, #0
  408caa:	dd02      	ble.n	408cb2 <zbar_scan_y+0xfe>
  408cac:	2e00      	cmp	r6, #0
  408cae:	db02      	blt.n	408cb6 <zbar_scan_y+0x102>
            scn->cur_edge += x << ZBAR_FIXED;
            dbprintf(1, "\n");
        }
    }
    else
        dbprintf(1, "\n");
  408cb0:	e06f      	b.n	408d92 <zbar_scan_y+0x1de>
    dbprintf(1, "scan: x=%d y=%d y0=%d y1=%d y2=%d",
             x, y, y0_1, y1_1, y2_1);

    edge = ZBAR_NONE;
    /* 2nd zero-crossing is 1st local min/max - could be edge */
    if((!y2_1 ||
  408cb2:	2e00      	cmp	r6, #0
  408cb4:	dd6d      	ble.n	408d92 <zbar_scan_y+0x1de>
        ((y2_1 > 0) ? y2_2 < 0 : y2_2 > 0)) &&
       (calc_thresh(scn) <= abs(y1_1)))
  408cb6:	6878      	ldr	r0, [r7, #4]
  408cb8:	4b3b      	ldr	r3, [pc, #236]	; (408da8 <zbar_scan_y+0x1f4>)
  408cba:	4798      	blx	r3
  408cbc:	4602      	mov	r2, r0
  408cbe:	ea84 73e4 	eor.w	r3, r4, r4, asr #31
  408cc2:	eba3 73e4 	sub.w	r3, r3, r4, asr #31
             x, y, y0_1, y1_1, y2_1);

    edge = ZBAR_NONE;
    /* 2nd zero-crossing is 1st local min/max - could be edge */
    if((!y2_1 ||
        ((y2_1 > 0) ? y2_2 < 0 : y2_2 > 0)) &&
  408cc6:	429a      	cmp	r2, r3
  408cc8:	d863      	bhi.n	408d92 <zbar_scan_y+0x1de>
       (calc_thresh(scn) <= abs(y1_1)))
    {
        /* check for 1st sign change */
        char y1_rev = (scn->y1_sign > 0) ? y1_1 < 0 : y1_1 > 0;
  408cca:	687b      	ldr	r3, [r7, #4]
  408ccc:	69db      	ldr	r3, [r3, #28]
  408cce:	2b00      	cmp	r3, #0
  408cd0:	dd02      	ble.n	408cd8 <zbar_scan_y+0x124>
  408cd2:	0fe3      	lsrs	r3, r4, #31
  408cd4:	b2db      	uxtb	r3, r3
  408cd6:	e004      	b.n	408ce2 <zbar_scan_y+0x12e>
  408cd8:	2c00      	cmp	r4, #0
  408cda:	bfcc      	ite	gt
  408cdc:	2301      	movgt	r3, #1
  408cde:	2300      	movle	r3, #0
  408ce0:	b2db      	uxtb	r3, r3
  408ce2:	737b      	strb	r3, [r7, #13]
        if(y1_rev)
  408ce4:	7b7b      	ldrb	r3, [r7, #13]
  408ce6:	2b00      	cmp	r3, #0
  408ce8:	d005      	beq.n	408cf6 <zbar_scan_y+0x142>
            /* intensity change reversal - finalize previous edge */
            edge = process_edge(scn, y1_1);
  408cea:	6878      	ldr	r0, [r7, #4]
  408cec:	4621      	mov	r1, r4
  408cee:	4b2f      	ldr	r3, [pc, #188]	; (408dac <zbar_scan_y+0x1f8>)
  408cf0:	4798      	blx	r3
  408cf2:	4603      	mov	r3, r0
  408cf4:	81fb      	strh	r3, [r7, #14]

        if(y1_rev || (abs(scn->y1_sign) < abs(y1_1))) {
  408cf6:	7b7b      	ldrb	r3, [r7, #13]
  408cf8:	2b00      	cmp	r3, #0
  408cfa:	d10b      	bne.n	408d14 <zbar_scan_y+0x160>
  408cfc:	687b      	ldr	r3, [r7, #4]
  408cfe:	69db      	ldr	r3, [r3, #28]
  408d00:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
  408d04:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
  408d08:	ea84 73e4 	eor.w	r3, r4, r4, asr #31
  408d0c:	eba3 73e4 	sub.w	r3, r3, r4, asr #31
  408d10:	429a      	cmp	r2, r3
  408d12:	da3d      	bge.n	408d90 <zbar_scan_y+0x1dc>
            int d;
            scn->y1_sign = y1_1;
  408d14:	687b      	ldr	r3, [r7, #4]
  408d16:	61dc      	str	r4, [r3, #28]

            /* adaptive thresholding */
            /* start at multiple of new min/max */
            scn->y1_thresh = (abs(y1_1) * THRESH_INIT + ROUND) >> ZBAR_FIXED;
  408d18:	ea84 73e4 	eor.w	r3, r4, r4, asr #31
  408d1c:	eba3 73e4 	sub.w	r3, r3, r4, asr #31
  408d20:	461a      	mov	r2, r3
  408d22:	4613      	mov	r3, r2
  408d24:	00db      	lsls	r3, r3, #3
  408d26:	1a9b      	subs	r3, r3, r2
  408d28:	005b      	lsls	r3, r3, #1
  408d2a:	3310      	adds	r3, #16
  408d2c:	095a      	lsrs	r2, r3, #5
  408d2e:	687b      	ldr	r3, [r7, #4]
  408d30:	621a      	str	r2, [r3, #32]
            dbprintf(1, "\tthr=%d", scn->y1_thresh);
  408d32:	bf00      	nop
            if(scn->y1_thresh < scn->y1_min_thresh)
  408d34:	687b      	ldr	r3, [r7, #4]
  408d36:	6a1a      	ldr	r2, [r3, #32]
  408d38:	687b      	ldr	r3, [r7, #4]
  408d3a:	685b      	ldr	r3, [r3, #4]
  408d3c:	429a      	cmp	r2, r3
  408d3e:	d203      	bcs.n	408d48 <zbar_scan_y+0x194>
                scn->y1_thresh = scn->y1_min_thresh;
  408d40:	687b      	ldr	r3, [r7, #4]
  408d42:	685a      	ldr	r2, [r3, #4]
  408d44:	687b      	ldr	r3, [r7, #4]
  408d46:	621a      	str	r2, [r3, #32]

            /* update current edge */
            d = y2_1 - y2_2;
  408d48:	ebc6 0308 	rsb	r3, r6, r8
  408d4c:	60bb      	str	r3, [r7, #8]
            scn->cur_edge = 1 << ZBAR_FIXED;
  408d4e:	687b      	ldr	r3, [r7, #4]
  408d50:	2220      	movs	r2, #32
  408d52:	625a      	str	r2, [r3, #36]	; 0x24
            if(!d)
  408d54:	68bb      	ldr	r3, [r7, #8]
  408d56:	2b00      	cmp	r3, #0
  408d58:	d105      	bne.n	408d66 <zbar_scan_y+0x1b2>
                scn->cur_edge >>= 1;
  408d5a:	687b      	ldr	r3, [r7, #4]
  408d5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  408d5e:	085a      	lsrs	r2, r3, #1
  408d60:	687b      	ldr	r3, [r7, #4]
  408d62:	625a      	str	r2, [r3, #36]	; 0x24
  408d64:	e00d      	b.n	408d82 <zbar_scan_y+0x1ce>
            else if(y2_1)
  408d66:	f1b8 0f00 	cmp.w	r8, #0
  408d6a:	d00a      	beq.n	408d82 <zbar_scan_y+0x1ce>
                /* interpolate zero crossing */
                scn->cur_edge -= ((y2_1 << ZBAR_FIXED) + 1) / d;
  408d6c:	687b      	ldr	r3, [r7, #4]
  408d6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  408d70:	ea4f 1248 	mov.w	r2, r8, lsl #5
  408d74:	1c51      	adds	r1, r2, #1
  408d76:	68ba      	ldr	r2, [r7, #8]
  408d78:	fb91 f2f2 	sdiv	r2, r1, r2
  408d7c:	1a9a      	subs	r2, r3, r2
  408d7e:	687b      	ldr	r3, [r7, #4]
  408d80:	625a      	str	r2, [r3, #36]	; 0x24
            scn->cur_edge += x << ZBAR_FIXED;
  408d82:	687b      	ldr	r3, [r7, #4]
  408d84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
  408d86:	016a      	lsls	r2, r5, #5
  408d88:	441a      	add	r2, r3
  408d8a:	687b      	ldr	r3, [r7, #4]
  408d8c:	625a      	str	r2, [r3, #36]	; 0x24
            dbprintf(1, "\n");
  408d8e:	bf00      	nop
    edge = ZBAR_NONE;
    /* 2nd zero-crossing is 1st local min/max - could be edge */
    if((!y2_1 ||
        ((y2_1 > 0) ? y2_2 < 0 : y2_2 > 0)) &&
       (calc_thresh(scn) <= abs(y1_1)))
    {
  408d90:	e000      	b.n	408d94 <zbar_scan_y+0x1e0>
            scn->cur_edge += x << ZBAR_FIXED;
            dbprintf(1, "\n");
        }
    }
    else
        dbprintf(1, "\n");
  408d92:	bf00      	nop
    /* FIXME add fall-thru pass to decoder after heuristic "idle" period
       (eg, 6-8 * last width) */
    scn->x = x + 1;
  408d94:	1c6b      	adds	r3, r5, #1
  408d96:	461a      	mov	r2, r3
  408d98:	687b      	ldr	r3, [r7, #4]
  408d9a:	609a      	str	r2, [r3, #8]
    return(edge);
  408d9c:	89fb      	ldrh	r3, [r7, #14]
}
  408d9e:	4618      	mov	r0, r3
  408da0:	3714      	adds	r7, #20
  408da2:	46bd      	mov	sp, r7
  408da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408da8:	004089b9 	.word	0x004089b9
  408dac:	00408a45 	.word	0x00408a45

00408db0 <_zbar_refcnt>:

typedef int refcnt_t;

static inline int _zbar_refcnt (refcnt_t *cnt,
                                int delta)
{
  408db0:	b590      	push	{r4, r7, lr}
  408db2:	b085      	sub	sp, #20
  408db4:	af00      	add	r7, sp, #0
  408db6:	6078      	str	r0, [r7, #4]
  408db8:	6039      	str	r1, [r7, #0]
    int rc = (*cnt += delta);
  408dba:	687b      	ldr	r3, [r7, #4]
  408dbc:	681a      	ldr	r2, [r3, #0]
  408dbe:	683b      	ldr	r3, [r7, #0]
  408dc0:	441a      	add	r2, r3
  408dc2:	687b      	ldr	r3, [r7, #4]
  408dc4:	601a      	str	r2, [r3, #0]
  408dc6:	687b      	ldr	r3, [r7, #4]
  408dc8:	681b      	ldr	r3, [r3, #0]
  408dca:	60fb      	str	r3, [r7, #12]
    assert(rc >= 0);
  408dcc:	68fb      	ldr	r3, [r7, #12]
  408dce:	2b00      	cmp	r3, #0
  408dd0:	da05      	bge.n	408dde <_zbar_refcnt+0x2e>
  408dd2:	4805      	ldr	r0, [pc, #20]	; (408de8 <_zbar_refcnt+0x38>)
  408dd4:	2157      	movs	r1, #87	; 0x57
  408dd6:	4a05      	ldr	r2, [pc, #20]	; (408dec <_zbar_refcnt+0x3c>)
  408dd8:	4b05      	ldr	r3, [pc, #20]	; (408df0 <_zbar_refcnt+0x40>)
  408dda:	4c06      	ldr	r4, [pc, #24]	; (408df4 <_zbar_refcnt+0x44>)
  408ddc:	47a0      	blx	r4
    return(rc);
  408dde:	68fb      	ldr	r3, [r7, #12]
}
  408de0:	4618      	mov	r0, r3
  408de2:	3714      	adds	r7, #20
  408de4:	46bd      	mov	sp, r7
  408de6:	bd90      	pop	{r4, r7, pc}
  408de8:	0043cb54 	.word	0x0043cb54
  408dec:	0043cdf4 	.word	0x0043cdf4
  408df0:	0043cb80 	.word	0x0043cb80
  408df4:	00433d55 	.word	0x00433d55

00408df8 <_zbar_symbol_refcnt>:
    sym->pts[i].y = y;
}

static inline void _zbar_symbol_refcnt (zbar_symbol_t *sym,
                                        int delta)
{
  408df8:	b580      	push	{r7, lr}
  408dfa:	b082      	sub	sp, #8
  408dfc:	af00      	add	r7, sp, #0
  408dfe:	6078      	str	r0, [r7, #4]
  408e00:	6039      	str	r1, [r7, #0]
    if(!_zbar_refcnt(&sym->refcnt, delta) && delta <= 0)
  408e02:	687b      	ldr	r3, [r7, #4]
  408e04:	3328      	adds	r3, #40	; 0x28
  408e06:	4618      	mov	r0, r3
  408e08:	6839      	ldr	r1, [r7, #0]
  408e0a:	4b07      	ldr	r3, [pc, #28]	; (408e28 <_zbar_symbol_refcnt+0x30>)
  408e0c:	4798      	blx	r3
  408e0e:	4603      	mov	r3, r0
  408e10:	2b00      	cmp	r3, #0
  408e12:	d105      	bne.n	408e20 <_zbar_symbol_refcnt+0x28>
  408e14:	683b      	ldr	r3, [r7, #0]
  408e16:	2b00      	cmp	r3, #0
  408e18:	dc02      	bgt.n	408e20 <_zbar_symbol_refcnt+0x28>
        _zbar_symbol_free(sym);
  408e1a:	6878      	ldr	r0, [r7, #4]
  408e1c:	4b03      	ldr	r3, [pc, #12]	; (408e2c <_zbar_symbol_refcnt+0x34>)
  408e1e:	4798      	blx	r3
}
  408e20:	3708      	adds	r7, #8
  408e22:	46bd      	mov	sp, r7
  408e24:	bd80      	pop	{r7, pc}
  408e26:	bf00      	nop
  408e28:	00408db1 	.word	0x00408db1
  408e2c:	00409169 	.word	0x00409169

00408e30 <zbar_get_symbol_name>:
#include "symbol.h"

//#include <FreeRTOS.h>

const char *zbar_get_symbol_name (zbar_symbol_type_t sym)
{
  408e30:	b480      	push	{r7}
  408e32:	b083      	sub	sp, #12
  408e34:	af00      	add	r7, sp, #0
  408e36:	4603      	mov	r3, r0
  408e38:	80fb      	strh	r3, [r7, #6]
    switch(sym & ZBAR_SYMBOL) {
  408e3a:	88fb      	ldrh	r3, [r7, #6]
  408e3c:	b2db      	uxtb	r3, r3
  408e3e:	3b02      	subs	r3, #2
  408e40:	2b7e      	cmp	r3, #126	; 0x7e
  408e42:	f200 8125 	bhi.w	409090 <zbar_get_symbol_name+0x260>
  408e46:	a201      	add	r2, pc, #4	; (adr r2, 408e4c <zbar_get_symbol_name+0x1c>)
  408e48:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  408e4c:	00409049 	.word	0x00409049
  408e50:	00409091 	.word	0x00409091
  408e54:	00409091 	.word	0x00409091
  408e58:	0040904d 	.word	0x0040904d
  408e5c:	00409091 	.word	0x00409091
  408e60:	00409091 	.word	0x00409091
  408e64:	00409051 	.word	0x00409051
  408e68:	00409055 	.word	0x00409055
  408e6c:	00409059 	.word	0x00409059
  408e70:	00409091 	.word	0x00409091
  408e74:	0040905d 	.word	0x0040905d
  408e78:	00409061 	.word	0x00409061
  408e7c:	00409065 	.word	0x00409065
  408e80:	00409069 	.word	0x00409069
  408e84:	00409091 	.word	0x00409091
  408e88:	00409091 	.word	0x00409091
  408e8c:	00409091 	.word	0x00409091
  408e90:	00409091 	.word	0x00409091
  408e94:	00409091 	.word	0x00409091
  408e98:	00409091 	.word	0x00409091
  408e9c:	00409091 	.word	0x00409091
  408ea0:	00409091 	.word	0x00409091
  408ea4:	00409091 	.word	0x00409091
  408ea8:	0040906d 	.word	0x0040906d
  408eac:	00409091 	.word	0x00409091
  408eb0:	00409091 	.word	0x00409091
  408eb4:	00409091 	.word	0x00409091
  408eb8:	00409091 	.word	0x00409091
  408ebc:	00409091 	.word	0x00409091
  408ec0:	00409091 	.word	0x00409091
  408ec4:	00409091 	.word	0x00409091
  408ec8:	00409091 	.word	0x00409091
  408ecc:	00409071 	.word	0x00409071
  408ed0:	00409075 	.word	0x00409075
  408ed4:	00409091 	.word	0x00409091
  408ed8:	00409091 	.word	0x00409091
  408edc:	00409079 	.word	0x00409079
  408ee0:	0040907d 	.word	0x0040907d
  408ee4:	00409091 	.word	0x00409091
  408ee8:	00409091 	.word	0x00409091
  408eec:	00409091 	.word	0x00409091
  408ef0:	00409091 	.word	0x00409091
  408ef4:	00409091 	.word	0x00409091
  408ef8:	00409091 	.word	0x00409091
  408efc:	00409091 	.word	0x00409091
  408f00:	00409091 	.word	0x00409091
  408f04:	00409091 	.word	0x00409091
  408f08:	00409091 	.word	0x00409091
  408f0c:	00409091 	.word	0x00409091
  408f10:	00409091 	.word	0x00409091
  408f14:	00409091 	.word	0x00409091
  408f18:	00409091 	.word	0x00409091
  408f1c:	00409091 	.word	0x00409091
  408f20:	00409091 	.word	0x00409091
  408f24:	00409091 	.word	0x00409091
  408f28:	00409089 	.word	0x00409089
  408f2c:	00409091 	.word	0x00409091
  408f30:	00409091 	.word	0x00409091
  408f34:	00409091 	.word	0x00409091
  408f38:	00409091 	.word	0x00409091
  408f3c:	00409091 	.word	0x00409091
  408f40:	00409091 	.word	0x00409091
  408f44:	0040908d 	.word	0x0040908d
  408f48:	00409091 	.word	0x00409091
  408f4c:	00409091 	.word	0x00409091
  408f50:	00409091 	.word	0x00409091
  408f54:	00409091 	.word	0x00409091
  408f58:	00409091 	.word	0x00409091
  408f5c:	00409091 	.word	0x00409091
  408f60:	00409091 	.word	0x00409091
  408f64:	00409091 	.word	0x00409091
  408f68:	00409091 	.word	0x00409091
  408f6c:	00409091 	.word	0x00409091
  408f70:	00409091 	.word	0x00409091
  408f74:	00409091 	.word	0x00409091
  408f78:	00409091 	.word	0x00409091
  408f7c:	00409091 	.word	0x00409091
  408f80:	00409091 	.word	0x00409091
  408f84:	00409091 	.word	0x00409091
  408f88:	00409091 	.word	0x00409091
  408f8c:	00409091 	.word	0x00409091
  408f90:	00409091 	.word	0x00409091
  408f94:	00409091 	.word	0x00409091
  408f98:	00409091 	.word	0x00409091
  408f9c:	00409091 	.word	0x00409091
  408fa0:	00409091 	.word	0x00409091
  408fa4:	00409091 	.word	0x00409091
  408fa8:	00409091 	.word	0x00409091
  408fac:	00409091 	.word	0x00409091
  408fb0:	00409091 	.word	0x00409091
  408fb4:	00409091 	.word	0x00409091
  408fb8:	00409081 	.word	0x00409081
  408fbc:	00409091 	.word	0x00409091
  408fc0:	00409091 	.word	0x00409091
  408fc4:	00409091 	.word	0x00409091
  408fc8:	00409091 	.word	0x00409091
  408fcc:	00409091 	.word	0x00409091
  408fd0:	00409091 	.word	0x00409091
  408fd4:	00409091 	.word	0x00409091
  408fd8:	00409091 	.word	0x00409091
  408fdc:	00409091 	.word	0x00409091
  408fe0:	00409091 	.word	0x00409091
  408fe4:	00409091 	.word	0x00409091
  408fe8:	00409091 	.word	0x00409091
  408fec:	00409091 	.word	0x00409091
  408ff0:	00409091 	.word	0x00409091
  408ff4:	00409091 	.word	0x00409091
  408ff8:	00409091 	.word	0x00409091
  408ffc:	00409091 	.word	0x00409091
  409000:	00409091 	.word	0x00409091
  409004:	00409091 	.word	0x00409091
  409008:	00409091 	.word	0x00409091
  40900c:	00409091 	.word	0x00409091
  409010:	00409091 	.word	0x00409091
  409014:	00409091 	.word	0x00409091
  409018:	00409091 	.word	0x00409091
  40901c:	00409091 	.word	0x00409091
  409020:	00409091 	.word	0x00409091
  409024:	00409091 	.word	0x00409091
  409028:	00409091 	.word	0x00409091
  40902c:	00409091 	.word	0x00409091
  409030:	00409091 	.word	0x00409091
  409034:	00409091 	.word	0x00409091
  409038:	00409091 	.word	0x00409091
  40903c:	00409091 	.word	0x00409091
  409040:	00409091 	.word	0x00409091
  409044:	00409085 	.word	0x00409085
    case ZBAR_EAN2: return("EAN-2");
  409048:	4b15      	ldr	r3, [pc, #84]	; (4090a0 <zbar_get_symbol_name+0x270>)
  40904a:	e022      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_EAN5: return("EAN-5");
  40904c:	4b15      	ldr	r3, [pc, #84]	; (4090a4 <zbar_get_symbol_name+0x274>)
  40904e:	e020      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_EAN8: return("EAN-8");
  409050:	4b15      	ldr	r3, [pc, #84]	; (4090a8 <zbar_get_symbol_name+0x278>)
  409052:	e01e      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_UPCE: return("UPC-E");
  409054:	4b15      	ldr	r3, [pc, #84]	; (4090ac <zbar_get_symbol_name+0x27c>)
  409056:	e01c      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_ISBN10: return("ISBN-10");
  409058:	4b15      	ldr	r3, [pc, #84]	; (4090b0 <zbar_get_symbol_name+0x280>)
  40905a:	e01a      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_UPCA: return("UPC-A");
  40905c:	4b15      	ldr	r3, [pc, #84]	; (4090b4 <zbar_get_symbol_name+0x284>)
  40905e:	e018      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_EAN13: return("EAN-13");
  409060:	4b15      	ldr	r3, [pc, #84]	; (4090b8 <zbar_get_symbol_name+0x288>)
  409062:	e016      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_ISBN13: return("ISBN-13");
  409064:	4b15      	ldr	r3, [pc, #84]	; (4090bc <zbar_get_symbol_name+0x28c>)
  409066:	e014      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_COMPOSITE: return("COMPOSITE");
  409068:	4b15      	ldr	r3, [pc, #84]	; (4090c0 <zbar_get_symbol_name+0x290>)
  40906a:	e012      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_I25: return("I2/5");
  40906c:	4b15      	ldr	r3, [pc, #84]	; (4090c4 <zbar_get_symbol_name+0x294>)
  40906e:	e010      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_DATABAR: return("DataBar");
  409070:	4b15      	ldr	r3, [pc, #84]	; (4090c8 <zbar_get_symbol_name+0x298>)
  409072:	e00e      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_DATABAR_EXP: return("DataBar-Exp");
  409074:	4b15      	ldr	r3, [pc, #84]	; (4090cc <zbar_get_symbol_name+0x29c>)
  409076:	e00c      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_CODABAR: return("Codabar");
  409078:	4b15      	ldr	r3, [pc, #84]	; (4090d0 <zbar_get_symbol_name+0x2a0>)
  40907a:	e00a      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_CODE39: return("CODE-39");
  40907c:	4b15      	ldr	r3, [pc, #84]	; (4090d4 <zbar_get_symbol_name+0x2a4>)
  40907e:	e008      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_CODE93: return("CODE-93");
  409080:	4b15      	ldr	r3, [pc, #84]	; (4090d8 <zbar_get_symbol_name+0x2a8>)
  409082:	e006      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_CODE128: return("CODE-128");
  409084:	4b15      	ldr	r3, [pc, #84]	; (4090dc <zbar_get_symbol_name+0x2ac>)
  409086:	e004      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_PDF417: return("PDF417");
  409088:	4b15      	ldr	r3, [pc, #84]	; (4090e0 <zbar_get_symbol_name+0x2b0>)
  40908a:	e002      	b.n	409092 <zbar_get_symbol_name+0x262>
    case ZBAR_QRCODE: return("QR-Code");
  40908c:	4b15      	ldr	r3, [pc, #84]	; (4090e4 <zbar_get_symbol_name+0x2b4>)
  40908e:	e000      	b.n	409092 <zbar_get_symbol_name+0x262>
    default: return("UNKNOWN");
  409090:	4b15      	ldr	r3, [pc, #84]	; (4090e8 <zbar_get_symbol_name+0x2b8>)
    }
}
  409092:	4618      	mov	r0, r3
  409094:	370c      	adds	r7, #12
  409096:	46bd      	mov	sp, r7
  409098:	f85d 7b04 	ldr.w	r7, [sp], #4
  40909c:	4770      	bx	lr
  40909e:	bf00      	nop
  4090a0:	0043cb88 	.word	0x0043cb88
  4090a4:	0043cb90 	.word	0x0043cb90
  4090a8:	0043cb98 	.word	0x0043cb98
  4090ac:	0043cba0 	.word	0x0043cba0
  4090b0:	0043cba8 	.word	0x0043cba8
  4090b4:	0043cbb0 	.word	0x0043cbb0
  4090b8:	0043cbb8 	.word	0x0043cbb8
  4090bc:	0043cbc0 	.word	0x0043cbc0
  4090c0:	0043cbc8 	.word	0x0043cbc8
  4090c4:	0043cbd4 	.word	0x0043cbd4
  4090c8:	0043cbdc 	.word	0x0043cbdc
  4090cc:	0043cbe4 	.word	0x0043cbe4
  4090d0:	0043cbf0 	.word	0x0043cbf0
  4090d4:	0043cbf8 	.word	0x0043cbf8
  4090d8:	0043cc00 	.word	0x0043cc00
  4090dc:	0043cc08 	.word	0x0043cc08
  4090e0:	0043cc14 	.word	0x0043cc14
  4090e4:	0043cc1c 	.word	0x0043cc1c
  4090e8:	0043cc24 	.word	0x0043cc24

004090ec <_zbar_get_symbol_hash>:
    default: return("UNKNOWN");
    }
}

int _zbar_get_symbol_hash (zbar_symbol_type_t sym)
{
  4090ec:	b590      	push	{r4, r7, lr}
  4090ee:	b085      	sub	sp, #20
  4090f0:	af00      	add	r7, sp, #0
  4090f2:	4603      	mov	r3, r0
  4090f4:	80fb      	strh	r3, [r7, #6]
        0x00, 0x01, 0x10, 0x11,   -1, 0x11, 0x16, 0x0c,
	0x05, 0x06, 0x08,   -1, 0x04, 0x03, 0x07, 0x12,
	  -1,   -1,   -1,   -1,   -1,   -1,   -1, 0x02,
	  -1, 0x00, 0x12, 0x0c, 0x0b, 0x1d, 0x0a, 0x00,
     };
    int g0 = hash[sym & 0x1f];
  4090f6:	88fb      	ldrh	r3, [r7, #6]
  4090f8:	f003 031f 	and.w	r3, r3, #31
  4090fc:	4a15      	ldr	r2, [pc, #84]	; (409154 <_zbar_get_symbol_hash+0x68>)
  4090fe:	5cd3      	ldrb	r3, [r2, r3]
  409100:	b25b      	sxtb	r3, r3
  409102:	60fb      	str	r3, [r7, #12]
    int g1 = hash[~(sym >> 4) & 0x1f];
  409104:	88fb      	ldrh	r3, [r7, #6]
  409106:	091b      	lsrs	r3, r3, #4
  409108:	b29b      	uxth	r3, r3
  40910a:	43db      	mvns	r3, r3
  40910c:	f003 031f 	and.w	r3, r3, #31
  409110:	4a10      	ldr	r2, [pc, #64]	; (409154 <_zbar_get_symbol_hash+0x68>)
  409112:	5cd3      	ldrb	r3, [r2, r3]
  409114:	b25b      	sxtb	r3, r3
  409116:	60bb      	str	r3, [r7, #8]
    assert(g0 >= 0 && g1 >= 0);
  409118:	68fb      	ldr	r3, [r7, #12]
  40911a:	2b00      	cmp	r3, #0
  40911c:	db02      	blt.n	409124 <_zbar_get_symbol_hash+0x38>
  40911e:	68bb      	ldr	r3, [r7, #8]
  409120:	2b00      	cmp	r3, #0
  409122:	da05      	bge.n	409130 <_zbar_get_symbol_hash+0x44>
  409124:	480c      	ldr	r0, [pc, #48]	; (409158 <_zbar_get_symbol_hash+0x6c>)
  409126:	216f      	movs	r1, #111	; 0x6f
  409128:	4a0c      	ldr	r2, [pc, #48]	; (40915c <_zbar_get_symbol_hash+0x70>)
  40912a:	4b0d      	ldr	r3, [pc, #52]	; (409160 <_zbar_get_symbol_hash+0x74>)
  40912c:	4c0d      	ldr	r4, [pc, #52]	; (409164 <_zbar_get_symbol_hash+0x78>)
  40912e:	47a0      	blx	r4
    if(g0 < 0 || g1 < 0)
  409130:	68fb      	ldr	r3, [r7, #12]
  409132:	2b00      	cmp	r3, #0
  409134:	db02      	blt.n	40913c <_zbar_get_symbol_hash+0x50>
  409136:	68bb      	ldr	r3, [r7, #8]
  409138:	2b00      	cmp	r3, #0
  40913a:	da01      	bge.n	409140 <_zbar_get_symbol_hash+0x54>
        return(0);
  40913c:	2300      	movs	r3, #0
  40913e:	e004      	b.n	40914a <_zbar_get_symbol_hash+0x5e>
    return((g0 + g1) & 0x1f);
  409140:	68fa      	ldr	r2, [r7, #12]
  409142:	68bb      	ldr	r3, [r7, #8]
  409144:	4413      	add	r3, r2
  409146:	f003 031f 	and.w	r3, r3, #31
}
  40914a:	4618      	mov	r0, r3
  40914c:	3714      	adds	r7, #20
  40914e:	46bd      	mov	sp, r7
  409150:	bd90      	pop	{r4, r7, pc}
  409152:	bf00      	nop
  409154:	0043cdbc 	.word	0x0043cdbc
  409158:	0043ccbc 	.word	0x0043ccbc
  40915c:	0043cddc 	.word	0x0043cddc
  409160:	0043cce0 	.word	0x0043cce0
  409164:	00433d55 	.word	0x00433d55

00409168 <_zbar_symbol_free>:

void _zbar_symbol_free (zbar_symbol_t *sym)
{
  409168:	b580      	push	{r7, lr}
  40916a:	b082      	sub	sp, #8
  40916c:	af00      	add	r7, sp, #0
  40916e:	6078      	str	r0, [r7, #4]
    if(sym->syms) {
  409170:	687b      	ldr	r3, [r7, #4]
  409172:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  409174:	2b00      	cmp	r3, #0
  409176:	d009      	beq.n	40918c <_zbar_symbol_free+0x24>
        zbar_symbol_set_ref(sym->syms, -1);
  409178:	687b      	ldr	r3, [r7, #4]
  40917a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40917c:	4618      	mov	r0, r3
  40917e:	f04f 31ff 	mov.w	r1, #4294967295
  409182:	4b10      	ldr	r3, [pc, #64]	; (4091c4 <_zbar_symbol_free+0x5c>)
  409184:	4798      	blx	r3
        sym->syms = NULL;
  409186:	687b      	ldr	r3, [r7, #4]
  409188:	2200      	movs	r2, #0
  40918a:	631a      	str	r2, [r3, #48]	; 0x30
    }
    if(sym->pts)
  40918c:	687b      	ldr	r3, [r7, #4]
  40918e:	6a1b      	ldr	r3, [r3, #32]
  409190:	2b00      	cmp	r3, #0
  409192:	d004      	beq.n	40919e <_zbar_symbol_free+0x36>
        free(sym->pts);
  409194:	687b      	ldr	r3, [r7, #4]
  409196:	6a1b      	ldr	r3, [r3, #32]
  409198:	4618      	mov	r0, r3
  40919a:	4b0b      	ldr	r3, [pc, #44]	; (4091c8 <_zbar_symbol_free+0x60>)
  40919c:	4798      	blx	r3
    if(sym->data_alloc && sym->data)
  40919e:	687b      	ldr	r3, [r7, #4]
  4091a0:	68db      	ldr	r3, [r3, #12]
  4091a2:	2b00      	cmp	r3, #0
  4091a4:	d008      	beq.n	4091b8 <_zbar_symbol_free+0x50>
  4091a6:	687b      	ldr	r3, [r7, #4]
  4091a8:	695b      	ldr	r3, [r3, #20]
  4091aa:	2b00      	cmp	r3, #0
  4091ac:	d004      	beq.n	4091b8 <_zbar_symbol_free+0x50>
        free(sym->data);
  4091ae:	687b      	ldr	r3, [r7, #4]
  4091b0:	695b      	ldr	r3, [r3, #20]
  4091b2:	4618      	mov	r0, r3
  4091b4:	4b04      	ldr	r3, [pc, #16]	; (4091c8 <_zbar_symbol_free+0x60>)
  4091b6:	4798      	blx	r3
    free(sym);
  4091b8:	6878      	ldr	r0, [r7, #4]
  4091ba:	4b03      	ldr	r3, [pc, #12]	; (4091c8 <_zbar_symbol_free+0x60>)
  4091bc:	4798      	blx	r3
}
  4091be:	3708      	adds	r7, #8
  4091c0:	46bd      	mov	sp, r7
  4091c2:	bd80      	pop	{r7, pc}
  4091c4:	0040929d 	.word	0x0040929d
  4091c8:	004348ad 	.word	0x004348ad

004091cc <zbar_symbol_get_type>:
    zbar_symbol_t *ncsym = (zbar_symbol_t*)sym;
    _zbar_symbol_refcnt(ncsym, refs);
}

zbar_symbol_type_t zbar_symbol_get_type (const zbar_symbol_t *sym)
{
  4091cc:	b480      	push	{r7}
  4091ce:	b083      	sub	sp, #12
  4091d0:	af00      	add	r7, sp, #0
  4091d2:	6078      	str	r0, [r7, #4]
    return(sym->type);
  4091d4:	687b      	ldr	r3, [r7, #4]
  4091d6:	881b      	ldrh	r3, [r3, #0]
}
  4091d8:	4618      	mov	r0, r3
  4091da:	370c      	adds	r7, #12
  4091dc:	46bd      	mov	sp, r7
  4091de:	f85d 7b04 	ldr.w	r7, [sp], #4
  4091e2:	4770      	bx	lr

004091e4 <zbar_symbol_get_data>:
{
    return(sym->modifiers);
}

const char *zbar_symbol_get_data (const zbar_symbol_t *sym)
{
  4091e4:	b480      	push	{r7}
  4091e6:	b083      	sub	sp, #12
  4091e8:	af00      	add	r7, sp, #0
  4091ea:	6078      	str	r0, [r7, #4]
    return(sym->data);
  4091ec:	687b      	ldr	r3, [r7, #4]
  4091ee:	695b      	ldr	r3, [r3, #20]
}
  4091f0:	4618      	mov	r0, r3
  4091f2:	370c      	adds	r7, #12
  4091f4:	46bd      	mov	sp, r7
  4091f6:	f85d 7b04 	ldr.w	r7, [sp], #4
  4091fa:	4770      	bx	lr

004091fc <zbar_symbol_next>:
{
    return(sym->orient);
}

const zbar_symbol_t *zbar_symbol_next (const zbar_symbol_t *sym)
{
  4091fc:	b480      	push	{r7}
  4091fe:	b083      	sub	sp, #12
  409200:	af00      	add	r7, sp, #0
  409202:	6078      	str	r0, [r7, #4]
    return((sym) ? sym->next : NULL);
  409204:	687b      	ldr	r3, [r7, #4]
  409206:	2b00      	cmp	r3, #0
  409208:	d002      	beq.n	409210 <zbar_symbol_next+0x14>
  40920a:	687b      	ldr	r3, [r7, #4]
  40920c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40920e:	e000      	b.n	409212 <zbar_symbol_next+0x16>
  409210:	2300      	movs	r3, #0
}
  409212:	4618      	mov	r0, r3
  409214:	370c      	adds	r7, #12
  409216:	46bd      	mov	sp, r7
  409218:	f85d 7b04 	ldr.w	r7, [sp], #4
  40921c:	4770      	bx	lr
  40921e:	bf00      	nop

00409220 <_zbar_symbol_set_create>:
    return(*buf);
}


zbar_symbol_set_t *_zbar_symbol_set_create ()
{
  409220:	b580      	push	{r7, lr}
  409222:	b082      	sub	sp, #8
  409224:	af00      	add	r7, sp, #0
    zbar_symbol_set_t *syms = calloc(1, sizeof(*syms));
  409226:	2001      	movs	r0, #1
  409228:	2110      	movs	r1, #16
  40922a:	4b07      	ldr	r3, [pc, #28]	; (409248 <_zbar_symbol_set_create+0x28>)
  40922c:	4798      	blx	r3
  40922e:	4603      	mov	r3, r0
  409230:	607b      	str	r3, [r7, #4]
    _zbar_refcnt(&syms->refcnt, 1);
  409232:	687b      	ldr	r3, [r7, #4]
  409234:	4618      	mov	r0, r3
  409236:	2101      	movs	r1, #1
  409238:	4b04      	ldr	r3, [pc, #16]	; (40924c <_zbar_symbol_set_create+0x2c>)
  40923a:	4798      	blx	r3
    return(syms);
  40923c:	687b      	ldr	r3, [r7, #4]
}
  40923e:	4618      	mov	r0, r3
  409240:	3708      	adds	r7, #8
  409242:	46bd      	mov	sp, r7
  409244:	bd80      	pop	{r7, pc}
  409246:	bf00      	nop
  409248:	00433d91 	.word	0x00433d91
  40924c:	00408db1 	.word	0x00408db1

00409250 <_zbar_symbol_set_free>:

inline void _zbar_symbol_set_free (zbar_symbol_set_t *syms)
{
  409250:	b580      	push	{r7, lr}
  409252:	b084      	sub	sp, #16
  409254:	af00      	add	r7, sp, #0
  409256:	6078      	str	r0, [r7, #4]
    zbar_symbol_t *sym, *next;
    for(sym = syms->head; sym; sym = next) {
  409258:	687b      	ldr	r3, [r7, #4]
  40925a:	689b      	ldr	r3, [r3, #8]
  40925c:	60fb      	str	r3, [r7, #12]
  40925e:	e00c      	b.n	40927a <_zbar_symbol_set_free+0x2a>
        next = sym->next;
  409260:	68fb      	ldr	r3, [r7, #12]
  409262:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  409264:	60bb      	str	r3, [r7, #8]
        sym->next = NULL;
  409266:	68fb      	ldr	r3, [r7, #12]
  409268:	2200      	movs	r2, #0
  40926a:	62da      	str	r2, [r3, #44]	; 0x2c
        _zbar_symbol_refcnt(sym, -1);
  40926c:	68f8      	ldr	r0, [r7, #12]
  40926e:	f04f 31ff 	mov.w	r1, #4294967295
  409272:	4b08      	ldr	r3, [pc, #32]	; (409294 <_zbar_symbol_set_free+0x44>)
  409274:	4798      	blx	r3
}

inline void _zbar_symbol_set_free (zbar_symbol_set_t *syms)
{
    zbar_symbol_t *sym, *next;
    for(sym = syms->head; sym; sym = next) {
  409276:	68bb      	ldr	r3, [r7, #8]
  409278:	60fb      	str	r3, [r7, #12]
  40927a:	68fb      	ldr	r3, [r7, #12]
  40927c:	2b00      	cmp	r3, #0
  40927e:	d1ef      	bne.n	409260 <_zbar_symbol_set_free+0x10>
        next = sym->next;
        sym->next = NULL;
        _zbar_symbol_refcnt(sym, -1);
    }
    syms->head = NULL;
  409280:	687b      	ldr	r3, [r7, #4]
  409282:	2200      	movs	r2, #0
  409284:	609a      	str	r2, [r3, #8]
    free(syms);
  409286:	6878      	ldr	r0, [r7, #4]
  409288:	4b03      	ldr	r3, [pc, #12]	; (409298 <_zbar_symbol_set_free+0x48>)
  40928a:	4798      	blx	r3
}
  40928c:	3710      	adds	r7, #16
  40928e:	46bd      	mov	sp, r7
  409290:	bd80      	pop	{r7, pc}
  409292:	bf00      	nop
  409294:	00408df9 	.word	0x00408df9
  409298:	004348ad 	.word	0x004348ad

0040929c <zbar_symbol_set_ref>:

void zbar_symbol_set_ref (const zbar_symbol_set_t *syms,
                          int delta)
{
  40929c:	b580      	push	{r7, lr}
  40929e:	b084      	sub	sp, #16
  4092a0:	af00      	add	r7, sp, #0
  4092a2:	6078      	str	r0, [r7, #4]
  4092a4:	6039      	str	r1, [r7, #0]
    zbar_symbol_set_t *ncsyms = (zbar_symbol_set_t*)syms;
  4092a6:	687b      	ldr	r3, [r7, #4]
  4092a8:	60fb      	str	r3, [r7, #12]
    if(!_zbar_refcnt(&ncsyms->refcnt, delta) && delta <= 0)
  4092aa:	68fb      	ldr	r3, [r7, #12]
  4092ac:	4618      	mov	r0, r3
  4092ae:	6839      	ldr	r1, [r7, #0]
  4092b0:	4b06      	ldr	r3, [pc, #24]	; (4092cc <zbar_symbol_set_ref+0x30>)
  4092b2:	4798      	blx	r3
  4092b4:	4603      	mov	r3, r0
  4092b6:	2b00      	cmp	r3, #0
  4092b8:	d105      	bne.n	4092c6 <zbar_symbol_set_ref+0x2a>
  4092ba:	683b      	ldr	r3, [r7, #0]
  4092bc:	2b00      	cmp	r3, #0
  4092be:	dc02      	bgt.n	4092c6 <zbar_symbol_set_ref+0x2a>
        _zbar_symbol_set_free(ncsyms);
  4092c0:	68f8      	ldr	r0, [r7, #12]
  4092c2:	4b03      	ldr	r3, [pc, #12]	; (4092d0 <zbar_symbol_set_ref+0x34>)
  4092c4:	4798      	blx	r3
}
  4092c6:	3710      	adds	r7, #16
  4092c8:	46bd      	mov	sp, r7
  4092ca:	bd80      	pop	{r7, pc}
  4092cc:	00408db1 	.word	0x00408db1
  4092d0:	00409251 	.word	0x00409251

004092d4 <_ZL10icvGetRealPKvi>:
  4092d4:	e92d4008 	push	{r3, lr}
  4092d8:	e3510006 	cmp	r1, #6
  4092dc:	908ff101 	addls	pc, pc, r1, lsl #2
  4092e0:	ea00001a 	b	409350 <_ZL10icvGetRealPKvi+0x7c>
  4092e4:	ea000005 	b	409300 <_ZL10icvGetRealPKvi+0x2c>
  4092e8:	ea000007 	b	40930c <_ZL10icvGetRealPKvi+0x38>
  4092ec:	ea000009 	b	409318 <_ZL10icvGetRealPKvi+0x44>
  4092f0:	ea00000b 	b	409324 <_ZL10icvGetRealPKvi+0x50>
  4092f4:	ea00000d 	b	409330 <_ZL10icvGetRealPKvi+0x5c>
  4092f8:	ea00000f 	b	40933c <_ZL10icvGetRealPKvi+0x68>
  4092fc:	ea000011 	b	409348 <_ZL10icvGetRealPKvi+0x74>
  409300:	e5d00000 	ldrb	r0, [r0]
  409304:	fa00a257 	blx	431c68 <__aeabi_ui2d>
  409308:	ea000012 	b	409358 <_ZL10icvGetRealPKvi+0x84>
  40930c:	e5d00000 	ldrb	r0, [r0]
  409310:	fa00a254 	blx	431c68 <__aeabi_ui2d>
  409314:	ea00000f 	b	409358 <_ZL10icvGetRealPKvi+0x84>
  409318:	e1d000b0 	ldrh	r0, [r0]
  40931c:	fa00a251 	blx	431c68 <__aeabi_ui2d>
  409320:	ea00000c 	b	409358 <_ZL10icvGetRealPKvi+0x84>
  409324:	e1d000f0 	ldrsh	r0, [r0]
  409328:	fa00a256 	blx	431c88 <__aeabi_i2d>
  40932c:	ea000009 	b	409358 <_ZL10icvGetRealPKvi+0x84>
  409330:	e5900000 	ldr	r0, [r0]
  409334:	fa00a253 	blx	431c88 <__aeabi_i2d>
  409338:	ea000006 	b	409358 <_ZL10icvGetRealPKvi+0x84>
  40933c:	e5900000 	ldr	r0, [r0]
  409340:	fa00a259 	blx	431cac <__aeabi_f2d>
  409344:	ea000003 	b	409358 <_ZL10icvGetRealPKvi+0x84>
  409348:	e8900003 	ldm	r0, {r0, r1}
  40934c:	ea000001 	b	409358 <_ZL10icvGetRealPKvi+0x84>
  409350:	e3a00000 	mov	r0, #0
  409354:	e3a01000 	mov	r1, #0
  409358:	e8bd4008 	pop	{r3, lr}
  40935c:	e12fff1e 	bx	lr

00409360 <_ZL16icvGetColorModeliPPcS0_>:
  409360:	e2400001 	sub	r0, r0, #1
  409364:	e59f3030 	ldr	r3, [pc, #48]	; 40939c <_ZL16icvGetColorModeliPPcS0_+0x3c>
  409368:	e08f3003 	add	r3, pc, r3
  40936c:	e5823000 	str	r3, [r2]
  409370:	e5813000 	str	r3, [r1]
  409374:	e3500003 	cmp	r0, #3
  409378:	812fff1e 	bxhi	lr
  40937c:	e59f301c 	ldr	r3, [pc, #28]	; 4093a0 <_ZL16icvGetColorModeliPPcS0_+0x40>
  409380:	e08f3003 	add	r3, pc, r3
  409384:	e793c180 	ldr	ip, [r3, r0, lsl #3]
  409388:	e581c000 	str	ip, [r1]
  40938c:	e0830180 	add	r0, r3, r0, lsl #3
  409390:	e5903004 	ldr	r3, [r0, #4]
  409394:	e5823000 	str	r3, [r2]
  409398:	e12fff1e 	bx	lr
  40939c:	000370a8 	.word	0x000370a8
  4093a0:	1fbf74cc 	.word	0x1fbf74cc

004093a4 <_ZL12icvCreateROIiiiii>:
  4093a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  4093a8:	e24dd008 	sub	sp, sp, #8
  4093ac:	e1a08000 	mov	r8, r0
  4093b0:	e1a07001 	mov	r7, r1
  4093b4:	e1a06002 	mov	r6, r2
  4093b8:	e1a05003 	mov	r5, r3
  4093bc:	e59f3094 	ldr	r3, [pc, #148]	; 409458 <_ZL12icvCreateROIiiiii+0xb4>
  4093c0:	e08f3003 	add	r3, pc, r3
  4093c4:	e593c00c 	ldr	ip, [r3, #12]
  4093c8:	e35c0000 	cmp	ip, #0
  4093cc:	1a000017 	bne	409430 <_ZL12icvCreateROIiiiii+0x8c>
  4093d0:	e3a00014 	mov	r0, #20
  4093d4:	eb004938 	bl	41b8bc <cvAlloc>
  4093d8:	e1a04000 	mov	r4, r0
  4093dc:	eb002580 	bl	4129e4 <cvGetErrStatus>
  4093e0:	e3500000 	cmp	r0, #0
  4093e4:	aa00000a 	bge	409414 <_ZL12icvCreateROIiiiii+0x70>
  4093e8:	e59f306c 	ldr	r3, [pc, #108]	; 40945c <_ZL12icvCreateROIiiiii+0xb8>
  4093ec:	e58d3000 	str	r3, [sp]
  4093f0:	e3e00000 	mvn	r0, #0
  4093f4:	e59f1064 	ldr	r1, [pc, #100]	; 409460 <_ZL12icvCreateROIiiiii+0xbc>
  4093f8:	e08f1001 	add	r1, pc, r1
  4093fc:	e59f2060 	ldr	r2, [pc, #96]	; 409464 <_ZL12icvCreateROIiiiii+0xc0>
  409400:	e08f2002 	add	r2, pc, r2
  409404:	e59f305c 	ldr	r3, [pc, #92]	; 409468 <_ZL12icvCreateROIiiiii+0xc4>
  409408:	e08f3003 	add	r3, pc, r3
  40940c:	eb0025a5 	bl	412aa8 <cvError>
  409410:	ea00000c 	b	409448 <_ZL12icvCreateROIiiiii+0xa4>
  409414:	e5848000 	str	r8, [r4]
  409418:	e5847004 	str	r7, [r4, #4]
  40941c:	e5846008 	str	r6, [r4, #8]
  409420:	e584500c 	str	r5, [r4, #12]
  409424:	e59d3020 	ldr	r3, [sp, #32]
  409428:	e5843010 	str	r3, [r4, #16]
  40942c:	ea000005 	b	409448 <_ZL12icvCreateROIiiiii+0xa4>
  409430:	e59d3020 	ldr	r3, [sp, #32]
  409434:	e58d3000 	str	r3, [sp]
  409438:	e1a03005 	mov	r3, r5
  40943c:	e1a0e00f 	mov	lr, pc
  409440:	e12fff1c 	bx	ip
  409444:	e1a04000 	mov	r4, r0
  409448:	e1a00004 	mov	r0, r4
  40944c:	e28dd008 	add	sp, sp, #8
  409450:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  409454:	e12fff1e 	bx	lr
  409458:	1fbf8810 	.word	0x1fbf8810
  40945c:	00000ca7 	.word	0x00000ca7
  409460:	1fbf7098 	.word	0x1fbf7098
  409464:	00033bd0 	.word	0x00033bd0
  409468:	00033be0 	.word	0x00033be0

0040946c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj>:
  40946c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  409470:	e24dd00c 	sub	sp, sp, #12
  409474:	e3500000 	cmp	r0, #0
  409478:	0a000003 	beq	40948c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x20>
  40947c:	e1d0c0b2 	ldrh	ip, [r0, #2]
  409480:	e59f3194 	ldr	r3, [pc, #404]	; 40961c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1b0>
  409484:	e153080c 	cmp	r3, ip, lsl #16
  409488:	0a000007 	beq	4094ac <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x40>
  40948c:	e59f018c 	ldr	r0, [pc, #396]	; 409620 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1b4>
  409490:	e08f0000 	add	r0, pc, r0
  409494:	e59f1188 	ldr	r1, [pc, #392]	; 409624 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1b8>
  409498:	e59f2188 	ldr	r2, [pc, #392]	; 409628 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1bc>
  40949c:	e08f2002 	add	r2, pc, r2
  4094a0:	e59f3184 	ldr	r3, [pc, #388]	; 40962c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1c0>
  4094a4:	e08f3003 	add	r3, pc, r3
  4094a8:	fa00aa29 	blx	433d54 <__assert_func>
  4094ac:	e3520000 	cmp	r2, #0
  4094b0:	1a00001b 	bne	409524 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0xb8>
  4094b4:	ea000014 	b	40950c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0xa0>
  4094b8:	e7912103 	ldr	r2, [r1, r3, lsl #2]
  4094bc:	e080c103 	add	ip, r0, r3, lsl #2
  4094c0:	e59cc024 	ldr	ip, [ip, #36]	; 0x24
  4094c4:	e152000c 	cmp	r2, ip
  4094c8:	3a00000b 	bcc	4094fc <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x90>
  4094cc:	e59f315c 	ldr	r3, [pc, #348]	; 409630 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1c4>
  4094d0:	e58d3000 	str	r3, [sp]
  4094d4:	e3e000d2 	mvn	r0, #210	; 0xd2
  4094d8:	e59f1154 	ldr	r1, [pc, #340]	; 409634 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1c8>
  4094dc:	e08f1001 	add	r1, pc, r1
  4094e0:	e2811010 	add	r1, r1, #16
  4094e4:	e59f214c 	ldr	r2, [pc, #332]	; 409638 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1cc>
  4094e8:	e08f2002 	add	r2, pc, r2
  4094ec:	e59f3148 	ldr	r3, [pc, #328]	; 40963c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1d0>
  4094f0:	e08f3003 	add	r3, pc, r3
  4094f4:	eb00256b 	bl	412aa8 <cvError>
  4094f8:	ea000044 	b	409610 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1a4>
  4094fc:	e0866286 	add	r6, r6, r6, lsl #5
  409500:	e0826006 	add	r6, r2, r6
  409504:	e2833001 	add	r3, r3, #1
  409508:	ea000001 	b	409514 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0xa8>
  40950c:	e3a06000 	mov	r6, #0
  409510:	e1a03006 	mov	r3, r6
  409514:	e5902004 	ldr	r2, [r0, #4]
  409518:	e1520003 	cmp	r2, r3
  40951c:	caffffe5 	bgt	4094b8 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x4c>
  409520:	ea000000 	b	409528 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0xbc>
  409524:	e5926000 	ldr	r6, [r2]
  409528:	e5908018 	ldr	r8, [r0, #24]
  40952c:	e2488001 	sub	r8, r8, #1
  409530:	e0088006 	and	r8, r8, r6
  409534:	e3c66102 	bic	r6, r6, #-2147483648	; 0x80000000
  409538:	e5909014 	ldr	r9, [r0, #20]
  40953c:	e7992108 	ldr	r2, [r9, r8, lsl #2]
  409540:	e3a07000 	mov	r7, #0
  409544:	ea000012 	b	409594 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x128>
  409548:	e5923000 	ldr	r3, [r2]
  40954c:	e1530006 	cmp	r3, r6
  409550:	1a00000d 	bne	40958c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x120>
  409554:	e5905020 	ldr	r5, [r0, #32]
  409558:	e3a03000 	mov	r3, #0
  40955c:	ea000005 	b	409578 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x10c>
  409560:	e7914103 	ldr	r4, [r1, r3, lsl #2]
  409564:	e082e005 	add	lr, r2, r5
  409568:	e79ee103 	ldr	lr, [lr, r3, lsl #2]
  40956c:	e154000e 	cmp	r4, lr
  409570:	1a000003 	bne	409584 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x118>
  409574:	e2833001 	add	r3, r3, #1
  409578:	e590c004 	ldr	ip, [r0, #4]
  40957c:	e15c0003 	cmp	ip, r3
  409580:	cafffff6 	bgt	409560 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0xf4>
  409584:	e15c0003 	cmp	ip, r3
  409588:	0a000003 	beq	40959c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x130>
  40958c:	e1a07002 	mov	r7, r2
  409590:	e5922004 	ldr	r2, [r2, #4]
  409594:	e3520000 	cmp	r2, #0
  409598:	1affffea 	bne	409548 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0xdc>
  40959c:	e3520000 	cmp	r2, #0
  4095a0:	0a00001a 	beq	409610 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1a4>
  4095a4:	e3570000 	cmp	r7, #0
  4095a8:	15923004 	ldrne	r3, [r2, #4]
  4095ac:	15873004 	strne	r3, [r7, #4]
  4095b0:	05923004 	ldreq	r3, [r2, #4]
  4095b4:	07893108 	streq	r3, [r9, r8, lsl #2]
  4095b8:	e5901010 	ldr	r1, [r0, #16]
  4095bc:	e5923000 	ldr	r3, [r2]
  4095c0:	e3530000 	cmp	r3, #0
  4095c4:	aa000008 	bge	4095ec <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x180>
  4095c8:	e59f0070 	ldr	r0, [pc, #112]	; 409640 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1d4>
  4095cc:	e08f0000 	add	r0, pc, r0
  4095d0:	e59f106c 	ldr	r1, [pc, #108]	; 409644 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1d8>
  4095d4:	e59f206c 	ldr	r2, [pc, #108]	; 409648 <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1dc>
  4095d8:	e08f2002 	add	r2, pc, r2
  4095dc:	e282203c 	add	r2, r2, #60	; 0x3c
  4095e0:	e59f3064 	ldr	r3, [pc, #100]	; 40964c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj+0x1e0>
  4095e4:	e08f3003 	add	r3, pc, r3
  4095e8:	fa00a9d9 	blx	433d54 <__assert_func>
  4095ec:	e5910038 	ldr	r0, [r1, #56]	; 0x38
  4095f0:	e5820004 	str	r0, [r2, #4]
  4095f4:	e3c3333f 	bic	r3, r3, #-67108864	; 0xfc000000
  4095f8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
  4095fc:	e5823000 	str	r3, [r2]
  409600:	e5812038 	str	r2, [r1, #56]	; 0x38
  409604:	e591303c 	ldr	r3, [r1, #60]	; 0x3c
  409608:	e2433001 	sub	r3, r3, #1
  40960c:	e581303c 	str	r3, [r1, #60]	; 0x3c
  409610:	e28dd00c 	add	sp, sp, #12
  409614:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  409618:	e12fff1e 	bx	lr
  40961c:	42440000 	.word	0x42440000
  409620:	00033b58 	.word	0x00033b58
  409624:	00000382 	.word	0x00000382
  409628:	00033960 	.word	0x00033960
  40962c:	00033b60 	.word	0x00033b60
  409630:	0000038a 	.word	0x0000038a
  409634:	1fbf6fb4 	.word	0x1fbf6fb4
  409638:	00033b34 	.word	0x00033b34
  40963c:	00033af8 	.word	0x00033af8
  409640:	00033a70 	.word	0x00033a70
  409644:	00000447 	.word	0x00000447
  409648:	00033824 	.word	0x00033824
  40964c:	00033a70 	.word	0x00033a70

00409650 <_ZL10icvSetRealdPKvi>:
  409650:	e92d4038 	push	{r3, r4, r5, lr}
  409654:	e1a05002 	mov	r5, r2
  409658:	e1a04003 	mov	r4, r3
  40965c:	e3530004 	cmp	r3, #4
  409660:	ca00003a 	bgt	409750 <_ZL10icvSetRealdPKvi+0x100>
  409664:	e3a02000 	mov	r2, #0
  409668:	e59f310c 	ldr	r3, [pc, #268]	; 40977c <_ZL10icvSetRealdPKvi+0x12c>
  40966c:	fa00a0df 	blx	4319f0 <__adddf3>
  409670:	fa00a080 	blx	431878 <floor>
  409674:	fa00a303 	blx	432288 <__aeabi_d2iz>
  409678:	e3540004 	cmp	r4, #4
  40967c:	908ff104 	addls	pc, pc, r4, lsl #2
  409680:	ea00003b 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  409684:	ea000003 	b	409698 <_ZL10icvSetRealdPKvi+0x48>
  409688:	ea00000c 	b	4096c0 <_ZL10icvSetRealdPKvi+0x70>
  40968c:	ea000016 	b	4096ec <_ZL10icvSetRealdPKvi+0x9c>
  409690:	ea000020 	b	409718 <_ZL10icvSetRealdPKvi+0xc8>
  409694:	ea00002b 	b	409748 <_ZL10icvSetRealdPKvi+0xf8>
  409698:	e3d030ff 	bics	r3, r0, #255	; 0xff
  40969c:	0a000004 	beq	4096b4 <_ZL10icvSetRealdPKvi+0x64>
  4096a0:	e3500000 	cmp	r0, #0
  4096a4:	c3a000ff 	movgt	r0, #255	; 0xff
  4096a8:	ca000002 	bgt	4096b8 <_ZL10icvSetRealdPKvi+0x68>
  4096ac:	e3a00000 	mov	r0, #0
  4096b0:	ea000000 	b	4096b8 <_ZL10icvSetRealdPKvi+0x68>
  4096b4:	e20000ff 	and	r0, r0, #255	; 0xff
  4096b8:	e5c50000 	strb	r0, [r5]
  4096bc:	ea00002c 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  4096c0:	e2803080 	add	r3, r0, #128	; 0x80
  4096c4:	e3d330ff 	bics	r3, r3, #255	; 0xff
  4096c8:	0a000004 	beq	4096e0 <_ZL10icvSetRealdPKvi+0x90>
  4096cc:	e3500000 	cmp	r0, #0
  4096d0:	c3a0007f 	movgt	r0, #127	; 0x7f
  4096d4:	ca000002 	bgt	4096e4 <_ZL10icvSetRealdPKvi+0x94>
  4096d8:	e3a00080 	mov	r0, #128	; 0x80
  4096dc:	ea000000 	b	4096e4 <_ZL10icvSetRealdPKvi+0x94>
  4096e0:	e20000ff 	and	r0, r0, #255	; 0xff
  4096e4:	e5c50000 	strb	r0, [r5]
  4096e8:	ea000021 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  4096ec:	e1b03820 	lsrs	r3, r0, #16
  4096f0:	0a000004 	beq	409708 <_ZL10icvSetRealdPKvi+0xb8>
  4096f4:	e3500000 	cmp	r0, #0
  4096f8:	c59f0080 	ldrgt	r0, [pc, #128]	; 409780 <_ZL10icvSetRealdPKvi+0x130>
  4096fc:	ca000003 	bgt	409710 <_ZL10icvSetRealdPKvi+0xc0>
  409700:	e3a00000 	mov	r0, #0
  409704:	ea000001 	b	409710 <_ZL10icvSetRealdPKvi+0xc0>
  409708:	e1a00800 	lsl	r0, r0, #16
  40970c:	e1a00820 	lsr	r0, r0, #16
  409710:	e1c500b0 	strh	r0, [r5]
  409714:	ea000016 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  409718:	e2803902 	add	r3, r0, #32768	; 0x8000
  40971c:	e1b03823 	lsrs	r3, r3, #16
  409720:	0a000004 	beq	409738 <_ZL10icvSetRealdPKvi+0xe8>
  409724:	e3500000 	cmp	r0, #0
  409728:	c59f0054 	ldrgt	r0, [pc, #84]	; 409784 <_ZL10icvSetRealdPKvi+0x134>
  40972c:	ca000003 	bgt	409740 <_ZL10icvSetRealdPKvi+0xf0>
  409730:	e3a00902 	mov	r0, #32768	; 0x8000
  409734:	ea000001 	b	409740 <_ZL10icvSetRealdPKvi+0xf0>
  409738:	e1a00800 	lsl	r0, r0, #16
  40973c:	e1a00820 	lsr	r0, r0, #16
  409740:	e1c500b0 	strh	r0, [r5]
  409744:	ea00000a 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  409748:	e5850000 	str	r0, [r5]
  40974c:	ea000008 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  409750:	e3530005 	cmp	r3, #5
  409754:	0a000002 	beq	409764 <_ZL10icvSetRealdPKvi+0x114>
  409758:	e3530006 	cmp	r3, #6
  40975c:	0a000003 	beq	409770 <_ZL10icvSetRealdPKvi+0x120>
  409760:	ea000003 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  409764:	fa00a2db 	blx	4322d8 <__aeabi_d2f>
  409768:	e5850000 	str	r0, [r5]
  40976c:	ea000000 	b	409774 <_ZL10icvSetRealdPKvi+0x124>
  409770:	e8820003 	stm	r2, {r0, r1}
  409774:	e8bd4038 	pop	{r3, r4, r5, lr}
  409778:	e12fff1e 	bx	lr
  40977c:	3fe00000 	.word	0x3fe00000
  409780:	0000ffff 	.word	0x0000ffff
  409784:	00007fff 	.word	0x00007fff

00409788 <cvSetIPLAllocators>:
  409788:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40978c:	e24dd00c 	sub	sp, sp, #12
  409790:	e1a0e000 	mov	lr, r0
  409794:	e1a0c001 	mov	ip, r1
  409798:	e3510000 	cmp	r1, #0
  40979c:	13500000 	cmpne	r0, #0
  4097a0:	0a000005 	beq	4097bc <cvSetIPLAllocators+0x34>
  4097a4:	e3530000 	cmp	r3, #0
  4097a8:	13520000 	cmpne	r2, #0
  4097ac:	0a000002 	beq	4097bc <cvSetIPLAllocators+0x34>
  4097b0:	e59d1010 	ldr	r1, [sp, #16]
  4097b4:	e3510000 	cmp	r1, #0
  4097b8:	1a000014 	bne	409810 <cvSetIPLAllocators+0x88>
  4097bc:	e35c0000 	cmp	ip, #0
  4097c0:	035e0000 	cmpeq	lr, #0
  4097c4:	1a000005 	bne	4097e0 <cvSetIPLAllocators+0x58>
  4097c8:	e3530000 	cmp	r3, #0
  4097cc:	03520000 	cmpeq	r2, #0
  4097d0:	1a000002 	bne	4097e0 <cvSetIPLAllocators+0x58>
  4097d4:	e59d1010 	ldr	r1, [sp, #16]
  4097d8:	e3510000 	cmp	r1, #0
  4097dc:	0a00000b 	beq	409810 <cvSetIPLAllocators+0x88>
  4097e0:	e3a0304d 	mov	r3, #77	; 0x4d
  4097e4:	e58d3000 	str	r3, [sp]
  4097e8:	e3e00004 	mvn	r0, #4
  4097ec:	e59f1048 	ldr	r1, [pc, #72]	; 40983c <cvSetIPLAllocators+0xb4>
  4097f0:	e08f1001 	add	r1, pc, r1
  4097f4:	e2811020 	add	r1, r1, #32
  4097f8:	e59f2040 	ldr	r2, [pc, #64]	; 409840 <cvSetIPLAllocators+0xb8>
  4097fc:	e08f2002 	add	r2, pc, r2
  409800:	e59f303c 	ldr	r3, [pc, #60]	; 409844 <cvSetIPLAllocators+0xbc>
  409804:	e08f3003 	add	r3, pc, r3
  409808:	eb0024a6 	bl	412aa8 <cvError>
  40980c:	ea000007 	b	409830 <cvSetIPLAllocators+0xa8>
  409810:	e59f1030 	ldr	r1, [pc, #48]	; 409848 <cvSetIPLAllocators+0xc0>
  409814:	e08f1001 	add	r1, pc, r1
  409818:	e581e000 	str	lr, [r1]
  40981c:	e581c004 	str	ip, [r1, #4]
  409820:	e5812008 	str	r2, [r1, #8]
  409824:	e581300c 	str	r3, [r1, #12]
  409828:	e59d3010 	ldr	r3, [sp, #16]
  40982c:	e5813010 	str	r3, [r1, #16]
  409830:	e28dd00c 	add	sp, sp, #12
  409834:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  409838:	e12fff1e 	bx	lr
  40983c:	1fbf6ca0 	.word	0x1fbf6ca0
  409840:	0003386c 	.word	0x0003386c
  409844:	000337e4 	.word	0x000337e4
  409848:	1fbf83bc 	.word	0x1fbf83bc

0040984c <cvInitMatHeader>:
  40984c:	e92d4030 	push	{r4, r5, lr}
  409850:	e24dd00c 	sub	sp, sp, #12
  409854:	e59dc01c 	ldr	ip, [sp, #28]
  409858:	e2504000 	subs	r4, r0, #0
  40985c:	1a00000b 	bne	409890 <cvInitMatHeader+0x44>
  409860:	e3a030b0 	mov	r3, #176	; 0xb0
  409864:	e58d3000 	str	r3, [sp]
  409868:	e3e0001a 	mvn	r0, #26
  40986c:	e59f1138 	ldr	r1, [pc, #312]	; 4099ac <cvInitMatHeader+0x160>
  409870:	e08f1001 	add	r1, pc, r1
  409874:	e2811034 	add	r1, r1, #52	; 0x34
  409878:	e59f2130 	ldr	r2, [pc, #304]	; 4099b0 <cvInitMatHeader+0x164>
  40987c:	e08f2002 	add	r2, pc, r2
  409880:	e59f312c 	ldr	r3, [pc, #300]	; 4099b4 <cvInitMatHeader+0x168>
  409884:	e08f3003 	add	r3, pc, r3
  409888:	eb002486 	bl	412aa8 <cvError>
  40988c:	ea000042 	b	40999c <cvInitMatHeader+0x150>
  409890:	e3520000 	cmp	r2, #0
  409894:	c3510000 	cmpgt	r1, #0
  409898:	ca00000b 	bgt	4098cc <cvInitMatHeader+0x80>
  40989c:	e3a030b6 	mov	r3, #182	; 0xb6
  4098a0:	e58d3000 	str	r3, [sp]
  4098a4:	e3e000c8 	mvn	r0, #200	; 0xc8
  4098a8:	e59f1108 	ldr	r1, [pc, #264]	; 4099b8 <cvInitMatHeader+0x16c>
  4098ac:	e08f1001 	add	r1, pc, r1
  4098b0:	e2811034 	add	r1, r1, #52	; 0x34
  4098b4:	e59f2100 	ldr	r2, [pc, #256]	; 4099bc <cvInitMatHeader+0x170>
  4098b8:	e08f2002 	add	r2, pc, r2
  4098bc:	e59f30fc 	ldr	r3, [pc, #252]	; 4099c0 <cvInitMatHeader+0x174>
  4098c0:	e08f3003 	add	r3, pc, r3
  4098c4:	eb002477 	bl	412aa8 <cvError>
  4098c8:	ea000033 	b	40999c <cvInitMatHeader+0x150>
  4098cc:	e1a00b83 	lsl	r0, r3, #23
  4098d0:	e1a00ba0 	lsr	r0, r0, #23
  4098d4:	e3800442 	orr	r0, r0, #1107296256	; 0x42000000
  4098d8:	e3800842 	orr	r0, r0, #4325376	; 0x420000
  4098dc:	e5840000 	str	r0, [r4]
  4098e0:	e5841014 	str	r1, [r4, #20]
  4098e4:	e5842018 	str	r2, [r4, #24]
  4098e8:	e59de018 	ldr	lr, [sp, #24]
  4098ec:	e584e010 	str	lr, [r4, #16]
  4098f0:	e3a0e000 	mov	lr, #0
  4098f4:	e584e008 	str	lr, [r4, #8]
  4098f8:	e584e00c 	str	lr, [r4, #12]
  4098fc:	e3510001 	cmp	r1, #1
  409900:	c3e0e000 	mvngt	lr, #0
  409904:	e2031f7e 	and	r1, r3, #504	; 0x1f8
  409908:	e1a011c1 	asr	r1, r1, #3
  40990c:	e2811001 	add	r1, r1, #1
  409910:	e2033007 	and	r3, r3, #7
  409914:	e1a03083 	lsl	r3, r3, #1
  409918:	e59f50a4 	ldr	r5, [pc, #164]	; 4099c4 <cvInitMatHeader+0x178>
  40991c:	e1a03335 	lsr	r3, r5, r3
  409920:	e2033003 	and	r3, r3, #3
  409924:	e1a03311 	lsl	r3, r1, r3
  409928:	e0020293 	mul	r2, r3, r2
  40992c:	e002200e 	and	r2, r2, lr
  409930:	e35c0000 	cmp	ip, #0
  409934:	137c0106 	cmnne	ip, #-2147483647	; 0x80000001
  409938:	0a000010 	beq	409980 <cvInitMatHeader+0x134>
  40993c:	e15c0002 	cmp	ip, r2
  409940:	aa00000b 	bge	409974 <cvInitMatHeader+0x128>
  409944:	e3a030c7 	mov	r3, #199	; 0xc7
  409948:	e58d3000 	str	r3, [sp]
  40994c:	e3e0000c 	mvn	r0, #12
  409950:	e59f1070 	ldr	r1, [pc, #112]	; 4099c8 <cvInitMatHeader+0x17c>
  409954:	e08f1001 	add	r1, pc, r1
  409958:	e2811034 	add	r1, r1, #52	; 0x34
  40995c:	e59f2068 	ldr	r2, [pc, #104]	; 4099cc <cvInitMatHeader+0x180>
  409960:	e08f2002 	add	r2, pc, r2
  409964:	e59f3064 	ldr	r3, [pc, #100]	; 4099d0 <cvInitMatHeader+0x184>
  409968:	e08f3003 	add	r3, pc, r3
  40996c:	eb00244d 	bl	412aa8 <cvError>
  409970:	ea000009 	b	40999c <cvInitMatHeader+0x150>
  409974:	e00cc00e 	and	ip, ip, lr
  409978:	e584c004 	str	ip, [r4, #4]
  40997c:	ea000000 	b	409984 <cvInitMatHeader+0x138>
  409980:	e5842004 	str	r2, [r4, #4]
  409984:	e5943004 	ldr	r3, [r4, #4]
  409988:	e1530002 	cmp	r3, r2
  40998c:	03a03901 	moveq	r3, #16384	; 0x4000
  409990:	13a03000 	movne	r3, #0
  409994:	e1830000 	orr	r0, r3, r0
  409998:	e5840000 	str	r0, [r4]
  40999c:	e1a00004 	mov	r0, r4
  4099a0:	e28dd00c 	add	sp, sp, #12
  4099a4:	e8bd4030 	pop	{r4, r5, lr}
  4099a8:	e12fff1e 	bx	lr
  4099ac:	1fbf6c20 	.word	0x1fbf6c20
  4099b0:	00036b94 	.word	0x00036b94
  4099b4:	00033764 	.word	0x00033764
  4099b8:	1fbf6be4 	.word	0x1fbf6be4
  4099bc:	000337f8 	.word	0x000337f8
  4099c0:	00033728 	.word	0x00033728
  4099c4:	0000ba50 	.word	0x0000ba50
  4099c8:	1fbf6b3c 	.word	0x1fbf6b3c
  4099cc:	00036ab0 	.word	0x00036ab0
  4099d0:	00033680 	.word	0x00033680

004099d4 <cvReleaseMat>:
  4099d4:	e92d4010 	push	{r4, lr}
  4099d8:	e24dd008 	sub	sp, sp, #8
  4099dc:	e3500000 	cmp	r0, #0
  4099e0:	1a00000b 	bne	409a14 <cvReleaseMat+0x40>
  4099e4:	e3a030e3 	mov	r3, #227	; 0xe3
  4099e8:	e58d3000 	str	r3, [sp]
  4099ec:	e3e00008 	mvn	r0, #8
  4099f0:	e59f11d4 	ldr	r1, [pc, #468]	; 409bcc <cvReleaseMat+0x1f8>
  4099f4:	e08f1001 	add	r1, pc, r1
  4099f8:	e2811044 	add	r1, r1, #68	; 0x44
  4099fc:	e59f21cc 	ldr	r2, [pc, #460]	; 409bd0 <cvReleaseMat+0x1fc>
  409a00:	e08f2002 	add	r2, pc, r2
  409a04:	e59f31c8 	ldr	r3, [pc, #456]	; 409bd4 <cvReleaseMat+0x200>
  409a08:	e08f3003 	add	r3, pc, r3
  409a0c:	eb002425 	bl	412aa8 <cvError>
  409a10:	ea00006a 	b	409bc0 <cvReleaseMat+0x1ec>
  409a14:	e5904000 	ldr	r4, [r0]
  409a18:	e3540000 	cmp	r4, #0
  409a1c:	0a000067 	beq	409bc0 <cvReleaseMat+0x1ec>
  409a20:	0a000009 	beq	409a4c <cvReleaseMat+0x78>
  409a24:	e1d420b2 	ldrh	r2, [r4, #2]
  409a28:	e59f31a8 	ldr	r3, [pc, #424]	; 409bd8 <cvReleaseMat+0x204>
  409a2c:	e1530802 	cmp	r3, r2, lsl #16
  409a30:	1a000005 	bne	409a4c <cvReleaseMat+0x78>
  409a34:	e5943018 	ldr	r3, [r4, #24]
  409a38:	e3530000 	cmp	r3, #0
  409a3c:	da000002 	ble	409a4c <cvReleaseMat+0x78>
  409a40:	e5943014 	ldr	r3, [r4, #20]
  409a44:	e3530000 	cmp	r3, #0
  409a48:	ca000011 	bgt	409a94 <cvReleaseMat+0xc0>
  409a4c:	e3540000 	cmp	r4, #0
  409a50:	0a000003 	beq	409a64 <cvReleaseMat+0x90>
  409a54:	e1d420b2 	ldrh	r2, [r4, #2]
  409a58:	e59f317c 	ldr	r3, [pc, #380]	; 409bdc <cvReleaseMat+0x208>
  409a5c:	e1530802 	cmp	r3, r2, lsl #16
  409a60:	0a00000b 	beq	409a94 <cvReleaseMat+0xc0>
  409a64:	e3a030ea 	mov	r3, #234	; 0xea
  409a68:	e58d3000 	str	r3, [sp]
  409a6c:	e3e000cd 	mvn	r0, #205	; 0xcd
  409a70:	e59f1168 	ldr	r1, [pc, #360]	; 409be0 <cvReleaseMat+0x20c>
  409a74:	e08f1001 	add	r1, pc, r1
  409a78:	e2811044 	add	r1, r1, #68	; 0x44
  409a7c:	e59f2160 	ldr	r2, [pc, #352]	; 409be4 <cvReleaseMat+0x210>
  409a80:	e08f2002 	add	r2, pc, r2
  409a84:	e59f315c 	ldr	r3, [pc, #348]	; 409be8 <cvReleaseMat+0x214>
  409a88:	e08f3003 	add	r3, pc, r3
  409a8c:	eb002405 	bl	412aa8 <cvError>
  409a90:	ea00004a 	b	409bc0 <cvReleaseMat+0x1ec>
  409a94:	e3a03000 	mov	r3, #0
  409a98:	e5803000 	str	r3, [r0]
  409a9c:	e1540003 	cmp	r4, r3
  409aa0:	0a000024 	beq	409b38 <cvReleaseMat+0x164>
  409aa4:	e1d420b2 	ldrh	r2, [r4, #2]
  409aa8:	e59f3128 	ldr	r3, [pc, #296]	; 409bd8 <cvReleaseMat+0x204>
  409aac:	e1530802 	cmp	r3, r2, lsl #16
  409ab0:	1a000020 	bne	409b38 <cvReleaseMat+0x164>
  409ab4:	e5943018 	ldr	r3, [r4, #24]
  409ab8:	e3530000 	cmp	r3, #0
  409abc:	da00001d 	ble	409b38 <cvReleaseMat+0x164>
  409ac0:	e5943014 	ldr	r3, [r4, #20]
  409ac4:	e3530000 	cmp	r3, #0
  409ac8:	da00001a 	ble	409b38 <cvReleaseMat+0x164>
  409acc:	e5943010 	ldr	r3, [r4, #16]
  409ad0:	e3530000 	cmp	r3, #0
  409ad4:	0a000017 	beq	409b38 <cvReleaseMat+0x164>
  409ad8:	e3a03000 	mov	r3, #0
  409adc:	e5843010 	str	r3, [r4, #16]
  409ae0:	e5942008 	ldr	r2, [r4, #8]
  409ae4:	e1520003 	cmp	r2, r3
  409ae8:	0a000006 	beq	409b08 <cvReleaseMat+0x134>
  409aec:	e5923000 	ldr	r3, [r2]
  409af0:	e2433001 	sub	r3, r3, #1
  409af4:	e5823000 	str	r3, [r2]
  409af8:	e3530000 	cmp	r3, #0
  409afc:	1a000003 	bne	409b10 <cvReleaseMat+0x13c>
  409b00:	e3a03001 	mov	r3, #1
  409b04:	ea000002 	b	409b14 <cvReleaseMat+0x140>
  409b08:	e3a03000 	mov	r3, #0
  409b0c:	ea000000 	b	409b14 <cvReleaseMat+0x140>
  409b10:	e3a03000 	mov	r3, #0
  409b14:	e3530000 	cmp	r3, #0
  409b18:	0a000003 	beq	409b2c <cvReleaseMat+0x158>
  409b1c:	e5940008 	ldr	r0, [r4, #8]
  409b20:	eb004797 	bl	41b984 <cvFree_>
  409b24:	e3a03000 	mov	r3, #0
  409b28:	e5843008 	str	r3, [r4, #8]
  409b2c:	e3a03000 	mov	r3, #0
  409b30:	e5843008 	str	r3, [r4, #8]
  409b34:	ea00001f 	b	409bb8 <cvReleaseMat+0x1e4>
  409b38:	e3540000 	cmp	r4, #0
  409b3c:	0a00001d 	beq	409bb8 <cvReleaseMat+0x1e4>
  409b40:	e1d420b2 	ldrh	r2, [r4, #2]
  409b44:	e59f3090 	ldr	r3, [pc, #144]	; 409bdc <cvReleaseMat+0x208>
  409b48:	e1530802 	cmp	r3, r2, lsl #16
  409b4c:	1a000019 	bne	409bb8 <cvReleaseMat+0x1e4>
  409b50:	e5943010 	ldr	r3, [r4, #16]
  409b54:	e3530000 	cmp	r3, #0
  409b58:	0a000016 	beq	409bb8 <cvReleaseMat+0x1e4>
  409b5c:	e3a03000 	mov	r3, #0
  409b60:	e5843010 	str	r3, [r4, #16]
  409b64:	e5942008 	ldr	r2, [r4, #8]
  409b68:	e1520003 	cmp	r2, r3
  409b6c:	0a000006 	beq	409b8c <cvReleaseMat+0x1b8>
  409b70:	e5923000 	ldr	r3, [r2]
  409b74:	e2433001 	sub	r3, r3, #1
  409b78:	e5823000 	str	r3, [r2]
  409b7c:	e3530000 	cmp	r3, #0
  409b80:	1a000003 	bne	409b94 <cvReleaseMat+0x1c0>
  409b84:	e3a03001 	mov	r3, #1
  409b88:	ea000002 	b	409b98 <cvReleaseMat+0x1c4>
  409b8c:	e3a03000 	mov	r3, #0
  409b90:	ea000000 	b	409b98 <cvReleaseMat+0x1c4>
  409b94:	e3a03000 	mov	r3, #0
  409b98:	e3530000 	cmp	r3, #0
  409b9c:	0a000003 	beq	409bb0 <cvReleaseMat+0x1dc>
  409ba0:	e5940008 	ldr	r0, [r4, #8]
  409ba4:	eb004776 	bl	41b984 <cvFree_>
  409ba8:	e3a03000 	mov	r3, #0
  409bac:	e5843008 	str	r3, [r4, #8]
  409bb0:	e3a03000 	mov	r3, #0
  409bb4:	e5843008 	str	r3, [r4, #8]
  409bb8:	e1a00004 	mov	r0, r4
  409bbc:	eb004770 	bl	41b984 <cvFree_>
  409bc0:	e28dd008 	add	sp, sp, #8
  409bc4:	e8bd4010 	pop	{r4, lr}
  409bc8:	e12fff1e 	bx	lr
  409bcc:	1fbf6a9c 	.word	0x1fbf6a9c
  409bd0:	00036a10 	.word	0x00036a10
  409bd4:	000335e0 	.word	0x000335e0
  409bd8:	42420000 	.word	0x42420000
  409bdc:	42430000 	.word	0x42430000
  409be0:	1fbf6a1c 	.word	0x1fbf6a1c
  409be4:	00036990 	.word	0x00036990
  409be8:	00033560 	.word	0x00033560

00409bec <cvCreateMatHeader>:
  409bec:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  409bf0:	e24dd014 	sub	sp, sp, #20
  409bf4:	e3a03000 	mov	r3, #0
  409bf8:	e58d300c 	str	r3, [sp, #12]
  409bfc:	e1a05b82 	lsl	r5, r2, #23
  409c00:	e1a05ba5 	lsr	r5, r5, #23
  409c04:	e1510003 	cmp	r1, r3
  409c08:	c1500003 	cmpgt	r0, r3
  409c0c:	ca00000b 	bgt	409c40 <cvCreateMatHeader+0x54>
  409c10:	e3a03088 	mov	r3, #136	; 0x88
  409c14:	e58d3000 	str	r3, [sp]
  409c18:	e3e000c8 	mvn	r0, #200	; 0xc8
  409c1c:	e59f1190 	ldr	r1, [pc, #400]	; 409db4 <cvCreateMatHeader+0x1c8>
  409c20:	e08f1001 	add	r1, pc, r1
  409c24:	e2811054 	add	r1, r1, #84	; 0x54
  409c28:	e59f2188 	ldr	r2, [pc, #392]	; 409db8 <cvCreateMatHeader+0x1cc>
  409c2c:	e08f2002 	add	r2, pc, r2
  409c30:	e59f3184 	ldr	r3, [pc, #388]	; 409dbc <cvCreateMatHeader+0x1d0>
  409c34:	e08f3003 	add	r3, pc, r3
  409c38:	eb00239a 	bl	412aa8 <cvError>
  409c3c:	ea000054 	b	409d94 <cvCreateMatHeader+0x1a8>
  409c40:	e1a07000 	mov	r7, r0
  409c44:	e1a06001 	mov	r6, r1
  409c48:	e2024f7e 	and	r4, r2, #504	; 0x1f8
  409c4c:	e1a041c4 	asr	r4, r4, #3
  409c50:	e2843001 	add	r3, r4, #1
  409c54:	e2022007 	and	r2, r2, #7
  409c58:	e1a02082 	lsl	r2, r2, #1
  409c5c:	e59f415c 	ldr	r4, [pc, #348]	; 409dc0 <cvCreateMatHeader+0x1d4>
  409c60:	e1a04234 	lsr	r4, r4, r2
  409c64:	e2044003 	and	r4, r4, #3
  409c68:	e1a04413 	lsl	r4, r3, r4
  409c6c:	e0040491 	mul	r4, r1, r4
  409c70:	e3540000 	cmp	r4, #0
  409c74:	ca00000b 	bgt	409ca8 <cvCreateMatHeader+0xbc>
  409c78:	e3a0308c 	mov	r3, #140	; 0x8c
  409c7c:	e58d3000 	str	r3, [sp]
  409c80:	e3e000d1 	mvn	r0, #209	; 0xd1
  409c84:	e59f1138 	ldr	r1, [pc, #312]	; 409dc4 <cvCreateMatHeader+0x1d8>
  409c88:	e08f1001 	add	r1, pc, r1
  409c8c:	e2811054 	add	r1, r1, #84	; 0x54
  409c90:	e59f2130 	ldr	r2, [pc, #304]	; 409dc8 <cvCreateMatHeader+0x1dc>
  409c94:	e08f2002 	add	r2, pc, r2
  409c98:	e59f312c 	ldr	r3, [pc, #300]	; 409dcc <cvCreateMatHeader+0x1e0>
  409c9c:	e08f3003 	add	r3, pc, r3
  409ca0:	eb002380 	bl	412aa8 <cvError>
  409ca4:	ea00003a 	b	409d94 <cvCreateMatHeader+0x1a8>
  409ca8:	e3a0001c 	mov	r0, #28
  409cac:	eb004702 	bl	41b8bc <cvAlloc>
  409cb0:	e58d000c 	str	r0, [sp, #12]
  409cb4:	eb00234a 	bl	4129e4 <cvGetErrStatus>
  409cb8:	e3500000 	cmp	r0, #0
  409cbc:	aa00000b 	bge	409cf0 <cvCreateMatHeader+0x104>
  409cc0:	e3a0308e 	mov	r3, #142	; 0x8e
  409cc4:	e58d3000 	str	r3, [sp]
  409cc8:	e3e00000 	mvn	r0, #0
  409ccc:	e59f10fc 	ldr	r1, [pc, #252]	; 409dd0 <cvCreateMatHeader+0x1e4>
  409cd0:	e08f1001 	add	r1, pc, r1
  409cd4:	e2811054 	add	r1, r1, #84	; 0x54
  409cd8:	e59f20f4 	ldr	r2, [pc, #244]	; 409dd4 <cvCreateMatHeader+0x1e8>
  409cdc:	e08f2002 	add	r2, pc, r2
  409ce0:	e59f30f0 	ldr	r3, [pc, #240]	; 409dd8 <cvCreateMatHeader+0x1ec>
  409ce4:	e08f3003 	add	r3, pc, r3
  409ce8:	eb00236e 	bl	412aa8 <cvError>
  409cec:	ea000028 	b	409d94 <cvCreateMatHeader+0x1a8>
  409cf0:	e59d300c 	ldr	r3, [sp, #12]
  409cf4:	e3570001 	cmp	r7, #1
  409cf8:	0a00000c 	beq	409d30 <cvCreateMatHeader+0x144>
  409cfc:	e3740106 	cmn	r4, #-2147483647	; 0x80000001
  409d00:	1a000008 	bne	409d28 <cvCreateMatHeader+0x13c>
  409d04:	e59f00d0 	ldr	r0, [pc, #208]	; 409ddc <cvCreateMatHeader+0x1f0>
  409d08:	e08f0000 	add	r0, pc, r0
  409d0c:	e3a010e7 	mov	r1, #231	; 0xe7
  409d10:	e59f20c8 	ldr	r2, [pc, #200]	; 409de0 <cvCreateMatHeader+0x1f4>
  409d14:	e08f2002 	add	r2, pc, r2
  409d18:	e2822064 	add	r2, r2, #100	; 0x64
  409d1c:	e59f30c0 	ldr	r3, [pc, #192]	; 409de4 <cvCreateMatHeader+0x1f8>
  409d20:	e08f3003 	add	r3, pc, r3
  409d24:	fa00a80a 	blx	433d54 <__assert_func>
  409d28:	e1a02004 	mov	r2, r4
  409d2c:	ea000000 	b	409d34 <cvCreateMatHeader+0x148>
  409d30:	e3a02000 	mov	r2, #0
  409d34:	e5832004 	str	r2, [r3, #4]
  409d38:	e3855442 	orr	r5, r5, #1107296256	; 0x42000000
  409d3c:	e3855842 	orr	r5, r5, #4325376	; 0x420000
  409d40:	e59d200c 	ldr	r2, [sp, #12]
  409d44:	e5923004 	ldr	r3, [r2, #4]
  409d48:	e3530000 	cmp	r3, #0
  409d4c:	0a000003 	beq	409d60 <cvCreateMatHeader+0x174>
  409d50:	e1540003 	cmp	r4, r3
  409d54:	1a000003 	bne	409d68 <cvCreateMatHeader+0x17c>
  409d58:	e3a03901 	mov	r3, #16384	; 0x4000
  409d5c:	ea000002 	b	409d6c <cvCreateMatHeader+0x180>
  409d60:	e3a03901 	mov	r3, #16384	; 0x4000
  409d64:	ea000000 	b	409d6c <cvCreateMatHeader+0x180>
  409d68:	e3a03000 	mov	r3, #0
  409d6c:	e1855003 	orr	r5, r5, r3
  409d70:	e5825000 	str	r5, [r2]
  409d74:	e59d300c 	ldr	r3, [sp, #12]
  409d78:	e5837014 	str	r7, [r3, #20]
  409d7c:	e5836018 	str	r6, [r3, #24]
  409d80:	e3a02000 	mov	r2, #0
  409d84:	e5832010 	str	r2, [r3, #16]
  409d88:	e5832008 	str	r2, [r3, #8]
  409d8c:	e3a02001 	mov	r2, #1
  409d90:	e583200c 	str	r2, [r3, #12]
  409d94:	eb002312 	bl	4129e4 <cvGetErrStatus>
  409d98:	e3500000 	cmp	r0, #0
  409d9c:	b28d000c 	addlt	r0, sp, #12
  409da0:	bbffff0b 	bllt	4099d4 <cvReleaseMat>
  409da4:	e59d000c 	ldr	r0, [sp, #12]
  409da8:	e28dd014 	add	sp, sp, #20
  409dac:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  409db0:	e12fff1e 	bx	lr
  409db4:	1fbf6870 	.word	0x1fbf6870
  409db8:	000334a0 	.word	0x000334a0
  409dbc:	000333b4 	.word	0x000333b4
  409dc0:	0000ba50 	.word	0x0000ba50
  409dc4:	1fbf6808 	.word	0x1fbf6808
  409dc8:	00033458 	.word	0x00033458
  409dcc:	0003334c 	.word	0x0003334c
  409dd0:	1fbf67c0 	.word	0x1fbf67c0
  409dd4:	000332f4 	.word	0x000332f4
  409dd8:	00033304 	.word	0x00033304
  409ddc:	000333f8 	.word	0x000333f8
  409de0:	000330e8 	.word	0x000330e8
  409de4:	000333f8 	.word	0x000333f8

00409de8 <cvInitMatNDHeader>:
  409de8:	e92d4030 	push	{r4, r5, lr}
  409dec:	e24dd00c 	sub	sp, sp, #12
  409df0:	e1a05b83 	lsl	r5, r3, #23
  409df4:	e1a05ba5 	lsr	r5, r5, #23
  409df8:	e203cf7e 	and	ip, r3, #504	; 0x1f8
  409dfc:	e1a0c1cc 	asr	ip, ip, #3
  409e00:	e28ce001 	add	lr, ip, #1
  409e04:	e2033007 	and	r3, r3, #7
  409e08:	e1a03083 	lsl	r3, r3, #1
  409e0c:	e59fc1d8 	ldr	ip, [pc, #472]	; 409fec <cvInitMatNDHeader+0x204>
  409e10:	e1a0c33c 	lsr	ip, ip, r3
  409e14:	e20cc003 	and	ip, ip, #3
  409e18:	e1a0cc1e 	lsl	ip, lr, ip
  409e1c:	e2504000 	subs	r4, r0, #0
  409e20:	1a00000c 	bne	409e58 <cvInitMatNDHeader+0x70>
  409e24:	e59f31c4 	ldr	r3, [pc, #452]	; 409ff0 <cvInitMatNDHeader+0x208>
  409e28:	e58d3000 	str	r3, [sp]
  409e2c:	e3e0001a 	mvn	r0, #26
  409e30:	e59f11bc 	ldr	r1, [pc, #444]	; 409ff4 <cvInitMatNDHeader+0x20c>
  409e34:	e08f1001 	add	r1, pc, r1
  409e38:	e2811068 	add	r1, r1, #104	; 0x68
  409e3c:	e59f21b4 	ldr	r2, [pc, #436]	; 409ff8 <cvInitMatNDHeader+0x210>
  409e40:	e08f2002 	add	r2, pc, r2
  409e44:	e59f31b0 	ldr	r3, [pc, #432]	; 409ffc <cvInitMatNDHeader+0x214>
  409e48:	e08f3003 	add	r3, pc, r3
  409e4c:	eb002315 	bl	412aa8 <cvError>
  409e50:	e1a05004 	mov	r5, r4
  409e54:	ea000052 	b	409fa4 <cvInitMatNDHeader+0x1bc>
  409e58:	e35c0000 	cmp	ip, #0
  409e5c:	1a00000c 	bne	409e94 <cvInitMatNDHeader+0xac>
  409e60:	e59f3198 	ldr	r3, [pc, #408]	; 40a000 <cvInitMatNDHeader+0x218>
  409e64:	e58d3000 	str	r3, [sp]
  409e68:	e3e000d1 	mvn	r0, #209	; 0xd1
  409e6c:	e59f1190 	ldr	r1, [pc, #400]	; 40a004 <cvInitMatNDHeader+0x21c>
  409e70:	e08f1001 	add	r1, pc, r1
  409e74:	e2811068 	add	r1, r1, #104	; 0x68
  409e78:	e59f2188 	ldr	r2, [pc, #392]	; 40a008 <cvInitMatNDHeader+0x220>
  409e7c:	e08f2002 	add	r2, pc, r2
  409e80:	e59f3184 	ldr	r3, [pc, #388]	; 40a00c <cvInitMatNDHeader+0x224>
  409e84:	e08f3003 	add	r3, pc, r3
  409e88:	eb002306 	bl	412aa8 <cvError>
  409e8c:	e3a05000 	mov	r5, #0
  409e90:	ea000043 	b	409fa4 <cvInitMatNDHeader+0x1bc>
  409e94:	e3520000 	cmp	r2, #0
  409e98:	1a00000c 	bne	409ed0 <cvInitMatNDHeader+0xe8>
  409e9c:	e59f316c 	ldr	r3, [pc, #364]	; 40a010 <cvInitMatNDHeader+0x228>
  409ea0:	e58d3000 	str	r3, [sp]
  409ea4:	e3e0001a 	mvn	r0, #26
  409ea8:	e59f1164 	ldr	r1, [pc, #356]	; 40a014 <cvInitMatNDHeader+0x22c>
  409eac:	e08f1001 	add	r1, pc, r1
  409eb0:	e2811068 	add	r1, r1, #104	; 0x68
  409eb4:	e59f215c 	ldr	r2, [pc, #348]	; 40a018 <cvInitMatNDHeader+0x230>
  409eb8:	e08f2002 	add	r2, pc, r2
  409ebc:	e59f3158 	ldr	r3, [pc, #344]	; 40a01c <cvInitMatNDHeader+0x234>
  409ec0:	e08f3003 	add	r3, pc, r3
  409ec4:	eb0022f7 	bl	412aa8 <cvError>
  409ec8:	e3a05000 	mov	r5, #0
  409ecc:	ea000034 	b	409fa4 <cvInitMatNDHeader+0x1bc>
  409ed0:	e2413001 	sub	r3, r1, #1
  409ed4:	e353001f 	cmp	r3, #31
  409ed8:	9a00000c 	bls	409f10 <cvInitMatNDHeader+0x128>
  409edc:	e59f313c 	ldr	r3, [pc, #316]	; 40a020 <cvInitMatNDHeader+0x238>
  409ee0:	e58d3000 	str	r3, [sp]
  409ee4:	e3e000d2 	mvn	r0, #210	; 0xd2
  409ee8:	e59f1134 	ldr	r1, [pc, #308]	; 40a024 <cvInitMatNDHeader+0x23c>
  409eec:	e08f1001 	add	r1, pc, r1
  409ef0:	e2811068 	add	r1, r1, #104	; 0x68
  409ef4:	e59f212c 	ldr	r2, [pc, #300]	; 40a028 <cvInitMatNDHeader+0x240>
  409ef8:	e08f2002 	add	r2, pc, r2
  409efc:	e59f3128 	ldr	r3, [pc, #296]	; 40a02c <cvInitMatNDHeader+0x244>
  409f00:	e08f3003 	add	r3, pc, r3
  409f04:	eb0022e7 	bl	412aa8 <cvError>
  409f08:	e3a05000 	mov	r5, #0
  409f0c:	ea000024 	b	409fa4 <cvInitMatNDHeader+0x1bc>
  409f10:	e2413001 	sub	r3, r1, #1
  409f14:	ea000016 	b	409f74 <cvInitMatNDHeader+0x18c>
  409f18:	e792e103 	ldr	lr, [r2, r3, lsl #2]
  409f1c:	e35e0000 	cmp	lr, #0
  409f20:	ca00000c 	bgt	409f58 <cvInitMatNDHeader+0x170>
  409f24:	e59f3104 	ldr	r3, [pc, #260]	; 40a030 <cvInitMatNDHeader+0x248>
  409f28:	e58d3000 	str	r3, [sp]
  409f2c:	e3e000c8 	mvn	r0, #200	; 0xc8
  409f30:	e59f10fc 	ldr	r1, [pc, #252]	; 40a034 <cvInitMatNDHeader+0x24c>
  409f34:	e08f1001 	add	r1, pc, r1
  409f38:	e2811068 	add	r1, r1, #104	; 0x68
  409f3c:	e59f20f4 	ldr	r2, [pc, #244]	; 40a038 <cvInitMatNDHeader+0x250>
  409f40:	e08f2002 	add	r2, pc, r2
  409f44:	e59f30f0 	ldr	r3, [pc, #240]	; 40a03c <cvInitMatNDHeader+0x254>
  409f48:	e08f3003 	add	r3, pc, r3
  409f4c:	eb0022d5 	bl	412aa8 <cvError>
  409f50:	e3a05000 	mov	r5, #0
  409f54:	ea000012 	b	409fa4 <cvInitMatNDHeader+0x1bc>
  409f58:	e2830002 	add	r0, r3, #2
  409f5c:	e0840180 	add	r0, r4, r0, lsl #3
  409f60:	e580e004 	str	lr, [r0, #4]
  409f64:	e580c008 	str	ip, [r0, #8]
  409f68:	e7920103 	ldr	r0, [r2, r3, lsl #2]
  409f6c:	e00c0c90 	mul	ip, r0, ip
  409f70:	e2433001 	sub	r3, r3, #1
  409f74:	e3530000 	cmp	r3, #0
  409f78:	aaffffe6 	bge	409f18 <cvInitMatNDHeader+0x130>
  409f7c:	e59f30bc 	ldr	r3, [pc, #188]	; 40a040 <cvInitMatNDHeader+0x258>
  409f80:	e1853003 	orr	r3, r5, r3
  409f84:	e5843000 	str	r3, [r4]
  409f88:	e5841004 	str	r1, [r4, #4]
  409f8c:	e59d3018 	ldr	r3, [sp, #24]
  409f90:	e5843010 	str	r3, [r4, #16]
  409f94:	e3a03000 	mov	r3, #0
  409f98:	e5843008 	str	r3, [r4, #8]
  409f9c:	e584300c 	str	r3, [r4, #12]
  409fa0:	e1a05004 	mov	r5, r4
  409fa4:	eb00228e 	bl	4129e4 <cvGetErrStatus>
  409fa8:	e3500000 	cmp	r0, #0
  409fac:	aa000003 	bge	409fc0 <cvInitMatNDHeader+0x1d8>
  409fb0:	e3540000 	cmp	r4, #0
  409fb4:	1a000003 	bne	409fc8 <cvInitMatNDHeader+0x1e0>
  409fb8:	e3a03000 	mov	r3, #0
  409fbc:	ea000002 	b	409fcc <cvInitMatNDHeader+0x1e4>
  409fc0:	e3a03000 	mov	r3, #0
  409fc4:	ea000000 	b	409fcc <cvInitMatNDHeader+0x1e4>
  409fc8:	e3a03001 	mov	r3, #1
  409fcc:	e3530000 	cmp	r3, #0
  409fd0:	13a03000 	movne	r3, #0
  409fd4:	15843000 	strne	r3, [r4]
  409fd8:	15843010 	strne	r3, [r4, #16]
  409fdc:	e1a00005 	mov	r0, r5
  409fe0:	e28dd00c 	add	sp, sp, #12
  409fe4:	e8bd4030 	pop	{r4, r5, lr}
  409fe8:	e12fff1e 	bx	lr
  409fec:	0000ba50 	.word	0x0000ba50
  409ff0:	00000123 	.word	0x00000123
  409ff4:	1fbf665c 	.word	0x1fbf665c
  409ff8:	00033304 	.word	0x00033304
  409ffc:	000331a0 	.word	0x000331a0
  40a000:	00000126 	.word	0x00000126
  40a004:	1fbf6620 	.word	0x1fbf6620
  40a008:	000332e4 	.word	0x000332e4
  40a00c:	00033164 	.word	0x00033164
  40a010:	00000129 	.word	0x00000129
  40a014:	1fbf65e4 	.word	0x1fbf65e4
  40a018:	000332c0 	.word	0x000332c0
  40a01c:	00033128 	.word	0x00033128
  40a020:	0000012d 	.word	0x0000012d
  40a024:	1fbf65a4 	.word	0x1fbf65a4
  40a028:	00033298 	.word	0x00033298
  40a02c:	000330e8 	.word	0x000330e8
  40a030:	00000132 	.word	0x00000132
  40a034:	1fbf655c 	.word	0x1fbf655c
  40a038:	00033280 	.word	0x00033280
  40a03c:	000330a0 	.word	0x000330a0
  40a040:	42434000 	.word	0x42434000

0040a044 <cvCreateMatNDHeader>:
  40a044:	e92d4070 	push	{r4, r5, r6, lr}
  40a048:	e24dd010 	sub	sp, sp, #16
  40a04c:	e1a04000 	mov	r4, r0
  40a050:	e3a03000 	mov	r3, #0
  40a054:	e58d300c 	str	r3, [sp, #12]
  40a058:	e2403001 	sub	r3, r0, #1
  40a05c:	e353001f 	cmp	r3, #31
  40a060:	9a00000b 	bls	40a094 <cvCreateMatNDHeader+0x50>
  40a064:	e59f30fc 	ldr	r3, [pc, #252]	; 40a168 <cvCreateMatNDHeader+0x124>
  40a068:	e58d3000 	str	r3, [sp]
  40a06c:	e3e000d2 	mvn	r0, #210	; 0xd2
  40a070:	e59f10f4 	ldr	r1, [pc, #244]	; 40a16c <cvCreateMatNDHeader+0x128>
  40a074:	e08f1001 	add	r1, pc, r1
  40a078:	e281107c 	add	r1, r1, #124	; 0x7c
  40a07c:	e59f20ec 	ldr	r2, [pc, #236]	; 40a170 <cvCreateMatNDHeader+0x12c>
  40a080:	e08f2002 	add	r2, pc, r2
  40a084:	e59f30e8 	ldr	r3, [pc, #232]	; 40a174 <cvCreateMatNDHeader+0x130>
  40a088:	e08f3003 	add	r3, pc, r3
  40a08c:	eb002285 	bl	412aa8 <cvError>
  40a090:	ea00002c 	b	40a148 <cvCreateMatNDHeader+0x104>
  40a094:	e1a06001 	mov	r6, r1
  40a098:	e1a05002 	mov	r5, r2
  40a09c:	e3a00f45 	mov	r0, #276	; 0x114
  40a0a0:	eb004605 	bl	41b8bc <cvAlloc>
  40a0a4:	e58d000c 	str	r0, [sp, #12]
  40a0a8:	eb00224d 	bl	4129e4 <cvGetErrStatus>
  40a0ac:	e3500000 	cmp	r0, #0
  40a0b0:	aa00000b 	bge	40a0e4 <cvCreateMatNDHeader+0xa0>
  40a0b4:	e59f30bc 	ldr	r3, [pc, #188]	; 40a178 <cvCreateMatNDHeader+0x134>
  40a0b8:	e58d3000 	str	r3, [sp]
  40a0bc:	e3e00000 	mvn	r0, #0
  40a0c0:	e59f10b4 	ldr	r1, [pc, #180]	; 40a17c <cvCreateMatNDHeader+0x138>
  40a0c4:	e08f1001 	add	r1, pc, r1
  40a0c8:	e281107c 	add	r1, r1, #124	; 0x7c
  40a0cc:	e59f20ac 	ldr	r2, [pc, #172]	; 40a180 <cvCreateMatNDHeader+0x13c>
  40a0d0:	e08f2002 	add	r2, pc, r2
  40a0d4:	e59f30a8 	ldr	r3, [pc, #168]	; 40a184 <cvCreateMatNDHeader+0x140>
  40a0d8:	e08f3003 	add	r3, pc, r3
  40a0dc:	eb002271 	bl	412aa8 <cvError>
  40a0e0:	ea000018 	b	40a148 <cvCreateMatNDHeader+0x104>
  40a0e4:	e3a03000 	mov	r3, #0
  40a0e8:	e58d3000 	str	r3, [sp]
  40a0ec:	e59d000c 	ldr	r0, [sp, #12]
  40a0f0:	e1a01004 	mov	r1, r4
  40a0f4:	e1a02006 	mov	r2, r6
  40a0f8:	e1a03005 	mov	r3, r5
  40a0fc:	ebffff39 	bl	409de8 <cvInitMatNDHeader>
  40a100:	eb002237 	bl	4129e4 <cvGetErrStatus>
  40a104:	e3500000 	cmp	r0, #0
  40a108:	aa00000b 	bge	40a13c <cvCreateMatNDHeader+0xf8>
  40a10c:	e59f3074 	ldr	r3, [pc, #116]	; 40a188 <cvCreateMatNDHeader+0x144>
  40a110:	e58d3000 	str	r3, [sp]
  40a114:	e3e00000 	mvn	r0, #0
  40a118:	e59f106c 	ldr	r1, [pc, #108]	; 40a18c <cvCreateMatNDHeader+0x148>
  40a11c:	e08f1001 	add	r1, pc, r1
  40a120:	e281107c 	add	r1, r1, #124	; 0x7c
  40a124:	e59f2064 	ldr	r2, [pc, #100]	; 40a190 <cvCreateMatNDHeader+0x14c>
  40a128:	e08f2002 	add	r2, pc, r2
  40a12c:	e59f3060 	ldr	r3, [pc, #96]	; 40a194 <cvCreateMatNDHeader+0x150>
  40a130:	e08f3003 	add	r3, pc, r3
  40a134:	eb00225b 	bl	412aa8 <cvError>
  40a138:	ea000002 	b	40a148 <cvCreateMatNDHeader+0x104>
  40a13c:	e3a02001 	mov	r2, #1
  40a140:	e59d300c 	ldr	r3, [sp, #12]
  40a144:	e583200c 	str	r2, [r3, #12]
  40a148:	eb002225 	bl	4129e4 <cvGetErrStatus>
  40a14c:	e3500000 	cmp	r0, #0
  40a150:	b28d000c 	addlt	r0, sp, #12
  40a154:	bbfffe1e 	bllt	4099d4 <cvReleaseMat>
  40a158:	e59d000c 	ldr	r0, [sp, #12]
  40a15c:	e28dd010 	add	sp, sp, #16
  40a160:	e8bd4070 	pop	{r4, r5, r6, lr}
  40a164:	e12fff1e 	bx	lr
  40a168:	0000016f 	.word	0x0000016f
  40a16c:	1fbf641c 	.word	0x1fbf641c
  40a170:	00033110 	.word	0x00033110
  40a174:	00032f60 	.word	0x00032f60
  40a178:	00000171 	.word	0x00000171
  40a17c:	1fbf63cc 	.word	0x1fbf63cc
  40a180:	00032f00 	.word	0x00032f00
  40a184:	00032f10 	.word	0x00032f10
  40a188:	00000173 	.word	0x00000173
  40a18c:	1fbf6374 	.word	0x1fbf6374
  40a190:	00032ea8 	.word	0x00032ea8
  40a194:	00032eb8 	.word	0x00032eb8

0040a198 <cvNextNArraySlice>:
  40a198:	e92d4038 	push	{r3, r4, r5, lr}
  40a19c:	e2503000 	subs	r3, r0, #0
  40a1a0:	1a000008 	bne	40a1c8 <cvNextNArraySlice+0x30>
  40a1a4:	e59f00e4 	ldr	r0, [pc, #228]	; 40a290 <cvNextNArraySlice+0xf8>
  40a1a8:	e08f0000 	add	r0, pc, r0
  40a1ac:	e59f10e0 	ldr	r1, [pc, #224]	; 40a294 <cvNextNArraySlice+0xfc>
  40a1b0:	e59f20e0 	ldr	r2, [pc, #224]	; 40a298 <cvNextNArraySlice+0x100>
  40a1b4:	e08f2002 	add	r2, pc, r2
  40a1b8:	e282207c 	add	r2, r2, #124	; 0x7c
  40a1bc:	e59f30d8 	ldr	r3, [pc, #216]	; 40a29c <cvNextNArraySlice+0x104>
  40a1c0:	e08f3003 	add	r3, pc, r3
  40a1c4:	fa00a6e2 	blx	433d54 <__assert_func>
  40a1c8:	e5930004 	ldr	r0, [r3, #4]
  40a1cc:	ea000028 	b	40a274 <cvNextNArraySlice+0xdc>
  40a1d0:	e282102e 	add	r1, r2, #46	; 0x2e
  40a1d4:	e793c101 	ldr	ip, [r3, r1, lsl #2]
  40a1d8:	e282e004 	add	lr, r2, #4
  40a1dc:	e08cc180 	add	ip, ip, r0, lsl #3
  40a1e0:	e793110e 	ldr	r1, [r3, lr, lsl #2]
  40a1e4:	e59cc010 	ldr	ip, [ip, #16]
  40a1e8:	e081100c 	add	r1, r1, ip
  40a1ec:	e783110e 	str	r1, [r3, lr, lsl #2]
  40a1f0:	e2822001 	add	r2, r2, #1
  40a1f4:	ea000000 	b	40a1fc <cvNextNArraySlice+0x64>
  40a1f8:	e3a02000 	mov	r2, #0
  40a1fc:	e593c000 	ldr	ip, [r3]
  40a200:	e15c0002 	cmp	ip, r2
  40a204:	cafffff1 	bgt	40a1d0 <cvNextNArraySlice+0x38>
  40a208:	e2404001 	sub	r4, r0, #1
  40a20c:	e280100d 	add	r1, r0, #13
  40a210:	e7932101 	ldr	r2, [r3, r1, lsl #2]
  40a214:	e2422001 	sub	r2, r2, #1
  40a218:	e7832101 	str	r2, [r3, r1, lsl #2]
  40a21c:	e3520000 	cmp	r2, #0
  40a220:	ca000015 	bgt	40a27c <cvNextNArraySlice+0xe4>
  40a224:	e59320b8 	ldr	r2, [r3, #184]	; 0xb8
  40a228:	e0822184 	add	r2, r2, r4, lsl #3
  40a22c:	e5925014 	ldr	r5, [r2, #20]
  40a230:	e3a02000 	mov	r2, #0
  40a234:	ea000009 	b	40a260 <cvNextNArraySlice+0xc8>
  40a238:	e282102e 	add	r1, r2, #46	; 0x2e
  40a23c:	e7931101 	ldr	r1, [r3, r1, lsl #2]
  40a240:	e0811184 	add	r1, r1, r4, lsl #3
  40a244:	e5911018 	ldr	r1, [r1, #24]
  40a248:	e0000195 	mul	r0, r5, r1
  40a24c:	e282e004 	add	lr, r2, #4
  40a250:	e793110e 	ldr	r1, [r3, lr, lsl #2]
  40a254:	e0601001 	rsb	r1, r0, r1
  40a258:	e783110e 	str	r1, [r3, lr, lsl #2]
  40a25c:	e2822001 	add	r2, r2, #1
  40a260:	e152000c 	cmp	r2, ip
  40a264:	bafffff3 	blt	40a238 <cvNextNArraySlice+0xa0>
  40a268:	e284200e 	add	r2, r4, #14
  40a26c:	e7835102 	str	r5, [r3, r2, lsl #2]
  40a270:	e1a00004 	mov	r0, r4
  40a274:	e3500000 	cmp	r0, #0
  40a278:	caffffde 	bgt	40a1f8 <cvNextNArraySlice+0x60>
  40a27c:	e3500000 	cmp	r0, #0
  40a280:	d3a00000 	movle	r0, #0
  40a284:	c3a00001 	movgt	r0, #1
  40a288:	e8bd4038 	pop	{r3, r4, r5, lr}
  40a28c:	e12fff1e 	bx	lr
  40a290:	00032e40 	.word	0x00032e40
  40a294:	00000261 	.word	0x00000261
  40a298:	00032c48 	.word	0x00032c48
  40a29c:	00033028 	.word	0x00033028

0040a2a0 <cvReleaseSparseMat>:
  40a2a0:	e92d4030 	push	{r4, r5, lr}
  40a2a4:	e24dd00c 	sub	sp, sp, #12
  40a2a8:	e3500000 	cmp	r0, #0
  40a2ac:	1a00000b 	bne	40a2e0 <cvReleaseSparseMat+0x40>
  40a2b0:	e59f30ac 	ldr	r3, [pc, #172]	; 40a364 <cvReleaseSparseMat+0xc4>
  40a2b4:	e58d3000 	str	r3, [sp]
  40a2b8:	e3e00008 	mvn	r0, #8
  40a2bc:	e59f10a4 	ldr	r1, [pc, #164]	; 40a368 <cvReleaseSparseMat+0xc8>
  40a2c0:	e08f1001 	add	r1, pc, r1
  40a2c4:	e2811090 	add	r1, r1, #144	; 0x90
  40a2c8:	e59f209c 	ldr	r2, [pc, #156]	; 40a36c <cvReleaseSparseMat+0xcc>
  40a2cc:	e08f2002 	add	r2, pc, r2
  40a2d0:	e59f3098 	ldr	r3, [pc, #152]	; 40a370 <cvReleaseSparseMat+0xd0>
  40a2d4:	e08f3003 	add	r3, pc, r3
  40a2d8:	eb0021f2 	bl	412aa8 <cvError>
  40a2dc:	ea00001d 	b	40a358 <cvReleaseSparseMat+0xb8>
  40a2e0:	e5904000 	ldr	r4, [r0]
  40a2e4:	e3540000 	cmp	r4, #0
  40a2e8:	0a00001a 	beq	40a358 <cvReleaseSparseMat+0xb8>
  40a2ec:	0a000003 	beq	40a300 <cvReleaseSparseMat+0x60>
  40a2f0:	e1d420b2 	ldrh	r2, [r4, #2]
  40a2f4:	e59f3078 	ldr	r3, [pc, #120]	; 40a374 <cvReleaseSparseMat+0xd4>
  40a2f8:	e1530802 	cmp	r3, r2, lsl #16
  40a2fc:	0a00000b 	beq	40a330 <cvReleaseSparseMat+0x90>
  40a300:	e59f3070 	ldr	r3, [pc, #112]	; 40a378 <cvReleaseSparseMat+0xd8>
  40a304:	e58d3000 	str	r3, [sp]
  40a308:	e3e000cd 	mvn	r0, #205	; 0xcd
  40a30c:	e59f1068 	ldr	r1, [pc, #104]	; 40a37c <cvReleaseSparseMat+0xdc>
  40a310:	e08f1001 	add	r1, pc, r1
  40a314:	e2811090 	add	r1, r1, #144	; 0x90
  40a318:	e59f2060 	ldr	r2, [pc, #96]	; 40a380 <cvReleaseSparseMat+0xe0>
  40a31c:	e08f2002 	add	r2, pc, r2
  40a320:	e59f305c 	ldr	r3, [pc, #92]	; 40a384 <cvReleaseSparseMat+0xe4>
  40a324:	e08f3003 	add	r3, pc, r3
  40a328:	eb0021de 	bl	412aa8 <cvError>
  40a32c:	ea000009 	b	40a358 <cvReleaseSparseMat+0xb8>
  40a330:	e3a05000 	mov	r5, #0
  40a334:	e5805000 	str	r5, [r0]
  40a338:	e5940010 	ldr	r0, [r4, #16]
  40a33c:	e280002c 	add	r0, r0, #44	; 0x2c
  40a340:	eb0023fa 	bl	413330 <cvReleaseMemStorage>
  40a344:	e5940014 	ldr	r0, [r4, #20]
  40a348:	eb00458d 	bl	41b984 <cvFree_>
  40a34c:	e5845014 	str	r5, [r4, #20]
  40a350:	e1a00004 	mov	r0, r4
  40a354:	eb00458a 	bl	41b984 <cvFree_>
  40a358:	e28dd00c 	add	sp, sp, #12
  40a35c:	e8bd4030 	pop	{r4, r5, lr}
  40a360:	e12fff1e 	bx	lr
  40a364:	000002c3 	.word	0x000002c3
  40a368:	1fbf61d0 	.word	0x1fbf61d0
  40a36c:	00036144 	.word	0x00036144
  40a370:	00032d14 	.word	0x00032d14
  40a374:	42440000 	.word	0x42440000
  40a378:	000002ca 	.word	0x000002ca
  40a37c:	1fbf6180 	.word	0x1fbf6180
  40a380:	000360f4 	.word	0x000360f4
  40a384:	00032cc4 	.word	0x00032cc4

0040a388 <cvCreateSparseMat>:
  40a388:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  40a38c:	e24dd010 	sub	sp, sp, #16
  40a390:	e3a03000 	mov	r3, #0
  40a394:	e58d300c 	str	r3, [sp, #12]
  40a398:	e1a08b82 	lsl	r8, r2, #23
  40a39c:	e1a08ba8 	lsr	r8, r8, #23
  40a3a0:	e2026007 	and	r6, r2, #7
  40a3a4:	e1a06106 	lsl	r6, r6, #2
  40a3a8:	e59f3390 	ldr	r3, [pc, #912]	; 40a740 <cvCreateSparseMat+0x3b8>
  40a3ac:	e1a06633 	lsr	r6, r3, r6
  40a3b0:	e206600f 	and	r6, r6, #15
  40a3b4:	e2024f7e 	and	r4, r2, #504	; 0x1f8
  40a3b8:	e1a041c4 	asr	r4, r4, #3
  40a3bc:	e0246496 	mla	r4, r6, r4, r6
  40a3c0:	e3540000 	cmp	r4, #0
  40a3c4:	1a00000b 	bne	40a3f8 <cvCreateSparseMat+0x70>
  40a3c8:	e59f3374 	ldr	r3, [pc, #884]	; 40a744 <cvCreateSparseMat+0x3bc>
  40a3cc:	e58d3000 	str	r3, [sp]
  40a3d0:	e3e000d1 	mvn	r0, #209	; 0xd1
  40a3d4:	e59f136c 	ldr	r1, [pc, #876]	; 40a748 <cvCreateSparseMat+0x3c0>
  40a3d8:	e08f1001 	add	r1, pc, r1
  40a3dc:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a3e0:	e59f2364 	ldr	r2, [pc, #868]	; 40a74c <cvCreateSparseMat+0x3c4>
  40a3e4:	e08f2002 	add	r2, pc, r2
  40a3e8:	e59f3360 	ldr	r3, [pc, #864]	; 40a750 <cvCreateSparseMat+0x3c8>
  40a3ec:	e08f3003 	add	r3, pc, r3
  40a3f0:	eb0021ac 	bl	412aa8 <cvError>
  40a3f4:	ea0000c9 	b	40a720 <cvCreateSparseMat+0x398>
  40a3f8:	e1a05000 	mov	r5, r0
  40a3fc:	e1a07001 	mov	r7, r1
  40a400:	e2403001 	sub	r3, r0, #1
  40a404:	e3530801 	cmp	r3, #65536	; 0x10000
  40a408:	3a00000b 	bcc	40a43c <cvCreateSparseMat+0xb4>
  40a40c:	e59f3340 	ldr	r3, [pc, #832]	; 40a754 <cvCreateSparseMat+0x3cc>
  40a410:	e58d3000 	str	r3, [sp]
  40a414:	e3e000d2 	mvn	r0, #210	; 0xd2
  40a418:	e59f1338 	ldr	r1, [pc, #824]	; 40a758 <cvCreateSparseMat+0x3d0>
  40a41c:	e08f1001 	add	r1, pc, r1
  40a420:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a424:	e59f2330 	ldr	r2, [pc, #816]	; 40a75c <cvCreateSparseMat+0x3d4>
  40a428:	e08f2002 	add	r2, pc, r2
  40a42c:	e59f332c 	ldr	r3, [pc, #812]	; 40a760 <cvCreateSparseMat+0x3d8>
  40a430:	e08f3003 	add	r3, pc, r3
  40a434:	eb00219b 	bl	412aa8 <cvError>
  40a438:	ea0000b8 	b	40a720 <cvCreateSparseMat+0x398>
  40a43c:	e3510000 	cmp	r1, #0
  40a440:	1a00001c 	bne	40a4b8 <cvCreateSparseMat+0x130>
  40a444:	e3a03fa5 	mov	r3, #660	; 0x294
  40a448:	e58d3000 	str	r3, [sp]
  40a44c:	e3e0001a 	mvn	r0, #26
  40a450:	e59f130c 	ldr	r1, [pc, #780]	; 40a764 <cvCreateSparseMat+0x3dc>
  40a454:	e08f1001 	add	r1, pc, r1
  40a458:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a45c:	e59f2304 	ldr	r2, [pc, #772]	; 40a768 <cvCreateSparseMat+0x3e0>
  40a460:	e08f2002 	add	r2, pc, r2
  40a464:	e59f3300 	ldr	r3, [pc, #768]	; 40a76c <cvCreateSparseMat+0x3e4>
  40a468:	e08f3003 	add	r3, pc, r3
  40a46c:	eb00218d 	bl	412aa8 <cvError>
  40a470:	ea0000aa 	b	40a720 <cvCreateSparseMat+0x398>
  40a474:	e7972103 	ldr	r2, [r7, r3, lsl #2]
  40a478:	e3520000 	cmp	r2, #0
  40a47c:	ca00000b 	bgt	40a4b0 <cvCreateSparseMat+0x128>
  40a480:	e59f32e8 	ldr	r3, [pc, #744]	; 40a770 <cvCreateSparseMat+0x3e8>
  40a484:	e58d3000 	str	r3, [sp]
  40a488:	e3e000c8 	mvn	r0, #200	; 0xc8
  40a48c:	e59f12e0 	ldr	r1, [pc, #736]	; 40a774 <cvCreateSparseMat+0x3ec>
  40a490:	e08f1001 	add	r1, pc, r1
  40a494:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a498:	e59f22d8 	ldr	r2, [pc, #728]	; 40a778 <cvCreateSparseMat+0x3f0>
  40a49c:	e08f2002 	add	r2, pc, r2
  40a4a0:	e59f32d4 	ldr	r3, [pc, #724]	; 40a77c <cvCreateSparseMat+0x3f4>
  40a4a4:	e08f3003 	add	r3, pc, r3
  40a4a8:	eb00217e 	bl	412aa8 <cvError>
  40a4ac:	ea00009b 	b	40a720 <cvCreateSparseMat+0x398>
  40a4b0:	e2833001 	add	r3, r3, #1
  40a4b4:	ea000000 	b	40a4bc <cvCreateSparseMat+0x134>
  40a4b8:	e3a03000 	mov	r3, #0
  40a4bc:	e1530005 	cmp	r3, r5
  40a4c0:	baffffeb 	blt	40a474 <cvCreateSparseMat+0xec>
  40a4c4:	e2450020 	sub	r0, r5, #32
  40a4c8:	e1c00fc0 	bic	r0, r0, r0, asr #31
  40a4cc:	e1a00100 	lsl	r0, r0, #2
  40a4d0:	e28000a4 	add	r0, r0, #164	; 0xa4
  40a4d4:	eb0044f8 	bl	41b8bc <cvAlloc>
  40a4d8:	e58d000c 	str	r0, [sp, #12]
  40a4dc:	eb002140 	bl	4129e4 <cvGetErrStatus>
  40a4e0:	e3500000 	cmp	r0, #0
  40a4e4:	aa00000b 	bge	40a518 <cvCreateSparseMat+0x190>
  40a4e8:	e3a03fa7 	mov	r3, #668	; 0x29c
  40a4ec:	e58d3000 	str	r3, [sp]
  40a4f0:	e3e00000 	mvn	r0, #0
  40a4f4:	e59f1284 	ldr	r1, [pc, #644]	; 40a780 <cvCreateSparseMat+0x3f8>
  40a4f8:	e08f1001 	add	r1, pc, r1
  40a4fc:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a500:	e59f227c 	ldr	r2, [pc, #636]	; 40a784 <cvCreateSparseMat+0x3fc>
  40a504:	e08f2002 	add	r2, pc, r2
  40a508:	e59f3278 	ldr	r3, [pc, #632]	; 40a788 <cvCreateSparseMat+0x400>
  40a50c:	e08f3003 	add	r3, pc, r3
  40a510:	eb002164 	bl	412aa8 <cvError>
  40a514:	ea000081 	b	40a720 <cvCreateSparseMat+0x398>
  40a518:	e3888442 	orr	r8, r8, #1107296256	; 0x42000000
  40a51c:	e3888711 	orr	r8, r8, #4456448	; 0x440000
  40a520:	e59d300c 	ldr	r3, [sp, #12]
  40a524:	e5838000 	str	r8, [r3]
  40a528:	e59d800c 	ldr	r8, [sp, #12]
  40a52c:	e5885004 	str	r5, [r8, #4]
  40a530:	e3a03000 	mov	r3, #0
  40a534:	e5883008 	str	r3, [r8, #8]
  40a538:	e3a03001 	mov	r3, #1
  40a53c:	e588300c 	str	r3, [r8, #12]
  40a540:	e1a05105 	lsl	r5, r5, #2
  40a544:	e2880024 	add	r0, r8, #36	; 0x24
  40a548:	e1a01007 	mov	r1, r7
  40a54c:	e1a02005 	mov	r2, r5
  40a550:	fa00aa60 	blx	434ed8 <memcpy>
  40a554:	e2463001 	sub	r3, r6, #1
  40a558:	e1160003 	tst	r6, r3
  40a55c:	0a000008 	beq	40a584 <cvCreateSparseMat+0x1fc>
  40a560:	e59f0224 	ldr	r0, [pc, #548]	; 40a78c <cvCreateSparseMat+0x404>
  40a564:	e08f0000 	add	r0, pc, r0
  40a568:	e3a010e7 	mov	r1, #231	; 0xe7
  40a56c:	e59f221c 	ldr	r2, [pc, #540]	; 40a790 <cvCreateSparseMat+0x408>
  40a570:	e08f2002 	add	r2, pc, r2
  40a574:	e2822064 	add	r2, r2, #100	; 0x64
  40a578:	e59f3214 	ldr	r3, [pc, #532]	; 40a794 <cvCreateSparseMat+0x40c>
  40a57c:	e08f3003 	add	r3, pc, r3
  40a580:	fa00a5f3 	blx	433d54 <__assert_func>
  40a584:	e2863007 	add	r3, r6, #7
  40a588:	e2666000 	rsb	r6, r6, #0
  40a58c:	e0066003 	and	r6, r6, r3
  40a590:	e588601c 	str	r6, [r8, #28]
  40a594:	e59d300c 	ldr	r3, [sp, #12]
  40a598:	e593201c 	ldr	r2, [r3, #28]
  40a59c:	e0844002 	add	r4, r4, r2
  40a5a0:	e3740106 	cmn	r4, #-2147483647	; 0x80000001
  40a5a4:	1a000008 	bne	40a5cc <cvCreateSparseMat+0x244>
  40a5a8:	e59f01e8 	ldr	r0, [pc, #488]	; 40a798 <cvCreateSparseMat+0x410>
  40a5ac:	e08f0000 	add	r0, pc, r0
  40a5b0:	e3a010e7 	mov	r1, #231	; 0xe7
  40a5b4:	e59f21e0 	ldr	r2, [pc, #480]	; 40a79c <cvCreateSparseMat+0x414>
  40a5b8:	e08f2002 	add	r2, pc, r2
  40a5bc:	e2822064 	add	r2, r2, #100	; 0x64
  40a5c0:	e59f31d8 	ldr	r3, [pc, #472]	; 40a7a0 <cvCreateSparseMat+0x418>
  40a5c4:	e08f3003 	add	r3, pc, r3
  40a5c8:	fa00a5e1 	blx	433d54 <__assert_func>
  40a5cc:	e2844003 	add	r4, r4, #3
  40a5d0:	e3c44003 	bic	r4, r4, #3
  40a5d4:	e5834020 	str	r4, [r3, #32]
  40a5d8:	e59d300c 	ldr	r3, [sp, #12]
  40a5dc:	e5933020 	ldr	r3, [r3, #32]
  40a5e0:	e0855003 	add	r5, r5, r3
  40a5e4:	e3750106 	cmn	r5, #-2147483647	; 0x80000001
  40a5e8:	1a000008 	bne	40a610 <cvCreateSparseMat+0x288>
  40a5ec:	e59f01b0 	ldr	r0, [pc, #432]	; 40a7a4 <cvCreateSparseMat+0x41c>
  40a5f0:	e08f0000 	add	r0, pc, r0
  40a5f4:	e3a010e7 	mov	r1, #231	; 0xe7
  40a5f8:	e59f21a8 	ldr	r2, [pc, #424]	; 40a7a8 <cvCreateSparseMat+0x420>
  40a5fc:	e08f2002 	add	r2, pc, r2
  40a600:	e2822064 	add	r2, r2, #100	; 0x64
  40a604:	e59f31a0 	ldr	r3, [pc, #416]	; 40a7ac <cvCreateSparseMat+0x424>
  40a608:	e08f3003 	add	r3, pc, r3
  40a60c:	fa00a5d0 	blx	433d54 <__assert_func>
  40a610:	e2855007 	add	r5, r5, #7
  40a614:	e3c55007 	bic	r5, r5, #7
  40a618:	e3a00a01 	mov	r0, #4096	; 0x1000
  40a61c:	eb0022d9 	bl	413188 <cvCreateMemStorage>
  40a620:	e1a04000 	mov	r4, r0
  40a624:	eb0020ee 	bl	4129e4 <cvGetErrStatus>
  40a628:	e3500000 	cmp	r0, #0
  40a62c:	aa00000b 	bge	40a660 <cvCreateSparseMat+0x2d8>
  40a630:	e3a03faa 	mov	r3, #680	; 0x2a8
  40a634:	e58d3000 	str	r3, [sp]
  40a638:	e3e00000 	mvn	r0, #0
  40a63c:	e59f116c 	ldr	r1, [pc, #364]	; 40a7b0 <cvCreateSparseMat+0x428>
  40a640:	e08f1001 	add	r1, pc, r1
  40a644:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a648:	e59f2164 	ldr	r2, [pc, #356]	; 40a7b4 <cvCreateSparseMat+0x42c>
  40a64c:	e08f2002 	add	r2, pc, r2
  40a650:	e59f3160 	ldr	r3, [pc, #352]	; 40a7b8 <cvCreateSparseMat+0x430>
  40a654:	e08f3003 	add	r3, pc, r3
  40a658:	eb002112 	bl	412aa8 <cvError>
  40a65c:	ea00002f 	b	40a720 <cvCreateSparseMat+0x398>
  40a660:	e59d600c 	ldr	r6, [sp, #12]
  40a664:	e3a00000 	mov	r0, #0
  40a668:	e3a01040 	mov	r1, #64	; 0x40
  40a66c:	e1a02005 	mov	r2, r5
  40a670:	e1a03004 	mov	r3, r4
  40a674:	eb003a6b 	bl	419028 <cvCreateSet>
  40a678:	e5860010 	str	r0, [r6, #16]
  40a67c:	eb0020d8 	bl	4129e4 <cvGetErrStatus>
  40a680:	e3500000 	cmp	r0, #0
  40a684:	aa00000b 	bge	40a6b8 <cvCreateSparseMat+0x330>
  40a688:	e59f312c 	ldr	r3, [pc, #300]	; 40a7bc <cvCreateSparseMat+0x434>
  40a68c:	e58d3000 	str	r3, [sp]
  40a690:	e3e00000 	mvn	r0, #0
  40a694:	e59f1124 	ldr	r1, [pc, #292]	; 40a7c0 <cvCreateSparseMat+0x438>
  40a698:	e08f1001 	add	r1, pc, r1
  40a69c:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a6a0:	e59f211c 	ldr	r2, [pc, #284]	; 40a7c4 <cvCreateSparseMat+0x43c>
  40a6a4:	e08f2002 	add	r2, pc, r2
  40a6a8:	e59f3118 	ldr	r3, [pc, #280]	; 40a7c8 <cvCreateSparseMat+0x440>
  40a6ac:	e08f3003 	add	r3, pc, r3
  40a6b0:	eb0020fc 	bl	412aa8 <cvError>
  40a6b4:	ea000019 	b	40a720 <cvCreateSparseMat+0x398>
  40a6b8:	e59d400c 	ldr	r4, [sp, #12]
  40a6bc:	e3a03b01 	mov	r3, #1024	; 0x400
  40a6c0:	e5843018 	str	r3, [r4, #24]
  40a6c4:	e3a00a01 	mov	r0, #4096	; 0x1000
  40a6c8:	eb00447b 	bl	41b8bc <cvAlloc>
  40a6cc:	e5840014 	str	r0, [r4, #20]
  40a6d0:	eb0020c3 	bl	4129e4 <cvGetErrStatus>
  40a6d4:	e3500000 	cmp	r0, #0
  40a6d8:	aa00000b 	bge	40a70c <cvCreateSparseMat+0x384>
  40a6dc:	e59f30e8 	ldr	r3, [pc, #232]	; 40a7cc <cvCreateSparseMat+0x444>
  40a6e0:	e58d3000 	str	r3, [sp]
  40a6e4:	e3e00000 	mvn	r0, #0
  40a6e8:	e59f10e0 	ldr	r1, [pc, #224]	; 40a7d0 <cvCreateSparseMat+0x448>
  40a6ec:	e08f1001 	add	r1, pc, r1
  40a6f0:	e28110a4 	add	r1, r1, #164	; 0xa4
  40a6f4:	e59f20d8 	ldr	r2, [pc, #216]	; 40a7d4 <cvCreateSparseMat+0x44c>
  40a6f8:	e08f2002 	add	r2, pc, r2
  40a6fc:	e59f30d4 	ldr	r3, [pc, #212]	; 40a7d8 <cvCreateSparseMat+0x450>
  40a700:	e08f3003 	add	r3, pc, r3
  40a704:	eb0020e7 	bl	412aa8 <cvError>
  40a708:	ea000004 	b	40a720 <cvCreateSparseMat+0x398>
  40a70c:	e59d300c 	ldr	r3, [sp, #12]
  40a710:	e5930014 	ldr	r0, [r3, #20]
  40a714:	e3a01000 	mov	r1, #0
  40a718:	e3a02a01 	mov	r2, #4096	; 0x1000
  40a71c:	fa00aa6c 	blx	4350d4 <memset>
  40a720:	eb0020af 	bl	4129e4 <cvGetErrStatus>
  40a724:	e3500000 	cmp	r0, #0
  40a728:	b28d000c 	addlt	r0, sp, #12
  40a72c:	bbfffedb 	bllt	40a2a0 <cvReleaseSparseMat>
  40a730:	e59d000c 	ldr	r0, [sp, #12]
  40a734:	e28dd010 	add	sp, sp, #16
  40a738:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  40a73c:	e12fff1e 	bx	lr
  40a740:	48442211 	.word	0x48442211
  40a744:	0000028e 	.word	0x0000028e
  40a748:	1fbf60b8 	.word	0x1fbf60b8
  40a74c:	00032d7c 	.word	0x00032d7c
  40a750:	00032bfc 	.word	0x00032bfc
  40a754:	00000291 	.word	0x00000291
  40a758:	1fbf6074 	.word	0x1fbf6074
  40a75c:	00032dd0 	.word	0x00032dd0
  40a760:	00032bb8 	.word	0x00032bb8
  40a764:	1fbf603c 	.word	0x1fbf603c
  40a768:	00032d18 	.word	0x00032d18
  40a76c:	00032b80 	.word	0x00032b80
  40a770:	00000299 	.word	0x00000299
  40a774:	1fbf6000 	.word	0x1fbf6000
  40a778:	00032d24 	.word	0x00032d24
  40a77c:	00032b44 	.word	0x00032b44
  40a780:	1fbf5f98 	.word	0x1fbf5f98
  40a784:	00032acc 	.word	0x00032acc
  40a788:	00032adc 	.word	0x00032adc
  40a78c:	00032b9c 	.word	0x00032b9c
  40a790:	0003288c 	.word	0x0003288c
  40a794:	00032b9c 	.word	0x00032b9c
  40a798:	00032b54 	.word	0x00032b54
  40a79c:	00032844 	.word	0x00032844
  40a7a0:	00032b54 	.word	0x00032b54
  40a7a4:	00032b10 	.word	0x00032b10
  40a7a8:	00032800 	.word	0x00032800
  40a7ac:	00032b10 	.word	0x00032b10
  40a7b0:	1fbf5e50 	.word	0x1fbf5e50
  40a7b4:	00032984 	.word	0x00032984
  40a7b8:	00032994 	.word	0x00032994
  40a7bc:	000002a9 	.word	0x000002a9
  40a7c0:	1fbf5df8 	.word	0x1fbf5df8
  40a7c4:	0003292c 	.word	0x0003292c
  40a7c8:	0003293c 	.word	0x0003293c
  40a7cc:	000002ae 	.word	0x000002ae
  40a7d0:	1fbf5da4 	.word	0x1fbf5da4
  40a7d4:	000328d8 	.word	0x000328d8
  40a7d8:	000328e8 	.word	0x000328e8

0040a7dc <cvCloneSparseMat>:
  40a7dc:	e92d4010 	push	{r4, lr}
  40a7e0:	e24dd010 	sub	sp, sp, #16
  40a7e4:	e3a03000 	mov	r3, #0
  40a7e8:	e58d300c 	str	r3, [sp, #12]
  40a7ec:	e2504000 	subs	r4, r0, #0
  40a7f0:	0a000004 	beq	40a808 <cvCloneSparseMat+0x2c>
  40a7f4:	e5942000 	ldr	r2, [r4]
  40a7f8:	e1a01822 	lsr	r1, r2, #16
  40a7fc:	e59f30e8 	ldr	r3, [pc, #232]	; 40a8ec <cvCloneSparseMat+0x110>
  40a800:	e1530801 	cmp	r3, r1, lsl #16
  40a804:	0a00000b 	beq	40a838 <cvCloneSparseMat+0x5c>
  40a808:	e59f30e0 	ldr	r3, [pc, #224]	; 40a8f0 <cvCloneSparseMat+0x114>
  40a80c:	e58d3000 	str	r3, [sp]
  40a810:	e3e00004 	mvn	r0, #4
  40a814:	e59f10d8 	ldr	r1, [pc, #216]	; 40a8f4 <cvCloneSparseMat+0x118>
  40a818:	e08f1001 	add	r1, pc, r1
  40a81c:	e28110b8 	add	r1, r1, #184	; 0xb8
  40a820:	e59f20d0 	ldr	r2, [pc, #208]	; 40a8f8 <cvCloneSparseMat+0x11c>
  40a824:	e08f2002 	add	r2, pc, r2
  40a828:	e59f30cc 	ldr	r3, [pc, #204]	; 40a8fc <cvCloneSparseMat+0x120>
  40a82c:	e08f3003 	add	r3, pc, r3
  40a830:	eb00209c 	bl	412aa8 <cvError>
  40a834:	ea000024 	b	40a8cc <cvCloneSparseMat+0xf0>
  40a838:	e5940004 	ldr	r0, [r4, #4]
  40a83c:	e2841024 	add	r1, r4, #36	; 0x24
  40a840:	ebfffed0 	bl	40a388 <cvCreateSparseMat>
  40a844:	e58d000c 	str	r0, [sp, #12]
  40a848:	eb002065 	bl	4129e4 <cvGetErrStatus>
  40a84c:	e3500000 	cmp	r0, #0
  40a850:	aa00000b 	bge	40a884 <cvCloneSparseMat+0xa8>
  40a854:	e3a03fb9 	mov	r3, #740	; 0x2e4
  40a858:	e58d3000 	str	r3, [sp]
  40a85c:	e3e00000 	mvn	r0, #0
  40a860:	e59f1098 	ldr	r1, [pc, #152]	; 40a900 <cvCloneSparseMat+0x124>
  40a864:	e08f1001 	add	r1, pc, r1
  40a868:	e28110b8 	add	r1, r1, #184	; 0xb8
  40a86c:	e59f2090 	ldr	r2, [pc, #144]	; 40a904 <cvCloneSparseMat+0x128>
  40a870:	e08f2002 	add	r2, pc, r2
  40a874:	e59f308c 	ldr	r3, [pc, #140]	; 40a908 <cvCloneSparseMat+0x12c>
  40a878:	e08f3003 	add	r3, pc, r3
  40a87c:	eb002089 	bl	412aa8 <cvError>
  40a880:	ea000011 	b	40a8cc <cvCloneSparseMat+0xf0>
  40a884:	e1a00004 	mov	r0, r4
  40a888:	e59d100c 	ldr	r1, [sp, #12]
  40a88c:	e3a02000 	mov	r2, #0
  40a890:	eb00485e 	bl	41ca10 <cvCopy>
  40a894:	eb002052 	bl	4129e4 <cvGetErrStatus>
  40a898:	e3500000 	cmp	r0, #0
  40a89c:	aa00000a 	bge	40a8cc <cvCloneSparseMat+0xf0>
  40a8a0:	e59f3064 	ldr	r3, [pc, #100]	; 40a90c <cvCloneSparseMat+0x130>
  40a8a4:	e58d3000 	str	r3, [sp]
  40a8a8:	e3e00000 	mvn	r0, #0
  40a8ac:	e59f105c 	ldr	r1, [pc, #92]	; 40a910 <cvCloneSparseMat+0x134>
  40a8b0:	e08f1001 	add	r1, pc, r1
  40a8b4:	e28110b8 	add	r1, r1, #184	; 0xb8
  40a8b8:	e59f2054 	ldr	r2, [pc, #84]	; 40a914 <cvCloneSparseMat+0x138>
  40a8bc:	e08f2002 	add	r2, pc, r2
  40a8c0:	e59f3050 	ldr	r3, [pc, #80]	; 40a918 <cvCloneSparseMat+0x13c>
  40a8c4:	e08f3003 	add	r3, pc, r3
  40a8c8:	eb002076 	bl	412aa8 <cvError>
  40a8cc:	eb002044 	bl	4129e4 <cvGetErrStatus>
  40a8d0:	e3500000 	cmp	r0, #0
  40a8d4:	b28d000c 	addlt	r0, sp, #12
  40a8d8:	bbfffe70 	bllt	40a2a0 <cvReleaseSparseMat>
  40a8dc:	e59d000c 	ldr	r0, [sp, #12]
  40a8e0:	e28dd010 	add	sp, sp, #16
  40a8e4:	e8bd4010 	pop	{r4, lr}
  40a8e8:	e12fff1e 	bx	lr
  40a8ec:	42440000 	.word	0x42440000
  40a8f0:	000002e2 	.word	0x000002e2
  40a8f4:	1fbf5c78 	.word	0x1fbf5c78
  40a8f8:	000329f0 	.word	0x000329f0
  40a8fc:	000327bc 	.word	0x000327bc
  40a900:	1fbf5c2c 	.word	0x1fbf5c2c
  40a904:	00032760 	.word	0x00032760
  40a908:	00032770 	.word	0x00032770
  40a90c:	000002e5 	.word	0x000002e5
  40a910:	1fbf5be0 	.word	0x1fbf5be0
  40a914:	00032714 	.word	0x00032714
  40a918:	00032724 	.word	0x00032724

0040a91c <cvInitSparseMatIterator>:
  40a91c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40a920:	e24dd00c 	sub	sp, sp, #12
  40a924:	e2502000 	subs	r2, r0, #0
  40a928:	0a000003 	beq	40a93c <cvInitSparseMatIterator+0x20>
  40a92c:	e1d200b2 	ldrh	r0, [r2, #2]
  40a930:	e59f30bc 	ldr	r3, [pc, #188]	; 40a9f4 <cvInitSparseMatIterator+0xd8>
  40a934:	e1530800 	cmp	r3, r0, lsl #16
  40a938:	0a00000c 	beq	40a970 <cvInitSparseMatIterator+0x54>
  40a93c:	e3a03fbf 	mov	r3, #764	; 0x2fc
  40a940:	e58d3000 	str	r3, [sp]
  40a944:	e3e00004 	mvn	r0, #4
  40a948:	e59f10a8 	ldr	r1, [pc, #168]	; 40a9f8 <cvInitSparseMatIterator+0xdc>
  40a94c:	e08f1001 	add	r1, pc, r1
  40a950:	e28110cc 	add	r1, r1, #204	; 0xcc
  40a954:	e59f20a0 	ldr	r2, [pc, #160]	; 40a9fc <cvInitSparseMatIterator+0xe0>
  40a958:	e08f2002 	add	r2, pc, r2
  40a95c:	e59f309c 	ldr	r3, [pc, #156]	; 40aa00 <cvInitSparseMatIterator+0xe4>
  40a960:	e08f3003 	add	r3, pc, r3
  40a964:	eb00204f 	bl	412aa8 <cvError>
  40a968:	e3a00000 	mov	r0, #0
  40a96c:	ea00001d 	b	40a9e8 <cvInitSparseMatIterator+0xcc>
  40a970:	e3510000 	cmp	r1, #0
  40a974:	1a00000c 	bne	40a9ac <cvInitSparseMatIterator+0x90>
  40a978:	e59f3084 	ldr	r3, [pc, #132]	; 40aa04 <cvInitSparseMatIterator+0xe8>
  40a97c:	e58d3000 	str	r3, [sp]
  40a980:	e3e0001a 	mvn	r0, #26
  40a984:	e59f107c 	ldr	r1, [pc, #124]	; 40aa08 <cvInitSparseMatIterator+0xec>
  40a988:	e08f1001 	add	r1, pc, r1
  40a98c:	e28110cc 	add	r1, r1, #204	; 0xcc
  40a990:	e59f2074 	ldr	r2, [pc, #116]	; 40aa0c <cvInitSparseMatIterator+0xf0>
  40a994:	e08f2002 	add	r2, pc, r2
  40a998:	e59f3070 	ldr	r3, [pc, #112]	; 40aa10 <cvInitSparseMatIterator+0xf4>
  40a99c:	e08f3003 	add	r3, pc, r3
  40a9a0:	eb002040 	bl	412aa8 <cvError>
  40a9a4:	e3a00000 	mov	r0, #0
  40a9a8:	ea00000e 	b	40a9e8 <cvInitSparseMatIterator+0xcc>
  40a9ac:	e5812000 	str	r2, [r1]
  40a9b0:	e3a03000 	mov	r3, #0
  40a9b4:	e5813004 	str	r3, [r1, #4]
  40a9b8:	ea000005 	b	40a9d4 <cvInitSparseMatIterator+0xb8>
  40a9bc:	e5920014 	ldr	r0, [r2, #20]
  40a9c0:	e7900103 	ldr	r0, [r0, r3, lsl #2]
  40a9c4:	e3500000 	cmp	r0, #0
  40a9c8:	15810004 	strne	r0, [r1, #4]
  40a9cc:	1a000004 	bne	40a9e4 <cvInitSparseMatIterator+0xc8>
  40a9d0:	e2833001 	add	r3, r3, #1
  40a9d4:	e5920018 	ldr	r0, [r2, #24]
  40a9d8:	e1500003 	cmp	r0, r3
  40a9dc:	cafffff6 	bgt	40a9bc <cvInitSparseMatIterator+0xa0>
  40a9e0:	e3a00000 	mov	r0, #0
  40a9e4:	e5813008 	str	r3, [r1, #8]
  40a9e8:	e28dd00c 	add	sp, sp, #12
  40a9ec:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40a9f0:	e12fff1e 	bx	lr
  40a9f4:	42440000 	.word	0x42440000
  40a9f8:	1fbf5b44 	.word	0x1fbf5b44
  40a9fc:	000328d8 	.word	0x000328d8
  40aa00:	00032688 	.word	0x00032688
  40aa04:	000002ff 	.word	0x000002ff
  40aa08:	1fbf5b08 	.word	0x1fbf5b08
  40aa0c:	000328bc 	.word	0x000328bc
  40aa10:	0003264c 	.word	0x0003264c

0040aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>:
  40aa14:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40aa18:	e24dd024 	sub	sp, sp, #36	; 0x24
  40aa1c:	e58d3008 	str	r3, [sp, #8]
  40aa20:	e59d3048 	ldr	r3, [sp, #72]	; 0x48
  40aa24:	e2505000 	subs	r5, r0, #0
  40aa28:	0a000005 	beq	40aa44 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x30>
  40aa2c:	e1a06001 	mov	r6, r1
  40aa30:	e1a0a002 	mov	sl, r2
  40aa34:	e1d510b2 	ldrh	r1, [r5, #2]
  40aa38:	e59f23c0 	ldr	r2, [pc, #960]	; 40ae00 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3ec>
  40aa3c:	e1520801 	cmp	r2, r1, lsl #16
  40aa40:	0a000008 	beq	40aa68 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x54>
  40aa44:	e59f03b8 	ldr	r0, [pc, #952]	; 40ae04 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3f0>
  40aa48:	e08f0000 	add	r0, pc, r0
  40aa4c:	e59f13b4 	ldr	r1, [pc, #948]	; 40ae08 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3f4>
  40aa50:	e59f23b4 	ldr	r2, [pc, #948]	; 40ae0c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3f8>
  40aa54:	e08f2002 	add	r2, pc, r2
  40aa58:	e28220a8 	add	r2, r2, #168	; 0xa8
  40aa5c:	e59f33ac 	ldr	r3, [pc, #940]	; 40ae10 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3fc>
  40aa60:	e08f3003 	add	r3, pc, r3
  40aa64:	fa00a4ba 	blx	433d54 <__assert_func>
  40aa68:	e3530000 	cmp	r3, #0
  40aa6c:	1a00001c 	bne	40aae4 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0xd0>
  40aa70:	ea000015 	b	40aacc <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0xb8>
  40aa74:	e7962103 	ldr	r2, [r6, r3, lsl #2]
  40aa78:	e0851103 	add	r1, r5, r3, lsl #2
  40aa7c:	e5911024 	ldr	r1, [r1, #36]	; 0x24
  40aa80:	e1520001 	cmp	r2, r1
  40aa84:	3a00000c 	bcc	40aabc <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0xa8>
  40aa88:	e59f3384 	ldr	r3, [pc, #900]	; 40ae14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x400>
  40aa8c:	e58d3000 	str	r3, [sp]
  40aa90:	e3e000d2 	mvn	r0, #210	; 0xd2
  40aa94:	e59f137c 	ldr	r1, [pc, #892]	; 40ae18 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x404>
  40aa98:	e08f1001 	add	r1, pc, r1
  40aa9c:	e28110e4 	add	r1, r1, #228	; 0xe4
  40aaa0:	e59f2374 	ldr	r2, [pc, #884]	; 40ae1c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x408>
  40aaa4:	e08f2002 	add	r2, pc, r2
  40aaa8:	e59f3370 	ldr	r3, [pc, #880]	; 40ae20 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x40c>
  40aaac:	e08f3003 	add	r3, pc, r3
  40aab0:	eb001ffc 	bl	412aa8 <cvError>
  40aab4:	e3a04000 	mov	r4, #0
  40aab8:	ea0000cc 	b	40adf0 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3dc>
  40aabc:	e0877287 	add	r7, r7, r7, lsl #5
  40aac0:	e0827007 	add	r7, r2, r7
  40aac4:	e2833001 	add	r3, r3, #1
  40aac8:	ea000001 	b	40aad4 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0xc0>
  40aacc:	e3a07000 	mov	r7, #0
  40aad0:	e1a03007 	mov	r3, r7
  40aad4:	e5952004 	ldr	r2, [r5, #4]
  40aad8:	e1520003 	cmp	r2, r3
  40aadc:	caffffe4 	bgt	40aa74 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x60>
  40aae0:	ea000000 	b	40aae8 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0xd4>
  40aae4:	e5937000 	ldr	r7, [r3]
  40aae8:	e595e018 	ldr	lr, [r5, #24]
  40aaec:	e24e8001 	sub	r8, lr, #1
  40aaf0:	e0088007 	and	r8, r8, r7
  40aaf4:	e3c77102 	bic	r7, r7, #-2147483648	; 0x80000000
  40aaf8:	e5953014 	ldr	r3, [r5, #20]
  40aafc:	e7932108 	ldr	r2, [r3, r8, lsl #2]
  40ab00:	ea000013 	b	40ab54 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x140>
  40ab04:	e5923000 	ldr	r3, [r2]
  40ab08:	e1530007 	cmp	r3, r7
  40ab0c:	1a00000f 	bne	40ab50 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x13c>
  40ab10:	e5954020 	ldr	r4, [r5, #32]
  40ab14:	e3a03000 	mov	r3, #0
  40ab18:	ea000005 	b	40ab34 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x120>
  40ab1c:	e796c103 	ldr	ip, [r6, r3, lsl #2]
  40ab20:	e0820004 	add	r0, r2, r4
  40ab24:	e7900103 	ldr	r0, [r0, r3, lsl #2]
  40ab28:	e15c0000 	cmp	ip, r0
  40ab2c:	1a000003 	bne	40ab40 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x12c>
  40ab30:	e2833001 	add	r3, r3, #1
  40ab34:	e5951004 	ldr	r1, [r5, #4]
  40ab38:	e1510003 	cmp	r1, r3
  40ab3c:	cafffff6 	bgt	40ab1c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x108>
  40ab40:	e1510003 	cmp	r1, r3
  40ab44:	0595401c 	ldreq	r4, [r5, #28]
  40ab48:	00824004 	addeq	r4, r2, r4
  40ab4c:	0a000003 	beq	40ab60 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x14c>
  40ab50:	e5922004 	ldr	r2, [r2, #4]
  40ab54:	e3520000 	cmp	r2, #0
  40ab58:	1affffe9 	bne	40ab04 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0xf0>
  40ab5c:	e3a04000 	mov	r4, #0
  40ab60:	e59d2008 	ldr	r2, [sp, #8]
  40ab64:	e2743001 	rsbs	r3, r4, #1
  40ab68:	33a03000 	movcc	r3, #0
  40ab6c:	e3520000 	cmp	r2, #0
  40ab70:	03a03000 	moveq	r3, #0
  40ab74:	e3530000 	cmp	r3, #0
  40ab78:	0a000097 	beq	40addc <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3c8>
  40ab7c:	e5953010 	ldr	r3, [r5, #16]
  40ab80:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
  40ab84:	e08e308e 	add	r3, lr, lr, lsl #1
  40ab88:	e1520003 	cmp	r2, r3
  40ab8c:	ba00004d 	blt	40acc8 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x2b4>
  40ab90:	e1a0e08e 	lsl	lr, lr, #1
  40ab94:	e35e0b01 	cmp	lr, #1024	; 0x400
  40ab98:	a1a0b00e 	movge	fp, lr
  40ab9c:	b3a0bb01 	movlt	fp, #1024	; 0x400
  40aba0:	e1a0310b 	lsl	r3, fp, #2
  40aba4:	e58d300c 	str	r3, [sp, #12]
  40aba8:	e24b8001 	sub	r8, fp, #1
  40abac:	e118000b 	tst	r8, fp
  40abb0:	0a000008 	beq	40abd8 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x1c4>
  40abb4:	e59f0268 	ldr	r0, [pc, #616]	; 40ae24 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x410>
  40abb8:	e08f0000 	add	r0, pc, r0
  40abbc:	e59f1264 	ldr	r1, [pc, #612]	; 40ae28 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x414>
  40abc0:	e59f2264 	ldr	r2, [pc, #612]	; 40ae2c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x418>
  40abc4:	e08f2002 	add	r2, pc, r2
  40abc8:	e28220a8 	add	r2, r2, #168	; 0xa8
  40abcc:	e59f325c 	ldr	r3, [pc, #604]	; 40ae30 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x41c>
  40abd0:	e08f3003 	add	r3, pc, r3
  40abd4:	fa00a45e 	blx	433d54 <__assert_func>
  40abd8:	e59d000c 	ldr	r0, [sp, #12]
  40abdc:	eb004336 	bl	41b8bc <cvAlloc>
  40abe0:	e1a09000 	mov	r9, r0
  40abe4:	eb001f7e 	bl	4129e4 <cvGetErrStatus>
  40abe8:	e3500000 	cmp	r0, #0
  40abec:	aa00000b 	bge	40ac20 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x20c>
  40abf0:	e59f323c 	ldr	r3, [pc, #572]	; 40ae34 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x420>
  40abf4:	e58d3000 	str	r3, [sp]
  40abf8:	e3e00000 	mvn	r0, #0
  40abfc:	e59f1234 	ldr	r1, [pc, #564]	; 40ae38 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x424>
  40ac00:	e08f1001 	add	r1, pc, r1
  40ac04:	e28110e4 	add	r1, r1, #228	; 0xe4
  40ac08:	e59f222c 	ldr	r2, [pc, #556]	; 40ae3c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x428>
  40ac0c:	e08f2002 	add	r2, pc, r2
  40ac10:	e59f3228 	ldr	r3, [pc, #552]	; 40ae40 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x42c>
  40ac14:	e08f3003 	add	r3, pc, r3
  40ac18:	eb001fa2 	bl	412aa8 <cvError>
  40ac1c:	ea000073 	b	40adf0 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3dc>
  40ac20:	e1a00009 	mov	r0, r9
  40ac24:	e3a01000 	mov	r1, #0
  40ac28:	e59d200c 	ldr	r2, [sp, #12]
  40ac2c:	fa00a928 	blx	4350d4 <memset>
  40ac30:	e1a00005 	mov	r0, r5
  40ac34:	e28d1014 	add	r1, sp, #20
  40ac38:	ebffff37 	bl	40a91c <cvInitSparseMatIterator>
  40ac3c:	ea00001a 	b	40acac <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x298>
  40ac40:	e59d3018 	ldr	r3, [sp, #24]
  40ac44:	e5933004 	ldr	r3, [r3, #4]
  40ac48:	e3530000 	cmp	r3, #0
  40ac4c:	158d3018 	strne	r3, [sp, #24]
  40ac50:	1a00000f 	bne	40ac94 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x280>
  40ac54:	e59d201c 	ldr	r2, [sp, #28]
  40ac58:	e2822001 	add	r2, r2, #1
  40ac5c:	e58d201c 	str	r2, [sp, #28]
  40ac60:	ea000006 	b	40ac80 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x26c>
  40ac64:	e5933014 	ldr	r3, [r3, #20]
  40ac68:	e7933102 	ldr	r3, [r3, r2, lsl #2]
  40ac6c:	e3530000 	cmp	r3, #0
  40ac70:	158d201c 	strne	r2, [sp, #28]
  40ac74:	158d3018 	strne	r3, [sp, #24]
  40ac78:	1a000005 	bne	40ac94 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x280>
  40ac7c:	e2822001 	add	r2, r2, #1
  40ac80:	e59d3014 	ldr	r3, [sp, #20]
  40ac84:	e5931018 	ldr	r1, [r3, #24]
  40ac88:	e1520001 	cmp	r2, r1
  40ac8c:	bafffff4 	blt	40ac64 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x250>
  40ac90:	e3a03000 	mov	r3, #0
  40ac94:	e5902000 	ldr	r2, [r0]
  40ac98:	e0022008 	and	r2, r2, r8
  40ac9c:	e7991102 	ldr	r1, [r9, r2, lsl #2]
  40aca0:	e5801004 	str	r1, [r0, #4]
  40aca4:	e7890102 	str	r0, [r9, r2, lsl #2]
  40aca8:	e1a00003 	mov	r0, r3
  40acac:	e3500000 	cmp	r0, #0
  40acb0:	1affffe2 	bne	40ac40 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x22c>
  40acb4:	e5950014 	ldr	r0, [r5, #20]
  40acb8:	eb004331 	bl	41b984 <cvFree_>
  40acbc:	e5859014 	str	r9, [r5, #20]
  40acc0:	e585b018 	str	fp, [r5, #24]
  40acc4:	e0088007 	and	r8, r8, r7
  40acc8:	e5950010 	ldr	r0, [r5, #16]
  40accc:	e5903038 	ldr	r3, [r0, #56]	; 0x38
  40acd0:	e58d3014 	str	r3, [sp, #20]
  40acd4:	e3530000 	cmp	r3, #0
  40acd8:	0a000008 	beq	40ad00 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x2ec>
  40acdc:	e5932004 	ldr	r2, [r3, #4]
  40ace0:	e5802038 	str	r2, [r0, #56]	; 0x38
  40ace4:	e5932000 	ldr	r2, [r3]
  40ace8:	e3c2233f 	bic	r2, r2, #-67108864	; 0xfc000000
  40acec:	e5832000 	str	r2, [r3]
  40acf0:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
  40acf4:	e2833001 	add	r3, r3, #1
  40acf8:	e580303c 	str	r3, [r0, #60]	; 0x3c
  40acfc:	ea000002 	b	40ad0c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x2f8>
  40ad00:	e3a01000 	mov	r1, #0
  40ad04:	e28d2014 	add	r2, sp, #20
  40ad08:	eb0038fa 	bl	4190f8 <cvSetAdd>
  40ad0c:	e59dc014 	ldr	ip, [sp, #20]
  40ad10:	e58c7000 	str	r7, [ip]
  40ad14:	e5953014 	ldr	r3, [r5, #20]
  40ad18:	e7933108 	ldr	r3, [r3, r8, lsl #2]
  40ad1c:	e58c3004 	str	r3, [ip, #4]
  40ad20:	e5953014 	ldr	r3, [r5, #20]
  40ad24:	e783c108 	str	ip, [r3, r8, lsl #2]
  40ad28:	e5950004 	ldr	r0, [r5, #4]
  40ad2c:	e5951020 	ldr	r1, [r5, #32]
  40ad30:	e08c1001 	add	r1, ip, r1
  40ad34:	e3160003 	tst	r6, #3
  40ad38:	1a000001 	bne	40ad44 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x330>
  40ad3c:	e3110003 	tst	r1, #3
  40ad40:	0a00000c 	beq	40ad78 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x364>
  40ad44:	e59f00f8 	ldr	r0, [pc, #248]	; 40ae44 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x430>
  40ad48:	e08f0000 	add	r0, pc, r0
  40ad4c:	e59f10f4 	ldr	r1, [pc, #244]	; 40ae48 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x434>
  40ad50:	e59f20f4 	ldr	r2, [pc, #244]	; 40ae4c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x438>
  40ad54:	e08f2002 	add	r2, pc, r2
  40ad58:	e28220a8 	add	r2, r2, #168	; 0xa8
  40ad5c:	e59f30ec 	ldr	r3, [pc, #236]	; 40ae50 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x43c>
  40ad60:	e08f3003 	add	r3, pc, r3
  40ad64:	fa00a3fa 	blx	433d54 <__assert_func>
  40ad68:	e7962103 	ldr	r2, [r6, r3, lsl #2]
  40ad6c:	e7812103 	str	r2, [r1, r3, lsl #2]
  40ad70:	e2833001 	add	r3, r3, #1
  40ad74:	ea000000 	b	40ad7c <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x368>
  40ad78:	e3a03000 	mov	r3, #0
  40ad7c:	e1530000 	cmp	r3, r0
  40ad80:	3afffff8 	bcc	40ad68 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x354>
  40ad84:	e595401c 	ldr	r4, [r5, #28]
  40ad88:	e08c4004 	add	r4, ip, r4
  40ad8c:	e59d3008 	ldr	r3, [sp, #8]
  40ad90:	e3530000 	cmp	r3, #0
  40ad94:	da000010 	ble	40addc <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3c8>
  40ad98:	e5952000 	ldr	r2, [r5]
  40ad9c:	e2023f7e 	and	r3, r2, #504	; 0x1f8
  40ada0:	e1a031c3 	asr	r3, r3, #3
  40ada4:	e2833001 	add	r3, r3, #1
  40ada8:	e2022007 	and	r2, r2, #7
  40adac:	e1a02082 	lsl	r2, r2, #1
  40adb0:	e59f109c 	ldr	r1, [pc, #156]	; 40ae54 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x440>
  40adb4:	e1a01231 	lsr	r1, r1, r2
  40adb8:	e2011003 	and	r1, r1, #3
  40adbc:	e1a01113 	lsl	r1, r3, r1
  40adc0:	e3a03000 	mov	r3, #0
  40adc4:	ea000002 	b	40add4 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3c0>
  40adc8:	e3a02000 	mov	r2, #0
  40adcc:	e7c42003 	strb	r2, [r4, r3]
  40add0:	e2833001 	add	r3, r3, #1
  40add4:	e1530001 	cmp	r3, r1
  40add8:	3afffffa 	bcc	40adc8 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj+0x3b4>
  40addc:	e35a0000 	cmp	sl, #0
  40ade0:	15953000 	ldrne	r3, [r5]
  40ade4:	11a03b83 	lslne	r3, r3, #23
  40ade8:	11a03ba3 	lsrne	r3, r3, #23
  40adec:	158a3000 	strne	r3, [sl]
  40adf0:	e1a00004 	mov	r0, r4
  40adf4:	e28dd024 	add	sp, sp, #36	; 0x24
  40adf8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40adfc:	e12fff1e 	bx	lr
  40ae00:	42440000 	.word	0x42440000
  40ae04:	000325a0 	.word	0x000325a0
  40ae08:	00000321 	.word	0x00000321
  40ae0c:	000323a8 	.word	0x000323a8
  40ae10:	000325a4 	.word	0x000325a4
  40ae14:	00000329 	.word	0x00000329
  40ae18:	1fbf59f8 	.word	0x1fbf59f8
  40ae1c:	00032578 	.word	0x00032578
  40ae20:	0003253c 	.word	0x0003253c
  40ae24:	00032430 	.word	0x00032430
  40ae28:	0000034f 	.word	0x0000034f
  40ae2c:	00032238 	.word	0x00032238
  40ae30:	00032698 	.word	0x00032698
  40ae34:	00000352 	.word	0x00000352
  40ae38:	1fbf5890 	.word	0x1fbf5890
  40ae3c:	000323c4 	.word	0x000323c4
  40ae40:	000323d4 	.word	0x000323d4
  40ae44:	000322a0 	.word	0x000322a0
  40ae48:	00000369 	.word	0x00000369
  40ae4c:	000320a8 	.word	0x000320a8
  40ae50:	00032528 	.word	0x00032528
  40ae54:	0000ba50 	.word	0x0000ba50

0040ae58 <cvCreateData>:
  40ae58:	e92d4070 	push	{r4, r5, r6, lr}
  40ae5c:	e24dd008 	sub	sp, sp, #8
  40ae60:	e2504000 	subs	r4, r0, #0
  40ae64:	0a000040 	beq	40af6c <cvCreateData+0x114>
  40ae68:	e5943000 	ldr	r3, [r4]
  40ae6c:	e1a01823 	lsr	r1, r3, #16
  40ae70:	e59f2368 	ldr	r2, [pc, #872]	; 40b1e0 <cvCreateData+0x388>
  40ae74:	e1520801 	cmp	r2, r1, lsl #16
  40ae78:	1a00003b 	bne	40af6c <cvCreateData+0x114>
  40ae7c:	e594c018 	ldr	ip, [r4, #24]
  40ae80:	e35c0000 	cmp	ip, #0
  40ae84:	da000038 	ble	40af6c <cvCreateData+0x114>
  40ae88:	e5940014 	ldr	r0, [r4, #20]
  40ae8c:	e3500000 	cmp	r0, #0
  40ae90:	da000035 	ble	40af6c <cvCreateData+0x114>
  40ae94:	e5942004 	ldr	r2, [r4, #4]
  40ae98:	e5941010 	ldr	r1, [r4, #16]
  40ae9c:	e3510000 	cmp	r1, #0
  40aea0:	0a00000b 	beq	40aed4 <cvCreateData+0x7c>
  40aea4:	e59f3338 	ldr	r3, [pc, #824]	; 40b1e4 <cvCreateData+0x38c>
  40aea8:	e58d3000 	str	r3, [sp]
  40aeac:	e3e00001 	mvn	r0, #1
  40aeb0:	e59f1330 	ldr	r1, [pc, #816]	; 40b1e8 <cvCreateData+0x390>
  40aeb4:	e08f1001 	add	r1, pc, r1
  40aeb8:	e28110f4 	add	r1, r1, #244	; 0xf4
  40aebc:	e59f2328 	ldr	r2, [pc, #808]	; 40b1ec <cvCreateData+0x394>
  40aec0:	e08f2002 	add	r2, pc, r2
  40aec4:	e59f3324 	ldr	r3, [pc, #804]	; 40b1f0 <cvCreateData+0x398>
  40aec8:	e08f3003 	add	r3, pc, r3
  40aecc:	eb001ef5 	bl	412aa8 <cvError>
  40aed0:	ea0000bf 	b	40b1d4 <cvCreateData+0x37c>
  40aed4:	e3520000 	cmp	r2, #0
  40aed8:	1a000009 	bne	40af04 <cvCreateData+0xac>
  40aedc:	e2031f7e 	and	r1, r3, #504	; 0x1f8
  40aee0:	e1a011c1 	asr	r1, r1, #3
  40aee4:	e2811001 	add	r1, r1, #1
  40aee8:	e2033007 	and	r3, r3, #7
  40aeec:	e1a03083 	lsl	r3, r3, #1
  40aef0:	e59f22fc 	ldr	r2, [pc, #764]	; 40b1f4 <cvCreateData+0x39c>
  40aef4:	e1a03332 	lsr	r3, r2, r3
  40aef8:	e2033003 	and	r3, r3, #3
  40aefc:	e1a03311 	lsl	r3, r1, r3
  40af00:	e0020c93 	mul	r2, r3, ip
  40af04:	e0000092 	mul	r0, r2, r0
  40af08:	e2800024 	add	r0, r0, #36	; 0x24
  40af0c:	eb00426a 	bl	41b8bc <cvAlloc>
  40af10:	e5840008 	str	r0, [r4, #8]
  40af14:	eb001eb2 	bl	4129e4 <cvGetErrStatus>
  40af18:	e3500000 	cmp	r0, #0
  40af1c:	aa00000b 	bge	40af50 <cvCreateData+0xf8>
  40af20:	e59f32d0 	ldr	r3, [pc, #720]	; 40b1f8 <cvCreateData+0x3a0>
  40af24:	e58d3000 	str	r3, [sp]
  40af28:	e3e00000 	mvn	r0, #0
  40af2c:	e59f12c8 	ldr	r1, [pc, #712]	; 40b1fc <cvCreateData+0x3a4>
  40af30:	e08f1001 	add	r1, pc, r1
  40af34:	e28110f4 	add	r1, r1, #244	; 0xf4
  40af38:	e59f22c0 	ldr	r2, [pc, #704]	; 40b200 <cvCreateData+0x3a8>
  40af3c:	e08f2002 	add	r2, pc, r2
  40af40:	e59f32bc 	ldr	r3, [pc, #700]	; 40b204 <cvCreateData+0x3ac>
  40af44:	e08f3003 	add	r3, pc, r3
  40af48:	eb001ed6 	bl	412aa8 <cvError>
  40af4c:	ea0000a0 	b	40b1d4 <cvCreateData+0x37c>
  40af50:	e5942008 	ldr	r2, [r4, #8]
  40af54:	e2823023 	add	r3, r2, #35	; 0x23
  40af58:	e3c3301f 	bic	r3, r3, #31
  40af5c:	e5843010 	str	r3, [r4, #16]
  40af60:	e3a03001 	mov	r3, #1
  40af64:	e5823000 	str	r3, [r2]
  40af68:	ea000099 	b	40b1d4 <cvCreateData+0x37c>
  40af6c:	e3540000 	cmp	r4, #0
  40af70:	0a00003f 	beq	40b074 <cvCreateData+0x21c>
  40af74:	e5943000 	ldr	r3, [r4]
  40af78:	e3530070 	cmp	r3, #112	; 0x70
  40af7c:	1a00003c 	bne	40b074 <cvCreateData+0x21c>
  40af80:	e5943044 	ldr	r3, [r4, #68]	; 0x44
  40af84:	e3530000 	cmp	r3, #0
  40af88:	0a00000b 	beq	40afbc <cvCreateData+0x164>
  40af8c:	e3a03ff5 	mov	r3, #980	; 0x3d4
  40af90:	e58d3000 	str	r3, [sp]
  40af94:	e3e00001 	mvn	r0, #1
  40af98:	e59f1268 	ldr	r1, [pc, #616]	; 40b208 <cvCreateData+0x3b0>
  40af9c:	e08f1001 	add	r1, pc, r1
  40afa0:	e28110f4 	add	r1, r1, #244	; 0xf4
  40afa4:	e59f2260 	ldr	r2, [pc, #608]	; 40b20c <cvCreateData+0x3b4>
  40afa8:	e08f2002 	add	r2, pc, r2
  40afac:	e59f325c 	ldr	r3, [pc, #604]	; 40b210 <cvCreateData+0x3b8>
  40afb0:	e08f3003 	add	r3, pc, r3
  40afb4:	eb001ebb 	bl	412aa8 <cvError>
  40afb8:	ea000085 	b	40b1d4 <cvCreateData+0x37c>
  40afbc:	e59f3250 	ldr	r3, [pc, #592]	; 40b214 <cvCreateData+0x3bc>
  40afc0:	e08f3003 	add	r3, pc, r3
  40afc4:	e5933004 	ldr	r3, [r3, #4]
  40afc8:	e3530000 	cmp	r3, #0
  40afcc:	1a000012 	bne	40b01c <cvCreateData+0x1c4>
  40afd0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
  40afd4:	eb004238 	bl	41b8bc <cvAlloc>
  40afd8:	e584006c 	str	r0, [r4, #108]	; 0x6c
  40afdc:	e5840044 	str	r0, [r4, #68]	; 0x44
  40afe0:	eb001e7f 	bl	4129e4 <cvGetErrStatus>
  40afe4:	e3500000 	cmp	r0, #0
  40afe8:	aa000079 	bge	40b1d4 <cvCreateData+0x37c>
  40afec:	e59f3224 	ldr	r3, [pc, #548]	; 40b218 <cvCreateData+0x3c0>
  40aff0:	e58d3000 	str	r3, [sp]
  40aff4:	e3e00000 	mvn	r0, #0
  40aff8:	e59f121c 	ldr	r1, [pc, #540]	; 40b21c <cvCreateData+0x3c4>
  40affc:	e08f1001 	add	r1, pc, r1
  40b000:	e28110f4 	add	r1, r1, #244	; 0xf4
  40b004:	e59f2214 	ldr	r2, [pc, #532]	; 40b220 <cvCreateData+0x3c8>
  40b008:	e08f2002 	add	r2, pc, r2
  40b00c:	e59f3210 	ldr	r3, [pc, #528]	; 40b224 <cvCreateData+0x3cc>
  40b010:	e08f3003 	add	r3, pc, r3
  40b014:	eb001ea3 	bl	412aa8 <cvError>
  40b018:	ea00006d 	b	40b1d4 <cvCreateData+0x37c>
  40b01c:	e5945010 	ldr	r5, [r4, #16]
  40b020:	e5946028 	ldr	r6, [r4, #40]	; 0x28
  40b024:	e3550020 	cmp	r5, #32
  40b028:	0a000002 	beq	40b038 <cvCreateData+0x1e0>
  40b02c:	e5942008 	ldr	r2, [r4, #8]
  40b030:	e3520040 	cmp	r2, #64	; 0x40
  40b034:	1a000006 	bne	40b054 <cvCreateData+0x1fc>
  40b038:	e3550020 	cmp	r5, #32
  40b03c:	03a02004 	moveq	r2, #4
  40b040:	13a02008 	movne	r2, #8
  40b044:	e0020296 	mul	r2, r6, r2
  40b048:	e5842028 	str	r2, [r4, #40]	; 0x28
  40b04c:	e3a02008 	mov	r2, #8
  40b050:	e5842010 	str	r2, [r4, #16]
  40b054:	e1a00004 	mov	r0, r4
  40b058:	e3a01000 	mov	r1, #0
  40b05c:	e1a02001 	mov	r2, r1
  40b060:	e1a0e00f 	mov	lr, pc
  40b064:	e12fff13 	bx	r3
  40b068:	e5846028 	str	r6, [r4, #40]	; 0x28
  40b06c:	e5845010 	str	r5, [r4, #16]
  40b070:	ea000057 	b	40b1d4 <cvCreateData+0x37c>
  40b074:	e3540000 	cmp	r4, #0
  40b078:	0a00004a 	beq	40b1a8 <cvCreateData+0x350>
  40b07c:	e5942000 	ldr	r2, [r4]
  40b080:	e1a01822 	lsr	r1, r2, #16
  40b084:	e59f319c 	ldr	r3, [pc, #412]	; 40b228 <cvCreateData+0x3d0>
  40b088:	e1530801 	cmp	r3, r1, lsl #16
  40b08c:	1a000045 	bne	40b1a8 <cvCreateData+0x350>
  40b090:	e2020f7e 	and	r0, r2, #504	; 0x1f8
  40b094:	e1a001c0 	asr	r0, r0, #3
  40b098:	e2803001 	add	r3, r0, #1
  40b09c:	e2020007 	and	r0, r2, #7
  40b0a0:	e1a00080 	lsl	r0, r0, #1
  40b0a4:	e59f1148 	ldr	r1, [pc, #328]	; 40b1f4 <cvCreateData+0x39c>
  40b0a8:	e1a00031 	lsr	r0, r1, r0
  40b0ac:	e2000003 	and	r0, r0, #3
  40b0b0:	e1a00013 	lsl	r0, r3, r0
  40b0b4:	e5943010 	ldr	r3, [r4, #16]
  40b0b8:	e3530000 	cmp	r3, #0
  40b0bc:	0a00000b 	beq	40b0f0 <cvCreateData+0x298>
  40b0c0:	e59f3164 	ldr	r3, [pc, #356]	; 40b22c <cvCreateData+0x3d4>
  40b0c4:	e58d3000 	str	r3, [sp]
  40b0c8:	e3e00001 	mvn	r0, #1
  40b0cc:	e59f115c 	ldr	r1, [pc, #348]	; 40b230 <cvCreateData+0x3d8>
  40b0d0:	e08f1001 	add	r1, pc, r1
  40b0d4:	e28110f4 	add	r1, r1, #244	; 0xf4
  40b0d8:	e59f2154 	ldr	r2, [pc, #340]	; 40b234 <cvCreateData+0x3dc>
  40b0dc:	e08f2002 	add	r2, pc, r2
  40b0e0:	e59f3150 	ldr	r3, [pc, #336]	; 40b238 <cvCreateData+0x3e0>
  40b0e4:	e08f3003 	add	r3, pc, r3
  40b0e8:	eb001e6e 	bl	412aa8 <cvError>
  40b0ec:	ea000038 	b	40b1d4 <cvCreateData+0x37c>
  40b0f0:	e3120901 	tst	r2, #16384	; 0x4000
  40b0f4:	0a000005 	beq	40b110 <cvCreateData+0x2b8>
  40b0f8:	e5942014 	ldr	r2, [r4, #20]
  40b0fc:	e5943018 	ldr	r3, [r4, #24]
  40b100:	e3530000 	cmp	r3, #0
  40b104:	11a00003 	movne	r0, r3
  40b108:	e0000092 	mul	r0, r2, r0
  40b10c:	ea00000c 	b	40b144 <cvCreateData+0x2ec>
  40b110:	e5942004 	ldr	r2, [r4, #4]
  40b114:	e2422001 	sub	r2, r2, #1
  40b118:	ea000007 	b	40b13c <cvCreateData+0x2e4>
  40b11c:	e2823002 	add	r3, r2, #2
  40b120:	e0843183 	add	r3, r4, r3, lsl #3
  40b124:	e5931008 	ldr	r1, [r3, #8]
  40b128:	e5933004 	ldr	r3, [r3, #4]
  40b12c:	e0030391 	mul	r3, r1, r3
  40b130:	e1500003 	cmp	r0, r3
  40b134:	31a00003 	movcc	r0, r3
  40b138:	e2422001 	sub	r2, r2, #1
  40b13c:	e3520000 	cmp	r2, #0
  40b140:	aafffff5 	bge	40b11c <cvCreateData+0x2c4>
  40b144:	e2800024 	add	r0, r0, #36	; 0x24
  40b148:	eb0041db 	bl	41b8bc <cvAlloc>
  40b14c:	e5840008 	str	r0, [r4, #8]
  40b150:	eb001e23 	bl	4129e4 <cvGetErrStatus>
  40b154:	e3500000 	cmp	r0, #0
  40b158:	aa00000b 	bge	40b18c <cvCreateData+0x334>
  40b15c:	e59f30d8 	ldr	r3, [pc, #216]	; 40b23c <cvCreateData+0x3e4>
  40b160:	e58d3000 	str	r3, [sp]
  40b164:	e3e00000 	mvn	r0, #0
  40b168:	e59f10d0 	ldr	r1, [pc, #208]	; 40b240 <cvCreateData+0x3e8>
  40b16c:	e08f1001 	add	r1, pc, r1
  40b170:	e28110f4 	add	r1, r1, #244	; 0xf4
  40b174:	e59f20c8 	ldr	r2, [pc, #200]	; 40b244 <cvCreateData+0x3ec>
  40b178:	e08f2002 	add	r2, pc, r2
  40b17c:	e59f30c4 	ldr	r3, [pc, #196]	; 40b248 <cvCreateData+0x3f0>
  40b180:	e08f3003 	add	r3, pc, r3
  40b184:	eb001e47 	bl	412aa8 <cvError>
  40b188:	ea000011 	b	40b1d4 <cvCreateData+0x37c>
  40b18c:	e5942008 	ldr	r2, [r4, #8]
  40b190:	e2823023 	add	r3, r2, #35	; 0x23
  40b194:	e3c3301f 	bic	r3, r3, #31
  40b198:	e5843010 	str	r3, [r4, #16]
  40b19c:	e3a03001 	mov	r3, #1
  40b1a0:	e5823000 	str	r3, [r2]
  40b1a4:	ea00000a 	b	40b1d4 <cvCreateData+0x37c>
  40b1a8:	e59f309c 	ldr	r3, [pc, #156]	; 40b24c <cvCreateData+0x3f4>
  40b1ac:	e58d3000 	str	r3, [sp]
  40b1b0:	e3e00004 	mvn	r0, #4
  40b1b4:	e59f1094 	ldr	r1, [pc, #148]	; 40b250 <cvCreateData+0x3f8>
  40b1b8:	e08f1001 	add	r1, pc, r1
  40b1bc:	e28110f4 	add	r1, r1, #244	; 0xf4
  40b1c0:	e59f208c 	ldr	r2, [pc, #140]	; 40b254 <cvCreateData+0x3fc>
  40b1c4:	e08f2002 	add	r2, pc, r2
  40b1c8:	e59f3088 	ldr	r3, [pc, #136]	; 40b258 <cvCreateData+0x400>
  40b1cc:	e08f3003 	add	r3, pc, r3
  40b1d0:	eb001e34 	bl	412aa8 <cvError>
  40b1d4:	e28dd008 	add	sp, sp, #8
  40b1d8:	e8bd4070 	pop	{r4, r5, r6, lr}
  40b1dc:	e12fff1e 	bx	lr
  40b1e0:	42420000 	.word	0x42420000
  40b1e4:	000003c5 	.word	0x000003c5
  40b1e8:	1fbf55dc 	.word	0x1fbf55dc
  40b1ec:	0003242c 	.word	0x0003242c
  40b1f0:	00032120 	.word	0x00032120
  40b1f4:	0000ba50 	.word	0x0000ba50
  40b1f8:	000003cb 	.word	0x000003cb
  40b1fc:	1fbf5560 	.word	0x1fbf5560
  40b200:	00032094 	.word	0x00032094
  40b204:	000320a4 	.word	0x000320a4
  40b208:	1fbf54f4 	.word	0x1fbf54f4
  40b20c:	00032344 	.word	0x00032344
  40b210:	00032038 	.word	0x00032038
  40b214:	1fbf6c10 	.word	0x1fbf6c10
  40b218:	000003d9 	.word	0x000003d9
  40b21c:	1fbf5494 	.word	0x1fbf5494
  40b220:	00031fc8 	.word	0x00031fc8
  40b224:	00031fd8 	.word	0x00031fd8
  40b228:	42430000 	.word	0x42430000
  40b22c:	000003f3 	.word	0x000003f3
  40b230:	1fbf53c0 	.word	0x1fbf53c0
  40b234:	00032210 	.word	0x00032210
  40b238:	00031f04 	.word	0x00031f04
  40b23c:	00000406 	.word	0x00000406
  40b240:	1fbf5324 	.word	0x1fbf5324
  40b244:	00031e58 	.word	0x00031e58
  40b248:	00031e68 	.word	0x00031e68
  40b24c:	0000040c 	.word	0x0000040c
  40b250:	1fbf52d8 	.word	0x1fbf52d8
  40b254:	00032144 	.word	0x00032144
  40b258:	00031e1c 	.word	0x00031e1c

0040b25c <cvCreateMat>:
  40b25c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40b260:	e24dd014 	sub	sp, sp, #20
  40b264:	e3a03000 	mov	r3, #0
  40b268:	e58d300c 	str	r3, [sp, #12]
  40b26c:	ebfffa5e 	bl	409bec <cvCreateMatHeader>
  40b270:	e58d000c 	str	r0, [sp, #12]
  40b274:	eb001dda 	bl	4129e4 <cvGetErrStatus>
  40b278:	e3500000 	cmp	r0, #0
  40b27c:	aa00000b 	bge	40b2b0 <cvCreateMat+0x54>
  40b280:	e3a03068 	mov	r3, #104	; 0x68
  40b284:	e58d3000 	str	r3, [sp]
  40b288:	e3e00000 	mvn	r0, #0
  40b28c:	e59f107c 	ldr	r1, [pc, #124]	; 40b310 <cvCreateMat+0xb4>
  40b290:	e08f1001 	add	r1, pc, r1
  40b294:	e2811f41 	add	r1, r1, #260	; 0x104
  40b298:	e59f2074 	ldr	r2, [pc, #116]	; 40b314 <cvCreateMat+0xb8>
  40b29c:	e08f2002 	add	r2, pc, r2
  40b2a0:	e59f3070 	ldr	r3, [pc, #112]	; 40b318 <cvCreateMat+0xbc>
  40b2a4:	e08f3003 	add	r3, pc, r3
  40b2a8:	eb001dfe 	bl	412aa8 <cvError>
  40b2ac:	ea00000f 	b	40b2f0 <cvCreateMat+0x94>
  40b2b0:	e59d000c 	ldr	r0, [sp, #12]
  40b2b4:	ebfffee7 	bl	40ae58 <cvCreateData>
  40b2b8:	eb001dc9 	bl	4129e4 <cvGetErrStatus>
  40b2bc:	e3500000 	cmp	r0, #0
  40b2c0:	aa00000a 	bge	40b2f0 <cvCreateMat+0x94>
  40b2c4:	e3a03069 	mov	r3, #105	; 0x69
  40b2c8:	e58d3000 	str	r3, [sp]
  40b2cc:	e3e00000 	mvn	r0, #0
  40b2d0:	e59f1044 	ldr	r1, [pc, #68]	; 40b31c <cvCreateMat+0xc0>
  40b2d4:	e08f1001 	add	r1, pc, r1
  40b2d8:	e2811f41 	add	r1, r1, #260	; 0x104
  40b2dc:	e59f203c 	ldr	r2, [pc, #60]	; 40b320 <cvCreateMat+0xc4>
  40b2e0:	e08f2002 	add	r2, pc, r2
  40b2e4:	e59f3038 	ldr	r3, [pc, #56]	; 40b324 <cvCreateMat+0xc8>
  40b2e8:	e08f3003 	add	r3, pc, r3
  40b2ec:	eb001ded 	bl	412aa8 <cvError>
  40b2f0:	eb001dbb 	bl	4129e4 <cvGetErrStatus>
  40b2f4:	e3500000 	cmp	r0, #0
  40b2f8:	b28d000c 	addlt	r0, sp, #12
  40b2fc:	bbfff9b4 	bllt	4099d4 <cvReleaseMat>
  40b300:	e59d000c 	ldr	r0, [sp, #12]
  40b304:	e28dd014 	add	sp, sp, #20
  40b308:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40b30c:	e12fff1e 	bx	lr
  40b310:	1fbf5200 	.word	0x1fbf5200
  40b314:	00031d34 	.word	0x00031d34
  40b318:	00031d44 	.word	0x00031d44
  40b31c:	1fbf51bc 	.word	0x1fbf51bc
  40b320:	00031cf0 	.word	0x00031cf0
  40b324:	00031d00 	.word	0x00031d00

0040b328 <cvCloneMat>:
  40b328:	e92d4030 	push	{r4, r5, lr}
  40b32c:	e24dd00c 	sub	sp, sp, #12
  40b330:	e2504000 	subs	r4, r0, #0
  40b334:	0a00000a 	beq	40b364 <cvCloneMat+0x3c>
  40b338:	e5942000 	ldr	r2, [r4]
  40b33c:	e1a01822 	lsr	r1, r2, #16
  40b340:	e59f313c 	ldr	r3, [pc, #316]	; 40b484 <cvCloneMat+0x15c>
  40b344:	e1530801 	cmp	r3, r1, lsl #16
  40b348:	1a000005 	bne	40b364 <cvCloneMat+0x3c>
  40b34c:	e5941018 	ldr	r1, [r4, #24]
  40b350:	e3510000 	cmp	r1, #0
  40b354:	da000002 	ble	40b364 <cvCloneMat+0x3c>
  40b358:	e5940014 	ldr	r0, [r4, #20]
  40b35c:	e3500000 	cmp	r0, #0
  40b360:	ca00000c 	bgt	40b398 <cvCloneMat+0x70>
  40b364:	e3a03c01 	mov	r3, #256	; 0x100
  40b368:	e58d3000 	str	r3, [sp]
  40b36c:	e3e00004 	mvn	r0, #4
  40b370:	e59f1110 	ldr	r1, [pc, #272]	; 40b488 <cvCloneMat+0x160>
  40b374:	e08f1001 	add	r1, pc, r1
  40b378:	e2811e11 	add	r1, r1, #272	; 0x110
  40b37c:	e59f2108 	ldr	r2, [pc, #264]	; 40b48c <cvCloneMat+0x164>
  40b380:	e08f2002 	add	r2, pc, r2
  40b384:	e59f3104 	ldr	r3, [pc, #260]	; 40b490 <cvCloneMat+0x168>
  40b388:	e08f3003 	add	r3, pc, r3
  40b38c:	eb001dc5 	bl	412aa8 <cvError>
  40b390:	e3a05000 	mov	r5, #0
  40b394:	ea000036 	b	40b474 <cvCloneMat+0x14c>
  40b398:	ebfffa13 	bl	409bec <cvCreateMatHeader>
  40b39c:	e1a05000 	mov	r5, r0
  40b3a0:	eb001d8f 	bl	4129e4 <cvGetErrStatus>
  40b3a4:	e3500000 	cmp	r0, #0
  40b3a8:	aa00000b 	bge	40b3dc <cvCloneMat+0xb4>
  40b3ac:	e59f30e0 	ldr	r3, [pc, #224]	; 40b494 <cvCloneMat+0x16c>
  40b3b0:	e58d3000 	str	r3, [sp]
  40b3b4:	e3e00000 	mvn	r0, #0
  40b3b8:	e59f10d8 	ldr	r1, [pc, #216]	; 40b498 <cvCloneMat+0x170>
  40b3bc:	e08f1001 	add	r1, pc, r1
  40b3c0:	e2811e11 	add	r1, r1, #272	; 0x110
  40b3c4:	e59f20d0 	ldr	r2, [pc, #208]	; 40b49c <cvCloneMat+0x174>
  40b3c8:	e08f2002 	add	r2, pc, r2
  40b3cc:	e59f30cc 	ldr	r3, [pc, #204]	; 40b4a0 <cvCloneMat+0x178>
  40b3d0:	e08f3003 	add	r3, pc, r3
  40b3d4:	eb001db3 	bl	412aa8 <cvError>
  40b3d8:	ea000025 	b	40b474 <cvCloneMat+0x14c>
  40b3dc:	e5943010 	ldr	r3, [r4, #16]
  40b3e0:	e3530000 	cmp	r3, #0
  40b3e4:	0a000022 	beq	40b474 <cvCloneMat+0x14c>
  40b3e8:	e1a00005 	mov	r0, r5
  40b3ec:	ebfffe99 	bl	40ae58 <cvCreateData>
  40b3f0:	eb001d7b 	bl	4129e4 <cvGetErrStatus>
  40b3f4:	e3500000 	cmp	r0, #0
  40b3f8:	aa00000b 	bge	40b42c <cvCloneMat+0x104>
  40b3fc:	e59f30a0 	ldr	r3, [pc, #160]	; 40b4a4 <cvCloneMat+0x17c>
  40b400:	e58d3000 	str	r3, [sp]
  40b404:	e3e00000 	mvn	r0, #0
  40b408:	e59f1098 	ldr	r1, [pc, #152]	; 40b4a8 <cvCloneMat+0x180>
  40b40c:	e08f1001 	add	r1, pc, r1
  40b410:	e2811e11 	add	r1, r1, #272	; 0x110
  40b414:	e59f2090 	ldr	r2, [pc, #144]	; 40b4ac <cvCloneMat+0x184>
  40b418:	e08f2002 	add	r2, pc, r2
  40b41c:	e59f308c 	ldr	r3, [pc, #140]	; 40b4b0 <cvCloneMat+0x188>
  40b420:	e08f3003 	add	r3, pc, r3
  40b424:	eb001d9f 	bl	412aa8 <cvError>
  40b428:	ea000011 	b	40b474 <cvCloneMat+0x14c>
  40b42c:	e1a00004 	mov	r0, r4
  40b430:	e1a01005 	mov	r1, r5
  40b434:	e3a02000 	mov	r2, #0
  40b438:	eb004574 	bl	41ca10 <cvCopy>
  40b43c:	eb001d68 	bl	4129e4 <cvGetErrStatus>
  40b440:	e3500000 	cmp	r0, #0
  40b444:	aa00000a 	bge	40b474 <cvCloneMat+0x14c>
  40b448:	e59f3064 	ldr	r3, [pc, #100]	; 40b4b4 <cvCloneMat+0x18c>
  40b44c:	e58d3000 	str	r3, [sp]
  40b450:	e3e00000 	mvn	r0, #0
  40b454:	e59f105c 	ldr	r1, [pc, #92]	; 40b4b8 <cvCloneMat+0x190>
  40b458:	e08f1001 	add	r1, pc, r1
  40b45c:	e2811e11 	add	r1, r1, #272	; 0x110
  40b460:	e59f2054 	ldr	r2, [pc, #84]	; 40b4bc <cvCloneMat+0x194>
  40b464:	e08f2002 	add	r2, pc, r2
  40b468:	e59f3050 	ldr	r3, [pc, #80]	; 40b4c0 <cvCloneMat+0x198>
  40b46c:	e08f3003 	add	r3, pc, r3
  40b470:	eb001d8c 	bl	412aa8 <cvError>
  40b474:	e1a00005 	mov	r0, r5
  40b478:	e28dd00c 	add	sp, sp, #12
  40b47c:	e8bd4030 	pop	{r4, r5, lr}
  40b480:	e12fff1e 	bx	lr
  40b484:	42420000 	.word	0x42420000
  40b488:	1fbf511c 	.word	0x1fbf511c
  40b48c:	00031fb0 	.word	0x00031fb0
  40b490:	00031c60 	.word	0x00031c60
  40b494:	00000102 	.word	0x00000102
  40b498:	1fbf50d4 	.word	0x1fbf50d4
  40b49c:	00031c08 	.word	0x00031c08
  40b4a0:	00031c18 	.word	0x00031c18
  40b4a4:	00000106 	.word	0x00000106
  40b4a8:	1fbf5084 	.word	0x1fbf5084
  40b4ac:	00031bb8 	.word	0x00031bb8
  40b4b0:	00031bc8 	.word	0x00031bc8
  40b4b4:	00000107 	.word	0x00000107
  40b4b8:	1fbf5038 	.word	0x1fbf5038
  40b4bc:	00031b6c 	.word	0x00031b6c
  40b4c0:	00031b7c 	.word	0x00031b7c

0040b4c4 <cvCreateMatND>:
  40b4c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40b4c8:	e24dd014 	sub	sp, sp, #20
  40b4cc:	e3a03000 	mov	r3, #0
  40b4d0:	e58d300c 	str	r3, [sp, #12]
  40b4d4:	ebfffada 	bl	40a044 <cvCreateMatNDHeader>
  40b4d8:	e58d000c 	str	r0, [sp, #12]
  40b4dc:	eb001d40 	bl	4129e4 <cvGetErrStatus>
  40b4e0:	e3500000 	cmp	r0, #0
  40b4e4:	aa00000b 	bge	40b518 <cvCreateMatND+0x54>
  40b4e8:	e59f3088 	ldr	r3, [pc, #136]	; 40b578 <cvCreateMatND+0xb4>
  40b4ec:	e58d3000 	str	r3, [sp]
  40b4f0:	e3e00000 	mvn	r0, #0
  40b4f4:	e59f1080 	ldr	r1, [pc, #128]	; 40b57c <cvCreateMatND+0xb8>
  40b4f8:	e08f1001 	add	r1, pc, r1
  40b4fc:	e2811f47 	add	r1, r1, #284	; 0x11c
  40b500:	e59f2078 	ldr	r2, [pc, #120]	; 40b580 <cvCreateMatND+0xbc>
  40b504:	e08f2002 	add	r2, pc, r2
  40b508:	e59f3074 	ldr	r3, [pc, #116]	; 40b584 <cvCreateMatND+0xc0>
  40b50c:	e08f3003 	add	r3, pc, r3
  40b510:	eb001d64 	bl	412aa8 <cvError>
  40b514:	ea00000f 	b	40b558 <cvCreateMatND+0x94>
  40b518:	e59d000c 	ldr	r0, [sp, #12]
  40b51c:	ebfffe4d 	bl	40ae58 <cvCreateData>
  40b520:	eb001d2f 	bl	4129e4 <cvGetErrStatus>
  40b524:	e3500000 	cmp	r0, #0
  40b528:	aa00000a 	bge	40b558 <cvCreateMatND+0x94>
  40b52c:	e3a03f56 	mov	r3, #344	; 0x158
  40b530:	e58d3000 	str	r3, [sp]
  40b534:	e3e00000 	mvn	r0, #0
  40b538:	e59f1048 	ldr	r1, [pc, #72]	; 40b588 <cvCreateMatND+0xc4>
  40b53c:	e08f1001 	add	r1, pc, r1
  40b540:	e2811f47 	add	r1, r1, #284	; 0x11c
  40b544:	e59f2040 	ldr	r2, [pc, #64]	; 40b58c <cvCreateMatND+0xc8>
  40b548:	e08f2002 	add	r2, pc, r2
  40b54c:	e59f303c 	ldr	r3, [pc, #60]	; 40b590 <cvCreateMatND+0xcc>
  40b550:	e08f3003 	add	r3, pc, r3
  40b554:	eb001d53 	bl	412aa8 <cvError>
  40b558:	eb001d21 	bl	4129e4 <cvGetErrStatus>
  40b55c:	e3500000 	cmp	r0, #0
  40b560:	b28d000c 	addlt	r0, sp, #12
  40b564:	bbfff91a 	bllt	4099d4 <cvReleaseMat>
  40b568:	e59d000c 	ldr	r0, [sp, #12]
  40b56c:	e28dd014 	add	sp, sp, #20
  40b570:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40b574:	e12fff1e 	bx	lr
  40b578:	00000157 	.word	0x00000157
  40b57c:	1fbf4f98 	.word	0x1fbf4f98
  40b580:	00031acc 	.word	0x00031acc
  40b584:	00031adc 	.word	0x00031adc
  40b588:	1fbf4f54 	.word	0x1fbf4f54
  40b58c:	00031a88 	.word	0x00031a88
  40b590:	00031a98 	.word	0x00031a98

0040b594 <cvCloneMatND>:
  40b594:	e92d4030 	push	{r4, r5, lr}
  40b598:	e24dd00c 	sub	sp, sp, #12
  40b59c:	e2504000 	subs	r4, r0, #0
  40b5a0:	0a000003 	beq	40b5b4 <cvCloneMatND+0x20>
  40b5a4:	e1d420b2 	ldrh	r2, [r4, #2]
  40b5a8:	e59f3164 	ldr	r3, [pc, #356]	; 40b714 <cvCloneMatND+0x180>
  40b5ac:	e1530802 	cmp	r3, r2, lsl #16
  40b5b0:	0a00000c 	beq	40b5e8 <cvCloneMatND+0x54>
  40b5b4:	e59f315c 	ldr	r3, [pc, #348]	; 40b718 <cvCloneMatND+0x184>
  40b5b8:	e58d3000 	str	r3, [sp]
  40b5bc:	e3e00004 	mvn	r0, #4
  40b5c0:	e59f1154 	ldr	r1, [pc, #340]	; 40b71c <cvCloneMatND+0x188>
  40b5c4:	e08f1001 	add	r1, pc, r1
  40b5c8:	e2811f4b 	add	r1, r1, #300	; 0x12c
  40b5cc:	e59f214c 	ldr	r2, [pc, #332]	; 40b720 <cvCloneMatND+0x18c>
  40b5d0:	e08f2002 	add	r2, pc, r2
  40b5d4:	e59f3148 	ldr	r3, [pc, #328]	; 40b724 <cvCloneMatND+0x190>
  40b5d8:	e08f3003 	add	r3, pc, r3
  40b5dc:	eb001d31 	bl	412aa8 <cvError>
  40b5e0:	e3a05000 	mov	r5, #0
  40b5e4:	ea000046 	b	40b704 <cvCloneMatND+0x170>
  40b5e8:	e5940004 	ldr	r0, [r4, #4]
  40b5ec:	e1a00100 	lsl	r0, r0, #2
  40b5f0:	eb0040b1 	bl	41b8bc <cvAlloc>
  40b5f4:	e3a03000 	mov	r3, #0
  40b5f8:	ea000003 	b	40b60c <cvCloneMatND+0x78>
  40b5fc:	e0842183 	add	r2, r4, r3, lsl #3
  40b600:	e5922014 	ldr	r2, [r2, #20]
  40b604:	e7802103 	str	r2, [r0, r3, lsl #2]
  40b608:	e2833001 	add	r3, r3, #1
  40b60c:	e5942004 	ldr	r2, [r4, #4]
  40b610:	e1520003 	cmp	r2, r3
  40b614:	cafffff8 	bgt	40b5fc <cvCloneMatND+0x68>
  40b618:	eb0040d9 	bl	41b984 <cvFree_>
  40b61c:	e5940004 	ldr	r0, [r4, #4]
  40b620:	e3a01000 	mov	r1, #0
  40b624:	e5942000 	ldr	r2, [r4]
  40b628:	ebfffa85 	bl	40a044 <cvCreateMatNDHeader>
  40b62c:	e1a05000 	mov	r5, r0
  40b630:	eb001ceb 	bl	4129e4 <cvGetErrStatus>
  40b634:	e3500000 	cmp	r0, #0
  40b638:	aa00000b 	bge	40b66c <cvCloneMatND+0xd8>
  40b63c:	e59f30e4 	ldr	r3, [pc, #228]	; 40b728 <cvCloneMatND+0x194>
  40b640:	e58d3000 	str	r3, [sp]
  40b644:	e3e00000 	mvn	r0, #0
  40b648:	e59f10dc 	ldr	r1, [pc, #220]	; 40b72c <cvCloneMatND+0x198>
  40b64c:	e08f1001 	add	r1, pc, r1
  40b650:	e2811f4b 	add	r1, r1, #300	; 0x12c
  40b654:	e59f20d4 	ldr	r2, [pc, #212]	; 40b730 <cvCloneMatND+0x19c>
  40b658:	e08f2002 	add	r2, pc, r2
  40b65c:	e59f30d0 	ldr	r3, [pc, #208]	; 40b734 <cvCloneMatND+0x1a0>
  40b660:	e08f3003 	add	r3, pc, r3
  40b664:	eb001d0f 	bl	412aa8 <cvError>
  40b668:	ea000025 	b	40b704 <cvCloneMatND+0x170>
  40b66c:	e5943010 	ldr	r3, [r4, #16]
  40b670:	e3530000 	cmp	r3, #0
  40b674:	0a000022 	beq	40b704 <cvCloneMatND+0x170>
  40b678:	e1a00005 	mov	r0, r5
  40b67c:	ebfffdf5 	bl	40ae58 <cvCreateData>
  40b680:	eb001cd7 	bl	4129e4 <cvGetErrStatus>
  40b684:	e3500000 	cmp	r0, #0
  40b688:	aa00000b 	bge	40b6bc <cvCloneMatND+0x128>
  40b68c:	e59f30a4 	ldr	r3, [pc, #164]	; 40b738 <cvCloneMatND+0x1a4>
  40b690:	e58d3000 	str	r3, [sp]
  40b694:	e3e00000 	mvn	r0, #0
  40b698:	e59f109c 	ldr	r1, [pc, #156]	; 40b73c <cvCloneMatND+0x1a8>
  40b69c:	e08f1001 	add	r1, pc, r1
  40b6a0:	e2811f4b 	add	r1, r1, #300	; 0x12c
  40b6a4:	e59f2094 	ldr	r2, [pc, #148]	; 40b740 <cvCloneMatND+0x1ac>
  40b6a8:	e08f2002 	add	r2, pc, r2
  40b6ac:	e59f3090 	ldr	r3, [pc, #144]	; 40b744 <cvCloneMatND+0x1b0>
  40b6b0:	e08f3003 	add	r3, pc, r3
  40b6b4:	eb001cfb 	bl	412aa8 <cvError>
  40b6b8:	ea000011 	b	40b704 <cvCloneMatND+0x170>
  40b6bc:	e1a00004 	mov	r0, r4
  40b6c0:	e1a01005 	mov	r1, r5
  40b6c4:	e3a02000 	mov	r2, #0
  40b6c8:	eb0044d0 	bl	41ca10 <cvCopy>
  40b6cc:	eb001cc4 	bl	4129e4 <cvGetErrStatus>
  40b6d0:	e3500000 	cmp	r0, #0
  40b6d4:	aa00000a 	bge	40b704 <cvCloneMatND+0x170>
  40b6d8:	e59f3068 	ldr	r3, [pc, #104]	; 40b748 <cvCloneMatND+0x1b4>
  40b6dc:	e58d3000 	str	r3, [sp]
  40b6e0:	e3e00000 	mvn	r0, #0
  40b6e4:	e59f1060 	ldr	r1, [pc, #96]	; 40b74c <cvCloneMatND+0x1b8>
  40b6e8:	e08f1001 	add	r1, pc, r1
  40b6ec:	e2811f4b 	add	r1, r1, #300	; 0x12c
  40b6f0:	e59f2058 	ldr	r2, [pc, #88]	; 40b750 <cvCloneMatND+0x1bc>
  40b6f4:	e08f2002 	add	r2, pc, r2
  40b6f8:	e59f3054 	ldr	r3, [pc, #84]	; 40b754 <cvCloneMatND+0x1c0>
  40b6fc:	e08f3003 	add	r3, pc, r3
  40b700:	eb001ce8 	bl	412aa8 <cvError>
  40b704:	e1a00005 	mov	r0, r5
  40b708:	e28dd00c 	add	sp, sp, #12
  40b70c:	e8bd4030 	pop	{r4, r5, lr}
  40b710:	e12fff1e 	bx	lr
  40b714:	42430000 	.word	0x42430000
  40b718:	0000018b 	.word	0x0000018b
  40b71c:	1fbf4ecc 	.word	0x1fbf4ecc
  40b720:	00031d74 	.word	0x00031d74
  40b724:	00031a10 	.word	0x00031a10
  40b728:	00000192 	.word	0x00000192
  40b72c:	1fbf4e44 	.word	0x1fbf4e44
  40b730:	00031978 	.word	0x00031978
  40b734:	00031988 	.word	0x00031988
  40b738:	00000196 	.word	0x00000196
  40b73c:	1fbf4df4 	.word	0x1fbf4df4
  40b740:	00031928 	.word	0x00031928
  40b744:	00031938 	.word	0x00031938
  40b748:	00000197 	.word	0x00000197
  40b74c:	1fbf4da8 	.word	0x1fbf4da8
  40b750:	000318dc 	.word	0x000318dc
  40b754:	000318ec 	.word	0x000318ec

0040b758 <cvReleaseData>:
  40b758:	e92d4010 	push	{r4, lr}
  40b75c:	e24dd008 	sub	sp, sp, #8
  40b760:	e2504000 	subs	r4, r0, #0
  40b764:	0a000009 	beq	40b790 <cvReleaseData+0x38>
  40b768:	e1d420b2 	ldrh	r2, [r4, #2]
  40b76c:	e59f31dc 	ldr	r3, [pc, #476]	; 40b950 <cvReleaseData+0x1f8>
  40b770:	e1530802 	cmp	r3, r2, lsl #16
  40b774:	1a000005 	bne	40b790 <cvReleaseData+0x38>
  40b778:	e5943018 	ldr	r3, [r4, #24]
  40b77c:	e3530000 	cmp	r3, #0
  40b780:	da000002 	ble	40b790 <cvReleaseData+0x38>
  40b784:	e5943014 	ldr	r3, [r4, #20]
  40b788:	e3530000 	cmp	r3, #0
  40b78c:	ca000005 	bgt	40b7a8 <cvReleaseData+0x50>
  40b790:	e3540000 	cmp	r4, #0
  40b794:	0a00004b 	beq	40b8c8 <cvReleaseData+0x170>
  40b798:	e1d420b2 	ldrh	r2, [r4, #2]
  40b79c:	e59f31b0 	ldr	r3, [pc, #432]	; 40b954 <cvReleaseData+0x1fc>
  40b7a0:	e1530802 	cmp	r3, r2, lsl #16
  40b7a4:	1a000047 	bne	40b8c8 <cvReleaseData+0x170>
  40b7a8:	e3540000 	cmp	r4, #0
  40b7ac:	0a000024 	beq	40b844 <cvReleaseData+0xec>
  40b7b0:	e1d420b2 	ldrh	r2, [r4, #2]
  40b7b4:	e59f3194 	ldr	r3, [pc, #404]	; 40b950 <cvReleaseData+0x1f8>
  40b7b8:	e1530802 	cmp	r3, r2, lsl #16
  40b7bc:	1a000020 	bne	40b844 <cvReleaseData+0xec>
  40b7c0:	e5943018 	ldr	r3, [r4, #24]
  40b7c4:	e3530000 	cmp	r3, #0
  40b7c8:	da00001d 	ble	40b844 <cvReleaseData+0xec>
  40b7cc:	e5943014 	ldr	r3, [r4, #20]
  40b7d0:	e3530000 	cmp	r3, #0
  40b7d4:	da00001a 	ble	40b844 <cvReleaseData+0xec>
  40b7d8:	e5943010 	ldr	r3, [r4, #16]
  40b7dc:	e3530000 	cmp	r3, #0
  40b7e0:	0a000017 	beq	40b844 <cvReleaseData+0xec>
  40b7e4:	e3a03000 	mov	r3, #0
  40b7e8:	e5843010 	str	r3, [r4, #16]
  40b7ec:	e5942008 	ldr	r2, [r4, #8]
  40b7f0:	e1520003 	cmp	r2, r3
  40b7f4:	0a000006 	beq	40b814 <cvReleaseData+0xbc>
  40b7f8:	e5923000 	ldr	r3, [r2]
  40b7fc:	e2433001 	sub	r3, r3, #1
  40b800:	e5823000 	str	r3, [r2]
  40b804:	e3530000 	cmp	r3, #0
  40b808:	1a000003 	bne	40b81c <cvReleaseData+0xc4>
  40b80c:	e3a03001 	mov	r3, #1
  40b810:	ea000002 	b	40b820 <cvReleaseData+0xc8>
  40b814:	e3a03000 	mov	r3, #0
  40b818:	ea000000 	b	40b820 <cvReleaseData+0xc8>
  40b81c:	e3a03000 	mov	r3, #0
  40b820:	e3530000 	cmp	r3, #0
  40b824:	0a000003 	beq	40b838 <cvReleaseData+0xe0>
  40b828:	e5940008 	ldr	r0, [r4, #8]
  40b82c:	eb004054 	bl	41b984 <cvFree_>
  40b830:	e3a03000 	mov	r3, #0
  40b834:	e5843008 	str	r3, [r4, #8]
  40b838:	e3a03000 	mov	r3, #0
  40b83c:	e5843008 	str	r3, [r4, #8]
  40b840:	ea00003f 	b	40b944 <cvReleaseData+0x1ec>
  40b844:	e3540000 	cmp	r4, #0
  40b848:	0a00003d 	beq	40b944 <cvReleaseData+0x1ec>
  40b84c:	e1d420b2 	ldrh	r2, [r4, #2]
  40b850:	e59f30fc 	ldr	r3, [pc, #252]	; 40b954 <cvReleaseData+0x1fc>
  40b854:	e1530802 	cmp	r3, r2, lsl #16
  40b858:	1a000039 	bne	40b944 <cvReleaseData+0x1ec>
  40b85c:	e5943010 	ldr	r3, [r4, #16]
  40b860:	e3530000 	cmp	r3, #0
  40b864:	0a000036 	beq	40b944 <cvReleaseData+0x1ec>
  40b868:	e3a03000 	mov	r3, #0
  40b86c:	e5843010 	str	r3, [r4, #16]
  40b870:	e5942008 	ldr	r2, [r4, #8]
  40b874:	e1520003 	cmp	r2, r3
  40b878:	0a000006 	beq	40b898 <cvReleaseData+0x140>
  40b87c:	e5923000 	ldr	r3, [r2]
  40b880:	e2433001 	sub	r3, r3, #1
  40b884:	e5823000 	str	r3, [r2]
  40b888:	e3530000 	cmp	r3, #0
  40b88c:	1a000003 	bne	40b8a0 <cvReleaseData+0x148>
  40b890:	e3a03001 	mov	r3, #1
  40b894:	ea000002 	b	40b8a4 <cvReleaseData+0x14c>
  40b898:	e3a03000 	mov	r3, #0
  40b89c:	ea000000 	b	40b8a4 <cvReleaseData+0x14c>
  40b8a0:	e3a03000 	mov	r3, #0
  40b8a4:	e3530000 	cmp	r3, #0
  40b8a8:	0a000003 	beq	40b8bc <cvReleaseData+0x164>
  40b8ac:	e5940008 	ldr	r0, [r4, #8]
  40b8b0:	eb004033 	bl	41b984 <cvFree_>
  40b8b4:	e3a03000 	mov	r3, #0
  40b8b8:	e5843008 	str	r3, [r4, #8]
  40b8bc:	e3a03000 	mov	r3, #0
  40b8c0:	e5843008 	str	r3, [r4, #8]
  40b8c4:	ea00001e 	b	40b944 <cvReleaseData+0x1ec>
  40b8c8:	e3540000 	cmp	r4, #0
  40b8cc:	0a000011 	beq	40b918 <cvReleaseData+0x1c0>
  40b8d0:	e5943000 	ldr	r3, [r4]
  40b8d4:	e3530070 	cmp	r3, #112	; 0x70
  40b8d8:	1a00000e 	bne	40b918 <cvReleaseData+0x1c0>
  40b8dc:	e59f3074 	ldr	r3, [pc, #116]	; 40b958 <cvReleaseData+0x200>
  40b8e0:	e08f3003 	add	r3, pc, r3
  40b8e4:	e5933008 	ldr	r3, [r3, #8]
  40b8e8:	e3530000 	cmp	r3, #0
  40b8ec:	1a000004 	bne	40b904 <cvReleaseData+0x1ac>
  40b8f0:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
  40b8f4:	e584306c 	str	r3, [r4, #108]	; 0x6c
  40b8f8:	e5843044 	str	r3, [r4, #68]	; 0x44
  40b8fc:	eb004020 	bl	41b984 <cvFree_>
  40b900:	ea00000f 	b	40b944 <cvReleaseData+0x1ec>
  40b904:	e1a00004 	mov	r0, r4
  40b908:	e3a01002 	mov	r1, #2
  40b90c:	e1a0e00f 	mov	lr, pc
  40b910:	e12fff13 	bx	r3
  40b914:	ea00000a 	b	40b944 <cvReleaseData+0x1ec>
  40b918:	e59f303c 	ldr	r3, [pc, #60]	; 40b95c <cvReleaseData+0x204>
  40b91c:	e58d3000 	str	r3, [sp]
  40b920:	e3e00004 	mvn	r0, #4
  40b924:	e59f1034 	ldr	r1, [pc, #52]	; 40b960 <cvReleaseData+0x208>
  40b928:	e08f1001 	add	r1, pc, r1
  40b92c:	e2811f4f 	add	r1, r1, #316	; 0x13c
  40b930:	e59f202c 	ldr	r2, [pc, #44]	; 40b964 <cvReleaseData+0x20c>
  40b934:	e08f2002 	add	r2, pc, r2
  40b938:	e59f3028 	ldr	r3, [pc, #40]	; 40b968 <cvReleaseData+0x210>
  40b93c:	e08f3003 	add	r3, pc, r3
  40b940:	eb001c58 	bl	412aa8 <cvError>
  40b944:	e28dd008 	add	sp, sp, #8
  40b948:	e8bd4010 	pop	{r4, lr}
  40b94c:	e12fff1e 	bx	lr
  40b950:	42420000 	.word	0x42420000
  40b954:	42430000 	.word	0x42430000
  40b958:	1fbf62f0 	.word	0x1fbf62f0
  40b95c:	00000493 	.word	0x00000493
  40b960:	1fbf4b68 	.word	0x1fbf4b68
  40b964:	000319d4 	.word	0x000319d4
  40b968:	000316ac 	.word	0x000316ac

0040b96c <cvSetData>:
  40b96c:	e92d4070 	push	{r4, r5, r6, lr}
  40b970:	e24dd008 	sub	sp, sp, #8
  40b974:	e1a05001 	mov	r5, r1
  40b978:	e1a06002 	mov	r6, r2
  40b97c:	e2504000 	subs	r4, r0, #0
  40b980:	0a000009 	beq	40b9ac <cvSetData+0x40>
  40b984:	e1d420b2 	ldrh	r2, [r4, #2]
  40b988:	e59f333c 	ldr	r3, [pc, #828]	; 40bccc <cvSetData+0x360>
  40b98c:	e1530802 	cmp	r3, r2, lsl #16
  40b990:	1a000005 	bne	40b9ac <cvSetData+0x40>
  40b994:	e5943018 	ldr	r3, [r4, #24]
  40b998:	e3530000 	cmp	r3, #0
  40b99c:	da000002 	ble	40b9ac <cvSetData+0x40>
  40b9a0:	e5943014 	ldr	r3, [r4, #20]
  40b9a4:	e3530000 	cmp	r3, #0
  40b9a8:	ca000005 	bgt	40b9c4 <cvSetData+0x58>
  40b9ac:	e3540000 	cmp	r4, #0
  40b9b0:	0a000005 	beq	40b9cc <cvSetData+0x60>
  40b9b4:	e1d420b2 	ldrh	r2, [r4, #2]
  40b9b8:	e59f3310 	ldr	r3, [pc, #784]	; 40bcd0 <cvSetData+0x364>
  40b9bc:	e1530802 	cmp	r3, r2, lsl #16
  40b9c0:	1a000001 	bne	40b9cc <cvSetData+0x60>
  40b9c4:	e1a00004 	mov	r0, r4
  40b9c8:	ebffff62 	bl	40b758 <cvReleaseData>
  40b9cc:	e3540000 	cmp	r4, #0
  40b9d0:	0a00003c 	beq	40bac8 <cvSetData+0x15c>
  40b9d4:	e5943000 	ldr	r3, [r4]
  40b9d8:	e1a01823 	lsr	r1, r3, #16
  40b9dc:	e59f22e8 	ldr	r2, [pc, #744]	; 40bccc <cvSetData+0x360>
  40b9e0:	e1520801 	cmp	r2, r1, lsl #16
  40b9e4:	1a000037 	bne	40bac8 <cvSetData+0x15c>
  40b9e8:	e594c018 	ldr	ip, [r4, #24]
  40b9ec:	e35c0000 	cmp	ip, #0
  40b9f0:	da000034 	ble	40bac8 <cvSetData+0x15c>
  40b9f4:	e5940014 	ldr	r0, [r4, #20]
  40b9f8:	e3500000 	cmp	r0, #0
  40b9fc:	da000031 	ble	40bac8 <cvSetData+0x15c>
  40ba00:	e1a01b83 	lsl	r1, r3, #23
  40ba04:	e1a01ba1 	lsr	r1, r1, #23
  40ba08:	e2032f7e 	and	r2, r3, #504	; 0x1f8
  40ba0c:	e1a021c2 	asr	r2, r2, #3
  40ba10:	e2822001 	add	r2, r2, #1
  40ba14:	e2033007 	and	r3, r3, #7
  40ba18:	e1a03083 	lsl	r3, r3, #1
  40ba1c:	e59fe2b0 	ldr	lr, [pc, #688]	; 40bcd4 <cvSetData+0x368>
  40ba20:	e1a0333e 	lsr	r3, lr, r3
  40ba24:	e2033003 	and	r3, r3, #3
  40ba28:	e1a03312 	lsl	r3, r2, r3
  40ba2c:	e003039c 	mul	r3, ip, r3
  40ba30:	e3500001 	cmp	r0, #1
  40ba34:	d3a02000 	movle	r2, #0
  40ba38:	c3e02000 	mvngt	r2, #0
  40ba3c:	e0033002 	and	r3, r3, r2
  40ba40:	e3760106 	cmn	r6, #-2147483647	; 0x80000001
  40ba44:	0a000014 	beq	40ba9c <cvSetData+0x130>
  40ba48:	e3550000 	cmp	r5, #0
  40ba4c:	11560003 	cmpne	r6, r3
  40ba50:	aa00000b 	bge	40ba84 <cvSetData+0x118>
  40ba54:	e59f327c 	ldr	r3, [pc, #636]	; 40bcd8 <cvSetData+0x36c>
  40ba58:	e58d3000 	str	r3, [sp]
  40ba5c:	e3e0000c 	mvn	r0, #12
  40ba60:	e59f1274 	ldr	r1, [pc, #628]	; 40bcdc <cvSetData+0x370>
  40ba64:	e08f1001 	add	r1, pc, r1
  40ba68:	e2811f53 	add	r1, r1, #332	; 0x14c
  40ba6c:	e59f226c 	ldr	r2, [pc, #620]	; 40bce0 <cvSetData+0x374>
  40ba70:	e08f2002 	add	r2, pc, r2
  40ba74:	e59f3268 	ldr	r3, [pc, #616]	; 40bce4 <cvSetData+0x378>
  40ba78:	e08f3003 	add	r3, pc, r3
  40ba7c:	eb001c09 	bl	412aa8 <cvError>
  40ba80:	ea00008e 	b	40bcc0 <cvSetData+0x354>
  40ba84:	e3500001 	cmp	r0, #1
  40ba88:	d3a02000 	movle	r2, #0
  40ba8c:	c3e02000 	mvngt	r2, #0
  40ba90:	e0066002 	and	r6, r6, r2
  40ba94:	e5846004 	str	r6, [r4, #4]
  40ba98:	ea000000 	b	40baa0 <cvSetData+0x134>
  40ba9c:	e5843004 	str	r3, [r4, #4]
  40baa0:	e5845010 	str	r5, [r4, #16]
  40baa4:	e3811442 	orr	r1, r1, #1107296256	; 0x42000000
  40baa8:	e3811842 	orr	r1, r1, #4325376	; 0x420000
  40baac:	e5942004 	ldr	r2, [r4, #4]
  40bab0:	e1520003 	cmp	r2, r3
  40bab4:	03a03901 	moveq	r3, #16384	; 0x4000
  40bab8:	13a03000 	movne	r3, #0
  40babc:	e1811003 	orr	r1, r1, r3
  40bac0:	e5841000 	str	r1, [r4]
  40bac4:	ea00007d 	b	40bcc0 <cvSetData+0x354>
  40bac8:	e3540000 	cmp	r4, #0
  40bacc:	0a000045 	beq	40bbe8 <cvSetData+0x27c>
  40bad0:	e5943000 	ldr	r3, [r4]
  40bad4:	e3530070 	cmp	r3, #112	; 0x70
  40bad8:	1a000042 	bne	40bbe8 <cvSetData+0x27c>
  40badc:	e5d43010 	ldrb	r3, [r4, #16]
  40bae0:	e1a021c3 	asr	r2, r3, #3
  40bae4:	e5943008 	ldr	r3, [r4, #8]
  40bae8:	e0030392 	mul	r3, r2, r3
  40baec:	e5942028 	ldr	r2, [r4, #40]	; 0x28
  40baf0:	e0020293 	mul	r2, r3, r2
  40baf4:	e3760106 	cmn	r6, #-2147483647	; 0x80000001
  40baf8:	0a000013 	beq	40bb4c <cvSetData+0x1e0>
  40bafc:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
  40bb00:	e3510001 	cmp	r1, #1
  40bb04:	da000010 	ble	40bb4c <cvSetData+0x1e0>
  40bb08:	e3550000 	cmp	r5, #0
  40bb0c:	11560002 	cmpne	r6, r2
  40bb10:	aa00000b 	bge	40bb44 <cvSetData+0x1d8>
  40bb14:	e59f31cc 	ldr	r3, [pc, #460]	; 40bce8 <cvSetData+0x37c>
  40bb18:	e58d3000 	str	r3, [sp]
  40bb1c:	e3e0000c 	mvn	r0, #12
  40bb20:	e59f11c4 	ldr	r1, [pc, #452]	; 40bcec <cvSetData+0x380>
  40bb24:	e08f1001 	add	r1, pc, r1
  40bb28:	e2811f53 	add	r1, r1, #332	; 0x14c
  40bb2c:	e59f21bc 	ldr	r2, [pc, #444]	; 40bcf0 <cvSetData+0x384>
  40bb30:	e08f2002 	add	r2, pc, r2
  40bb34:	e59f31b8 	ldr	r3, [pc, #440]	; 40bcf4 <cvSetData+0x388>
  40bb38:	e08f3003 	add	r3, pc, r3
  40bb3c:	eb001bd9 	bl	412aa8 <cvError>
  40bb40:	ea00005e 	b	40bcc0 <cvSetData+0x354>
  40bb44:	e5846048 	str	r6, [r4, #72]	; 0x48
  40bb48:	ea000000 	b	40bb50 <cvSetData+0x1e4>
  40bb4c:	e5842048 	str	r2, [r4, #72]	; 0x48
  40bb50:	e5941048 	ldr	r1, [r4, #72]	; 0x48
  40bb54:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
  40bb58:	e0020291 	mul	r2, r1, r2
  40bb5c:	e5842040 	str	r2, [r4, #64]	; 0x40
  40bb60:	e584506c 	str	r5, [r4, #108]	; 0x6c
  40bb64:	e5845044 	str	r5, [r4, #68]	; 0x44
  40bb68:	e1855006 	orr	r5, r5, r6
  40bb6c:	e3150007 	tst	r5, #7
  40bb70:	1a000012 	bne	40bbc0 <cvSetData+0x254>
  40bb74:	e5942028 	ldr	r2, [r4, #40]	; 0x28
  40bb78:	e0030392 	mul	r3, r2, r3
  40bb7c:	e3730106 	cmn	r3, #-2147483647	; 0x80000001
  40bb80:	1a000008 	bne	40bba8 <cvSetData+0x23c>
  40bb84:	e59f016c 	ldr	r0, [pc, #364]	; 40bcf8 <cvSetData+0x38c>
  40bb88:	e08f0000 	add	r0, pc, r0
  40bb8c:	e3a010e7 	mov	r1, #231	; 0xe7
  40bb90:	e59f2164 	ldr	r2, [pc, #356]	; 40bcfc <cvSetData+0x390>
  40bb94:	e08f2002 	add	r2, pc, r2
  40bb98:	e2822064 	add	r2, r2, #100	; 0x64
  40bb9c:	e59f315c 	ldr	r3, [pc, #348]	; 40bd00 <cvSetData+0x394>
  40bba0:	e08f3003 	add	r3, pc, r3
  40bba4:	fa00a06a 	blx	433d54 <__assert_func>
  40bba8:	e2833007 	add	r3, r3, #7
  40bbac:	e3c33007 	bic	r3, r3, #7
  40bbb0:	e1560003 	cmp	r6, r3
  40bbb4:	1a000003 	bne	40bbc8 <cvSetData+0x25c>
  40bbb8:	e3a03001 	mov	r3, #1
  40bbbc:	ea000002 	b	40bbcc <cvSetData+0x260>
  40bbc0:	e3a03000 	mov	r3, #0
  40bbc4:	ea000000 	b	40bbcc <cvSetData+0x260>
  40bbc8:	e3a03000 	mov	r3, #0
  40bbcc:	e3530000 	cmp	r3, #0
  40bbd0:	13a03008 	movne	r3, #8
  40bbd4:	15843024 	strne	r3, [r4, #36]	; 0x24
  40bbd8:	1a000038 	bne	40bcc0 <cvSetData+0x354>
  40bbdc:	e3a03004 	mov	r3, #4
  40bbe0:	e5843024 	str	r3, [r4, #36]	; 0x24
  40bbe4:	ea000035 	b	40bcc0 <cvSetData+0x354>
  40bbe8:	e3540000 	cmp	r4, #0
  40bbec:	0a000028 	beq	40bc94 <cvSetData+0x328>
  40bbf0:	e5942000 	ldr	r2, [r4]
  40bbf4:	e1a01822 	lsr	r1, r2, #16
  40bbf8:	e59f30d0 	ldr	r3, [pc, #208]	; 40bcd0 <cvSetData+0x364>
  40bbfc:	e1530801 	cmp	r3, r1, lsl #16
  40bc00:	1a000023 	bne	40bc94 <cvSetData+0x328>
  40bc04:	e3760106 	cmn	r6, #-2147483647	; 0x80000001
  40bc08:	0a00000b 	beq	40bc3c <cvSetData+0x2d0>
  40bc0c:	e59f30f0 	ldr	r3, [pc, #240]	; 40bd04 <cvSetData+0x398>
  40bc10:	e58d3000 	str	r3, [sp]
  40bc14:	e3e0000c 	mvn	r0, #12
  40bc18:	e59f10e8 	ldr	r1, [pc, #232]	; 40bd08 <cvSetData+0x39c>
  40bc1c:	e08f1001 	add	r1, pc, r1
  40bc20:	e2811f53 	add	r1, r1, #332	; 0x14c
  40bc24:	e59f20e0 	ldr	r2, [pc, #224]	; 40bd0c <cvSetData+0x3a0>
  40bc28:	e08f2002 	add	r2, pc, r2
  40bc2c:	e59f30dc 	ldr	r3, [pc, #220]	; 40bd10 <cvSetData+0x3a4>
  40bc30:	e08f3003 	add	r3, pc, r3
  40bc34:	eb001b9b 	bl	412aa8 <cvError>
  40bc38:	ea000020 	b	40bcc0 <cvSetData+0x354>
  40bc3c:	e5845010 	str	r5, [r4, #16]
  40bc40:	e2021f7e 	and	r1, r2, #504	; 0x1f8
  40bc44:	e1a011c1 	asr	r1, r1, #3
  40bc48:	e2813001 	add	r3, r1, #1
  40bc4c:	e2022007 	and	r2, r2, #7
  40bc50:	e1a02082 	lsl	r2, r2, #1
  40bc54:	e59f1078 	ldr	r1, [pc, #120]	; 40bcd4 <cvSetData+0x368>
  40bc58:	e1a01231 	lsr	r1, r1, r2
  40bc5c:	e2011003 	and	r1, r1, #3
  40bc60:	e1a01113 	lsl	r1, r3, r1
  40bc64:	e5942004 	ldr	r2, [r4, #4]
  40bc68:	e2422001 	sub	r2, r2, #1
  40bc6c:	ea000005 	b	40bc88 <cvSetData+0x31c>
  40bc70:	e2823002 	add	r3, r2, #2
  40bc74:	e0843183 	add	r3, r4, r3, lsl #3
  40bc78:	e5831008 	str	r1, [r3, #8]
  40bc7c:	e5933004 	ldr	r3, [r3, #4]
  40bc80:	e0010193 	mul	r1, r3, r1
  40bc84:	e2422001 	sub	r2, r2, #1
  40bc88:	e3520000 	cmp	r2, #0
  40bc8c:	aafffff7 	bge	40bc70 <cvSetData+0x304>
  40bc90:	ea00000a 	b	40bcc0 <cvSetData+0x354>
  40bc94:	e59f3078 	ldr	r3, [pc, #120]	; 40bd14 <cvSetData+0x3a8>
  40bc98:	e58d3000 	str	r3, [sp]
  40bc9c:	e3e00004 	mvn	r0, #4
  40bca0:	e59f1070 	ldr	r1, [pc, #112]	; 40bd18 <cvSetData+0x3ac>
  40bca4:	e08f1001 	add	r1, pc, r1
  40bca8:	e2811f53 	add	r1, r1, #332	; 0x14c
  40bcac:	e59f2068 	ldr	r2, [pc, #104]	; 40bd1c <cvSetData+0x3b0>
  40bcb0:	e08f2002 	add	r2, pc, r2
  40bcb4:	e59f3064 	ldr	r3, [pc, #100]	; 40bd20 <cvSetData+0x3b4>
  40bcb8:	e08f3003 	add	r3, pc, r3
  40bcbc:	eb001b79 	bl	412aa8 <cvError>
  40bcc0:	e28dd008 	add	sp, sp, #8
  40bcc4:	e8bd4070 	pop	{r4, r5, r6, lr}
  40bcc8:	e12fff1e 	bx	lr
  40bccc:	42420000 	.word	0x42420000
  40bcd0:	42430000 	.word	0x42430000
  40bcd4:	0000ba50 	.word	0x0000ba50
  40bcd8:	0000042b 	.word	0x0000042b
  40bcdc:	1fbf4a2c 	.word	0x1fbf4a2c
  40bce0:	000349a0 	.word	0x000349a0
  40bce4:	00031570 	.word	0x00031570
  40bce8:	00000442 	.word	0x00000442
  40bcec:	1fbf496c 	.word	0x1fbf496c
  40bcf0:	000348e0 	.word	0x000348e0
  40bcf4:	000314b0 	.word	0x000314b0
  40bcf8:	00031578 	.word	0x00031578
  40bcfc:	00031268 	.word	0x00031268
  40bd00:	00031578 	.word	0x00031578
  40bd04:	0000045f 	.word	0x0000045f
  40bd08:	1fbf4874 	.word	0x1fbf4874
  40bd0c:	00031730 	.word	0x00031730
  40bd10:	000313b8 	.word	0x000313b8
  40bd14:	0000046e 	.word	0x0000046e
  40bd18:	1fbf47ec 	.word	0x1fbf47ec
  40bd1c:	00031658 	.word	0x00031658
  40bd20:	00031330 	.word	0x00031330

0040bd24 <cvGetElemType>:
  40bd24:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40bd28:	e24dd00c 	sub	sp, sp, #12
  40bd2c:	e59f20f8 	ldr	r2, [pc, #248]	; 40be2c <cvGetElemType+0x108>
  40bd30:	e08f2002 	add	r2, pc, r2
  40bd34:	e3500000 	cmp	r0, #0
  40bd38:	0a000009 	beq	40bd64 <cvGetElemType+0x40>
  40bd3c:	e1d010b2 	ldrh	r1, [r0, #2]
  40bd40:	e59f30e8 	ldr	r3, [pc, #232]	; 40be30 <cvGetElemType+0x10c>
  40bd44:	e1530801 	cmp	r3, r1, lsl #16
  40bd48:	1a000005 	bne	40bd64 <cvGetElemType+0x40>
  40bd4c:	e5903018 	ldr	r3, [r0, #24]
  40bd50:	e3530000 	cmp	r3, #0
  40bd54:	da000002 	ble	40bd64 <cvGetElemType+0x40>
  40bd58:	e5903014 	ldr	r3, [r0, #20]
  40bd5c:	e3530000 	cmp	r3, #0
  40bd60:	ca00000b 	bgt	40bd94 <cvGetElemType+0x70>
  40bd64:	e3500000 	cmp	r0, #0
  40bd68:	0a000003 	beq	40bd7c <cvGetElemType+0x58>
  40bd6c:	e1d010b2 	ldrh	r1, [r0, #2]
  40bd70:	e59f30bc 	ldr	r3, [pc, #188]	; 40be34 <cvGetElemType+0x110>
  40bd74:	e1530801 	cmp	r3, r1, lsl #16
  40bd78:	0a000005 	beq	40bd94 <cvGetElemType+0x70>
  40bd7c:	e3500000 	cmp	r0, #0
  40bd80:	0a000007 	beq	40bda4 <cvGetElemType+0x80>
  40bd84:	e1d010b2 	ldrh	r1, [r0, #2]
  40bd88:	e59f30a8 	ldr	r3, [pc, #168]	; 40be38 <cvGetElemType+0x114>
  40bd8c:	e1530801 	cmp	r3, r1, lsl #16
  40bd90:	1a000003 	bne	40bda4 <cvGetElemType+0x80>
  40bd94:	e5900000 	ldr	r0, [r0]
  40bd98:	e1a00b80 	lsl	r0, r0, #23
  40bd9c:	e1a00ba0 	lsr	r0, r0, #23
  40bda0:	ea00001e 	b	40be20 <cvGetElemType+0xfc>
  40bda4:	e3500000 	cmp	r0, #0
  40bda8:	0a000010 	beq	40bdf0 <cvGetElemType+0xcc>
  40bdac:	e5903000 	ldr	r3, [r0]
  40bdb0:	e3530070 	cmp	r3, #112	; 0x70
  40bdb4:	1a00000d 	bne	40bdf0 <cvGetElemType+0xcc>
  40bdb8:	e5903044 	ldr	r3, [r0, #68]	; 0x44
  40bdbc:	e3530000 	cmp	r3, #0
  40bdc0:	0a00000a 	beq	40bdf0 <cvGetElemType+0xcc>
  40bdc4:	e5903010 	ldr	r3, [r0, #16]
  40bdc8:	e20310ff 	and	r1, r3, #255	; 0xff
  40bdcc:	e1a03fa3 	lsr	r3, r3, #31
  40bdd0:	e0833141 	add	r3, r3, r1, asr #2
  40bdd4:	e59f1060 	ldr	r1, [pc, #96]	; 40be3c <cvGetElemType+0x118>
  40bdd8:	e7922001 	ldr	r2, [r2, r1]
  40bddc:	e19230d3 	ldrsb	r3, [r2, r3]
  40bde0:	e5900008 	ldr	r0, [r0, #8]
  40bde4:	e2400001 	sub	r0, r0, #1
  40bde8:	e0830180 	add	r0, r3, r0, lsl #3
  40bdec:	ea00000b 	b	40be20 <cvGetElemType+0xfc>
  40bdf0:	e59f3048 	ldr	r3, [pc, #72]	; 40be40 <cvGetElemType+0x11c>
  40bdf4:	e58d3000 	str	r3, [sp]
  40bdf8:	e3e00004 	mvn	r0, #4
  40bdfc:	e59f1040 	ldr	r1, [pc, #64]	; 40be44 <cvGetElemType+0x120>
  40be00:	e08f1001 	add	r1, pc, r1
  40be04:	e2811f56 	add	r1, r1, #344	; 0x158
  40be08:	e59f2038 	ldr	r2, [pc, #56]	; 40be48 <cvGetElemType+0x124>
  40be0c:	e08f2002 	add	r2, pc, r2
  40be10:	e59f3034 	ldr	r3, [pc, #52]	; 40be4c <cvGetElemType+0x128>
  40be14:	e08f3003 	add	r3, pc, r3
  40be18:	eb001b22 	bl	412aa8 <cvError>
  40be1c:	e3e00000 	mvn	r0, #0
  40be20:	e28dd00c 	add	sp, sp, #12
  40be24:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40be28:	e12fff1e 	bx	lr
  40be2c:	00035304 	.word	0x00035304
  40be30:	42420000 	.word	0x42420000
  40be34:	42430000 	.word	0x42430000
  40be38:	42440000 	.word	0x42440000
  40be3c:	000000cc 	.word	0x000000cc
  40be40:	000004ff 	.word	0x000004ff
  40be44:	1fbf4690 	.word	0x1fbf4690
  40be48:	000314fc 	.word	0x000314fc
  40be4c:	000311d4 	.word	0x000311d4

0040be50 <cvGetDims>:
  40be50:	e92d4010 	push	{r4, lr}
  40be54:	e24dd008 	sub	sp, sp, #8
  40be58:	e3500000 	cmp	r0, #0
  40be5c:	0a000010 	beq	40bea4 <cvGetDims+0x54>
  40be60:	e1d020b2 	ldrh	r2, [r0, #2]
  40be64:	e59f3150 	ldr	r3, [pc, #336]	; 40bfbc <cvGetDims+0x16c>
  40be68:	e1530802 	cmp	r3, r2, lsl #16
  40be6c:	1a00000c 	bne	40bea4 <cvGetDims+0x54>
  40be70:	e5903018 	ldr	r3, [r0, #24]
  40be74:	e3530000 	cmp	r3, #0
  40be78:	da000009 	ble	40bea4 <cvGetDims+0x54>
  40be7c:	e5903014 	ldr	r3, [r0, #20]
  40be80:	e3530000 	cmp	r3, #0
  40be84:	da000006 	ble	40bea4 <cvGetDims+0x54>
  40be88:	e3510000 	cmp	r1, #0
  40be8c:	0a000043 	beq	40bfa0 <cvGetDims+0x150>
  40be90:	e5813000 	str	r3, [r1]
  40be94:	e5903018 	ldr	r3, [r0, #24]
  40be98:	e5813004 	str	r3, [r1, #4]
  40be9c:	e3a04002 	mov	r4, #2
  40bea0:	ea000041 	b	40bfac <cvGetDims+0x15c>
  40bea4:	e3500000 	cmp	r0, #0
  40bea8:	0a00000d 	beq	40bee4 <cvGetDims+0x94>
  40beac:	e5903000 	ldr	r3, [r0]
  40beb0:	e3530070 	cmp	r3, #112	; 0x70
  40beb4:	1a00000a 	bne	40bee4 <cvGetDims+0x94>
  40beb8:	e5903044 	ldr	r3, [r0, #68]	; 0x44
  40bebc:	e3530000 	cmp	r3, #0
  40bec0:	0a000007 	beq	40bee4 <cvGetDims+0x94>
  40bec4:	e3510000 	cmp	r1, #0
  40bec8:	0a000036 	beq	40bfa8 <cvGetDims+0x158>
  40becc:	e590302c 	ldr	r3, [r0, #44]	; 0x2c
  40bed0:	e5813000 	str	r3, [r1]
  40bed4:	e5903028 	ldr	r3, [r0, #40]	; 0x28
  40bed8:	e5813004 	str	r3, [r1, #4]
  40bedc:	e3a04002 	mov	r4, #2
  40bee0:	ea000031 	b	40bfac <cvGetDims+0x15c>
  40bee4:	e3500000 	cmp	r0, #0
  40bee8:	0a000010 	beq	40bf30 <cvGetDims+0xe0>
  40beec:	e1d020b2 	ldrh	r2, [r0, #2]
  40bef0:	e59f30c8 	ldr	r3, [pc, #200]	; 40bfc0 <cvGetDims+0x170>
  40bef4:	e1530802 	cmp	r3, r2, lsl #16
  40bef8:	1a00000c 	bne	40bf30 <cvGetDims+0xe0>
  40befc:	e5904004 	ldr	r4, [r0, #4]
  40bf00:	e3510000 	cmp	r1, #0
  40bf04:	1a000005 	bne	40bf20 <cvGetDims+0xd0>
  40bf08:	ea000027 	b	40bfac <cvGetDims+0x15c>
  40bf0c:	e0802183 	add	r2, r0, r3, lsl #3
  40bf10:	e5922014 	ldr	r2, [r2, #20]
  40bf14:	e7812103 	str	r2, [r1, r3, lsl #2]
  40bf18:	e2833001 	add	r3, r3, #1
  40bf1c:	ea000000 	b	40bf24 <cvGetDims+0xd4>
  40bf20:	e3a03000 	mov	r3, #0
  40bf24:	e1530004 	cmp	r3, r4
  40bf28:	bafffff7 	blt	40bf0c <cvGetDims+0xbc>
  40bf2c:	ea00001e 	b	40bfac <cvGetDims+0x15c>
  40bf30:	e1a03000 	mov	r3, r0
  40bf34:	e1a00001 	mov	r0, r1
  40bf38:	e3530000 	cmp	r3, #0
  40bf3c:	0a00000a 	beq	40bf6c <cvGetDims+0x11c>
  40bf40:	e1d310b2 	ldrh	r1, [r3, #2]
  40bf44:	e59f2078 	ldr	r2, [pc, #120]	; 40bfc4 <cvGetDims+0x174>
  40bf48:	e1520801 	cmp	r2, r1, lsl #16
  40bf4c:	1a000006 	bne	40bf6c <cvGetDims+0x11c>
  40bf50:	e5934004 	ldr	r4, [r3, #4]
  40bf54:	e3500000 	cmp	r0, #0
  40bf58:	0a000013 	beq	40bfac <cvGetDims+0x15c>
  40bf5c:	e2831024 	add	r1, r3, #36	; 0x24
  40bf60:	e1a02104 	lsl	r2, r4, #2
  40bf64:	fa00a3db 	blx	434ed8 <memcpy>
  40bf68:	ea00000f 	b	40bfac <cvGetDims+0x15c>
  40bf6c:	e59f3054 	ldr	r3, [pc, #84]	; 40bfc8 <cvGetDims+0x178>
  40bf70:	e58d3000 	str	r3, [sp]
  40bf74:	e3e00004 	mvn	r0, #4
  40bf78:	e59f104c 	ldr	r1, [pc, #76]	; 40bfcc <cvGetDims+0x17c>
  40bf7c:	e08f1001 	add	r1, pc, r1
  40bf80:	e2811f5a 	add	r1, r1, #360	; 0x168
  40bf84:	e59f2044 	ldr	r2, [pc, #68]	; 40bfd0 <cvGetDims+0x180>
  40bf88:	e08f2002 	add	r2, pc, r2
  40bf8c:	e59f3040 	ldr	r3, [pc, #64]	; 40bfd4 <cvGetDims+0x184>
  40bf90:	e08f3003 	add	r3, pc, r3
  40bf94:	eb001ac3 	bl	412aa8 <cvError>
  40bf98:	e3e04000 	mvn	r4, #0
  40bf9c:	ea000002 	b	40bfac <cvGetDims+0x15c>
  40bfa0:	e3a04002 	mov	r4, #2
  40bfa4:	ea000000 	b	40bfac <cvGetDims+0x15c>
  40bfa8:	e3a04002 	mov	r4, #2
  40bfac:	e1a00004 	mov	r0, r4
  40bfb0:	e28dd008 	add	sp, sp, #8
  40bfb4:	e8bd4010 	pop	{r4, lr}
  40bfb8:	e12fff1e 	bx	lr
  40bfbc:	42420000 	.word	0x42420000
  40bfc0:	42430000 	.word	0x42430000
  40bfc4:	42440000 	.word	0x42440000
  40bfc8:	0000053c 	.word	0x0000053c
  40bfcc:	1fbf4514 	.word	0x1fbf4514
  40bfd0:	00031380 	.word	0x00031380
  40bfd4:	00031058 	.word	0x00031058

0040bfd8 <cvGetDimSize>:
  40bfd8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40bfdc:	e24dd00c 	sub	sp, sp, #12
  40bfe0:	e2503000 	subs	r3, r0, #0
  40bfe4:	0a000020 	beq	40c06c <cvGetDimSize+0x94>
  40bfe8:	e1d300b2 	ldrh	r0, [r3, #2]
  40bfec:	e59f2214 	ldr	r2, [pc, #532]	; 40c208 <cvGetDimSize+0x230>
  40bff0:	e1520800 	cmp	r2, r0, lsl #16
  40bff4:	1a00001c 	bne	40c06c <cvGetDimSize+0x94>
  40bff8:	e5930018 	ldr	r0, [r3, #24]
  40bffc:	e3500000 	cmp	r0, #0
  40c000:	da000019 	ble	40c06c <cvGetDimSize+0x94>
  40c004:	e5932014 	ldr	r2, [r3, #20]
  40c008:	e3520000 	cmp	r2, #0
  40c00c:	da000016 	ble	40c06c <cvGetDimSize+0x94>
  40c010:	e593c010 	ldr	ip, [r3, #16]
  40c014:	e35c0000 	cmp	ip, #0
  40c018:	0a000013 	beq	40c06c <cvGetDimSize+0x94>
  40c01c:	e3510000 	cmp	r1, #0
  40c020:	0a000002 	beq	40c030 <cvGetDimSize+0x58>
  40c024:	e3510001 	cmp	r1, #1
  40c028:	0a000073 	beq	40c1fc <cvGetDimSize+0x224>
  40c02c:	ea000001 	b	40c038 <cvGetDimSize+0x60>
  40c030:	e1a00002 	mov	r0, r2
  40c034:	ea000070 	b	40c1fc <cvGetDimSize+0x224>
  40c038:	e59f31cc 	ldr	r3, [pc, #460]	; 40c20c <cvGetDimSize+0x234>
  40c03c:	e58d3000 	str	r3, [sp]
  40c040:	e3e000d2 	mvn	r0, #210	; 0xd2
  40c044:	e59f11c4 	ldr	r1, [pc, #452]	; 40c210 <cvGetDimSize+0x238>
  40c048:	e08f1001 	add	r1, pc, r1
  40c04c:	e2811f5d 	add	r1, r1, #372	; 0x174
  40c050:	e59f21bc 	ldr	r2, [pc, #444]	; 40c214 <cvGetDimSize+0x23c>
  40c054:	e08f2002 	add	r2, pc, r2
  40c058:	e59f31b8 	ldr	r3, [pc, #440]	; 40c218 <cvGetDimSize+0x240>
  40c05c:	e08f3003 	add	r3, pc, r3
  40c060:	eb001a90 	bl	412aa8 <cvError>
  40c064:	e3e00000 	mvn	r0, #0
  40c068:	ea000063 	b	40c1fc <cvGetDimSize+0x224>
  40c06c:	e3530000 	cmp	r3, #0
  40c070:	0a000023 	beq	40c104 <cvGetDimSize+0x12c>
  40c074:	e5932000 	ldr	r2, [r3]
  40c078:	e3520070 	cmp	r2, #112	; 0x70
  40c07c:	1a000020 	bne	40c104 <cvGetDimSize+0x12c>
  40c080:	e5932044 	ldr	r2, [r3, #68]	; 0x44
  40c084:	e3520000 	cmp	r2, #0
  40c088:	0a00001d 	beq	40c104 <cvGetDimSize+0x12c>
  40c08c:	e3510000 	cmp	r1, #0
  40c090:	0a000002 	beq	40c0a0 <cvGetDimSize+0xc8>
  40c094:	e3510001 	cmp	r1, #1
  40c098:	0a000006 	beq	40c0b8 <cvGetDimSize+0xe0>
  40c09c:	ea00000b 	b	40c0d0 <cvGetDimSize+0xf8>
  40c0a0:	e5932030 	ldr	r2, [r3, #48]	; 0x30
  40c0a4:	e3520000 	cmp	r2, #0
  40c0a8:	0593002c 	ldreq	r0, [r3, #44]	; 0x2c
  40c0ac:	0a000052 	beq	40c1fc <cvGetDimSize+0x224>
  40c0b0:	e5920010 	ldr	r0, [r2, #16]
  40c0b4:	ea000050 	b	40c1fc <cvGetDimSize+0x224>
  40c0b8:	e5932030 	ldr	r2, [r3, #48]	; 0x30
  40c0bc:	e3520000 	cmp	r2, #0
  40c0c0:	05930028 	ldreq	r0, [r3, #40]	; 0x28
  40c0c4:	0a00004c 	beq	40c1fc <cvGetDimSize+0x224>
  40c0c8:	e592000c 	ldr	r0, [r2, #12]
  40c0cc:	ea00004a 	b	40c1fc <cvGetDimSize+0x224>
  40c0d0:	e59f3144 	ldr	r3, [pc, #324]	; 40c21c <cvGetDimSize+0x244>
  40c0d4:	e58d3000 	str	r3, [sp]
  40c0d8:	e3e000d2 	mvn	r0, #210	; 0xd2
  40c0dc:	e59f113c 	ldr	r1, [pc, #316]	; 40c220 <cvGetDimSize+0x248>
  40c0e0:	e08f1001 	add	r1, pc, r1
  40c0e4:	e2811f5d 	add	r1, r1, #372	; 0x174
  40c0e8:	e59f2134 	ldr	r2, [pc, #308]	; 40c224 <cvGetDimSize+0x24c>
  40c0ec:	e08f2002 	add	r2, pc, r2
  40c0f0:	e59f3130 	ldr	r3, [pc, #304]	; 40c228 <cvGetDimSize+0x250>
  40c0f4:	e08f3003 	add	r3, pc, r3
  40c0f8:	eb001a6a 	bl	412aa8 <cvError>
  40c0fc:	e3e00000 	mvn	r0, #0
  40c100:	ea00003d 	b	40c1fc <cvGetDimSize+0x224>
  40c104:	e3530000 	cmp	r3, #0
  40c108:	0a000016 	beq	40c168 <cvGetDimSize+0x190>
  40c10c:	e1d300b2 	ldrh	r0, [r3, #2]
  40c110:	e59f2114 	ldr	r2, [pc, #276]	; 40c22c <cvGetDimSize+0x254>
  40c114:	e1520800 	cmp	r2, r0, lsl #16
  40c118:	1a000012 	bne	40c168 <cvGetDimSize+0x190>
  40c11c:	e5932004 	ldr	r2, [r3, #4]
  40c120:	e1510002 	cmp	r1, r2
  40c124:	3a00000c 	bcc	40c15c <cvGetDimSize+0x184>
  40c128:	e59f3100 	ldr	r3, [pc, #256]	; 40c230 <cvGetDimSize+0x258>
  40c12c:	e58d3000 	str	r3, [sp]
  40c130:	e3e000d2 	mvn	r0, #210	; 0xd2
  40c134:	e59f10f8 	ldr	r1, [pc, #248]	; 40c234 <cvGetDimSize+0x25c>
  40c138:	e08f1001 	add	r1, pc, r1
  40c13c:	e2811f5d 	add	r1, r1, #372	; 0x174
  40c140:	e59f20f0 	ldr	r2, [pc, #240]	; 40c238 <cvGetDimSize+0x260>
  40c144:	e08f2002 	add	r2, pc, r2
  40c148:	e59f30ec 	ldr	r3, [pc, #236]	; 40c23c <cvGetDimSize+0x264>
  40c14c:	e08f3003 	add	r3, pc, r3
  40c150:	eb001a54 	bl	412aa8 <cvError>
  40c154:	e3e00000 	mvn	r0, #0
  40c158:	ea000027 	b	40c1fc <cvGetDimSize+0x224>
  40c15c:	e0833181 	add	r3, r3, r1, lsl #3
  40c160:	e5930014 	ldr	r0, [r3, #20]
  40c164:	ea000024 	b	40c1fc <cvGetDimSize+0x224>
  40c168:	e3530000 	cmp	r3, #0
  40c16c:	0a000016 	beq	40c1cc <cvGetDimSize+0x1f4>
  40c170:	e1d300b2 	ldrh	r0, [r3, #2]
  40c174:	e59f20c4 	ldr	r2, [pc, #196]	; 40c240 <cvGetDimSize+0x268>
  40c178:	e1520800 	cmp	r2, r0, lsl #16
  40c17c:	1a000012 	bne	40c1cc <cvGetDimSize+0x1f4>
  40c180:	e5932004 	ldr	r2, [r3, #4]
  40c184:	e1510002 	cmp	r1, r2
  40c188:	3a00000c 	bcc	40c1c0 <cvGetDimSize+0x1e8>
  40c18c:	e59f30b0 	ldr	r3, [pc, #176]	; 40c244 <cvGetDimSize+0x26c>
  40c190:	e58d3000 	str	r3, [sp]
  40c194:	e3e000d2 	mvn	r0, #210	; 0xd2
  40c198:	e59f10a8 	ldr	r1, [pc, #168]	; 40c248 <cvGetDimSize+0x270>
  40c19c:	e08f1001 	add	r1, pc, r1
  40c1a0:	e2811f5d 	add	r1, r1, #372	; 0x174
  40c1a4:	e59f20a0 	ldr	r2, [pc, #160]	; 40c24c <cvGetDimSize+0x274>
  40c1a8:	e08f2002 	add	r2, pc, r2
  40c1ac:	e59f309c 	ldr	r3, [pc, #156]	; 40c250 <cvGetDimSize+0x278>
  40c1b0:	e08f3003 	add	r3, pc, r3
  40c1b4:	eb001a3b 	bl	412aa8 <cvError>
  40c1b8:	e3e00000 	mvn	r0, #0
  40c1bc:	ea00000e 	b	40c1fc <cvGetDimSize+0x224>
  40c1c0:	e0833101 	add	r3, r3, r1, lsl #2
  40c1c4:	e5930024 	ldr	r0, [r3, #36]	; 0x24
  40c1c8:	ea00000b 	b	40c1fc <cvGetDimSize+0x224>
  40c1cc:	e59f3080 	ldr	r3, [pc, #128]	; 40c254 <cvGetDimSize+0x27c>
  40c1d0:	e58d3000 	str	r3, [sp]
  40c1d4:	e3e00004 	mvn	r0, #4
  40c1d8:	e59f1078 	ldr	r1, [pc, #120]	; 40c258 <cvGetDimSize+0x280>
  40c1dc:	e08f1001 	add	r1, pc, r1
  40c1e0:	e2811f5d 	add	r1, r1, #372	; 0x174
  40c1e4:	e59f2070 	ldr	r2, [pc, #112]	; 40c25c <cvGetDimSize+0x284>
  40c1e8:	e08f2002 	add	r2, pc, r2
  40c1ec:	e59f306c 	ldr	r3, [pc, #108]	; 40c260 <cvGetDimSize+0x288>
  40c1f0:	e08f3003 	add	r3, pc, r3
  40c1f4:	eb001a2b 	bl	412aa8 <cvError>
  40c1f8:	e3e00000 	mvn	r0, #0
  40c1fc:	e28dd00c 	add	sp, sp, #12
  40c200:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40c204:	e12fff1e 	bx	lr
  40c208:	42420000 	.word	0x42420000
  40c20c:	0000055b 	.word	0x0000055b
  40c210:	1fbf4448 	.word	0x1fbf4448
  40c214:	00031340 	.word	0x00031340
  40c218:	00030f8c 	.word	0x00030f8c
  40c21c:	0000056b 	.word	0x0000056b
  40c220:	1fbf43b0 	.word	0x1fbf43b0
  40c224:	000312a8 	.word	0x000312a8
  40c228:	00030ef4 	.word	0x00030ef4
  40c22c:	42430000 	.word	0x42430000
  40c230:	00000573 	.word	0x00000573
  40c234:	1fbf4358 	.word	0x1fbf4358
  40c238:	00031250 	.word	0x00031250
  40c23c:	00030e9c 	.word	0x00030e9c
  40c240:	42440000 	.word	0x42440000
  40c244:	0000057c 	.word	0x0000057c
  40c248:	1fbf42f4 	.word	0x1fbf42f4
  40c24c:	000311ec 	.word	0x000311ec
  40c250:	00030e38 	.word	0x00030e38
  40c254:	00000582 	.word	0x00000582
  40c258:	1fbf42b4 	.word	0x1fbf42b4
  40c25c:	00031120 	.word	0x00031120
  40c260:	00030df8 	.word	0x00030df8

0040c264 <cvGetSize>:
  40c264:	e92d4010 	push	{r4, lr}
  40c268:	e24dd008 	sub	sp, sp, #8
  40c26c:	e1a04000 	mov	r4, r0
  40c270:	e3a03000 	mov	r3, #0
  40c274:	e5803000 	str	r3, [r0]
  40c278:	e5803004 	str	r3, [r0, #4]
  40c27c:	e3510000 	cmp	r1, #0
  40c280:	0a00000b 	beq	40c2b4 <cvGetSize+0x50>
  40c284:	e1d120b2 	ldrh	r2, [r1, #2]
  40c288:	e59f30a8 	ldr	r3, [pc, #168]	; 40c338 <cvGetSize+0xd4>
  40c28c:	e1530802 	cmp	r3, r2, lsl #16
  40c290:	1a000007 	bne	40c2b4 <cvGetSize+0x50>
  40c294:	e5913018 	ldr	r3, [r1, #24]
  40c298:	e3530000 	cmp	r3, #0
  40c29c:	da000004 	ble	40c2b4 <cvGetSize+0x50>
  40c2a0:	e5912014 	ldr	r2, [r1, #20]
  40c2a4:	e3520000 	cmp	r2, #0
  40c2a8:	c5803000 	strgt	r3, [r0]
  40c2ac:	c5802004 	strgt	r2, [r0, #4]
  40c2b0:	ca00001c 	bgt	40c328 <cvGetSize+0xc4>
  40c2b4:	e3510000 	cmp	r1, #0
  40c2b8:	0a00000f 	beq	40c2fc <cvGetSize+0x98>
  40c2bc:	e5913000 	ldr	r3, [r1]
  40c2c0:	e3530070 	cmp	r3, #112	; 0x70
  40c2c4:	1a00000c 	bne	40c2fc <cvGetSize+0x98>
  40c2c8:	e5913030 	ldr	r3, [r1, #48]	; 0x30
  40c2cc:	e3530000 	cmp	r3, #0
  40c2d0:	0a000004 	beq	40c2e8 <cvGetSize+0x84>
  40c2d4:	e593200c 	ldr	r2, [r3, #12]
  40c2d8:	e5842000 	str	r2, [r4]
  40c2dc:	e5933010 	ldr	r3, [r3, #16]
  40c2e0:	e5843004 	str	r3, [r4, #4]
  40c2e4:	ea00000f 	b	40c328 <cvGetSize+0xc4>
  40c2e8:	e5913028 	ldr	r3, [r1, #40]	; 0x28
  40c2ec:	e5843000 	str	r3, [r4]
  40c2f0:	e591302c 	ldr	r3, [r1, #44]	; 0x2c
  40c2f4:	e5843004 	str	r3, [r4, #4]
  40c2f8:	ea00000a 	b	40c328 <cvGetSize+0xc4>
  40c2fc:	e59f3038 	ldr	r3, [pc, #56]	; 40c33c <cvGetSize+0xd8>
  40c300:	e58d3000 	str	r3, [sp]
  40c304:	e3e00004 	mvn	r0, #4
  40c308:	e59f1030 	ldr	r1, [pc, #48]	; 40c340 <cvGetSize+0xdc>
  40c30c:	e08f1001 	add	r1, pc, r1
  40c310:	e2811f61 	add	r1, r1, #388	; 0x184
  40c314:	e59f2028 	ldr	r2, [pc, #40]	; 40c344 <cvGetSize+0xe0>
  40c318:	e08f2002 	add	r2, pc, r2
  40c31c:	e59f3024 	ldr	r3, [pc, #36]	; 40c348 <cvGetSize+0xe4>
  40c320:	e08f3003 	add	r3, pc, r3
  40c324:	eb0019df 	bl	412aa8 <cvError>
  40c328:	e1a00004 	mov	r0, r4
  40c32c:	e28dd008 	add	sp, sp, #8
  40c330:	e8bd4010 	pop	{r4, lr}
  40c334:	e12fff1e 	bx	lr
  40c338:	42420000 	.word	0x42420000
  40c33c:	000005ad 	.word	0x000005ad
  40c340:	1fbf4184 	.word	0x1fbf4184
  40c344:	00031090 	.word	0x00031090
  40c348:	00030cc8 	.word	0x00030cc8

0040c34c <cvScalarToRawData>:
  40c34c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  40c350:	e24dd00c 	sub	sp, sp, #12
  40c354:	e1a08003 	mov	r8, r3
  40c358:	e2023f7e 	and	r3, r2, #504	; 0x1f8
  40c35c:	e1a031c3 	asr	r3, r3, #3
  40c360:	e2837001 	add	r7, r3, #1
  40c364:	e2025007 	and	r5, r2, #7
  40c368:	e3510000 	cmp	r1, #0
  40c36c:	13500000 	cmpne	r0, #0
  40c370:	1a000008 	bne	40c398 <cvScalarToRawData+0x4c>
  40c374:	e59f0394 	ldr	r0, [pc, #916]	; 40c710 <cvScalarToRawData+0x3c4>
  40c378:	e08f0000 	add	r0, pc, r0
  40c37c:	e59f1390 	ldr	r1, [pc, #912]	; 40c714 <cvScalarToRawData+0x3c8>
  40c380:	e59f2390 	ldr	r2, [pc, #912]	; 40c718 <cvScalarToRawData+0x3cc>
  40c384:	e08f2002 	add	r2, pc, r2
  40c388:	e28220f4 	add	r2, r2, #244	; 0xf4
  40c38c:	e59f3388 	ldr	r3, [pc, #904]	; 40c71c <cvScalarToRawData+0x3d0>
  40c390:	e08f3003 	add	r3, pc, r3
  40c394:	fa009e6e 	blx	433d54 <__assert_func>
  40c398:	e1a06000 	mov	r6, r0
  40c39c:	e1a04001 	mov	r4, r1
  40c3a0:	e3530003 	cmp	r3, #3
  40c3a4:	9a00000b 	bls	40c3d8 <cvScalarToRawData+0x8c>
  40c3a8:	e59f3370 	ldr	r3, [pc, #880]	; 40c720 <cvScalarToRawData+0x3d4>
  40c3ac:	e58d3000 	str	r3, [sp]
  40c3b0:	e3e000d2 	mvn	r0, #210	; 0xd2
  40c3b4:	e59f1368 	ldr	r1, [pc, #872]	; 40c724 <cvScalarToRawData+0x3d8>
  40c3b8:	e08f1001 	add	r1, pc, r1
  40c3bc:	e2811e19 	add	r1, r1, #400	; 0x190
  40c3c0:	e59f2360 	ldr	r2, [pc, #864]	; 40c728 <cvScalarToRawData+0x3dc>
  40c3c4:	e08f2002 	add	r2, pc, r2
  40c3c8:	e59f335c 	ldr	r3, [pc, #860]	; 40c72c <cvScalarToRawData+0x3e0>
  40c3cc:	e08f3003 	add	r3, pc, r3
  40c3d0:	eb0019b4 	bl	412aa8 <cvError>
  40c3d4:	ea0000ca 	b	40c704 <cvScalarToRawData+0x3b8>
  40c3d8:	e3550006 	cmp	r5, #6
  40c3dc:	908ff105 	addls	pc, pc, r5, lsl #2
  40c3e0:	ea00008e 	b	40c620 <cvScalarToRawData+0x2d4>
  40c3e4:	ea000017 	b	40c448 <cvScalarToRawData+0xfc>
  40c3e8:	ea00002e 	b	40c4a8 <cvScalarToRawData+0x15c>
  40c3ec:	ea000046 	b	40c50c <cvScalarToRawData+0x1c0>
  40c3f0:	ea00005f 	b	40c574 <cvScalarToRawData+0x228>
  40c3f4:	ea00006d 	b	40c5b0 <cvScalarToRawData+0x264>
  40c3f8:	ea000077 	b	40c5dc <cvScalarToRawData+0x290>
  40c3fc:	ea000082 	b	40c60c <cvScalarToRawData+0x2c0>
  40c400:	e0863189 	add	r3, r6, r9, lsl #3
  40c404:	e8930003 	ldm	r3, {r0, r1}
  40c408:	e3a02000 	mov	r2, #0
  40c40c:	e59f331c 	ldr	r3, [pc, #796]	; 40c730 <cvScalarToRawData+0x3e4>
  40c410:	fa009576 	blx	4319f0 <__adddf3>
  40c414:	fa009517 	blx	431878 <floor>
  40c418:	fa00979a 	blx	432288 <__aeabi_d2iz>
  40c41c:	e3d030ff 	bics	r3, r0, #255	; 0xff
  40c420:	0a000004 	beq	40c438 <cvScalarToRawData+0xec>
  40c424:	e3500000 	cmp	r0, #0
  40c428:	c3a000ff 	movgt	r0, #255	; 0xff
  40c42c:	ca000002 	bgt	40c43c <cvScalarToRawData+0xf0>
  40c430:	e3a00000 	mov	r0, #0
  40c434:	ea000000 	b	40c43c <cvScalarToRawData+0xf0>
  40c438:	e20000ff 	and	r0, r0, #255	; 0xff
  40c43c:	e7c40009 	strb	r0, [r4, r9]
  40c440:	e1a03009 	mov	r3, r9
  40c444:	ea000000 	b	40c44c <cvScalarToRawData+0x100>
  40c448:	e1a03007 	mov	r3, r7
  40c44c:	e2439001 	sub	r9, r3, #1
  40c450:	e3530000 	cmp	r3, #0
  40c454:	1affffe9 	bne	40c400 <cvScalarToRawData+0xb4>
  40c458:	ea000079 	b	40c644 <cvScalarToRawData+0x2f8>
  40c45c:	e0863189 	add	r3, r6, r9, lsl #3
  40c460:	e8930003 	ldm	r3, {r0, r1}
  40c464:	e3a02000 	mov	r2, #0
  40c468:	e59f32c0 	ldr	r3, [pc, #704]	; 40c730 <cvScalarToRawData+0x3e4>
  40c46c:	fa00955f 	blx	4319f0 <__adddf3>
  40c470:	fa009500 	blx	431878 <floor>
  40c474:	fa009783 	blx	432288 <__aeabi_d2iz>
  40c478:	e2803080 	add	r3, r0, #128	; 0x80
  40c47c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  40c480:	0a000004 	beq	40c498 <cvScalarToRawData+0x14c>
  40c484:	e3500000 	cmp	r0, #0
  40c488:	c3a0007f 	movgt	r0, #127	; 0x7f
  40c48c:	ca000002 	bgt	40c49c <cvScalarToRawData+0x150>
  40c490:	e3a00080 	mov	r0, #128	; 0x80
  40c494:	ea000000 	b	40c49c <cvScalarToRawData+0x150>
  40c498:	e20000ff 	and	r0, r0, #255	; 0xff
  40c49c:	e7c40009 	strb	r0, [r4, r9]
  40c4a0:	e1a03009 	mov	r3, r9
  40c4a4:	ea000000 	b	40c4ac <cvScalarToRawData+0x160>
  40c4a8:	e1a03007 	mov	r3, r7
  40c4ac:	e2439001 	sub	r9, r3, #1
  40c4b0:	e3530000 	cmp	r3, #0
  40c4b4:	1affffe8 	bne	40c45c <cvScalarToRawData+0x110>
  40c4b8:	ea000061 	b	40c644 <cvScalarToRawData+0x2f8>
  40c4bc:	e0863189 	add	r3, r6, r9, lsl #3
  40c4c0:	e8930003 	ldm	r3, {r0, r1}
  40c4c4:	e3a02000 	mov	r2, #0
  40c4c8:	e59f3260 	ldr	r3, [pc, #608]	; 40c730 <cvScalarToRawData+0x3e4>
  40c4cc:	fa009547 	blx	4319f0 <__adddf3>
  40c4d0:	fa0094e8 	blx	431878 <floor>
  40c4d4:	fa00976b 	blx	432288 <__aeabi_d2iz>
  40c4d8:	e1a02089 	lsl	r2, r9, #1
  40c4dc:	e1b03820 	lsrs	r3, r0, #16
  40c4e0:	0a000004 	beq	40c4f8 <cvScalarToRawData+0x1ac>
  40c4e4:	e3500000 	cmp	r0, #0
  40c4e8:	c59f3244 	ldrgt	r3, [pc, #580]	; 40c734 <cvScalarToRawData+0x3e8>
  40c4ec:	ca000003 	bgt	40c500 <cvScalarToRawData+0x1b4>
  40c4f0:	e3a03000 	mov	r3, #0
  40c4f4:	ea000001 	b	40c500 <cvScalarToRawData+0x1b4>
  40c4f8:	e1a03800 	lsl	r3, r0, #16
  40c4fc:	e1a03823 	lsr	r3, r3, #16
  40c500:	e18430b2 	strh	r3, [r4, r2]
  40c504:	e1a03009 	mov	r3, r9
  40c508:	ea000000 	b	40c510 <cvScalarToRawData+0x1c4>
  40c50c:	e1a03007 	mov	r3, r7
  40c510:	e2439001 	sub	r9, r3, #1
  40c514:	e3530000 	cmp	r3, #0
  40c518:	1affffe7 	bne	40c4bc <cvScalarToRawData+0x170>
  40c51c:	ea000048 	b	40c644 <cvScalarToRawData+0x2f8>
  40c520:	e0863189 	add	r3, r6, r9, lsl #3
  40c524:	e8930003 	ldm	r3, {r0, r1}
  40c528:	e3a02000 	mov	r2, #0
  40c52c:	e59f31fc 	ldr	r3, [pc, #508]	; 40c730 <cvScalarToRawData+0x3e4>
  40c530:	fa00952e 	blx	4319f0 <__adddf3>
  40c534:	fa0094cf 	blx	431878 <floor>
  40c538:	fa009752 	blx	432288 <__aeabi_d2iz>
  40c53c:	e1a02089 	lsl	r2, r9, #1
  40c540:	e2803902 	add	r3, r0, #32768	; 0x8000
  40c544:	e1b03823 	lsrs	r3, r3, #16
  40c548:	0a000004 	beq	40c560 <cvScalarToRawData+0x214>
  40c54c:	e3500000 	cmp	r0, #0
  40c550:	c59f31e0 	ldrgt	r3, [pc, #480]	; 40c738 <cvScalarToRawData+0x3ec>
  40c554:	ca000003 	bgt	40c568 <cvScalarToRawData+0x21c>
  40c558:	e3a03902 	mov	r3, #32768	; 0x8000
  40c55c:	ea000001 	b	40c568 <cvScalarToRawData+0x21c>
  40c560:	e1a03800 	lsl	r3, r0, #16
  40c564:	e1a03823 	lsr	r3, r3, #16
  40c568:	e18430b2 	strh	r3, [r4, r2]
  40c56c:	e1a03009 	mov	r3, r9
  40c570:	ea000000 	b	40c578 <cvScalarToRawData+0x22c>
  40c574:	e1a03007 	mov	r3, r7
  40c578:	e2439001 	sub	r9, r3, #1
  40c57c:	e3530000 	cmp	r3, #0
  40c580:	1affffe6 	bne	40c520 <cvScalarToRawData+0x1d4>
  40c584:	ea00002e 	b	40c644 <cvScalarToRawData+0x2f8>
  40c588:	e0863189 	add	r3, r6, r9, lsl #3
  40c58c:	e8930003 	ldm	r3, {r0, r1}
  40c590:	e3a02000 	mov	r2, #0
  40c594:	e59f3194 	ldr	r3, [pc, #404]	; 40c730 <cvScalarToRawData+0x3e4>
  40c598:	fa009514 	blx	4319f0 <__adddf3>
  40c59c:	fa0094b5 	blx	431878 <floor>
  40c5a0:	fa009738 	blx	432288 <__aeabi_d2iz>
  40c5a4:	e7840109 	str	r0, [r4, r9, lsl #2]
  40c5a8:	e1a03009 	mov	r3, r9
  40c5ac:	ea000000 	b	40c5b4 <cvScalarToRawData+0x268>
  40c5b0:	e1a03007 	mov	r3, r7
  40c5b4:	e2439001 	sub	r9, r3, #1
  40c5b8:	e3530000 	cmp	r3, #0
  40c5bc:	1afffff1 	bne	40c588 <cvScalarToRawData+0x23c>
  40c5c0:	ea00001f 	b	40c644 <cvScalarToRawData+0x2f8>
  40c5c4:	e0863189 	add	r3, r6, r9, lsl #3
  40c5c8:	e8930003 	ldm	r3, {r0, r1}
  40c5cc:	fa009741 	blx	4322d8 <__aeabi_d2f>
  40c5d0:	e7840109 	str	r0, [r4, r9, lsl #2]
  40c5d4:	e1a03009 	mov	r3, r9
  40c5d8:	ea000000 	b	40c5e0 <cvScalarToRawData+0x294>
  40c5dc:	e1a03007 	mov	r3, r7
  40c5e0:	e2439001 	sub	r9, r3, #1
  40c5e4:	e3530000 	cmp	r3, #0
  40c5e8:	1afffff5 	bne	40c5c4 <cvScalarToRawData+0x278>
  40c5ec:	ea000014 	b	40c644 <cvScalarToRawData+0x2f8>
  40c5f0:	e1a03182 	lsl	r3, r2, #3
  40c5f4:	e084c003 	add	ip, r4, r3
  40c5f8:	e0863003 	add	r3, r6, r3
  40c5fc:	e8930003 	ldm	r3, {r0, r1}
  40c600:	e88c0003 	stm	ip, {r0, r1}
  40c604:	e1a03002 	mov	r3, r2
  40c608:	ea000000 	b	40c610 <cvScalarToRawData+0x2c4>
  40c60c:	e1a03007 	mov	r3, r7
  40c610:	e2432001 	sub	r2, r3, #1
  40c614:	e3530000 	cmp	r3, #0
  40c618:	1afffff4 	bne	40c5f0 <cvScalarToRawData+0x2a4>
  40c61c:	ea000008 	b	40c644 <cvScalarToRawData+0x2f8>
  40c620:	e59f0114 	ldr	r0, [pc, #276]	; 40c73c <cvScalarToRawData+0x3f0>
  40c624:	e08f0000 	add	r0, pc, r0
  40c628:	e59f1110 	ldr	r1, [pc, #272]	; 40c740 <cvScalarToRawData+0x3f4>
  40c62c:	e59f2110 	ldr	r2, [pc, #272]	; 40c744 <cvScalarToRawData+0x3f8>
  40c630:	e08f2002 	add	r2, pc, r2
  40c634:	e28220f4 	add	r2, r2, #244	; 0xf4
  40c638:	e59f3108 	ldr	r3, [pc, #264]	; 40c748 <cvScalarToRawData+0x3fc>
  40c63c:	e08f3003 	add	r3, pc, r3
  40c640:	fa009dc3 	blx	433d54 <__assert_func>
  40c644:	e3580000 	cmp	r8, #0
  40c648:	0a00002d 	beq	40c704 <cvScalarToRawData+0x3b8>
  40c64c:	e1a0e085 	lsl	lr, r5, #1
  40c650:	e59f30f4 	ldr	r3, [pc, #244]	; 40c74c <cvScalarToRawData+0x400>
  40c654:	e1a0ee33 	lsr	lr, r3, lr
  40c658:	e20ee003 	and	lr, lr, #3
  40c65c:	e1a0ee17 	lsl	lr, r7, lr
  40c660:	e1a0c105 	lsl	ip, r5, #2
  40c664:	e59f30e4 	ldr	r3, [pc, #228]	; 40c750 <cvScalarToRawData+0x404>
  40c668:	e1a0cc33 	lsr	ip, r3, ip
  40c66c:	e20cc00f 	and	ip, ip, #15
  40c670:	e08cc08c 	add	ip, ip, ip, lsl #1
  40c674:	e1a0c10c 	lsl	ip, ip, #2
  40c678:	e06ec00c 	rsb	ip, lr, ip
  40c67c:	e1a0200e 	mov	r2, lr
  40c680:	e084100c 	add	r1, r4, ip
  40c684:	e31e0003 	tst	lr, #3
  40c688:	1a000018 	bne	40c6f0 <cvScalarToRawData+0x3a4>
  40c68c:	e3140003 	tst	r4, #3
  40c690:	1a000001 	bne	40c69c <cvScalarToRawData+0x350>
  40c694:	e3110003 	tst	r1, #3
  40c698:	0a00000c 	beq	40c6d0 <cvScalarToRawData+0x384>
  40c69c:	e59f00b0 	ldr	r0, [pc, #176]	; 40c754 <cvScalarToRawData+0x408>
  40c6a0:	e08f0000 	add	r0, pc, r0
  40c6a4:	e59f10ac 	ldr	r1, [pc, #172]	; 40c758 <cvScalarToRawData+0x40c>
  40c6a8:	e59f20ac 	ldr	r2, [pc, #172]	; 40c75c <cvScalarToRawData+0x410>
  40c6ac:	e08f2002 	add	r2, pc, r2
  40c6b0:	e28220f4 	add	r2, r2, #244	; 0xf4
  40c6b4:	e59f30a4 	ldr	r3, [pc, #164]	; 40c760 <cvScalarToRawData+0x414>
  40c6b8:	e08f3003 	add	r3, pc, r3
  40c6bc:	fa009da4 	blx	433d54 <__assert_func>
  40c6c0:	e7940003 	ldr	r0, [r4, r3]
  40c6c4:	e7810003 	str	r0, [r1, r3]
  40c6c8:	e2833004 	add	r3, r3, #4
  40c6cc:	ea000000 	b	40c6d4 <cvScalarToRawData+0x388>
  40c6d0:	e3a03000 	mov	r3, #0
  40c6d4:	e1530002 	cmp	r3, r2
  40c6d8:	3afffff8 	bcc	40c6c0 <cvScalarToRawData+0x374>
  40c6dc:	ea000006 	b	40c6fc <cvScalarToRawData+0x3b0>
  40c6e0:	e7d40003 	ldrb	r0, [r4, r3]
  40c6e4:	e7c10003 	strb	r0, [r1, r3]
  40c6e8:	e2833001 	add	r3, r3, #1
  40c6ec:	ea000000 	b	40c6f4 <cvScalarToRawData+0x3a8>
  40c6f0:	e3a03000 	mov	r3, #0
  40c6f4:	e1530002 	cmp	r3, r2
  40c6f8:	3afffff8 	bcc	40c6e0 <cvScalarToRawData+0x394>
  40c6fc:	e15c000e 	cmp	ip, lr
  40c700:	caffffdc 	bgt	40c678 <cvScalarToRawData+0x32c>
  40c704:	e28dd00c 	add	sp, sp, #12
  40c708:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  40c70c:	e12fff1e 	bx	lr
  40c710:	00030c70 	.word	0x00030c70
  40c714:	000006aa 	.word	0x000006aa
  40c718:	00030a78 	.word	0x00030a78
  40c71c:	0003103c 	.word	0x0003103c
  40c720:	000006ac 	.word	0x000006ac
  40c724:	1fbf40d8 	.word	0x1fbf40d8
  40c728:	00031018 	.word	0x00031018
  40c72c:	00030c1c 	.word	0x00030c1c
  40c730:	3fe00000 	.word	0x3fe00000
  40c734:	0000ffff 	.word	0x0000ffff
  40c738:	00007fff 	.word	0x00007fff
  40c73c:	000309c4 	.word	0x000309c4
  40c740:	000006d9 	.word	0x000006d9
  40c744:	000307cc 	.word	0x000307cc
  40c748:	00033460 	.word	0x00033460
  40c74c:	0000ba50 	.word	0x0000ba50
  40c750:	48442211 	.word	0x48442211
  40c754:	00030948 	.word	0x00030948
  40c758:	000006e5 	.word	0x000006e5
  40c75c:	00030750 	.word	0x00030750
  40c760:	00030bd0 	.word	0x00030bd0

0040c764 <cvRawDataToScalar>:
  40c764:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  40c768:	e24dd008 	sub	sp, sp, #8
  40c76c:	e1a05001 	mov	r5, r1
  40c770:	e59f8210 	ldr	r8, [pc, #528]	; 40c988 <cvRawDataToScalar+0x224>
  40c774:	e08f8008 	add	r8, pc, r8
  40c778:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  40c77c:	e1a031c3 	asr	r3, r3, #3
  40c780:	e2834001 	add	r4, r3, #1
  40c784:	e3500000 	cmp	r0, #0
  40c788:	13520000 	cmpne	r2, #0
  40c78c:	1a000008 	bne	40c7b4 <cvRawDataToScalar+0x50>
  40c790:	e59f01f4 	ldr	r0, [pc, #500]	; 40c98c <cvRawDataToScalar+0x228>
  40c794:	e08f0000 	add	r0, pc, r0
  40c798:	e59f11f0 	ldr	r1, [pc, #496]	; 40c990 <cvRawDataToScalar+0x22c>
  40c79c:	e59f21f0 	ldr	r2, [pc, #496]	; 40c994 <cvRawDataToScalar+0x230>
  40c7a0:	e08f2002 	add	r2, pc, r2
  40c7a4:	e2822e13 	add	r2, r2, #304	; 0x130
  40c7a8:	e59f31e8 	ldr	r3, [pc, #488]	; 40c998 <cvRawDataToScalar+0x234>
  40c7ac:	e08f3003 	add	r3, pc, r3
  40c7b0:	fa009d67 	blx	433d54 <__assert_func>
  40c7b4:	e1a06002 	mov	r6, r2
  40c7b8:	e1a07000 	mov	r7, r0
  40c7bc:	e3530003 	cmp	r3, #3
  40c7c0:	9a00000b 	bls	40c7f4 <cvRawDataToScalar+0x90>
  40c7c4:	e59f31d0 	ldr	r3, [pc, #464]	; 40c99c <cvRawDataToScalar+0x238>
  40c7c8:	e58d3000 	str	r3, [sp]
  40c7cc:	e3e000d2 	mvn	r0, #210	; 0xd2
  40c7d0:	e59f11c8 	ldr	r1, [pc, #456]	; 40c9a0 <cvRawDataToScalar+0x23c>
  40c7d4:	e08f1001 	add	r1, pc, r1
  40c7d8:	e2811f69 	add	r1, r1, #420	; 0x1a4
  40c7dc:	e59f21c0 	ldr	r2, [pc, #448]	; 40c9a4 <cvRawDataToScalar+0x240>
  40c7e0:	e08f2002 	add	r2, pc, r2
  40c7e4:	e59f31bc 	ldr	r3, [pc, #444]	; 40c9a8 <cvRawDataToScalar+0x244>
  40c7e8:	e08f3003 	add	r3, pc, r3
  40c7ec:	eb0018ad 	bl	412aa8 <cvError>
  40c7f0:	ea000061 	b	40c97c <cvRawDataToScalar+0x218>
  40c7f4:	e1a00002 	mov	r0, r2
  40c7f8:	e3a01000 	mov	r1, #0
  40c7fc:	e3a02020 	mov	r2, #32
  40c800:	fa00a233 	blx	4350d4 <memset>
  40c804:	e2055007 	and	r5, r5, #7
  40c808:	e3550006 	cmp	r5, #6
  40c80c:	908ff105 	addls	pc, pc, r5, lsl #2
  40c810:	ea000050 	b	40c958 <cvRawDataToScalar+0x1f4>
  40c814:	ea00000e 	b	40c854 <cvRawDataToScalar+0xf0>
  40c818:	ea00001a 	b	40c888 <cvRawDataToScalar+0x124>
  40c81c:	ea000023 	b	40c8b0 <cvRawDataToScalar+0x14c>
  40c820:	ea00002c 	b	40c8d8 <cvRawDataToScalar+0x174>
  40c824:	ea000034 	b	40c8fc <cvRawDataToScalar+0x198>
  40c828:	ea00003c 	b	40c920 <cvRawDataToScalar+0x1bc>
  40c82c:	ea000045 	b	40c948 <cvRawDataToScalar+0x1e4>
  40c830:	e7d73005 	ldrb	r3, [r7, r5]
  40c834:	e2833080 	add	r3, r3, #128	; 0x80
  40c838:	e59f216c 	ldr	r2, [pc, #364]	; 40c9ac <cvRawDataToScalar+0x248>
  40c83c:	e7982002 	ldr	r2, [r8, r2]
  40c840:	e0864185 	add	r4, r6, r5, lsl #3
  40c844:	e7920103 	ldr	r0, [r2, r3, lsl #2]
  40c848:	fa009517 	blx	431cac <__aeabi_f2d>
  40c84c:	e8840003 	stm	r4, {r0, r1}
  40c850:	e1a04005 	mov	r4, r5
  40c854:	e2445001 	sub	r5, r4, #1
  40c858:	e3540000 	cmp	r4, #0
  40c85c:	1afffff3 	bne	40c830 <cvRawDataToScalar+0xcc>
  40c860:	ea000045 	b	40c97c <cvRawDataToScalar+0x218>
  40c864:	e7d73005 	ldrb	r3, [r7, r5]
  40c868:	e2833080 	add	r3, r3, #128	; 0x80
  40c86c:	e59f2138 	ldr	r2, [pc, #312]	; 40c9ac <cvRawDataToScalar+0x248>
  40c870:	e7982002 	ldr	r2, [r8, r2]
  40c874:	e0864185 	add	r4, r6, r5, lsl #3
  40c878:	e7920103 	ldr	r0, [r2, r3, lsl #2]
  40c87c:	fa00950a 	blx	431cac <__aeabi_f2d>
  40c880:	e8840003 	stm	r4, {r0, r1}
  40c884:	e1a04005 	mov	r4, r5
  40c888:	e2445001 	sub	r5, r4, #1
  40c88c:	e3540000 	cmp	r4, #0
  40c890:	1afffff3 	bne	40c864 <cvRawDataToScalar+0x100>
  40c894:	ea000038 	b	40c97c <cvRawDataToScalar+0x218>
  40c898:	e1a03085 	lsl	r3, r5, #1
  40c89c:	e0864185 	add	r4, r6, r5, lsl #3
  40c8a0:	e19700b3 	ldrh	r0, [r7, r3]
  40c8a4:	fa0094ef 	blx	431c68 <__aeabi_ui2d>
  40c8a8:	e8840003 	stm	r4, {r0, r1}
  40c8ac:	e1a04005 	mov	r4, r5
  40c8b0:	e2445001 	sub	r5, r4, #1
  40c8b4:	e3540000 	cmp	r4, #0
  40c8b8:	1afffff6 	bne	40c898 <cvRawDataToScalar+0x134>
  40c8bc:	ea00002e 	b	40c97c <cvRawDataToScalar+0x218>
  40c8c0:	e1a03085 	lsl	r3, r5, #1
  40c8c4:	e0864185 	add	r4, r6, r5, lsl #3
  40c8c8:	e19700f3 	ldrsh	r0, [r7, r3]
  40c8cc:	fa0094ed 	blx	431c88 <__aeabi_i2d>
  40c8d0:	e8840003 	stm	r4, {r0, r1}
  40c8d4:	e1a04005 	mov	r4, r5
  40c8d8:	e2445001 	sub	r5, r4, #1
  40c8dc:	e3540000 	cmp	r4, #0
  40c8e0:	1afffff6 	bne	40c8c0 <cvRawDataToScalar+0x15c>
  40c8e4:	ea000024 	b	40c97c <cvRawDataToScalar+0x218>
  40c8e8:	e0864185 	add	r4, r6, r5, lsl #3
  40c8ec:	e7970105 	ldr	r0, [r7, r5, lsl #2]
  40c8f0:	fa0094e4 	blx	431c88 <__aeabi_i2d>
  40c8f4:	e8840003 	stm	r4, {r0, r1}
  40c8f8:	e1a04005 	mov	r4, r5
  40c8fc:	e2445001 	sub	r5, r4, #1
  40c900:	e3540000 	cmp	r4, #0
  40c904:	1afffff7 	bne	40c8e8 <cvRawDataToScalar+0x184>
  40c908:	ea00001b 	b	40c97c <cvRawDataToScalar+0x218>
  40c90c:	e0864185 	add	r4, r6, r5, lsl #3
  40c910:	e7970105 	ldr	r0, [r7, r5, lsl #2]
  40c914:	fa0094e4 	blx	431cac <__aeabi_f2d>
  40c918:	e8840003 	stm	r4, {r0, r1}
  40c91c:	e1a04005 	mov	r4, r5
  40c920:	e2445001 	sub	r5, r4, #1
  40c924:	e3540000 	cmp	r4, #0
  40c928:	1afffff7 	bne	40c90c <cvRawDataToScalar+0x1a8>
  40c92c:	ea000012 	b	40c97c <cvRawDataToScalar+0x218>
  40c930:	e1a03182 	lsl	r3, r2, #3
  40c934:	e0871003 	add	r1, r7, r3
  40c938:	e8910003 	ldm	r1, {r0, r1}
  40c93c:	e0863003 	add	r3, r6, r3
  40c940:	e8830003 	stm	r3, {r0, r1}
  40c944:	e1a04002 	mov	r4, r2
  40c948:	e2442001 	sub	r2, r4, #1
  40c94c:	e3540000 	cmp	r4, #0
  40c950:	1afffff6 	bne	40c930 <cvRawDataToScalar+0x1cc>
  40c954:	ea000008 	b	40c97c <cvRawDataToScalar+0x218>
  40c958:	e59f0050 	ldr	r0, [pc, #80]	; 40c9b0 <cvRawDataToScalar+0x24c>
  40c95c:	e08f0000 	add	r0, pc, r0
  40c960:	e59f104c 	ldr	r1, [pc, #76]	; 40c9b4 <cvRawDataToScalar+0x250>
  40c964:	e59f204c 	ldr	r2, [pc, #76]	; 40c9b8 <cvRawDataToScalar+0x254>
  40c968:	e08f2002 	add	r2, pc, r2
  40c96c:	e2822e13 	add	r2, r2, #304	; 0x130
  40c970:	e59f3044 	ldr	r3, [pc, #68]	; 40c9bc <cvRawDataToScalar+0x258>
  40c974:	e08f3003 	add	r3, pc, r3
  40c978:	fa009cf5 	blx	433d54 <__assert_func>
  40c97c:	e28dd008 	add	sp, sp, #8
  40c980:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  40c984:	e12fff1e 	bx	lr
  40c988:	000348c0 	.word	0x000348c0
  40c98c:	00030854 	.word	0x00030854
  40c990:	000006f8 	.word	0x000006f8
  40c994:	0003065c 	.word	0x0003065c
  40c998:	00030c20 	.word	0x00030c20
  40c99c:	000006fb 	.word	0x000006fb
  40c9a0:	1fbf3cbc 	.word	0x1fbf3cbc
  40c9a4:	00030bfc 	.word	0x00030bfc
  40c9a8:	00030800 	.word	0x00030800
  40c9ac:	000000d0 	.word	0x000000d0
  40c9b0:	0003068c 	.word	0x0003068c
  40c9b4:	0000071e 	.word	0x0000071e
  40c9b8:	00030494 	.word	0x00030494
  40c9bc:	00033128 	.word	0x00033128

0040c9c0 <cvPtr2D>:
  40c9c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40c9c4:	e24dd01c 	sub	sp, sp, #28
  40c9c8:	e58d2008 	str	r2, [sp, #8]
  40c9cc:	e59fc39c 	ldr	ip, [pc, #924]	; 40cd70 <cvPtr2D+0x3b0>
  40c9d0:	e08fc00c 	add	ip, pc, ip
  40c9d4:	e3500000 	cmp	r0, #0
  40c9d8:	0a000032 	beq	40caa8 <cvPtr2D+0xe8>
  40c9dc:	e590e000 	ldr	lr, [r0]
  40c9e0:	e1a0582e 	lsr	r5, lr, #16
  40c9e4:	e59f4388 	ldr	r4, [pc, #904]	; 40cd74 <cvPtr2D+0x3b4>
  40c9e8:	e1540805 	cmp	r4, r5, lsl #16
  40c9ec:	1a00002d 	bne	40caa8 <cvPtr2D+0xe8>
  40c9f0:	e5904018 	ldr	r4, [r0, #24]
  40c9f4:	e3540000 	cmp	r4, #0
  40c9f8:	da00002a 	ble	40caa8 <cvPtr2D+0xe8>
  40c9fc:	e5905014 	ldr	r5, [r0, #20]
  40ca00:	e3550000 	cmp	r5, #0
  40ca04:	da000027 	ble	40caa8 <cvPtr2D+0xe8>
  40ca08:	e5906010 	ldr	r6, [r0, #16]
  40ca0c:	e3560000 	cmp	r6, #0
  40ca10:	0a000024 	beq	40caa8 <cvPtr2D+0xe8>
  40ca14:	e1510005 	cmp	r1, r5
  40ca18:	2a000001 	bcs	40ca24 <cvPtr2D+0x64>
  40ca1c:	e1520004 	cmp	r2, r4
  40ca20:	3a00000c 	bcc	40ca58 <cvPtr2D+0x98>
  40ca24:	e59f334c 	ldr	r3, [pc, #844]	; 40cd78 <cvPtr2D+0x3b8>
  40ca28:	e58d3000 	str	r3, [sp]
  40ca2c:	e3e000d2 	mvn	r0, #210	; 0xd2
  40ca30:	e59f1344 	ldr	r1, [pc, #836]	; 40cd7c <cvPtr2D+0x3bc>
  40ca34:	e08f1001 	add	r1, pc, r1
  40ca38:	e2811f6e 	add	r1, r1, #440	; 0x1b8
  40ca3c:	e59f233c 	ldr	r2, [pc, #828]	; 40cd80 <cvPtr2D+0x3c0>
  40ca40:	e08f2002 	add	r2, pc, r2
  40ca44:	e59f3338 	ldr	r3, [pc, #824]	; 40cd84 <cvPtr2D+0x3c4>
  40ca48:	e08f3003 	add	r3, pc, r3
  40ca4c:	eb001815 	bl	412aa8 <cvError>
  40ca50:	e3a04000 	mov	r4, #0
  40ca54:	ea0000c1 	b	40cd60 <cvPtr2D+0x3a0>
  40ca58:	e1a0cb8e 	lsl	ip, lr, #23
  40ca5c:	e1a0cbac 	lsr	ip, ip, #23
  40ca60:	e3530000 	cmp	r3, #0
  40ca64:	1583c000 	strne	ip, [r3]
  40ca68:	e590c010 	ldr	ip, [r0, #16]
  40ca6c:	e5905004 	ldr	r5, [r0, #4]
  40ca70:	e20e3f7e 	and	r3, lr, #504	; 0x1f8
  40ca74:	e1a031c3 	asr	r3, r3, #3
  40ca78:	e2833001 	add	r3, r3, #1
  40ca7c:	e20ee007 	and	lr, lr, #7
  40ca80:	e1a0e08e 	lsl	lr, lr, #1
  40ca84:	e59f02fc 	ldr	r0, [pc, #764]	; 40cd88 <cvPtr2D+0x3c8>
  40ca88:	e1a0ee30 	lsr	lr, r0, lr
  40ca8c:	e20ee003 	and	lr, lr, #3
  40ca90:	e1a0ee13 	lsl	lr, r3, lr
  40ca94:	e59d2008 	ldr	r2, [sp, #8]
  40ca98:	e002029e 	mul	r2, lr, r2
  40ca9c:	e0242591 	mla	r4, r1, r5, r2
  40caa0:	e08c4004 	add	r4, ip, r4
  40caa4:	ea0000ad 	b	40cd60 <cvPtr2D+0x3a0>
  40caa8:	e3500000 	cmp	r0, #0
  40caac:	0a000062 	beq	40cc3c <cvPtr2D+0x27c>
  40cab0:	e590e000 	ldr	lr, [r0]
  40cab4:	e35e0070 	cmp	lr, #112	; 0x70
  40cab8:	1a00005f 	bne	40cc3c <cvPtr2D+0x27c>
  40cabc:	e5904044 	ldr	r4, [r0, #68]	; 0x44
  40cac0:	e3540000 	cmp	r4, #0
  40cac4:	0a00005c 	beq	40cc3c <cvPtr2D+0x27c>
  40cac8:	e5905010 	ldr	r5, [r0, #16]
  40cacc:	e20590ff 	and	r9, r5, #255	; 0xff
  40cad0:	e1a061c9 	asr	r6, r9, #3
  40cad4:	e590801c 	ldr	r8, [r0, #28]
  40cad8:	e3580000 	cmp	r8, #0
  40cadc:	0590e008 	ldreq	lr, [r0, #8]
  40cae0:	0006069e 	muleq	r6, lr, r6
  40cae4:	e590e030 	ldr	lr, [r0, #48]	; 0x30
  40cae8:	e35e0000 	cmp	lr, #0
  40caec:	0a00001d 	beq	40cb68 <cvPtr2D+0x1a8>
  40caf0:	e59e200c 	ldr	r2, [lr, #12]
  40caf4:	e58d200c 	str	r2, [sp, #12]
  40caf8:	e59eb010 	ldr	fp, [lr, #16]
  40cafc:	e59e7004 	ldr	r7, [lr, #4]
  40cb00:	e00a0796 	mul	sl, r6, r7
  40cb04:	e59e7008 	ldr	r7, [lr, #8]
  40cb08:	e5902048 	ldr	r2, [r0, #72]	; 0x48
  40cb0c:	e02aa792 	mla	sl, r2, r7, sl
  40cb10:	e084400a 	add	r4, r4, sl
  40cb14:	e3580000 	cmp	r8, #0
  40cb18:	0a000015 	beq	40cb74 <cvPtr2D+0x1b4>
  40cb1c:	e59ee000 	ldr	lr, [lr]
  40cb20:	e35e0000 	cmp	lr, #0
  40cb24:	1a00000b 	bne	40cb58 <cvPtr2D+0x198>
  40cb28:	e59f325c 	ldr	r3, [pc, #604]	; 40cd8c <cvPtr2D+0x3cc>
  40cb2c:	e58d3000 	str	r3, [sp]
  40cb30:	e3e00017 	mvn	r0, #23
  40cb34:	e59f1254 	ldr	r1, [pc, #596]	; 40cd90 <cvPtr2D+0x3d0>
  40cb38:	e08f1001 	add	r1, pc, r1
  40cb3c:	e2811f6e 	add	r1, r1, #440	; 0x1b8
  40cb40:	e59f224c 	ldr	r2, [pc, #588]	; 40cd94 <cvPtr2D+0x3d4>
  40cb44:	e08f2002 	add	r2, pc, r2
  40cb48:	e59f3248 	ldr	r3, [pc, #584]	; 40cd98 <cvPtr2D+0x3d8>
  40cb4c:	e08f3003 	add	r3, pc, r3
  40cb50:	eb0017d4 	bl	412aa8 <cvError>
  40cb54:	ea000081 	b	40cd60 <cvPtr2D+0x3a0>
  40cb58:	e24ee001 	sub	lr, lr, #1
  40cb5c:	e5907040 	ldr	r7, [r0, #64]	; 0x40
  40cb60:	e0244e97 	mla	r4, r7, lr, r4
  40cb64:	ea000002 	b	40cb74 <cvPtr2D+0x1b4>
  40cb68:	e5902028 	ldr	r2, [r0, #40]	; 0x28
  40cb6c:	e58d200c 	str	r2, [sp, #12]
  40cb70:	e590b02c 	ldr	fp, [r0, #44]	; 0x2c
  40cb74:	e59d2008 	ldr	r2, [sp, #8]
  40cb78:	e59de00c 	ldr	lr, [sp, #12]
  40cb7c:	e152000e 	cmp	r2, lr
  40cb80:	3151000b 	cmpcc	r1, fp
  40cb84:	3a00000b 	bcc	40cbb8 <cvPtr2D+0x1f8>
  40cb88:	e59f320c 	ldr	r3, [pc, #524]	; 40cd9c <cvPtr2D+0x3dc>
  40cb8c:	e58d3000 	str	r3, [sp]
  40cb90:	e3e000d2 	mvn	r0, #210	; 0xd2
  40cb94:	e59f1204 	ldr	r1, [pc, #516]	; 40cda0 <cvPtr2D+0x3e0>
  40cb98:	e08f1001 	add	r1, pc, r1
  40cb9c:	e2811f6e 	add	r1, r1, #440	; 0x1b8
  40cba0:	e59f21fc 	ldr	r2, [pc, #508]	; 40cda4 <cvPtr2D+0x3e4>
  40cba4:	e08f2002 	add	r2, pc, r2
  40cba8:	e59f31f8 	ldr	r3, [pc, #504]	; 40cda8 <cvPtr2D+0x3e8>
  40cbac:	e08f3003 	add	r3, pc, r3
  40cbb0:	eb0017bc 	bl	412aa8 <cvError>
  40cbb4:	ea000069 	b	40cd60 <cvPtr2D+0x3a0>
  40cbb8:	e590e048 	ldr	lr, [r0, #72]	; 0x48
  40cbbc:	e59d7008 	ldr	r7, [sp, #8]
  40cbc0:	e0070796 	mul	r7, r6, r7
  40cbc4:	e022719e 	mla	r2, lr, r1, r7
  40cbc8:	e0844002 	add	r4, r4, r2
  40cbcc:	e3530000 	cmp	r3, #0
  40cbd0:	0a000062 	beq	40cd60 <cvPtr2D+0x3a0>
  40cbd4:	e1a05fa5 	lsr	r5, r5, #31
  40cbd8:	e0859149 	add	r9, r5, r9, asr #2
  40cbdc:	e59f21c8 	ldr	r2, [pc, #456]	; 40cdac <cvPtr2D+0x3ec>
  40cbe0:	e79c2002 	ldr	r2, [ip, r2]
  40cbe4:	e19210d9 	ldrsb	r1, [r2, r9]
  40cbe8:	e3510000 	cmp	r1, #0
  40cbec:	ba000003 	blt	40cc00 <cvPtr2D+0x240>
  40cbf0:	e5902008 	ldr	r2, [r0, #8]
  40cbf4:	e2422001 	sub	r2, r2, #1
  40cbf8:	e3520003 	cmp	r2, #3
  40cbfc:	9a00000b 	bls	40cc30 <cvPtr2D+0x270>
  40cc00:	e59f31a8 	ldr	r3, [pc, #424]	; 40cdb0 <cvPtr2D+0x3f0>
  40cc04:	e58d3000 	str	r3, [sp]
  40cc08:	e3e000d1 	mvn	r0, #209	; 0xd1
  40cc0c:	e59f11a0 	ldr	r1, [pc, #416]	; 40cdb4 <cvPtr2D+0x3f4>
  40cc10:	e08f1001 	add	r1, pc, r1
  40cc14:	e2811f6e 	add	r1, r1, #440	; 0x1b8
  40cc18:	e59f2198 	ldr	r2, [pc, #408]	; 40cdb8 <cvPtr2D+0x3f8>
  40cc1c:	e08f2002 	add	r2, pc, r2
  40cc20:	e59f3194 	ldr	r3, [pc, #404]	; 40cdbc <cvPtr2D+0x3fc>
  40cc24:	e08f3003 	add	r3, pc, r3
  40cc28:	eb00179e 	bl	412aa8 <cvError>
  40cc2c:	ea00004b 	b	40cd60 <cvPtr2D+0x3a0>
  40cc30:	e0812182 	add	r2, r1, r2, lsl #3
  40cc34:	e5832000 	str	r2, [r3]
  40cc38:	ea000048 	b	40cd60 <cvPtr2D+0x3a0>
  40cc3c:	e3500000 	cmp	r0, #0
  40cc40:	0a000029 	beq	40ccec <cvPtr2D+0x32c>
  40cc44:	e590c000 	ldr	ip, [r0]
  40cc48:	e1a0482c 	lsr	r4, ip, #16
  40cc4c:	e59fe16c 	ldr	lr, [pc, #364]	; 40cdc0 <cvPtr2D+0x400>
  40cc50:	e15e0804 	cmp	lr, r4, lsl #16
  40cc54:	1a000024 	bne	40ccec <cvPtr2D+0x32c>
  40cc58:	e590e010 	ldr	lr, [r0, #16]
  40cc5c:	e35e0000 	cmp	lr, #0
  40cc60:	0a000021 	beq	40ccec <cvPtr2D+0x32c>
  40cc64:	e5904004 	ldr	r4, [r0, #4]
  40cc68:	e3540002 	cmp	r4, #2
  40cc6c:	1a000006 	bne	40cc8c <cvPtr2D+0x2cc>
  40cc70:	e5904014 	ldr	r4, [r0, #20]
  40cc74:	e1510004 	cmp	r1, r4
  40cc78:	2a000003 	bcs	40cc8c <cvPtr2D+0x2cc>
  40cc7c:	e590401c 	ldr	r4, [r0, #28]
  40cc80:	e59d2008 	ldr	r2, [sp, #8]
  40cc84:	e1520004 	cmp	r2, r4
  40cc88:	3a00000c 	bcc	40ccc0 <cvPtr2D+0x300>
  40cc8c:	e59f3130 	ldr	r3, [pc, #304]	; 40cdc4 <cvPtr2D+0x404>
  40cc90:	e58d3000 	str	r3, [sp]
  40cc94:	e3e000d2 	mvn	r0, #210	; 0xd2
  40cc98:	e59f1128 	ldr	r1, [pc, #296]	; 40cdc8 <cvPtr2D+0x408>
  40cc9c:	e08f1001 	add	r1, pc, r1
  40cca0:	e2811f6e 	add	r1, r1, #440	; 0x1b8
  40cca4:	e59f2120 	ldr	r2, [pc, #288]	; 40cdcc <cvPtr2D+0x40c>
  40cca8:	e08f2002 	add	r2, pc, r2
  40ccac:	e59f311c 	ldr	r3, [pc, #284]	; 40cdd0 <cvPtr2D+0x410>
  40ccb0:	e08f3003 	add	r3, pc, r3
  40ccb4:	eb00177b 	bl	412aa8 <cvError>
  40ccb8:	e3a04000 	mov	r4, #0
  40ccbc:	ea000027 	b	40cd60 <cvPtr2D+0x3a0>
  40ccc0:	e5905018 	ldr	r5, [r0, #24]
  40ccc4:	e5904020 	ldr	r4, [r0, #32]
  40ccc8:	e59d2008 	ldr	r2, [sp, #8]
  40cccc:	e0020294 	mul	r2, r4, r2
  40ccd0:	e0242195 	mla	r4, r5, r1, r2
  40ccd4:	e08e4004 	add	r4, lr, r4
  40ccd8:	e3530000 	cmp	r3, #0
  40ccdc:	11a0cb8c 	lslne	ip, ip, #23
  40cce0:	11a0cbac 	lsrne	ip, ip, #23
  40cce4:	1583c000 	strne	ip, [r3]
  40cce8:	ea00001c 	b	40cd60 <cvPtr2D+0x3a0>
  40ccec:	e3500000 	cmp	r0, #0
  40ccf0:	0a00000e 	beq	40cd30 <cvPtr2D+0x370>
  40ccf4:	e1d0e0b2 	ldrh	lr, [r0, #2]
  40ccf8:	e59fc0d4 	ldr	ip, [pc, #212]	; 40cdd4 <cvPtr2D+0x414>
  40ccfc:	e15c080e 	cmp	ip, lr, lsl #16
  40cd00:	1a00000a 	bne	40cd30 <cvPtr2D+0x370>
  40cd04:	e58d1010 	str	r1, [sp, #16]
  40cd08:	e59d2008 	ldr	r2, [sp, #8]
  40cd0c:	e58d2014 	str	r2, [sp, #20]
  40cd10:	e3a02000 	mov	r2, #0
  40cd14:	e58d2000 	str	r2, [sp]
  40cd18:	e28d1010 	add	r1, sp, #16
  40cd1c:	e1a02003 	mov	r2, r3
  40cd20:	e3a03001 	mov	r3, #1
  40cd24:	ebfff73a 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40cd28:	e1a04000 	mov	r4, r0
  40cd2c:	ea00000b 	b	40cd60 <cvPtr2D+0x3a0>
  40cd30:	e59f30a0 	ldr	r3, [pc, #160]	; 40cdd8 <cvPtr2D+0x418>
  40cd34:	e58d3000 	str	r3, [sp]
  40cd38:	e3e00004 	mvn	r0, #4
  40cd3c:	e59f1098 	ldr	r1, [pc, #152]	; 40cddc <cvPtr2D+0x41c>
  40cd40:	e08f1001 	add	r1, pc, r1
  40cd44:	e2811f6e 	add	r1, r1, #440	; 0x1b8
  40cd48:	e59f2090 	ldr	r2, [pc, #144]	; 40cde0 <cvPtr2D+0x420>
  40cd4c:	e08f2002 	add	r2, pc, r2
  40cd50:	e59f308c 	ldr	r3, [pc, #140]	; 40cde4 <cvPtr2D+0x424>
  40cd54:	e08f3003 	add	r3, pc, r3
  40cd58:	eb001752 	bl	412aa8 <cvError>
  40cd5c:	e3a04000 	mov	r4, #0
  40cd60:	e1a00004 	mov	r0, r4
  40cd64:	e28dd01c 	add	sp, sp, #28
  40cd68:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40cd6c:	e12fff1e 	bx	lr
  40cd70:	00034664 	.word	0x00034664
  40cd74:	42420000 	.word	0x42420000
  40cd78:	000007e8 	.word	0x000007e8
  40cd7c:	1fbf3a5c 	.word	0x1fbf3a5c
  40cd80:	00032d7c 	.word	0x00032d7c
  40cd84:	000305a0 	.word	0x000305a0
  40cd88:	0000ba50 	.word	0x0000ba50
  40cd8c:	00000807 	.word	0x00000807
  40cd90:	1fbf3958 	.word	0x1fbf3958
  40cd94:	000308c4 	.word	0x000308c4
  40cd98:	0003049c 	.word	0x0003049c
  40cd9c:	00000813 	.word	0x00000813
  40cda0:	1fbf38f8 	.word	0x1fbf38f8
  40cda4:	00032c18 	.word	0x00032c18
  40cda8:	0003043c 	.word	0x0003043c
  40cdac:	000000cc 	.word	0x000000cc
  40cdb0:	0000081b 	.word	0x0000081b
  40cdb4:	1fbf3880 	.word	0x1fbf3880
  40cdb8:	000337f4 	.word	0x000337f4
  40cdbc:	000303c4 	.word	0x000303c4
  40cdc0:	42430000 	.word	0x42430000
  40cdc4:	00000827 	.word	0x00000827
  40cdc8:	1fbf37f4 	.word	0x1fbf37f4
  40cdcc:	00032b14 	.word	0x00032b14
  40cdd0:	00030338 	.word	0x00030338
  40cdd4:	42440000 	.word	0x42440000
  40cdd8:	00000834 	.word	0x00000834
  40cddc:	1fbf3750 	.word	0x1fbf3750
  40cde0:	000305bc 	.word	0x000305bc
  40cde4:	00030294 	.word	0x00030294

0040cde8 <cvGetRawData>:
  40cde8:	e92d4070 	push	{r4, r5, r6, lr}
  40cdec:	e24dd020 	sub	sp, sp, #32
  40cdf0:	e2504000 	subs	r4, r0, #0
  40cdf4:	0a00001c 	beq	40ce6c <cvGetRawData+0x84>
  40cdf8:	e1d4c0b2 	ldrh	ip, [r4, #2]
  40cdfc:	e59f0260 	ldr	r0, [pc, #608]	; 40d064 <cvGetRawData+0x27c>
  40ce00:	e150080c 	cmp	r0, ip, lsl #16
  40ce04:	1a000018 	bne	40ce6c <cvGetRawData+0x84>
  40ce08:	e5940018 	ldr	r0, [r4, #24]
  40ce0c:	e3500000 	cmp	r0, #0
  40ce10:	da000015 	ble	40ce6c <cvGetRawData+0x84>
  40ce14:	e5940014 	ldr	r0, [r4, #20]
  40ce18:	e3500000 	cmp	r0, #0
  40ce1c:	da000012 	ble	40ce6c <cvGetRawData+0x84>
  40ce20:	e5940010 	ldr	r0, [r4, #16]
  40ce24:	e3500000 	cmp	r0, #0
  40ce28:	0a00000f 	beq	40ce6c <cvGetRawData+0x84>
  40ce2c:	e3520000 	cmp	r2, #0
  40ce30:	15940004 	ldrne	r0, [r4, #4]
  40ce34:	15820000 	strne	r0, [r2]
  40ce38:	e3510000 	cmp	r1, #0
  40ce3c:	15942010 	ldrne	r2, [r4, #16]
  40ce40:	15812000 	strne	r2, [r1]
  40ce44:	e3530000 	cmp	r3, #0
  40ce48:	0a000082 	beq	40d058 <cvGetRawData+0x270>
  40ce4c:	e5942018 	ldr	r2, [r4, #24]
  40ce50:	e58d2008 	str	r2, [sp, #8]
  40ce54:	e5942014 	ldr	r2, [r4, #20]
  40ce58:	e58d200c 	str	r2, [sp, #12]
  40ce5c:	e28d2008 	add	r2, sp, #8
  40ce60:	e8920003 	ldm	r2, {r0, r1}
  40ce64:	e8830003 	stm	r3, {r0, r1}
  40ce68:	ea00007a 	b	40d058 <cvGetRawData+0x270>
  40ce6c:	e1a05003 	mov	r5, r3
  40ce70:	e1a06001 	mov	r6, r1
  40ce74:	e3540000 	cmp	r4, #0
  40ce78:	0a000034 	beq	40cf50 <cvGetRawData+0x168>
  40ce7c:	e5943000 	ldr	r3, [r4]
  40ce80:	e3530070 	cmp	r3, #112	; 0x70
  40ce84:	1a000031 	bne	40cf50 <cvGetRawData+0x168>
  40ce88:	e5943044 	ldr	r3, [r4, #68]	; 0x44
  40ce8c:	e3530000 	cmp	r3, #0
  40ce90:	0a00002e 	beq	40cf50 <cvGetRawData+0x168>
  40ce94:	e3520000 	cmp	r2, #0
  40ce98:	15943048 	ldrne	r3, [r4, #72]	; 0x48
  40ce9c:	15823000 	strne	r3, [r2]
  40cea0:	e3560000 	cmp	r6, #0
  40cea4:	0a000014 	beq	40cefc <cvGetRawData+0x114>
  40cea8:	e1a00004 	mov	r0, r4
  40ceac:	e3a01000 	mov	r1, #0
  40ceb0:	e1a02001 	mov	r2, r1
  40ceb4:	e1a03001 	mov	r3, r1
  40ceb8:	ebfffec0 	bl	40c9c0 <cvPtr2D>
  40cebc:	e5860000 	str	r0, [r6]
  40cec0:	eb0016c7 	bl	4129e4 <cvGetErrStatus>
  40cec4:	e3500000 	cmp	r0, #0
  40cec8:	aa00000b 	bge	40cefc <cvGetRawData+0x114>
  40cecc:	e59f3194 	ldr	r3, [pc, #404]	; 40d068 <cvGetRawData+0x280>
  40ced0:	e58d3000 	str	r3, [sp]
  40ced4:	e3e00000 	mvn	r0, #0
  40ced8:	e59f118c 	ldr	r1, [pc, #396]	; 40d06c <cvGetRawData+0x284>
  40cedc:	e08f1001 	add	r1, pc, r1
  40cee0:	e2811d07 	add	r1, r1, #448	; 0x1c0
  40cee4:	e59f2184 	ldr	r2, [pc, #388]	; 40d070 <cvGetRawData+0x288>
  40cee8:	e08f2002 	add	r2, pc, r2
  40ceec:	e59f3180 	ldr	r3, [pc, #384]	; 40d074 <cvGetRawData+0x28c>
  40cef0:	e08f3003 	add	r3, pc, r3
  40cef4:	eb0016eb 	bl	412aa8 <cvError>
  40cef8:	ea000056 	b	40d058 <cvGetRawData+0x270>
  40cefc:	e3550000 	cmp	r5, #0
  40cf00:	0a000054 	beq	40d058 <cvGetRawData+0x270>
  40cf04:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  40cf08:	e3530000 	cmp	r3, #0
  40cf0c:	0a000007 	beq	40cf30 <cvGetRawData+0x148>
  40cf10:	e593200c 	ldr	r2, [r3, #12]
  40cf14:	e5933010 	ldr	r3, [r3, #16]
  40cf18:	e58d2010 	str	r2, [sp, #16]
  40cf1c:	e58d3014 	str	r3, [sp, #20]
  40cf20:	e28d3010 	add	r3, sp, #16
  40cf24:	e8930003 	ldm	r3, {r0, r1}
  40cf28:	e8850003 	stm	r5, {r0, r1}
  40cf2c:	ea000049 	b	40d058 <cvGetRawData+0x270>
  40cf30:	e5942028 	ldr	r2, [r4, #40]	; 0x28
  40cf34:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
  40cf38:	e58d2018 	str	r2, [sp, #24]
  40cf3c:	e58d301c 	str	r3, [sp, #28]
  40cf40:	e28d3020 	add	r3, sp, #32
  40cf44:	e9130003 	ldmdb	r3, {r0, r1}
  40cf48:	e8850003 	stm	r5, {r0, r1}
  40cf4c:	ea000041 	b	40d058 <cvGetRawData+0x270>
  40cf50:	e3540000 	cmp	r4, #0
  40cf54:	0a000034 	beq	40d02c <cvGetRawData+0x244>
  40cf58:	e5943000 	ldr	r3, [r4]
  40cf5c:	e1a00823 	lsr	r0, r3, #16
  40cf60:	e59f1110 	ldr	r1, [pc, #272]	; 40d078 <cvGetRawData+0x290>
  40cf64:	e1510800 	cmp	r1, r0, lsl #16
  40cf68:	1a00002f 	bne	40d02c <cvGetRawData+0x244>
  40cf6c:	e5941010 	ldr	r1, [r4, #16]
  40cf70:	e3510000 	cmp	r1, #0
  40cf74:	0a00002c 	beq	40d02c <cvGetRawData+0x244>
  40cf78:	e3130901 	tst	r3, #16384	; 0x4000
  40cf7c:	1a00000b 	bne	40cfb0 <cvGetRawData+0x1c8>
  40cf80:	e59f30f4 	ldr	r3, [pc, #244]	; 40d07c <cvGetRawData+0x294>
  40cf84:	e58d3000 	str	r3, [sp]
  40cf88:	e3e00004 	mvn	r0, #4
  40cf8c:	e59f10ec 	ldr	r1, [pc, #236]	; 40d080 <cvGetRawData+0x298>
  40cf90:	e08f1001 	add	r1, pc, r1
  40cf94:	e2811d07 	add	r1, r1, #448	; 0x1c0
  40cf98:	e59f20e4 	ldr	r2, [pc, #228]	; 40d084 <cvGetRawData+0x29c>
  40cf9c:	e08f2002 	add	r2, pc, r2
  40cfa0:	e59f30e0 	ldr	r3, [pc, #224]	; 40d088 <cvGetRawData+0x2a0>
  40cfa4:	e08f3003 	add	r3, pc, r3
  40cfa8:	eb0016be 	bl	412aa8 <cvError>
  40cfac:	ea000029 	b	40d058 <cvGetRawData+0x270>
  40cfb0:	e3560000 	cmp	r6, #0
  40cfb4:	15861000 	strne	r1, [r6]
  40cfb8:	e3520000 	cmp	r2, #0
  40cfbc:	03550000 	cmpeq	r5, #0
  40cfc0:	0a000024 	beq	40d058 <cvGetRawData+0x270>
  40cfc4:	e5940014 	ldr	r0, [r4, #20]
  40cfc8:	e5943004 	ldr	r3, [r4, #4]
  40cfcc:	e3530002 	cmp	r3, #2
  40cfd0:	ca000005 	bgt	40cfec <cvGetRawData+0x204>
  40cfd4:	ea000009 	b	40d000 <cvGetRawData+0x218>
  40cfd8:	e084c181 	add	ip, r4, r1, lsl #3
  40cfdc:	e59cc014 	ldr	ip, [ip, #20]
  40cfe0:	e000009c 	mul	r0, ip, r0
  40cfe4:	e2811001 	add	r1, r1, #1
  40cfe8:	ea000000 	b	40cff0 <cvGetRawData+0x208>
  40cfec:	e3a01001 	mov	r1, #1
  40cff0:	e1510003 	cmp	r1, r3
  40cff4:	bafffff7 	blt	40cfd8 <cvGetRawData+0x1f0>
  40cff8:	e3a03001 	mov	r3, #1
  40cffc:	ea000000 	b	40d004 <cvGetRawData+0x21c>
  40d000:	e594301c 	ldr	r3, [r4, #28]
  40d004:	e3550000 	cmp	r5, #0
  40d008:	15853000 	strne	r3, [r5]
  40d00c:	15850004 	strne	r0, [r5, #4]
  40d010:	e3520000 	cmp	r2, #0
  40d014:	0a00000f 	beq	40d058 <cvGetRawData+0x270>
  40d018:	e3500001 	cmp	r0, #1
  40d01c:	15943018 	ldrne	r3, [r4, #24]
  40d020:	03a03000 	moveq	r3, #0
  40d024:	e5823000 	str	r3, [r2]
  40d028:	ea00000a 	b	40d058 <cvGetRawData+0x270>
  40d02c:	e59f3058 	ldr	r3, [pc, #88]	; 40d08c <cvGetRawData+0x2a4>
  40d030:	e58d3000 	str	r3, [sp]
  40d034:	e3e00004 	mvn	r0, #4
  40d038:	e59f1050 	ldr	r1, [pc, #80]	; 40d090 <cvGetRawData+0x2a8>
  40d03c:	e08f1001 	add	r1, pc, r1
  40d040:	e2811d07 	add	r1, r1, #448	; 0x1c0
  40d044:	e59f2048 	ldr	r2, [pc, #72]	; 40d094 <cvGetRawData+0x2ac>
  40d048:	e08f2002 	add	r2, pc, r2
  40d04c:	e59f3044 	ldr	r3, [pc, #68]	; 40d098 <cvGetRawData+0x2b0>
  40d050:	e08f3003 	add	r3, pc, r3
  40d054:	eb001693 	bl	412aa8 <cvError>
  40d058:	e28dd020 	add	sp, sp, #32
  40d05c:	e8bd4070 	pop	{r4, r5, r6, lr}
  40d060:	e12fff1e 	bx	lr
  40d064:	42420000 	.word	0x42420000
  40d068:	000004b7 	.word	0x000004b7
  40d06c:	1fbf35b4 	.word	0x1fbf35b4
  40d070:	000300e8 	.word	0x000300e8
  40d074:	000300f8 	.word	0x000300f8
  40d078:	42430000 	.word	0x42430000
  40d07c:	000004ca 	.word	0x000004ca
  40d080:	1fbf3500 	.word	0x1fbf3500
  40d084:	0003049c 	.word	0x0003049c
  40d088:	00030044 	.word	0x00030044
  40d08c:	000004e5 	.word	0x000004e5
  40d090:	1fbf3454 	.word	0x1fbf3454
  40d094:	000302c0 	.word	0x000302c0
  40d098:	0002ff98 	.word	0x0002ff98

0040d09c <cvPtr1D>:
  40d09c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  40d0a0:	e24dd014 	sub	sp, sp, #20
  40d0a4:	e58d100c 	str	r1, [sp, #12]
  40d0a8:	e1a09002 	mov	r9, r2
  40d0ac:	e2507000 	subs	r7, r0, #0
  40d0b0:	0a000046 	beq	40d1d0 <cvPtr1D+0x134>
  40d0b4:	e5973000 	ldr	r3, [r7]
  40d0b8:	e1a01823 	lsr	r1, r3, #16
  40d0bc:	e59f238c 	ldr	r2, [pc, #908]	; 40d450 <cvPtr1D+0x3b4>
  40d0c0:	e1520801 	cmp	r2, r1, lsl #16
  40d0c4:	1a000041 	bne	40d1d0 <cvPtr1D+0x134>
  40d0c8:	e5972018 	ldr	r2, [r7, #24]
  40d0cc:	e3520000 	cmp	r2, #0
  40d0d0:	da00003e 	ble	40d1d0 <cvPtr1D+0x134>
  40d0d4:	e5972014 	ldr	r2, [r7, #20]
  40d0d8:	e3520000 	cmp	r2, #0
  40d0dc:	da00003b 	ble	40d1d0 <cvPtr1D+0x134>
  40d0e0:	e5972010 	ldr	r2, [r7, #16]
  40d0e4:	e3520000 	cmp	r2, #0
  40d0e8:	0a000038 	beq	40d1d0 <cvPtr1D+0x134>
  40d0ec:	e1a02b83 	lsl	r2, r3, #23
  40d0f0:	e1a00ba2 	lsr	r0, r2, #23
  40d0f4:	e2031f7e 	and	r1, r3, #504	; 0x1f8
  40d0f8:	e1a011c1 	asr	r1, r1, #3
  40d0fc:	e2811001 	add	r1, r1, #1
  40d100:	e2033007 	and	r3, r3, #7
  40d104:	e1a03083 	lsl	r3, r3, #1
  40d108:	e59f2344 	ldr	r2, [pc, #836]	; 40d454 <cvPtr1D+0x3b8>
  40d10c:	e1a03332 	lsr	r3, r2, r3
  40d110:	e2033003 	and	r3, r3, #3
  40d114:	e1a04311 	lsl	r4, r1, r3
  40d118:	e3590000 	cmp	r9, #0
  40d11c:	15890000 	strne	r0, [r9]
  40d120:	e59d500c 	ldr	r5, [sp, #12]
  40d124:	e5972014 	ldr	r2, [r7, #20]
  40d128:	e5976018 	ldr	r6, [r7, #24]
  40d12c:	e0823006 	add	r3, r2, r6
  40d130:	e2433001 	sub	r3, r3, #1
  40d134:	e1550003 	cmp	r5, r3
  40d138:	3a00000f 	bcc	40d17c <cvPtr1D+0xe0>
  40d13c:	e0020296 	mul	r2, r6, r2
  40d140:	e1550002 	cmp	r5, r2
  40d144:	3a00000c 	bcc	40d17c <cvPtr1D+0xe0>
  40d148:	e59f3308 	ldr	r3, [pc, #776]	; 40d458 <cvPtr1D+0x3bc>
  40d14c:	e58d3000 	str	r3, [sp]
  40d150:	e3e000d2 	mvn	r0, #210	; 0xd2
  40d154:	e59f1300 	ldr	r1, [pc, #768]	; 40d45c <cvPtr1D+0x3c0>
  40d158:	e08f1001 	add	r1, pc, r1
  40d15c:	e2811e1d 	add	r1, r1, #464	; 0x1d0
  40d160:	e59f22f8 	ldr	r2, [pc, #760]	; 40d460 <cvPtr1D+0x3c4>
  40d164:	e08f2002 	add	r2, pc, r2
  40d168:	e59f32f4 	ldr	r3, [pc, #756]	; 40d464 <cvPtr1D+0x3c8>
  40d16c:	e08f3003 	add	r3, pc, r3
  40d170:	eb00164c 	bl	412aa8 <cvError>
  40d174:	e3a09000 	mov	r9, #0
  40d178:	ea0000b0 	b	40d440 <cvPtr1D+0x3a4>
  40d17c:	e5973000 	ldr	r3, [r7]
  40d180:	e3130901 	tst	r3, #16384	; 0x4000
  40d184:	15979010 	ldrne	r9, [r7, #16]
  40d188:	10299594 	mlane	r9, r4, r5, r9
  40d18c:	1a0000ab 	bne	40d440 <cvPtr1D+0x3a4>
  40d190:	e3560001 	cmp	r6, #1
  40d194:	0a000005 	beq	40d1b0 <cvPtr1D+0x114>
  40d198:	e1a00005 	mov	r0, r5
  40d19c:	e1a01006 	mov	r1, r6
  40d1a0:	fa009203 	blx	4319b4 <__aeabi_idiv>
  40d1a4:	e0060690 	mul	r6, r0, r6
  40d1a8:	e0665005 	rsb	r5, r6, r5
  40d1ac:	ea000001 	b	40d1b8 <cvPtr1D+0x11c>
  40d1b0:	e1a00005 	mov	r0, r5
  40d1b4:	e3a05000 	mov	r5, #0
  40d1b8:	e5973010 	ldr	r3, [r7, #16]
  40d1bc:	e5979004 	ldr	r9, [r7, #4]
  40d1c0:	e0050594 	mul	r5, r4, r5
  40d1c4:	e0255990 	mla	r5, r0, r9, r5
  40d1c8:	e0839005 	add	r9, r3, r5
  40d1cc:	ea00009b 	b	40d440 <cvPtr1D+0x3a4>
  40d1d0:	e3570000 	cmp	r7, #0
  40d1d4:	0a000012 	beq	40d224 <cvPtr1D+0x188>
  40d1d8:	e5973000 	ldr	r3, [r7]
  40d1dc:	e3530070 	cmp	r3, #112	; 0x70
  40d1e0:	1a00000f 	bne	40d224 <cvPtr1D+0x188>
  40d1e4:	e5973030 	ldr	r3, [r7, #48]	; 0x30
  40d1e8:	e3530000 	cmp	r3, #0
  40d1ec:	05974028 	ldreq	r4, [r7, #40]	; 0x28
  40d1f0:	1593400c 	ldrne	r4, [r3, #12]
  40d1f4:	e59d500c 	ldr	r5, [sp, #12]
  40d1f8:	e1a00005 	mov	r0, r5
  40d1fc:	e1a01004 	mov	r1, r4
  40d200:	fa0091eb 	blx	4319b4 <__aeabi_idiv>
  40d204:	e1a01000 	mov	r1, r0
  40d208:	e0020490 	mul	r2, r0, r4
  40d20c:	e1a00007 	mov	r0, r7
  40d210:	e0622005 	rsb	r2, r2, r5
  40d214:	e1a03009 	mov	r3, r9
  40d218:	ebfffde8 	bl	40c9c0 <cvPtr2D>
  40d21c:	e1a09000 	mov	r9, r0
  40d220:	ea000086 	b	40d440 <cvPtr1D+0x3a4>
  40d224:	e3570000 	cmp	r7, #0
  40d228:	0a000049 	beq	40d354 <cvPtr1D+0x2b8>
  40d22c:	e5970000 	ldr	r0, [r7]
  40d230:	e1a02820 	lsr	r2, r0, #16
  40d234:	e59f322c 	ldr	r3, [pc, #556]	; 40d468 <cvPtr1D+0x3cc>
  40d238:	e1530802 	cmp	r3, r2, lsl #16
  40d23c:	1a000044 	bne	40d354 <cvPtr1D+0x2b8>
  40d240:	e5973010 	ldr	r3, [r7, #16]
  40d244:	e3530000 	cmp	r3, #0
  40d248:	0a000041 	beq	40d354 <cvPtr1D+0x2b8>
  40d24c:	e1a03b80 	lsl	r3, r0, #23
  40d250:	e1a03ba3 	lsr	r3, r3, #23
  40d254:	e5972014 	ldr	r2, [r7, #20]
  40d258:	e3590000 	cmp	r9, #0
  40d25c:	15893000 	strne	r3, [r9]
  40d260:	e3a03001 	mov	r3, #1
  40d264:	ea000003 	b	40d278 <cvPtr1D+0x1dc>
  40d268:	e0871183 	add	r1, r7, r3, lsl #3
  40d26c:	e5911014 	ldr	r1, [r1, #20]
  40d270:	e0020291 	mul	r2, r1, r2
  40d274:	e2833001 	add	r3, r3, #1
  40d278:	e5974004 	ldr	r4, [r7, #4]
  40d27c:	e1540003 	cmp	r4, r3
  40d280:	cafffff8 	bgt	40d268 <cvPtr1D+0x1cc>
  40d284:	e59d100c 	ldr	r1, [sp, #12]
  40d288:	e1510002 	cmp	r1, r2
  40d28c:	3a00000c 	bcc	40d2c4 <cvPtr1D+0x228>
  40d290:	e59f31d4 	ldr	r3, [pc, #468]	; 40d46c <cvPtr1D+0x3d0>
  40d294:	e58d3000 	str	r3, [sp]
  40d298:	e3e000d2 	mvn	r0, #210	; 0xd2
  40d29c:	e59f11cc 	ldr	r1, [pc, #460]	; 40d470 <cvPtr1D+0x3d4>
  40d2a0:	e08f1001 	add	r1, pc, r1
  40d2a4:	e2811e1d 	add	r1, r1, #464	; 0x1d0
  40d2a8:	e59f21c4 	ldr	r2, [pc, #452]	; 40d474 <cvPtr1D+0x3d8>
  40d2ac:	e08f2002 	add	r2, pc, r2
  40d2b0:	e59f31c0 	ldr	r3, [pc, #448]	; 40d478 <cvPtr1D+0x3dc>
  40d2b4:	e08f3003 	add	r3, pc, r3
  40d2b8:	eb0015fa 	bl	412aa8 <cvError>
  40d2bc:	e3a09000 	mov	r9, #0
  40d2c0:	ea00005e 	b	40d440 <cvPtr1D+0x3a4>
  40d2c4:	e5973000 	ldr	r3, [r7]
  40d2c8:	e3130901 	tst	r3, #16384	; 0x4000
  40d2cc:	0a00000b 	beq	40d300 <cvPtr1D+0x264>
  40d2d0:	e2003f7e 	and	r3, r0, #504	; 0x1f8
  40d2d4:	e1a031c3 	asr	r3, r3, #3
  40d2d8:	e2832001 	add	r2, r3, #1
  40d2dc:	e2003007 	and	r3, r0, #7
  40d2e0:	e1a03083 	lsl	r3, r3, #1
  40d2e4:	e59f0168 	ldr	r0, [pc, #360]	; 40d454 <cvPtr1D+0x3b8>
  40d2e8:	e1a03330 	lsr	r3, r0, r3
  40d2ec:	e2033003 	and	r3, r3, #3
  40d2f0:	e1a03312 	lsl	r3, r2, r3
  40d2f4:	e5979010 	ldr	r9, [r7, #16]
  40d2f8:	e0299193 	mla	r9, r3, r1, r9
  40d2fc:	ea00004f 	b	40d440 <cvPtr1D+0x3a4>
  40d300:	e5979010 	ldr	r9, [r7, #16]
  40d304:	e2444001 	sub	r4, r4, #1
  40d308:	ea00000e 	b	40d348 <cvPtr1D+0x2ac>
  40d30c:	e0873184 	add	r3, r7, r4, lsl #3
  40d310:	e5935014 	ldr	r5, [r3, #20]
  40d314:	e3550000 	cmp	r5, #0
  40d318:	0a000009 	beq	40d344 <cvPtr1D+0x2a8>
  40d31c:	e59d600c 	ldr	r6, [sp, #12]
  40d320:	e1a00006 	mov	r0, r6
  40d324:	e1a01005 	mov	r1, r5
  40d328:	fa0091a1 	blx	4319b4 <__aeabi_idiv>
  40d32c:	e0050590 	mul	r5, r0, r5
  40d330:	e0655006 	rsb	r5, r5, r6
  40d334:	e0873184 	add	r3, r7, r4, lsl #3
  40d338:	e5933018 	ldr	r3, [r3, #24]
  40d33c:	e0299593 	mla	r9, r3, r5, r9
  40d340:	e58d000c 	str	r0, [sp, #12]
  40d344:	e2444001 	sub	r4, r4, #1
  40d348:	e3540000 	cmp	r4, #0
  40d34c:	aaffffee 	bge	40d30c <cvPtr1D+0x270>
  40d350:	ea00003a 	b	40d440 <cvPtr1D+0x3a4>
  40d354:	e3570000 	cmp	r7, #0
  40d358:	0a00002c 	beq	40d410 <cvPtr1D+0x374>
  40d35c:	e1d720b2 	ldrh	r2, [r7, #2]
  40d360:	e59f3114 	ldr	r3, [pc, #276]	; 40d47c <cvPtr1D+0x3e0>
  40d364:	e1530802 	cmp	r3, r2, lsl #16
  40d368:	1a000028 	bne	40d410 <cvPtr1D+0x374>
  40d36c:	e5974004 	ldr	r4, [r7, #4]
  40d370:	e3540001 	cmp	r4, #1
  40d374:	1a000008 	bne	40d39c <cvPtr1D+0x300>
  40d378:	e3a03000 	mov	r3, #0
  40d37c:	e58d3000 	str	r3, [sp]
  40d380:	e1a00007 	mov	r0, r7
  40d384:	e28d100c 	add	r1, sp, #12
  40d388:	e1a02009 	mov	r2, r9
  40d38c:	e3a03001 	mov	r3, #1
  40d390:	ebfff59f 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40d394:	e1a09000 	mov	r9, r0
  40d398:	ea000028 	b	40d440 <cvPtr1D+0x3a4>
  40d39c:	e1a00104 	lsl	r0, r4, #2
  40d3a0:	eb003945 	bl	41b8bc <cvAlloc>
  40d3a4:	e1a08000 	mov	r8, r0
  40d3a8:	e2444001 	sub	r4, r4, #1
  40d3ac:	ea00000a 	b	40d3dc <cvPtr1D+0x340>
  40d3b0:	e59d500c 	ldr	r5, [sp, #12]
  40d3b4:	e0873104 	add	r3, r7, r4, lsl #2
  40d3b8:	e5936024 	ldr	r6, [r3, #36]	; 0x24
  40d3bc:	e1a00005 	mov	r0, r5
  40d3c0:	e1a01006 	mov	r1, r6
  40d3c4:	fa00917a 	blx	4319b4 <__aeabi_idiv>
  40d3c8:	e0060690 	mul	r6, r0, r6
  40d3cc:	e0665005 	rsb	r5, r6, r5
  40d3d0:	e7885104 	str	r5, [r8, r4, lsl #2]
  40d3d4:	e58d000c 	str	r0, [sp, #12]
  40d3d8:	e2444001 	sub	r4, r4, #1
  40d3dc:	e3540000 	cmp	r4, #0
  40d3e0:	aafffff2 	bge	40d3b0 <cvPtr1D+0x314>
  40d3e4:	e3a03000 	mov	r3, #0
  40d3e8:	e58d3000 	str	r3, [sp]
  40d3ec:	e1a00007 	mov	r0, r7
  40d3f0:	e1a01008 	mov	r1, r8
  40d3f4:	e1a02009 	mov	r2, r9
  40d3f8:	e3a03001 	mov	r3, #1
  40d3fc:	ebfff584 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40d400:	e1a09000 	mov	r9, r0
  40d404:	e1a00008 	mov	r0, r8
  40d408:	eb00395d 	bl	41b984 <cvFree_>
  40d40c:	ea00000b 	b	40d440 <cvPtr1D+0x3a4>
  40d410:	e59f3068 	ldr	r3, [pc, #104]	; 40d480 <cvPtr1D+0x3e4>
  40d414:	e58d3000 	str	r3, [sp]
  40d418:	e3e00004 	mvn	r0, #4
  40d41c:	e59f1060 	ldr	r1, [pc, #96]	; 40d484 <cvPtr1D+0x3e8>
  40d420:	e08f1001 	add	r1, pc, r1
  40d424:	e2811e1d 	add	r1, r1, #464	; 0x1d0
  40d428:	e59f2058 	ldr	r2, [pc, #88]	; 40d488 <cvPtr1D+0x3ec>
  40d42c:	e08f2002 	add	r2, pc, r2
  40d430:	e59f3054 	ldr	r3, [pc, #84]	; 40d48c <cvPtr1D+0x3f0>
  40d434:	e08f3003 	add	r3, pc, r3
  40d438:	eb00159a 	bl	412aa8 <cvError>
  40d43c:	e3a09000 	mov	r9, #0
  40d440:	e1a00009 	mov	r0, r9
  40d444:	e28dd014 	add	sp, sp, #20
  40d448:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  40d44c:	e12fff1e 	bx	lr
  40d450:	42420000 	.word	0x42420000
  40d454:	0000ba50 	.word	0x0000ba50
  40d458:	0000077d 	.word	0x0000077d
  40d45c:	1fbf3338 	.word	0x1fbf3338
  40d460:	00032658 	.word	0x00032658
  40d464:	0002fe7c 	.word	0x0002fe7c
  40d468:	42430000 	.word	0x42430000
  40d46c:	000007a2 	.word	0x000007a2
  40d470:	1fbf31f0 	.word	0x1fbf31f0
  40d474:	00032510 	.word	0x00032510
  40d478:	0002fd34 	.word	0x0002fd34
  40d47c:	42440000 	.word	0x42440000
  40d480:	000007ce 	.word	0x000007ce
  40d484:	1fbf3070 	.word	0x1fbf3070
  40d488:	0002fedc 	.word	0x0002fedc
  40d48c:	0002fbb4 	.word	0x0002fbb4

0040d490 <cvPtr3D>:
  40d490:	e92d4030 	push	{r4, r5, lr}
  40d494:	e24dd01c 	sub	sp, sp, #28
  40d498:	e3500000 	cmp	r0, #0
  40d49c:	0a00002d 	beq	40d558 <cvPtr3D+0xc8>
  40d4a0:	e590e000 	ldr	lr, [r0]
  40d4a4:	e1a0482e 	lsr	r4, lr, #16
  40d4a8:	e59fc124 	ldr	ip, [pc, #292]	; 40d5d4 <cvPtr3D+0x144>
  40d4ac:	e15c0804 	cmp	ip, r4, lsl #16
  40d4b0:	1a000028 	bne	40d558 <cvPtr3D+0xc8>
  40d4b4:	e590c010 	ldr	ip, [r0, #16]
  40d4b8:	e35c0000 	cmp	ip, #0
  40d4bc:	0a000025 	beq	40d558 <cvPtr3D+0xc8>
  40d4c0:	e5904004 	ldr	r4, [r0, #4]
  40d4c4:	e3540003 	cmp	r4, #3
  40d4c8:	1a000008 	bne	40d4f0 <cvPtr3D+0x60>
  40d4cc:	e5904014 	ldr	r4, [r0, #20]
  40d4d0:	e1510004 	cmp	r1, r4
  40d4d4:	2a000005 	bcs	40d4f0 <cvPtr3D+0x60>
  40d4d8:	e590401c 	ldr	r4, [r0, #28]
  40d4dc:	e1520004 	cmp	r2, r4
  40d4e0:	2a000002 	bcs	40d4f0 <cvPtr3D+0x60>
  40d4e4:	e5904024 	ldr	r4, [r0, #36]	; 0x24
  40d4e8:	e1530004 	cmp	r3, r4
  40d4ec:	3a00000c 	bcc	40d524 <cvPtr3D+0x94>
  40d4f0:	e59f30e0 	ldr	r3, [pc, #224]	; 40d5d8 <cvPtr3D+0x148>
  40d4f4:	e58d3000 	str	r3, [sp]
  40d4f8:	e3e000d2 	mvn	r0, #210	; 0xd2
  40d4fc:	e59f10d8 	ldr	r1, [pc, #216]	; 40d5dc <cvPtr3D+0x14c>
  40d500:	e08f1001 	add	r1, pc, r1
  40d504:	e2811f76 	add	r1, r1, #472	; 0x1d8
  40d508:	e59f20d0 	ldr	r2, [pc, #208]	; 40d5e0 <cvPtr3D+0x150>
  40d50c:	e08f2002 	add	r2, pc, r2
  40d510:	e59f30cc 	ldr	r3, [pc, #204]	; 40d5e4 <cvPtr3D+0x154>
  40d514:	e08f3003 	add	r3, pc, r3
  40d518:	eb001562 	bl	412aa8 <cvError>
  40d51c:	e3a00000 	mov	r0, #0
  40d520:	ea000028 	b	40d5c8 <cvPtr3D+0x138>
  40d524:	e5904018 	ldr	r4, [r0, #24]
  40d528:	e5905020 	ldr	r5, [r0, #32]
  40d52c:	e0020295 	mul	r2, r5, r2
  40d530:	e0212194 	mla	r1, r4, r1, r2
  40d534:	e5904028 	ldr	r4, [r0, #40]	; 0x28
  40d538:	e0201394 	mla	r0, r4, r3, r1
  40d53c:	e08c0000 	add	r0, ip, r0
  40d540:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
  40d544:	e3530000 	cmp	r3, #0
  40d548:	11a0eb8e 	lslne	lr, lr, #23
  40d54c:	11a0ebae 	lsrne	lr, lr, #23
  40d550:	1583e000 	strne	lr, [r3]
  40d554:	ea00001b 	b	40d5c8 <cvPtr3D+0x138>
  40d558:	e3500000 	cmp	r0, #0
  40d55c:	0a00000d 	beq	40d598 <cvPtr3D+0x108>
  40d560:	e1d0e0b2 	ldrh	lr, [r0, #2]
  40d564:	e59fc07c 	ldr	ip, [pc, #124]	; 40d5e8 <cvPtr3D+0x158>
  40d568:	e15c080e 	cmp	ip, lr, lsl #16
  40d56c:	1a000009 	bne	40d598 <cvPtr3D+0x108>
  40d570:	e58d100c 	str	r1, [sp, #12]
  40d574:	e58d2010 	str	r2, [sp, #16]
  40d578:	e58d3014 	str	r3, [sp, #20]
  40d57c:	e3a03000 	mov	r3, #0
  40d580:	e58d3000 	str	r3, [sp]
  40d584:	e28d100c 	add	r1, sp, #12
  40d588:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
  40d58c:	e3a03001 	mov	r3, #1
  40d590:	ebfff51f 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40d594:	ea00000b 	b	40d5c8 <cvPtr3D+0x138>
  40d598:	e59f304c 	ldr	r3, [pc, #76]	; 40d5ec <cvPtr3D+0x15c>
  40d59c:	e58d3000 	str	r3, [sp]
  40d5a0:	e3e00004 	mvn	r0, #4
  40d5a4:	e59f1044 	ldr	r1, [pc, #68]	; 40d5f0 <cvPtr3D+0x160>
  40d5a8:	e08f1001 	add	r1, pc, r1
  40d5ac:	e2811f76 	add	r1, r1, #472	; 0x1d8
  40d5b0:	e59f203c 	ldr	r2, [pc, #60]	; 40d5f4 <cvPtr3D+0x164>
  40d5b4:	e08f2002 	add	r2, pc, r2
  40d5b8:	e59f3038 	ldr	r3, [pc, #56]	; 40d5f8 <cvPtr3D+0x168>
  40d5bc:	e08f3003 	add	r3, pc, r3
  40d5c0:	eb001538 	bl	412aa8 <cvError>
  40d5c4:	e3a00000 	mov	r0, #0
  40d5c8:	e28dd01c 	add	sp, sp, #28
  40d5cc:	e8bd4030 	pop	{r4, r5, lr}
  40d5d0:	e12fff1e 	bx	lr
  40d5d4:	42430000 	.word	0x42430000
  40d5d8:	0000084f 	.word	0x0000084f
  40d5dc:	1fbf2f90 	.word	0x1fbf2f90
  40d5e0:	000322b0 	.word	0x000322b0
  40d5e4:	0002fad4 	.word	0x0002fad4
  40d5e8:	42440000 	.word	0x42440000
  40d5ec:	0000085e 	.word	0x0000085e
  40d5f0:	1fbf2ee8 	.word	0x1fbf2ee8
  40d5f4:	0002fd54 	.word	0x0002fd54
  40d5f8:	0002fa2c 	.word	0x0002fa2c

0040d5fc <cvPtrND>:
  40d5fc:	e92d4030 	push	{r4, r5, lr}
  40d600:	e24dd00c 	sub	sp, sp, #12
  40d604:	e251c000 	subs	ip, r1, #0
  40d608:	1a00000c 	bne	40d640 <cvPtrND+0x44>
  40d60c:	e59f31a8 	ldr	r3, [pc, #424]	; 40d7bc <cvPtrND+0x1c0>
  40d610:	e58d3000 	str	r3, [sp]
  40d614:	e3e0001a 	mvn	r0, #26
  40d618:	e59f11a0 	ldr	r1, [pc, #416]	; 40d7c0 <cvPtrND+0x1c4>
  40d61c:	e08f1001 	add	r1, pc, r1
  40d620:	e2811e1e 	add	r1, r1, #480	; 0x1e0
  40d624:	e59f2198 	ldr	r2, [pc, #408]	; 40d7c4 <cvPtrND+0x1c8>
  40d628:	e08f2002 	add	r2, pc, r2
  40d62c:	e59f3194 	ldr	r3, [pc, #404]	; 40d7c8 <cvPtrND+0x1cc>
  40d630:	e08f3003 	add	r3, pc, r3
  40d634:	eb00151b 	bl	412aa8 <cvError>
  40d638:	e3a04000 	mov	r4, #0
  40d63c:	ea00005a 	b	40d7ac <cvPtrND+0x1b0>
  40d640:	e1a0e002 	mov	lr, r2
  40d644:	e3500000 	cmp	r0, #0
  40d648:	0a00000a 	beq	40d678 <cvPtrND+0x7c>
  40d64c:	e1d010b2 	ldrh	r1, [r0, #2]
  40d650:	e59f2174 	ldr	r2, [pc, #372]	; 40d7cc <cvPtrND+0x1d0>
  40d654:	e1520801 	cmp	r2, r1, lsl #16
  40d658:	1a000006 	bne	40d678 <cvPtrND+0x7c>
  40d65c:	e59d2018 	ldr	r2, [sp, #24]
  40d660:	e58d2000 	str	r2, [sp]
  40d664:	e1a0100c 	mov	r1, ip
  40d668:	e1a0200e 	mov	r2, lr
  40d66c:	ebfff4e8 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40d670:	e1a04000 	mov	r4, r0
  40d674:	ea00004c 	b	40d7ac <cvPtrND+0x1b0>
  40d678:	e3500000 	cmp	r0, #0
  40d67c:	0a000027 	beq	40d720 <cvPtrND+0x124>
  40d680:	e5905000 	ldr	r5, [r0]
  40d684:	e1a02825 	lsr	r2, r5, #16
  40d688:	e59f3140 	ldr	r3, [pc, #320]	; 40d7d0 <cvPtrND+0x1d4>
  40d68c:	e1530802 	cmp	r3, r2, lsl #16
  40d690:	1a000022 	bne	40d720 <cvPtrND+0x124>
  40d694:	e5904010 	ldr	r4, [r0, #16]
  40d698:	e3540000 	cmp	r4, #0
  40d69c:	1a000016 	bne	40d6fc <cvPtrND+0x100>
  40d6a0:	ea00001e 	b	40d720 <cvPtrND+0x124>
  40d6a4:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
  40d6a8:	e0801183 	add	r1, r0, r3, lsl #3
  40d6ac:	e5911014 	ldr	r1, [r1, #20]
  40d6b0:	e1520001 	cmp	r2, r1
  40d6b4:	3a00000b 	bcc	40d6e8 <cvPtrND+0xec>
  40d6b8:	e3a03d22 	mov	r3, #2176	; 0x880
  40d6bc:	e58d3000 	str	r3, [sp]
  40d6c0:	e3e000d2 	mvn	r0, #210	; 0xd2
  40d6c4:	e59f1108 	ldr	r1, [pc, #264]	; 40d7d4 <cvPtrND+0x1d8>
  40d6c8:	e08f1001 	add	r1, pc, r1
  40d6cc:	e2811e1e 	add	r1, r1, #480	; 0x1e0
  40d6d0:	e59f2100 	ldr	r2, [pc, #256]	; 40d7d8 <cvPtrND+0x1dc>
  40d6d4:	e08f2002 	add	r2, pc, r2
  40d6d8:	e59f30fc 	ldr	r3, [pc, #252]	; 40d7dc <cvPtrND+0x1e0>
  40d6dc:	e08f3003 	add	r3, pc, r3
  40d6e0:	eb0014f0 	bl	412aa8 <cvError>
  40d6e4:	ea000030 	b	40d7ac <cvPtrND+0x1b0>
  40d6e8:	e0801183 	add	r1, r0, r3, lsl #3
  40d6ec:	e5911018 	ldr	r1, [r1, #24]
  40d6f0:	e0244291 	mla	r4, r1, r2, r4
  40d6f4:	e2833001 	add	r3, r3, #1
  40d6f8:	ea000000 	b	40d700 <cvPtrND+0x104>
  40d6fc:	e3a03000 	mov	r3, #0
  40d700:	e5902004 	ldr	r2, [r0, #4]
  40d704:	e1520003 	cmp	r2, r3
  40d708:	caffffe5 	bgt	40d6a4 <cvPtrND+0xa8>
  40d70c:	e35e0000 	cmp	lr, #0
  40d710:	11a05b85 	lslne	r5, r5, #23
  40d714:	11a05ba5 	lsrne	r5, r5, #23
  40d718:	158e5000 	strne	r5, [lr]
  40d71c:	ea000022 	b	40d7ac <cvPtrND+0x1b0>
  40d720:	e3500000 	cmp	r0, #0
  40d724:	0a000009 	beq	40d750 <cvPtrND+0x154>
  40d728:	e1d020b2 	ldrh	r2, [r0, #2]
  40d72c:	e59f30ac 	ldr	r3, [pc, #172]	; 40d7e0 <cvPtrND+0x1e4>
  40d730:	e1530802 	cmp	r3, r2, lsl #16
  40d734:	1a000005 	bne	40d750 <cvPtrND+0x154>
  40d738:	e5903018 	ldr	r3, [r0, #24]
  40d73c:	e3530000 	cmp	r3, #0
  40d740:	da000002 	ble	40d750 <cvPtrND+0x154>
  40d744:	e5903014 	ldr	r3, [r0, #20]
  40d748:	e3530000 	cmp	r3, #0
  40d74c:	ca000004 	bgt	40d764 <cvPtrND+0x168>
  40d750:	e3500000 	cmp	r0, #0
  40d754:	0a000008 	beq	40d77c <cvPtrND+0x180>
  40d758:	e5903000 	ldr	r3, [r0]
  40d75c:	e3530070 	cmp	r3, #112	; 0x70
  40d760:	1a000005 	bne	40d77c <cvPtrND+0x180>
  40d764:	e59c1000 	ldr	r1, [ip]
  40d768:	e59c2004 	ldr	r2, [ip, #4]
  40d76c:	e1a0300e 	mov	r3, lr
  40d770:	ebfffc92 	bl	40c9c0 <cvPtr2D>
  40d774:	e1a04000 	mov	r4, r0
  40d778:	ea00000b 	b	40d7ac <cvPtrND+0x1b0>
  40d77c:	e59f3060 	ldr	r3, [pc, #96]	; 40d7e4 <cvPtrND+0x1e8>
  40d780:	e58d3000 	str	r3, [sp]
  40d784:	e3e00004 	mvn	r0, #4
  40d788:	e59f1058 	ldr	r1, [pc, #88]	; 40d7e8 <cvPtrND+0x1ec>
  40d78c:	e08f1001 	add	r1, pc, r1
  40d790:	e2811e1e 	add	r1, r1, #480	; 0x1e0
  40d794:	e59f2050 	ldr	r2, [pc, #80]	; 40d7ec <cvPtrND+0x1f0>
  40d798:	e08f2002 	add	r2, pc, r2
  40d79c:	e59f304c 	ldr	r3, [pc, #76]	; 40d7f0 <cvPtrND+0x1f4>
  40d7a0:	e08f3003 	add	r3, pc, r3
  40d7a4:	eb0014bf 	bl	412aa8 <cvError>
  40d7a8:	e3a04000 	mov	r4, #0
  40d7ac:	e1a00004 	mov	r0, r4
  40d7b0:	e28dd00c 	add	sp, sp, #12
  40d7b4:	e8bd4030 	pop	{r4, r5, lr}
  40d7b8:	e12fff1e 	bx	lr
  40d7bc:	00000872 	.word	0x00000872
  40d7c0:	1fbf2e74 	.word	0x1fbf2e74
  40d7c4:	0002fe40 	.word	0x0002fe40
  40d7c8:	0002f9b8 	.word	0x0002f9b8
  40d7cc:	42440000 	.word	0x42440000
  40d7d0:	42430000 	.word	0x42430000
  40d7d4:	1fbf2dc8 	.word	0x1fbf2dc8
  40d7d8:	000320e8 	.word	0x000320e8
  40d7dc:	0002f90c 	.word	0x0002f90c
  40d7e0:	42420000 	.word	0x42420000
  40d7e4:	0000088a 	.word	0x0000088a
  40d7e8:	1fbf2d04 	.word	0x1fbf2d04
  40d7ec:	0002fb70 	.word	0x0002fb70
  40d7f0:	0002f848 	.word	0x0002f848

0040d7f4 <cvGet1D>:
  40d7f4:	e92d4010 	push	{r4, lr}
  40d7f8:	e24dd018 	sub	sp, sp, #24
  40d7fc:	e1a04000 	mov	r4, r0
  40d800:	e58d200c 	str	r2, [sp, #12]
  40d804:	e3a02000 	mov	r2, #0
  40d808:	e3a03000 	mov	r3, #0
  40d80c:	e880000c 	stm	r0, {r2, r3}
  40d810:	e5802008 	str	r2, [r0, #8]
  40d814:	e580300c 	str	r3, [r0, #12]
  40d818:	e5802010 	str	r2, [r0, #16]
  40d81c:	e5803014 	str	r3, [r0, #20]
  40d820:	e5802018 	str	r2, [r0, #24]
  40d824:	e580301c 	str	r3, [r0, #28]
  40d828:	e3a03000 	mov	r3, #0
  40d82c:	e58d3014 	str	r3, [sp, #20]
  40d830:	e2510000 	subs	r0, r1, #0
  40d834:	0a000030 	beq	40d8fc <cvGet1D+0x108>
  40d838:	e5903000 	ldr	r3, [r0]
  40d83c:	e1a01823 	lsr	r1, r3, #16
  40d840:	e59f2118 	ldr	r2, [pc, #280]	; 40d960 <cvGet1D+0x16c>
  40d844:	e1520801 	cmp	r2, r1, lsl #16
  40d848:	1a00002b 	bne	40d8fc <cvGet1D+0x108>
  40d84c:	e5901018 	ldr	r1, [r0, #24]
  40d850:	e3510000 	cmp	r1, #0
  40d854:	da000028 	ble	40d8fc <cvGet1D+0x108>
  40d858:	e590c014 	ldr	ip, [r0, #20]
  40d85c:	e35c0000 	cmp	ip, #0
  40d860:	da000025 	ble	40d8fc <cvGet1D+0x108>
  40d864:	e590e010 	ldr	lr, [r0, #16]
  40d868:	e35e0000 	cmp	lr, #0
  40d86c:	0a000022 	beq	40d8fc <cvGet1D+0x108>
  40d870:	e3130901 	tst	r3, #16384	; 0x4000
  40d874:	0a000020 	beq	40d8fc <cvGet1D+0x108>
  40d878:	e1a03b83 	lsl	r3, r3, #23
  40d87c:	e1a03ba3 	lsr	r3, r3, #23
  40d880:	e58d3014 	str	r3, [sp, #20]
  40d884:	e1a021a3 	lsr	r2, r3, #3
  40d888:	e2822001 	add	r2, r2, #1
  40d88c:	e2033007 	and	r3, r3, #7
  40d890:	e1a03083 	lsl	r3, r3, #1
  40d894:	e59f00c8 	ldr	r0, [pc, #200]	; 40d964 <cvGet1D+0x170>
  40d898:	e1a03330 	lsr	r3, r0, r3
  40d89c:	e2030003 	and	r0, r3, #3
  40d8a0:	e1a02012 	lsl	r2, r2, r0
  40d8a4:	e59d000c 	ldr	r0, [sp, #12]
  40d8a8:	e081300c 	add	r3, r1, ip
  40d8ac:	e2433001 	sub	r3, r3, #1
  40d8b0:	e1500003 	cmp	r0, r3
  40d8b4:	3a00000e 	bcc	40d8f4 <cvGet1D+0x100>
  40d8b8:	e001019c 	mul	r1, ip, r1
  40d8bc:	e1500001 	cmp	r0, r1
  40d8c0:	3a00000b 	bcc	40d8f4 <cvGet1D+0x100>
  40d8c4:	e59f309c 	ldr	r3, [pc, #156]	; 40d968 <cvGet1D+0x174>
  40d8c8:	e58d3000 	str	r3, [sp]
  40d8cc:	e3e000d2 	mvn	r0, #210	; 0xd2
  40d8d0:	e59f1094 	ldr	r1, [pc, #148]	; 40d96c <cvGet1D+0x178>
  40d8d4:	e08f1001 	add	r1, pc, r1
  40d8d8:	e2811f7a 	add	r1, r1, #488	; 0x1e8
  40d8dc:	e59f208c 	ldr	r2, [pc, #140]	; 40d970 <cvGet1D+0x17c>
  40d8e0:	e08f2002 	add	r2, pc, r2
  40d8e4:	e59f3088 	ldr	r3, [pc, #136]	; 40d974 <cvGet1D+0x180>
  40d8e8:	e08f3003 	add	r3, pc, r3
  40d8ec:	eb00146d 	bl	412aa8 <cvError>
  40d8f0:	ea000016 	b	40d950 <cvGet1D+0x15c>
  40d8f4:	e020e092 	mla	r0, r2, r0, lr
  40d8f8:	ea000011 	b	40d944 <cvGet1D+0x150>
  40d8fc:	e3500000 	cmp	r0, #0
  40d900:	0a000006 	beq	40d920 <cvGet1D+0x12c>
  40d904:	e1d020b2 	ldrh	r2, [r0, #2]
  40d908:	e59f3068 	ldr	r3, [pc, #104]	; 40d978 <cvGet1D+0x184>
  40d90c:	e1530802 	cmp	r3, r2, lsl #16
  40d910:	1a000002 	bne	40d920 <cvGet1D+0x12c>
  40d914:	e5903004 	ldr	r3, [r0, #4]
  40d918:	e3530001 	cmp	r3, #1
  40d91c:	da000003 	ble	40d930 <cvGet1D+0x13c>
  40d920:	e59d100c 	ldr	r1, [sp, #12]
  40d924:	e28d2014 	add	r2, sp, #20
  40d928:	ebfffddb 	bl	40d09c <cvPtr1D>
  40d92c:	ea000004 	b	40d944 <cvGet1D+0x150>
  40d930:	e3a03000 	mov	r3, #0
  40d934:	e58d3000 	str	r3, [sp]
  40d938:	e28d100c 	add	r1, sp, #12
  40d93c:	e28d2014 	add	r2, sp, #20
  40d940:	ebfff433 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40d944:	e59d1014 	ldr	r1, [sp, #20]
  40d948:	e1a02004 	mov	r2, r4
  40d94c:	ebfffb84 	bl	40c764 <cvRawDataToScalar>
  40d950:	e1a00004 	mov	r0, r4
  40d954:	e28dd018 	add	sp, sp, #24
  40d958:	e8bd4010 	pop	{r4, lr}
  40d95c:	e12fff1e 	bx	lr
  40d960:	42420000 	.word	0x42420000
  40d964:	0000ba50 	.word	0x0000ba50
  40d968:	000008aa 	.word	0x000008aa
  40d96c:	1fbf2bbc 	.word	0x1fbf2bbc
  40d970:	00031edc 	.word	0x00031edc
  40d974:	0002f700 	.word	0x0002f700
  40d978:	42440000 	.word	0x42440000

0040d97c <cvGet2D>:
  40d97c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  40d980:	e24dd01c 	sub	sp, sp, #28
  40d984:	e1a04000 	mov	r4, r0
  40d988:	e3a06000 	mov	r6, #0
  40d98c:	e3a07000 	mov	r7, #0
  40d990:	e88000c0 	stm	r0, {r6, r7}
  40d994:	e5806008 	str	r6, [r0, #8]
  40d998:	e580700c 	str	r7, [r0, #12]
  40d99c:	e5806010 	str	r6, [r0, #16]
  40d9a0:	e5807014 	str	r7, [r0, #20]
  40d9a4:	e5806018 	str	r6, [r0, #24]
  40d9a8:	e580701c 	str	r7, [r0, #28]
  40d9ac:	e3a00000 	mov	r0, #0
  40d9b0:	e58d000c 	str	r0, [sp, #12]
  40d9b4:	e2510000 	subs	r0, r1, #0
  40d9b8:	0a00002d 	beq	40da74 <cvGet2D+0xf8>
  40d9bc:	e5901000 	ldr	r1, [r0]
  40d9c0:	e1a0e821 	lsr	lr, r1, #16
  40d9c4:	e59fc10c 	ldr	ip, [pc, #268]	; 40dad8 <cvGet2D+0x15c>
  40d9c8:	e15c080e 	cmp	ip, lr, lsl #16
  40d9cc:	1a000028 	bne	40da74 <cvGet2D+0xf8>
  40d9d0:	e590e018 	ldr	lr, [r0, #24]
  40d9d4:	e35e0000 	cmp	lr, #0
  40d9d8:	da000025 	ble	40da74 <cvGet2D+0xf8>
  40d9dc:	e5905014 	ldr	r5, [r0, #20]
  40d9e0:	e3550000 	cmp	r5, #0
  40d9e4:	da000022 	ble	40da74 <cvGet2D+0xf8>
  40d9e8:	e590c010 	ldr	ip, [r0, #16]
  40d9ec:	e35c0000 	cmp	ip, #0
  40d9f0:	0a00001f 	beq	40da74 <cvGet2D+0xf8>
  40d9f4:	e1520005 	cmp	r2, r5
  40d9f8:	2a000001 	bcs	40da04 <cvGet2D+0x88>
  40d9fc:	e153000e 	cmp	r3, lr
  40da00:	3a00000b 	bcc	40da34 <cvGet2D+0xb8>
  40da04:	e59f30d0 	ldr	r3, [pc, #208]	; 40dadc <cvGet2D+0x160>
  40da08:	e58d3000 	str	r3, [sp]
  40da0c:	e3e000d2 	mvn	r0, #210	; 0xd2
  40da10:	e59f10c8 	ldr	r1, [pc, #200]	; 40dae0 <cvGet2D+0x164>
  40da14:	e08f1001 	add	r1, pc, r1
  40da18:	e2811e1f 	add	r1, r1, #496	; 0x1f0
  40da1c:	e59f20c0 	ldr	r2, [pc, #192]	; 40dae4 <cvGet2D+0x168>
  40da20:	e08f2002 	add	r2, pc, r2
  40da24:	e59f30bc 	ldr	r3, [pc, #188]	; 40dae8 <cvGet2D+0x16c>
  40da28:	e08f3003 	add	r3, pc, r3
  40da2c:	eb00141d 	bl	412aa8 <cvError>
  40da30:	ea000024 	b	40dac8 <cvGet2D+0x14c>
  40da34:	e1a01b81 	lsl	r1, r1, #23
  40da38:	e1a01ba1 	lsr	r1, r1, #23
  40da3c:	e58d100c 	str	r1, [sp, #12]
  40da40:	e5900004 	ldr	r0, [r0, #4]
  40da44:	e1a0e1a1 	lsr	lr, r1, #3
  40da48:	e28ee001 	add	lr, lr, #1
  40da4c:	e2011007 	and	r1, r1, #7
  40da50:	e1a01081 	lsl	r1, r1, #1
  40da54:	e59f5090 	ldr	r5, [pc, #144]	; 40daec <cvGet2D+0x170>
  40da58:	e1a01135 	lsr	r1, r5, r1
  40da5c:	e2011003 	and	r1, r1, #3
  40da60:	e1a0111e 	lsl	r1, lr, r1
  40da64:	e0030391 	mul	r3, r1, r3
  40da68:	e0203092 	mla	r0, r2, r0, r3
  40da6c:	e08c0000 	add	r0, ip, r0
  40da70:	ea000011 	b	40dabc <cvGet2D+0x140>
  40da74:	e3500000 	cmp	r0, #0
  40da78:	0a000003 	beq	40da8c <cvGet2D+0x110>
  40da7c:	e1d0c0b2 	ldrh	ip, [r0, #2]
  40da80:	e59f1068 	ldr	r1, [pc, #104]	; 40daf0 <cvGet2D+0x174>
  40da84:	e151080c 	cmp	r1, ip, lsl #16
  40da88:	0a000004 	beq	40daa0 <cvGet2D+0x124>
  40da8c:	e1a01002 	mov	r1, r2
  40da90:	e1a02003 	mov	r2, r3
  40da94:	e28d300c 	add	r3, sp, #12
  40da98:	ebfffbc8 	bl	40c9c0 <cvPtr2D>
  40da9c:	ea000006 	b	40dabc <cvGet2D+0x140>
  40daa0:	e58d2010 	str	r2, [sp, #16]
  40daa4:	e58d3014 	str	r3, [sp, #20]
  40daa8:	e3a03000 	mov	r3, #0
  40daac:	e58d3000 	str	r3, [sp]
  40dab0:	e28d1010 	add	r1, sp, #16
  40dab4:	e28d200c 	add	r2, sp, #12
  40dab8:	ebfff3d5 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40dabc:	e59d100c 	ldr	r1, [sp, #12]
  40dac0:	e1a02004 	mov	r2, r4
  40dac4:	ebfffb26 	bl	40c764 <cvRawDataToScalar>
  40dac8:	e1a00004 	mov	r0, r4
  40dacc:	e28dd01c 	add	sp, sp, #28
  40dad0:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  40dad4:	e12fff1e 	bx	lr
  40dad8:	42420000 	.word	0x42420000
  40dadc:	000008ce 	.word	0x000008ce
  40dae0:	1fbf2a7c 	.word	0x1fbf2a7c
  40dae4:	00031d9c 	.word	0x00031d9c
  40dae8:	0002f5c0 	.word	0x0002f5c0
  40daec:	0000ba50 	.word	0x0000ba50
  40daf0:	42440000 	.word	0x42440000

0040daf4 <cvGet3D>:
  40daf4:	e92d40d0 	push	{r4, r6, r7, lr}
  40daf8:	e24dd018 	sub	sp, sp, #24
  40dafc:	e1a04000 	mov	r4, r0
  40db00:	e3a06000 	mov	r6, #0
  40db04:	e3a07000 	mov	r7, #0
  40db08:	e88000c0 	stm	r0, {r6, r7}
  40db0c:	e5806008 	str	r6, [r0, #8]
  40db10:	e580700c 	str	r7, [r0, #12]
  40db14:	e5806010 	str	r6, [r0, #16]
  40db18:	e5807014 	str	r7, [r0, #20]
  40db1c:	e5806018 	str	r6, [r0, #24]
  40db20:	e580701c 	str	r7, [r0, #28]
  40db24:	e3a00000 	mov	r0, #0
  40db28:	e58d0008 	str	r0, [sp, #8]
  40db2c:	e2510000 	subs	r0, r1, #0
  40db30:	0a000003 	beq	40db44 <cvGet3D+0x50>
  40db34:	e1d0c0b2 	ldrh	ip, [r0, #2]
  40db38:	e59f1060 	ldr	r1, [pc, #96]	; 40dba0 <cvGet3D+0xac>
  40db3c:	e151080c 	cmp	r1, ip, lsl #16
  40db40:	0a000006 	beq	40db60 <cvGet3D+0x6c>
  40db44:	e28d1008 	add	r1, sp, #8
  40db48:	e58d1000 	str	r1, [sp]
  40db4c:	e1a01002 	mov	r1, r2
  40db50:	e1a02003 	mov	r2, r3
  40db54:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
  40db58:	ebfffe4c 	bl	40d490 <cvPtr3D>
  40db5c:	ea000008 	b	40db84 <cvGet3D+0x90>
  40db60:	e58d200c 	str	r2, [sp, #12]
  40db64:	e58d3010 	str	r3, [sp, #16]
  40db68:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
  40db6c:	e58d3014 	str	r3, [sp, #20]
  40db70:	e3a03000 	mov	r3, #0
  40db74:	e58d3000 	str	r3, [sp]
  40db78:	e28d100c 	add	r1, sp, #12
  40db7c:	e28d2008 	add	r2, sp, #8
  40db80:	ebfff3a3 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40db84:	e59d1008 	ldr	r1, [sp, #8]
  40db88:	e1a02004 	mov	r2, r4
  40db8c:	ebfffaf4 	bl	40c764 <cvRawDataToScalar>
  40db90:	e1a00004 	mov	r0, r4
  40db94:	e28dd018 	add	sp, sp, #24
  40db98:	e8bd40d0 	pop	{r4, r6, r7, lr}
  40db9c:	e12fff1e 	bx	lr
  40dba0:	42440000 	.word	0x42440000

0040dba4 <cvGetND>:
  40dba4:	e92d40d0 	push	{r4, r6, r7, lr}
  40dba8:	e24dd010 	sub	sp, sp, #16
  40dbac:	e1a04000 	mov	r4, r0
  40dbb0:	e3a06000 	mov	r6, #0
  40dbb4:	e3a07000 	mov	r7, #0
  40dbb8:	e88000c0 	stm	r0, {r6, r7}
  40dbbc:	e5806008 	str	r6, [r0, #8]
  40dbc0:	e580700c 	str	r7, [r0, #12]
  40dbc4:	e5806010 	str	r6, [r0, #16]
  40dbc8:	e5807014 	str	r7, [r0, #20]
  40dbcc:	e5806018 	str	r6, [r0, #24]
  40dbd0:	e580701c 	str	r7, [r0, #28]
  40dbd4:	e3a03000 	mov	r3, #0
  40dbd8:	e58d300c 	str	r3, [sp, #12]
  40dbdc:	e2510000 	subs	r0, r1, #0
  40dbe0:	0a000003 	beq	40dbf4 <cvGetND+0x50>
  40dbe4:	e1d010b2 	ldrh	r1, [r0, #2]
  40dbe8:	e59f3050 	ldr	r3, [pc, #80]	; 40dc40 <cvGetND+0x9c>
  40dbec:	e1530801 	cmp	r3, r1, lsl #16
  40dbf0:	0a000006 	beq	40dc10 <cvGetND+0x6c>
  40dbf4:	e3a03000 	mov	r3, #0
  40dbf8:	e58d3000 	str	r3, [sp]
  40dbfc:	e1a01002 	mov	r1, r2
  40dc00:	e28d200c 	add	r2, sp, #12
  40dc04:	e3a03001 	mov	r3, #1
  40dc08:	ebfffe7b 	bl	40d5fc <cvPtrND>
  40dc0c:	ea000004 	b	40dc24 <cvGetND+0x80>
  40dc10:	e3a03000 	mov	r3, #0
  40dc14:	e58d3000 	str	r3, [sp]
  40dc18:	e1a01002 	mov	r1, r2
  40dc1c:	e28d200c 	add	r2, sp, #12
  40dc20:	ebfff37b 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40dc24:	e59d100c 	ldr	r1, [sp, #12]
  40dc28:	e1a02004 	mov	r2, r4
  40dc2c:	ebfffacc 	bl	40c764 <cvRawDataToScalar>
  40dc30:	e1a00004 	mov	r0, r4
  40dc34:	e28dd010 	add	sp, sp, #16
  40dc38:	e8bd40d0 	pop	{r4, r6, r7, lr}
  40dc3c:	e12fff1e 	bx	lr
  40dc40:	42440000 	.word	0x42440000

0040dc44 <cvGetReal1D>:
  40dc44:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40dc48:	e24dd01c 	sub	sp, sp, #28
  40dc4c:	e58d100c 	str	r1, [sp, #12]
  40dc50:	e3a03000 	mov	r3, #0
  40dc54:	e58d3014 	str	r3, [sp, #20]
  40dc58:	e3500000 	cmp	r0, #0
  40dc5c:	0a000032 	beq	40dd2c <cvGetReal1D+0xe8>
  40dc60:	e5903000 	ldr	r3, [r0]
  40dc64:	e1a01823 	lsr	r1, r3, #16
  40dc68:	e59f2178 	ldr	r2, [pc, #376]	; 40dde8 <cvGetReal1D+0x1a4>
  40dc6c:	e1520801 	cmp	r2, r1, lsl #16
  40dc70:	1a00002d 	bne	40dd2c <cvGetReal1D+0xe8>
  40dc74:	e5901018 	ldr	r1, [r0, #24]
  40dc78:	e3510000 	cmp	r1, #0
  40dc7c:	da00002a 	ble	40dd2c <cvGetReal1D+0xe8>
  40dc80:	e590c014 	ldr	ip, [r0, #20]
  40dc84:	e35c0000 	cmp	ip, #0
  40dc88:	da000027 	ble	40dd2c <cvGetReal1D+0xe8>
  40dc8c:	e590e010 	ldr	lr, [r0, #16]
  40dc90:	e35e0000 	cmp	lr, #0
  40dc94:	0a000024 	beq	40dd2c <cvGetReal1D+0xe8>
  40dc98:	e3130901 	tst	r3, #16384	; 0x4000
  40dc9c:	0a000022 	beq	40dd2c <cvGetReal1D+0xe8>
  40dca0:	e1a03b83 	lsl	r3, r3, #23
  40dca4:	e1a02ba3 	lsr	r2, r3, #23
  40dca8:	e58d2014 	str	r2, [sp, #20]
  40dcac:	e1a031a2 	lsr	r3, r2, #3
  40dcb0:	e2833001 	add	r3, r3, #1
  40dcb4:	e2022007 	and	r2, r2, #7
  40dcb8:	e1a02082 	lsl	r2, r2, #1
  40dcbc:	e59f0128 	ldr	r0, [pc, #296]	; 40ddec <cvGetReal1D+0x1a8>
  40dcc0:	e1a02230 	lsr	r2, r0, r2
  40dcc4:	e2022003 	and	r2, r2, #3
  40dcc8:	e1a03213 	lsl	r3, r3, r2
  40dccc:	e59d000c 	ldr	r0, [sp, #12]
  40dcd0:	e081200c 	add	r2, r1, ip
  40dcd4:	e2422001 	sub	r2, r2, #1
  40dcd8:	e1500002 	cmp	r0, r2
  40dcdc:	3a000010 	bcc	40dd24 <cvGetReal1D+0xe0>
  40dce0:	e001019c 	mul	r1, ip, r1
  40dce4:	e1500001 	cmp	r0, r1
  40dce8:	3a00000d 	bcc	40dd24 <cvGetReal1D+0xe0>
  40dcec:	e59f30fc 	ldr	r3, [pc, #252]	; 40ddf0 <cvGetReal1D+0x1ac>
  40dcf0:	e58d3000 	str	r3, [sp]
  40dcf4:	e3e000d2 	mvn	r0, #210	; 0xd2
  40dcf8:	e59f10f4 	ldr	r1, [pc, #244]	; 40ddf4 <cvGetReal1D+0x1b0>
  40dcfc:	e08f1001 	add	r1, pc, r1
  40dd00:	e2811f7e 	add	r1, r1, #504	; 0x1f8
  40dd04:	e59f20ec 	ldr	r2, [pc, #236]	; 40ddf8 <cvGetReal1D+0x1b4>
  40dd08:	e08f2002 	add	r2, pc, r2
  40dd0c:	e59f30e8 	ldr	r3, [pc, #232]	; 40ddfc <cvGetReal1D+0x1b8>
  40dd10:	e08f3003 	add	r3, pc, r3
  40dd14:	eb001363 	bl	412aa8 <cvError>
  40dd18:	e3a00000 	mov	r0, #0
  40dd1c:	e3a01000 	mov	r1, #0
  40dd20:	ea00002d 	b	40dddc <cvGetReal1D+0x198>
  40dd24:	e020e093 	mla	r0, r3, r0, lr
  40dd28:	ea000011 	b	40dd74 <cvGetReal1D+0x130>
  40dd2c:	e3500000 	cmp	r0, #0
  40dd30:	0a000006 	beq	40dd50 <cvGetReal1D+0x10c>
  40dd34:	e1d020b2 	ldrh	r2, [r0, #2]
  40dd38:	e59f30c0 	ldr	r3, [pc, #192]	; 40de00 <cvGetReal1D+0x1bc>
  40dd3c:	e1530802 	cmp	r3, r2, lsl #16
  40dd40:	1a000002 	bne	40dd50 <cvGetReal1D+0x10c>
  40dd44:	e5903004 	ldr	r3, [r0, #4]
  40dd48:	e3530001 	cmp	r3, #1
  40dd4c:	da000003 	ble	40dd60 <cvGetReal1D+0x11c>
  40dd50:	e59d100c 	ldr	r1, [sp, #12]
  40dd54:	e28d2014 	add	r2, sp, #20
  40dd58:	ebfffccf 	bl	40d09c <cvPtr1D>
  40dd5c:	ea000004 	b	40dd74 <cvGetReal1D+0x130>
  40dd60:	e3a03000 	mov	r3, #0
  40dd64:	e58d3000 	str	r3, [sp]
  40dd68:	e28d100c 	add	r1, sp, #12
  40dd6c:	e28d2014 	add	r2, sp, #20
  40dd70:	ebfff327 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40dd74:	e3500000 	cmp	r0, #0
  40dd78:	0a000015 	beq	40ddd4 <cvGetReal1D+0x190>
  40dd7c:	e59d1014 	ldr	r1, [sp, #20]
  40dd80:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  40dd84:	e1a031c3 	asr	r3, r3, #3
  40dd88:	e2833001 	add	r3, r3, #1
  40dd8c:	e3530001 	cmp	r3, #1
  40dd90:	da00000d 	ble	40ddcc <cvGetReal1D+0x188>
  40dd94:	e59f3068 	ldr	r3, [pc, #104]	; 40de04 <cvGetReal1D+0x1c0>
  40dd98:	e58d3000 	str	r3, [sp]
  40dd9c:	e3e0000e 	mvn	r0, #14
  40dda0:	e59f1060 	ldr	r1, [pc, #96]	; 40de08 <cvGetReal1D+0x1c4>
  40dda4:	e08f1001 	add	r1, pc, r1
  40dda8:	e2811f7e 	add	r1, r1, #504	; 0x1f8
  40ddac:	e59f2058 	ldr	r2, [pc, #88]	; 40de0c <cvGetReal1D+0x1c8>
  40ddb0:	e08f2002 	add	r2, pc, r2
  40ddb4:	e59f3054 	ldr	r3, [pc, #84]	; 40de10 <cvGetReal1D+0x1cc>
  40ddb8:	e08f3003 	add	r3, pc, r3
  40ddbc:	eb001339 	bl	412aa8 <cvError>
  40ddc0:	e3a00000 	mov	r0, #0
  40ddc4:	e3a01000 	mov	r1, #0
  40ddc8:	ea000003 	b	40dddc <cvGetReal1D+0x198>
  40ddcc:	ebffed40 	bl	4092d4 <_ZL10icvGetRealPKvi>
  40ddd0:	ea000001 	b	40dddc <cvGetReal1D+0x198>
  40ddd4:	e3a00000 	mov	r0, #0
  40ddd8:	e3a01000 	mov	r1, #0
  40dddc:	e28dd01c 	add	sp, sp, #28
  40dde0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40dde4:	e12fff1e 	bx	lr
  40dde8:	42420000 	.word	0x42420000
  40ddec:	0000ba50 	.word	0x0000ba50
  40ddf0:	00000932 	.word	0x00000932
  40ddf4:	1fbf2794 	.word	0x1fbf2794
  40ddf8:	00031ab4 	.word	0x00031ab4
  40ddfc:	0002f2d8 	.word	0x0002f2d8
  40de00:	42440000 	.word	0x42440000
  40de04:	0000093e 	.word	0x0000093e
  40de08:	1fbf26ec 	.word	0x1fbf26ec
  40de0c:	0002f6d0 	.word	0x0002f6d0
  40de10:	0002f230 	.word	0x0002f230

0040de14 <cvGetReal2D>:
  40de14:	e92d4010 	push	{r4, lr}
  40de18:	e24dd018 	sub	sp, sp, #24
  40de1c:	e3a03000 	mov	r3, #0
  40de20:	e58d300c 	str	r3, [sp, #12]
  40de24:	e3500000 	cmp	r0, #0
  40de28:	0a00002f 	beq	40deec <cvGetReal2D+0xd8>
  40de2c:	e590c000 	ldr	ip, [r0]
  40de30:	e1a0e82c 	lsr	lr, ip, #16
  40de34:	e59f3164 	ldr	r3, [pc, #356]	; 40dfa0 <cvGetReal2D+0x18c>
  40de38:	e153080e 	cmp	r3, lr, lsl #16
  40de3c:	1a00002a 	bne	40deec <cvGetReal2D+0xd8>
  40de40:	e590e018 	ldr	lr, [r0, #24]
  40de44:	e35e0000 	cmp	lr, #0
  40de48:	da000027 	ble	40deec <cvGetReal2D+0xd8>
  40de4c:	e5904014 	ldr	r4, [r0, #20]
  40de50:	e3540000 	cmp	r4, #0
  40de54:	da000024 	ble	40deec <cvGetReal2D+0xd8>
  40de58:	e5903010 	ldr	r3, [r0, #16]
  40de5c:	e3530000 	cmp	r3, #0
  40de60:	0a000021 	beq	40deec <cvGetReal2D+0xd8>
  40de64:	e1510004 	cmp	r1, r4
  40de68:	2a000001 	bcs	40de74 <cvGetReal2D+0x60>
  40de6c:	e152000e 	cmp	r2, lr
  40de70:	3a00000d 	bcc	40deac <cvGetReal2D+0x98>
  40de74:	e59f3128 	ldr	r3, [pc, #296]	; 40dfa4 <cvGetReal2D+0x190>
  40de78:	e58d3000 	str	r3, [sp]
  40de7c:	e3e000d2 	mvn	r0, #210	; 0xd2
  40de80:	e59f1120 	ldr	r1, [pc, #288]	; 40dfa8 <cvGetReal2D+0x194>
  40de84:	e08f1001 	add	r1, pc, r1
  40de88:	e2811f81 	add	r1, r1, #516	; 0x204
  40de8c:	e59f2118 	ldr	r2, [pc, #280]	; 40dfac <cvGetReal2D+0x198>
  40de90:	e08f2002 	add	r2, pc, r2
  40de94:	e59f3114 	ldr	r3, [pc, #276]	; 40dfb0 <cvGetReal2D+0x19c>
  40de98:	e08f3003 	add	r3, pc, r3
  40de9c:	eb001301 	bl	412aa8 <cvError>
  40dea0:	e3a00000 	mov	r0, #0
  40dea4:	e3a01000 	mov	r1, #0
  40dea8:	ea000039 	b	40df94 <cvGetReal2D+0x180>
  40deac:	e1a0cb8c 	lsl	ip, ip, #23
  40deb0:	e1a0cbac 	lsr	ip, ip, #23
  40deb4:	e58dc00c 	str	ip, [sp, #12]
  40deb8:	e5904004 	ldr	r4, [r0, #4]
  40debc:	e1a001ac 	lsr	r0, ip, #3
  40dec0:	e280e001 	add	lr, r0, #1
  40dec4:	e20cc007 	and	ip, ip, #7
  40dec8:	e1a0c08c 	lsl	ip, ip, #1
  40decc:	e59f00e0 	ldr	r0, [pc, #224]	; 40dfb4 <cvGetReal2D+0x1a0>
  40ded0:	e1a00c30 	lsr	r0, r0, ip
  40ded4:	e2000003 	and	r0, r0, #3
  40ded8:	e1a0001e 	lsl	r0, lr, r0
  40dedc:	e0020290 	mul	r2, r0, r2
  40dee0:	e0222194 	mla	r2, r4, r1, r2
  40dee4:	e0830002 	add	r0, r3, r2
  40dee8:	ea00000f 	b	40df2c <cvGetReal2D+0x118>
  40deec:	e3500000 	cmp	r0, #0
  40def0:	0a000003 	beq	40df04 <cvGetReal2D+0xf0>
  40def4:	e1d0c0b2 	ldrh	ip, [r0, #2]
  40def8:	e59f30b8 	ldr	r3, [pc, #184]	; 40dfb8 <cvGetReal2D+0x1a4>
  40defc:	e153080c 	cmp	r3, ip, lsl #16
  40df00:	0a000002 	beq	40df10 <cvGetReal2D+0xfc>
  40df04:	e28d300c 	add	r3, sp, #12
  40df08:	ebfffaac 	bl	40c9c0 <cvPtr2D>
  40df0c:	ea000006 	b	40df2c <cvGetReal2D+0x118>
  40df10:	e58d1010 	str	r1, [sp, #16]
  40df14:	e58d2014 	str	r2, [sp, #20]
  40df18:	e3a03000 	mov	r3, #0
  40df1c:	e58d3000 	str	r3, [sp]
  40df20:	e28d1010 	add	r1, sp, #16
  40df24:	e28d200c 	add	r2, sp, #12
  40df28:	ebfff2b9 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40df2c:	e3500000 	cmp	r0, #0
  40df30:	0a000015 	beq	40df8c <cvGetReal2D+0x178>
  40df34:	e59d100c 	ldr	r1, [sp, #12]
  40df38:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  40df3c:	e1a031c3 	asr	r3, r3, #3
  40df40:	e2833001 	add	r3, r3, #1
  40df44:	e3530001 	cmp	r3, #1
  40df48:	da00000d 	ble	40df84 <cvGetReal2D+0x170>
  40df4c:	e59f3068 	ldr	r3, [pc, #104]	; 40dfbc <cvGetReal2D+0x1a8>
  40df50:	e58d3000 	str	r3, [sp]
  40df54:	e3e0000e 	mvn	r0, #14
  40df58:	e59f1060 	ldr	r1, [pc, #96]	; 40dfc0 <cvGetReal2D+0x1ac>
  40df5c:	e08f1001 	add	r1, pc, r1
  40df60:	e2811f81 	add	r1, r1, #516	; 0x204
  40df64:	e59f2058 	ldr	r2, [pc, #88]	; 40dfc4 <cvGetReal2D+0x1b0>
  40df68:	e08f2002 	add	r2, pc, r2
  40df6c:	e59f3054 	ldr	r3, [pc, #84]	; 40dfc8 <cvGetReal2D+0x1b4>
  40df70:	e08f3003 	add	r3, pc, r3
  40df74:	eb0012cb 	bl	412aa8 <cvError>
  40df78:	e3a00000 	mov	r0, #0
  40df7c:	e3a01000 	mov	r1, #0
  40df80:	ea000003 	b	40df94 <cvGetReal2D+0x180>
  40df84:	ebffecd2 	bl	4092d4 <_ZL10icvGetRealPKvi>
  40df88:	ea000001 	b	40df94 <cvGetReal2D+0x180>
  40df8c:	e3a00000 	mov	r0, #0
  40df90:	e3a01000 	mov	r1, #0
  40df94:	e28dd018 	add	sp, sp, #24
  40df98:	e8bd4010 	pop	{r4, lr}
  40df9c:	e12fff1e 	bx	lr
  40dfa0:	42420000 	.word	0x42420000
  40dfa4:	0000095c 	.word	0x0000095c
  40dfa8:	1fbf260c 	.word	0x1fbf260c
  40dfac:	0003192c 	.word	0x0003192c
  40dfb0:	0002f150 	.word	0x0002f150
  40dfb4:	0000ba50 	.word	0x0000ba50
  40dfb8:	42440000 	.word	0x42440000
  40dfbc:	0000096c 	.word	0x0000096c
  40dfc0:	1fbf2534 	.word	0x1fbf2534
  40dfc4:	0002f518 	.word	0x0002f518
  40dfc8:	0002f078 	.word	0x0002f078

0040dfcc <cvGetReal3D>:
  40dfcc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40dfd0:	e24dd01c 	sub	sp, sp, #28
  40dfd4:	e3a0c000 	mov	ip, #0
  40dfd8:	e58dc008 	str	ip, [sp, #8]
  40dfdc:	e3500000 	cmp	r0, #0
  40dfe0:	0a000003 	beq	40dff4 <cvGetReal3D+0x28>
  40dfe4:	e1d0e0b2 	ldrh	lr, [r0, #2]
  40dfe8:	e59fc0a8 	ldr	ip, [pc, #168]	; 40e098 <cvGetReal3D+0xcc>
  40dfec:	e15c080e 	cmp	ip, lr, lsl #16
  40dff0:	0a000003 	beq	40e004 <cvGetReal3D+0x38>
  40dff4:	e28dc008 	add	ip, sp, #8
  40dff8:	e58dc000 	str	ip, [sp]
  40dffc:	ebfffd23 	bl	40d490 <cvPtr3D>
  40e000:	ea000007 	b	40e024 <cvGetReal3D+0x58>
  40e004:	e58d100c 	str	r1, [sp, #12]
  40e008:	e58d2010 	str	r2, [sp, #16]
  40e00c:	e58d3014 	str	r3, [sp, #20]
  40e010:	e3a03000 	mov	r3, #0
  40e014:	e58d3000 	str	r3, [sp]
  40e018:	e28d100c 	add	r1, sp, #12
  40e01c:	e28d2008 	add	r2, sp, #8
  40e020:	ebfff27b 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e024:	e3500000 	cmp	r0, #0
  40e028:	0a000015 	beq	40e084 <cvGetReal3D+0xb8>
  40e02c:	e59d1008 	ldr	r1, [sp, #8]
  40e030:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  40e034:	e1a031c3 	asr	r3, r3, #3
  40e038:	e2833001 	add	r3, r3, #1
  40e03c:	e3530001 	cmp	r3, #1
  40e040:	da00000d 	ble	40e07c <cvGetReal3D+0xb0>
  40e044:	e59f3050 	ldr	r3, [pc, #80]	; 40e09c <cvGetReal3D+0xd0>
  40e048:	e58d3000 	str	r3, [sp]
  40e04c:	e3e0000e 	mvn	r0, #14
  40e050:	e59f1048 	ldr	r1, [pc, #72]	; 40e0a0 <cvGetReal3D+0xd4>
  40e054:	e08f1001 	add	r1, pc, r1
  40e058:	e2811e21 	add	r1, r1, #528	; 0x210
  40e05c:	e59f2040 	ldr	r2, [pc, #64]	; 40e0a4 <cvGetReal3D+0xd8>
  40e060:	e08f2002 	add	r2, pc, r2
  40e064:	e59f303c 	ldr	r3, [pc, #60]	; 40e0a8 <cvGetReal3D+0xdc>
  40e068:	e08f3003 	add	r3, pc, r3
  40e06c:	eb00128d 	bl	412aa8 <cvError>
  40e070:	e3a00000 	mov	r0, #0
  40e074:	e3a01000 	mov	r1, #0
  40e078:	ea000003 	b	40e08c <cvGetReal3D+0xc0>
  40e07c:	ebffec94 	bl	4092d4 <_ZL10icvGetRealPKvi>
  40e080:	ea000001 	b	40e08c <cvGetReal3D+0xc0>
  40e084:	e3a00000 	mov	r0, #0
  40e088:	e3a01000 	mov	r1, #0
  40e08c:	e28dd01c 	add	sp, sp, #28
  40e090:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40e094:	e12fff1e 	bx	lr
  40e098:	42440000 	.word	0x42440000
  40e09c:	0000098f 	.word	0x0000098f
  40e0a0:	1fbf243c 	.word	0x1fbf243c
  40e0a4:	0002f420 	.word	0x0002f420
  40e0a8:	0002ef80 	.word	0x0002ef80

0040e0ac <cvGetRealND>:
  40e0ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40e0b0:	e24dd014 	sub	sp, sp, #20
  40e0b4:	e3a03000 	mov	r3, #0
  40e0b8:	e58d300c 	str	r3, [sp, #12]
  40e0bc:	e3500000 	cmp	r0, #0
  40e0c0:	0a000003 	beq	40e0d4 <cvGetRealND+0x28>
  40e0c4:	e1d020b2 	ldrh	r2, [r0, #2]
  40e0c8:	e59f30a0 	ldr	r3, [pc, #160]	; 40e170 <cvGetRealND+0xc4>
  40e0cc:	e1530802 	cmp	r3, r2, lsl #16
  40e0d0:	0a000005 	beq	40e0ec <cvGetRealND+0x40>
  40e0d4:	e3a03000 	mov	r3, #0
  40e0d8:	e58d3000 	str	r3, [sp]
  40e0dc:	e28d200c 	add	r2, sp, #12
  40e0e0:	e3a03001 	mov	r3, #1
  40e0e4:	ebfffd44 	bl	40d5fc <cvPtrND>
  40e0e8:	ea000003 	b	40e0fc <cvGetRealND+0x50>
  40e0ec:	e3a03000 	mov	r3, #0
  40e0f0:	e58d3000 	str	r3, [sp]
  40e0f4:	e28d200c 	add	r2, sp, #12
  40e0f8:	ebfff245 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e0fc:	e3500000 	cmp	r0, #0
  40e100:	0a000015 	beq	40e15c <cvGetRealND+0xb0>
  40e104:	e59d100c 	ldr	r1, [sp, #12]
  40e108:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  40e10c:	e1a031c3 	asr	r3, r3, #3
  40e110:	e2833001 	add	r3, r3, #1
  40e114:	e3530001 	cmp	r3, #1
  40e118:	da00000d 	ble	40e154 <cvGetRealND+0xa8>
  40e11c:	e59f3050 	ldr	r3, [pc, #80]	; 40e174 <cvGetRealND+0xc8>
  40e120:	e58d3000 	str	r3, [sp]
  40e124:	e3e0000e 	mvn	r0, #14
  40e128:	e59f1048 	ldr	r1, [pc, #72]	; 40e178 <cvGetRealND+0xcc>
  40e12c:	e08f1001 	add	r1, pc, r1
  40e130:	e2811f87 	add	r1, r1, #540	; 0x21c
  40e134:	e59f2040 	ldr	r2, [pc, #64]	; 40e17c <cvGetRealND+0xd0>
  40e138:	e08f2002 	add	r2, pc, r2
  40e13c:	e59f303c 	ldr	r3, [pc, #60]	; 40e180 <cvGetRealND+0xd4>
  40e140:	e08f3003 	add	r3, pc, r3
  40e144:	eb001257 	bl	412aa8 <cvError>
  40e148:	e3a00000 	mov	r0, #0
  40e14c:	e3a01000 	mov	r1, #0
  40e150:	ea000003 	b	40e164 <cvGetRealND+0xb8>
  40e154:	ebffec5e 	bl	4092d4 <_ZL10icvGetRealPKvi>
  40e158:	ea000001 	b	40e164 <cvGetRealND+0xb8>
  40e15c:	e3a00000 	mov	r0, #0
  40e160:	e3a01000 	mov	r1, #0
  40e164:	e28dd014 	add	sp, sp, #20
  40e168:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40e16c:	e12fff1e 	bx	lr
  40e170:	42440000 	.word	0x42440000
  40e174:	000009af 	.word	0x000009af
  40e178:	1fbf2364 	.word	0x1fbf2364
  40e17c:	0002f348 	.word	0x0002f348
  40e180:	0002eea8 	.word	0x0002eea8

0040e184 <cvSet1D>:
  40e184:	e24dd008 	sub	sp, sp, #8
  40e188:	e92d4010 	push	{r4, lr}
  40e18c:	e24dd018 	sub	sp, sp, #24
  40e190:	e58d100c 	str	r1, [sp, #12]
  40e194:	e28d101c 	add	r1, sp, #28
  40e198:	e981000c 	stmib	r1, {r2, r3}
  40e19c:	e3a03000 	mov	r3, #0
  40e1a0:	e58d3014 	str	r3, [sp, #20]
  40e1a4:	e3500000 	cmp	r0, #0
  40e1a8:	0a000030 	beq	40e270 <cvSet1D+0xec>
  40e1ac:	e5903000 	ldr	r3, [r0]
  40e1b0:	e1a01823 	lsr	r1, r3, #16
  40e1b4:	e59f2128 	ldr	r2, [pc, #296]	; 40e2e4 <cvSet1D+0x160>
  40e1b8:	e1520801 	cmp	r2, r1, lsl #16
  40e1bc:	1a00002b 	bne	40e270 <cvSet1D+0xec>
  40e1c0:	e590c018 	ldr	ip, [r0, #24]
  40e1c4:	e35c0000 	cmp	ip, #0
  40e1c8:	da000028 	ble	40e270 <cvSet1D+0xec>
  40e1cc:	e590e014 	ldr	lr, [r0, #20]
  40e1d0:	e35e0000 	cmp	lr, #0
  40e1d4:	da000025 	ble	40e270 <cvSet1D+0xec>
  40e1d8:	e5904010 	ldr	r4, [r0, #16]
  40e1dc:	e3540000 	cmp	r4, #0
  40e1e0:	0a000022 	beq	40e270 <cvSet1D+0xec>
  40e1e4:	e3130901 	tst	r3, #16384	; 0x4000
  40e1e8:	0a000020 	beq	40e270 <cvSet1D+0xec>
  40e1ec:	e1a03b83 	lsl	r3, r3, #23
  40e1f0:	e1a03ba3 	lsr	r3, r3, #23
  40e1f4:	e58d3014 	str	r3, [sp, #20]
  40e1f8:	e1a021a3 	lsr	r2, r3, #3
  40e1fc:	e2822001 	add	r2, r2, #1
  40e200:	e2033007 	and	r3, r3, #7
  40e204:	e1a03083 	lsl	r3, r3, #1
  40e208:	e59f10d8 	ldr	r1, [pc, #216]	; 40e2e8 <cvSet1D+0x164>
  40e20c:	e1a03331 	lsr	r3, r1, r3
  40e210:	e2033003 	and	r3, r3, #3
  40e214:	e1a02312 	lsl	r2, r2, r3
  40e218:	e59d100c 	ldr	r1, [sp, #12]
  40e21c:	e08c300e 	add	r3, ip, lr
  40e220:	e2433001 	sub	r3, r3, #1
  40e224:	e1510003 	cmp	r1, r3
  40e228:	3a00000e 	bcc	40e268 <cvSet1D+0xe4>
  40e22c:	e00c0c9e 	mul	ip, lr, ip
  40e230:	e151000c 	cmp	r1, ip
  40e234:	3a00000b 	bcc	40e268 <cvSet1D+0xe4>
  40e238:	e3a03e9d 	mov	r3, #2512	; 0x9d0
  40e23c:	e58d3000 	str	r3, [sp]
  40e240:	e3e000d2 	mvn	r0, #210	; 0xd2
  40e244:	e59f10a0 	ldr	r1, [pc, #160]	; 40e2ec <cvSet1D+0x168>
  40e248:	e08f1001 	add	r1, pc, r1
  40e24c:	e2811f8a 	add	r1, r1, #552	; 0x228
  40e250:	e59f2098 	ldr	r2, [pc, #152]	; 40e2f0 <cvSet1D+0x16c>
  40e254:	e08f2002 	add	r2, pc, r2
  40e258:	e59f3094 	ldr	r3, [pc, #148]	; 40e2f4 <cvSet1D+0x170>
  40e25c:	e08f3003 	add	r3, pc, r3
  40e260:	eb001210 	bl	412aa8 <cvError>
  40e264:	ea00001a 	b	40e2d4 <cvSet1D+0x150>
  40e268:	e0214192 	mla	r1, r2, r1, r4
  40e26c:	ea000014 	b	40e2c4 <cvSet1D+0x140>
  40e270:	e3500000 	cmp	r0, #0
  40e274:	0a000006 	beq	40e294 <cvSet1D+0x110>
  40e278:	e1d020b2 	ldrh	r2, [r0, #2]
  40e27c:	e59f3074 	ldr	r3, [pc, #116]	; 40e2f8 <cvSet1D+0x174>
  40e280:	e1530802 	cmp	r3, r2, lsl #16
  40e284:	1a000002 	bne	40e294 <cvSet1D+0x110>
  40e288:	e5903004 	ldr	r3, [r0, #4]
  40e28c:	e3530001 	cmp	r3, #1
  40e290:	da000004 	ble	40e2a8 <cvSet1D+0x124>
  40e294:	e59d100c 	ldr	r1, [sp, #12]
  40e298:	e28d2014 	add	r2, sp, #20
  40e29c:	ebfffb7e 	bl	40d09c <cvPtr1D>
  40e2a0:	e1a01000 	mov	r1, r0
  40e2a4:	ea000006 	b	40e2c4 <cvSet1D+0x140>
  40e2a8:	e3a03000 	mov	r3, #0
  40e2ac:	e58d3000 	str	r3, [sp]
  40e2b0:	e28d100c 	add	r1, sp, #12
  40e2b4:	e28d2014 	add	r2, sp, #20
  40e2b8:	e3e03000 	mvn	r3, #0
  40e2bc:	ebfff1d4 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e2c0:	e1a01000 	mov	r1, r0
  40e2c4:	e28d0020 	add	r0, sp, #32
  40e2c8:	e59d2014 	ldr	r2, [sp, #20]
  40e2cc:	e3a03000 	mov	r3, #0
  40e2d0:	ebfff81d 	bl	40c34c <cvScalarToRawData>
  40e2d4:	e28dd018 	add	sp, sp, #24
  40e2d8:	e8bd4010 	pop	{r4, lr}
  40e2dc:	e28dd008 	add	sp, sp, #8
  40e2e0:	e12fff1e 	bx	lr
  40e2e4:	42420000 	.word	0x42420000
  40e2e8:	0000ba50 	.word	0x0000ba50
  40e2ec:	1fbf2248 	.word	0x1fbf2248
  40e2f0:	00031568 	.word	0x00031568
  40e2f4:	0002ed8c 	.word	0x0002ed8c
  40e2f8:	42440000 	.word	0x42440000

0040e2fc <cvSet2D>:
  40e2fc:	e92d4010 	push	{r4, lr}
  40e300:	e24dd018 	sub	sp, sp, #24
  40e304:	e3a03000 	mov	r3, #0
  40e308:	e58d300c 	str	r3, [sp, #12]
  40e30c:	e3500000 	cmp	r0, #0
  40e310:	0a00002d 	beq	40e3cc <cvSet2D+0xd0>
  40e314:	e5903000 	ldr	r3, [r0]
  40e318:	e1a0e823 	lsr	lr, r3, #16
  40e31c:	e59fc110 	ldr	ip, [pc, #272]	; 40e434 <cvSet2D+0x138>
  40e320:	e15c080e 	cmp	ip, lr, lsl #16
  40e324:	1a000028 	bne	40e3cc <cvSet2D+0xd0>
  40e328:	e590e018 	ldr	lr, [r0, #24]
  40e32c:	e35e0000 	cmp	lr, #0
  40e330:	da000025 	ble	40e3cc <cvSet2D+0xd0>
  40e334:	e5904014 	ldr	r4, [r0, #20]
  40e338:	e3540000 	cmp	r4, #0
  40e33c:	da000022 	ble	40e3cc <cvSet2D+0xd0>
  40e340:	e590c010 	ldr	ip, [r0, #16]
  40e344:	e35c0000 	cmp	ip, #0
  40e348:	0a00001f 	beq	40e3cc <cvSet2D+0xd0>
  40e34c:	e1510004 	cmp	r1, r4
  40e350:	2a000001 	bcs	40e35c <cvSet2D+0x60>
  40e354:	e152000e 	cmp	r2, lr
  40e358:	3a00000b 	bcc	40e38c <cvSet2D+0x90>
  40e35c:	e3a03e9f 	mov	r3, #2544	; 0x9f0
  40e360:	e58d3000 	str	r3, [sp]
  40e364:	e3e000d2 	mvn	r0, #210	; 0xd2
  40e368:	e59f10c8 	ldr	r1, [pc, #200]	; 40e438 <cvSet2D+0x13c>
  40e36c:	e08f1001 	add	r1, pc, r1
  40e370:	e2811e23 	add	r1, r1, #560	; 0x230
  40e374:	e59f20c0 	ldr	r2, [pc, #192]	; 40e43c <cvSet2D+0x140>
  40e378:	e08f2002 	add	r2, pc, r2
  40e37c:	e59f30bc 	ldr	r3, [pc, #188]	; 40e440 <cvSet2D+0x144>
  40e380:	e08f3003 	add	r3, pc, r3
  40e384:	eb0011c7 	bl	412aa8 <cvError>
  40e388:	ea000026 	b	40e428 <cvSet2D+0x12c>
  40e38c:	e1a03b83 	lsl	r3, r3, #23
  40e390:	e1a03ba3 	lsr	r3, r3, #23
  40e394:	e58d300c 	str	r3, [sp, #12]
  40e398:	e5904004 	ldr	r4, [r0, #4]
  40e39c:	e1a001a3 	lsr	r0, r3, #3
  40e3a0:	e2800001 	add	r0, r0, #1
  40e3a4:	e2033007 	and	r3, r3, #7
  40e3a8:	e1a03083 	lsl	r3, r3, #1
  40e3ac:	e59fe090 	ldr	lr, [pc, #144]	; 40e444 <cvSet2D+0x148>
  40e3b0:	e1a0333e 	lsr	r3, lr, r3
  40e3b4:	e2033003 	and	r3, r3, #3
  40e3b8:	e1a03310 	lsl	r3, r0, r3
  40e3bc:	e0020293 	mul	r2, r3, r2
  40e3c0:	e0212194 	mla	r1, r4, r1, r2
  40e3c4:	e08c1001 	add	r1, ip, r1
  40e3c8:	ea000012 	b	40e418 <cvSet2D+0x11c>
  40e3cc:	e3500000 	cmp	r0, #0
  40e3d0:	0a000003 	beq	40e3e4 <cvSet2D+0xe8>
  40e3d4:	e1d0c0b2 	ldrh	ip, [r0, #2]
  40e3d8:	e59f3068 	ldr	r3, [pc, #104]	; 40e448 <cvSet2D+0x14c>
  40e3dc:	e153080c 	cmp	r3, ip, lsl #16
  40e3e0:	0a000003 	beq	40e3f4 <cvSet2D+0xf8>
  40e3e4:	e28d300c 	add	r3, sp, #12
  40e3e8:	ebfff974 	bl	40c9c0 <cvPtr2D>
  40e3ec:	e1a01000 	mov	r1, r0
  40e3f0:	ea000008 	b	40e418 <cvSet2D+0x11c>
  40e3f4:	e58d1010 	str	r1, [sp, #16]
  40e3f8:	e58d2014 	str	r2, [sp, #20]
  40e3fc:	e3a03000 	mov	r3, #0
  40e400:	e58d3000 	str	r3, [sp]
  40e404:	e28d1010 	add	r1, sp, #16
  40e408:	e28d200c 	add	r2, sp, #12
  40e40c:	e3e03000 	mvn	r3, #0
  40e410:	ebfff17f 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e414:	e1a01000 	mov	r1, r0
  40e418:	e28d0020 	add	r0, sp, #32
  40e41c:	e59d200c 	ldr	r2, [sp, #12]
  40e420:	e3a03000 	mov	r3, #0
  40e424:	ebfff7c8 	bl	40c34c <cvScalarToRawData>
  40e428:	e28dd018 	add	sp, sp, #24
  40e42c:	e8bd4010 	pop	{r4, lr}
  40e430:	e12fff1e 	bx	lr
  40e434:	42420000 	.word	0x42420000
  40e438:	1fbf2124 	.word	0x1fbf2124
  40e43c:	00031444 	.word	0x00031444
  40e440:	0002ec68 	.word	0x0002ec68
  40e444:	0000ba50 	.word	0x0000ba50
  40e448:	42440000 	.word	0x42440000

0040e44c <cvSet3D>:
  40e44c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40e450:	e24dd01c 	sub	sp, sp, #28
  40e454:	e3a0c000 	mov	ip, #0
  40e458:	e58dc008 	str	ip, [sp, #8]
  40e45c:	e3500000 	cmp	r0, #0
  40e460:	0a000003 	beq	40e474 <cvSet3D+0x28>
  40e464:	e1d0e0b2 	ldrh	lr, [r0, #2]
  40e468:	e59fc05c 	ldr	ip, [pc, #92]	; 40e4cc <cvSet3D+0x80>
  40e46c:	e15c080e 	cmp	ip, lr, lsl #16
  40e470:	0a000004 	beq	40e488 <cvSet3D+0x3c>
  40e474:	e28dc008 	add	ip, sp, #8
  40e478:	e58dc000 	str	ip, [sp]
  40e47c:	ebfffc03 	bl	40d490 <cvPtr3D>
  40e480:	e1a01000 	mov	r1, r0
  40e484:	ea000009 	b	40e4b0 <cvSet3D+0x64>
  40e488:	e58d100c 	str	r1, [sp, #12]
  40e48c:	e58d2010 	str	r2, [sp, #16]
  40e490:	e58d3014 	str	r3, [sp, #20]
  40e494:	e3a03000 	mov	r3, #0
  40e498:	e58d3000 	str	r3, [sp]
  40e49c:	e28d100c 	add	r1, sp, #12
  40e4a0:	e28d2008 	add	r2, sp, #8
  40e4a4:	e3e03000 	mvn	r3, #0
  40e4a8:	ebfff159 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e4ac:	e1a01000 	mov	r1, r0
  40e4b0:	e28d0020 	add	r0, sp, #32
  40e4b4:	e59d2008 	ldr	r2, [sp, #8]
  40e4b8:	e3a03000 	mov	r3, #0
  40e4bc:	ebfff7a2 	bl	40c34c <cvScalarToRawData>
  40e4c0:	e28dd01c 	add	sp, sp, #28
  40e4c4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40e4c8:	e12fff1e 	bx	lr
  40e4cc:	42440000 	.word	0x42440000

0040e4d0 <cvSetND>:
  40e4d0:	e24dd008 	sub	sp, sp, #8
  40e4d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40e4d8:	e24dd014 	sub	sp, sp, #20
  40e4dc:	e28dc014 	add	ip, sp, #20
  40e4e0:	e98c000c 	stmib	ip, {r2, r3}
  40e4e4:	e3a03000 	mov	r3, #0
  40e4e8:	e58d300c 	str	r3, [sp, #12]
  40e4ec:	e3500000 	cmp	r0, #0
  40e4f0:	0a000003 	beq	40e504 <cvSetND+0x34>
  40e4f4:	e1d020b2 	ldrh	r2, [r0, #2]
  40e4f8:	e59f3058 	ldr	r3, [pc, #88]	; 40e558 <cvSetND+0x88>
  40e4fc:	e1530802 	cmp	r3, r2, lsl #16
  40e500:	0a000006 	beq	40e520 <cvSetND+0x50>
  40e504:	e3a03000 	mov	r3, #0
  40e508:	e58d3000 	str	r3, [sp]
  40e50c:	e28d200c 	add	r2, sp, #12
  40e510:	e3a03001 	mov	r3, #1
  40e514:	ebfffc38 	bl	40d5fc <cvPtrND>
  40e518:	e1a01000 	mov	r1, r0
  40e51c:	ea000005 	b	40e538 <cvSetND+0x68>
  40e520:	e3a03000 	mov	r3, #0
  40e524:	e58d3000 	str	r3, [sp]
  40e528:	e28d200c 	add	r2, sp, #12
  40e52c:	e3e03000 	mvn	r3, #0
  40e530:	ebfff137 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e534:	e1a01000 	mov	r1, r0
  40e538:	e28d0018 	add	r0, sp, #24
  40e53c:	e59d200c 	ldr	r2, [sp, #12]
  40e540:	e3a03000 	mov	r3, #0
  40e544:	ebfff780 	bl	40c34c <cvScalarToRawData>
  40e548:	e28dd014 	add	sp, sp, #20
  40e54c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40e550:	e28dd008 	add	sp, sp, #8
  40e554:	e12fff1e 	bx	lr
  40e558:	42440000 	.word	0x42440000

0040e55c <cvSetReal1D>:
  40e55c:	e92d4070 	push	{r4, r5, r6, lr}
  40e560:	e24dd018 	sub	sp, sp, #24
  40e564:	e58d100c 	str	r1, [sp, #12]
  40e568:	e1a04002 	mov	r4, r2
  40e56c:	e1a05003 	mov	r5, r3
  40e570:	e3a03000 	mov	r3, #0
  40e574:	e58d3014 	str	r3, [sp, #20]
  40e578:	e3500000 	cmp	r0, #0
  40e57c:	0a000030 	beq	40e644 <cvSetReal1D+0xe8>
  40e580:	e5903000 	ldr	r3, [r0]
  40e584:	e1a01823 	lsr	r1, r3, #16
  40e588:	e59f216c 	ldr	r2, [pc, #364]	; 40e6fc <cvSetReal1D+0x1a0>
  40e58c:	e1520801 	cmp	r2, r1, lsl #16
  40e590:	1a00002b 	bne	40e644 <cvSetReal1D+0xe8>
  40e594:	e590c018 	ldr	ip, [r0, #24]
  40e598:	e35c0000 	cmp	ip, #0
  40e59c:	da000028 	ble	40e644 <cvSetReal1D+0xe8>
  40e5a0:	e590e014 	ldr	lr, [r0, #20]
  40e5a4:	e35e0000 	cmp	lr, #0
  40e5a8:	da000025 	ble	40e644 <cvSetReal1D+0xe8>
  40e5ac:	e5906010 	ldr	r6, [r0, #16]
  40e5b0:	e3560000 	cmp	r6, #0
  40e5b4:	0a000022 	beq	40e644 <cvSetReal1D+0xe8>
  40e5b8:	e3130901 	tst	r3, #16384	; 0x4000
  40e5bc:	0a000020 	beq	40e644 <cvSetReal1D+0xe8>
  40e5c0:	e1a03b83 	lsl	r3, r3, #23
  40e5c4:	e1a03ba3 	lsr	r3, r3, #23
  40e5c8:	e58d3014 	str	r3, [sp, #20]
  40e5cc:	e1a011a3 	lsr	r1, r3, #3
  40e5d0:	e2811001 	add	r1, r1, #1
  40e5d4:	e2033007 	and	r3, r3, #7
  40e5d8:	e1a03083 	lsl	r3, r3, #1
  40e5dc:	e59f211c 	ldr	r2, [pc, #284]	; 40e700 <cvSetReal1D+0x1a4>
  40e5e0:	e1a03332 	lsr	r3, r2, r3
  40e5e4:	e2032003 	and	r2, r3, #3
  40e5e8:	e1a01211 	lsl	r1, r1, r2
  40e5ec:	e59d200c 	ldr	r2, [sp, #12]
  40e5f0:	e08c300e 	add	r3, ip, lr
  40e5f4:	e2433001 	sub	r3, r3, #1
  40e5f8:	e1520003 	cmp	r2, r3
  40e5fc:	3a00000e 	bcc	40e63c <cvSetReal1D+0xe0>
  40e600:	e00c0c9e 	mul	ip, lr, ip
  40e604:	e152000c 	cmp	r2, ip
  40e608:	3a00000b 	bcc	40e63c <cvSetReal1D+0xe0>
  40e60c:	e59f30f0 	ldr	r3, [pc, #240]	; 40e704 <cvSetReal1D+0x1a8>
  40e610:	e58d3000 	str	r3, [sp]
  40e614:	e3e000d2 	mvn	r0, #210	; 0xd2
  40e618:	e59f10e8 	ldr	r1, [pc, #232]	; 40e708 <cvSetReal1D+0x1ac>
  40e61c:	e08f1001 	add	r1, pc, r1
  40e620:	e2811f8e 	add	r1, r1, #568	; 0x238
  40e624:	e59f20e0 	ldr	r2, [pc, #224]	; 40e70c <cvSetReal1D+0x1b0>
  40e628:	e08f2002 	add	r2, pc, r2
  40e62c:	e59f30dc 	ldr	r3, [pc, #220]	; 40e710 <cvSetReal1D+0x1b4>
  40e630:	e08f3003 	add	r3, pc, r3
  40e634:	eb00111b 	bl	412aa8 <cvError>
  40e638:	ea00002c 	b	40e6f0 <cvSetReal1D+0x194>
  40e63c:	e0226291 	mla	r2, r1, r2, r6
  40e640:	ea000014 	b	40e698 <cvSetReal1D+0x13c>
  40e644:	e3500000 	cmp	r0, #0
  40e648:	0a000006 	beq	40e668 <cvSetReal1D+0x10c>
  40e64c:	e1d020b2 	ldrh	r2, [r0, #2]
  40e650:	e59f30bc 	ldr	r3, [pc, #188]	; 40e714 <cvSetReal1D+0x1b8>
  40e654:	e1530802 	cmp	r3, r2, lsl #16
  40e658:	1a000002 	bne	40e668 <cvSetReal1D+0x10c>
  40e65c:	e5903004 	ldr	r3, [r0, #4]
  40e660:	e3530001 	cmp	r3, #1
  40e664:	da000004 	ble	40e67c <cvSetReal1D+0x120>
  40e668:	e59d100c 	ldr	r1, [sp, #12]
  40e66c:	e28d2014 	add	r2, sp, #20
  40e670:	ebfffa89 	bl	40d09c <cvPtr1D>
  40e674:	e1a02000 	mov	r2, r0
  40e678:	ea000006 	b	40e698 <cvSetReal1D+0x13c>
  40e67c:	e3a03000 	mov	r3, #0
  40e680:	e58d3000 	str	r3, [sp]
  40e684:	e28d100c 	add	r1, sp, #12
  40e688:	e28d2014 	add	r2, sp, #20
  40e68c:	e3e03000 	mvn	r3, #0
  40e690:	ebfff0df 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e694:	e1a02000 	mov	r2, r0
  40e698:	e59d3014 	ldr	r3, [sp, #20]
  40e69c:	e2031f7e 	and	r1, r3, #504	; 0x1f8
  40e6a0:	e1a011c1 	asr	r1, r1, #3
  40e6a4:	e2811001 	add	r1, r1, #1
  40e6a8:	e3510001 	cmp	r1, #1
  40e6ac:	da00000b 	ble	40e6e0 <cvSetReal1D+0x184>
  40e6b0:	e59f3060 	ldr	r3, [pc, #96]	; 40e718 <cvSetReal1D+0x1bc>
  40e6b4:	e58d3000 	str	r3, [sp]
  40e6b8:	e3e0000e 	mvn	r0, #14
  40e6bc:	e59f1058 	ldr	r1, [pc, #88]	; 40e71c <cvSetReal1D+0x1c0>
  40e6c0:	e08f1001 	add	r1, pc, r1
  40e6c4:	e2811f8e 	add	r1, r1, #568	; 0x238
  40e6c8:	e59f2050 	ldr	r2, [pc, #80]	; 40e720 <cvSetReal1D+0x1c4>
  40e6cc:	e08f2002 	add	r2, pc, r2
  40e6d0:	e59f304c 	ldr	r3, [pc, #76]	; 40e724 <cvSetReal1D+0x1c8>
  40e6d4:	e08f3003 	add	r3, pc, r3
  40e6d8:	eb0010f2 	bl	412aa8 <cvError>
  40e6dc:	ea000003 	b	40e6f0 <cvSetReal1D+0x194>
  40e6e0:	e3520000 	cmp	r2, #0
  40e6e4:	11a00004 	movne	r0, r4
  40e6e8:	11a01005 	movne	r1, r5
  40e6ec:	1bffebd7 	blne	409650 <_ZL10icvSetRealdPKvi>
  40e6f0:	e28dd018 	add	sp, sp, #24
  40e6f4:	e8bd4070 	pop	{r4, r5, r6, lr}
  40e6f8:	e12fff1e 	bx	lr
  40e6fc:	42420000 	.word	0x42420000
  40e700:	0000ba50 	.word	0x0000ba50
  40e704:	00000a44 	.word	0x00000a44
  40e708:	1fbf1e74 	.word	0x1fbf1e74
  40e70c:	00031194 	.word	0x00031194
  40e710:	0002e9b8 	.word	0x0002e9b8
  40e714:	42440000 	.word	0x42440000
  40e718:	00000a4e 	.word	0x00000a4e
  40e71c:	1fbf1dd0 	.word	0x1fbf1dd0
  40e720:	0002ede4 	.word	0x0002ede4
  40e724:	0002e914 	.word	0x0002e914

0040e728 <cvSetReal2D>:
  40e728:	e92d4010 	push	{r4, lr}
  40e72c:	e24dd018 	sub	sp, sp, #24
  40e730:	e3a03000 	mov	r3, #0
  40e734:	e58d300c 	str	r3, [sp, #12]
  40e738:	e3500000 	cmp	r0, #0
  40e73c:	0a00002d 	beq	40e7f8 <cvSetReal2D+0xd0>
  40e740:	e5903000 	ldr	r3, [r0]
  40e744:	e1a0e823 	lsr	lr, r3, #16
  40e748:	e59fc158 	ldr	ip, [pc, #344]	; 40e8a8 <cvSetReal2D+0x180>
  40e74c:	e15c080e 	cmp	ip, lr, lsl #16
  40e750:	1a000028 	bne	40e7f8 <cvSetReal2D+0xd0>
  40e754:	e590e018 	ldr	lr, [r0, #24]
  40e758:	e35e0000 	cmp	lr, #0
  40e75c:	da000025 	ble	40e7f8 <cvSetReal2D+0xd0>
  40e760:	e5904014 	ldr	r4, [r0, #20]
  40e764:	e3540000 	cmp	r4, #0
  40e768:	da000022 	ble	40e7f8 <cvSetReal2D+0xd0>
  40e76c:	e590c010 	ldr	ip, [r0, #16]
  40e770:	e35c0000 	cmp	ip, #0
  40e774:	0a00001f 	beq	40e7f8 <cvSetReal2D+0xd0>
  40e778:	e1510004 	cmp	r1, r4
  40e77c:	2a000001 	bcs	40e788 <cvSetReal2D+0x60>
  40e780:	e152000e 	cmp	r2, lr
  40e784:	3a00000b 	bcc	40e7b8 <cvSetReal2D+0x90>
  40e788:	e59f311c 	ldr	r3, [pc, #284]	; 40e8ac <cvSetReal2D+0x184>
  40e78c:	e58d3000 	str	r3, [sp]
  40e790:	e3e000d2 	mvn	r0, #210	; 0xd2
  40e794:	e59f1114 	ldr	r1, [pc, #276]	; 40e8b0 <cvSetReal2D+0x188>
  40e798:	e08f1001 	add	r1, pc, r1
  40e79c:	e2811f91 	add	r1, r1, #580	; 0x244
  40e7a0:	e59f210c 	ldr	r2, [pc, #268]	; 40e8b4 <cvSetReal2D+0x18c>
  40e7a4:	e08f2002 	add	r2, pc, r2
  40e7a8:	e59f3108 	ldr	r3, [pc, #264]	; 40e8b8 <cvSetReal2D+0x190>
  40e7ac:	e08f3003 	add	r3, pc, r3
  40e7b0:	eb0010bc 	bl	412aa8 <cvError>
  40e7b4:	ea000038 	b	40e89c <cvSetReal2D+0x174>
  40e7b8:	e1a03b83 	lsl	r3, r3, #23
  40e7bc:	e1a03ba3 	lsr	r3, r3, #23
  40e7c0:	e58d300c 	str	r3, [sp, #12]
  40e7c4:	e5904004 	ldr	r4, [r0, #4]
  40e7c8:	e1a001a3 	lsr	r0, r3, #3
  40e7cc:	e2800001 	add	r0, r0, #1
  40e7d0:	e2033007 	and	r3, r3, #7
  40e7d4:	e1a03083 	lsl	r3, r3, #1
  40e7d8:	e59fe0dc 	ldr	lr, [pc, #220]	; 40e8bc <cvSetReal2D+0x194>
  40e7dc:	e1a0333e 	lsr	r3, lr, r3
  40e7e0:	e2033003 	and	r3, r3, #3
  40e7e4:	e1a03310 	lsl	r3, r0, r3
  40e7e8:	e0020293 	mul	r2, r3, r2
  40e7ec:	e0222194 	mla	r2, r4, r1, r2
  40e7f0:	e08c2002 	add	r2, ip, r2
  40e7f4:	ea000012 	b	40e844 <cvSetReal2D+0x11c>
  40e7f8:	e3500000 	cmp	r0, #0
  40e7fc:	0a000003 	beq	40e810 <cvSetReal2D+0xe8>
  40e800:	e1d0c0b2 	ldrh	ip, [r0, #2]
  40e804:	e59f30b4 	ldr	r3, [pc, #180]	; 40e8c0 <cvSetReal2D+0x198>
  40e808:	e153080c 	cmp	r3, ip, lsl #16
  40e80c:	0a000003 	beq	40e820 <cvSetReal2D+0xf8>
  40e810:	e28d300c 	add	r3, sp, #12
  40e814:	ebfff869 	bl	40c9c0 <cvPtr2D>
  40e818:	e1a02000 	mov	r2, r0
  40e81c:	ea000008 	b	40e844 <cvSetReal2D+0x11c>
  40e820:	e58d1010 	str	r1, [sp, #16]
  40e824:	e58d2014 	str	r2, [sp, #20]
  40e828:	e3a03000 	mov	r3, #0
  40e82c:	e58d3000 	str	r3, [sp]
  40e830:	e28d1010 	add	r1, sp, #16
  40e834:	e28d200c 	add	r2, sp, #12
  40e838:	e3e03000 	mvn	r3, #0
  40e83c:	ebfff074 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e840:	e1a02000 	mov	r2, r0
  40e844:	e59d300c 	ldr	r3, [sp, #12]
  40e848:	e2031f7e 	and	r1, r3, #504	; 0x1f8
  40e84c:	e1a011c1 	asr	r1, r1, #3
  40e850:	e2811001 	add	r1, r1, #1
  40e854:	e3510001 	cmp	r1, #1
  40e858:	da00000b 	ble	40e88c <cvSetReal2D+0x164>
  40e85c:	e59f3060 	ldr	r3, [pc, #96]	; 40e8c4 <cvSetReal2D+0x19c>
  40e860:	e58d3000 	str	r3, [sp]
  40e864:	e3e0000e 	mvn	r0, #14
  40e868:	e59f1058 	ldr	r1, [pc, #88]	; 40e8c8 <cvSetReal2D+0x1a0>
  40e86c:	e08f1001 	add	r1, pc, r1
  40e870:	e2811f91 	add	r1, r1, #580	; 0x244
  40e874:	e59f2050 	ldr	r2, [pc, #80]	; 40e8cc <cvSetReal2D+0x1a4>
  40e878:	e08f2002 	add	r2, pc, r2
  40e87c:	e59f304c 	ldr	r3, [pc, #76]	; 40e8d0 <cvSetReal2D+0x1a8>
  40e880:	e08f3003 	add	r3, pc, r3
  40e884:	eb001087 	bl	412aa8 <cvError>
  40e888:	ea000003 	b	40e89c <cvSetReal2D+0x174>
  40e88c:	e3520000 	cmp	r2, #0
  40e890:	128d1020 	addne	r1, sp, #32
  40e894:	18910003 	ldmne	r1, {r0, r1}
  40e898:	1bffeb6c 	blne	409650 <_ZL10icvSetRealdPKvi>
  40e89c:	e28dd018 	add	sp, sp, #24
  40e8a0:	e8bd4010 	pop	{r4, lr}
  40e8a4:	e12fff1e 	bx	lr
  40e8a8:	42420000 	.word	0x42420000
  40e8ac:	00000a67 	.word	0x00000a67
  40e8b0:	1fbf1cf8 	.word	0x1fbf1cf8
  40e8b4:	00031018 	.word	0x00031018
  40e8b8:	0002e83c 	.word	0x0002e83c
  40e8bc:	0000ba50 	.word	0x0000ba50
  40e8c0:	42440000 	.word	0x42440000
  40e8c4:	00000a76 	.word	0x00000a76
  40e8c8:	1fbf1c24 	.word	0x1fbf1c24
  40e8cc:	0002ec38 	.word	0x0002ec38
  40e8d0:	0002e768 	.word	0x0002e768

0040e8d4 <cvSetReal3D>:
  40e8d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40e8d8:	e24dd01c 	sub	sp, sp, #28
  40e8dc:	e3a0c000 	mov	ip, #0
  40e8e0:	e58dc008 	str	ip, [sp, #8]
  40e8e4:	e3500000 	cmp	r0, #0
  40e8e8:	0a000003 	beq	40e8fc <cvSetReal3D+0x28>
  40e8ec:	e1d0e0b2 	ldrh	lr, [r0, #2]
  40e8f0:	e59fc0a4 	ldr	ip, [pc, #164]	; 40e99c <cvSetReal3D+0xc8>
  40e8f4:	e15c080e 	cmp	ip, lr, lsl #16
  40e8f8:	0a000004 	beq	40e910 <cvSetReal3D+0x3c>
  40e8fc:	e28dc008 	add	ip, sp, #8
  40e900:	e58dc000 	str	ip, [sp]
  40e904:	ebfffae1 	bl	40d490 <cvPtr3D>
  40e908:	e1a02000 	mov	r2, r0
  40e90c:	ea000009 	b	40e938 <cvSetReal3D+0x64>
  40e910:	e58d100c 	str	r1, [sp, #12]
  40e914:	e58d2010 	str	r2, [sp, #16]
  40e918:	e58d3014 	str	r3, [sp, #20]
  40e91c:	e3a03000 	mov	r3, #0
  40e920:	e58d3000 	str	r3, [sp]
  40e924:	e28d100c 	add	r1, sp, #12
  40e928:	e28d2008 	add	r2, sp, #8
  40e92c:	e3e03000 	mvn	r3, #0
  40e930:	ebfff037 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40e934:	e1a02000 	mov	r2, r0
  40e938:	e59d3008 	ldr	r3, [sp, #8]
  40e93c:	e2031f7e 	and	r1, r3, #504	; 0x1f8
  40e940:	e1a011c1 	asr	r1, r1, #3
  40e944:	e2811001 	add	r1, r1, #1
  40e948:	e3510001 	cmp	r1, #1
  40e94c:	da00000b 	ble	40e980 <cvSetReal3D+0xac>
  40e950:	e59f3048 	ldr	r3, [pc, #72]	; 40e9a0 <cvSetReal3D+0xcc>
  40e954:	e58d3000 	str	r3, [sp]
  40e958:	e3e0000e 	mvn	r0, #14
  40e95c:	e59f1040 	ldr	r1, [pc, #64]	; 40e9a4 <cvSetReal3D+0xd0>
  40e960:	e08f1001 	add	r1, pc, r1
  40e964:	e2811e25 	add	r1, r1, #592	; 0x250
  40e968:	e59f2038 	ldr	r2, [pc, #56]	; 40e9a8 <cvSetReal3D+0xd4>
  40e96c:	e08f2002 	add	r2, pc, r2
  40e970:	e59f3034 	ldr	r3, [pc, #52]	; 40e9ac <cvSetReal3D+0xd8>
  40e974:	e08f3003 	add	r3, pc, r3
  40e978:	eb00104a 	bl	412aa8 <cvError>
  40e97c:	ea000003 	b	40e990 <cvSetReal3D+0xbc>
  40e980:	e3520000 	cmp	r2, #0
  40e984:	128d1020 	addne	r1, sp, #32
  40e988:	18910003 	ldmne	r1, {r0, r1}
  40e98c:	1bffeb2f 	blne	409650 <_ZL10icvSetRealdPKvi>
  40e990:	e28dd01c 	add	sp, sp, #28
  40e994:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40e998:	e12fff1e 	bx	lr
  40e99c:	42440000 	.word	0x42440000
  40e9a0:	00000a91 	.word	0x00000a91
  40e9a4:	1fbf1b30 	.word	0x1fbf1b30
  40e9a8:	0002eb44 	.word	0x0002eb44
  40e9ac:	0002e674 	.word	0x0002e674

0040e9b0 <cvSetRealND>:
  40e9b0:	e92d4030 	push	{r4, r5, lr}
  40e9b4:	e24dd014 	sub	sp, sp, #20
  40e9b8:	e1a04002 	mov	r4, r2
  40e9bc:	e1a05003 	mov	r5, r3
  40e9c0:	e3a03000 	mov	r3, #0
  40e9c4:	e58d300c 	str	r3, [sp, #12]
  40e9c8:	e3500000 	cmp	r0, #0
  40e9cc:	0a000003 	beq	40e9e0 <cvSetRealND+0x30>
  40e9d0:	e1d020b2 	ldrh	r2, [r0, #2]
  40e9d4:	e59f309c 	ldr	r3, [pc, #156]	; 40ea78 <cvSetRealND+0xc8>
  40e9d8:	e1530802 	cmp	r3, r2, lsl #16
  40e9dc:	0a000006 	beq	40e9fc <cvSetRealND+0x4c>
  40e9e0:	e3a03000 	mov	r3, #0
  40e9e4:	e58d3000 	str	r3, [sp]
  40e9e8:	e28d200c 	add	r2, sp, #12
  40e9ec:	e3a03001 	mov	r3, #1
  40e9f0:	ebfffb01 	bl	40d5fc <cvPtrND>
  40e9f4:	e1a02000 	mov	r2, r0
  40e9f8:	ea000005 	b	40ea14 <cvSetRealND+0x64>
  40e9fc:	e3a03000 	mov	r3, #0
  40ea00:	e58d3000 	str	r3, [sp]
  40ea04:	e28d200c 	add	r2, sp, #12
  40ea08:	e3e03000 	mvn	r3, #0
  40ea0c:	ebfff000 	bl	40aa14 <_ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj>
  40ea10:	e1a02000 	mov	r2, r0
  40ea14:	e59d300c 	ldr	r3, [sp, #12]
  40ea18:	e2031f7e 	and	r1, r3, #504	; 0x1f8
  40ea1c:	e1a011c1 	asr	r1, r1, #3
  40ea20:	e2811001 	add	r1, r1, #1
  40ea24:	e3510001 	cmp	r1, #1
  40ea28:	da00000b 	ble	40ea5c <cvSetRealND+0xac>
  40ea2c:	e59f3048 	ldr	r3, [pc, #72]	; 40ea7c <cvSetRealND+0xcc>
  40ea30:	e58d3000 	str	r3, [sp]
  40ea34:	e3e0000e 	mvn	r0, #14
  40ea38:	e59f1040 	ldr	r1, [pc, #64]	; 40ea80 <cvSetRealND+0xd0>
  40ea3c:	e08f1001 	add	r1, pc, r1
  40ea40:	e2811f97 	add	r1, r1, #604	; 0x25c
  40ea44:	e59f2038 	ldr	r2, [pc, #56]	; 40ea84 <cvSetRealND+0xd4>
  40ea48:	e08f2002 	add	r2, pc, r2
  40ea4c:	e59f3034 	ldr	r3, [pc, #52]	; 40ea88 <cvSetRealND+0xd8>
  40ea50:	e08f3003 	add	r3, pc, r3
  40ea54:	eb001013 	bl	412aa8 <cvError>
  40ea58:	ea000003 	b	40ea6c <cvSetRealND+0xbc>
  40ea5c:	e3520000 	cmp	r2, #0
  40ea60:	11a00004 	movne	r0, r4
  40ea64:	11a01005 	movne	r1, r5
  40ea68:	1bffeaf8 	blne	409650 <_ZL10icvSetRealdPKvi>
  40ea6c:	e28dd014 	add	sp, sp, #20
  40ea70:	e8bd4030 	pop	{r4, r5, lr}
  40ea74:	e12fff1e 	bx	lr
  40ea78:	42440000 	.word	0x42440000
  40ea7c:	00000aaa 	.word	0x00000aaa
  40ea80:	1fbf1a54 	.word	0x1fbf1a54
  40ea84:	0002ea68 	.word	0x0002ea68
  40ea88:	0002e598 	.word	0x0002e598

0040ea8c <cvClearND>:
  40ea8c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  40ea90:	e24dd014 	sub	sp, sp, #20
  40ea94:	e3500000 	cmp	r0, #0
  40ea98:	0a000003 	beq	40eaac <cvClearND+0x20>
  40ea9c:	e1d020b2 	ldrh	r2, [r0, #2]
  40eaa0:	e59f307c 	ldr	r3, [pc, #124]	; 40eb24 <cvClearND+0x98>
  40eaa4:	e1530802 	cmp	r3, r2, lsl #16
  40eaa8:	0a000018 	beq	40eb10 <cvClearND+0x84>
  40eaac:	e3a03000 	mov	r3, #0
  40eab0:	e58d3000 	str	r3, [sp]
  40eab4:	e28d200c 	add	r2, sp, #12
  40eab8:	e3a03001 	mov	r3, #1
  40eabc:	ebffface 	bl	40d5fc <cvPtrND>
  40eac0:	e3500000 	cmp	r0, #0
  40eac4:	0a000013 	beq	40eb18 <cvClearND+0x8c>
  40eac8:	e59d200c 	ldr	r2, [sp, #12]
  40eacc:	e2021f7e 	and	r1, r2, #504	; 0x1f8
  40ead0:	e1a011c1 	asr	r1, r1, #3
  40ead4:	e2813001 	add	r3, r1, #1
  40ead8:	e2022007 	and	r2, r2, #7
  40eadc:	e1a02082 	lsl	r2, r2, #1
  40eae0:	e59f1040 	ldr	r1, [pc, #64]	; 40eb28 <cvClearND+0x9c>
  40eae4:	e1a01231 	lsr	r1, r1, r2
  40eae8:	e2011003 	and	r1, r1, #3
  40eaec:	e1a01113 	lsl	r1, r3, r1
  40eaf0:	e3a03000 	mov	r3, #0
  40eaf4:	ea000002 	b	40eb04 <cvClearND+0x78>
  40eaf8:	e3a02000 	mov	r2, #0
  40eafc:	e7c02003 	strb	r2, [r0, r3]
  40eb00:	e2833001 	add	r3, r3, #1
  40eb04:	e1530001 	cmp	r3, r1
  40eb08:	3afffffa 	bcc	40eaf8 <cvClearND+0x6c>
  40eb0c:	ea000001 	b	40eb18 <cvClearND+0x8c>
  40eb10:	e3a02000 	mov	r2, #0
  40eb14:	ebffea54 	bl	40946c <_ZL13icvDeleteNodeP11CvSparseMatPKiPj>
  40eb18:	e28dd014 	add	sp, sp, #20
  40eb1c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  40eb20:	e12fff1e 	bx	lr
  40eb24:	42440000 	.word	0x42440000
  40eb28:	0000ba50 	.word	0x0000ba50

0040eb2c <cvGetMat>:
  40eb2c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  40eb30:	e24dd008 	sub	sp, sp, #8
  40eb34:	e1a05002 	mov	r5, r2
  40eb38:	e59f25d8 	ldr	r2, [pc, #1496]	; 40f118 <cvGetMat+0x5ec>
  40eb3c:	e08f2002 	add	r2, pc, r2
  40eb40:	e3500000 	cmp	r0, #0
  40eb44:	13510000 	cmpne	r1, #0
  40eb48:	1a00000d 	bne	40eb84 <cvGetMat+0x58>
  40eb4c:	e59f35c8 	ldr	r3, [pc, #1480]	; 40f11c <cvGetMat+0x5f0>
  40eb50:	e58d3000 	str	r3, [sp]
  40eb54:	e3e0001a 	mvn	r0, #26
  40eb58:	e59f15c0 	ldr	r1, [pc, #1472]	; 40f120 <cvGetMat+0x5f4>
  40eb5c:	e08f1001 	add	r1, pc, r1
  40eb60:	e2811f9a 	add	r1, r1, #616	; 0x268
  40eb64:	e59f25b8 	ldr	r2, [pc, #1464]	; 40f124 <cvGetMat+0x5f8>
  40eb68:	e08f2002 	add	r2, pc, r2
  40eb6c:	e59f35b4 	ldr	r3, [pc, #1460]	; 40f128 <cvGetMat+0x5fc>
  40eb70:	e08f3003 	add	r3, pc, r3
  40eb74:	eb000fcb 	bl	412aa8 <cvError>
  40eb78:	e3a06000 	mov	r6, #0
  40eb7c:	e1a04006 	mov	r4, r6
  40eb80:	ea00015e 	b	40f100 <cvGetMat+0x5d4>
  40eb84:	e1a04001 	mov	r4, r1
  40eb88:	e1a0c000 	mov	ip, r0
  40eb8c:	e3500000 	cmp	r0, #0
  40eb90:	0a00001a 	beq	40ec00 <cvGetMat+0xd4>
  40eb94:	e1d000b2 	ldrh	r0, [r0, #2]
  40eb98:	e59f158c 	ldr	r1, [pc, #1420]	; 40f12c <cvGetMat+0x600>
  40eb9c:	e1510800 	cmp	r1, r0, lsl #16
  40eba0:	1a000016 	bne	40ec00 <cvGetMat+0xd4>
  40eba4:	e59c1018 	ldr	r1, [ip, #24]
  40eba8:	e3510000 	cmp	r1, #0
  40ebac:	da000013 	ble	40ec00 <cvGetMat+0xd4>
  40ebb0:	e59c1014 	ldr	r1, [ip, #20]
  40ebb4:	e3510000 	cmp	r1, #0
  40ebb8:	da000010 	ble	40ec00 <cvGetMat+0xd4>
  40ebbc:	e59c3010 	ldr	r3, [ip, #16]
  40ebc0:	e3530000 	cmp	r3, #0
  40ebc4:	1a00014b 	bne	40f0f8 <cvGetMat+0x5cc>
  40ebc8:	e59f3560 	ldr	r3, [pc, #1376]	; 40f130 <cvGetMat+0x604>
  40ebcc:	e58d3000 	str	r3, [sp]
  40ebd0:	e3e0001a 	mvn	r0, #26
  40ebd4:	e59f1558 	ldr	r1, [pc, #1368]	; 40f134 <cvGetMat+0x608>
  40ebd8:	e08f1001 	add	r1, pc, r1
  40ebdc:	e2811f9a 	add	r1, r1, #616	; 0x268
  40ebe0:	e59f2550 	ldr	r2, [pc, #1360]	; 40f138 <cvGetMat+0x60c>
  40ebe4:	e08f2002 	add	r2, pc, r2
  40ebe8:	e59f354c 	ldr	r3, [pc, #1356]	; 40f13c <cvGetMat+0x610>
  40ebec:	e08f3003 	add	r3, pc, r3
  40ebf0:	eb000fac 	bl	412aa8 <cvError>
  40ebf4:	e3a06000 	mov	r6, #0
  40ebf8:	e1a04006 	mov	r4, r6
  40ebfc:	ea00013f 	b	40f100 <cvGetMat+0x5d4>
  40ec00:	e35c0000 	cmp	ip, #0
  40ec04:	0a0000d3 	beq	40ef58 <cvGetMat+0x42c>
  40ec08:	e59c1000 	ldr	r1, [ip]
  40ec0c:	e3510070 	cmp	r1, #112	; 0x70
  40ec10:	1a0000d0 	bne	40ef58 <cvGetMat+0x42c>
  40ec14:	e59ce044 	ldr	lr, [ip, #68]	; 0x44
  40ec18:	e35e0000 	cmp	lr, #0
  40ec1c:	1a00000d 	bne	40ec58 <cvGetMat+0x12c>
  40ec20:	e59f3518 	ldr	r3, [pc, #1304]	; 40f140 <cvGetMat+0x614>
  40ec24:	e58d3000 	str	r3, [sp]
  40ec28:	e3e0001a 	mvn	r0, #26
  40ec2c:	e59f1510 	ldr	r1, [pc, #1296]	; 40f144 <cvGetMat+0x618>
  40ec30:	e08f1001 	add	r1, pc, r1
  40ec34:	e2811f9a 	add	r1, r1, #616	; 0x268
  40ec38:	e59f2508 	ldr	r2, [pc, #1288]	; 40f148 <cvGetMat+0x61c>
  40ec3c:	e08f2002 	add	r2, pc, r2
  40ec40:	e59f3504 	ldr	r3, [pc, #1284]	; 40f14c <cvGetMat+0x620>
  40ec44:	e08f3003 	add	r3, pc, r3
  40ec48:	eb000f96 	bl	412aa8 <cvError>
  40ec4c:	e3a06000 	mov	r6, #0
  40ec50:	e1a04006 	mov	r4, r6
  40ec54:	ea000129 	b	40f100 <cvGetMat+0x5d4>
  40ec58:	e59c3010 	ldr	r3, [ip, #16]
  40ec5c:	e20310ff 	and	r1, r3, #255	; 0xff
  40ec60:	e1a03fa3 	lsr	r3, r3, #31
  40ec64:	e0833141 	add	r3, r3, r1, asr #2
  40ec68:	e59f14e0 	ldr	r1, [pc, #1248]	; 40f150 <cvGetMat+0x624>
  40ec6c:	e7922001 	ldr	r2, [r2, r1]
  40ec70:	e19230d3 	ldrsb	r3, [r2, r3]
  40ec74:	e3530000 	cmp	r3, #0
  40ec78:	aa00000d 	bge	40ecb4 <cvGetMat+0x188>
  40ec7c:	e3a03eaf 	mov	r3, #2800	; 0xaf0
  40ec80:	e58d3000 	str	r3, [sp]
  40ec84:	e3e00010 	mvn	r0, #16
  40ec88:	e59f14c4 	ldr	r1, [pc, #1220]	; 40f154 <cvGetMat+0x628>
  40ec8c:	e08f1001 	add	r1, pc, r1
  40ec90:	e2811f9a 	add	r1, r1, #616	; 0x268
  40ec94:	e59f24bc 	ldr	r2, [pc, #1212]	; 40f158 <cvGetMat+0x62c>
  40ec98:	e08f2002 	add	r2, pc, r2
  40ec9c:	e59f34b8 	ldr	r3, [pc, #1208]	; 40f15c <cvGetMat+0x630>
  40eca0:	e08f3003 	add	r3, pc, r3
  40eca4:	eb000f7f 	bl	412aa8 <cvError>
  40eca8:	e3a06000 	mov	r6, #0
  40ecac:	e1a04006 	mov	r4, r6
  40ecb0:	ea000112 	b	40f100 <cvGetMat+0x5d4>
  40ecb4:	e59c001c 	ldr	r0, [ip, #28]
  40ecb8:	e59c1008 	ldr	r1, [ip, #8]
  40ecbc:	e3510001 	cmp	r1, #1
  40ecc0:	c3e02000 	mvngt	r2, #0
  40ecc4:	d3a02000 	movle	r2, #0
  40ecc8:	e0022000 	and	r2, r2, r0
  40eccc:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
  40ecd0:	e3500000 	cmp	r0, #0
  40ecd4:	0a000071 	beq	40eea0 <cvGetMat+0x374>
  40ecd8:	e3520001 	cmp	r2, #1
  40ecdc:	1a000038 	bne	40edc4 <cvGetMat+0x298>
  40ece0:	e5906000 	ldr	r6, [r0]
  40ece4:	e3560000 	cmp	r6, #0
  40ece8:	1a00000c 	bne	40ed20 <cvGetMat+0x1f4>
  40ecec:	e59f346c 	ldr	r3, [pc, #1132]	; 40f160 <cvGetMat+0x634>
  40ecf0:	e58d3000 	str	r3, [sp]
  40ecf4:	e3e000cd 	mvn	r0, #205	; 0xcd
  40ecf8:	e59f1464 	ldr	r1, [pc, #1124]	; 40f164 <cvGetMat+0x638>
  40ecfc:	e08f1001 	add	r1, pc, r1
  40ed00:	e2811f9a 	add	r1, r1, #616	; 0x268
  40ed04:	e59f245c 	ldr	r2, [pc, #1116]	; 40f168 <cvGetMat+0x63c>
  40ed08:	e08f2002 	add	r2, pc, r2
  40ed0c:	e59f3458 	ldr	r3, [pc, #1112]	; 40f16c <cvGetMat+0x640>
  40ed10:	e08f3003 	add	r3, pc, r3
  40ed14:	eb000f63 	bl	412aa8 <cvError>
  40ed18:	e1a04006 	mov	r4, r6
  40ed1c:	ea0000f7 	b	40f100 <cvGetMat+0x5d4>
  40ed20:	e5901010 	ldr	r1, [r0, #16]
  40ed24:	e590200c 	ldr	r2, [r0, #12]
  40ed28:	e2466001 	sub	r6, r6, #1
  40ed2c:	e59c8040 	ldr	r8, [ip, #64]	; 0x40
  40ed30:	e59c7048 	ldr	r7, [ip, #72]	; 0x48
  40ed34:	e590c008 	ldr	ip, [r0, #8]
  40ed38:	e00c0c97 	mul	ip, r7, ip
  40ed3c:	e026c698 	mla	r6, r8, r6, ip
  40ed40:	e2038f7e 	and	r8, r3, #504	; 0x1f8
  40ed44:	e1a081c8 	asr	r8, r8, #3
  40ed48:	e2888001 	add	r8, r8, #1
  40ed4c:	e203c007 	and	ip, r3, #7
  40ed50:	e1a0908c 	lsl	r9, ip, #1
  40ed54:	e59fc414 	ldr	ip, [pc, #1044]	; 40f170 <cvGetMat+0x644>
  40ed58:	e1a0c93c 	lsr	ip, ip, r9
  40ed5c:	e20cc003 	and	ip, ip, #3
  40ed60:	e1a08c18 	lsl	r8, r8, ip
  40ed64:	e590c004 	ldr	ip, [r0, #4]
  40ed68:	e020689c 	mla	r0, ip, r8, r6
  40ed6c:	e08ee000 	add	lr, lr, r0
  40ed70:	e58de000 	str	lr, [sp]
  40ed74:	e58d7004 	str	r7, [sp, #4]
  40ed78:	e1a00004 	mov	r0, r4
  40ed7c:	ebffeab2 	bl	40984c <cvInitMatHeader>
  40ed80:	eb000f17 	bl	4129e4 <cvGetErrStatus>
  40ed84:	e3500000 	cmp	r0, #0
  40ed88:	aa00006e 	bge	40ef48 <cvGetMat+0x41c>
  40ed8c:	e59f33e0 	ldr	r3, [pc, #992]	; 40f174 <cvGetMat+0x648>
  40ed90:	e58d3000 	str	r3, [sp]
  40ed94:	e3e00000 	mvn	r0, #0
  40ed98:	e59f13d8 	ldr	r1, [pc, #984]	; 40f178 <cvGetMat+0x64c>
  40ed9c:	e08f1001 	add	r1, pc, r1
  40eda0:	e2811f9a 	add	r1, r1, #616	; 0x268
  40eda4:	e59f23d0 	ldr	r2, [pc, #976]	; 40f17c <cvGetMat+0x650>
  40eda8:	e08f2002 	add	r2, pc, r2
  40edac:	e59f33cc 	ldr	r3, [pc, #972]	; 40f180 <cvGetMat+0x654>
  40edb0:	e08f3003 	add	r3, pc, r3
  40edb4:	eb000f3b 	bl	412aa8 <cvError>
  40edb8:	e3a06000 	mov	r6, #0
  40edbc:	e1a04006 	mov	r4, r6
  40edc0:	ea0000ce 	b	40f100 <cvGetMat+0x5d4>
  40edc4:	e2412001 	sub	r2, r1, #1
  40edc8:	e0833182 	add	r3, r3, r2, lsl #3
  40edcc:	e5906000 	ldr	r6, [r0]
  40edd0:	e3510040 	cmp	r1, #64	; 0x40
  40edd4:	da00000c 	ble	40ee0c <cvGetMat+0x2e0>
  40edd8:	e59f33a4 	ldr	r3, [pc, #932]	; 40f184 <cvGetMat+0x658>
  40eddc:	e58d3000 	str	r3, [sp]
  40ede0:	e3e0000e 	mvn	r0, #14
  40ede4:	e59f139c 	ldr	r1, [pc, #924]	; 40f188 <cvGetMat+0x65c>
  40ede8:	e08f1001 	add	r1, pc, r1
  40edec:	e2811f9a 	add	r1, r1, #616	; 0x268
  40edf0:	e59f2394 	ldr	r2, [pc, #916]	; 40f18c <cvGetMat+0x660>
  40edf4:	e08f2002 	add	r2, pc, r2
  40edf8:	e59f3390 	ldr	r3, [pc, #912]	; 40f190 <cvGetMat+0x664>
  40edfc:	e08f3003 	add	r3, pc, r3
  40ee00:	eb000f28 	bl	412aa8 <cvError>
  40ee04:	e3a04000 	mov	r4, #0
  40ee08:	ea0000bc 	b	40f100 <cvGetMat+0x5d4>
  40ee0c:	e5901010 	ldr	r1, [r0, #16]
  40ee10:	e590200c 	ldr	r2, [r0, #12]
  40ee14:	e59c8048 	ldr	r8, [ip, #72]	; 0x48
  40ee18:	e590c008 	ldr	ip, [r0, #8]
  40ee1c:	e2037f7e 	and	r7, r3, #504	; 0x1f8
  40ee20:	e1a071c7 	asr	r7, r7, #3
  40ee24:	e2879001 	add	r9, r7, #1
  40ee28:	e2037007 	and	r7, r3, #7
  40ee2c:	e1a0a087 	lsl	sl, r7, #1
  40ee30:	e59f7338 	ldr	r7, [pc, #824]	; 40f170 <cvGetMat+0x644>
  40ee34:	e1a07a37 	lsr	r7, r7, sl
  40ee38:	e2077003 	and	r7, r7, #3
  40ee3c:	e1a07719 	lsl	r7, r9, r7
  40ee40:	e5900004 	ldr	r0, [r0, #4]
  40ee44:	e0000097 	mul	r0, r7, r0
  40ee48:	e020089c 	mla	r0, ip, r8, r0
  40ee4c:	e08ee000 	add	lr, lr, r0
  40ee50:	e58de000 	str	lr, [sp]
  40ee54:	e58d8004 	str	r8, [sp, #4]
  40ee58:	e1a00004 	mov	r0, r4
  40ee5c:	ebffea7a 	bl	40984c <cvInitMatHeader>
  40ee60:	eb000edf 	bl	4129e4 <cvGetErrStatus>
  40ee64:	e3500000 	cmp	r0, #0
  40ee68:	aa0000a4 	bge	40f100 <cvGetMat+0x5d4>
  40ee6c:	e59f3320 	ldr	r3, [pc, #800]	; 40f194 <cvGetMat+0x668>
  40ee70:	e58d3000 	str	r3, [sp]
  40ee74:	e3e00000 	mvn	r0, #0
  40ee78:	e59f1318 	ldr	r1, [pc, #792]	; 40f198 <cvGetMat+0x66c>
  40ee7c:	e08f1001 	add	r1, pc, r1
  40ee80:	e2811f9a 	add	r1, r1, #616	; 0x268
  40ee84:	e59f2310 	ldr	r2, [pc, #784]	; 40f19c <cvGetMat+0x670>
  40ee88:	e08f2002 	add	r2, pc, r2
  40ee8c:	e59f330c 	ldr	r3, [pc, #780]	; 40f1a0 <cvGetMat+0x674>
  40ee90:	e08f3003 	add	r3, pc, r3
  40ee94:	eb000f03 	bl	412aa8 <cvError>
  40ee98:	e3a04000 	mov	r4, #0
  40ee9c:	ea000097 	b	40f100 <cvGetMat+0x5d4>
  40eea0:	e2411001 	sub	r1, r1, #1
  40eea4:	e0833181 	add	r3, r3, r1, lsl #3
  40eea8:	e3520000 	cmp	r2, #0
  40eeac:	0a00000d 	beq	40eee8 <cvGetMat+0x3bc>
  40eeb0:	e59f32ec 	ldr	r3, [pc, #748]	; 40f1a4 <cvGetMat+0x678>
  40eeb4:	e58d3000 	str	r3, [sp]
  40eeb8:	e3e000cd 	mvn	r0, #205	; 0xcd
  40eebc:	e59f12e4 	ldr	r1, [pc, #740]	; 40f1a8 <cvGetMat+0x67c>
  40eec0:	e08f1001 	add	r1, pc, r1
  40eec4:	e2811f9a 	add	r1, r1, #616	; 0x268
  40eec8:	e59f22dc 	ldr	r2, [pc, #732]	; 40f1ac <cvGetMat+0x680>
  40eecc:	e08f2002 	add	r2, pc, r2
  40eed0:	e59f32d8 	ldr	r3, [pc, #728]	; 40f1b0 <cvGetMat+0x684>
  40eed4:	e08f3003 	add	r3, pc, r3
  40eed8:	eb000ef2 	bl	412aa8 <cvError>
  40eedc:	e3a06000 	mov	r6, #0
  40eee0:	e1a04006 	mov	r4, r6
  40eee4:	ea000085 	b	40f100 <cvGetMat+0x5d4>
  40eee8:	e59c102c 	ldr	r1, [ip, #44]	; 0x2c
  40eeec:	e59c2028 	ldr	r2, [ip, #40]	; 0x28
  40eef0:	e59c0048 	ldr	r0, [ip, #72]	; 0x48
  40eef4:	e58de000 	str	lr, [sp]
  40eef8:	e58d0004 	str	r0, [sp, #4]
  40eefc:	e1a00004 	mov	r0, r4
  40ef00:	ebffea51 	bl	40984c <cvInitMatHeader>
  40ef04:	eb000eb6 	bl	4129e4 <cvGetErrStatus>
  40ef08:	e3500000 	cmp	r0, #0
  40ef0c:	aa00000f 	bge	40ef50 <cvGetMat+0x424>
  40ef10:	e59f329c 	ldr	r3, [pc, #668]	; 40f1b4 <cvGetMat+0x688>
  40ef14:	e58d3000 	str	r3, [sp]
  40ef18:	e3e00000 	mvn	r0, #0
  40ef1c:	e59f1294 	ldr	r1, [pc, #660]	; 40f1b8 <cvGetMat+0x68c>
  40ef20:	e08f1001 	add	r1, pc, r1
  40ef24:	e2811f9a 	add	r1, r1, #616	; 0x268
  40ef28:	e59f228c 	ldr	r2, [pc, #652]	; 40f1bc <cvGetMat+0x690>
  40ef2c:	e08f2002 	add	r2, pc, r2
  40ef30:	e59f3288 	ldr	r3, [pc, #648]	; 40f1c0 <cvGetMat+0x694>
  40ef34:	e08f3003 	add	r3, pc, r3
  40ef38:	eb000eda 	bl	412aa8 <cvError>
  40ef3c:	e3a06000 	mov	r6, #0
  40ef40:	e1a04006 	mov	r4, r6
  40ef44:	ea00006d 	b	40f100 <cvGetMat+0x5d4>
  40ef48:	e3a06000 	mov	r6, #0
  40ef4c:	ea00006b 	b	40f100 <cvGetMat+0x5d4>
  40ef50:	e3a06000 	mov	r6, #0
  40ef54:	ea000069 	b	40f100 <cvGetMat+0x5d4>
  40ef58:	e35c0000 	cmp	ip, #0
  40ef5c:	13530000 	cmpne	r3, #0
  40ef60:	0a000056 	beq	40f0c0 <cvGetMat+0x594>
  40ef64:	e59c3000 	ldr	r3, [ip]
  40ef68:	e1a01823 	lsr	r1, r3, #16
  40ef6c:	e59f2250 	ldr	r2, [pc, #592]	; 40f1c4 <cvGetMat+0x698>
  40ef70:	e1520801 	cmp	r2, r1, lsl #16
  40ef74:	1a000051 	bne	40f0c0 <cvGetMat+0x594>
  40ef78:	e59ce014 	ldr	lr, [ip, #20]
  40ef7c:	e59c2010 	ldr	r2, [ip, #16]
  40ef80:	e3520000 	cmp	r2, #0
  40ef84:	1a00000d 	bne	40efc0 <cvGetMat+0x494>
  40ef88:	e59f3238 	ldr	r3, [pc, #568]	; 40f1c8 <cvGetMat+0x69c>
  40ef8c:	e58d3000 	str	r3, [sp]
  40ef90:	e3e0001a 	mvn	r0, #26
  40ef94:	e59f1230 	ldr	r1, [pc, #560]	; 40f1cc <cvGetMat+0x6a0>
  40ef98:	e08f1001 	add	r1, pc, r1
  40ef9c:	e2811f9a 	add	r1, r1, #616	; 0x268
  40efa0:	e59f2228 	ldr	r2, [pc, #552]	; 40f1d0 <cvGetMat+0x6a4>
  40efa4:	e08f2002 	add	r2, pc, r2
  40efa8:	e59f3224 	ldr	r3, [pc, #548]	; 40f1d4 <cvGetMat+0x6a8>
  40efac:	e08f3003 	add	r3, pc, r3
  40efb0:	eb000ebc 	bl	412aa8 <cvError>
  40efb4:	e3a06000 	mov	r6, #0
  40efb8:	e1a04006 	mov	r4, r6
  40efbc:	ea00004f 	b	40f100 <cvGetMat+0x5d4>
  40efc0:	e3130901 	tst	r3, #16384	; 0x4000
  40efc4:	1a00000d 	bne	40f000 <cvGetMat+0x4d4>
  40efc8:	e59f3208 	ldr	r3, [pc, #520]	; 40f1d8 <cvGetMat+0x6ac>
  40efcc:	e58d3000 	str	r3, [sp]
  40efd0:	e3e00004 	mvn	r0, #4
  40efd4:	e59f1200 	ldr	r1, [pc, #512]	; 40f1dc <cvGetMat+0x6b0>
  40efd8:	e08f1001 	add	r1, pc, r1
  40efdc:	e2811f9a 	add	r1, r1, #616	; 0x268
  40efe0:	e59f21f8 	ldr	r2, [pc, #504]	; 40f1e0 <cvGetMat+0x6b4>
  40efe4:	e08f2002 	add	r2, pc, r2
  40efe8:	e59f31f4 	ldr	r3, [pc, #500]	; 40f1e4 <cvGetMat+0x6b8>
  40efec:	e08f3003 	add	r3, pc, r3
  40eff0:	eb000eac 	bl	412aa8 <cvError>
  40eff4:	e3a06000 	mov	r6, #0
  40eff8:	e1a04006 	mov	r4, r6
  40effc:	ea00003f 	b	40f100 <cvGetMat+0x5d4>
  40f000:	e59c0004 	ldr	r0, [ip, #4]
  40f004:	e3500002 	cmp	r0, #2
  40f008:	ca000005 	bgt	40f024 <cvGetMat+0x4f8>
  40f00c:	ea000009 	b	40f038 <cvGetMat+0x50c>
  40f010:	e08c1183 	add	r1, ip, r3, lsl #3
  40f014:	e5911014 	ldr	r1, [r1, #20]
  40f018:	e0020291 	mul	r2, r1, r2
  40f01c:	e2833001 	add	r3, r3, #1
  40f020:	ea000001 	b	40f02c <cvGetMat+0x500>
  40f024:	e3a02001 	mov	r2, #1
  40f028:	e1a03002 	mov	r3, r2
  40f02c:	e1530000 	cmp	r3, r0
  40f030:	bafffff6 	blt	40f010 <cvGetMat+0x4e4>
  40f034:	ea000002 	b	40f044 <cvGetMat+0x518>
  40f038:	e3500001 	cmp	r0, #1
  40f03c:	159c201c 	ldrne	r2, [ip, #28]
  40f040:	03a02001 	moveq	r2, #1
  40f044:	e3a03000 	mov	r3, #0
  40f048:	e5843008 	str	r3, [r4, #8]
  40f04c:	e584300c 	str	r3, [r4, #12]
  40f050:	e59c3010 	ldr	r3, [ip, #16]
  40f054:	e5843010 	str	r3, [r4, #16]
  40f058:	e584e014 	str	lr, [r4, #20]
  40f05c:	e5842018 	str	r2, [r4, #24]
  40f060:	e59c3000 	ldr	r3, [ip]
  40f064:	e1a01b83 	lsl	r1, r3, #23
  40f068:	e59f3178 	ldr	r3, [pc, #376]	; 40f1e8 <cvGetMat+0x6bc>
  40f06c:	e1833ba1 	orr	r3, r3, r1, lsr #23
  40f070:	e5843000 	str	r3, [r4]
  40f074:	e59c0000 	ldr	r0, [ip]
  40f078:	e2003f7e 	and	r3, r0, #504	; 0x1f8
  40f07c:	e1a031c3 	asr	r3, r3, #3
  40f080:	e2831001 	add	r1, r3, #1
  40f084:	e2000007 	and	r0, r0, #7
  40f088:	e1a00080 	lsl	r0, r0, #1
  40f08c:	e59f30dc 	ldr	r3, [pc, #220]	; 40f170 <cvGetMat+0x644>
  40f090:	e1a03033 	lsr	r3, r3, r0
  40f094:	e2033003 	and	r3, r3, #3
  40f098:	e1a03311 	lsl	r3, r1, r3
  40f09c:	e0020293 	mul	r2, r3, r2
  40f0a0:	e5842004 	str	r2, [r4, #4]
  40f0a4:	e35e0001 	cmp	lr, #1
  40f0a8:	c3e03000 	mvngt	r3, #0
  40f0ac:	d3a03000 	movle	r3, #0
  40f0b0:	e0022003 	and	r2, r2, r3
  40f0b4:	e5842004 	str	r2, [r4, #4]
  40f0b8:	e3a06000 	mov	r6, #0
  40f0bc:	ea00000f 	b	40f100 <cvGetMat+0x5d4>
  40f0c0:	e59f3124 	ldr	r3, [pc, #292]	; 40f1ec <cvGetMat+0x6c0>
  40f0c4:	e58d3000 	str	r3, [sp]
  40f0c8:	e3e000cd 	mvn	r0, #205	; 0xcd
  40f0cc:	e59f111c 	ldr	r1, [pc, #284]	; 40f1f0 <cvGetMat+0x6c4>
  40f0d0:	e08f1001 	add	r1, pc, r1
  40f0d4:	e2811f9a 	add	r1, r1, #616	; 0x268
  40f0d8:	e59f2114 	ldr	r2, [pc, #276]	; 40f1f4 <cvGetMat+0x6c8>
  40f0dc:	e08f2002 	add	r2, pc, r2
  40f0e0:	e59f3110 	ldr	r3, [pc, #272]	; 40f1f8 <cvGetMat+0x6cc>
  40f0e4:	e08f3003 	add	r3, pc, r3
  40f0e8:	eb000e6e 	bl	412aa8 <cvError>
  40f0ec:	e3a06000 	mov	r6, #0
  40f0f0:	e1a04006 	mov	r4, r6
  40f0f4:	ea000001 	b	40f100 <cvGetMat+0x5d4>
  40f0f8:	e1a0400c 	mov	r4, ip
  40f0fc:	e3a06000 	mov	r6, #0
  40f100:	e3550000 	cmp	r5, #0
  40f104:	15856000 	strne	r6, [r5]
  40f108:	e1a00004 	mov	r0, r4
  40f10c:	e28dd008 	add	sp, sp, #8
  40f110:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  40f114:	e12fff1e 	bx	lr
  40f118:	000324f8 	.word	0x000324f8
  40f11c:	00000add 	.word	0x00000add
  40f120:	1fbf1934 	.word	0x1fbf1934
  40f124:	0002e978 	.word	0x0002e978
  40f128:	0002e478 	.word	0x0002e478
  40f12c:	42420000 	.word	0x42420000
  40f130:	00000ae2 	.word	0x00000ae2
  40f134:	1fbf18b8 	.word	0x1fbf18b8
  40f138:	0002e91c 	.word	0x0002e91c
  40f13c:	0002e3fc 	.word	0x0002e3fc
  40f140:	00000aec 	.word	0x00000aec
  40f144:	1fbf1860 	.word	0x1fbf1860
  40f148:	0002e8e8 	.word	0x0002e8e8
  40f14c:	0002e3a4 	.word	0x0002e3a4
  40f150:	000000cc 	.word	0x000000cc
  40f154:	1fbf1804 	.word	0x1fbf1804
  40f158:	00031778 	.word	0x00031778
  40f15c:	0002e348 	.word	0x0002e348
  40f160:	00000afc 	.word	0x00000afc
  40f164:	1fbf1794 	.word	0x1fbf1794
  40f168:	0002e83c 	.word	0x0002e83c
  40f16c:	0002e2d8 	.word	0x0002e2d8
  40f170:	0000ba50 	.word	0x0000ba50
  40f174:	00000b03 	.word	0x00000b03
  40f178:	1fbf16f4 	.word	0x1fbf16f4
  40f17c:	0002e228 	.word	0x0002e228
  40f180:	0002e238 	.word	0x0002e238
  40f184:	00000b0c 	.word	0x00000b0c
  40f188:	1fbf16a8 	.word	0x1fbf16a8
  40f18c:	0002e790 	.word	0x0002e790
  40f190:	0002e1ec 	.word	0x0002e1ec
  40f194:	00000b12 	.word	0x00000b12
  40f198:	1fbf1614 	.word	0x1fbf1614
  40f19c:	0002e148 	.word	0x0002e148
  40f1a0:	0002e158 	.word	0x0002e158
  40f1a4:	00000b1a 	.word	0x00000b1a
  40f1a8:	1fbf15d0 	.word	0x1fbf15d0
  40f1ac:	0002e6f4 	.word	0x0002e6f4
  40f1b0:	0002e114 	.word	0x0002e114
  40f1b4:	00000b1d 	.word	0x00000b1d
  40f1b8:	1fbf1570 	.word	0x1fbf1570
  40f1bc:	0002e0a4 	.word	0x0002e0a4
  40f1c0:	0002e0b4 	.word	0x0002e0b4
  40f1c4:	42430000 	.word	0x42430000
  40f1c8:	00000b29 	.word	0x00000b29
  40f1cc:	1fbf14f8 	.word	0x1fbf14f8
  40f1d0:	0002e648 	.word	0x0002e648
  40f1d4:	0002e03c 	.word	0x0002e03c
  40f1d8:	00000b2c 	.word	0x00000b2c
  40f1dc:	1fbf14b8 	.word	0x1fbf14b8
  40f1e0:	0002e454 	.word	0x0002e454
  40f1e4:	0002dffc 	.word	0x0002dffc
  40f1e8:	42424000 	.word	0x42424000
  40f1ec:	00000b42 	.word	0x00000b42
  40f1f0:	1fbf13c0 	.word	0x1fbf13c0
  40f1f4:	0002e534 	.word	0x0002e534
  40f1f8:	0002df04 	.word	0x0002df04

0040f1fc <_ZL10cvGetMatNDPKvP7CvMatNDPi>:
  40f1fc:	e92d4030 	push	{r4, r5, lr}
  40f200:	e24dd02c 	sub	sp, sp, #44	; 0x2c
  40f204:	e1a04000 	mov	r4, r0
  40f208:	e1a05001 	mov	r5, r1
  40f20c:	e3520000 	cmp	r2, #0
  40f210:	13a03000 	movne	r3, #0
  40f214:	15823000 	strne	r3, [r2]
  40f218:	e3540000 	cmp	r4, #0
  40f21c:	13550000 	cmpne	r5, #0
  40f220:	1a00000c 	bne	40f258 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x5c>
  40f224:	e59f3208 	ldr	r3, [pc, #520]	; 40f434 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x238>
  40f228:	e58d3000 	str	r3, [sp]
  40f22c:	e3e0001a 	mvn	r0, #26
  40f230:	e59f1200 	ldr	r1, [pc, #512]	; 40f438 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x23c>
  40f234:	e08f1001 	add	r1, pc, r1
  40f238:	e2811f9d 	add	r1, r1, #628	; 0x274
  40f23c:	e59f21f8 	ldr	r2, [pc, #504]	; 40f43c <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x240>
  40f240:	e08f2002 	add	r2, pc, r2
  40f244:	e59f31f4 	ldr	r3, [pc, #500]	; 40f440 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x244>
  40f248:	e08f3003 	add	r3, pc, r3
  40f24c:	eb000e15 	bl	412aa8 <cvError>
  40f250:	e3a05000 	mov	r5, #0
  40f254:	ea000072 	b	40f424 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x228>
  40f258:	e3540000 	cmp	r4, #0
  40f25c:	0a000013 	beq	40f2b0 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0xb4>
  40f260:	e1d410b2 	ldrh	r1, [r4, #2]
  40f264:	e59f31d8 	ldr	r3, [pc, #472]	; 40f444 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x248>
  40f268:	e1530801 	cmp	r3, r1, lsl #16
  40f26c:	1a00000f 	bne	40f2b0 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0xb4>
  40f270:	e5943010 	ldr	r3, [r4, #16]
  40f274:	e3530000 	cmp	r3, #0
  40f278:	1a000068 	bne	40f420 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x224>
  40f27c:	e59f31c4 	ldr	r3, [pc, #452]	; 40f448 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x24c>
  40f280:	e58d3000 	str	r3, [sp]
  40f284:	e3e0001a 	mvn	r0, #26
  40f288:	e59f11bc 	ldr	r1, [pc, #444]	; 40f44c <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x250>
  40f28c:	e08f1001 	add	r1, pc, r1
  40f290:	e2811f9d 	add	r1, r1, #628	; 0x274
  40f294:	e59f21b4 	ldr	r2, [pc, #436]	; 40f450 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x254>
  40f298:	e08f2002 	add	r2, pc, r2
  40f29c:	e59f31b0 	ldr	r3, [pc, #432]	; 40f454 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x258>
  40f2a0:	e08f3003 	add	r3, pc, r3
  40f2a4:	eb000dff 	bl	412aa8 <cvError>
  40f2a8:	e3a05000 	mov	r5, #0
  40f2ac:	ea00005c 	b	40f424 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x228>
  40f2b0:	e3540000 	cmp	r4, #0
  40f2b4:	0a000016 	beq	40f314 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x118>
  40f2b8:	e5943000 	ldr	r3, [r4]
  40f2bc:	e3530070 	cmp	r3, #112	; 0x70
  40f2c0:	1a000013 	bne	40f314 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x118>
  40f2c4:	e1a00004 	mov	r0, r4
  40f2c8:	e28d100c 	add	r1, sp, #12
  40f2cc:	e3a03000 	mov	r3, #0
  40f2d0:	ebfffe15 	bl	40eb2c <cvGetMat>
  40f2d4:	e1a04000 	mov	r4, r0
  40f2d8:	eb000dc1 	bl	4129e4 <cvGetErrStatus>
  40f2dc:	e3500000 	cmp	r0, #0
  40f2e0:	aa00000b 	bge	40f314 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x118>
  40f2e4:	e59f316c 	ldr	r3, [pc, #364]	; 40f458 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x25c>
  40f2e8:	e58d3000 	str	r3, [sp]
  40f2ec:	e3e00000 	mvn	r0, #0
  40f2f0:	e59f1164 	ldr	r1, [pc, #356]	; 40f45c <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x260>
  40f2f4:	e08f1001 	add	r1, pc, r1
  40f2f8:	e2811f9d 	add	r1, r1, #628	; 0x274
  40f2fc:	e59f215c 	ldr	r2, [pc, #348]	; 40f460 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x264>
  40f300:	e08f2002 	add	r2, pc, r2
  40f304:	e59f3158 	ldr	r3, [pc, #344]	; 40f464 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x268>
  40f308:	e08f3003 	add	r3, pc, r3
  40f30c:	eb000de5 	bl	412aa8 <cvError>
  40f310:	ea000040 	b	40f418 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x21c>
  40f314:	e3540000 	cmp	r4, #0
  40f318:	0a000009 	beq	40f344 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x148>
  40f31c:	e1d420b2 	ldrh	r2, [r4, #2]
  40f320:	e59f3140 	ldr	r3, [pc, #320]	; 40f468 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x26c>
  40f324:	e1530802 	cmp	r3, r2, lsl #16
  40f328:	1a000005 	bne	40f344 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x148>
  40f32c:	e5943018 	ldr	r3, [r4, #24]
  40f330:	e3530000 	cmp	r3, #0
  40f334:	da000002 	ble	40f344 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x148>
  40f338:	e5943014 	ldr	r3, [r4, #20]
  40f33c:	e3530000 	cmp	r3, #0
  40f340:	ca00000b 	bgt	40f374 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x178>
  40f344:	e59f3120 	ldr	r3, [pc, #288]	; 40f46c <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x270>
  40f348:	e58d3000 	str	r3, [sp]
  40f34c:	e3e00004 	mvn	r0, #4
  40f350:	e59f1118 	ldr	r1, [pc, #280]	; 40f470 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x274>
  40f354:	e08f1001 	add	r1, pc, r1
  40f358:	e2811f9d 	add	r1, r1, #628	; 0x274
  40f35c:	e59f2110 	ldr	r2, [pc, #272]	; 40f474 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x278>
  40f360:	e08f2002 	add	r2, pc, r2
  40f364:	e59f310c 	ldr	r3, [pc, #268]	; 40f478 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x27c>
  40f368:	e08f3003 	add	r3, pc, r3
  40f36c:	eb000dcd 	bl	412aa8 <cvError>
  40f370:	ea000028 	b	40f418 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x21c>
  40f374:	e5943010 	ldr	r3, [r4, #16]
  40f378:	e3530000 	cmp	r3, #0
  40f37c:	1a00000b 	bne	40f3b0 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x1b4>
  40f380:	e59f30f4 	ldr	r3, [pc, #244]	; 40f47c <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x280>
  40f384:	e58d3000 	str	r3, [sp]
  40f388:	e3e0001a 	mvn	r0, #26
  40f38c:	e59f10ec 	ldr	r1, [pc, #236]	; 40f480 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x284>
  40f390:	e08f1001 	add	r1, pc, r1
  40f394:	e2811f9d 	add	r1, r1, #628	; 0x274
  40f398:	e59f20e4 	ldr	r2, [pc, #228]	; 40f484 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x288>
  40f39c:	e08f2002 	add	r2, pc, r2
  40f3a0:	e59f30e0 	ldr	r3, [pc, #224]	; 40f488 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x28c>
  40f3a4:	e08f3003 	add	r3, pc, r3
  40f3a8:	eb000dbe 	bl	412aa8 <cvError>
  40f3ac:	ea000019 	b	40f418 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x21c>
  40f3b0:	e5853010 	str	r3, [r5, #16]
  40f3b4:	e3a03000 	mov	r3, #0
  40f3b8:	e5853008 	str	r3, [r5, #8]
  40f3bc:	e585300c 	str	r3, [r5, #12]
  40f3c0:	e5943000 	ldr	r3, [r4]
  40f3c4:	e5853000 	str	r3, [r5]
  40f3c8:	e3a03002 	mov	r3, #2
  40f3cc:	e5853004 	str	r3, [r5, #4]
  40f3d0:	e5943014 	ldr	r3, [r4, #20]
  40f3d4:	e5853014 	str	r3, [r5, #20]
  40f3d8:	e5943004 	ldr	r3, [r4, #4]
  40f3dc:	e5853018 	str	r3, [r5, #24]
  40f3e0:	e5943018 	ldr	r3, [r4, #24]
  40f3e4:	e585301c 	str	r3, [r5, #28]
  40f3e8:	e5941000 	ldr	r1, [r4]
  40f3ec:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  40f3f0:	e1a031c3 	asr	r3, r3, #3
  40f3f4:	e2832001 	add	r2, r3, #1
  40f3f8:	e2011007 	and	r1, r1, #7
  40f3fc:	e1a01081 	lsl	r1, r1, #1
  40f400:	e59f3084 	ldr	r3, [pc, #132]	; 40f48c <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x290>
  40f404:	e1a03133 	lsr	r3, r3, r1
  40f408:	e2033003 	and	r3, r3, #3
  40f40c:	e1a03312 	lsl	r3, r2, r3
  40f410:	e5853020 	str	r3, [r5, #32]
  40f414:	ea000002 	b	40f424 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x228>
  40f418:	e3a05000 	mov	r5, #0
  40f41c:	ea000000 	b	40f424 <_ZL10cvGetMatNDPKvP7CvMatNDPi+0x228>
  40f420:	e1a05004 	mov	r5, r4
  40f424:	e1a00005 	mov	r0, r5
  40f428:	e28dd02c 	add	sp, sp, #44	; 0x2c
  40f42c:	e8bd4030 	pop	{r4, r5, lr}
  40f430:	e12fff1e 	bx	lr
  40f434:	000001ad 	.word	0x000001ad
  40f438:	1fbf125c 	.word	0x1fbf125c
  40f43c:	0002e2a0 	.word	0x0002e2a0
  40f440:	0002dda0 	.word	0x0002dda0
  40f444:	42430000 	.word	0x42430000
  40f448:	000001b2 	.word	0x000001b2
  40f44c:	1fbf1204 	.word	0x1fbf1204
  40f450:	0002e268 	.word	0x0002e268
  40f454:	0002dd48 	.word	0x0002dd48
  40f458:	000001bb 	.word	0x000001bb
  40f45c:	1fbf119c 	.word	0x1fbf119c
  40f460:	0002dcd0 	.word	0x0002dcd0
  40f464:	0002dce0 	.word	0x0002dce0
  40f468:	42420000 	.word	0x42420000
  40f46c:	000001be 	.word	0x000001be
  40f470:	1fbf113c 	.word	0x1fbf113c
  40f474:	0002e2b0 	.word	0x0002e2b0
  40f478:	0002dc80 	.word	0x0002dc80
  40f47c:	000001c1 	.word	0x000001c1
  40f480:	1fbf1100 	.word	0x1fbf1100
  40f484:	0002e250 	.word	0x0002e250
  40f488:	0002dc44 	.word	0x0002dc44
  40f48c:	0000ba50 	.word	0x0000ba50

0040f490 <cvInitNArrayIterator>:
  40f490:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40f494:	e24dd024 	sub	sp, sp, #36	; 0x24
  40f498:	e1a08000 	mov	r8, r0
  40f49c:	e58d200c 	str	r2, [sp, #12]
  40f4a0:	e58d3008 	str	r3, [sp, #8]
  40f4a4:	e59d9048 	ldr	r9, [sp, #72]	; 0x48
  40f4a8:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
  40f4ac:	e2403001 	sub	r3, r0, #1
  40f4b0:	e3530009 	cmp	r3, #9
  40f4b4:	9a00000c 	bls	40f4ec <cvInitNArrayIterator+0x5c>
  40f4b8:	e59f34f0 	ldr	r3, [pc, #1264]	; 40f9b0 <cvInitNArrayIterator+0x520>
  40f4bc:	e58d3000 	str	r3, [sp]
  40f4c0:	e3e000d2 	mvn	r0, #210	; 0xd2
  40f4c4:	e59f14e8 	ldr	r1, [pc, #1256]	; 40f9b4 <cvInitNArrayIterator+0x524>
  40f4c8:	e08f1001 	add	r1, pc, r1
  40f4cc:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f4d0:	e59f24e0 	ldr	r2, [pc, #1248]	; 40f9b8 <cvInitNArrayIterator+0x528>
  40f4d4:	e08f2002 	add	r2, pc, r2
  40f4d8:	e59f34dc 	ldr	r3, [pc, #1244]	; 40f9bc <cvInitNArrayIterator+0x52c>
  40f4dc:	e08f3003 	add	r3, pc, r3
  40f4e0:	eb000d70 	bl	412aa8 <cvError>
  40f4e4:	e3e05000 	mvn	r5, #0
  40f4e8:	ea00012c 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f4ec:	e1a0b001 	mov	fp, r1
  40f4f0:	e59d3008 	ldr	r3, [sp, #8]
  40f4f4:	e3530000 	cmp	r3, #0
  40f4f8:	13510000 	cmpne	r1, #0
  40f4fc:	1a00000c 	bne	40f534 <cvInitNArrayIterator+0xa4>
  40f500:	e59f34b8 	ldr	r3, [pc, #1208]	; 40f9c0 <cvInitNArrayIterator+0x530>
  40f504:	e58d3000 	str	r3, [sp]
  40f508:	e3e0001a 	mvn	r0, #26
  40f50c:	e59f14b0 	ldr	r1, [pc, #1200]	; 40f9c4 <cvInitNArrayIterator+0x534>
  40f510:	e08f1001 	add	r1, pc, r1
  40f514:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f518:	e59f24a8 	ldr	r2, [pc, #1192]	; 40f9c8 <cvInitNArrayIterator+0x538>
  40f51c:	e08f2002 	add	r2, pc, r2
  40f520:	e59f34a4 	ldr	r3, [pc, #1188]	; 40f9cc <cvInitNArrayIterator+0x53c>
  40f524:	e08f3003 	add	r3, pc, r3
  40f528:	eb000d5e 	bl	412aa8 <cvError>
  40f52c:	e3e05000 	mvn	r5, #0
  40f530:	ea00011a 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f534:	e3590000 	cmp	r9, #0
  40f538:	1a0000f6 	bne	40f918 <cvInitNArrayIterator+0x488>
  40f53c:	e3a03f7d 	mov	r3, #500	; 0x1f4
  40f540:	e58d3000 	str	r3, [sp]
  40f544:	e3e0001a 	mvn	r0, #26
  40f548:	e59f1480 	ldr	r1, [pc, #1152]	; 40f9d0 <cvInitNArrayIterator+0x540>
  40f54c:	e08f1001 	add	r1, pc, r1
  40f550:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f554:	e59f2478 	ldr	r2, [pc, #1144]	; 40f9d4 <cvInitNArrayIterator+0x544>
  40f558:	e08f2002 	add	r2, pc, r2
  40f55c:	e59f3474 	ldr	r3, [pc, #1140]	; 40f9d8 <cvInitNArrayIterator+0x548>
  40f560:	e08f3003 	add	r3, pc, r3
  40f564:	eb000d4f 	bl	412aa8 <cvError>
  40f568:	e3e05000 	mvn	r5, #0
  40f56c:	ea00010b 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f570:	e1560008 	cmp	r6, r8
  40f574:	b79b4106 	ldrlt	r4, [fp, r6, lsl #2]
  40f578:	a59d400c 	ldrge	r4, [sp, #12]
  40f57c:	e3540000 	cmp	r4, #0
  40f580:	1a00000e 	bne	40f5c0 <cvInitNArrayIterator+0x130>
  40f584:	e1560008 	cmp	r6, r8
  40f588:	aa0000e7 	bge	40f92c <cvInitNArrayIterator+0x49c>
  40f58c:	e59f3448 	ldr	r3, [pc, #1096]	; 40f9dc <cvInitNArrayIterator+0x54c>
  40f590:	e58d3000 	str	r3, [sp]
  40f594:	e3e0001a 	mvn	r0, #26
  40f598:	e59f1440 	ldr	r1, [pc, #1088]	; 40f9e0 <cvInitNArrayIterator+0x550>
  40f59c:	e08f1001 	add	r1, pc, r1
  40f5a0:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f5a4:	e59f2438 	ldr	r2, [pc, #1080]	; 40f9e4 <cvInitNArrayIterator+0x554>
  40f5a8:	e08f2002 	add	r2, pc, r2
  40f5ac:	e59f3434 	ldr	r3, [pc, #1076]	; 40f9e8 <cvInitNArrayIterator+0x558>
  40f5b0:	e08f3003 	add	r3, pc, r3
  40f5b4:	eb000d3b 	bl	412aa8 <cvError>
  40f5b8:	e3e05000 	mvn	r5, #0
  40f5bc:	ea0000f7 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f5c0:	e3540000 	cmp	r4, #0
  40f5c4:	0a000006 	beq	40f5e4 <cvInitNArrayIterator+0x154>
  40f5c8:	e1d420b2 	ldrh	r2, [r4, #2]
  40f5cc:	e59f3418 	ldr	r3, [pc, #1048]	; 40f9ec <cvInitNArrayIterator+0x55c>
  40f5d0:	e1530802 	cmp	r3, r2, lsl #16
  40f5d4:	1a000002 	bne	40f5e4 <cvInitNArrayIterator+0x154>
  40f5d8:	e5943010 	ldr	r3, [r4, #16]
  40f5dc:	e3530000 	cmp	r3, #0
  40f5e0:	1a000029 	bne	40f68c <cvInitNArrayIterator+0x1fc>
  40f5e4:	e28d2020 	add	r2, sp, #32
  40f5e8:	e3a03000 	mov	r3, #0
  40f5ec:	e522300c 	str	r3, [r2, #-12]!
  40f5f0:	e0861206 	add	r1, r6, r6, lsl #4
  40f5f4:	e0861101 	add	r1, r6, r1, lsl #2
  40f5f8:	e1a01101 	lsl	r1, r1, #2
  40f5fc:	e1a00004 	mov	r0, r4
  40f600:	e59d3008 	ldr	r3, [sp, #8]
  40f604:	e0831001 	add	r1, r3, r1
  40f608:	ebfffefb 	bl	40f1fc <_ZL10cvGetMatNDPKvP7CvMatNDPi>
  40f60c:	e1a04000 	mov	r4, r0
  40f610:	eb000cf3 	bl	4129e4 <cvGetErrStatus>
  40f614:	e3500000 	cmp	r0, #0
  40f618:	aa00000b 	bge	40f64c <cvInitNArrayIterator+0x1bc>
  40f61c:	e59f33cc 	ldr	r3, [pc, #972]	; 40f9f0 <cvInitNArrayIterator+0x560>
  40f620:	e58d3000 	str	r3, [sp]
  40f624:	e3e00000 	mvn	r0, #0
  40f628:	e59f13c4 	ldr	r1, [pc, #964]	; 40f9f4 <cvInitNArrayIterator+0x564>
  40f62c:	e08f1001 	add	r1, pc, r1
  40f630:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f634:	e59f23bc 	ldr	r2, [pc, #956]	; 40f9f8 <cvInitNArrayIterator+0x568>
  40f638:	e08f2002 	add	r2, pc, r2
  40f63c:	e59f33b8 	ldr	r3, [pc, #952]	; 40f9fc <cvInitNArrayIterator+0x56c>
  40f640:	e08f3003 	add	r3, pc, r3
  40f644:	eb000d17 	bl	412aa8 <cvError>
  40f648:	ea00000d 	b	40f684 <cvInitNArrayIterator+0x1f4>
  40f64c:	e59d3014 	ldr	r3, [sp, #20]
  40f650:	e3530000 	cmp	r3, #0
  40f654:	0a00000c 	beq	40f68c <cvInitNArrayIterator+0x1fc>
  40f658:	e59f33a0 	ldr	r3, [pc, #928]	; 40fa00 <cvInitNArrayIterator+0x570>
  40f65c:	e58d3000 	str	r3, [sp]
  40f660:	e3e00017 	mvn	r0, #23
  40f664:	e59f1398 	ldr	r1, [pc, #920]	; 40fa04 <cvInitNArrayIterator+0x574>
  40f668:	e08f1001 	add	r1, pc, r1
  40f66c:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f670:	e59f2390 	ldr	r2, [pc, #912]	; 40fa08 <cvInitNArrayIterator+0x578>
  40f674:	e08f2002 	add	r2, pc, r2
  40f678:	e59f338c 	ldr	r3, [pc, #908]	; 40fa0c <cvInitNArrayIterator+0x57c>
  40f67c:	e08f3003 	add	r3, pc, r3
  40f680:	eb000d08 	bl	412aa8 <cvError>
  40f684:	e3e05000 	mvn	r5, #0
  40f688:	ea0000c4 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f68c:	e286302e 	add	r3, r6, #46	; 0x2e
  40f690:	e7894103 	str	r4, [r9, r3, lsl #2]
  40f694:	e3560000 	cmp	r6, #0
  40f698:	da00007f 	ble	40f89c <cvInitNArrayIterator+0x40c>
  40f69c:	e5941004 	ldr	r1, [r4, #4]
  40f6a0:	e5973004 	ldr	r3, [r7, #4]
  40f6a4:	e1510003 	cmp	r1, r3
  40f6a8:	0a00000c 	beq	40f6e0 <cvInitNArrayIterator+0x250>
  40f6ac:	e59f335c 	ldr	r3, [pc, #860]	; 40fa10 <cvInitNArrayIterator+0x580>
  40f6b0:	e58d3000 	str	r3, [sp]
  40f6b4:	e3e000d0 	mvn	r0, #208	; 0xd0
  40f6b8:	e59f1354 	ldr	r1, [pc, #852]	; 40fa14 <cvInitNArrayIterator+0x584>
  40f6bc:	e08f1001 	add	r1, pc, r1
  40f6c0:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f6c4:	e59f234c 	ldr	r2, [pc, #844]	; 40fa18 <cvInitNArrayIterator+0x588>
  40f6c8:	e08f2002 	add	r2, pc, r2
  40f6cc:	e59f3348 	ldr	r3, [pc, #840]	; 40fa1c <cvInitNArrayIterator+0x58c>
  40f6d0:	e08f3003 	add	r3, pc, r3
  40f6d4:	eb000cf3 	bl	412aa8 <cvError>
  40f6d8:	e3e05000 	mvn	r5, #0
  40f6dc:	ea0000af 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f6e0:	e1560008 	cmp	r6, r8
  40f6e4:	aa00003c 	bge	40f7dc <cvInitNArrayIterator+0x34c>
  40f6e8:	e20a3003 	and	r3, sl, #3
  40f6ec:	e3530001 	cmp	r3, #1
  40f6f0:	0a000015 	beq	40f74c <cvInitNArrayIterator+0x2bc>
  40f6f4:	e3530002 	cmp	r3, #2
  40f6f8:	0a000025 	beq	40f794 <cvInitNArrayIterator+0x304>
  40f6fc:	e3530000 	cmp	r3, #0
  40f700:	1a000047 	bne	40f824 <cvInitNArrayIterator+0x394>
  40f704:	e5942000 	ldr	r2, [r4]
  40f708:	e5973000 	ldr	r3, [r7]
  40f70c:	e0233002 	eor	r3, r3, r2
  40f710:	e1b03b83 	lsls	r3, r3, #23
  40f714:	0a000042 	beq	40f824 <cvInitNArrayIterator+0x394>
  40f718:	e59f3300 	ldr	r3, [pc, #768]	; 40fa20 <cvInitNArrayIterator+0x590>
  40f71c:	e58d3000 	str	r3, [sp]
  40f720:	e3e000cc 	mvn	r0, #204	; 0xcc
  40f724:	e59f12f8 	ldr	r1, [pc, #760]	; 40fa24 <cvInitNArrayIterator+0x594>
  40f728:	e08f1001 	add	r1, pc, r1
  40f72c:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f730:	e59f22f0 	ldr	r2, [pc, #752]	; 40fa28 <cvInitNArrayIterator+0x598>
  40f734:	e08f2002 	add	r2, pc, r2
  40f738:	e59f32ec 	ldr	r3, [pc, #748]	; 40fa2c <cvInitNArrayIterator+0x59c>
  40f73c:	e08f3003 	add	r3, pc, r3
  40f740:	eb000cd8 	bl	412aa8 <cvError>
  40f744:	e3e05000 	mvn	r5, #0
  40f748:	ea000094 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f74c:	e5942000 	ldr	r2, [r4]
  40f750:	e5973000 	ldr	r3, [r7]
  40f754:	e0233002 	eor	r3, r3, r2
  40f758:	e3130f7e 	tst	r3, #504	; 0x1f8
  40f75c:	0a000030 	beq	40f824 <cvInitNArrayIterator+0x394>
  40f760:	e3a03e22 	mov	r3, #544	; 0x220
  40f764:	e58d3000 	str	r3, [sp]
  40f768:	e3e000cc 	mvn	r0, #204	; 0xcc
  40f76c:	e59f12bc 	ldr	r1, [pc, #700]	; 40fa30 <cvInitNArrayIterator+0x5a0>
  40f770:	e08f1001 	add	r1, pc, r1
  40f774:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f778:	e59f22b4 	ldr	r2, [pc, #692]	; 40fa34 <cvInitNArrayIterator+0x5a4>
  40f77c:	e08f2002 	add	r2, pc, r2
  40f780:	e59f32b0 	ldr	r3, [pc, #688]	; 40fa38 <cvInitNArrayIterator+0x5a8>
  40f784:	e08f3003 	add	r3, pc, r3
  40f788:	eb000cc6 	bl	412aa8 <cvError>
  40f78c:	e3e05000 	mvn	r5, #0
  40f790:	ea000082 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f794:	e5942000 	ldr	r2, [r4]
  40f798:	e5973000 	ldr	r3, [r7]
  40f79c:	e0233002 	eor	r3, r3, r2
  40f7a0:	e3130f7e 	tst	r3, #504	; 0x1f8
  40f7a4:	0a00001e 	beq	40f824 <cvInitNArrayIterator+0x394>
  40f7a8:	e59f328c 	ldr	r3, [pc, #652]	; 40fa3c <cvInitNArrayIterator+0x5ac>
  40f7ac:	e58d3000 	str	r3, [sp]
  40f7b0:	e3e000cc 	mvn	r0, #204	; 0xcc
  40f7b4:	e59f1284 	ldr	r1, [pc, #644]	; 40fa40 <cvInitNArrayIterator+0x5b0>
  40f7b8:	e08f1001 	add	r1, pc, r1
  40f7bc:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f7c0:	e59f227c 	ldr	r2, [pc, #636]	; 40fa44 <cvInitNArrayIterator+0x5b4>
  40f7c4:	e08f2002 	add	r2, pc, r2
  40f7c8:	e59f3278 	ldr	r3, [pc, #632]	; 40fa48 <cvInitNArrayIterator+0x5b8>
  40f7cc:	e08f3003 	add	r3, pc, r3
  40f7d0:	eb000cb4 	bl	412aa8 <cvError>
  40f7d4:	e3e05000 	mvn	r5, #0
  40f7d8:	ea000070 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f7dc:	e5942000 	ldr	r2, [r4]
  40f7e0:	e59f31f4 	ldr	r3, [pc, #500]	; 40f9dc <cvInitNArrayIterator+0x54c>
  40f7e4:	e0033002 	and	r3, r3, r2
  40f7e8:	e3530000 	cmp	r3, #0
  40f7ec:	0a00000c 	beq	40f824 <cvInitNArrayIterator+0x394>
  40f7f0:	e3a03f8b 	mov	r3, #556	; 0x22c
  40f7f4:	e58d3000 	str	r3, [sp]
  40f7f8:	e3e000cf 	mvn	r0, #207	; 0xcf
  40f7fc:	e59f1248 	ldr	r1, [pc, #584]	; 40fa4c <cvInitNArrayIterator+0x5bc>
  40f800:	e08f1001 	add	r1, pc, r1
  40f804:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f808:	e59f2240 	ldr	r2, [pc, #576]	; 40fa50 <cvInitNArrayIterator+0x5c0>
  40f80c:	e08f2002 	add	r2, pc, r2
  40f810:	e59f323c 	ldr	r3, [pc, #572]	; 40fa54 <cvInitNArrayIterator+0x5c4>
  40f814:	e08f3003 	add	r3, pc, r3
  40f818:	eb000ca2 	bl	412aa8 <cvError>
  40f81c:	e3e05000 	mvn	r5, #0
  40f820:	ea00005e 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f824:	e31a0004 	tst	sl, #4
  40f828:	0a000017 	beq	40f88c <cvInitNArrayIterator+0x3fc>
  40f82c:	ea00001b 	b	40f8a0 <cvInitNArrayIterator+0x410>
  40f830:	e2823002 	add	r3, r2, #2
  40f834:	e1a03183 	lsl	r3, r3, #3
  40f838:	e0840003 	add	r0, r4, r3
  40f83c:	e5900004 	ldr	r0, [r0, #4]
  40f840:	e0873003 	add	r3, r7, r3
  40f844:	e5933004 	ldr	r3, [r3, #4]
  40f848:	e1500003 	cmp	r0, r3
  40f84c:	0a00000c 	beq	40f884 <cvInitNArrayIterator+0x3f4>
  40f850:	e3a03f8d 	mov	r3, #564	; 0x234
  40f854:	e58d3000 	str	r3, [sp]
  40f858:	e3e000d0 	mvn	r0, #208	; 0xd0
  40f85c:	e59f11f4 	ldr	r1, [pc, #500]	; 40fa58 <cvInitNArrayIterator+0x5c8>
  40f860:	e08f1001 	add	r1, pc, r1
  40f864:	e2811d0a 	add	r1, r1, #640	; 0x280
  40f868:	e59f21ec 	ldr	r2, [pc, #492]	; 40fa5c <cvInitNArrayIterator+0x5cc>
  40f86c:	e08f2002 	add	r2, pc, r2
  40f870:	e59f31e8 	ldr	r3, [pc, #488]	; 40fa60 <cvInitNArrayIterator+0x5d0>
  40f874:	e08f3003 	add	r3, pc, r3
  40f878:	eb000c8a 	bl	412aa8 <cvError>
  40f87c:	e3e05000 	mvn	r5, #0
  40f880:	ea000046 	b	40f9a0 <cvInitNArrayIterator+0x510>
  40f884:	e2822001 	add	r2, r2, #1
  40f888:	ea000000 	b	40f890 <cvInitNArrayIterator+0x400>
  40f88c:	e3a02000 	mov	r2, #0
  40f890:	e1520001 	cmp	r2, r1
  40f894:	baffffe5 	blt	40f830 <cvInitNArrayIterator+0x3a0>
  40f898:	ea000000 	b	40f8a0 <cvInitNArrayIterator+0x410>
  40f89c:	e1a07004 	mov	r7, r4
  40f8a0:	e5943000 	ldr	r3, [r4]
  40f8a4:	e2032f7e 	and	r2, r3, #504	; 0x1f8
  40f8a8:	e1a021c2 	asr	r2, r2, #3
  40f8ac:	e2822001 	add	r2, r2, #1
  40f8b0:	e2033007 	and	r3, r3, #7
  40f8b4:	e1a03083 	lsl	r3, r3, #1
  40f8b8:	e59f11a4 	ldr	r1, [pc, #420]	; 40fa64 <cvInitNArrayIterator+0x5d4>
  40f8bc:	e1a03331 	lsr	r3, r1, r3
  40f8c0:	e2033003 	and	r3, r3, #3
  40f8c4:	e1a02312 	lsl	r2, r2, r3
  40f8c8:	e5943004 	ldr	r3, [r4, #4]
  40f8cc:	e2433001 	sub	r3, r3, #1
  40f8d0:	ea000007 	b	40f8f4 <cvInitNArrayIterator+0x464>
  40f8d4:	e0841183 	add	r1, r4, r3, lsl #3
  40f8d8:	e5911018 	ldr	r1, [r1, #24]
  40f8dc:	e1510002 	cmp	r1, r2
  40f8e0:	1a000005 	bne	40f8fc <cvInitNArrayIterator+0x46c>
  40f8e4:	e0841183 	add	r1, r4, r3, lsl #3
  40f8e8:	e5911014 	ldr	r1, [r1, #20]
  40f8ec:	e0020291 	mul	r2, r1, r2
  40f8f0:	e2433001 	sub	r3, r3, #1
  40f8f4:	e1530005 	cmp	r3, r5
  40f8f8:	cafffff5 	bgt	40f8d4 <cvInitNArrayIterator+0x444>
  40f8fc:	e1530005 	cmp	r3, r5
  40f900:	c1a05003 	movgt	r5, r3
  40f904:	e5942010 	ldr	r2, [r4, #16]
  40f908:	e2863004 	add	r3, r6, #4
  40f90c:	e7892103 	str	r2, [r9, r3, lsl #2]
  40f910:	e2866001 	add	r6, r6, #1
  40f914:	ea000002 	b	40f924 <cvInitNArrayIterator+0x494>
  40f918:	e3a07000 	mov	r7, #0
  40f91c:	e3e05000 	mvn	r5, #0
  40f920:	e1a06007 	mov	r6, r7
  40f924:	e1560008 	cmp	r6, r8
  40f928:	daffff10 	ble	40f570 <cvInitNArrayIterator+0xe0>
  40f92c:	e5973004 	ldr	r3, [r7, #4]
  40f930:	e2433001 	sub	r3, r3, #1
  40f934:	e3a02001 	mov	r2, #1
  40f938:	ea000003 	b	40f94c <cvInitNArrayIterator+0x4bc>
  40f93c:	e0871183 	add	r1, r7, r3, lsl #3
  40f940:	e5911014 	ldr	r1, [r1, #20]
  40f944:	e0020291 	mul	r2, r1, r2
  40f948:	e2433001 	sub	r3, r3, #1
  40f94c:	e1530005 	cmp	r3, r5
  40f950:	cafffff9 	bgt	40f93c <cvInitNArrayIterator+0x4ac>
  40f954:	e2855001 	add	r5, r5, #1
  40f958:	e5895004 	str	r5, [r9, #4]
  40f95c:	e1a03009 	mov	r3, r9
  40f960:	e4838008 	str	r8, [r3], #8
  40f964:	e58d2018 	str	r2, [sp, #24]
  40f968:	e3a02001 	mov	r2, #1
  40f96c:	e58d201c 	str	r2, [sp, #28]
  40f970:	e28d2020 	add	r2, sp, #32
  40f974:	e9120003 	ldmdb	r2, {r0, r1}
  40f978:	e8830003 	stm	r3, {r0, r1}
  40f97c:	e3a03000 	mov	r3, #0
  40f980:	ea000004 	b	40f998 <cvInitNArrayIterator+0x508>
  40f984:	e0872183 	add	r2, r7, r3, lsl #3
  40f988:	e5921014 	ldr	r1, [r2, #20]
  40f98c:	e283200e 	add	r2, r3, #14
  40f990:	e7891102 	str	r1, [r9, r2, lsl #2]
  40f994:	e2833001 	add	r3, r3, #1
  40f998:	e1530005 	cmp	r3, r5
  40f99c:	bafffff8 	blt	40f984 <cvInitNArrayIterator+0x4f4>
  40f9a0:	e1a00005 	mov	r0, r5
  40f9a4:	e28dd024 	add	sp, sp, #36	; 0x24
  40f9a8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40f9ac:	e12fff1e 	bx	lr
  40f9b0:	000001ee 	.word	0x000001ee
  40f9b4:	1fbf0fc8 	.word	0x1fbf0fc8
  40f9b8:	0002e164 	.word	0x0002e164
  40f9bc:	0002db0c 	.word	0x0002db0c
  40f9c0:	000001f1 	.word	0x000001f1
  40f9c4:	1fbf0f80 	.word	0x1fbf0f80
  40f9c8:	0002e138 	.word	0x0002e138
  40f9cc:	0002dac4 	.word	0x0002dac4
  40f9d0:	1fbf0f44 	.word	0x1fbf0f44
  40f9d4:	0002e124 	.word	0x0002e124
  40f9d8:	0002da88 	.word	0x0002da88
  40f9dc:	000001fe 	.word	0x000001fe
  40f9e0:	1fbf0ef4 	.word	0x1fbf0ef4
  40f9e4:	0002e0ac 	.word	0x0002e0ac
  40f9e8:	0002da38 	.word	0x0002da38
  40f9ec:	42430000 	.word	0x42430000
  40f9f0:	00000207 	.word	0x00000207
  40f9f4:	1fbf0e64 	.word	0x1fbf0e64
  40f9f8:	0002d998 	.word	0x0002d998
  40f9fc:	0002d9a8 	.word	0x0002d9a8
  40fa00:	00000209 	.word	0x00000209
  40fa04:	1fbf0e28 	.word	0x1fbf0e28
  40fa08:	0002e024 	.word	0x0002e024
  40fa0c:	0002d96c 	.word	0x0002d96c
  40fa10:	00000212 	.word	0x00000212
  40fa14:	1fbf0dd4 	.word	0x1fbf0dd4
  40fa18:	0002dfec 	.word	0x0002dfec
  40fa1c:	0002d918 	.word	0x0002d918
  40fa20:	0000021b 	.word	0x0000021b
  40fa24:	1fbf0d68 	.word	0x1fbf0d68
  40fa28:	0002dfb0 	.word	0x0002dfb0
  40fa2c:	0002d8ac 	.word	0x0002d8ac
  40fa30:	1fbf0d20 	.word	0x1fbf0d20
  40fa34:	0002df94 	.word	0x0002df94
  40fa38:	0002d864 	.word	0x0002d864
  40fa3c:	00000225 	.word	0x00000225
  40fa40:	1fbf0cd8 	.word	0x1fbf0cd8
  40fa44:	0002df80 	.word	0x0002df80
  40fa48:	0002d81c 	.word	0x0002d81c
  40fa4c:	1fbf0c90 	.word	0x1fbf0c90
  40fa50:	0002df60 	.word	0x0002df60
  40fa54:	0002d7d4 	.word	0x0002d7d4
  40fa58:	1fbf0c30 	.word	0x1fbf0c30
  40fa5c:	0002df28 	.word	0x0002df28
  40fa60:	0002d774 	.word	0x0002d774
  40fa64:	0000ba50 	.word	0x0000ba50

0040fa68 <cvGetSubRect>:
  40fa68:	e24dd008 	sub	sp, sp, #8
  40fa6c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  40fa70:	e24dd028 	sub	sp, sp, #40	; 0x28
  40fa74:	e1a05001 	mov	r5, r1
  40fa78:	e28d103c 	add	r1, sp, #60	; 0x3c
  40fa7c:	e981000c 	stmib	r1, {r2, r3}
  40fa80:	e2504000 	subs	r4, r0, #0
  40fa84:	0a00000c 	beq	40fabc <cvGetSubRect+0x54>
  40fa88:	e1d420b2 	ldrh	r2, [r4, #2]
  40fa8c:	e59f3208 	ldr	r3, [pc, #520]	; 40fc9c <cvGetSubRect+0x234>
  40fa90:	e1530802 	cmp	r3, r2, lsl #16
  40fa94:	1a000008 	bne	40fabc <cvGetSubRect+0x54>
  40fa98:	e5943018 	ldr	r3, [r4, #24]
  40fa9c:	e3530000 	cmp	r3, #0
  40faa0:	da000005 	ble	40fabc <cvGetSubRect+0x54>
  40faa4:	e5943014 	ldr	r3, [r4, #20]
  40faa8:	e3530000 	cmp	r3, #0
  40faac:	da000002 	ble	40fabc <cvGetSubRect+0x54>
  40fab0:	e5943010 	ldr	r3, [r4, #16]
  40fab4:	e3530000 	cmp	r3, #0
  40fab8:	1a000015 	bne	40fb14 <cvGetSubRect+0xac>
  40fabc:	e1a00004 	mov	r0, r4
  40fac0:	e28d100c 	add	r1, sp, #12
  40fac4:	e3a02000 	mov	r2, #0
  40fac8:	e1a03002 	mov	r3, r2
  40facc:	ebfffc16 	bl	40eb2c <cvGetMat>
  40fad0:	e1a04000 	mov	r4, r0
  40fad4:	eb000bc2 	bl	4129e4 <cvGetErrStatus>
  40fad8:	e3500000 	cmp	r0, #0
  40fadc:	aa00000c 	bge	40fb14 <cvGetSubRect+0xac>
  40fae0:	e59f31b8 	ldr	r3, [pc, #440]	; 40fca0 <cvGetSubRect+0x238>
  40fae4:	e58d3000 	str	r3, [sp]
  40fae8:	e3e00000 	mvn	r0, #0
  40faec:	e59f11b0 	ldr	r1, [pc, #432]	; 40fca4 <cvGetSubRect+0x23c>
  40faf0:	e08f1001 	add	r1, pc, r1
  40faf4:	e2811e29 	add	r1, r1, #656	; 0x290
  40faf8:	e59f21a8 	ldr	r2, [pc, #424]	; 40fca8 <cvGetSubRect+0x240>
  40fafc:	e08f2002 	add	r2, pc, r2
  40fb00:	e59f31a4 	ldr	r3, [pc, #420]	; 40fcac <cvGetSubRect+0x244>
  40fb04:	e08f3003 	add	r3, pc, r3
  40fb08:	eb000be6 	bl	412aa8 <cvError>
  40fb0c:	e3a05000 	mov	r5, #0
  40fb10:	ea00005c 	b	40fc88 <cvGetSubRect+0x220>
  40fb14:	e3550000 	cmp	r5, #0
  40fb18:	1a00000b 	bne	40fb4c <cvGetSubRect+0xe4>
  40fb1c:	e59f318c 	ldr	r3, [pc, #396]	; 40fcb0 <cvGetSubRect+0x248>
  40fb20:	e58d3000 	str	r3, [sp]
  40fb24:	e3e0001a 	mvn	r0, #26
  40fb28:	e59f1184 	ldr	r1, [pc, #388]	; 40fcb4 <cvGetSubRect+0x24c>
  40fb2c:	e08f1001 	add	r1, pc, r1
  40fb30:	e2811e29 	add	r1, r1, #656	; 0x290
  40fb34:	e59f217c 	ldr	r2, [pc, #380]	; 40fcb8 <cvGetSubRect+0x250>
  40fb38:	e08f2002 	add	r2, pc, r2
  40fb3c:	e59f3178 	ldr	r3, [pc, #376]	; 40fcbc <cvGetSubRect+0x254>
  40fb40:	e08f3003 	add	r3, pc, r3
  40fb44:	eb000bd7 	bl	412aa8 <cvError>
  40fb48:	ea00004e 	b	40fc88 <cvGetSubRect+0x220>
  40fb4c:	e59d8040 	ldr	r8, [sp, #64]	; 0x40
  40fb50:	e59d6044 	ldr	r6, [sp, #68]	; 0x44
  40fb54:	e1883006 	orr	r3, r8, r6
  40fb58:	e59dc048 	ldr	ip, [sp, #72]	; 0x48
  40fb5c:	e183300c 	orr	r3, r3, ip
  40fb60:	e59de04c 	ldr	lr, [sp, #76]	; 0x4c
  40fb64:	e193300e 	orrs	r3, r3, lr
  40fb68:	5a00000c 	bpl	40fba0 <cvGetSubRect+0x138>
  40fb6c:	e59f314c 	ldr	r3, [pc, #332]	; 40fcc0 <cvGetSubRect+0x258>
  40fb70:	e58d3000 	str	r3, [sp]
  40fb74:	e3e000c8 	mvn	r0, #200	; 0xc8
  40fb78:	e59f1144 	ldr	r1, [pc, #324]	; 40fcc4 <cvGetSubRect+0x25c>
  40fb7c:	e08f1001 	add	r1, pc, r1
  40fb80:	e2811e29 	add	r1, r1, #656	; 0x290
  40fb84:	e59f213c 	ldr	r2, [pc, #316]	; 40fcc8 <cvGetSubRect+0x260>
  40fb88:	e08f2002 	add	r2, pc, r2
  40fb8c:	e59f3138 	ldr	r3, [pc, #312]	; 40fccc <cvGetSubRect+0x264>
  40fb90:	e08f3003 	add	r3, pc, r3
  40fb94:	eb000bc3 	bl	412aa8 <cvError>
  40fb98:	e3a05000 	mov	r5, #0
  40fb9c:	ea000039 	b	40fc88 <cvGetSubRect+0x220>
  40fba0:	e088300c 	add	r3, r8, ip
  40fba4:	e5942018 	ldr	r2, [r4, #24]
  40fba8:	e1530002 	cmp	r3, r2
  40fbac:	ca000003 	bgt	40fbc0 <cvGetSubRect+0x158>
  40fbb0:	e086300e 	add	r3, r6, lr
  40fbb4:	e5942014 	ldr	r2, [r4, #20]
  40fbb8:	e1530002 	cmp	r3, r2
  40fbbc:	da00000c 	ble	40fbf4 <cvGetSubRect+0x18c>
  40fbc0:	e59f3108 	ldr	r3, [pc, #264]	; 40fcd0 <cvGetSubRect+0x268>
  40fbc4:	e58d3000 	str	r3, [sp]
  40fbc8:	e3e000c8 	mvn	r0, #200	; 0xc8
  40fbcc:	e59f1100 	ldr	r1, [pc, #256]	; 40fcd4 <cvGetSubRect+0x26c>
  40fbd0:	e08f1001 	add	r1, pc, r1
  40fbd4:	e2811e29 	add	r1, r1, #656	; 0x290
  40fbd8:	e59f20f8 	ldr	r2, [pc, #248]	; 40fcd8 <cvGetSubRect+0x270>
  40fbdc:	e08f2002 	add	r2, pc, r2
  40fbe0:	e59f30f4 	ldr	r3, [pc, #244]	; 40fcdc <cvGetSubRect+0x274>
  40fbe4:	e08f3003 	add	r3, pc, r3
  40fbe8:	eb000bae 	bl	412aa8 <cvError>
  40fbec:	e3a05000 	mov	r5, #0
  40fbf0:	ea000024 	b	40fc88 <cvGetSubRect+0x220>
  40fbf4:	e5947004 	ldr	r7, [r4, #4]
  40fbf8:	e5940000 	ldr	r0, [r4]
  40fbfc:	e2002f7e 	and	r2, r0, #504	; 0x1f8
  40fc00:	e1a021c2 	asr	r2, r2, #3
  40fc04:	e2821001 	add	r1, r2, #1
  40fc08:	e2000007 	and	r0, r0, #7
  40fc0c:	e1a00080 	lsl	r0, r0, #1
  40fc10:	e59f30c8 	ldr	r3, [pc, #200]	; 40fce0 <cvGetSubRect+0x278>
  40fc14:	e1a03033 	lsr	r3, r3, r0
  40fc18:	e2033003 	and	r3, r3, #3
  40fc1c:	e1a02311 	lsl	r2, r1, r3
  40fc20:	e0030892 	mul	r3, r2, r8
  40fc24:	e0233697 	mla	r3, r7, r6, r3
  40fc28:	e5942010 	ldr	r2, [r4, #16]
  40fc2c:	e0823003 	add	r3, r2, r3
  40fc30:	e5853010 	str	r3, [r5, #16]
  40fc34:	e5942004 	ldr	r2, [r4, #4]
  40fc38:	e35e0001 	cmp	lr, #1
  40fc3c:	c3e03000 	mvngt	r3, #0
  40fc40:	d3a03000 	movle	r3, #0
  40fc44:	e0033002 	and	r3, r3, r2
  40fc48:	e5853004 	str	r3, [r5, #4]
  40fc4c:	e5941000 	ldr	r1, [r4]
  40fc50:	e5942018 	ldr	r2, [r4, #24]
  40fc54:	e15c0002 	cmp	ip, r2
  40fc58:	b3e02901 	mvnlt	r2, #16384	; 0x4000
  40fc5c:	a3e02000 	mvnge	r2, #0
  40fc60:	e0022001 	and	r2, r2, r1
  40fc64:	e3530000 	cmp	r3, #0
  40fc68:	03a03901 	moveq	r3, #16384	; 0x4000
  40fc6c:	13a03000 	movne	r3, #0
  40fc70:	e1823003 	orr	r3, r2, r3
  40fc74:	e5853000 	str	r3, [r5]
  40fc78:	e585e014 	str	lr, [r5, #20]
  40fc7c:	e585c018 	str	ip, [r5, #24]
  40fc80:	e3a03000 	mov	r3, #0
  40fc84:	e5853008 	str	r3, [r5, #8]
  40fc88:	e1a00005 	mov	r0, r5
  40fc8c:	e28dd028 	add	sp, sp, #40	; 0x28
  40fc90:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  40fc94:	e28dd008 	add	sp, sp, #8
  40fc98:	e12fff1e 	bx	lr
  40fc9c:	42420000 	.word	0x42420000
  40fca0:	000005c3 	.word	0x000005c3
  40fca4:	1fbf09a0 	.word	0x1fbf09a0
  40fca8:	0002d4d4 	.word	0x0002d4d4
  40fcac:	0002d4e4 	.word	0x0002d4e4
  40fcb0:	000005c6 	.word	0x000005c6
  40fcb4:	1fbf0964 	.word	0x1fbf0964
  40fcb8:	000308d8 	.word	0x000308d8
  40fcbc:	0002d4a8 	.word	0x0002d4a8
  40fcc0:	000005c9 	.word	0x000005c9
  40fcc4:	1fbf0914 	.word	0x1fbf0914
  40fcc8:	00030888 	.word	0x00030888
  40fccc:	0002d458 	.word	0x0002d458
  40fcd0:	000005cd 	.word	0x000005cd
  40fcd4:	1fbf08c0 	.word	0x1fbf08c0
  40fcd8:	00030834 	.word	0x00030834
  40fcdc:	0002d404 	.word	0x0002d404
  40fce0:	0000ba50 	.word	0x0000ba50

0040fce4 <cvGetRows>:
  40fce4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  40fce8:	e24dd028 	sub	sp, sp, #40	; 0x28
  40fcec:	e1a04001 	mov	r4, r1
  40fcf0:	e1a08002 	mov	r8, r2
  40fcf4:	e1a06003 	mov	r6, r3
  40fcf8:	e59d7040 	ldr	r7, [sp, #64]	; 0x40
  40fcfc:	e2505000 	subs	r5, r0, #0
  40fd00:	0a00000c 	beq	40fd38 <cvGetRows+0x54>
  40fd04:	e1d520b2 	ldrh	r2, [r5, #2]
  40fd08:	e59f31d0 	ldr	r3, [pc, #464]	; 40fee0 <cvGetRows+0x1fc>
  40fd0c:	e1530802 	cmp	r3, r2, lsl #16
  40fd10:	1a000008 	bne	40fd38 <cvGetRows+0x54>
  40fd14:	e5953018 	ldr	r3, [r5, #24]
  40fd18:	e3530000 	cmp	r3, #0
  40fd1c:	da000005 	ble	40fd38 <cvGetRows+0x54>
  40fd20:	e5953014 	ldr	r3, [r5, #20]
  40fd24:	e3530000 	cmp	r3, #0
  40fd28:	da000002 	ble	40fd38 <cvGetRows+0x54>
  40fd2c:	e5953010 	ldr	r3, [r5, #16]
  40fd30:	e3530000 	cmp	r3, #0
  40fd34:	1a000015 	bne	40fd90 <cvGetRows+0xac>
  40fd38:	e1a00005 	mov	r0, r5
  40fd3c:	e28d100c 	add	r1, sp, #12
  40fd40:	e3a02000 	mov	r2, #0
  40fd44:	e1a03002 	mov	r3, r2
  40fd48:	ebfffb77 	bl	40eb2c <cvGetMat>
  40fd4c:	e1a05000 	mov	r5, r0
  40fd50:	eb000b23 	bl	4129e4 <cvGetErrStatus>
  40fd54:	e3500000 	cmp	r0, #0
  40fd58:	aa00000c 	bge	40fd90 <cvGetRows+0xac>
  40fd5c:	e59f3180 	ldr	r3, [pc, #384]	; 40fee4 <cvGetRows+0x200>
  40fd60:	e58d3000 	str	r3, [sp]
  40fd64:	e3e00000 	mvn	r0, #0
  40fd68:	e59f1178 	ldr	r1, [pc, #376]	; 40fee8 <cvGetRows+0x204>
  40fd6c:	e08f1001 	add	r1, pc, r1
  40fd70:	e2811fa7 	add	r1, r1, #668	; 0x29c
  40fd74:	e59f2170 	ldr	r2, [pc, #368]	; 40feec <cvGetRows+0x208>
  40fd78:	e08f2002 	add	r2, pc, r2
  40fd7c:	e59f316c 	ldr	r3, [pc, #364]	; 40fef0 <cvGetRows+0x20c>
  40fd80:	e08f3003 	add	r3, pc, r3
  40fd84:	eb000b47 	bl	412aa8 <cvError>
  40fd88:	e3a04000 	mov	r4, #0
  40fd8c:	ea00004f 	b	40fed0 <cvGetRows+0x1ec>
  40fd90:	e3540000 	cmp	r4, #0
  40fd94:	1a00000b 	bne	40fdc8 <cvGetRows+0xe4>
  40fd98:	e59f3154 	ldr	r3, [pc, #340]	; 40fef4 <cvGetRows+0x210>
  40fd9c:	e58d3000 	str	r3, [sp]
  40fda0:	e3e0001a 	mvn	r0, #26
  40fda4:	e59f114c 	ldr	r1, [pc, #332]	; 40fef8 <cvGetRows+0x214>
  40fda8:	e08f1001 	add	r1, pc, r1
  40fdac:	e2811fa7 	add	r1, r1, #668	; 0x29c
  40fdb0:	e59f2144 	ldr	r2, [pc, #324]	; 40fefc <cvGetRows+0x218>
  40fdb4:	e08f2002 	add	r2, pc, r2
  40fdb8:	e59f3140 	ldr	r3, [pc, #320]	; 40ff00 <cvGetRows+0x21c>
  40fdbc:	e08f3003 	add	r3, pc, r3
  40fdc0:	eb000b38 	bl	412aa8 <cvError>
  40fdc4:	ea000041 	b	40fed0 <cvGetRows+0x1ec>
  40fdc8:	e5953014 	ldr	r3, [r5, #20]
  40fdcc:	e1580003 	cmp	r8, r3
  40fdd0:	2a000003 	bcs	40fde4 <cvGetRows+0x100>
  40fdd4:	e1530006 	cmp	r3, r6
  40fdd8:	3a000001 	bcc	40fde4 <cvGetRows+0x100>
  40fddc:	e3570000 	cmp	r7, #0
  40fde0:	ca00000c 	bgt	40fe18 <cvGetRows+0x134>
  40fde4:	e59f3118 	ldr	r3, [pc, #280]	; 40ff04 <cvGetRows+0x220>
  40fde8:	e58d3000 	str	r3, [sp]
  40fdec:	e3e000d2 	mvn	r0, #210	; 0xd2
  40fdf0:	e59f1110 	ldr	r1, [pc, #272]	; 40ff08 <cvGetRows+0x224>
  40fdf4:	e08f1001 	add	r1, pc, r1
  40fdf8:	e2811fa7 	add	r1, r1, #668	; 0x29c
  40fdfc:	e59f2108 	ldr	r2, [pc, #264]	; 40ff0c <cvGetRows+0x228>
  40fe00:	e08f2002 	add	r2, pc, r2
  40fe04:	e59f3104 	ldr	r3, [pc, #260]	; 40ff10 <cvGetRows+0x22c>
  40fe08:	e08f3003 	add	r3, pc, r3
  40fe0c:	eb000b25 	bl	412aa8 <cvError>
  40fe10:	e3a04000 	mov	r4, #0
  40fe14:	ea00002d 	b	40fed0 <cvGetRows+0x1ec>
  40fe18:	e3570001 	cmp	r7, #1
  40fe1c:	1a000008 	bne	40fe44 <cvGetRows+0x160>
  40fe20:	e0686006 	rsb	r6, r8, r6
  40fe24:	e5846014 	str	r6, [r4, #20]
  40fe28:	e5952004 	ldr	r2, [r5, #4]
  40fe2c:	e3560001 	cmp	r6, #1
  40fe30:	c3e03000 	mvngt	r3, #0
  40fe34:	d3a03000 	movle	r3, #0
  40fe38:	e0033002 	and	r3, r3, r2
  40fe3c:	e5843004 	str	r3, [r4, #4]
  40fe40:	ea000008 	b	40fe68 <cvGetRows+0x184>
  40fe44:	e0680006 	rsb	r0, r8, r6
  40fe48:	e0800007 	add	r0, r0, r7
  40fe4c:	e2400001 	sub	r0, r0, #1
  40fe50:	e1a01007 	mov	r1, r7
  40fe54:	fa0086d6 	blx	4319b4 <__aeabi_idiv>
  40fe58:	e5840014 	str	r0, [r4, #20]
  40fe5c:	e5953004 	ldr	r3, [r5, #4]
  40fe60:	e0030397 	mul	r3, r7, r3
  40fe64:	e5843004 	str	r3, [r4, #4]
  40fe68:	e5953018 	ldr	r3, [r5, #24]
  40fe6c:	e5843018 	str	r3, [r4, #24]
  40fe70:	e5942004 	ldr	r2, [r4, #4]
  40fe74:	e5943014 	ldr	r3, [r4, #20]
  40fe78:	e3530001 	cmp	r3, #1
  40fe7c:	c3e03000 	mvngt	r3, #0
  40fe80:	d3a03000 	movle	r3, #0
  40fe84:	e0033002 	and	r3, r3, r2
  40fe88:	e5843004 	str	r3, [r4, #4]
  40fe8c:	e5952004 	ldr	r2, [r5, #4]
  40fe90:	e5951010 	ldr	r1, [r5, #16]
  40fe94:	e0281892 	mla	r8, r2, r8, r1
  40fe98:	e5848010 	str	r8, [r4, #16]
  40fe9c:	e5952000 	ldr	r2, [r5]
  40fea0:	e3530000 	cmp	r3, #0
  40fea4:	03a03901 	moveq	r3, #16384	; 0x4000
  40fea8:	13a03000 	movne	r3, #0
  40feac:	e1822003 	orr	r2, r2, r3
  40feb0:	e3570001 	cmp	r7, #1
  40feb4:	13e03901 	mvnne	r3, #16384	; 0x4000
  40feb8:	03e03000 	mvneq	r3, #0
  40febc:	e0033002 	and	r3, r3, r2
  40fec0:	e5843000 	str	r3, [r4]
  40fec4:	e3a03000 	mov	r3, #0
  40fec8:	e5843008 	str	r3, [r4, #8]
  40fecc:	e584300c 	str	r3, [r4, #12]
  40fed0:	e1a00004 	mov	r0, r4
  40fed4:	e28dd028 	add	sp, sp, #40	; 0x28
  40fed8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  40fedc:	e12fff1e 	bx	lr
  40fee0:	42420000 	.word	0x42420000
  40fee4:	000005f7 	.word	0x000005f7
  40fee8:	1fbf0724 	.word	0x1fbf0724
  40feec:	0002d258 	.word	0x0002d258
  40fef0:	0002d268 	.word	0x0002d268
  40fef4:	000005fa 	.word	0x000005fa
  40fef8:	1fbf06e8 	.word	0x1fbf06e8
  40fefc:	0003065c 	.word	0x0003065c
  40ff00:	0002d22c 	.word	0x0002d22c
  40ff04:	000005fe 	.word	0x000005fe
  40ff08:	1fbf069c 	.word	0x1fbf069c
  40ff0c:	00030610 	.word	0x00030610
  40ff10:	0002d1e0 	.word	0x0002d1e0

0040ff14 <cvGetCols>:
  40ff14:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  40ff18:	e24dd02c 	sub	sp, sp, #44	; 0x2c
  40ff1c:	e1a05001 	mov	r5, r1
  40ff20:	e1a06002 	mov	r6, r2
  40ff24:	e1a07003 	mov	r7, r3
  40ff28:	e2504000 	subs	r4, r0, #0
  40ff2c:	0a00000c 	beq	40ff64 <cvGetCols+0x50>
  40ff30:	e1d420b2 	ldrh	r2, [r4, #2]
  40ff34:	e59f31ac 	ldr	r3, [pc, #428]	; 4100e8 <cvGetCols+0x1d4>
  40ff38:	e1530802 	cmp	r3, r2, lsl #16
  40ff3c:	1a000008 	bne	40ff64 <cvGetCols+0x50>
  40ff40:	e5943018 	ldr	r3, [r4, #24]
  40ff44:	e3530000 	cmp	r3, #0
  40ff48:	da000005 	ble	40ff64 <cvGetCols+0x50>
  40ff4c:	e5943014 	ldr	r3, [r4, #20]
  40ff50:	e3530000 	cmp	r3, #0
  40ff54:	da000002 	ble	40ff64 <cvGetCols+0x50>
  40ff58:	e5943010 	ldr	r3, [r4, #16]
  40ff5c:	e3530000 	cmp	r3, #0
  40ff60:	1a000015 	bne	40ffbc <cvGetCols+0xa8>
  40ff64:	e1a00004 	mov	r0, r4
  40ff68:	e28d100c 	add	r1, sp, #12
  40ff6c:	e3a02000 	mov	r2, #0
  40ff70:	e1a03002 	mov	r3, r2
  40ff74:	ebfffaec 	bl	40eb2c <cvGetMat>
  40ff78:	e1a04000 	mov	r4, r0
  40ff7c:	eb000a98 	bl	4129e4 <cvGetErrStatus>
  40ff80:	e3500000 	cmp	r0, #0
  40ff84:	aa00000c 	bge	40ffbc <cvGetCols+0xa8>
  40ff88:	e59f315c 	ldr	r3, [pc, #348]	; 4100ec <cvGetCols+0x1d8>
  40ff8c:	e58d3000 	str	r3, [sp]
  40ff90:	e3e00000 	mvn	r0, #0
  40ff94:	e59f1154 	ldr	r1, [pc, #340]	; 4100f0 <cvGetCols+0x1dc>
  40ff98:	e08f1001 	add	r1, pc, r1
  40ff9c:	e2811faa 	add	r1, r1, #680	; 0x2a8
  40ffa0:	e59f214c 	ldr	r2, [pc, #332]	; 4100f4 <cvGetCols+0x1e0>
  40ffa4:	e08f2002 	add	r2, pc, r2
  40ffa8:	e59f3148 	ldr	r3, [pc, #328]	; 4100f8 <cvGetCols+0x1e4>
  40ffac:	e08f3003 	add	r3, pc, r3
  40ffb0:	eb000abc 	bl	412aa8 <cvError>
  40ffb4:	e3a05000 	mov	r5, #0
  40ffb8:	ea000046 	b	4100d8 <cvGetCols+0x1c4>
  40ffbc:	e3550000 	cmp	r5, #0
  40ffc0:	1a00000b 	bne	40fff4 <cvGetCols+0xe0>
  40ffc4:	e59f3130 	ldr	r3, [pc, #304]	; 4100fc <cvGetCols+0x1e8>
  40ffc8:	e58d3000 	str	r3, [sp]
  40ffcc:	e3e0001a 	mvn	r0, #26
  40ffd0:	e59f1128 	ldr	r1, [pc, #296]	; 410100 <cvGetCols+0x1ec>
  40ffd4:	e08f1001 	add	r1, pc, r1
  40ffd8:	e2811faa 	add	r1, r1, #680	; 0x2a8
  40ffdc:	e59f2120 	ldr	r2, [pc, #288]	; 410104 <cvGetCols+0x1f0>
  40ffe0:	e08f2002 	add	r2, pc, r2
  40ffe4:	e59f311c 	ldr	r3, [pc, #284]	; 410108 <cvGetCols+0x1f4>
  40ffe8:	e08f3003 	add	r3, pc, r3
  40ffec:	eb000aad 	bl	412aa8 <cvError>
  40fff0:	ea000038 	b	4100d8 <cvGetCols+0x1c4>
  40fff4:	e5943018 	ldr	r3, [r4, #24]
  40fff8:	e1560003 	cmp	r6, r3
  40fffc:	2a000001 	bcs	410008 <cvGetCols+0xf4>
  410000:	e1530007 	cmp	r3, r7
  410004:	2a00000c 	bcs	41003c <cvGetCols+0x128>
  410008:	e59f30fc 	ldr	r3, [pc, #252]	; 41010c <cvGetCols+0x1f8>
  41000c:	e58d3000 	str	r3, [sp]
  410010:	e3e000d2 	mvn	r0, #210	; 0xd2
  410014:	e59f10f4 	ldr	r1, [pc, #244]	; 410110 <cvGetCols+0x1fc>
  410018:	e08f1001 	add	r1, pc, r1
  41001c:	e2811faa 	add	r1, r1, #680	; 0x2a8
  410020:	e59f20ec 	ldr	r2, [pc, #236]	; 410114 <cvGetCols+0x200>
  410024:	e08f2002 	add	r2, pc, r2
  410028:	e59f30e8 	ldr	r3, [pc, #232]	; 410118 <cvGetCols+0x204>
  41002c:	e08f3003 	add	r3, pc, r3
  410030:	eb000a9c 	bl	412aa8 <cvError>
  410034:	e3a05000 	mov	r5, #0
  410038:	ea000026 	b	4100d8 <cvGetCols+0x1c4>
  41003c:	e5942014 	ldr	r2, [r4, #20]
  410040:	e5852014 	str	r2, [r5, #20]
  410044:	e0663007 	rsb	r3, r6, r7
  410048:	e5853018 	str	r3, [r5, #24]
  41004c:	e594c004 	ldr	ip, [r4, #4]
  410050:	e3520001 	cmp	r2, #1
  410054:	c3e02000 	mvngt	r2, #0
  410058:	d3a02000 	movle	r2, #0
  41005c:	e00cc002 	and	ip, ip, r2
  410060:	e585c004 	str	ip, [r5, #4]
  410064:	e5940000 	ldr	r0, [r4]
  410068:	e2002f7e 	and	r2, r0, #504	; 0x1f8
  41006c:	e1a021c2 	asr	r2, r2, #3
  410070:	e2821001 	add	r1, r2, #1
  410074:	e2000007 	and	r0, r0, #7
  410078:	e1a00080 	lsl	r0, r0, #1
  41007c:	e59f2098 	ldr	r2, [pc, #152]	; 41011c <cvGetCols+0x208>
  410080:	e1a02032 	lsr	r2, r2, r0
  410084:	e2022003 	and	r2, r2, #3
  410088:	e1a02211 	lsl	r2, r1, r2
  41008c:	e5941010 	ldr	r1, [r4, #16]
  410090:	e0221296 	mla	r2, r6, r2, r1
  410094:	e5852010 	str	r2, [r5, #16]
  410098:	e5942000 	ldr	r2, [r4]
  41009c:	e35c0000 	cmp	ip, #0
  4100a0:	0a000004 	beq	4100b8 <cvGetCols+0x1a4>
  4100a4:	e5941018 	ldr	r1, [r4, #24]
  4100a8:	e1530001 	cmp	r3, r1
  4100ac:	ba000003 	blt	4100c0 <cvGetCols+0x1ac>
  4100b0:	e3e03000 	mvn	r3, #0
  4100b4:	ea000002 	b	4100c4 <cvGetCols+0x1b0>
  4100b8:	e3e03000 	mvn	r3, #0
  4100bc:	ea000000 	b	4100c4 <cvGetCols+0x1b0>
  4100c0:	e3e03901 	mvn	r3, #16384	; 0x4000
  4100c4:	e0033002 	and	r3, r3, r2
  4100c8:	e5853000 	str	r3, [r5]
  4100cc:	e3a03000 	mov	r3, #0
  4100d0:	e5853008 	str	r3, [r5, #8]
  4100d4:	e585300c 	str	r3, [r5, #12]
  4100d8:	e1a00005 	mov	r0, r5
  4100dc:	e28dd02c 	add	sp, sp, #44	; 0x2c
  4100e0:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  4100e4:	e12fff1e 	bx	lr
  4100e8:	42420000 	.word	0x42420000
  4100ec:	00000631 	.word	0x00000631
  4100f0:	1fbf04f8 	.word	0x1fbf04f8
  4100f4:	0002d02c 	.word	0x0002d02c
  4100f8:	0002d03c 	.word	0x0002d03c
  4100fc:	00000634 	.word	0x00000634
  410100:	1fbf04bc 	.word	0x1fbf04bc
  410104:	00030430 	.word	0x00030430
  410108:	0002d000 	.word	0x0002d000
  41010c:	00000638 	.word	0x00000638
  410110:	1fbf0478 	.word	0x1fbf0478
  410114:	000303ec 	.word	0x000303ec
  410118:	0002cfbc 	.word	0x0002cfbc
  41011c:	0000ba50 	.word	0x0000ba50

00410120 <cvGetDiag>:
  410120:	e92d4070 	push	{r4, r5, r6, lr}
  410124:	e24dd028 	sub	sp, sp, #40	; 0x28
  410128:	e1a04001 	mov	r4, r1
  41012c:	e1a06002 	mov	r6, r2
  410130:	e2505000 	subs	r5, r0, #0
  410134:	0a00000c 	beq	41016c <cvGetDiag+0x4c>
  410138:	e1d520b2 	ldrh	r2, [r5, #2]
  41013c:	e59f322c 	ldr	r3, [pc, #556]	; 410370 <cvGetDiag+0x250>
  410140:	e1530802 	cmp	r3, r2, lsl #16
  410144:	1a000008 	bne	41016c <cvGetDiag+0x4c>
  410148:	e5953018 	ldr	r3, [r5, #24]
  41014c:	e3530000 	cmp	r3, #0
  410150:	da000005 	ble	41016c <cvGetDiag+0x4c>
  410154:	e5953014 	ldr	r3, [r5, #20]
  410158:	e3530000 	cmp	r3, #0
  41015c:	da000002 	ble	41016c <cvGetDiag+0x4c>
  410160:	e5953010 	ldr	r3, [r5, #16]
  410164:	e3530000 	cmp	r3, #0
  410168:	1a000015 	bne	4101c4 <cvGetDiag+0xa4>
  41016c:	e1a00005 	mov	r0, r5
  410170:	e28d100c 	add	r1, sp, #12
  410174:	e3a02000 	mov	r2, #0
  410178:	e1a03002 	mov	r3, r2
  41017c:	ebfffa6a 	bl	40eb2c <cvGetMat>
  410180:	e1a05000 	mov	r5, r0
  410184:	eb000a16 	bl	4129e4 <cvGetErrStatus>
  410188:	e3500000 	cmp	r0, #0
  41018c:	aa00000c 	bge	4101c4 <cvGetDiag+0xa4>
  410190:	e59f31dc 	ldr	r3, [pc, #476]	; 410374 <cvGetDiag+0x254>
  410194:	e58d3000 	str	r3, [sp]
  410198:	e3e00000 	mvn	r0, #0
  41019c:	e59f11d4 	ldr	r1, [pc, #468]	; 410378 <cvGetDiag+0x258>
  4101a0:	e08f1001 	add	r1, pc, r1
  4101a4:	e2811fad 	add	r1, r1, #692	; 0x2b4
  4101a8:	e59f21cc 	ldr	r2, [pc, #460]	; 41037c <cvGetDiag+0x25c>
  4101ac:	e08f2002 	add	r2, pc, r2
  4101b0:	e59f31c8 	ldr	r3, [pc, #456]	; 410380 <cvGetDiag+0x260>
  4101b4:	e08f3003 	add	r3, pc, r3
  4101b8:	eb000a3a 	bl	412aa8 <cvError>
  4101bc:	e3a04000 	mov	r4, #0
  4101c0:	ea000066 	b	410360 <cvGetDiag+0x240>
  4101c4:	e3540000 	cmp	r4, #0
  4101c8:	1a00000b 	bne	4101fc <cvGetDiag+0xdc>
  4101cc:	e59f31b0 	ldr	r3, [pc, #432]	; 410384 <cvGetDiag+0x264>
  4101d0:	e58d3000 	str	r3, [sp]
  4101d4:	e3e0001a 	mvn	r0, #26
  4101d8:	e59f11a8 	ldr	r1, [pc, #424]	; 410388 <cvGetDiag+0x268>
  4101dc:	e08f1001 	add	r1, pc, r1
  4101e0:	e2811fad 	add	r1, r1, #692	; 0x2b4
  4101e4:	e59f21a0 	ldr	r2, [pc, #416]	; 41038c <cvGetDiag+0x26c>
  4101e8:	e08f2002 	add	r2, pc, r2
  4101ec:	e59f319c 	ldr	r3, [pc, #412]	; 410390 <cvGetDiag+0x270>
  4101f0:	e08f3003 	add	r3, pc, r3
  4101f4:	eb000a2b 	bl	412aa8 <cvError>
  4101f8:	ea000058 	b	410360 <cvGetDiag+0x240>
  4101fc:	e5952000 	ldr	r2, [r5]
  410200:	e2023f7e 	and	r3, r2, #504	; 0x1f8
  410204:	e1a031c3 	asr	r3, r3, #3
  410208:	e2833001 	add	r3, r3, #1
  41020c:	e2022007 	and	r2, r2, #7
  410210:	e1a02082 	lsl	r2, r2, #1
  410214:	e59f1178 	ldr	r1, [pc, #376]	; 410394 <cvGetDiag+0x274>
  410218:	e1a02231 	lsr	r2, r1, r2
  41021c:	e2022003 	and	r2, r2, #3
  410220:	e1a03213 	lsl	r3, r3, r2
  410224:	e3560000 	cmp	r6, #0
  410228:	ba00001b 	blt	41029c <cvGetDiag+0x17c>
  41022c:	e5952018 	ldr	r2, [r5, #24]
  410230:	e0662002 	rsb	r2, r6, r2
  410234:	e3520000 	cmp	r2, #0
  410238:	ca00000c 	bgt	410270 <cvGetDiag+0x150>
  41023c:	e59f3154 	ldr	r3, [pc, #340]	; 410398 <cvGetDiag+0x278>
  410240:	e58d3000 	str	r3, [sp]
  410244:	e3e000d2 	mvn	r0, #210	; 0xd2
  410248:	e59f114c 	ldr	r1, [pc, #332]	; 41039c <cvGetDiag+0x27c>
  41024c:	e08f1001 	add	r1, pc, r1
  410250:	e2811fad 	add	r1, r1, #692	; 0x2b4
  410254:	e59f2144 	ldr	r2, [pc, #324]	; 4103a0 <cvGetDiag+0x280>
  410258:	e08f2002 	add	r2, pc, r2
  41025c:	e59f3140 	ldr	r3, [pc, #320]	; 4103a4 <cvGetDiag+0x284>
  410260:	e08f3003 	add	r3, pc, r3
  410264:	eb000a0f 	bl	412aa8 <cvError>
  410268:	e3a04000 	mov	r4, #0
  41026c:	ea00003b 	b	410360 <cvGetDiag+0x240>
  410270:	e5950014 	ldr	r0, [r5, #20]
  410274:	e020c002 	eor	ip, r0, r2
  410278:	e1520000 	cmp	r2, r0
  41027c:	b3a01000 	movlt	r1, #0
  410280:	a3e01000 	mvnge	r1, #0
  410284:	e001100c 	and	r1, r1, ip
  410288:	e0222001 	eor	r2, r2, r1
  41028c:	e5951010 	ldr	r1, [r5, #16]
  410290:	e0261693 	mla	r6, r3, r6, r1
  410294:	e5846010 	str	r6, [r4, #16]
  410298:	ea00001c 	b	410310 <cvGetDiag+0x1f0>
  41029c:	e5952014 	ldr	r2, [r5, #20]
  4102a0:	e0821006 	add	r1, r2, r6
  4102a4:	e3510000 	cmp	r1, #0
  4102a8:	ca00000c 	bgt	4102e0 <cvGetDiag+0x1c0>
  4102ac:	e59f30f4 	ldr	r3, [pc, #244]	; 4103a8 <cvGetDiag+0x288>
  4102b0:	e58d3000 	str	r3, [sp]
  4102b4:	e3e000d2 	mvn	r0, #210	; 0xd2
  4102b8:	e59f10ec 	ldr	r1, [pc, #236]	; 4103ac <cvGetDiag+0x28c>
  4102bc:	e08f1001 	add	r1, pc, r1
  4102c0:	e2811fad 	add	r1, r1, #692	; 0x2b4
  4102c4:	e59f20e4 	ldr	r2, [pc, #228]	; 4103b0 <cvGetDiag+0x290>
  4102c8:	e08f2002 	add	r2, pc, r2
  4102cc:	e59f30e0 	ldr	r3, [pc, #224]	; 4103b4 <cvGetDiag+0x294>
  4102d0:	e08f3003 	add	r3, pc, r3
  4102d4:	eb0009f3 	bl	412aa8 <cvError>
  4102d8:	e3a04000 	mov	r4, #0
  4102dc:	ea00001f 	b	410360 <cvGetDiag+0x240>
  4102e0:	e5950018 	ldr	r0, [r5, #24]
  4102e4:	e020c001 	eor	ip, r0, r1
  4102e8:	e1510000 	cmp	r1, r0
  4102ec:	b3a02000 	movlt	r2, #0
  4102f0:	a3e02000 	mvnge	r2, #0
  4102f4:	e002200c 	and	r2, r2, ip
  4102f8:	e0222001 	eor	r2, r2, r1
  4102fc:	e5951004 	ldr	r1, [r5, #4]
  410300:	e0060691 	mul	r6, r1, r6
  410304:	e5951010 	ldr	r1, [r5, #16]
  410308:	e0666001 	rsb	r6, r6, r1
  41030c:	e5846010 	str	r6, [r4, #16]
  410310:	e5842014 	str	r2, [r4, #20]
  410314:	e3a01001 	mov	r1, #1
  410318:	e5841018 	str	r1, [r4, #24]
  41031c:	e5951004 	ldr	r1, [r5, #4]
  410320:	e0833001 	add	r3, r3, r1
  410324:	e3520001 	cmp	r2, #1
  410328:	c3e02000 	mvngt	r2, #0
  41032c:	d3a02000 	movle	r2, #0
  410330:	e0033002 	and	r3, r3, r2
  410334:	e5843004 	str	r3, [r4, #4]
  410338:	e5952000 	ldr	r2, [r5]
  41033c:	e5842000 	str	r2, [r4]
  410340:	e3530000 	cmp	r3, #0
  410344:	13c22901 	bicne	r2, r2, #16384	; 0x4000
  410348:	15842000 	strne	r2, [r4]
  41034c:	03822901 	orreq	r2, r2, #16384	; 0x4000
  410350:	05842000 	streq	r2, [r4]
  410354:	e3a03000 	mov	r3, #0
  410358:	e5843008 	str	r3, [r4, #8]
  41035c:	e584300c 	str	r3, [r4, #12]
  410360:	e1a00004 	mov	r0, r4
  410364:	e28dd028 	add	sp, sp, #40	; 0x28
  410368:	e8bd4070 	pop	{r4, r5, r6, lr}
  41036c:	e12fff1e 	bx	lr
  410370:	42420000 	.word	0x42420000
  410374:	00000662 	.word	0x00000662
  410378:	1fbf02f0 	.word	0x1fbf02f0
  41037c:	0002ce24 	.word	0x0002ce24
  410380:	0002ce34 	.word	0x0002ce34
  410384:	00000665 	.word	0x00000665
  410388:	1fbf02b4 	.word	0x1fbf02b4
  41038c:	00030228 	.word	0x00030228
  410390:	0002cdf8 	.word	0x0002cdf8
  410394:	0000ba50 	.word	0x0000ba50
  410398:	00000677 	.word	0x00000677
  41039c:	1fbf0244 	.word	0x1fbf0244
  4103a0:	000301b8 	.word	0x000301b8
  4103a4:	0002cd88 	.word	0x0002cd88
  4103a8:	00000681 	.word	0x00000681
  4103ac:	1fbf01d4 	.word	0x1fbf01d4
  4103b0:	00030148 	.word	0x00030148
  4103b4:	0002cd18 	.word	0x0002cd18

004103b8 <cvReshapeMatND>:
  4103b8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4103bc:	e24ddf4b 	sub	sp, sp, #300	; 0x12c
  4103c0:	e1a09003 	mov	r9, r3
  4103c4:	e59d4150 	ldr	r4, [sp, #336]	; 0x150
  4103c8:	e59d6154 	ldr	r6, [sp, #340]	; 0x154
  4103cc:	e3a03000 	mov	r3, #0
  4103d0:	e58d3010 	str	r3, [sp, #16]
  4103d4:	e1520003 	cmp	r2, r3
  4103d8:	11500003 	cmpne	r0, r3
  4103dc:	1a00000c 	bne	410414 <cvReshapeMatND+0x5c>
  4103e0:	e59f382c 	ldr	r3, [pc, #2092]	; 410c14 <cvReshapeMatND+0x85c>
  4103e4:	e58d3000 	str	r3, [sp]
  4103e8:	e3e0001a 	mvn	r0, #26
  4103ec:	e59f1824 	ldr	r1, [pc, #2084]	; 410c18 <cvReshapeMatND+0x860>
  4103f0:	e08f1001 	add	r1, pc, r1
  4103f4:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  4103f8:	e59f281c 	ldr	r2, [pc, #2076]	; 410c1c <cvReshapeMatND+0x864>
  4103fc:	e08f2002 	add	r2, pc, r2
  410400:	e59f3818 	ldr	r3, [pc, #2072]	; 410c20 <cvReshapeMatND+0x868>
  410404:	e08f3003 	add	r3, pc, r3
  410408:	eb0009a6 	bl	412aa8 <cvError>
  41040c:	e3a07000 	mov	r7, #0
  410410:	ea0001fb 	b	410c04 <cvReshapeMatND+0x84c>
  410414:	e1a0a001 	mov	sl, r1
  410418:	e1a05000 	mov	r5, r0
  41041c:	e1a07002 	mov	r7, r2
  410420:	e1993004 	orrs	r3, r9, r4
  410424:	1a00000c 	bne	41045c <cvReshapeMatND+0xa4>
  410428:	e59f37f4 	ldr	r3, [pc, #2036]	; 410c24 <cvReshapeMatND+0x86c>
  41042c:	e58d3000 	str	r3, [sp]
  410430:	e3e00004 	mvn	r0, #4
  410434:	e59f17ec 	ldr	r1, [pc, #2028]	; 410c28 <cvReshapeMatND+0x870>
  410438:	e08f1001 	add	r1, pc, r1
  41043c:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410440:	e59f27e4 	ldr	r2, [pc, #2020]	; 410c2c <cvReshapeMatND+0x874>
  410444:	e08f2002 	add	r2, pc, r2
  410448:	e59f37e0 	ldr	r3, [pc, #2016]	; 410c30 <cvReshapeMatND+0x878>
  41044c:	e08f3003 	add	r3, pc, r3
  410450:	eb000994 	bl	412aa8 <cvError>
  410454:	e3a07000 	mov	r7, #0
  410458:	ea0001e9 	b	410c04 <cvReshapeMatND+0x84c>
  41045c:	e3a01000 	mov	r1, #0
  410460:	ebffee7a 	bl	40be50 <cvGetDims>
  410464:	e1a08000 	mov	r8, r0
  410468:	eb00095d 	bl	4129e4 <cvGetErrStatus>
  41046c:	e3500000 	cmp	r0, #0
  410470:	aa00000c 	bge	4104a8 <cvReshapeMatND+0xf0>
  410474:	e3a03eb6 	mov	r3, #2912	; 0xb60
  410478:	e58d3000 	str	r3, [sp]
  41047c:	e3e00000 	mvn	r0, #0
  410480:	e59f17ac 	ldr	r1, [pc, #1964]	; 410c34 <cvReshapeMatND+0x87c>
  410484:	e08f1001 	add	r1, pc, r1
  410488:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  41048c:	e59f27a4 	ldr	r2, [pc, #1956]	; 410c38 <cvReshapeMatND+0x880>
  410490:	e08f2002 	add	r2, pc, r2
  410494:	e59f37a0 	ldr	r3, [pc, #1952]	; 410c3c <cvReshapeMatND+0x884>
  410498:	e08f3003 	add	r3, pc, r3
  41049c:	eb000981 	bl	412aa8 <cvError>
  4104a0:	e3a07000 	mov	r7, #0
  4104a4:	ea0001d6 	b	410c04 <cvReshapeMatND+0x84c>
  4104a8:	e3540000 	cmp	r4, #0
  4104ac:	0a000020 	beq	410534 <cvReshapeMatND+0x17c>
  4104b0:	e3540001 	cmp	r4, #1
  4104b4:	0a000021 	beq	410540 <cvReshapeMatND+0x188>
  4104b8:	e2443001 	sub	r3, r4, #1
  4104bc:	e353001f 	cmp	r3, #31
  4104c0:	9a00000c 	bls	4104f8 <cvReshapeMatND+0x140>
  4104c4:	e59f3774 	ldr	r3, [pc, #1908]	; 410c40 <cvReshapeMatND+0x888>
  4104c8:	e58d3000 	str	r3, [sp]
  4104cc:	e3e000d2 	mvn	r0, #210	; 0xd2
  4104d0:	e59f176c 	ldr	r1, [pc, #1900]	; 410c44 <cvReshapeMatND+0x88c>
  4104d4:	e08f1001 	add	r1, pc, r1
  4104d8:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  4104dc:	e59f2764 	ldr	r2, [pc, #1892]	; 410c48 <cvReshapeMatND+0x890>
  4104e0:	e08f2002 	add	r2, pc, r2
  4104e4:	e59f3760 	ldr	r3, [pc, #1888]	; 410c4c <cvReshapeMatND+0x894>
  4104e8:	e08f3003 	add	r3, pc, r3
  4104ec:	eb00096d 	bl	412aa8 <cvError>
  4104f0:	e3a07000 	mov	r7, #0
  4104f4:	ea0001c2 	b	410c04 <cvReshapeMatND+0x84c>
  4104f8:	e3560000 	cmp	r6, #0
  4104fc:	1a000010 	bne	410544 <cvReshapeMatND+0x18c>
  410500:	e3a03eb7 	mov	r3, #2928	; 0xb70
  410504:	e58d3000 	str	r3, [sp]
  410508:	e3e0001a 	mvn	r0, #26
  41050c:	e59f173c 	ldr	r1, [pc, #1852]	; 410c50 <cvReshapeMatND+0x898>
  410510:	e08f1001 	add	r1, pc, r1
  410514:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410518:	e59f2734 	ldr	r2, [pc, #1844]	; 410c54 <cvReshapeMatND+0x89c>
  41051c:	e08f2002 	add	r2, pc, r2
  410520:	e59f3730 	ldr	r3, [pc, #1840]	; 410c58 <cvReshapeMatND+0x8a0>
  410524:	e08f3003 	add	r3, pc, r3
  410528:	eb00095e 	bl	412aa8 <cvError>
  41052c:	e3a07000 	mov	r7, #0
  410530:	ea0001b3 	b	410c04 <cvReshapeMatND+0x84c>
  410534:	e1a04008 	mov	r4, r8
  410538:	e3a06000 	mov	r6, #0
  41053c:	ea000000 	b	410544 <cvReshapeMatND+0x18c>
  410540:	e3a06000 	mov	r6, #0
  410544:	e3540002 	cmp	r4, #2
  410548:	ca0000b7 	bgt	41082c <cvReshapeMatND+0x474>
  41054c:	e35a001c 	cmp	sl, #28
  410550:	0a00000c 	beq	410588 <cvReshapeMatND+0x1d0>
  410554:	e59f3700 	ldr	r3, [pc, #1792]	; 410c5c <cvReshapeMatND+0x8a4>
  410558:	e58d3000 	str	r3, [sp]
  41055c:	e3e00004 	mvn	r0, #4
  410560:	e59f16f8 	ldr	r1, [pc, #1784]	; 410c60 <cvReshapeMatND+0x8a8>
  410564:	e08f1001 	add	r1, pc, r1
  410568:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  41056c:	e59f26f0 	ldr	r2, [pc, #1776]	; 410c64 <cvReshapeMatND+0x8ac>
  410570:	e08f2002 	add	r2, pc, r2
  410574:	e59f36ec 	ldr	r3, [pc, #1772]	; 410c68 <cvReshapeMatND+0x8b0>
  410578:	e08f3003 	add	r3, pc, r3
  41057c:	eb000949 	bl	412aa8 <cvError>
  410580:	e3a07000 	mov	r7, #0
  410584:	ea00019e 	b	410c04 <cvReshapeMatND+0x84c>
  410588:	e1550007 	cmp	r5, r7
  41058c:	1a000004 	bne	4105a4 <cvReshapeMatND+0x1ec>
  410590:	e5953008 	ldr	r3, [r5, #8]
  410594:	e58d3008 	str	r3, [sp, #8]
  410598:	e595300c 	ldr	r3, [r5, #12]
  41059c:	e58d300c 	str	r3, [sp, #12]
  4105a0:	ea00002b 	b	410654 <cvReshapeMatND+0x29c>
  4105a4:	e3550000 	cmp	r5, #0
  4105a8:	0a00000c 	beq	4105e0 <cvReshapeMatND+0x228>
  4105ac:	e1d520b2 	ldrh	r2, [r5, #2]
  4105b0:	e59f36b4 	ldr	r3, [pc, #1716]	; 410c6c <cvReshapeMatND+0x8b4>
  4105b4:	e1530802 	cmp	r3, r2, lsl #16
  4105b8:	1a000008 	bne	4105e0 <cvReshapeMatND+0x228>
  4105bc:	e5953018 	ldr	r3, [r5, #24]
  4105c0:	e3530000 	cmp	r3, #0
  4105c4:	da000005 	ble	4105e0 <cvReshapeMatND+0x228>
  4105c8:	e5953014 	ldr	r3, [r5, #20]
  4105cc:	e3530000 	cmp	r3, #0
  4105d0:	da000002 	ble	4105e0 <cvReshapeMatND+0x228>
  4105d4:	e5953010 	ldr	r3, [r5, #16]
  4105d8:	e3530000 	cmp	r3, #0
  4105dc:	1a000015 	bne	410638 <cvReshapeMatND+0x280>
  4105e0:	e1a00005 	mov	r0, r5
  4105e4:	e1a01007 	mov	r1, r7
  4105e8:	e28d2010 	add	r2, sp, #16
  4105ec:	e3a03001 	mov	r3, #1
  4105f0:	ebfff94d 	bl	40eb2c <cvGetMat>
  4105f4:	e1a05000 	mov	r5, r0
  4105f8:	eb0008f9 	bl	4129e4 <cvGetErrStatus>
  4105fc:	e3500000 	cmp	r0, #0
  410600:	aa000010 	bge	410648 <cvReshapeMatND+0x290>
  410604:	e59f3664 	ldr	r3, [pc, #1636]	; 410c70 <cvReshapeMatND+0x8b8>
  410608:	e58d3000 	str	r3, [sp]
  41060c:	e3e00000 	mvn	r0, #0
  410610:	e59f165c 	ldr	r1, [pc, #1628]	; 410c74 <cvReshapeMatND+0x8bc>
  410614:	e08f1001 	add	r1, pc, r1
  410618:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  41061c:	e59f2654 	ldr	r2, [pc, #1620]	; 410c78 <cvReshapeMatND+0x8c0>
  410620:	e08f2002 	add	r2, pc, r2
  410624:	e59f3650 	ldr	r3, [pc, #1616]	; 410c7c <cvReshapeMatND+0x8c4>
  410628:	e08f3003 	add	r3, pc, r3
  41062c:	eb00091d 	bl	412aa8 <cvError>
  410630:	e3a07000 	mov	r7, #0
  410634:	ea000172 	b	410c04 <cvReshapeMatND+0x84c>
  410638:	e3a03000 	mov	r3, #0
  41063c:	e58d300c 	str	r3, [sp, #12]
  410640:	e58d3008 	str	r3, [sp, #8]
  410644:	ea000002 	b	410654 <cvReshapeMatND+0x29c>
  410648:	e3a03000 	mov	r3, #0
  41064c:	e58d300c 	str	r3, [sp, #12]
  410650:	e58d3008 	str	r3, [sp, #8]
  410654:	e595b000 	ldr	fp, [r5]
  410658:	e20b8f7e 	and	r8, fp, #504	; 0x1f8
  41065c:	e1a081c8 	asr	r8, r8, #3
  410660:	e2888001 	add	r8, r8, #1
  410664:	e595a018 	ldr	sl, [r5, #24]
  410668:	e00a0a98 	mul	sl, r8, sl
  41066c:	e3590000 	cmp	r9, #0
  410670:	11a08009 	movne	r8, r9
  410674:	e3560000 	cmp	r6, #0
  410678:	15964000 	ldrne	r4, [r6]
  41067c:	1a00000e 	bne	4106bc <cvReshapeMatND+0x304>
  410680:	e3540001 	cmp	r4, #1
  410684:	1a000005 	bne	4106a0 <cvReshapeMatND+0x2e8>
  410688:	e5950014 	ldr	r0, [r5, #20]
  41068c:	e000009a 	mul	r0, sl, r0
  410690:	e1a01008 	mov	r1, r8
  410694:	fa0084c6 	blx	4319b4 <__aeabi_idiv>
  410698:	e1a04000 	mov	r4, r0
  41069c:	ea000006 	b	4106bc <cvReshapeMatND+0x304>
  4106a0:	e5954014 	ldr	r4, [r5, #20]
  4106a4:	e158000a 	cmp	r8, sl
  4106a8:	da000003 	ble	4106bc <cvReshapeMatND+0x304>
  4106ac:	e0000a94 	mul	r0, r4, sl
  4106b0:	e1a01008 	mov	r1, r8
  4106b4:	fa0084be 	blx	4319b4 <__aeabi_idiv>
  4106b8:	e1a04000 	mov	r4, r0
  4106bc:	e5959014 	ldr	r9, [r5, #20]
  4106c0:	e1590004 	cmp	r9, r4
  4106c4:	0a000023 	beq	410758 <cvReshapeMatND+0x3a0>
  4106c8:	e009099a 	mul	r9, sl, r9
  4106cc:	e31b0901 	tst	fp, #16384	; 0x4000
  4106d0:	1a00000c 	bne	410708 <cvReshapeMatND+0x350>
  4106d4:	e59f35a4 	ldr	r3, [pc, #1444]	; 410c80 <cvReshapeMatND+0x8c8>
  4106d8:	e58d3000 	str	r3, [sp]
  4106dc:	e3e0000c 	mvn	r0, #12
  4106e0:	e59f159c 	ldr	r1, [pc, #1436]	; 410c84 <cvReshapeMatND+0x8cc>
  4106e4:	e08f1001 	add	r1, pc, r1
  4106e8:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  4106ec:	e59f2594 	ldr	r2, [pc, #1428]	; 410c88 <cvReshapeMatND+0x8d0>
  4106f0:	e08f2002 	add	r2, pc, r2
  4106f4:	e59f3590 	ldr	r3, [pc, #1424]	; 410c8c <cvReshapeMatND+0x8d4>
  4106f8:	e08f3003 	add	r3, pc, r3
  4106fc:	eb0008e9 	bl	412aa8 <cvError>
  410700:	e3a07000 	mov	r7, #0
  410704:	ea00013e 	b	410c04 <cvReshapeMatND+0x84c>
  410708:	e1a00009 	mov	r0, r9
  41070c:	e1a01004 	mov	r1, r4
  410710:	fa0084a7 	blx	4319b4 <__aeabi_idiv>
  410714:	e1a0a000 	mov	sl, r0
  410718:	e0030094 	mul	r3, r4, r0
  41071c:	e1530009 	cmp	r3, r9
  410720:	0a00000c 	beq	410758 <cvReshapeMatND+0x3a0>
  410724:	e59f3564 	ldr	r3, [pc, #1380]	; 410c90 <cvReshapeMatND+0x8d8>
  410728:	e58d3000 	str	r3, [sp]
  41072c:	e3e00004 	mvn	r0, #4
  410730:	e59f155c 	ldr	r1, [pc, #1372]	; 410c94 <cvReshapeMatND+0x8dc>
  410734:	e08f1001 	add	r1, pc, r1
  410738:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  41073c:	e59f2554 	ldr	r2, [pc, #1364]	; 410c98 <cvReshapeMatND+0x8e0>
  410740:	e08f2002 	add	r2, pc, r2
  410744:	e59f3550 	ldr	r3, [pc, #1360]	; 410c9c <cvReshapeMatND+0x8e4>
  410748:	e08f3003 	add	r3, pc, r3
  41074c:	eb0008d5 	bl	412aa8 <cvError>
  410750:	e3a07000 	mov	r7, #0
  410754:	ea00012a 	b	410c04 <cvReshapeMatND+0x84c>
  410758:	e5874014 	str	r4, [r7, #20]
  41075c:	e1a0000a 	mov	r0, sl
  410760:	e1a01008 	mov	r1, r8
  410764:	fa008492 	blx	4319b4 <__aeabi_idiv>
  410768:	e5870018 	str	r0, [r7, #24]
  41076c:	e0030890 	mul	r3, r0, r8
  410770:	e153000a 	cmp	r3, sl
  410774:	1a000004 	bne	41078c <cvReshapeMatND+0x3d4>
  410778:	e3560000 	cmp	r6, #0
  41077c:	0a00000f 	beq	4107c0 <cvReshapeMatND+0x408>
  410780:	e5963004 	ldr	r3, [r6, #4]
  410784:	e1500003 	cmp	r0, r3
  410788:	0a00000c 	beq	4107c0 <cvReshapeMatND+0x408>
  41078c:	e59f350c 	ldr	r3, [pc, #1292]	; 410ca0 <cvReshapeMatND+0x8e8>
  410790:	e58d3000 	str	r3, [sp]
  410794:	e3e00004 	mvn	r0, #4
  410798:	e59f1504 	ldr	r1, [pc, #1284]	; 410ca4 <cvReshapeMatND+0x8ec>
  41079c:	e08f1001 	add	r1, pc, r1
  4107a0:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  4107a4:	e59f24fc 	ldr	r2, [pc, #1276]	; 410ca8 <cvReshapeMatND+0x8f0>
  4107a8:	e08f2002 	add	r2, pc, r2
  4107ac:	e59f34f8 	ldr	r3, [pc, #1272]	; 410cac <cvReshapeMatND+0x8f4>
  4107b0:	e08f3003 	add	r3, pc, r3
  4107b4:	eb0008bb 	bl	412aa8 <cvError>
  4107b8:	e3a07000 	mov	r7, #0
  4107bc:	ea000110 	b	410c04 <cvReshapeMatND+0x84c>
  4107c0:	e5953000 	ldr	r3, [r5]
  4107c4:	e3c33f7e 	bic	r3, r3, #504	; 0x1f8
  4107c8:	e2488001 	sub	r8, r8, #1
  4107cc:	e0838188 	add	r8, r3, r8, lsl #3
  4107d0:	e5878000 	str	r8, [r7]
  4107d4:	e5951000 	ldr	r1, [r5]
  4107d8:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  4107dc:	e1a031c3 	asr	r3, r3, #3
  4107e0:	e2832001 	add	r2, r3, #1
  4107e4:	e2011007 	and	r1, r1, #7
  4107e8:	e1a01081 	lsl	r1, r1, #1
  4107ec:	e59f34bc 	ldr	r3, [pc, #1212]	; 410cb0 <cvReshapeMatND+0x8f8>
  4107f0:	e1a03133 	lsr	r3, r3, r1
  4107f4:	e2033003 	and	r3, r3, #3
  4107f8:	e1a03312 	lsl	r3, r2, r3
  4107fc:	e0000093 	mul	r0, r3, r0
  410800:	e5870004 	str	r0, [r7, #4]
  410804:	e3540001 	cmp	r4, #1
  410808:	c3e03000 	mvngt	r3, #0
  41080c:	d3a03000 	movle	r3, #0
  410810:	e0000003 	and	r0, r0, r3
  410814:	e5870004 	str	r0, [r7, #4]
  410818:	e59d3008 	ldr	r3, [sp, #8]
  41081c:	e5873008 	str	r3, [r7, #8]
  410820:	e59d300c 	ldr	r3, [sp, #12]
  410824:	e587300c 	str	r3, [r7, #12]
  410828:	ea0000e6 	b	410bc8 <cvReshapeMatND+0x810>
  41082c:	e35a0f45 	cmp	sl, #276	; 0x114
  410830:	0a00000c 	beq	410868 <cvReshapeMatND+0x4b0>
  410834:	e59f3478 	ldr	r3, [pc, #1144]	; 410cb4 <cvReshapeMatND+0x8fc>
  410838:	e58d3000 	str	r3, [sp]
  41083c:	e3e000c8 	mvn	r0, #200	; 0xc8
  410840:	e59f1470 	ldr	r1, [pc, #1136]	; 410cb8 <cvReshapeMatND+0x900>
  410844:	e08f1001 	add	r1, pc, r1
  410848:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  41084c:	e59f2468 	ldr	r2, [pc, #1128]	; 410cbc <cvReshapeMatND+0x904>
  410850:	e08f2002 	add	r2, pc, r2
  410854:	e59f3464 	ldr	r3, [pc, #1124]	; 410cc0 <cvReshapeMatND+0x908>
  410858:	e08f3003 	add	r3, pc, r3
  41085c:	eb000891 	bl	412aa8 <cvError>
  410860:	e3a07000 	mov	r7, #0
  410864:	ea0000e6 	b	410c04 <cvReshapeMatND+0x84c>
  410868:	e3560000 	cmp	r6, #0
  41086c:	1a00004d 	bne	4109a8 <cvReshapeMatND+0x5f0>
  410870:	e3550000 	cmp	r5, #0
  410874:	0a000007 	beq	410898 <cvReshapeMatND+0x4e0>
  410878:	e5953000 	ldr	r3, [r5]
  41087c:	e1a01823 	lsr	r1, r3, #16
  410880:	e59f243c 	ldr	r2, [pc, #1084]	; 410cc4 <cvReshapeMatND+0x90c>
  410884:	e1520801 	cmp	r2, r1, lsl #16
  410888:	1a000002 	bne	410898 <cvReshapeMatND+0x4e0>
  41088c:	e5952010 	ldr	r2, [r5, #16]
  410890:	e3520000 	cmp	r2, #0
  410894:	1a00000c 	bne	4108cc <cvReshapeMatND+0x514>
  410898:	e59f3428 	ldr	r3, [pc, #1064]	; 410cc8 <cvReshapeMatND+0x910>
  41089c:	e58d3000 	str	r3, [sp]
  4108a0:	e3e00004 	mvn	r0, #4
  4108a4:	e59f1420 	ldr	r1, [pc, #1056]	; 410ccc <cvReshapeMatND+0x914>
  4108a8:	e08f1001 	add	r1, pc, r1
  4108ac:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  4108b0:	e59f2418 	ldr	r2, [pc, #1048]	; 410cd0 <cvReshapeMatND+0x918>
  4108b4:	e08f2002 	add	r2, pc, r2
  4108b8:	e59f3414 	ldr	r3, [pc, #1044]	; 410cd4 <cvReshapeMatND+0x91c>
  4108bc:	e08f3003 	add	r3, pc, r3
  4108c0:	eb000878 	bl	412aa8 <cvError>
  4108c4:	e3a07000 	mov	r7, #0
  4108c8:	ea0000cd 	b	410c04 <cvReshapeMatND+0x84c>
  4108cc:	e3590000 	cmp	r9, #0
  4108d0:	ca000008 	bgt	4108f8 <cvReshapeMatND+0x540>
  4108d4:	e59f03fc 	ldr	r0, [pc, #1020]	; 410cd8 <cvReshapeMatND+0x920>
  4108d8:	e08f0000 	add	r0, pc, r0
  4108dc:	e59f13f8 	ldr	r1, [pc, #1016]	; 410cdc <cvReshapeMatND+0x924>
  4108e0:	e59f23f8 	ldr	r2, [pc, #1016]	; 410ce0 <cvReshapeMatND+0x928>
  4108e4:	e08f2002 	add	r2, pc, r2
  4108e8:	e2822f59 	add	r2, r2, #356	; 0x164
  4108ec:	e59f33f0 	ldr	r3, [pc, #1008]	; 410ce4 <cvReshapeMatND+0x92c>
  4108f0:	e08f3003 	add	r3, pc, r3
  4108f4:	fa008d16 	blx	433d54 <__assert_func>
  4108f8:	e5952004 	ldr	r2, [r5, #4]
  4108fc:	e0852182 	add	r2, r5, r2, lsl #3
  410900:	e592400c 	ldr	r4, [r2, #12]
  410904:	e2033f7e 	and	r3, r3, #504	; 0x1f8
  410908:	e1a031c3 	asr	r3, r3, #3
  41090c:	e0244493 	mla	r4, r3, r4, r4
  410910:	e1a00004 	mov	r0, r4
  410914:	e1a01009 	mov	r1, r9
  410918:	fa008425 	blx	4319b4 <__aeabi_idiv>
  41091c:	e1a06000 	mov	r6, r0
  410920:	e0030099 	mul	r3, r9, r0
  410924:	e1530004 	cmp	r3, r4
  410928:	0a00000c 	beq	410960 <cvReshapeMatND+0x5a8>
  41092c:	e59f33b4 	ldr	r3, [pc, #948]	; 410ce8 <cvReshapeMatND+0x930>
  410930:	e58d3000 	str	r3, [sp]
  410934:	e3e00004 	mvn	r0, #4
  410938:	e59f13ac 	ldr	r1, [pc, #940]	; 410cec <cvReshapeMatND+0x934>
  41093c:	e08f1001 	add	r1, pc, r1
  410940:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410944:	e59f23a4 	ldr	r2, [pc, #932]	; 410cf0 <cvReshapeMatND+0x938>
  410948:	e08f2002 	add	r2, pc, r2
  41094c:	e59f33a0 	ldr	r3, [pc, #928]	; 410cf4 <cvReshapeMatND+0x93c>
  410950:	e08f3003 	add	r3, pc, r3
  410954:	eb000853 	bl	412aa8 <cvError>
  410958:	e3a07000 	mov	r7, #0
  41095c:	ea0000a8 	b	410c04 <cvReshapeMatND+0x84c>
  410960:	e1550007 	cmp	r5, r7
  410964:	0a000006 	beq	410984 <cvReshapeMatND+0x5cc>
  410968:	e1a00007 	mov	r0, r7
  41096c:	e1a01005 	mov	r1, r5
  410970:	e3a02f45 	mov	r2, #276	; 0x114
  410974:	fa009157 	blx	434ed8 <memcpy>
  410978:	e3a03000 	mov	r3, #0
  41097c:	e5873008 	str	r3, [r7, #8]
  410980:	e587300c 	str	r3, [r7, #12]
  410984:	e5973004 	ldr	r3, [r7, #4]
  410988:	e0873183 	add	r3, r7, r3, lsl #3
  41098c:	e583600c 	str	r6, [r3, #12]
  410990:	e5973000 	ldr	r3, [r7]
  410994:	e3c33f7e 	bic	r3, r3, #504	; 0x1f8
  410998:	e2499001 	sub	r9, r9, #1
  41099c:	e0833189 	add	r3, r3, r9, lsl #3
  4109a0:	e5873000 	str	r3, [r7]
  4109a4:	ea000087 	b	410bc8 <cvReshapeMatND+0x810>
  4109a8:	e3590000 	cmp	r9, #0
  4109ac:	0a00000b 	beq	4109e0 <cvReshapeMatND+0x628>
  4109b0:	e59f3340 	ldr	r3, [pc, #832]	; 410cf8 <cvReshapeMatND+0x940>
  4109b4:	e58d3000 	str	r3, [sp]
  4109b8:	e3e00004 	mvn	r0, #4
  4109bc:	e59f1338 	ldr	r1, [pc, #824]	; 410cfc <cvReshapeMatND+0x944>
  4109c0:	e08f1001 	add	r1, pc, r1
  4109c4:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  4109c8:	e59f2330 	ldr	r2, [pc, #816]	; 410d00 <cvReshapeMatND+0x948>
  4109cc:	e08f2002 	add	r2, pc, r2
  4109d0:	e59f332c 	ldr	r3, [pc, #812]	; 410d04 <cvReshapeMatND+0x94c>
  4109d4:	e08f3003 	add	r3, pc, r3
  4109d8:	eb000832 	bl	412aa8 <cvError>
  4109dc:	ea000077 	b	410bc0 <cvReshapeMatND+0x808>
  4109e0:	e3550000 	cmp	r5, #0
  4109e4:	0a000006 	beq	410a04 <cvReshapeMatND+0x64c>
  4109e8:	e1d520b2 	ldrh	r2, [r5, #2]
  4109ec:	e59f32d0 	ldr	r3, [pc, #720]	; 410cc4 <cvReshapeMatND+0x90c>
  4109f0:	e1530802 	cmp	r3, r2, lsl #16
  4109f4:	1a000002 	bne	410a04 <cvReshapeMatND+0x64c>
  4109f8:	e5953010 	ldr	r3, [r5, #16]
  4109fc:	e3530000 	cmp	r3, #0
  410a00:	1a000013 	bne	410a54 <cvReshapeMatND+0x69c>
  410a04:	e1a00005 	mov	r0, r5
  410a08:	e28d1014 	add	r1, sp, #20
  410a0c:	e28d2010 	add	r2, sp, #16
  410a10:	ebfff9f9 	bl	40f1fc <_ZL10cvGetMatNDPKvP7CvMatNDPi>
  410a14:	eb0007f2 	bl	4129e4 <cvGetErrStatus>
  410a18:	e3500000 	cmp	r0, #0
  410a1c:	aa00000b 	bge	410a50 <cvReshapeMatND+0x698>
  410a20:	e59f32e0 	ldr	r3, [pc, #736]	; 410d08 <cvReshapeMatND+0x950>
  410a24:	e58d3000 	str	r3, [sp]
  410a28:	e3e00000 	mvn	r0, #0
  410a2c:	e59f12d8 	ldr	r1, [pc, #728]	; 410d0c <cvReshapeMatND+0x954>
  410a30:	e08f1001 	add	r1, pc, r1
  410a34:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410a38:	e59f22d0 	ldr	r2, [pc, #720]	; 410d10 <cvReshapeMatND+0x958>
  410a3c:	e08f2002 	add	r2, pc, r2
  410a40:	e59f32cc 	ldr	r3, [pc, #716]	; 410d14 <cvReshapeMatND+0x95c>
  410a44:	e08f3003 	add	r3, pc, r3
  410a48:	eb000816 	bl	412aa8 <cvError>
  410a4c:	ea00005b 	b	410bc0 <cvReshapeMatND+0x808>
  410a50:	e28d5014 	add	r5, sp, #20
  410a54:	e5953000 	ldr	r3, [r5]
  410a58:	e3130901 	tst	r3, #16384	; 0x4000
  410a5c:	0a00000b 	beq	410a90 <cvReshapeMatND+0x6d8>
  410a60:	e59f32b0 	ldr	r3, [pc, #688]	; 410d18 <cvReshapeMatND+0x960>
  410a64:	e58d3000 	str	r3, [sp]
  410a68:	e3e00004 	mvn	r0, #4
  410a6c:	e59f12a8 	ldr	r1, [pc, #680]	; 410d1c <cvReshapeMatND+0x964>
  410a70:	e08f1001 	add	r1, pc, r1
  410a74:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410a78:	e59f22a0 	ldr	r2, [pc, #672]	; 410d20 <cvReshapeMatND+0x968>
  410a7c:	e08f2002 	add	r2, pc, r2
  410a80:	e59f329c 	ldr	r3, [pc, #668]	; 410d24 <cvReshapeMatND+0x96c>
  410a84:	e08f3003 	add	r3, pc, r3
  410a88:	eb000806 	bl	412aa8 <cvError>
  410a8c:	ea00004b 	b	410bc0 <cvReshapeMatND+0x808>
  410a90:	e5952014 	ldr	r2, [r5, #20]
  410a94:	e3a03001 	mov	r3, #1
  410a98:	ea000003 	b	410aac <cvReshapeMatND+0x6f4>
  410a9c:	e0851183 	add	r1, r5, r3, lsl #3
  410aa0:	e5911014 	ldr	r1, [r1, #20]
  410aa4:	e0020291 	mul	r2, r1, r2
  410aa8:	e2833001 	add	r3, r3, #1
  410aac:	e1530008 	cmp	r3, r8
  410ab0:	bafffff9 	blt	410a9c <cvReshapeMatND+0x6e4>
  410ab4:	e3a00001 	mov	r0, #1
  410ab8:	e3a03000 	mov	r3, #0
  410abc:	ea000010 	b	410b04 <cvReshapeMatND+0x74c>
  410ac0:	e7961103 	ldr	r1, [r6, r3, lsl #2]
  410ac4:	e3510000 	cmp	r1, #0
  410ac8:	ca00000b 	bgt	410afc <cvReshapeMatND+0x744>
  410acc:	e59f3254 	ldr	r3, [pc, #596]	; 410d28 <cvReshapeMatND+0x970>
  410ad0:	e58d3000 	str	r3, [sp]
  410ad4:	e3e000c8 	mvn	r0, #200	; 0xc8
  410ad8:	e59f124c 	ldr	r1, [pc, #588]	; 410d2c <cvReshapeMatND+0x974>
  410adc:	e08f1001 	add	r1, pc, r1
  410ae0:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410ae4:	e59f2244 	ldr	r2, [pc, #580]	; 410d30 <cvReshapeMatND+0x978>
  410ae8:	e08f2002 	add	r2, pc, r2
  410aec:	e59f3240 	ldr	r3, [pc, #576]	; 410d34 <cvReshapeMatND+0x97c>
  410af0:	e08f3003 	add	r3, pc, r3
  410af4:	eb0007eb 	bl	412aa8 <cvError>
  410af8:	ea000030 	b	410bc0 <cvReshapeMatND+0x808>
  410afc:	e0000091 	mul	r0, r1, r0
  410b00:	e2833001 	add	r3, r3, #1
  410b04:	e1530004 	cmp	r3, r4
  410b08:	baffffec 	blt	410ac0 <cvReshapeMatND+0x708>
  410b0c:	e1520000 	cmp	r2, r0
  410b10:	0a00000b 	beq	410b44 <cvReshapeMatND+0x78c>
  410b14:	e59f321c 	ldr	r3, [pc, #540]	; 410d38 <cvReshapeMatND+0x980>
  410b18:	e58d3000 	str	r3, [sp]
  410b1c:	e3e000c8 	mvn	r0, #200	; 0xc8
  410b20:	e59f1214 	ldr	r1, [pc, #532]	; 410d3c <cvReshapeMatND+0x984>
  410b24:	e08f1001 	add	r1, pc, r1
  410b28:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410b2c:	e59f220c 	ldr	r2, [pc, #524]	; 410d40 <cvReshapeMatND+0x988>
  410b30:	e08f2002 	add	r2, pc, r2
  410b34:	e59f3208 	ldr	r3, [pc, #520]	; 410d44 <cvReshapeMatND+0x98c>
  410b38:	e08f3003 	add	r3, pc, r3
  410b3c:	eb0007d9 	bl	412aa8 <cvError>
  410b40:	ea00001e 	b	410bc0 <cvReshapeMatND+0x808>
  410b44:	e1550007 	cmp	r5, r7
  410b48:	13a03000 	movne	r3, #0
  410b4c:	15873008 	strne	r3, [r7, #8]
  410b50:	1587300c 	strne	r3, [r7, #12]
  410b54:	e5874004 	str	r4, [r7, #4]
  410b58:	e5952000 	ldr	r2, [r5]
  410b5c:	e5872000 	str	r2, [r7]
  410b60:	e5953010 	ldr	r3, [r5, #16]
  410b64:	e5873010 	str	r3, [r7, #16]
  410b68:	e2023f7e 	and	r3, r2, #504	; 0x1f8
  410b6c:	e1a031c3 	asr	r3, r3, #3
  410b70:	e2833001 	add	r3, r3, #1
  410b74:	e2022007 	and	r2, r2, #7
  410b78:	e1a02082 	lsl	r2, r2, #1
  410b7c:	e59f112c 	ldr	r1, [pc, #300]	; 410cb0 <cvReshapeMatND+0x8f8>
  410b80:	e1a02231 	lsr	r2, r1, r2
  410b84:	e2022003 	and	r2, r2, #3
  410b88:	e1a02213 	lsl	r2, r3, r2
  410b8c:	e2444001 	sub	r4, r4, #1
  410b90:	ea000007 	b	410bb4 <cvReshapeMatND+0x7fc>
  410b94:	e7961104 	ldr	r1, [r6, r4, lsl #2]
  410b98:	e2843002 	add	r3, r4, #2
  410b9c:	e0873183 	add	r3, r7, r3, lsl #3
  410ba0:	e5831004 	str	r1, [r3, #4]
  410ba4:	e5832008 	str	r2, [r3, #8]
  410ba8:	e7963104 	ldr	r3, [r6, r4, lsl #2]
  410bac:	e0020293 	mul	r2, r3, r2
  410bb0:	e2444001 	sub	r4, r4, #1
  410bb4:	e3540000 	cmp	r4, #0
  410bb8:	aafffff5 	bge	410b94 <cvReshapeMatND+0x7dc>
  410bbc:	ea000001 	b	410bc8 <cvReshapeMatND+0x810>
  410bc0:	e3a07000 	mov	r7, #0
  410bc4:	ea00000e 	b	410c04 <cvReshapeMatND+0x84c>
  410bc8:	e59d3010 	ldr	r3, [sp, #16]
  410bcc:	e3530000 	cmp	r3, #0
  410bd0:	1a00000b 	bne	410c04 <cvReshapeMatND+0x84c>
  410bd4:	e3a03ec1 	mov	r3, #3088	; 0xc10
  410bd8:	e58d3000 	str	r3, [sp]
  410bdc:	e3e00017 	mvn	r0, #23
  410be0:	e59f1160 	ldr	r1, [pc, #352]	; 410d48 <cvReshapeMatND+0x990>
  410be4:	e08f1001 	add	r1, pc, r1
  410be8:	e2811d0b 	add	r1, r1, #704	; 0x2c0
  410bec:	e59f2158 	ldr	r2, [pc, #344]	; 410d4c <cvReshapeMatND+0x994>
  410bf0:	e08f2002 	add	r2, pc, r2
  410bf4:	e59f3154 	ldr	r3, [pc, #340]	; 410d50 <cvReshapeMatND+0x998>
  410bf8:	e08f3003 	add	r3, pc, r3
  410bfc:	eb0007a9 	bl	412aa8 <cvError>
  410c00:	e3a07000 	mov	r7, #0
  410c04:	e1a00007 	mov	r0, r7
  410c08:	e28ddf4b 	add	sp, sp, #300	; 0x12c
  410c0c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  410c10:	e12fff1e 	bx	lr
  410c14:	00000b5b 	.word	0x00000b5b
  410c18:	1fbf00a0 	.word	0x1fbf00a0
  410c1c:	0002d3c4 	.word	0x0002d3c4
  410c20:	0002cbe4 	.word	0x0002cbe4
  410c24:	00000b5e 	.word	0x00000b5e
  410c28:	1fbf0058 	.word	0x1fbf0058
  410c2c:	0002d3a8 	.word	0x0002d3a8
  410c30:	0002cb9c 	.word	0x0002cb9c
  410c34:	1fbf000c 	.word	0x1fbf000c
  410c38:	0002cb40 	.word	0x0002cb40
  410c3c:	0002cb50 	.word	0x0002cb50
  410c40:	00000b6e 	.word	0x00000b6e
  410c44:	1fbeffbc 	.word	0x1fbeffbc
  410c48:	0002d340 	.word	0x0002d340
  410c4c:	0002cb00 	.word	0x0002cb00
  410c50:	1fbeff80 	.word	0x1fbeff80
  410c54:	0002d334 	.word	0x0002d334
  410c58:	0002cac4 	.word	0x0002cac4
  410c5c:	00000b7c 	.word	0x00000b7c
  410c60:	1fbeff2c 	.word	0x1fbeff2c
  410c64:	0002d308 	.word	0x0002d308
  410c68:	0002ca70 	.word	0x0002ca70
  410c6c:	42420000 	.word	0x42420000
  410c70:	00000b84 	.word	0x00000b84
  410c74:	1fbefe7c 	.word	0x1fbefe7c
  410c78:	0002c9b0 	.word	0x0002c9b0
  410c7c:	0002c9c0 	.word	0x0002c9c0
  410c80:	00000b9d 	.word	0x00000b9d
  410c84:	1fbefdac 	.word	0x1fbefdac
  410c88:	0002d1a4 	.word	0x0002d1a4
  410c8c:	0002c8f0 	.word	0x0002c8f0
  410c90:	00000ba3 	.word	0x00000ba3
  410c94:	1fbefd5c 	.word	0x1fbefd5c
  410c98:	0002d19c 	.word	0x0002d19c
  410c9c:	0002c8a0 	.word	0x0002c8a0
  410ca0:	00000bac 	.word	0x00000bac
  410ca4:	1fbefcf4 	.word	0x1fbefcf4
  410ca8:	0002d184 	.word	0x0002d184
  410cac:	0002c838 	.word	0x0002c838
  410cb0:	0000ba50 	.word	0x0000ba50
  410cb4:	00000bb9 	.word	0x00000bb9
  410cb8:	1fbefc4c 	.word	0x1fbefc4c
  410cbc:	0002d124 	.word	0x0002d124
  410cc0:	0002c790 	.word	0x0002c790
  410cc4:	42430000 	.word	0x42430000
  410cc8:	00000bbe 	.word	0x00000bbe
  410ccc:	1fbefbe8 	.word	0x1fbefbe8
  410cd0:	0002d0e0 	.word	0x0002d0e0
  410cd4:	0002c72c 	.word	0x0002c72c
  410cd8:	0002c710 	.word	0x0002c710
  410cdc:	00000bc2 	.word	0x00000bc2
  410ce0:	0002c518 	.word	0x0002c518
  410ce4:	0002d0c8 	.word	0x0002d0c8
  410ce8:	00000bc8 	.word	0x00000bc8
  410cec:	1fbefb54 	.word	0x1fbefb54
  410cf0:	0002d07c 	.word	0x0002d07c
  410cf4:	0002c698 	.word	0x0002c698
  410cf8:	00000bdf 	.word	0x00000bdf
  410cfc:	1fbefad0 	.word	0x1fbefad0
  410d00:	0002d040 	.word	0x0002d040
  410d04:	0002c614 	.word	0x0002c614
  410d08:	00000be3 	.word	0x00000be3
  410d0c:	1fbefa60 	.word	0x1fbefa60
  410d10:	0002c594 	.word	0x0002c594
  410d14:	0002c5a4 	.word	0x0002c5a4
  410d18:	00000be8 	.word	0x00000be8
  410d1c:	1fbefa20 	.word	0x1fbefa20
  410d20:	0002cff0 	.word	0x0002cff0
  410d24:	0002c564 	.word	0x0002c564
  410d28:	00000bf3 	.word	0x00000bf3
  410d2c:	1fbef9b4 	.word	0x1fbef9b4
  410d30:	0002cfb0 	.word	0x0002cfb0
  410d34:	0002c4f8 	.word	0x0002c4f8
  410d38:	00000bf9 	.word	0x00000bf9
  410d3c:	1fbef96c 	.word	0x1fbef96c
  410d40:	0002cf94 	.word	0x0002cf94
  410d44:	0002c4b0 	.word	0x0002c4b0
  410d48:	1fbef8ac 	.word	0x1fbef8ac
  410d4c:	0002cf18 	.word	0x0002cf18
  410d50:	0002c3f0 	.word	0x0002c3f0

00410d54 <cvReshape>:
  410d54:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  410d58:	e24dd010 	sub	sp, sp, #16
  410d5c:	e2516000 	subs	r6, r1, #0
  410d60:	1a00000b 	bne	410d94 <cvReshape+0x40>
  410d64:	e59f336c 	ldr	r3, [pc, #876]	; 4110d8 <cvReshape+0x384>
  410d68:	e58d3000 	str	r3, [sp]
  410d6c:	e3e0001a 	mvn	r0, #26
  410d70:	e59f1364 	ldr	r1, [pc, #868]	; 4110dc <cvReshape+0x388>
  410d74:	e08f1001 	add	r1, pc, r1
  410d78:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  410d7c:	e59f235c 	ldr	r2, [pc, #860]	; 4110e0 <cvReshape+0x38c>
  410d80:	e08f2002 	add	r2, pc, r2
  410d84:	e59f3358 	ldr	r3, [pc, #856]	; 4110e4 <cvReshape+0x390>
  410d88:	e08f3003 	add	r3, pc, r3
  410d8c:	eb000745 	bl	412aa8 <cvError>
  410d90:	ea0000cc 	b	4110c8 <cvReshape+0x374>
  410d94:	e1a04000 	mov	r4, r0
  410d98:	e1a05002 	mov	r5, r2
  410d9c:	e1a08003 	mov	r8, r3
  410da0:	e3500000 	cmp	r0, #0
  410da4:	0a00000c 	beq	410ddc <cvReshape+0x88>
  410da8:	e1d020b2 	ldrh	r2, [r0, #2]
  410dac:	e59f3334 	ldr	r3, [pc, #820]	; 4110e8 <cvReshape+0x394>
  410db0:	e1530802 	cmp	r3, r2, lsl #16
  410db4:	1a000008 	bne	410ddc <cvReshape+0x88>
  410db8:	e5903018 	ldr	r3, [r0, #24]
  410dbc:	e3530000 	cmp	r3, #0
  410dc0:	da000005 	ble	410ddc <cvReshape+0x88>
  410dc4:	e5903014 	ldr	r3, [r0, #20]
  410dc8:	e3530000 	cmp	r3, #0
  410dcc:	da000002 	ble	410ddc <cvReshape+0x88>
  410dd0:	e5903010 	ldr	r3, [r0, #16]
  410dd4:	e3530000 	cmp	r3, #0
  410dd8:	1a000026 	bne	410e78 <cvReshape+0x124>
  410ddc:	e28d2010 	add	r2, sp, #16
  410de0:	e3a03000 	mov	r3, #0
  410de4:	e5223004 	str	r3, [r2, #-4]!
  410de8:	e1a00004 	mov	r0, r4
  410dec:	e1a01006 	mov	r1, r6
  410df0:	e3a03001 	mov	r3, #1
  410df4:	ebfff74c 	bl	40eb2c <cvGetMat>
  410df8:	e1a04000 	mov	r4, r0
  410dfc:	eb0006f8 	bl	4129e4 <cvGetErrStatus>
  410e00:	e3500000 	cmp	r0, #0
  410e04:	aa00000b 	bge	410e38 <cvReshape+0xe4>
  410e08:	e59f32dc 	ldr	r3, [pc, #732]	; 4110ec <cvReshape+0x398>
  410e0c:	e58d3000 	str	r3, [sp]
  410e10:	e3e00000 	mvn	r0, #0
  410e14:	e59f12d4 	ldr	r1, [pc, #724]	; 4110f0 <cvReshape+0x39c>
  410e18:	e08f1001 	add	r1, pc, r1
  410e1c:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  410e20:	e59f22cc 	ldr	r2, [pc, #716]	; 4110f4 <cvReshape+0x3a0>
  410e24:	e08f2002 	add	r2, pc, r2
  410e28:	e59f32c8 	ldr	r3, [pc, #712]	; 4110f8 <cvReshape+0x3a4>
  410e2c:	e08f3003 	add	r3, pc, r3
  410e30:	eb00071c 	bl	412aa8 <cvError>
  410e34:	ea00000d 	b	410e70 <cvReshape+0x11c>
  410e38:	e59d300c 	ldr	r3, [sp, #12]
  410e3c:	e3530000 	cmp	r3, #0
  410e40:	0a00000c 	beq	410e78 <cvReshape+0x124>
  410e44:	e59f32b0 	ldr	r3, [pc, #688]	; 4110fc <cvReshape+0x3a8>
  410e48:	e58d3000 	str	r3, [sp]
  410e4c:	e3e00017 	mvn	r0, #23
  410e50:	e59f12a8 	ldr	r1, [pc, #680]	; 411100 <cvReshape+0x3ac>
  410e54:	e08f1001 	add	r1, pc, r1
  410e58:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  410e5c:	e59f22a0 	ldr	r2, [pc, #672]	; 411104 <cvReshape+0x3b0>
  410e60:	e08f2002 	add	r2, pc, r2
  410e64:	e59f329c 	ldr	r3, [pc, #668]	; 411108 <cvReshape+0x3b4>
  410e68:	e08f3003 	add	r3, pc, r3
  410e6c:	eb00070d 	bl	412aa8 <cvError>
  410e70:	e3a06000 	mov	r6, #0
  410e74:	ea000093 	b	4110c8 <cvReshape+0x374>
  410e78:	e3550000 	cmp	r5, #0
  410e7c:	1a000004 	bne	410e94 <cvReshape+0x140>
  410e80:	e5945000 	ldr	r5, [r4]
  410e84:	e2055f7e 	and	r5, r5, #504	; 0x1f8
  410e88:	e1a051c5 	asr	r5, r5, #3
  410e8c:	e2855001 	add	r5, r5, #1
  410e90:	ea00000f 	b	410ed4 <cvReshape+0x180>
  410e94:	e2453001 	sub	r3, r5, #1
  410e98:	e3530003 	cmp	r3, #3
  410e9c:	9a00000c 	bls	410ed4 <cvReshape+0x180>
  410ea0:	e59f3264 	ldr	r3, [pc, #612]	; 41110c <cvReshape+0x3b8>
  410ea4:	e58d3000 	str	r3, [sp]
  410ea8:	e3e0000e 	mvn	r0, #14
  410eac:	e59f125c 	ldr	r1, [pc, #604]	; 411110 <cvReshape+0x3bc>
  410eb0:	e08f1001 	add	r1, pc, r1
  410eb4:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  410eb8:	e59f2254 	ldr	r2, [pc, #596]	; 411114 <cvReshape+0x3c0>
  410ebc:	e08f2002 	add	r2, pc, r2
  410ec0:	e59f3250 	ldr	r3, [pc, #592]	; 411118 <cvReshape+0x3c4>
  410ec4:	e08f3003 	add	r3, pc, r3
  410ec8:	eb0006f6 	bl	412aa8 <cvError>
  410ecc:	e3a06000 	mov	r6, #0
  410ed0:	ea00007c 	b	4110c8 <cvReshape+0x374>
  410ed4:	e1540006 	cmp	r4, r6
  410ed8:	0a000008 	beq	410f00 <cvReshape+0x1ac>
  410edc:	e1a0c006 	mov	ip, r6
  410ee0:	e1a0e004 	mov	lr, r4
  410ee4:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  410ee8:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  410eec:	e89e0007 	ldm	lr, {r0, r1, r2}
  410ef0:	e88c0007 	stm	ip, {r0, r1, r2}
  410ef4:	e3a03000 	mov	r3, #0
  410ef8:	e5863008 	str	r3, [r6, #8]
  410efc:	e586300c 	str	r3, [r6, #12]
  410f00:	e5947018 	ldr	r7, [r4, #24]
  410f04:	e5949000 	ldr	r9, [r4]
  410f08:	e2093f7e 	and	r3, r9, #504	; 0x1f8
  410f0c:	e1a031c3 	asr	r3, r3, #3
  410f10:	e0277793 	mla	r7, r3, r7, r7
  410f14:	e1550007 	cmp	r5, r7
  410f18:	ca000004 	bgt	410f30 <cvReshape+0x1dc>
  410f1c:	e1a00007 	mov	r0, r7
  410f20:	e1a01005 	mov	r1, r5
  410f24:	fa0082a9 	blx	4319d0 <__aeabi_idivmod>
  410f28:	e3510000 	cmp	r1, #0
  410f2c:	0a000006 	beq	410f4c <cvReshape+0x1f8>
  410f30:	e3580000 	cmp	r8, #0
  410f34:	1a000004 	bne	410f4c <cvReshape+0x1f8>
  410f38:	e5940014 	ldr	r0, [r4, #20]
  410f3c:	e0000097 	mul	r0, r7, r0
  410f40:	e1a01005 	mov	r1, r5
  410f44:	fa00829a 	blx	4319b4 <__aeabi_idiv>
  410f48:	e1a08000 	mov	r8, r0
  410f4c:	e3580000 	cmp	r8, #0
  410f50:	0a000002 	beq	410f60 <cvReshape+0x20c>
  410f54:	e594a014 	ldr	sl, [r4, #20]
  410f58:	e15a0008 	cmp	sl, r8
  410f5c:	1a000004 	bne	410f74 <cvReshape+0x220>
  410f60:	e5943014 	ldr	r3, [r4, #20]
  410f64:	e5863014 	str	r3, [r6, #20]
  410f68:	e5943004 	ldr	r3, [r4, #4]
  410f6c:	e5863004 	str	r3, [r6, #4]
  410f70:	ea00003b 	b	411064 <cvReshape+0x310>
  410f74:	e00a0a97 	mul	sl, r7, sl
  410f78:	e3190901 	tst	r9, #16384	; 0x4000
  410f7c:	1a00000c 	bne	410fb4 <cvReshape+0x260>
  410f80:	e59f3194 	ldr	r3, [pc, #404]	; 41111c <cvReshape+0x3c8>
  410f84:	e58d3000 	str	r3, [sp]
  410f88:	e3e0000c 	mvn	r0, #12
  410f8c:	e59f118c 	ldr	r1, [pc, #396]	; 411120 <cvReshape+0x3cc>
  410f90:	e08f1001 	add	r1, pc, r1
  410f94:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  410f98:	e59f2184 	ldr	r2, [pc, #388]	; 411124 <cvReshape+0x3d0>
  410f9c:	e08f2002 	add	r2, pc, r2
  410fa0:	e59f3180 	ldr	r3, [pc, #384]	; 411128 <cvReshape+0x3d4>
  410fa4:	e08f3003 	add	r3, pc, r3
  410fa8:	eb0006be 	bl	412aa8 <cvError>
  410fac:	e3a06000 	mov	r6, #0
  410fb0:	ea000044 	b	4110c8 <cvReshape+0x374>
  410fb4:	e158000a 	cmp	r8, sl
  410fb8:	9a00000c 	bls	410ff0 <cvReshape+0x29c>
  410fbc:	e59f3168 	ldr	r3, [pc, #360]	; 41112c <cvReshape+0x3d8>
  410fc0:	e58d3000 	str	r3, [sp]
  410fc4:	e3e000d2 	mvn	r0, #210	; 0xd2
  410fc8:	e59f1160 	ldr	r1, [pc, #352]	; 411130 <cvReshape+0x3dc>
  410fcc:	e08f1001 	add	r1, pc, r1
  410fd0:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  410fd4:	e59f2158 	ldr	r2, [pc, #344]	; 411134 <cvReshape+0x3e0>
  410fd8:	e08f2002 	add	r2, pc, r2
  410fdc:	e59f3154 	ldr	r3, [pc, #340]	; 411138 <cvReshape+0x3e4>
  410fe0:	e08f3003 	add	r3, pc, r3
  410fe4:	eb0006af 	bl	412aa8 <cvError>
  410fe8:	e3a06000 	mov	r6, #0
  410fec:	ea000035 	b	4110c8 <cvReshape+0x374>
  410ff0:	e1a0000a 	mov	r0, sl
  410ff4:	e1a01008 	mov	r1, r8
  410ff8:	fa00826d 	blx	4319b4 <__aeabi_idiv>
  410ffc:	e1a07000 	mov	r7, r0
  411000:	e0030098 	mul	r3, r8, r0
  411004:	e153000a 	cmp	r3, sl
  411008:	0a00000c 	beq	411040 <cvReshape+0x2ec>
  41100c:	e59f3128 	ldr	r3, [pc, #296]	; 41113c <cvReshape+0x3e8>
  411010:	e58d3000 	str	r3, [sp]
  411014:	e3e00004 	mvn	r0, #4
  411018:	e59f1120 	ldr	r1, [pc, #288]	; 411140 <cvReshape+0x3ec>
  41101c:	e08f1001 	add	r1, pc, r1
  411020:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  411024:	e59f2118 	ldr	r2, [pc, #280]	; 411144 <cvReshape+0x3f0>
  411028:	e08f2002 	add	r2, pc, r2
  41102c:	e59f3114 	ldr	r3, [pc, #276]	; 411148 <cvReshape+0x3f4>
  411030:	e08f3003 	add	r3, pc, r3
  411034:	eb00069b 	bl	412aa8 <cvError>
  411038:	e3a06000 	mov	r6, #0
  41103c:	ea000021 	b	4110c8 <cvReshape+0x374>
  411040:	e5868014 	str	r8, [r6, #20]
  411044:	e5943000 	ldr	r3, [r4]
  411048:	e2033007 	and	r3, r3, #7
  41104c:	e1a02103 	lsl	r2, r3, #2
  411050:	e59f30f4 	ldr	r3, [pc, #244]	; 41114c <cvReshape+0x3f8>
  411054:	e1a03233 	lsr	r3, r3, r2
  411058:	e203300f 	and	r3, r3, #15
  41105c:	e0030390 	mul	r3, r0, r3
  411060:	e5863004 	str	r3, [r6, #4]
  411064:	e1a00007 	mov	r0, r7
  411068:	e1a01005 	mov	r1, r5
  41106c:	fa008250 	blx	4319b4 <__aeabi_idiv>
  411070:	e0030095 	mul	r3, r5, r0
  411074:	e1530007 	cmp	r3, r7
  411078:	0a00000c 	beq	4110b0 <cvReshape+0x35c>
  41107c:	e59f30cc 	ldr	r3, [pc, #204]	; 411150 <cvReshape+0x3fc>
  411080:	e58d3000 	str	r3, [sp]
  411084:	e3e0000e 	mvn	r0, #14
  411088:	e59f10c4 	ldr	r1, [pc, #196]	; 411154 <cvReshape+0x400>
  41108c:	e08f1001 	add	r1, pc, r1
  411090:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  411094:	e59f20bc 	ldr	r2, [pc, #188]	; 411158 <cvReshape+0x404>
  411098:	e08f2002 	add	r2, pc, r2
  41109c:	e59f30b8 	ldr	r3, [pc, #184]	; 41115c <cvReshape+0x408>
  4110a0:	e08f3003 	add	r3, pc, r3
  4110a4:	eb00067f 	bl	412aa8 <cvError>
  4110a8:	e3a06000 	mov	r6, #0
  4110ac:	ea000005 	b	4110c8 <cvReshape+0x374>
  4110b0:	e5860018 	str	r0, [r6, #24]
  4110b4:	e5943000 	ldr	r3, [r4]
  4110b8:	e3c33f7e 	bic	r3, r3, #504	; 0x1f8
  4110bc:	e2455001 	sub	r5, r5, #1
  4110c0:	e0835185 	add	r5, r3, r5, lsl #3
  4110c4:	e5865000 	str	r5, [r6]
  4110c8:	e1a00006 	mov	r0, r6
  4110cc:	e28dd010 	add	sp, sp, #16
  4110d0:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  4110d4:	e12fff1e 	bx	lr
  4110d8:	00000c27 	.word	0x00000c27
  4110dc:	1fbef71c 	.word	0x1fbef71c
  4110e0:	0002f690 	.word	0x0002f690
  4110e4:	0002c260 	.word	0x0002c260
  4110e8:	42420000 	.word	0x42420000
  4110ec:	00000c2c 	.word	0x00000c2c
  4110f0:	1fbef678 	.word	0x1fbef678
  4110f4:	0002c1ac 	.word	0x0002c1ac
  4110f8:	0002c1bc 	.word	0x0002c1bc
  4110fc:	00000c2e 	.word	0x00000c2e
  411100:	1fbef63c 	.word	0x1fbef63c
  411104:	0002ccd0 	.word	0x0002ccd0
  411108:	0002c180 	.word	0x0002c180
  41110c:	00000c34 	.word	0x00000c34
  411110:	1fbef5e0 	.word	0x1fbef5e0
  411114:	0002f554 	.word	0x0002f554
  411118:	0002c124 	.word	0x0002c124
  41111c:	00000c4c 	.word	0x00000c4c
  411120:	1fbef500 	.word	0x1fbef500
  411124:	0002cbac 	.word	0x0002cbac
  411128:	0002c044 	.word	0x0002c044
  41112c:	00000c4f 	.word	0x00000c4f
  411130:	1fbef4c4 	.word	0x1fbef4c4
  411134:	0002cbbc 	.word	0x0002cbbc
  411138:	0002c008 	.word	0x0002c008
  41113c:	00000c55 	.word	0x00000c55
  411140:	1fbef474 	.word	0x1fbef474
  411144:	0002c8b4 	.word	0x0002c8b4
  411148:	0002bfb8 	.word	0x0002bfb8
  41114c:	48442211 	.word	0x48442211
  411150:	00000c5f 	.word	0x00000c5f
  411154:	1fbef404 	.word	0x1fbef404
  411158:	0002cb14 	.word	0x0002cb14
  41115c:	0002bf48 	.word	0x0002bf48

00411160 <cvInitImageHeader>:
  411160:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  411164:	e24dd01c 	sub	sp, sp, #28
  411168:	e28dc008 	add	ip, sp, #8
  41116c:	e88c0006 	stm	ip, {r1, r2}
  411170:	e59d8038 	ldr	r8, [sp, #56]	; 0x38
  411174:	e59d703c 	ldr	r7, [sp, #60]	; 0x3c
  411178:	e59d6040 	ldr	r6, [sp, #64]	; 0x40
  41117c:	e2504000 	subs	r4, r0, #0
  411180:	1a00000b 	bne	4111b4 <cvInitImageHeader+0x54>
  411184:	e59f327c 	ldr	r3, [pc, #636]	; 411408 <cvInitImageHeader+0x2a8>
  411188:	e58d3000 	str	r3, [sp]
  41118c:	e3e00008 	mvn	r0, #8
  411190:	e59f1274 	ldr	r1, [pc, #628]	; 41140c <cvInitImageHeader+0x2ac>
  411194:	e08f1001 	add	r1, pc, r1
  411198:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  41119c:	e59f226c 	ldr	r2, [pc, #620]	; 411410 <cvInitImageHeader+0x2b0>
  4111a0:	e08f2002 	add	r2, pc, r2
  4111a4:	e59f3268 	ldr	r3, [pc, #616]	; 411414 <cvInitImageHeader+0x2b4>
  4111a8:	e08f3003 	add	r3, pc, r3
  4111ac:	eb00063d 	bl	412aa8 <cvError>
  4111b0:	ea000090 	b	4113f8 <cvInitImageHeader+0x298>
  4111b4:	e1a05003 	mov	r5, r3
  4111b8:	e3a09070 	mov	r9, #112	; 0x70
  4111bc:	e1a00004 	mov	r0, r4
  4111c0:	e3a01000 	mov	r1, #0
  4111c4:	e1a02009 	mov	r2, r9
  4111c8:	fa008fc1 	blx	4350d4 <memset>
  4111cc:	e5849000 	str	r9, [r4]
  4111d0:	e1a00008 	mov	r0, r8
  4111d4:	e28d1010 	add	r1, sp, #16
  4111d8:	e28d2014 	add	r2, sp, #20
  4111dc:	ebffe05f 	bl	409360 <_ZL16icvGetColorModeliPPcS0_>
  4111e0:	eb0005ff 	bl	4129e4 <cvGetErrStatus>
  4111e4:	e3500000 	cmp	r0, #0
  4111e8:	aa00000c 	bge	411220 <cvInitImageHeader+0xc0>
  4111ec:	e59f3224 	ldr	r3, [pc, #548]	; 411418 <cvInitImageHeader+0x2b8>
  4111f0:	e58d3000 	str	r3, [sp]
  4111f4:	e3e00000 	mvn	r0, #0
  4111f8:	e59f121c 	ldr	r1, [pc, #540]	; 41141c <cvInitImageHeader+0x2bc>
  4111fc:	e08f1001 	add	r1, pc, r1
  411200:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  411204:	e59f2214 	ldr	r2, [pc, #532]	; 411420 <cvInitImageHeader+0x2c0>
  411208:	e08f2002 	add	r2, pc, r2
  41120c:	e59f3210 	ldr	r3, [pc, #528]	; 411424 <cvInitImageHeader+0x2c4>
  411210:	e08f3003 	add	r3, pc, r3
  411214:	eb000623 	bl	412aa8 <cvError>
  411218:	e3a04000 	mov	r4, #0
  41121c:	ea000075 	b	4113f8 <cvInitImageHeader+0x298>
  411220:	e2840014 	add	r0, r4, #20
  411224:	e59d1010 	ldr	r1, [sp, #16]
  411228:	e3a02004 	mov	r2, #4
  41122c:	fa00919f 	blx	4358b0 <strncpy>
  411230:	e2840018 	add	r0, r4, #24
  411234:	e59d1014 	ldr	r1, [sp, #20]
  411238:	e3a02004 	mov	r2, #4
  41123c:	fa00919b 	blx	4358b0 <strncpy>
  411240:	e59d3008 	ldr	r3, [sp, #8]
  411244:	e3530000 	cmp	r3, #0
  411248:	ba000002 	blt	411258 <cvInitImageHeader+0xf8>
  41124c:	e59d200c 	ldr	r2, [sp, #12]
  411250:	e3520000 	cmp	r2, #0
  411254:	aa00000c 	bge	41128c <cvInitImageHeader+0x12c>
  411258:	e59f31c8 	ldr	r3, [pc, #456]	; 411428 <cvInitImageHeader+0x2c8>
  41125c:	e58d3000 	str	r3, [sp]
  411260:	e3e00018 	mvn	r0, #24
  411264:	e59f11c0 	ldr	r1, [pc, #448]	; 41142c <cvInitImageHeader+0x2cc>
  411268:	e08f1001 	add	r1, pc, r1
  41126c:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  411270:	e59f21b8 	ldr	r2, [pc, #440]	; 411430 <cvInitImageHeader+0x2d0>
  411274:	e08f2002 	add	r2, pc, r2
  411278:	e59f31b4 	ldr	r3, [pc, #436]	; 411434 <cvInitImageHeader+0x2d4>
  41127c:	e08f3003 	add	r3, pc, r3
  411280:	eb000608 	bl	412aa8 <cvError>
  411284:	e3a04000 	mov	r4, #0
  411288:	ea00005a 	b	4113f8 <cvInitImageHeader+0x298>
  41128c:	e3550001 	cmp	r5, #1
  411290:	13550008 	cmpne	r5, #8
  411294:	0a000008 	beq	4112bc <cvInitImageHeader+0x15c>
  411298:	e3550122 	cmp	r5, #-2147483640	; 0x80000008
  41129c:	13550010 	cmpne	r5, #16
  4112a0:	0a000005 	beq	4112bc <cvInitImageHeader+0x15c>
  4112a4:	e3550142 	cmp	r5, #-2147483632	; 0x80000010
  4112a8:	13550182 	cmpne	r5, #-2147483616	; 0x80000020
  4112ac:	0a000002 	beq	4112bc <cvInitImageHeader+0x15c>
  4112b0:	e3550020 	cmp	r5, #32
  4112b4:	13550040 	cmpne	r5, #64	; 0x40
  4112b8:	1a000001 	bne	4112c4 <cvInitImageHeader+0x164>
  4112bc:	e3580000 	cmp	r8, #0
  4112c0:	aa00000c 	bge	4112f8 <cvInitImageHeader+0x198>
  4112c4:	e59f316c 	ldr	r3, [pc, #364]	; 411438 <cvInitImageHeader+0x2d8>
  4112c8:	e58d3000 	str	r3, [sp]
  4112cc:	e3e00010 	mvn	r0, #16
  4112d0:	e59f1164 	ldr	r1, [pc, #356]	; 41143c <cvInitImageHeader+0x2dc>
  4112d4:	e08f1001 	add	r1, pc, r1
  4112d8:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  4112dc:	e59f215c 	ldr	r2, [pc, #348]	; 411440 <cvInitImageHeader+0x2e0>
  4112e0:	e08f2002 	add	r2, pc, r2
  4112e4:	e59f3158 	ldr	r3, [pc, #344]	; 411444 <cvInitImageHeader+0x2e4>
  4112e8:	e08f3003 	add	r3, pc, r3
  4112ec:	eb0005ed 	bl	412aa8 <cvError>
  4112f0:	e3a04000 	mov	r4, #0
  4112f4:	ea00003f 	b	4113f8 <cvInitImageHeader+0x298>
  4112f8:	e3570001 	cmp	r7, #1
  4112fc:	9a00000c 	bls	411334 <cvInitImageHeader+0x1d4>
  411300:	e59f3140 	ldr	r3, [pc, #320]	; 411448 <cvInitImageHeader+0x2e8>
  411304:	e58d3000 	str	r3, [sp]
  411308:	e3e00013 	mvn	r0, #19
  41130c:	e59f1138 	ldr	r1, [pc, #312]	; 41144c <cvInitImageHeader+0x2ec>
  411310:	e08f1001 	add	r1, pc, r1
  411314:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  411318:	e59f2130 	ldr	r2, [pc, #304]	; 411450 <cvInitImageHeader+0x2f0>
  41131c:	e08f2002 	add	r2, pc, r2
  411320:	e59f312c 	ldr	r3, [pc, #300]	; 411454 <cvInitImageHeader+0x2f4>
  411324:	e08f3003 	add	r3, pc, r3
  411328:	eb0005de 	bl	412aa8 <cvError>
  41132c:	e3a04000 	mov	r4, #0
  411330:	ea000030 	b	4113f8 <cvInitImageHeader+0x298>
  411334:	e3560004 	cmp	r6, #4
  411338:	13560008 	cmpne	r6, #8
  41133c:	0a00000c 	beq	411374 <cvInitImageHeader+0x214>
  411340:	e3a03ed3 	mov	r3, #3376	; 0xd30
  411344:	e58d3000 	str	r3, [sp]
  411348:	e3e00014 	mvn	r0, #20
  41134c:	e59f1104 	ldr	r1, [pc, #260]	; 411458 <cvInitImageHeader+0x2f8>
  411350:	e08f1001 	add	r1, pc, r1
  411354:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  411358:	e59f20fc 	ldr	r2, [pc, #252]	; 41145c <cvInitImageHeader+0x2fc>
  41135c:	e08f2002 	add	r2, pc, r2
  411360:	e59f30f8 	ldr	r3, [pc, #248]	; 411460 <cvInitImageHeader+0x300>
  411364:	e08f3003 	add	r3, pc, r3
  411368:	eb0005ce 	bl	412aa8 <cvError>
  41136c:	e3a04000 	mov	r4, #0
  411370:	ea000020 	b	4113f8 <cvInitImageHeader+0x298>
  411374:	e5843028 	str	r3, [r4, #40]	; 0x28
  411378:	e584202c 	str	r2, [r4, #44]	; 0x2c
  41137c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
  411380:	e3500000 	cmp	r0, #0
  411384:	0a000008 	beq	4113ac <cvInitImageHeader+0x24c>
  411388:	e3a01000 	mov	r1, #0
  41138c:	e5801000 	str	r1, [r0]
  411390:	e5940030 	ldr	r0, [r4, #48]	; 0x30
  411394:	e5801008 	str	r1, [r0, #8]
  411398:	e5801004 	str	r1, [r0, #4]
  41139c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
  4113a0:	e581300c 	str	r3, [r1, #12]
  4113a4:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  4113a8:	e5832010 	str	r2, [r3, #16]
  4113ac:	e3580001 	cmp	r8, #1
  4113b0:	b3a08001 	movlt	r8, #1
  4113b4:	e5848008 	str	r8, [r4, #8]
  4113b8:	e5845010 	str	r5, [r4, #16]
  4113bc:	e5846024 	str	r6, [r4, #36]	; 0x24
  4113c0:	e5943028 	ldr	r3, [r4, #40]	; 0x28
  4113c4:	e0030398 	mul	r3, r8, r3
  4113c8:	e3c55102 	bic	r5, r5, #-2147483648	; 0x80000000
  4113cc:	e0030395 	mul	r3, r5, r3
  4113d0:	e2833007 	add	r3, r3, #7
  4113d4:	e08631a3 	add	r3, r6, r3, lsr #3
  4113d8:	e2433001 	sub	r3, r3, #1
  4113dc:	e2666000 	rsb	r6, r6, #0
  4113e0:	e0033006 	and	r3, r3, r6
  4113e4:	e5843048 	str	r3, [r4, #72]	; 0x48
  4113e8:	e5847020 	str	r7, [r4, #32]
  4113ec:	e594602c 	ldr	r6, [r4, #44]	; 0x2c
  4113f0:	e0030396 	mul	r3, r6, r3
  4113f4:	e5843040 	str	r3, [r4, #64]	; 0x40
  4113f8:	e1a00004 	mov	r0, r4
  4113fc:	e28dd01c 	add	sp, sp, #28
  411400:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  411404:	e12fff1e 	bx	lr
  411408:	00000d1a 	.word	0x00000d1a
  41140c:	1fbef2fc 	.word	0x1fbef2fc
  411410:	0002ca4c 	.word	0x0002ca4c
  411414:	0002be40 	.word	0x0002be40
  411418:	00000d1f 	.word	0x00000d1f
  41141c:	1fbef294 	.word	0x1fbef294
  411420:	0002bdc8 	.word	0x0002bdc8
  411424:	0002bdd8 	.word	0x0002bdd8
  411428:	00000d24 	.word	0x00000d24
  41142c:	1fbef228 	.word	0x1fbef228
  411430:	0002c990 	.word	0x0002c990
  411434:	0002bd6c 	.word	0x0002bd6c
  411438:	00000d2b 	.word	0x00000d2b
  41143c:	1fbef1bc 	.word	0x1fbef1bc
  411440:	0002c934 	.word	0x0002c934
  411444:	0002bd00 	.word	0x0002bd00
  411448:	00000d2d 	.word	0x00000d2d
  41144c:	1fbef180 	.word	0x1fbef180
  411450:	0002c90c 	.word	0x0002c90c
  411454:	0002bcc4 	.word	0x0002bcc4
  411458:	1fbef140 	.word	0x1fbef140
  41145c:	0002c8e0 	.word	0x0002c8e0
  411460:	0002bc84 	.word	0x0002bc84

00411464 <cvGetImage>:
  411464:	e92d4030 	push	{r4, r5, lr}
  411468:	e24dd01c 	sub	sp, sp, #28
  41146c:	e2515000 	subs	r5, r1, #0
  411470:	1a00000c 	bne	4114a8 <cvGetImage+0x44>
  411474:	e59f318c 	ldr	r3, [pc, #396]	; 411608 <cvGetImage+0x1a4>
  411478:	e58d3000 	str	r3, [sp]
  41147c:	e3e0001a 	mvn	r0, #26
  411480:	e59f1184 	ldr	r1, [pc, #388]	; 41160c <cvGetImage+0x1a8>
  411484:	e08f1001 	add	r1, pc, r1
  411488:	e2811e2f 	add	r1, r1, #752	; 0x2f0
  41148c:	e59f217c 	ldr	r2, [pc, #380]	; 411610 <cvGetImage+0x1ac>
  411490:	e08f2002 	add	r2, pc, r2
  411494:	e59f3178 	ldr	r3, [pc, #376]	; 411614 <cvGetImage+0x1b0>
  411498:	e08f3003 	add	r3, pc, r3
  41149c:	eb000581 	bl	412aa8 <cvError>
  4114a0:	e3a04000 	mov	r4, #0
  4114a4:	ea000053 	b	4115f8 <cvGetImage+0x194>
  4114a8:	e1a04000 	mov	r4, r0
  4114ac:	e3500000 	cmp	r0, #0
  4114b0:	0a000002 	beq	4114c0 <cvGetImage+0x5c>
  4114b4:	e5903000 	ldr	r3, [r0]
  4114b8:	e3530070 	cmp	r3, #112	; 0x70
  4114bc:	0a00004d 	beq	4115f8 <cvGetImage+0x194>
  4114c0:	e3540000 	cmp	r4, #0
  4114c4:	0a00000a 	beq	4114f4 <cvGetImage+0x90>
  4114c8:	e5942000 	ldr	r2, [r4]
  4114cc:	e1a01822 	lsr	r1, r2, #16
  4114d0:	e59f3140 	ldr	r3, [pc, #320]	; 411618 <cvGetImage+0x1b4>
  4114d4:	e1530801 	cmp	r3, r1, lsl #16
  4114d8:	1a000005 	bne	4114f4 <cvGetImage+0x90>
  4114dc:	e5940018 	ldr	r0, [r4, #24]
  4114e0:	e3500000 	cmp	r0, #0
  4114e4:	da000002 	ble	4114f4 <cvGetImage+0x90>
  4114e8:	e594c014 	ldr	ip, [r4, #20]
  4114ec:	e35c0000 	cmp	ip, #0
  4114f0:	ca00000c 	bgt	411528 <cvGetImage+0xc4>
  4114f4:	e59f3120 	ldr	r3, [pc, #288]	; 41161c <cvGetImage+0x1b8>
  4114f8:	e58d3000 	str	r3, [sp]
  4114fc:	e3e000cd 	mvn	r0, #205	; 0xcd
  411500:	e59f1118 	ldr	r1, [pc, #280]	; 411620 <cvGetImage+0x1bc>
  411504:	e08f1001 	add	r1, pc, r1
  411508:	e2811e2f 	add	r1, r1, #752	; 0x2f0
  41150c:	e59f2110 	ldr	r2, [pc, #272]	; 411624 <cvGetImage+0x1c0>
  411510:	e08f2002 	add	r2, pc, r2
  411514:	e59f310c 	ldr	r3, [pc, #268]	; 411628 <cvGetImage+0x1c4>
  411518:	e08f3003 	add	r3, pc, r3
  41151c:	eb000561 	bl	412aa8 <cvError>
  411520:	e3a04000 	mov	r4, #0
  411524:	ea000033 	b	4115f8 <cvGetImage+0x194>
  411528:	e5943010 	ldr	r3, [r4, #16]
  41152c:	e3530000 	cmp	r3, #0
  411530:	1a00000c 	bne	411568 <cvGetImage+0x104>
  411534:	e59f30f0 	ldr	r3, [pc, #240]	; 41162c <cvGetImage+0x1c8>
  411538:	e58d3000 	str	r3, [sp]
  41153c:	e3e0001a 	mvn	r0, #26
  411540:	e59f10e8 	ldr	r1, [pc, #232]	; 411630 <cvGetImage+0x1cc>
  411544:	e08f1001 	add	r1, pc, r1
  411548:	e2811e2f 	add	r1, r1, #752	; 0x2f0
  41154c:	e59f20e0 	ldr	r2, [pc, #224]	; 411634 <cvGetImage+0x1d0>
  411550:	e08f2002 	add	r2, pc, r2
  411554:	e59f30dc 	ldr	r3, [pc, #220]	; 411638 <cvGetImage+0x1d4>
  411558:	e08f3003 	add	r3, pc, r3
  41155c:	eb000551 	bl	412aa8 <cvError>
  411560:	e3a04000 	mov	r4, #0
  411564:	ea000023 	b	4115f8 <cvGetImage+0x194>
  411568:	e2021007 	and	r1, r2, #7
  41156c:	e1a0e101 	lsl	lr, r1, #2
  411570:	e59f30c4 	ldr	r3, [pc, #196]	; 41163c <cvGetImage+0x1d8>
  411574:	e1a03e33 	lsr	r3, r3, lr
  411578:	e203300f 	and	r3, r3, #15
  41157c:	e1a03183 	lsl	r3, r3, #3
  411580:	e3510003 	cmp	r1, #3
  411584:	13510001 	cmpne	r1, #1
  411588:	0a000003 	beq	41159c <cvGetImage+0x138>
  41158c:	e3510004 	cmp	r1, #4
  411590:	1a000003 	bne	4115a4 <cvGetImage+0x140>
  411594:	e3a0e102 	mov	lr, #-2147483648	; 0x80000000
  411598:	ea000002 	b	4115a8 <cvGetImage+0x144>
  41159c:	e3a0e102 	mov	lr, #-2147483648	; 0x80000000
  4115a0:	ea000000 	b	4115a8 <cvGetImage+0x144>
  4115a4:	e3a0e000 	mov	lr, #0
  4115a8:	e58d0010 	str	r0, [sp, #16]
  4115ac:	e58dc014 	str	ip, [sp, #20]
  4115b0:	e2022f7e 	and	r2, r2, #504	; 0x1f8
  4115b4:	e1a021c2 	asr	r2, r2, #3
  4115b8:	e2822001 	add	r2, r2, #1
  4115bc:	e58d2000 	str	r2, [sp]
  4115c0:	e3a02000 	mov	r2, #0
  4115c4:	e58d2004 	str	r2, [sp, #4]
  4115c8:	e3a02004 	mov	r2, #4
  4115cc:	e58d2008 	str	r2, [sp, #8]
  4115d0:	e1a00005 	mov	r0, r5
  4115d4:	e28d2018 	add	r2, sp, #24
  4115d8:	e9120006 	ldmdb	r2, {r1, r2}
  4115dc:	e183300e 	orr	r3, r3, lr
  4115e0:	ebfffede 	bl	411160 <cvInitImageHeader>
  4115e4:	e1a00005 	mov	r0, r5
  4115e8:	e5941010 	ldr	r1, [r4, #16]
  4115ec:	e5942004 	ldr	r2, [r4, #4]
  4115f0:	ebffe8dd 	bl	40b96c <cvSetData>
  4115f4:	e1a04005 	mov	r4, r5
  4115f8:	e1a00004 	mov	r0, r4
  4115fc:	e28dd01c 	add	sp, sp, #28
  411600:	e8bd4030 	pop	{r4, r5, lr}
  411604:	e12fff1e 	bx	lr
  411608:	00000c7a 	.word	0x00000c7a
  41160c:	1fbef00c 	.word	0x1fbef00c
  411610:	0002ef80 	.word	0x0002ef80
  411614:	0002bb50 	.word	0x0002bb50
  411618:	42420000 	.word	0x42420000
  41161c:	00000c81 	.word	0x00000c81
  411620:	1fbeef8c 	.word	0x1fbeef8c
  411624:	0002ef00 	.word	0x0002ef00
  411628:	0002bad0 	.word	0x0002bad0
  41162c:	00000c84 	.word	0x00000c84
  411630:	1fbeef4c 	.word	0x1fbeef4c
  411634:	0002eec0 	.word	0x0002eec0
  411638:	0002ba90 	.word	0x0002ba90
  41163c:	48442211 	.word	0x48442211

00411640 <cvReleaseImageHeader>:
  411640:	e92d4010 	push	{r4, lr}
  411644:	e24dd008 	sub	sp, sp, #8
  411648:	e3500000 	cmp	r0, #0
  41164c:	1a00000b 	bne	411680 <cvReleaseImageHeader+0x40>
  411650:	e59f3088 	ldr	r3, [pc, #136]	; 4116e0 <cvReleaseImageHeader+0xa0>
  411654:	e58d3000 	str	r3, [sp]
  411658:	e3e0001a 	mvn	r0, #26
  41165c:	e59f1080 	ldr	r1, [pc, #128]	; 4116e4 <cvReleaseImageHeader+0xa4>
  411660:	e08f1001 	add	r1, pc, r1
  411664:	e2811fbf 	add	r1, r1, #764	; 0x2fc
  411668:	e59f2078 	ldr	r2, [pc, #120]	; 4116e8 <cvReleaseImageHeader+0xa8>
  41166c:	e08f2002 	add	r2, pc, r2
  411670:	e59f3074 	ldr	r3, [pc, #116]	; 4116ec <cvReleaseImageHeader+0xac>
  411674:	e08f3003 	add	r3, pc, r3
  411678:	eb00050a 	bl	412aa8 <cvError>
  41167c:	ea000014 	b	4116d4 <cvReleaseImageHeader+0x94>
  411680:	e5904000 	ldr	r4, [r0]
  411684:	e3540000 	cmp	r4, #0
  411688:	0a000011 	beq	4116d4 <cvReleaseImageHeader+0x94>
  41168c:	e3a03000 	mov	r3, #0
  411690:	e5803000 	str	r3, [r0]
  411694:	e59f3054 	ldr	r3, [pc, #84]	; 4116f0 <cvReleaseImageHeader+0xb0>
  411698:	e08f3003 	add	r3, pc, r3
  41169c:	e5933008 	ldr	r3, [r3, #8]
  4116a0:	e3530000 	cmp	r3, #0
  4116a4:	1a000006 	bne	4116c4 <cvReleaseImageHeader+0x84>
  4116a8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
  4116ac:	eb0028b4 	bl	41b984 <cvFree_>
  4116b0:	e3a03000 	mov	r3, #0
  4116b4:	e5843030 	str	r3, [r4, #48]	; 0x30
  4116b8:	e1a00004 	mov	r0, r4
  4116bc:	eb0028b0 	bl	41b984 <cvFree_>
  4116c0:	ea000003 	b	4116d4 <cvReleaseImageHeader+0x94>
  4116c4:	e1a00004 	mov	r0, r4
  4116c8:	e3a01005 	mov	r1, #5
  4116cc:	e1a0e00f 	mov	lr, pc
  4116d0:	e12fff13 	bx	r3
  4116d4:	e28dd008 	add	sp, sp, #8
  4116d8:	e8bd4010 	pop	{r4, lr}
  4116dc:	e12fff1e 	bx	lr
  4116e0:	00000d55 	.word	0x00000d55
  4116e4:	1fbeee30 	.word	0x1fbeee30
  4116e8:	0002eda4 	.word	0x0002eda4
  4116ec:	0002b974 	.word	0x0002b974
  4116f0:	1fbf0538 	.word	0x1fbf0538

004116f4 <cvCreateImageHeader>:
  4116f4:	e92d4030 	push	{r4, r5, lr}
  4116f8:	e24dd044 	sub	sp, sp, #68	; 0x44
  4116fc:	e28dc028 	add	ip, sp, #40	; 0x28
  411700:	e88c0003 	stm	ip, {r0, r1}
  411704:	e1a05002 	mov	r5, r2
  411708:	e1a04003 	mov	r4, r3
  41170c:	e3a03000 	mov	r3, #0
  411710:	e58d3034 	str	r3, [sp, #52]	; 0x34
  411714:	e59f316c 	ldr	r3, [pc, #364]	; 411888 <cvCreateImageHeader+0x194>
  411718:	e08f3003 	add	r3, pc, r3
  41171c:	e5933000 	ldr	r3, [r3]
  411720:	e3530000 	cmp	r3, #0
  411724:	1a00002a 	bne	4117d4 <cvCreateImageHeader+0xe0>
  411728:	e3a00070 	mov	r0, #112	; 0x70
  41172c:	eb002862 	bl	41b8bc <cvAlloc>
  411730:	e58d0034 	str	r0, [sp, #52]	; 0x34
  411734:	eb0004aa 	bl	4129e4 <cvGetErrStatus>
  411738:	e3500000 	cmp	r0, #0
  41173c:	aa00000b 	bge	411770 <cvCreateImageHeader+0x7c>
  411740:	e59f3144 	ldr	r3, [pc, #324]	; 41188c <cvCreateImageHeader+0x198>
  411744:	e58d3000 	str	r3, [sp]
  411748:	e3e00000 	mvn	r0, #0
  41174c:	e59f113c 	ldr	r1, [pc, #316]	; 411890 <cvCreateImageHeader+0x19c>
  411750:	e08f1001 	add	r1, pc, r1
  411754:	e2811fc5 	add	r1, r1, #788	; 0x314
  411758:	e59f2134 	ldr	r2, [pc, #308]	; 411894 <cvCreateImageHeader+0x1a0>
  41175c:	e08f2002 	add	r2, pc, r2
  411760:	e59f3130 	ldr	r3, [pc, #304]	; 411898 <cvCreateImageHeader+0x1a4>
  411764:	e08f3003 	add	r3, pc, r3
  411768:	eb0004ce 	bl	412aa8 <cvError>
  41176c:	ea000034 	b	411844 <cvCreateImageHeader+0x150>
  411770:	e58d4000 	str	r4, [sp]
  411774:	e3a03000 	mov	r3, #0
  411778:	e58d3004 	str	r3, [sp, #4]
  41177c:	e3a03004 	mov	r3, #4
  411780:	e58d3008 	str	r3, [sp, #8]
  411784:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
  411788:	e28d3028 	add	r3, sp, #40	; 0x28
  41178c:	e8930006 	ldm	r3, {r1, r2}
  411790:	e1a03005 	mov	r3, r5
  411794:	ebfffe71 	bl	411160 <cvInitImageHeader>
  411798:	eb000491 	bl	4129e4 <cvGetErrStatus>
  41179c:	e3500000 	cmp	r0, #0
  4117a0:	aa000027 	bge	411844 <cvCreateImageHeader+0x150>
  4117a4:	e59f30f0 	ldr	r3, [pc, #240]	; 41189c <cvCreateImageHeader+0x1a8>
  4117a8:	e58d3000 	str	r3, [sp]
  4117ac:	e3e00000 	mvn	r0, #0
  4117b0:	e59f10e8 	ldr	r1, [pc, #232]	; 4118a0 <cvCreateImageHeader+0x1ac>
  4117b4:	e08f1001 	add	r1, pc, r1
  4117b8:	e2811fc5 	add	r1, r1, #788	; 0x314
  4117bc:	e59f20e0 	ldr	r2, [pc, #224]	; 4118a4 <cvCreateImageHeader+0x1b0>
  4117c0:	e08f2002 	add	r2, pc, r2
  4117c4:	e59f30dc 	ldr	r3, [pc, #220]	; 4118a8 <cvCreateImageHeader+0x1b4>
  4117c8:	e08f3003 	add	r3, pc, r3
  4117cc:	eb0004b5 	bl	412aa8 <cvError>
  4117d0:	ea00001b 	b	411844 <cvCreateImageHeader+0x150>
  4117d4:	e1a00004 	mov	r0, r4
  4117d8:	e28d1038 	add	r1, sp, #56	; 0x38
  4117dc:	e28d203c 	add	r2, sp, #60	; 0x3c
  4117e0:	ebffdede 	bl	409360 <_ZL16icvGetColorModeliPPcS0_>
  4117e4:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  4117e8:	e58d3000 	str	r3, [sp]
  4117ec:	e3a01000 	mov	r1, #0
  4117f0:	e58d1004 	str	r1, [sp, #4]
  4117f4:	e58d1008 	str	r1, [sp, #8]
  4117f8:	e3a03004 	mov	r3, #4
  4117fc:	e58d300c 	str	r3, [sp, #12]
  411800:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
  411804:	e58d3010 	str	r3, [sp, #16]
  411808:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  41180c:	e58d3014 	str	r3, [sp, #20]
  411810:	e58d1018 	str	r1, [sp, #24]
  411814:	e58d101c 	str	r1, [sp, #28]
  411818:	e58d1020 	str	r1, [sp, #32]
  41181c:	e58d1024 	str	r1, [sp, #36]	; 0x24
  411820:	e1a00004 	mov	r0, r4
  411824:	e1a02005 	mov	r2, r5
  411828:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
  41182c:	e59fc078 	ldr	ip, [pc, #120]	; 4118ac <cvCreateImageHeader+0x1b8>
  411830:	e08fc00c 	add	ip, pc, ip
  411834:	e59cc000 	ldr	ip, [ip]
  411838:	e1a0e00f 	mov	lr, pc
  41183c:	e12fff1c 	bx	ip
  411840:	e58d0034 	str	r0, [sp, #52]	; 0x34
  411844:	eb000466 	bl	4129e4 <cvGetErrStatus>
  411848:	e3500000 	cmp	r0, #0
  41184c:	aa000003 	bge	411860 <cvCreateImageHeader+0x16c>
  411850:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
  411854:	e3530000 	cmp	r3, #0
  411858:	1a000002 	bne	411868 <cvCreateImageHeader+0x174>
  41185c:	ea000002 	b	41186c <cvCreateImageHeader+0x178>
  411860:	e3a03000 	mov	r3, #0
  411864:	ea000000 	b	41186c <cvCreateImageHeader+0x178>
  411868:	e3a03001 	mov	r3, #1
  41186c:	e3530000 	cmp	r3, #0
  411870:	128d0034 	addne	r0, sp, #52	; 0x34
  411874:	1bffff71 	blne	411640 <cvReleaseImageHeader>
  411878:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
  41187c:	e28dd044 	add	sp, sp, #68	; 0x44
  411880:	e8bd4030 	pop	{r4, r5, lr}
  411884:	e12fff1e 	bx	lr
  411888:	1fbf04b8 	.word	0x1fbf04b8
  41188c:	00000cdb 	.word	0x00000cdb
  411890:	1fbeed40 	.word	0x1fbeed40
  411894:	0002b874 	.word	0x0002b874
  411898:	0002b884 	.word	0x0002b884
  41189c:	00000cdd 	.word	0x00000cdd
  4118a0:	1fbeecdc 	.word	0x1fbeecdc
  4118a4:	0002b810 	.word	0x0002b810
  4118a8:	0002b820 	.word	0x0002b820
  4118ac:	1fbf03a0 	.word	0x1fbf03a0

004118b0 <cvReleaseImage>:
  4118b0:	e92d4010 	push	{r4, lr}
  4118b4:	e24dd010 	sub	sp, sp, #16
  4118b8:	e2503000 	subs	r3, r0, #0
  4118bc:	1a00000b 	bne	4118f0 <cvReleaseImage+0x40>
  4118c0:	e59f305c 	ldr	r3, [pc, #92]	; 411924 <cvReleaseImage+0x74>
  4118c4:	e58d3000 	str	r3, [sp]
  4118c8:	e3e0001a 	mvn	r0, #26
  4118cc:	e59f1054 	ldr	r1, [pc, #84]	; 411928 <cvReleaseImage+0x78>
  4118d0:	e08f1001 	add	r1, pc, r1
  4118d4:	e2811fca 	add	r1, r1, #808	; 0x328
  4118d8:	e59f204c 	ldr	r2, [pc, #76]	; 41192c <cvReleaseImage+0x7c>
  4118dc:	e08f2002 	add	r2, pc, r2
  4118e0:	e59f3048 	ldr	r3, [pc, #72]	; 411930 <cvReleaseImage+0x80>
  4118e4:	e08f3003 	add	r3, pc, r3
  4118e8:	eb00046e 	bl	412aa8 <cvError>
  4118ec:	ea000009 	b	411918 <cvReleaseImage+0x68>
  4118f0:	e5930000 	ldr	r0, [r3]
  4118f4:	e3500000 	cmp	r0, #0
  4118f8:	0a000006 	beq	411918 <cvReleaseImage+0x68>
  4118fc:	e28d4010 	add	r4, sp, #16
  411900:	e5240004 	str	r0, [r4, #-4]!
  411904:	e3a02000 	mov	r2, #0
  411908:	e5832000 	str	r2, [r3]
  41190c:	ebffe791 	bl	40b758 <cvReleaseData>
  411910:	e1a00004 	mov	r0, r4
  411914:	ebffff49 	bl	411640 <cvReleaseImageHeader>
  411918:	e28dd010 	add	sp, sp, #16
  41191c:	e8bd4010 	pop	{r4, lr}
  411920:	e12fff1e 	bx	lr
  411924:	00000d72 	.word	0x00000d72
  411928:	1fbeebc0 	.word	0x1fbeebc0
  41192c:	0002eb34 	.word	0x0002eb34
  411930:	0002b704 	.word	0x0002b704

00411934 <cvCreateImage>:
  411934:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  411938:	e24dd01c 	sub	sp, sp, #28
  41193c:	e28dc008 	add	ip, sp, #8
  411940:	e88c0003 	stm	ip, {r0, r1}
  411944:	e3a01000 	mov	r1, #0
  411948:	e58d1014 	str	r1, [sp, #20]
  41194c:	e89c0003 	ldm	ip, {r0, r1}
  411950:	ebffff67 	bl	4116f4 <cvCreateImageHeader>
  411954:	e58d0014 	str	r0, [sp, #20]
  411958:	eb000421 	bl	4129e4 <cvGetErrStatus>
  41195c:	e3500000 	cmp	r0, #0
  411960:	aa00000b 	bge	411994 <cvCreateImage+0x60>
  411964:	e59f30b4 	ldr	r3, [pc, #180]	; 411a20 <cvCreateImage+0xec>
  411968:	e58d3000 	str	r3, [sp]
  41196c:	e3e00000 	mvn	r0, #0
  411970:	e59f10ac 	ldr	r1, [pc, #172]	; 411a24 <cvCreateImage+0xf0>
  411974:	e08f1001 	add	r1, pc, r1
  411978:	e2811fce 	add	r1, r1, #824	; 0x338
  41197c:	e59f20a4 	ldr	r2, [pc, #164]	; 411a28 <cvCreateImage+0xf4>
  411980:	e08f2002 	add	r2, pc, r2
  411984:	e59f30a0 	ldr	r3, [pc, #160]	; 411a2c <cvCreateImage+0xf8>
  411988:	e08f3003 	add	r3, pc, r3
  41198c:	eb000445 	bl	412aa8 <cvError>
  411990:	ea00001a 	b	411a00 <cvCreateImage+0xcc>
  411994:	e59d0014 	ldr	r0, [sp, #20]
  411998:	e3500000 	cmp	r0, #0
  41199c:	1a000008 	bne	4119c4 <cvCreateImage+0x90>
  4119a0:	e59f0088 	ldr	r0, [pc, #136]	; 411a30 <cvCreateImage+0xfc>
  4119a4:	e08f0000 	add	r0, pc, r0
  4119a8:	e3a01c0d 	mov	r1, #3328	; 0xd00
  4119ac:	e59f2080 	ldr	r2, [pc, #128]	; 411a34 <cvCreateImage+0x100>
  4119b0:	e08f2002 	add	r2, pc, r2
  4119b4:	e2822f6a 	add	r2, r2, #424	; 0x1a8
  4119b8:	e59f3078 	ldr	r3, [pc, #120]	; 411a38 <cvCreateImage+0x104>
  4119bc:	e08f3003 	add	r3, pc, r3
  4119c0:	fa0088e3 	blx	433d54 <__assert_func>
  4119c4:	ebffe523 	bl	40ae58 <cvCreateData>
  4119c8:	eb000405 	bl	4129e4 <cvGetErrStatus>
  4119cc:	e3500000 	cmp	r0, #0
  4119d0:	aa00000a 	bge	411a00 <cvCreateImage+0xcc>
  4119d4:	e59f3060 	ldr	r3, [pc, #96]	; 411a3c <cvCreateImage+0x108>
  4119d8:	e58d3000 	str	r3, [sp]
  4119dc:	e3e00000 	mvn	r0, #0
  4119e0:	e59f1058 	ldr	r1, [pc, #88]	; 411a40 <cvCreateImage+0x10c>
  4119e4:	e08f1001 	add	r1, pc, r1
  4119e8:	e2811fce 	add	r1, r1, #824	; 0x338
  4119ec:	e59f2050 	ldr	r2, [pc, #80]	; 411a44 <cvCreateImage+0x110>
  4119f0:	e08f2002 	add	r2, pc, r2
  4119f4:	e59f304c 	ldr	r3, [pc, #76]	; 411a48 <cvCreateImage+0x114>
  4119f8:	e08f3003 	add	r3, pc, r3
  4119fc:	eb000429 	bl	412aa8 <cvError>
  411a00:	eb0003f7 	bl	4129e4 <cvGetErrStatus>
  411a04:	e3500000 	cmp	r0, #0
  411a08:	b28d0014 	addlt	r0, sp, #20
  411a0c:	bbffffa7 	bllt	4118b0 <cvReleaseImage>
  411a10:	e59d0014 	ldr	r0, [sp, #20]
  411a14:	e28dd01c 	add	sp, sp, #28
  411a18:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  411a1c:	e12fff1e 	bx	lr
  411a20:	00000cff 	.word	0x00000cff
  411a24:	1fbeeb1c 	.word	0x1fbeeb1c
  411a28:	0002b650 	.word	0x0002b650
  411a2c:	0002b660 	.word	0x0002b660
  411a30:	0002b644 	.word	0x0002b644
  411a34:	0002b44c 	.word	0x0002b44c
  411a38:	0002c290 	.word	0x0002c290
  411a3c:	00000d01 	.word	0x00000d01
  411a40:	1fbeeaac 	.word	0x1fbeeaac
  411a44:	0002b5e0 	.word	0x0002b5e0
  411a48:	0002b5f0 	.word	0x0002b5f0

00411a4c <cvSetImageROI>:
  411a4c:	e24dd010 	sub	sp, sp, #16
  411a50:	e92d4010 	push	{r4, lr}
  411a54:	e24dd008 	sub	sp, sp, #8
  411a58:	e28dc014 	add	ip, sp, #20
  411a5c:	e88c000e 	stm	ip, {r1, r2, r3}
  411a60:	e2504000 	subs	r4, r0, #0
  411a64:	1a00000b 	bne	411a98 <cvSetImageROI+0x4c>
  411a68:	e59f31a4 	ldr	r3, [pc, #420]	; 411c14 <cvSetImageROI+0x1c8>
  411a6c:	e58d3000 	str	r3, [sp]
  411a70:	e3e00008 	mvn	r0, #8
  411a74:	e59f119c 	ldr	r1, [pc, #412]	; 411c18 <cvSetImageROI+0x1cc>
  411a78:	e08f1001 	add	r1, pc, r1
  411a7c:	e2811fd2 	add	r1, r1, #840	; 0x348
  411a80:	e59f2194 	ldr	r2, [pc, #404]	; 411c1c <cvSetImageROI+0x1d0>
  411a84:	e08f2002 	add	r2, pc, r2
  411a88:	e59f3190 	ldr	r3, [pc, #400]	; 411c20 <cvSetImageROI+0x1d4>
  411a8c:	e08f3003 	add	r3, pc, r3
  411a90:	eb000404 	bl	412aa8 <cvError>
  411a94:	ea00005a 	b	411c04 <cvSetImageROI+0x1b8>
  411a98:	e59d3014 	ldr	r3, [sp, #20]
  411a9c:	e5942028 	ldr	r2, [r4, #40]	; 0x28
  411aa0:	e1530002 	cmp	r3, r2
  411aa4:	ca000003 	bgt	411ab8 <cvSetImageROI+0x6c>
  411aa8:	e59d1018 	ldr	r1, [sp, #24]
  411aac:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
  411ab0:	e1510000 	cmp	r1, r0
  411ab4:	da00000b 	ble	411ae8 <cvSetImageROI+0x9c>
  411ab8:	e59f3164 	ldr	r3, [pc, #356]	; 411c24 <cvSetImageROI+0x1d8>
  411abc:	e58d3000 	str	r3, [sp]
  411ac0:	e3e00018 	mvn	r0, #24
  411ac4:	e59f115c 	ldr	r1, [pc, #348]	; 411c28 <cvSetImageROI+0x1dc>
  411ac8:	e08f1001 	add	r1, pc, r1
  411acc:	e2811fd2 	add	r1, r1, #840	; 0x348
  411ad0:	e59f2154 	ldr	r2, [pc, #340]	; 411c2c <cvSetImageROI+0x1e0>
  411ad4:	e08f2002 	add	r2, pc, r2
  411ad8:	e59f3150 	ldr	r3, [pc, #336]	; 411c30 <cvSetImageROI+0x1e4>
  411adc:	e08f3003 	add	r3, pc, r3
  411ae0:	eb0003f0 	bl	412aa8 <cvError>
  411ae4:	ea000046 	b	411c04 <cvSetImageROI+0x1b8>
  411ae8:	e59dc01c 	ldr	ip, [sp, #28]
  411aec:	e093c00c 	adds	ip, r3, ip
  411af0:	4a000002 	bmi	411b00 <cvSetImageROI+0xb4>
  411af4:	e59de020 	ldr	lr, [sp, #32]
  411af8:	e091e00e 	adds	lr, r1, lr
  411afc:	5a00000b 	bpl	411b30 <cvSetImageROI+0xe4>
  411b00:	e59f312c 	ldr	r3, [pc, #300]	; 411c34 <cvSetImageROI+0x1e8>
  411b04:	e58d3000 	str	r3, [sp]
  411b08:	e3e00018 	mvn	r0, #24
  411b0c:	e59f1124 	ldr	r1, [pc, #292]	; 411c38 <cvSetImageROI+0x1ec>
  411b10:	e08f1001 	add	r1, pc, r1
  411b14:	e2811fd2 	add	r1, r1, #840	; 0x348
  411b18:	e59f211c 	ldr	r2, [pc, #284]	; 411c3c <cvSetImageROI+0x1f0>
  411b1c:	e08f2002 	add	r2, pc, r2
  411b20:	e59f3118 	ldr	r3, [pc, #280]	; 411c40 <cvSetImageROI+0x1f4>
  411b24:	e08f3003 	add	r3, pc, r3
  411b28:	eb0003de 	bl	412aa8 <cvError>
  411b2c:	ea000034 	b	411c04 <cvSetImageROI+0x1b8>
  411b30:	e3530000 	cmp	r3, #0
  411b34:	b58dc01c 	strlt	ip, [sp, #28]
  411b38:	b3a03000 	movlt	r3, #0
  411b3c:	b58d3014 	strlt	r3, [sp, #20]
  411b40:	e3510000 	cmp	r1, #0
  411b44:	b58de020 	strlt	lr, [sp, #32]
  411b48:	b3a03000 	movlt	r3, #0
  411b4c:	b58d3018 	strlt	r3, [sp, #24]
  411b50:	e59d1014 	ldr	r1, [sp, #20]
  411b54:	e59d301c 	ldr	r3, [sp, #28]
  411b58:	e0813003 	add	r3, r1, r3
  411b5c:	e1520003 	cmp	r2, r3
  411b60:	b0612002 	rsblt	r2, r1, r2
  411b64:	b58d201c 	strlt	r2, [sp, #28]
  411b68:	e59d2018 	ldr	r2, [sp, #24]
  411b6c:	e59d3020 	ldr	r3, [sp, #32]
  411b70:	e0823003 	add	r3, r2, r3
  411b74:	e1500003 	cmp	r0, r3
  411b78:	b0620000 	rsblt	r0, r2, r0
  411b7c:	b58d0020 	strlt	r0, [sp, #32]
  411b80:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  411b84:	e3530000 	cmp	r3, #0
  411b88:	0a000009 	beq	411bb4 <cvSetImageROI+0x168>
  411b8c:	e5831004 	str	r1, [r3, #4]
  411b90:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  411b94:	e5832008 	str	r2, [r3, #8]
  411b98:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  411b9c:	e59d201c 	ldr	r2, [sp, #28]
  411ba0:	e583200c 	str	r2, [r3, #12]
  411ba4:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  411ba8:	e59d2020 	ldr	r2, [sp, #32]
  411bac:	e5832010 	str	r2, [r3, #16]
  411bb0:	ea000013 	b	411c04 <cvSetImageROI+0x1b8>
  411bb4:	e59d3020 	ldr	r3, [sp, #32]
  411bb8:	e58d3000 	str	r3, [sp]
  411bbc:	e3a00000 	mov	r0, #0
  411bc0:	e59d301c 	ldr	r3, [sp, #28]
  411bc4:	ebffddf6 	bl	4093a4 <_ZL12icvCreateROIiiiii>
  411bc8:	e5840030 	str	r0, [r4, #48]	; 0x30
  411bcc:	eb000384 	bl	4129e4 <cvGetErrStatus>
  411bd0:	e3500000 	cmp	r0, #0
  411bd4:	aa00000a 	bge	411c04 <cvSetImageROI+0x1b8>
  411bd8:	e59f3064 	ldr	r3, [pc, #100]	; 411c44 <cvSetImageROI+0x1f8>
  411bdc:	e58d3000 	str	r3, [sp]
  411be0:	e3e00000 	mvn	r0, #0
  411be4:	e59f105c 	ldr	r1, [pc, #92]	; 411c48 <cvSetImageROI+0x1fc>
  411be8:	e08f1001 	add	r1, pc, r1
  411bec:	e2811fd2 	add	r1, r1, #840	; 0x348
  411bf0:	e59f2054 	ldr	r2, [pc, #84]	; 411c4c <cvSetImageROI+0x200>
  411bf4:	e08f2002 	add	r2, pc, r2
  411bf8:	e59f3050 	ldr	r3, [pc, #80]	; 411c50 <cvSetImageROI+0x204>
  411bfc:	e08f3003 	add	r3, pc, r3
  411c00:	eb0003a8 	bl	412aa8 <cvError>
  411c04:	e28dd008 	add	sp, sp, #8
  411c08:	e8bd4010 	pop	{r4, lr}
  411c0c:	e28dd010 	add	sp, sp, #16
  411c10:	e12fff1e 	bx	lr
  411c14:	00000d89 	.word	0x00000d89
  411c18:	1fbeea18 	.word	0x1fbeea18
  411c1c:	0002e98c 	.word	0x0002e98c
  411c20:	0002b55c 	.word	0x0002b55c
  411c24:	00000d8c 	.word	0x00000d8c
  411c28:	1fbee9c8 	.word	0x1fbee9c8
  411c2c:	0002e93c 	.word	0x0002e93c
  411c30:	0002b50c 	.word	0x0002b50c
  411c34:	00000d8f 	.word	0x00000d8f
  411c38:	1fbee980 	.word	0x1fbee980
  411c3c:	0002e8f4 	.word	0x0002e8f4
  411c40:	0002b4c4 	.word	0x0002b4c4
  411c44:	00000dac 	.word	0x00000dac
  411c48:	1fbee8a8 	.word	0x1fbee8a8
  411c4c:	0002b3dc 	.word	0x0002b3dc
  411c50:	0002b3ec 	.word	0x0002b3ec

00411c54 <cvResetImageROI>:
  411c54:	e92d4010 	push	{r4, lr}
  411c58:	e24dd008 	sub	sp, sp, #8
  411c5c:	e2504000 	subs	r4, r0, #0
  411c60:	1a00000b 	bne	411c94 <cvResetImageROI+0x40>
  411c64:	e59f307c 	ldr	r3, [pc, #124]	; 411ce8 <cvResetImageROI+0x94>
  411c68:	e58d3000 	str	r3, [sp]
  411c6c:	e3e00008 	mvn	r0, #8
  411c70:	e59f1074 	ldr	r1, [pc, #116]	; 411cec <cvResetImageROI+0x98>
  411c74:	e08f1001 	add	r1, pc, r1
  411c78:	e2811fd6 	add	r1, r1, #856	; 0x358
  411c7c:	e59f206c 	ldr	r2, [pc, #108]	; 411cf0 <cvResetImageROI+0x9c>
  411c80:	e08f2002 	add	r2, pc, r2
  411c84:	e59f3068 	ldr	r3, [pc, #104]	; 411cf4 <cvResetImageROI+0xa0>
  411c88:	e08f3003 	add	r3, pc, r3
  411c8c:	eb000385 	bl	412aa8 <cvError>
  411c90:	ea000011 	b	411cdc <cvResetImageROI+0x88>
  411c94:	e5940030 	ldr	r0, [r4, #48]	; 0x30
  411c98:	e3500000 	cmp	r0, #0
  411c9c:	0a00000e 	beq	411cdc <cvResetImageROI+0x88>
  411ca0:	e59f3050 	ldr	r3, [pc, #80]	; 411cf8 <cvResetImageROI+0xa4>
  411ca4:	e08f3003 	add	r3, pc, r3
  411ca8:	e5933008 	ldr	r3, [r3, #8]
  411cac:	e3530000 	cmp	r3, #0
  411cb0:	1a000003 	bne	411cc4 <cvResetImageROI+0x70>
  411cb4:	eb002732 	bl	41b984 <cvFree_>
  411cb8:	e3a03000 	mov	r3, #0
  411cbc:	e5843030 	str	r3, [r4, #48]	; 0x30
  411cc0:	ea000005 	b	411cdc <cvResetImageROI+0x88>
  411cc4:	e1a00004 	mov	r0, r4
  411cc8:	e3a01004 	mov	r1, #4
  411ccc:	e1a0e00f 	mov	lr, pc
  411cd0:	e12fff13 	bx	r3
  411cd4:	e3a03000 	mov	r3, #0
  411cd8:	e5843030 	str	r3, [r4, #48]	; 0x30
  411cdc:	e28dd008 	add	sp, sp, #8
  411ce0:	e8bd4010 	pop	{r4, lr}
  411ce4:	e12fff1e 	bx	lr
  411ce8:	00000dbb 	.word	0x00000dbb
  411cec:	1fbee81c 	.word	0x1fbee81c
  411cf0:	0002e790 	.word	0x0002e790
  411cf4:	0002b360 	.word	0x0002b360
  411cf8:	1fbeff2c 	.word	0x1fbeff2c

00411cfc <cvGetImageROI>:
  411cfc:	e92d4010 	push	{r4, lr}
  411d00:	e24dd028 	sub	sp, sp, #40	; 0x28
  411d04:	e1a04000 	mov	r4, r0
  411d08:	e3a03000 	mov	r3, #0
  411d0c:	e5803000 	str	r3, [r0]
  411d10:	e5803004 	str	r3, [r0, #4]
  411d14:	e5803008 	str	r3, [r0, #8]
  411d18:	e580300c 	str	r3, [r0, #12]
  411d1c:	e3510000 	cmp	r1, #0
  411d20:	1a00000b 	bne	411d54 <cvGetImageROI+0x58>
  411d24:	e59f309c 	ldr	r3, [pc, #156]	; 411dc8 <cvGetImageROI+0xcc>
  411d28:	e58d3000 	str	r3, [sp]
  411d2c:	e3e0001a 	mvn	r0, #26
  411d30:	e59f1094 	ldr	r1, [pc, #148]	; 411dcc <cvGetImageROI+0xd0>
  411d34:	e08f1001 	add	r1, pc, r1
  411d38:	e2811fda 	add	r1, r1, #872	; 0x368
  411d3c:	e59f208c 	ldr	r2, [pc, #140]	; 411dd0 <cvGetImageROI+0xd4>
  411d40:	e08f2002 	add	r2, pc, r2
  411d44:	e59f3088 	ldr	r3, [pc, #136]	; 411dd4 <cvGetImageROI+0xd8>
  411d48:	e08f3003 	add	r3, pc, r3
  411d4c:	eb000355 	bl	412aa8 <cvError>
  411d50:	ea000018 	b	411db8 <cvGetImageROI+0xbc>
  411d54:	e5913030 	ldr	r3, [r1, #48]	; 0x30
  411d58:	e3530000 	cmp	r3, #0
  411d5c:	0a00000b 	beq	411d90 <cvGetImageROI+0x94>
  411d60:	e5930004 	ldr	r0, [r3, #4]
  411d64:	e5931008 	ldr	r1, [r3, #8]
  411d68:	e593200c 	ldr	r2, [r3, #12]
  411d6c:	e5933010 	ldr	r3, [r3, #16]
  411d70:	e58d0008 	str	r0, [sp, #8]
  411d74:	e58d100c 	str	r1, [sp, #12]
  411d78:	e58d2010 	str	r2, [sp, #16]
  411d7c:	e58d3014 	str	r3, [sp, #20]
  411d80:	e28d3008 	add	r3, sp, #8
  411d84:	e893000f 	ldm	r3, {r0, r1, r2, r3}
  411d88:	e884000f 	stm	r4, {r0, r1, r2, r3}
  411d8c:	ea000009 	b	411db8 <cvGetImageROI+0xbc>
  411d90:	e5910028 	ldr	r0, [r1, #40]	; 0x28
  411d94:	e591202c 	ldr	r2, [r1, #44]	; 0x2c
  411d98:	e3a03000 	mov	r3, #0
  411d9c:	e58d3018 	str	r3, [sp, #24]
  411da0:	e58d301c 	str	r3, [sp, #28]
  411da4:	e58d0020 	str	r0, [sp, #32]
  411da8:	e58d2024 	str	r2, [sp, #36]	; 0x24
  411dac:	e28d3028 	add	r3, sp, #40	; 0x28
  411db0:	e913000f 	ldmdb	r3, {r0, r1, r2, r3}
  411db4:	e884000f 	stm	r4, {r0, r1, r2, r3}
  411db8:	e1a00004 	mov	r0, r4
  411dbc:	e28dd028 	add	sp, sp, #40	; 0x28
  411dc0:	e8bd4010 	pop	{r4, lr}
  411dc4:	e12fff1e 	bx	lr
  411dc8:	00000dd8 	.word	0x00000dd8
  411dcc:	1fbee75c 	.word	0x1fbee75c
  411dd0:	0002bf10 	.word	0x0002bf10
  411dd4:	0002b2a0 	.word	0x0002b2a0

00411dd8 <cvSetImageCOI>:
  411dd8:	e92d4010 	push	{r4, lr}
  411ddc:	e24dd008 	sub	sp, sp, #8
  411de0:	e2504000 	subs	r4, r0, #0
  411de4:	1a00000b 	bne	411e18 <cvSetImageCOI+0x40>
  411de8:	e59f30e8 	ldr	r3, [pc, #232]	; 411ed8 <cvSetImageCOI+0x100>
  411dec:	e58d3000 	str	r3, [sp]
  411df0:	e3e00008 	mvn	r0, #8
  411df4:	e59f10e0 	ldr	r1, [pc, #224]	; 411edc <cvSetImageCOI+0x104>
  411df8:	e08f1001 	add	r1, pc, r1
  411dfc:	e2811fde 	add	r1, r1, #888	; 0x378
  411e00:	e59f20d8 	ldr	r2, [pc, #216]	; 411ee0 <cvSetImageCOI+0x108>
  411e04:	e08f2002 	add	r2, pc, r2
  411e08:	e59f30d4 	ldr	r3, [pc, #212]	; 411ee4 <cvSetImageCOI+0x10c>
  411e0c:	e08f3003 	add	r3, pc, r3
  411e10:	eb000324 	bl	412aa8 <cvError>
  411e14:	ea00002c 	b	411ecc <cvSetImageCOI+0xf4>
  411e18:	e5943008 	ldr	r3, [r4, #8]
  411e1c:	e1510003 	cmp	r1, r3
  411e20:	9a00000b 	bls	411e54 <cvSetImageCOI+0x7c>
  411e24:	e59f30bc 	ldr	r3, [pc, #188]	; 411ee8 <cvSetImageCOI+0x110>
  411e28:	e58d3000 	str	r3, [sp]
  411e2c:	e3e00017 	mvn	r0, #23
  411e30:	e59f10b4 	ldr	r1, [pc, #180]	; 411eec <cvSetImageCOI+0x114>
  411e34:	e08f1001 	add	r1, pc, r1
  411e38:	e2811fde 	add	r1, r1, #888	; 0x378
  411e3c:	e59f20ac 	ldr	r2, [pc, #172]	; 411ef0 <cvSetImageCOI+0x118>
  411e40:	e08f2002 	add	r2, pc, r2
  411e44:	e59f30a8 	ldr	r3, [pc, #168]	; 411ef4 <cvSetImageCOI+0x11c>
  411e48:	e08f3003 	add	r3, pc, r3
  411e4c:	eb000315 	bl	412aa8 <cvError>
  411e50:	ea00001d 	b	411ecc <cvSetImageCOI+0xf4>
  411e54:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  411e58:	e3530000 	cmp	r3, #0
  411e5c:	1a000001 	bne	411e68 <cvSetImageCOI+0x90>
  411e60:	e3510000 	cmp	r1, #0
  411e64:	0a000018 	beq	411ecc <cvSetImageCOI+0xf4>
  411e68:	e3530000 	cmp	r3, #0
  411e6c:	15831000 	strne	r1, [r3]
  411e70:	1a000015 	bne	411ecc <cvSetImageCOI+0xf4>
  411e74:	e5943028 	ldr	r3, [r4, #40]	; 0x28
  411e78:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
  411e7c:	e58d2000 	str	r2, [sp]
  411e80:	e1a00001 	mov	r0, r1
  411e84:	e3a01000 	mov	r1, #0
  411e88:	e1a02001 	mov	r2, r1
  411e8c:	ebffdd44 	bl	4093a4 <_ZL12icvCreateROIiiiii>
  411e90:	e5840030 	str	r0, [r4, #48]	; 0x30
  411e94:	eb0002d2 	bl	4129e4 <cvGetErrStatus>
  411e98:	e3500000 	cmp	r0, #0
  411e9c:	aa00000a 	bge	411ecc <cvSetImageCOI+0xf4>
  411ea0:	e59f3050 	ldr	r3, [pc, #80]	; 411ef8 <cvSetImageCOI+0x120>
  411ea4:	e58d3000 	str	r3, [sp]
  411ea8:	e3e00000 	mvn	r0, #0
  411eac:	e59f1048 	ldr	r1, [pc, #72]	; 411efc <cvSetImageCOI+0x124>
  411eb0:	e08f1001 	add	r1, pc, r1
  411eb4:	e2811fde 	add	r1, r1, #888	; 0x378
  411eb8:	e59f2040 	ldr	r2, [pc, #64]	; 411f00 <cvSetImageCOI+0x128>
  411ebc:	e08f2002 	add	r2, pc, r2
  411ec0:	e59f303c 	ldr	r3, [pc, #60]	; 411f04 <cvSetImageCOI+0x12c>
  411ec4:	e08f3003 	add	r3, pc, r3
  411ec8:	eb0002f6 	bl	412aa8 <cvError>
  411ecc:	e28dd008 	add	sp, sp, #8
  411ed0:	e8bd4010 	pop	{r4, lr}
  411ed4:	e12fff1e 	bx	lr
  411ed8:	00000dee 	.word	0x00000dee
  411edc:	1fbee698 	.word	0x1fbee698
  411ee0:	0002e60c 	.word	0x0002e60c
  411ee4:	0002b1dc 	.word	0x0002b1dc
  411ee8:	00000df1 	.word	0x00000df1
  411eec:	1fbee65c 	.word	0x1fbee65c
  411ef0:	0002e5d0 	.word	0x0002e5d0
  411ef4:	0002b1a0 	.word	0x0002b1a0
  411ef8:	00000dfb 	.word	0x00000dfb
  411efc:	1fbee5e0 	.word	0x1fbee5e0
  411f00:	0002b114 	.word	0x0002b114
  411f04:	0002b124 	.word	0x0002b124

00411f08 <cvGetImageCOI>:
  411f08:	e3500000 	cmp	r0, #0
  411f0c:	1a00000e 	bne	411f4c <cvGetImageCOI+0x44>
  411f10:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  411f14:	e24dd00c 	sub	sp, sp, #12
  411f18:	e59f3054 	ldr	r3, [pc, #84]	; 411f74 <cvGetImageCOI+0x6c>
  411f1c:	e58d3000 	str	r3, [sp]
  411f20:	e3e00008 	mvn	r0, #8
  411f24:	e59f104c 	ldr	r1, [pc, #76]	; 411f78 <cvGetImageCOI+0x70>
  411f28:	e08f1001 	add	r1, pc, r1
  411f2c:	e2811fe2 	add	r1, r1, #904	; 0x388
  411f30:	e59f2044 	ldr	r2, [pc, #68]	; 411f7c <cvGetImageCOI+0x74>
  411f34:	e08f2002 	add	r2, pc, r2
  411f38:	e59f3040 	ldr	r3, [pc, #64]	; 411f80 <cvGetImageCOI+0x78>
  411f3c:	e08f3003 	add	r3, pc, r3
  411f40:	eb0002d8 	bl	412aa8 <cvError>
  411f44:	e3e00000 	mvn	r0, #0
  411f48:	ea000006 	b	411f68 <cvGetImageCOI+0x60>
  411f4c:	e5903030 	ldr	r3, [r0, #48]	; 0x30
  411f50:	e3530000 	cmp	r3, #0
  411f54:	0a000001 	beq	411f60 <cvGetImageCOI+0x58>
  411f58:	e5930000 	ldr	r0, [r3]
  411f5c:	e12fff1e 	bx	lr
  411f60:	e3a00000 	mov	r0, #0
  411f64:	e12fff1e 	bx	lr
  411f68:	e28dd00c 	add	sp, sp, #12
  411f6c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  411f70:	e12fff1e 	bx	lr
  411f74:	00000e0c 	.word	0x00000e0c
  411f78:	1fbee568 	.word	0x1fbee568
  411f7c:	0002e4dc 	.word	0x0002e4dc
  411f80:	0002b0ac 	.word	0x0002b0ac

00411f84 <cvCloneImage>:
  411f84:	e92d4070 	push	{r4, r5, r6, lr}
  411f88:	e24dd008 	sub	sp, sp, #8
  411f8c:	e2504000 	subs	r4, r0, #0
  411f90:	0a000002 	beq	411fa0 <cvCloneImage+0x1c>
  411f94:	e5943000 	ldr	r3, [r4]
  411f98:	e3530070 	cmp	r3, #112	; 0x70
  411f9c:	0a00000c 	beq	411fd4 <cvCloneImage+0x50>
  411fa0:	e59f3120 	ldr	r3, [pc, #288]	; 4120c8 <cvCloneImage+0x144>
  411fa4:	e58d3000 	str	r3, [sp]
  411fa8:	e3e00004 	mvn	r0, #4
  411fac:	e59f1118 	ldr	r1, [pc, #280]	; 4120cc <cvCloneImage+0x148>
  411fb0:	e08f1001 	add	r1, pc, r1
  411fb4:	e2811fe6 	add	r1, r1, #920	; 0x398
  411fb8:	e59f2110 	ldr	r2, [pc, #272]	; 4120d0 <cvCloneImage+0x14c>
  411fbc:	e08f2002 	add	r2, pc, r2
  411fc0:	e59f310c 	ldr	r3, [pc, #268]	; 4120d4 <cvCloneImage+0x150>
  411fc4:	e08f3003 	add	r3, pc, r3
  411fc8:	eb0002b6 	bl	412aa8 <cvError>
  411fcc:	e3a05000 	mov	r5, #0
  411fd0:	ea000038 	b	4120b8 <cvCloneImage+0x134>
  411fd4:	e59f30fc 	ldr	r3, [pc, #252]	; 4120d8 <cvCloneImage+0x154>
  411fd8:	e08f3003 	add	r3, pc, r3
  411fdc:	e5933010 	ldr	r3, [r3, #16]
  411fe0:	e3530000 	cmp	r3, #0
  411fe4:	1a00002f 	bne	4120a8 <cvCloneImage+0x124>
  411fe8:	e3a00070 	mov	r0, #112	; 0x70
  411fec:	eb002632 	bl	41b8bc <cvAlloc>
  411ff0:	e1a05000 	mov	r5, r0
  411ff4:	eb00027a 	bl	4129e4 <cvGetErrStatus>
  411ff8:	e3500000 	cmp	r0, #0
  411ffc:	aa00000b 	bge	412030 <cvCloneImage+0xac>
  412000:	e59f30d4 	ldr	r3, [pc, #212]	; 4120dc <cvCloneImage+0x158>
  412004:	e58d3000 	str	r3, [sp]
  412008:	e3e00000 	mvn	r0, #0
  41200c:	e59f10cc 	ldr	r1, [pc, #204]	; 4120e0 <cvCloneImage+0x15c>
  412010:	e08f1001 	add	r1, pc, r1
  412014:	e2811fe6 	add	r1, r1, #920	; 0x398
  412018:	e59f20c4 	ldr	r2, [pc, #196]	; 4120e4 <cvCloneImage+0x160>
  41201c:	e08f2002 	add	r2, pc, r2
  412020:	e59f30c0 	ldr	r3, [pc, #192]	; 4120e8 <cvCloneImage+0x164>
  412024:	e08f3003 	add	r3, pc, r3
  412028:	eb00029e 	bl	412aa8 <cvError>
  41202c:	ea000021 	b	4120b8 <cvCloneImage+0x134>
  412030:	e1a00005 	mov	r0, r5
  412034:	e1a01004 	mov	r1, r4
  412038:	e3a02070 	mov	r2, #112	; 0x70
  41203c:	fa008ba5 	blx	434ed8 <memcpy>
  412040:	e3a03000 	mov	r3, #0
  412044:	e585306c 	str	r3, [r5, #108]	; 0x6c
  412048:	e5853044 	str	r3, [r5, #68]	; 0x44
  41204c:	e5853030 	str	r3, [r5, #48]	; 0x30
  412050:	e594c030 	ldr	ip, [r4, #48]	; 0x30
  412054:	e15c0003 	cmp	ip, r3
  412058:	0a000007 	beq	41207c <cvCloneImage+0xf8>
  41205c:	e59c0000 	ldr	r0, [ip]
  412060:	e59c1004 	ldr	r1, [ip, #4]
  412064:	e59c2008 	ldr	r2, [ip, #8]
  412068:	e59c300c 	ldr	r3, [ip, #12]
  41206c:	e59cc010 	ldr	ip, [ip, #16]
  412070:	e58dc000 	str	ip, [sp]
  412074:	ebffdcca 	bl	4093a4 <_ZL12icvCreateROIiiiii>
  412078:	e5850030 	str	r0, [r5, #48]	; 0x30
  41207c:	e5943044 	ldr	r3, [r4, #68]	; 0x44
  412080:	e3530000 	cmp	r3, #0
  412084:	0a00000b 	beq	4120b8 <cvCloneImage+0x134>
  412088:	e5946040 	ldr	r6, [r4, #64]	; 0x40
  41208c:	e1a00005 	mov	r0, r5
  412090:	ebffe370 	bl	40ae58 <cvCreateData>
  412094:	e5950044 	ldr	r0, [r5, #68]	; 0x44
  412098:	e5941044 	ldr	r1, [r4, #68]	; 0x44
  41209c:	e1a02006 	mov	r2, r6
  4120a0:	fa008b8c 	blx	434ed8 <memcpy>
  4120a4:	ea000003 	b	4120b8 <cvCloneImage+0x134>
  4120a8:	e1a00004 	mov	r0, r4
  4120ac:	e1a0e00f 	mov	lr, pc
  4120b0:	e12fff13 	bx	r3
  4120b4:	e1a05000 	mov	r5, r0
  4120b8:	e1a00005 	mov	r0, r5
  4120bc:	e28dd008 	add	sp, sp, #8
  4120c0:	e8bd4070 	pop	{r4, r5, r6, lr}
  4120c4:	e12fff1e 	bx	lr
  4120c8:	00000e1f 	.word	0x00000e1f
  4120cc:	1fbee4e0 	.word	0x1fbee4e0
  4120d0:	0002bcac 	.word	0x0002bcac
  4120d4:	0002b024 	.word	0x0002b024
  4120d8:	1fbefbf8 	.word	0x1fbefbf8
  4120dc:	00000e23 	.word	0x00000e23
  4120e0:	1fbee480 	.word	0x1fbee480
  4120e4:	0002afb4 	.word	0x0002afb4
  4120e8:	0002afc4 	.word	0x0002afc4

004120ec <cvCheckTermCriteria>:
  4120ec:	e24dd008 	sub	sp, sp, #8
  4120f0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  4120f4:	e24dd00c 	sub	sp, sp, #12
  4120f8:	e1a04000 	mov	r4, r0
  4120fc:	e28d101c 	add	r1, sp, #28
  412100:	e981000c 	stmib	r1, {r2, r3}
  412104:	e3a03003 	mov	r3, #3
  412108:	e5803000 	str	r3, [r0]
  41210c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
  412110:	e5803004 	str	r3, [r0, #4]
  412114:	e28d1030 	add	r1, sp, #48	; 0x30
  412118:	e8910003 	ldm	r1, {r0, r1}
  41211c:	fa00806d 	blx	4322d8 <__aeabi_d2f>
  412120:	fa007ee1 	blx	431cac <__aeabi_f2d>
  412124:	e5840008 	str	r0, [r4, #8]
  412128:	e584100c 	str	r1, [r4, #12]
  41212c:	e59d5020 	ldr	r5, [sp, #32]
  412130:	e3d53003 	bics	r3, r5, #3
  412134:	0a00000b 	beq	412168 <cvCheckTermCriteria+0x7c>
  412138:	e59f3174 	ldr	r3, [pc, #372]	; 4122b4 <cvCheckTermCriteria+0x1c8>
  41213c:	e58d3000 	str	r3, [sp]
  412140:	e3e00004 	mvn	r0, #4
  412144:	e59f116c 	ldr	r1, [pc, #364]	; 4122b8 <cvCheckTermCriteria+0x1cc>
  412148:	e08f1001 	add	r1, pc, r1
  41214c:	e2811fea 	add	r1, r1, #936	; 0x3a8
  412150:	e59f2164 	ldr	r2, [pc, #356]	; 4122bc <cvCheckTermCriteria+0x1d0>
  412154:	e08f2002 	add	r2, pc, r2
  412158:	e59f3160 	ldr	r3, [pc, #352]	; 4122c0 <cvCheckTermCriteria+0x1d4>
  41215c:	e08f3003 	add	r3, pc, r3
  412160:	eb000250 	bl	412aa8 <cvError>
  412164:	ea000037 	b	412248 <cvCheckTermCriteria+0x15c>
  412168:	e3150001 	tst	r5, #1
  41216c:	0a00000f 	beq	4121b0 <cvCheckTermCriteria+0xc4>
  412170:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  412174:	e3530000 	cmp	r3, #0
  412178:	ca00000b 	bgt	4121ac <cvCheckTermCriteria+0xc0>
  41217c:	e59f3140 	ldr	r3, [pc, #320]	; 4122c4 <cvCheckTermCriteria+0x1d8>
  412180:	e58d3000 	str	r3, [sp]
  412184:	e3e00004 	mvn	r0, #4
  412188:	e59f1138 	ldr	r1, [pc, #312]	; 4122c8 <cvCheckTermCriteria+0x1dc>
  41218c:	e08f1001 	add	r1, pc, r1
  412190:	e2811fea 	add	r1, r1, #936	; 0x3a8
  412194:	e59f2130 	ldr	r2, [pc, #304]	; 4122cc <cvCheckTermCriteria+0x1e0>
  412198:	e08f2002 	add	r2, pc, r2
  41219c:	e59f312c 	ldr	r3, [pc, #300]	; 4122d0 <cvCheckTermCriteria+0x1e4>
  4121a0:	e08f3003 	add	r3, pc, r3
  4121a4:	eb00023f 	bl	412aa8 <cvError>
  4121a8:	ea000026 	b	412248 <cvCheckTermCriteria+0x15c>
  4121ac:	e5843004 	str	r3, [r4, #4]
  4121b0:	e3150002 	tst	r5, #2
  4121b4:	0a000016 	beq	412214 <cvCheckTermCriteria+0x128>
  4121b8:	e28d7028 	add	r7, sp, #40	; 0x28
  4121bc:	e89700c0 	ldm	r7, {r6, r7}
  4121c0:	e1a00006 	mov	r0, r6
  4121c4:	e1a01007 	mov	r1, r7
  4121c8:	e3a02000 	mov	r2, #0
  4121cc:	e3a03000 	mov	r3, #0
  4121d0:	fa008018 	blx	432238 <__aeabi_dcmplt>
  4121d4:	e3500000 	cmp	r0, #0
  4121d8:	0a00000b 	beq	41220c <cvCheckTermCriteria+0x120>
  4121dc:	e59f30f0 	ldr	r3, [pc, #240]	; 4122d4 <cvCheckTermCriteria+0x1e8>
  4121e0:	e58d3000 	str	r3, [sp]
  4121e4:	e3e00004 	mvn	r0, #4
  4121e8:	e59f10e8 	ldr	r1, [pc, #232]	; 4122d8 <cvCheckTermCriteria+0x1ec>
  4121ec:	e08f1001 	add	r1, pc, r1
  4121f0:	e2811fea 	add	r1, r1, #936	; 0x3a8
  4121f4:	e59f20e0 	ldr	r2, [pc, #224]	; 4122dc <cvCheckTermCriteria+0x1f0>
  4121f8:	e08f2002 	add	r2, pc, r2
  4121fc:	e59f30dc 	ldr	r3, [pc, #220]	; 4122e0 <cvCheckTermCriteria+0x1f4>
  412200:	e08f3003 	add	r3, pc, r3
  412204:	eb000227 	bl	412aa8 <cvError>
  412208:	ea00000e 	b	412248 <cvCheckTermCriteria+0x15c>
  41220c:	e5846008 	str	r6, [r4, #8]
  412210:	e584700c 	str	r7, [r4, #12]
  412214:	e3150003 	tst	r5, #3
  412218:	1a00000a 	bne	412248 <cvCheckTermCriteria+0x15c>
  41221c:	e59f30c0 	ldr	r3, [pc, #192]	; 4122e4 <cvCheckTermCriteria+0x1f8>
  412220:	e58d3000 	str	r3, [sp]
  412224:	e3e00004 	mvn	r0, #4
  412228:	e59f10b8 	ldr	r1, [pc, #184]	; 4122e8 <cvCheckTermCriteria+0x1fc>
  41222c:	e08f1001 	add	r1, pc, r1
  412230:	e2811fea 	add	r1, r1, #936	; 0x3a8
  412234:	e59f20b0 	ldr	r2, [pc, #176]	; 4122ec <cvCheckTermCriteria+0x200>
  412238:	e08f2002 	add	r2, pc, r2
  41223c:	e59f30ac 	ldr	r3, [pc, #172]	; 4122f0 <cvCheckTermCriteria+0x204>
  412240:	e08f3003 	add	r3, pc, r3
  412244:	eb000217 	bl	412aa8 <cvError>
  412248:	e2847008 	add	r7, r4, #8
  41224c:	e89700c0 	ldm	r7, {r6, r7}
  412250:	e1a00006 	mov	r0, r6
  412254:	e1a01007 	mov	r1, r7
  412258:	e3a02000 	mov	r2, #0
  41225c:	e3a03000 	mov	r3, #0
  412260:	fa008003 	blx	432274 <__aeabi_dcmpgt>
  412264:	e3500000 	cmp	r0, #0
  412268:	0a000004 	beq	412280 <cvCheckTermCriteria+0x194>
  41226c:	e1a00006 	mov	r0, r6
  412270:	e1a01007 	mov	r1, r7
  412274:	fa008017 	blx	4322d8 <__aeabi_d2f>
  412278:	fa007e8b 	blx	431cac <__aeabi_f2d>
  41227c:	ea000001 	b	412288 <cvCheckTermCriteria+0x19c>
  412280:	e3a00000 	mov	r0, #0
  412284:	e3a01000 	mov	r1, #0
  412288:	e5840008 	str	r0, [r4, #8]
  41228c:	e584100c 	str	r1, [r4, #12]
  412290:	e5943004 	ldr	r3, [r4, #4]
  412294:	e3530001 	cmp	r3, #1
  412298:	b3a03001 	movlt	r3, #1
  41229c:	e5843004 	str	r3, [r4, #4]
  4122a0:	e1a00004 	mov	r0, r4
  4122a4:	e28dd00c 	add	sp, sp, #12
  4122a8:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  4122ac:	e28dd008 	add	sp, sp, #8
  4122b0:	e12fff1e 	bx	lr
  4122b4:	00000e55 	.word	0x00000e55
  4122b8:	1fbee348 	.word	0x1fbee348
  4122bc:	0002bb28 	.word	0x0002bb28
  4122c0:	0002ae8c 	.word	0x0002ae8c
  4122c4:	00000e5b 	.word	0x00000e5b
  4122c8:	1fbee304 	.word	0x1fbee304
  4122cc:	0002bb04 	.word	0x0002bb04
  4122d0:	0002ae48 	.word	0x0002ae48
  4122d4:	00000e62 	.word	0x00000e62
  4122d8:	1fbee2a4 	.word	0x1fbee2a4
  4122dc:	0002bae4 	.word	0x0002bae4
  4122e0:	0002ade8 	.word	0x0002ade8
  4122e4:	00000e6a 	.word	0x00000e6a
  4122e8:	1fbee264 	.word	0x1fbee264
  4122ec:	0002bacc 	.word	0x0002bacc
  4122f0:	0002ada8 	.word	0x0002ada8

004122f4 <cvStdErrReport>:
  4122f4:	e3a00000 	mov	r0, #0
  4122f8:	e12fff1e 	bx	lr

004122fc <_ZL16icvCreateContextv>:
  4122fc:	e92d4010 	push	{r4, lr}
  412300:	e59f402c 	ldr	r4, [pc, #44]	; 412334 <_ZL16icvCreateContextv+0x38>
  412304:	e08f4004 	add	r4, pc, r4
  412308:	e59f0028 	ldr	r0, [pc, #40]	; 412338 <_ZL16icvCreateContextv+0x3c>
  41230c:	fa008962 	blx	43489c <malloc>
  412310:	e3a02000 	mov	r2, #0
  412314:	e5802004 	str	r2, [r0, #4]
  412318:	e5802000 	str	r2, [r0]
  41231c:	e59f1018 	ldr	r1, [pc, #24]	; 41233c <_ZL16icvCreateContextv+0x40>
  412320:	e7941001 	ldr	r1, [r4, r1]
  412324:	e5801008 	str	r1, [r0, #8]
  412328:	e580200c 	str	r2, [r0, #12]
  41232c:	e8bd4010 	pop	{r4, lr}
  412330:	e12fff1e 	bx	lr
  412334:	0002ed30 	.word	0x0002ed30
  412338:	00001018 	.word	0x00001018
  41233c:	00000124 	.word	0x00000124

00412340 <_ZL13icvGetContextv>:
  412340:	e92d4008 	push	{r3, lr}
  412344:	e59f3030 	ldr	r3, [pc, #48]	; 41237c <_ZL13icvGetContextv+0x3c>
  412348:	e08f3003 	add	r3, pc, r3
  41234c:	e5933000 	ldr	r3, [r3]
  412350:	e3530000 	cmp	r3, #0
  412354:	1a000003 	bne	412368 <_ZL13icvGetContextv+0x28>
  412358:	ebffffe7 	bl	4122fc <_ZL16icvCreateContextv>
  41235c:	e59f301c 	ldr	r3, [pc, #28]	; 412380 <_ZL13icvGetContextv+0x40>
  412360:	e08f3003 	add	r3, pc, r3
  412364:	e5830000 	str	r0, [r3]
  412368:	e59f3014 	ldr	r3, [pc, #20]	; 412384 <_ZL13icvGetContextv+0x44>
  41236c:	e08f3003 	add	r3, pc, r3
  412370:	e5930000 	ldr	r0, [r3]
  412374:	e8bd4008 	pop	{r3, lr}
  412378:	e12fff1e 	bx	lr
  41237c:	1fbef89c 	.word	0x1fbef89c
  412380:	1fbef884 	.word	0x1fbef884
  412384:	1fbef878 	.word	0x1fbef878

00412388 <_ZL17icvDestroyContextP9CvContext>:
  412388:	e92d4008 	push	{r3, lr}
  41238c:	fa008946 	blx	4348ac <free>
  412390:	e8bd4008 	pop	{r3, lr}
  412394:	e12fff1e 	bx	lr

00412398 <cvGuiBoxReport>:
  412398:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41239c:	e24dd00c 	sub	sp, sp, #12
  4123a0:	e59dc010 	ldr	ip, [sp, #16]
  4123a4:	e58dc000 	str	ip, [sp]
  4123a8:	e3a0c000 	mov	ip, #0
  4123ac:	e58dc004 	str	ip, [sp, #4]
  4123b0:	ebffffcf 	bl	4122f4 <cvStdErrReport>
  4123b4:	e28dd00c 	add	sp, sp, #12
  4123b8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  4123bc:	e12fff1e 	bx	lr

004123c0 <cvRedirectError>:
  4123c0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
  4123c4:	e1a05000 	mov	r5, r0
  4123c8:	e1a07001 	mov	r7, r1
  4123cc:	e1a04002 	mov	r4, r2
  4123d0:	e59f6044 	ldr	r6, [pc, #68]	; 41241c <cvRedirectError+0x5c>
  4123d4:	e08f6006 	add	r6, pc, r6
  4123d8:	ebffffd8 	bl	412340 <_ZL13icvGetContextv>
  4123dc:	e1a03000 	mov	r3, r0
  4123e0:	e5900008 	ldr	r0, [r0, #8]
  4123e4:	e3540000 	cmp	r4, #0
  4123e8:	1593200c 	ldrne	r2, [r3, #12]
  4123ec:	15842000 	strne	r2, [r4]
  4123f0:	e3550000 	cmp	r5, #0
  4123f4:	15835008 	strne	r5, [r3, #8]
  4123f8:	1583700c 	strne	r7, [r3, #12]
  4123fc:	1a000004 	bne	412414 <cvRedirectError+0x54>
  412400:	e59f2018 	ldr	r2, [pc, #24]	; 412420 <cvRedirectError+0x60>
  412404:	e7962002 	ldr	r2, [r6, r2]
  412408:	e5832008 	str	r2, [r3, #8]
  41240c:	e3a02000 	mov	r2, #0
  412410:	e583200c 	str	r2, [r3, #12]
  412414:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
  412418:	e12fff1e 	bx	lr
  41241c:	0002ec60 	.word	0x0002ec60
  412420:	00000124 	.word	0x00000124

00412424 <cvErrorStr>:
  412424:	e28020d6 	add	r2, r0, #214	; 0xd6
  412428:	e35200d6 	cmp	r2, #214	; 0xd6
  41242c:	908ff102 	addls	pc, pc, r2, lsl #2
  412430:	ea000124 	b	4128c8 <cvErrorStr+0x4a4>
  412434:	ea000120 	b	4128bc <cvErrorStr+0x498>
  412438:	ea00011c 	b	4128b0 <cvErrorStr+0x48c>
  41243c:	ea000118 	b	4128a4 <cvErrorStr+0x480>
  412440:	ea000102 	b	412850 <cvErrorStr+0x42c>
  412444:	ea000104 	b	41285c <cvErrorStr+0x438>
  412448:	ea0000fd 	b	412844 <cvErrorStr+0x420>
  41244c:	ea000111 	b	412898 <cvErrorStr+0x474>
  412450:	ea00010d 	b	41288c <cvErrorStr+0x468>
  412454:	ea000109 	b	412880 <cvErrorStr+0x45c>
  412458:	ea0000f6 	b	412838 <cvErrorStr+0x414>
  41245c:	ea0000ef 	b	412820 <cvErrorStr+0x3fc>
  412460:	ea0000eb 	b	412814 <cvErrorStr+0x3f0>
  412464:	ea0000e4 	b	4127fc <cvErrorStr+0x3d8>
  412468:	ea0000dd 	b	4127e4 <cvErrorStr+0x3c0>
  41246c:	ea000115 	b	4128c8 <cvErrorStr+0x4a4>
  412470:	ea000114 	b	4128c8 <cvErrorStr+0x4a4>
  412474:	ea000113 	b	4128c8 <cvErrorStr+0x4a4>
  412478:	ea000112 	b	4128c8 <cvErrorStr+0x4a4>
  41247c:	ea000111 	b	4128c8 <cvErrorStr+0x4a4>
  412480:	ea000110 	b	4128c8 <cvErrorStr+0x4a4>
  412484:	ea00010f 	b	4128c8 <cvErrorStr+0x4a4>
  412488:	ea00010e 	b	4128c8 <cvErrorStr+0x4a4>
  41248c:	ea00010d 	b	4128c8 <cvErrorStr+0x4a4>
  412490:	ea00010c 	b	4128c8 <cvErrorStr+0x4a4>
  412494:	ea00010b 	b	4128c8 <cvErrorStr+0x4a4>
  412498:	ea00010a 	b	4128c8 <cvErrorStr+0x4a4>
  41249c:	ea000109 	b	4128c8 <cvErrorStr+0x4a4>
  4124a0:	ea000108 	b	4128c8 <cvErrorStr+0x4a4>
  4124a4:	ea000107 	b	4128c8 <cvErrorStr+0x4a4>
  4124a8:	ea000106 	b	4128c8 <cvErrorStr+0x4a4>
  4124ac:	ea000105 	b	4128c8 <cvErrorStr+0x4a4>
  4124b0:	ea000104 	b	4128c8 <cvErrorStr+0x4a4>
  4124b4:	ea000103 	b	4128c8 <cvErrorStr+0x4a4>
  4124b8:	ea000102 	b	4128c8 <cvErrorStr+0x4a4>
  4124bc:	ea000101 	b	4128c8 <cvErrorStr+0x4a4>
  4124c0:	ea000100 	b	4128c8 <cvErrorStr+0x4a4>
  4124c4:	ea0000ff 	b	4128c8 <cvErrorStr+0x4a4>
  4124c8:	ea0000fe 	b	4128c8 <cvErrorStr+0x4a4>
  4124cc:	ea0000fd 	b	4128c8 <cvErrorStr+0x4a4>
  4124d0:	ea0000fc 	b	4128c8 <cvErrorStr+0x4a4>
  4124d4:	ea0000fb 	b	4128c8 <cvErrorStr+0x4a4>
  4124d8:	ea0000fa 	b	4128c8 <cvErrorStr+0x4a4>
  4124dc:	ea0000f9 	b	4128c8 <cvErrorStr+0x4a4>
  4124e0:	ea0000f8 	b	4128c8 <cvErrorStr+0x4a4>
  4124e4:	ea0000f7 	b	4128c8 <cvErrorStr+0x4a4>
  4124e8:	ea0000f6 	b	4128c8 <cvErrorStr+0x4a4>
  4124ec:	ea0000f5 	b	4128c8 <cvErrorStr+0x4a4>
  4124f0:	ea0000f4 	b	4128c8 <cvErrorStr+0x4a4>
  4124f4:	ea0000f3 	b	4128c8 <cvErrorStr+0x4a4>
  4124f8:	ea0000f2 	b	4128c8 <cvErrorStr+0x4a4>
  4124fc:	ea0000f1 	b	4128c8 <cvErrorStr+0x4a4>
  412500:	ea0000f0 	b	4128c8 <cvErrorStr+0x4a4>
  412504:	ea0000ef 	b	4128c8 <cvErrorStr+0x4a4>
  412508:	ea0000ee 	b	4128c8 <cvErrorStr+0x4a4>
  41250c:	ea0000ed 	b	4128c8 <cvErrorStr+0x4a4>
  412510:	ea0000ec 	b	4128c8 <cvErrorStr+0x4a4>
  412514:	ea0000eb 	b	4128c8 <cvErrorStr+0x4a4>
  412518:	ea0000ea 	b	4128c8 <cvErrorStr+0x4a4>
  41251c:	ea0000e9 	b	4128c8 <cvErrorStr+0x4a4>
  412520:	ea0000e8 	b	4128c8 <cvErrorStr+0x4a4>
  412524:	ea0000e7 	b	4128c8 <cvErrorStr+0x4a4>
  412528:	ea0000e6 	b	4128c8 <cvErrorStr+0x4a4>
  41252c:	ea0000e5 	b	4128c8 <cvErrorStr+0x4a4>
  412530:	ea0000e4 	b	4128c8 <cvErrorStr+0x4a4>
  412534:	ea0000e3 	b	4128c8 <cvErrorStr+0x4a4>
  412538:	ea0000e2 	b	4128c8 <cvErrorStr+0x4a4>
  41253c:	ea0000e1 	b	4128c8 <cvErrorStr+0x4a4>
  412540:	ea0000e0 	b	4128c8 <cvErrorStr+0x4a4>
  412544:	ea0000df 	b	4128c8 <cvErrorStr+0x4a4>
  412548:	ea0000de 	b	4128c8 <cvErrorStr+0x4a4>
  41254c:	ea0000dd 	b	4128c8 <cvErrorStr+0x4a4>
  412550:	ea0000dc 	b	4128c8 <cvErrorStr+0x4a4>
  412554:	ea0000db 	b	4128c8 <cvErrorStr+0x4a4>
  412558:	ea0000da 	b	4128c8 <cvErrorStr+0x4a4>
  41255c:	ea0000d9 	b	4128c8 <cvErrorStr+0x4a4>
  412560:	ea0000d8 	b	4128c8 <cvErrorStr+0x4a4>
  412564:	ea0000d7 	b	4128c8 <cvErrorStr+0x4a4>
  412568:	ea0000d6 	b	4128c8 <cvErrorStr+0x4a4>
  41256c:	ea0000d5 	b	4128c8 <cvErrorStr+0x4a4>
  412570:	ea0000d4 	b	4128c8 <cvErrorStr+0x4a4>
  412574:	ea0000d3 	b	4128c8 <cvErrorStr+0x4a4>
  412578:	ea0000d2 	b	4128c8 <cvErrorStr+0x4a4>
  41257c:	ea0000d1 	b	4128c8 <cvErrorStr+0x4a4>
  412580:	ea0000d0 	b	4128c8 <cvErrorStr+0x4a4>
  412584:	ea0000cf 	b	4128c8 <cvErrorStr+0x4a4>
  412588:	ea0000ce 	b	4128c8 <cvErrorStr+0x4a4>
  41258c:	ea0000cd 	b	4128c8 <cvErrorStr+0x4a4>
  412590:	ea0000cc 	b	4128c8 <cvErrorStr+0x4a4>
  412594:	ea0000cb 	b	4128c8 <cvErrorStr+0x4a4>
  412598:	ea0000ca 	b	4128c8 <cvErrorStr+0x4a4>
  41259c:	ea0000c9 	b	4128c8 <cvErrorStr+0x4a4>
  4125a0:	ea0000c8 	b	4128c8 <cvErrorStr+0x4a4>
  4125a4:	ea0000c7 	b	4128c8 <cvErrorStr+0x4a4>
  4125a8:	ea0000c6 	b	4128c8 <cvErrorStr+0x4a4>
  4125ac:	ea0000c5 	b	4128c8 <cvErrorStr+0x4a4>
  4125b0:	ea0000c4 	b	4128c8 <cvErrorStr+0x4a4>
  4125b4:	ea0000c3 	b	4128c8 <cvErrorStr+0x4a4>
  4125b8:	ea0000c2 	b	4128c8 <cvErrorStr+0x4a4>
  4125bc:	ea0000c1 	b	4128c8 <cvErrorStr+0x4a4>
  4125c0:	ea0000c0 	b	4128c8 <cvErrorStr+0x4a4>
  4125c4:	ea0000bf 	b	4128c8 <cvErrorStr+0x4a4>
  4125c8:	ea0000be 	b	4128c8 <cvErrorStr+0x4a4>
  4125cc:	ea0000bd 	b	4128c8 <cvErrorStr+0x4a4>
  4125d0:	ea0000bc 	b	4128c8 <cvErrorStr+0x4a4>
  4125d4:	ea0000bb 	b	4128c8 <cvErrorStr+0x4a4>
  4125d8:	ea0000ba 	b	4128c8 <cvErrorStr+0x4a4>
  4125dc:	ea0000b9 	b	4128c8 <cvErrorStr+0x4a4>
  4125e0:	ea0000b8 	b	4128c8 <cvErrorStr+0x4a4>
  4125e4:	ea0000b7 	b	4128c8 <cvErrorStr+0x4a4>
  4125e8:	ea0000b6 	b	4128c8 <cvErrorStr+0x4a4>
  4125ec:	ea0000b5 	b	4128c8 <cvErrorStr+0x4a4>
  4125f0:	ea0000b4 	b	4128c8 <cvErrorStr+0x4a4>
  4125f4:	ea0000b3 	b	4128c8 <cvErrorStr+0x4a4>
  4125f8:	ea0000b2 	b	4128c8 <cvErrorStr+0x4a4>
  4125fc:	ea0000b1 	b	4128c8 <cvErrorStr+0x4a4>
  412600:	ea0000b0 	b	4128c8 <cvErrorStr+0x4a4>
  412604:	ea0000af 	b	4128c8 <cvErrorStr+0x4a4>
  412608:	ea0000ae 	b	4128c8 <cvErrorStr+0x4a4>
  41260c:	ea0000ad 	b	4128c8 <cvErrorStr+0x4a4>
  412610:	ea0000ac 	b	4128c8 <cvErrorStr+0x4a4>
  412614:	ea0000ab 	b	4128c8 <cvErrorStr+0x4a4>
  412618:	ea0000aa 	b	4128c8 <cvErrorStr+0x4a4>
  41261c:	ea0000a9 	b	4128c8 <cvErrorStr+0x4a4>
  412620:	ea0000a8 	b	4128c8 <cvErrorStr+0x4a4>
  412624:	ea0000a7 	b	4128c8 <cvErrorStr+0x4a4>
  412628:	ea0000a6 	b	4128c8 <cvErrorStr+0x4a4>
  41262c:	ea0000a5 	b	4128c8 <cvErrorStr+0x4a4>
  412630:	ea0000a4 	b	4128c8 <cvErrorStr+0x4a4>
  412634:	ea0000a3 	b	4128c8 <cvErrorStr+0x4a4>
  412638:	ea0000a2 	b	4128c8 <cvErrorStr+0x4a4>
  41263c:	ea0000a1 	b	4128c8 <cvErrorStr+0x4a4>
  412640:	ea0000a0 	b	4128c8 <cvErrorStr+0x4a4>
  412644:	ea00009f 	b	4128c8 <cvErrorStr+0x4a4>
  412648:	ea00009e 	b	4128c8 <cvErrorStr+0x4a4>
  41264c:	ea00009d 	b	4128c8 <cvErrorStr+0x4a4>
  412650:	ea00009c 	b	4128c8 <cvErrorStr+0x4a4>
  412654:	ea00009b 	b	4128c8 <cvErrorStr+0x4a4>
  412658:	ea00009a 	b	4128c8 <cvErrorStr+0x4a4>
  41265c:	ea000099 	b	4128c8 <cvErrorStr+0x4a4>
  412660:	ea000098 	b	4128c8 <cvErrorStr+0x4a4>
  412664:	ea000097 	b	4128c8 <cvErrorStr+0x4a4>
  412668:	ea000096 	b	4128c8 <cvErrorStr+0x4a4>
  41266c:	ea000095 	b	4128c8 <cvErrorStr+0x4a4>
  412670:	ea000094 	b	4128c8 <cvErrorStr+0x4a4>
  412674:	ea000093 	b	4128c8 <cvErrorStr+0x4a4>
  412678:	ea000092 	b	4128c8 <cvErrorStr+0x4a4>
  41267c:	ea000091 	b	4128c8 <cvErrorStr+0x4a4>
  412680:	ea000090 	b	4128c8 <cvErrorStr+0x4a4>
  412684:	ea00008f 	b	4128c8 <cvErrorStr+0x4a4>
  412688:	ea00008e 	b	4128c8 <cvErrorStr+0x4a4>
  41268c:	ea00008d 	b	4128c8 <cvErrorStr+0x4a4>
  412690:	ea00008c 	b	4128c8 <cvErrorStr+0x4a4>
  412694:	ea00008b 	b	4128c8 <cvErrorStr+0x4a4>
  412698:	ea00008a 	b	4128c8 <cvErrorStr+0x4a4>
  41269c:	ea000089 	b	4128c8 <cvErrorStr+0x4a4>
  4126a0:	ea000088 	b	4128c8 <cvErrorStr+0x4a4>
  4126a4:	ea000087 	b	4128c8 <cvErrorStr+0x4a4>
  4126a8:	ea000086 	b	4128c8 <cvErrorStr+0x4a4>
  4126ac:	ea000085 	b	4128c8 <cvErrorStr+0x4a4>
  4126b0:	ea000084 	b	4128c8 <cvErrorStr+0x4a4>
  4126b4:	ea000083 	b	4128c8 <cvErrorStr+0x4a4>
  4126b8:	ea000082 	b	4128c8 <cvErrorStr+0x4a4>
  4126bc:	ea000081 	b	4128c8 <cvErrorStr+0x4a4>
  4126c0:	ea000080 	b	4128c8 <cvErrorStr+0x4a4>
  4126c4:	ea00007f 	b	4128c8 <cvErrorStr+0x4a4>
  4126c8:	ea00007e 	b	4128c8 <cvErrorStr+0x4a4>
  4126cc:	ea00007d 	b	4128c8 <cvErrorStr+0x4a4>
  4126d0:	ea00007c 	b	4128c8 <cvErrorStr+0x4a4>
  4126d4:	ea00007b 	b	4128c8 <cvErrorStr+0x4a4>
  4126d8:	ea00007a 	b	4128c8 <cvErrorStr+0x4a4>
  4126dc:	ea000079 	b	4128c8 <cvErrorStr+0x4a4>
  4126e0:	ea000078 	b	4128c8 <cvErrorStr+0x4a4>
  4126e4:	ea000077 	b	4128c8 <cvErrorStr+0x4a4>
  4126e8:	ea000076 	b	4128c8 <cvErrorStr+0x4a4>
  4126ec:	ea000075 	b	4128c8 <cvErrorStr+0x4a4>
  4126f0:	ea000074 	b	4128c8 <cvErrorStr+0x4a4>
  4126f4:	ea000073 	b	4128c8 <cvErrorStr+0x4a4>
  4126f8:	ea000072 	b	4128c8 <cvErrorStr+0x4a4>
  4126fc:	ea000071 	b	4128c8 <cvErrorStr+0x4a4>
  412700:	ea000070 	b	4128c8 <cvErrorStr+0x4a4>
  412704:	ea00006f 	b	4128c8 <cvErrorStr+0x4a4>
  412708:	ea00006e 	b	4128c8 <cvErrorStr+0x4a4>
  41270c:	ea00006d 	b	4128c8 <cvErrorStr+0x4a4>
  412710:	ea00006c 	b	4128c8 <cvErrorStr+0x4a4>
  412714:	ea00006b 	b	4128c8 <cvErrorStr+0x4a4>
  412718:	ea00006a 	b	4128c8 <cvErrorStr+0x4a4>
  41271c:	ea000069 	b	4128c8 <cvErrorStr+0x4a4>
  412720:	ea000032 	b	4127f0 <cvErrorStr+0x3cc>
  412724:	ea000067 	b	4128c8 <cvErrorStr+0x4a4>
  412728:	ea000066 	b	4128c8 <cvErrorStr+0x4a4>
  41272c:	ea00004d 	b	412868 <cvErrorStr+0x444>
  412730:	ea000064 	b	4128c8 <cvErrorStr+0x4a4>
  412734:	ea000063 	b	4128c8 <cvErrorStr+0x4a4>
  412738:	ea000062 	b	4128c8 <cvErrorStr+0x4a4>
  41273c:	ea000061 	b	4128c8 <cvErrorStr+0x4a4>
  412740:	ea000060 	b	4128c8 <cvErrorStr+0x4a4>
  412744:	ea00005f 	b	4128c8 <cvErrorStr+0x4a4>
  412748:	ea000037 	b	41282c <cvErrorStr+0x408>
  41274c:	ea00005d 	b	4128c8 <cvErrorStr+0x4a4>
  412750:	ea000047 	b	412874 <cvErrorStr+0x450>
  412754:	ea00005b 	b	4128c8 <cvErrorStr+0x4a4>
  412758:	ea00002a 	b	412808 <cvErrorStr+0x3e4>
  41275c:	ea000059 	b	4128c8 <cvErrorStr+0x4a4>
  412760:	ea000058 	b	4128c8 <cvErrorStr+0x4a4>
  412764:	ea000057 	b	4128c8 <cvErrorStr+0x4a4>
  412768:	ea000056 	b	4128c8 <cvErrorStr+0x4a4>
  41276c:	ea000019 	b	4127d8 <cvErrorStr+0x3b4>
  412770:	ea000015 	b	4127cc <cvErrorStr+0x3a8>
  412774:	ea000053 	b	4128c8 <cvErrorStr+0x4a4>
  412778:	ea000010 	b	4127c0 <cvErrorStr+0x39c>
  41277c:	ea00000c 	b	4127b4 <cvErrorStr+0x390>
  412780:	ea000008 	b	4127a8 <cvErrorStr+0x384>
  412784:	ea000004 	b	41279c <cvErrorStr+0x378>
  412788:	ea00005e 	b	412908 <cvErrorStr+0x4e4>
  41278c:	eaffffff 	b	412790 <cvErrorStr+0x36c>
  412790:	e59f0184 	ldr	r0, [pc, #388]	; 41291c <cvErrorStr+0x4f8>
  412794:	e08f0000 	add	r0, pc, r0
  412798:	e12fff1e 	bx	lr
  41279c:	e59f017c 	ldr	r0, [pc, #380]	; 412920 <cvErrorStr+0x4fc>
  4127a0:	e08f0000 	add	r0, pc, r0
  4127a4:	e12fff1e 	bx	lr
  4127a8:	e59f0174 	ldr	r0, [pc, #372]	; 412924 <cvErrorStr+0x500>
  4127ac:	e08f0000 	add	r0, pc, r0
  4127b0:	e12fff1e 	bx	lr
  4127b4:	e59f016c 	ldr	r0, [pc, #364]	; 412928 <cvErrorStr+0x504>
  4127b8:	e08f0000 	add	r0, pc, r0
  4127bc:	e12fff1e 	bx	lr
  4127c0:	e59f0164 	ldr	r0, [pc, #356]	; 41292c <cvErrorStr+0x508>
  4127c4:	e08f0000 	add	r0, pc, r0
  4127c8:	e12fff1e 	bx	lr
  4127cc:	e59f015c 	ldr	r0, [pc, #348]	; 412930 <cvErrorStr+0x50c>
  4127d0:	e08f0000 	add	r0, pc, r0
  4127d4:	e12fff1e 	bx	lr
  4127d8:	e59f0154 	ldr	r0, [pc, #340]	; 412934 <cvErrorStr+0x510>
  4127dc:	e08f0000 	add	r0, pc, r0
  4127e0:	e12fff1e 	bx	lr
  4127e4:	e59f014c 	ldr	r0, [pc, #332]	; 412938 <cvErrorStr+0x514>
  4127e8:	e08f0000 	add	r0, pc, r0
  4127ec:	e12fff1e 	bx	lr
  4127f0:	e59f0144 	ldr	r0, [pc, #324]	; 41293c <cvErrorStr+0x518>
  4127f4:	e08f0000 	add	r0, pc, r0
  4127f8:	e12fff1e 	bx	lr
  4127fc:	e59f013c 	ldr	r0, [pc, #316]	; 412940 <cvErrorStr+0x51c>
  412800:	e08f0000 	add	r0, pc, r0
  412804:	e12fff1e 	bx	lr
  412808:	e59f0134 	ldr	r0, [pc, #308]	; 412944 <cvErrorStr+0x520>
  41280c:	e08f0000 	add	r0, pc, r0
  412810:	e12fff1e 	bx	lr
  412814:	e59f012c 	ldr	r0, [pc, #300]	; 412948 <cvErrorStr+0x524>
  412818:	e08f0000 	add	r0, pc, r0
  41281c:	e12fff1e 	bx	lr
  412820:	e59f0124 	ldr	r0, [pc, #292]	; 41294c <cvErrorStr+0x528>
  412824:	e08f0000 	add	r0, pc, r0
  412828:	e12fff1e 	bx	lr
  41282c:	e59f011c 	ldr	r0, [pc, #284]	; 412950 <cvErrorStr+0x52c>
  412830:	e08f0000 	add	r0, pc, r0
  412834:	e12fff1e 	bx	lr
  412838:	e59f0114 	ldr	r0, [pc, #276]	; 412954 <cvErrorStr+0x530>
  41283c:	e08f0000 	add	r0, pc, r0
  412840:	e12fff1e 	bx	lr
  412844:	e59f010c 	ldr	r0, [pc, #268]	; 412958 <cvErrorStr+0x534>
  412848:	e08f0000 	add	r0, pc, r0
  41284c:	e12fff1e 	bx	lr
  412850:	e59f0104 	ldr	r0, [pc, #260]	; 41295c <cvErrorStr+0x538>
  412854:	e08f0000 	add	r0, pc, r0
  412858:	e12fff1e 	bx	lr
  41285c:	e59f00fc 	ldr	r0, [pc, #252]	; 412960 <cvErrorStr+0x53c>
  412860:	e08f0000 	add	r0, pc, r0
  412864:	e12fff1e 	bx	lr
  412868:	e59f00f4 	ldr	r0, [pc, #244]	; 412964 <cvErrorStr+0x540>
  41286c:	e08f0000 	add	r0, pc, r0
  412870:	e12fff1e 	bx	lr
  412874:	e59f00ec 	ldr	r0, [pc, #236]	; 412968 <cvErrorStr+0x544>
  412878:	e08f0000 	add	r0, pc, r0
  41287c:	e12fff1e 	bx	lr
  412880:	e59f00e4 	ldr	r0, [pc, #228]	; 41296c <cvErrorStr+0x548>
  412884:	e08f0000 	add	r0, pc, r0
  412888:	e12fff1e 	bx	lr
  41288c:	e59f00dc 	ldr	r0, [pc, #220]	; 412970 <cvErrorStr+0x54c>
  412890:	e08f0000 	add	r0, pc, r0
  412894:	e12fff1e 	bx	lr
  412898:	e59f00d4 	ldr	r0, [pc, #212]	; 412974 <cvErrorStr+0x550>
  41289c:	e08f0000 	add	r0, pc, r0
  4128a0:	e12fff1e 	bx	lr
  4128a4:	e59f00cc 	ldr	r0, [pc, #204]	; 412978 <cvErrorStr+0x554>
  4128a8:	e08f0000 	add	r0, pc, r0
  4128ac:	e12fff1e 	bx	lr
  4128b0:	e59f00c4 	ldr	r0, [pc, #196]	; 41297c <cvErrorStr+0x558>
  4128b4:	e08f0000 	add	r0, pc, r0
  4128b8:	e12fff1e 	bx	lr
  4128bc:	e59f00bc 	ldr	r0, [pc, #188]	; 412980 <cvErrorStr+0x55c>
  4128c0:	e08f0000 	add	r0, pc, r0
  4128c4:	e12fff1e 	bx	lr
  4128c8:	e92d4010 	push	{r4, lr}
  4128cc:	e3500000 	cmp	r0, #0
  4128d0:	a59f20ac 	ldrge	r2, [pc, #172]	; 412984 <cvErrorStr+0x560>
  4128d4:	a08f2002 	addge	r2, pc, r2
  4128d8:	b59f20a8 	ldrlt	r2, [pc, #168]	; 412988 <cvErrorStr+0x564>
  4128dc:	b08f2002 	addlt	r2, pc, r2
  4128e0:	e1a03000 	mov	r3, r0
  4128e4:	e59f40a0 	ldr	r4, [pc, #160]	; 41298c <cvErrorStr+0x568>
  4128e8:	e08f4004 	add	r4, pc, r4
  4128ec:	e2844004 	add	r4, r4, #4
  4128f0:	e1a00004 	mov	r0, r4
  4128f4:	e59f1094 	ldr	r1, [pc, #148]	; 412990 <cvErrorStr+0x56c>
  4128f8:	e08f1001 	add	r1, pc, r1
  4128fc:	fa008b71 	blx	4356c8 <sprintf>
  412900:	e1a00004 	mov	r0, r4
  412904:	ea000002 	b	412914 <cvErrorStr+0x4f0>
  412908:	e59f0084 	ldr	r0, [pc, #132]	; 412994 <cvErrorStr+0x570>
  41290c:	e08f0000 	add	r0, pc, r0
  412910:	e12fff1e 	bx	lr
  412914:	e8bd4010 	pop	{r4, lr}
  412918:	e12fff1e 	bx	lr
  41291c:	0002b620 	.word	0x0002b620
  412920:	0002b62c 	.word	0x0002b62c
  412924:	0002b634 	.word	0x0002b634
  412928:	0002b638 	.word	0x0002b638
  41292c:	0002b640 	.word	0x0002b640
  412930:	0002b644 	.word	0x0002b644
  412934:	0002b654 	.word	0x0002b654
  412938:	0002b658 	.word	0x0002b658
  41293c:	0002b66c 	.word	0x0002b66c
  412940:	0002b670 	.word	0x0002b670
  412944:	0002b680 	.word	0x0002b680
  412948:	0002b688 	.word	0x0002b688
  41294c:	0002b6a0 	.word	0x0002b6a0
  412950:	0002b6b4 	.word	0x0002b6b4
  412954:	0002b6d8 	.word	0x0002b6d8
  412958:	0002b6f4 	.word	0x0002b6f4
  41295c:	0002b710 	.word	0x0002b710
  412960:	0002b730 	.word	0x0002b730
  412964:	0002b754 	.word	0x0002b754
  412968:	0002b764 	.word	0x0002b764
  41296c:	0002b770 	.word	0x0002b770
  412970:	0002b78c 	.word	0x0002b78c
  412974:	0002b7a0 	.word	0x0002b7a0
  412978:	0002b7b0 	.word	0x0002b7b0
  41297c:	0002b7b4 	.word	0x0002b7b4
  412980:	0002b7d0 	.word	0x0002b7d0
  412984:	0002b4d8 	.word	0x0002b4d8
  412988:	0002b4fc 	.word	0x0002b4fc
  41298c:	1fbef2fc 	.word	0x1fbef2fc
  412990:	0002b7b8 	.word	0x0002b7b8
  412994:	0002b4b4 	.word	0x0002b4b4

00412998 <cvGetErrMode>:
  412998:	e92d4008 	push	{r3, lr}
  41299c:	ebfffe67 	bl	412340 <_ZL13icvGetContextv>
  4129a0:	e5900004 	ldr	r0, [r0, #4]
  4129a4:	e8bd4008 	pop	{r3, lr}
  4129a8:	e12fff1e 	bx	lr

004129ac <cvNulDevReport>:
  4129ac:	e92d4008 	push	{r3, lr}
  4129b0:	ebfffff8 	bl	412998 <cvGetErrMode>
  4129b4:	e2700001 	rsbs	r0, r0, #1
  4129b8:	33a00000 	movcc	r0, #0
  4129bc:	e8bd4008 	pop	{r3, lr}
  4129c0:	e12fff1e 	bx	lr

004129c4 <cvSetErrMode>:
  4129c4:	e92d4010 	push	{r4, lr}
  4129c8:	e1a04000 	mov	r4, r0
  4129cc:	ebfffe5b 	bl	412340 <_ZL13icvGetContextv>
  4129d0:	e1a03000 	mov	r3, r0
  4129d4:	e5900004 	ldr	r0, [r0, #4]
  4129d8:	e5834004 	str	r4, [r3, #4]
  4129dc:	e8bd4010 	pop	{r4, lr}
  4129e0:	e12fff1e 	bx	lr

004129e4 <cvGetErrStatus>:
  4129e4:	e92d4008 	push	{r3, lr}
  4129e8:	ebfffe54 	bl	412340 <_ZL13icvGetContextv>
  4129ec:	e5900000 	ldr	r0, [r0]
  4129f0:	e8bd4008 	pop	{r3, lr}
  4129f4:	e12fff1e 	bx	lr

004129f8 <cvGetErrInfo>:
  4129f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  4129fc:	e1a08000 	mov	r8, r0
  412a00:	e1a07001 	mov	r7, r1
  412a04:	e1a06002 	mov	r6, r2
  412a08:	e1a05003 	mov	r5, r3
  412a0c:	ebfffff4 	bl	4129e4 <cvGetErrStatus>
  412a10:	e1a04000 	mov	r4, r0
  412a14:	e3580000 	cmp	r8, #0
  412a18:	0a000001 	beq	412a24 <cvGetErrInfo+0x2c>
  412a1c:	ebfffe80 	bl	412424 <cvErrorStr>
  412a20:	e5880000 	str	r0, [r8]
  412a24:	e3540000 	cmp	r4, #0
  412a28:	ba000009 	blt	412a54 <cvGetErrInfo+0x5c>
  412a2c:	e3570000 	cmp	r7, #0
  412a30:	13a03000 	movne	r3, #0
  412a34:	15873000 	strne	r3, [r7]
  412a38:	e3560000 	cmp	r6, #0
  412a3c:	13a03000 	movne	r3, #0
  412a40:	15863000 	strne	r3, [r6]
  412a44:	e3550000 	cmp	r5, #0
  412a48:	13a03000 	movne	r3, #0
  412a4c:	15853000 	strne	r3, [r5]
  412a50:	ea00000b 	b	412a84 <cvGetErrInfo+0x8c>
  412a54:	ebfffe39 	bl	412340 <_ZL13icvGetContextv>
  412a58:	e3570000 	cmp	r7, #0
  412a5c:	12803010 	addne	r3, r0, #16
  412a60:	15873000 	strne	r3, [r7]
  412a64:	e3560000 	cmp	r6, #0
  412a68:	12803a01 	addne	r3, r0, #4096	; 0x1000
  412a6c:	15933010 	ldrne	r3, [r3, #16]
  412a70:	15863000 	strne	r3, [r6]
  412a74:	e3550000 	cmp	r5, #0
  412a78:	12800a01 	addne	r0, r0, #4096	; 0x1000
  412a7c:	15903014 	ldrne	r3, [r0, #20]
  412a80:	15853000 	strne	r3, [r5]
  412a84:	e1a00004 	mov	r0, r4
  412a88:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  412a8c:	e12fff1e 	bx	lr

00412a90 <cvSetErrStatus>:
  412a90:	e92d4010 	push	{r4, lr}
  412a94:	e1a04000 	mov	r4, r0
  412a98:	ebfffe28 	bl	412340 <_ZL13icvGetContextv>
  412a9c:	e5804000 	str	r4, [r0]
  412aa0:	e8bd4010 	pop	{r4, lr}
  412aa4:	e12fff1e 	bx	lr

00412aa8 <cvError>:
  412aa8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  412aac:	e24dd008 	sub	sp, sp, #8
  412ab0:	e2504000 	subs	r4, r0, #0
  412ab4:	1a000002 	bne	412ac4 <cvError+0x1c>
  412ab8:	e1a00004 	mov	r0, r4
  412abc:	ebfffff3 	bl	412a90 <cvSetErrStatus>
  412ac0:	ea000027 	b	412b64 <cvError+0xbc>
  412ac4:	e1a08001 	mov	r8, r1
  412ac8:	e1a07002 	mov	r7, r2
  412acc:	e1a06003 	mov	r6, r3
  412ad0:	ebfffe1a 	bl	412340 <_ZL13icvGetContextv>
  412ad4:	e1a05000 	mov	r5, r0
  412ad8:	e3740008 	cmn	r4, #8
  412adc:	13740001 	cmnne	r4, #1
  412ae0:	0a000007 	beq	412b04 <cvError+0x5c>
  412ae4:	e5804000 	str	r4, [r0]
  412ae8:	e2800010 	add	r0, r0, #16
  412aec:	e1a01007 	mov	r1, r7
  412af0:	fa008b28 	blx	435798 <strcpy>
  412af4:	e2853a01 	add	r3, r5, #4096	; 0x1000
  412af8:	e5836010 	str	r6, [r3, #16]
  412afc:	e59d2020 	ldr	r2, [sp, #32]
  412b00:	e5832014 	str	r2, [r3, #20]
  412b04:	e5953004 	ldr	r3, [r5, #4]
  412b08:	e3530002 	cmp	r3, #2
  412b0c:	0a000014 	beq	412b64 <cvError+0xbc>
  412b10:	e59d3020 	ldr	r3, [sp, #32]
  412b14:	e58d3000 	str	r3, [sp]
  412b18:	e595300c 	ldr	r3, [r5, #12]
  412b1c:	e58d3004 	str	r3, [sp, #4]
  412b20:	e1a00004 	mov	r0, r4
  412b24:	e1a01008 	mov	r1, r8
  412b28:	e1a02007 	mov	r2, r7
  412b2c:	e1a03006 	mov	r3, r6
  412b30:	e595c008 	ldr	ip, [r5, #8]
  412b34:	e1a0e00f 	mov	lr, pc
  412b38:	e12fff1c 	bx	ip
  412b3c:	e3500000 	cmp	r0, #0
  412b40:	0a000007 	beq	412b64 <cvError+0xbc>
  412b44:	e59f0024 	ldr	r0, [pc, #36]	; 412b70 <cvError+0xc8>
  412b48:	e08f0000 	add	r0, pc, r0
  412b4c:	e3a01f4f 	mov	r1, #316	; 0x13c
  412b50:	e59f201c 	ldr	r2, [pc, #28]	; 412b74 <cvError+0xcc>
  412b54:	e08f2002 	add	r2, pc, r2
  412b58:	e59f3018 	ldr	r3, [pc, #24]	; 412b78 <cvError+0xd0>
  412b5c:	e08f3003 	add	r3, pc, r3
  412b60:	fa00847b 	blx	433d54 <__assert_func>
  412b64:	e28dd008 	add	sp, sp, #8
  412b68:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  412b6c:	e12fff1e 	bx	lr
  412b70:	0002b57c 	.word	0x0002b57c
  412b74:	0002b218 	.word	0x0002b218
  412b78:	0002cf40 	.word	0x0002cf40

00412b7c <_Z20icvPthreadDestructorPv>:
  412b7c:	e92d4008 	push	{r3, lr}
  412b80:	ebfffe00 	bl	412388 <_ZL17icvDestroyContextP9CvContext>
  412b84:	e8bd4008 	pop	{r3, lr}
  412b88:	e12fff1e 	bx	lr

00412b8c <cvErrorFromIppStatus>:
  412b8c:	e2800071 	add	r0, r0, #113	; 0x71
  412b90:	e3500070 	cmp	r0, #112	; 0x70
  412b94:	908ff100 	addls	pc, pc, r0, lsl #2
  412b98:	ea000096 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412b9c:	ea000097 	b	412e00 <cvErrorFromIppStatus+0x274>
  412ba0:	ea00007c 	b	412d98 <cvErrorFromIppStatus+0x20c>
  412ba4:	ea000093 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412ba8:	ea00007c 	b	412da0 <cvErrorFromIppStatus+0x214>
  412bac:	ea00007d 	b	412da8 <cvErrorFromIppStatus+0x21c>
  412bb0:	ea000090 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bb4:	ea00007d 	b	412db0 <cvErrorFromIppStatus+0x224>
  412bb8:	ea00008e 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bbc:	ea00008d 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bc0:	ea00007c 	b	412db8 <cvErrorFromIppStatus+0x22c>
  412bc4:	ea00007d 	b	412dc0 <cvErrorFromIppStatus+0x234>
  412bc8:	ea00007e 	b	412dc8 <cvErrorFromIppStatus+0x23c>
  412bcc:	ea000089 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bd0:	ea000088 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bd4:	ea000087 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bd8:	ea000086 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bdc:	ea000085 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412be0:	ea000084 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412be4:	ea000083 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412be8:	ea000082 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bec:	ea000081 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bf0:	ea000080 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bf4:	ea00007f 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bf8:	ea00007e 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412bfc:	ea00007d 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c00:	ea00007c 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c04:	ea00007b 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c08:	ea00007a 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c0c:	ea000079 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c10:	ea000078 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c14:	ea000077 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c18:	ea000076 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c1c:	ea000075 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c20:	ea000074 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c24:	ea000073 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c28:	ea000072 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c2c:	ea000071 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c30:	ea000070 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c34:	ea00006f 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c38:	ea00006e 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c3c:	ea00006d 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c40:	ea00006c 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c44:	ea00006b 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c48:	ea00006a 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c4c:	ea000069 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c50:	ea000068 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c54:	ea000067 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c58:	ea000066 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c5c:	ea000065 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c60:	ea000064 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c64:	ea000063 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c68:	ea000062 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c6c:	ea000061 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c70:	ea000060 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c74:	ea00005f 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c78:	ea00005e 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c7c:	ea00005d 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c80:	ea00005c 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c84:	ea00005b 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c88:	ea00005a 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c8c:	ea000059 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c90:	ea000058 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c94:	ea000057 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c98:	ea000056 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412c9c:	ea000039 	b	412d88 <cvErrorFromIppStatus+0x1fc>
  412ca0:	ea00003a 	b	412d90 <cvErrorFromIppStatus+0x204>
  412ca4:	ea000053 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412ca8:	ea000052 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cac:	ea000051 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cb0:	ea000048 	b	412dd8 <cvErrorFromIppStatus+0x24c>
  412cb4:	ea00004f 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cb8:	ea00004e 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cbc:	ea00004d 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cc0:	ea00004c 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cc4:	ea00004b 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cc8:	ea00004a 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412ccc:	ea000049 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cd0:	ea000048 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cd4:	ea000047 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cd8:	ea000046 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cdc:	ea000045 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412ce0:	ea000044 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412ce4:	ea000043 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412ce8:	ea000042 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cec:	ea000021 	b	412d78 <cvErrorFromIppStatus+0x1ec>
  412cf0:	ea000040 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cf4:	ea00003f 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cf8:	ea00003e 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412cfc:	ea00003d 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d00:	ea00003c 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d04:	ea00003b 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d08:	ea00003a 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d0c:	ea000039 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d10:	ea000038 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d14:	ea000037 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d18:	ea000036 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d1c:	ea000035 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d20:	ea000034 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d24:	ea000033 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d28:	ea000032 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d2c:	ea000031 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d30:	ea000026 	b	412dd0 <cvErrorFromIppStatus+0x244>
  412d34:	ea00000d 	b	412d70 <cvErrorFromIppStatus+0x1e4>
  412d38:	ea000028 	b	412de0 <cvErrorFromIppStatus+0x254>
  412d3c:	ea00002d 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d40:	ea00002c 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d44:	ea000027 	b	412de8 <cvErrorFromIppStatus+0x25c>
  412d48:	ea000028 	b	412df0 <cvErrorFromIppStatus+0x264>
  412d4c:	ea000029 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d50:	ea000028 	b	412df8 <cvErrorFromIppStatus+0x26c>
  412d54:	ea000009 	b	412d80 <cvErrorFromIppStatus+0x1f4>
  412d58:	ea000002 	b	412d68 <cvErrorFromIppStatus+0x1dc>
  412d5c:	eaffffff 	b	412d60 <cvErrorFromIppStatus+0x1d4>
  412d60:	e3e000c8 	mvn	r0, #200	; 0xc8
  412d64:	e12fff1e 	bx	lr
  412d68:	e3e0001a 	mvn	r0, #26
  412d6c:	e12fff1e 	bx	lr
  412d70:	e3e000c9 	mvn	r0, #201	; 0xc9
  412d74:	e12fff1e 	bx	lr
  412d78:	e3e0000c 	mvn	r0, #12
  412d7c:	e12fff1e 	bx	lr
  412d80:	e3e00003 	mvn	r0, #3
  412d84:	e12fff1e 	bx	lr
  412d88:	e3e00004 	mvn	r0, #4
  412d8c:	e12fff1e 	bx	lr
  412d90:	e3e00001 	mvn	r0, #1
  412d94:	e12fff1e 	bx	lr
  412d98:	e3e000ca 	mvn	r0, #202	; 0xca
  412d9c:	e12fff1e 	bx	lr
  412da0:	e3e000cb 	mvn	r0, #203	; 0xcb
  412da4:	e12fff1e 	bx	lr
  412da8:	e3e00006 	mvn	r0, #6
  412dac:	e12fff1e 	bx	lr
  412db0:	e3e00010 	mvn	r0, #16
  412db4:	e12fff1e 	bx	lr
  412db8:	e3e000cc 	mvn	r0, #204	; 0xcc
  412dbc:	e12fff1e 	bx	lr
  412dc0:	e3e00017 	mvn	r0, #23
  412dc4:	e12fff1e 	bx	lr
  412dc8:	e3e0000e 	mvn	r0, #14
  412dcc:	e12fff1e 	bx	lr
  412dd0:	e3e000cd 	mvn	r0, #205	; 0xcd
  412dd4:	e12fff1e 	bx	lr
  412dd8:	e3e00004 	mvn	r0, #4
  412ddc:	e12fff1e 	bx	lr
  412de0:	e3e00004 	mvn	r0, #4
  412de4:	e12fff1e 	bx	lr
  412de8:	e3e00004 	mvn	r0, #4
  412dec:	e12fff1e 	bx	lr
  412df0:	e3e000ce 	mvn	r0, #206	; 0xce
  412df4:	e12fff1e 	bx	lr
  412df8:	e3e00001 	mvn	r0, #1
  412dfc:	e12fff1e 	bx	lr
  412e00:	e3e000d5 	mvn	r0, #213	; 0xd5
  412e04:	e12fff1e 	bx	lr

00412e08 <_ZL20icvDestroyMemStorageP12CvMemStorage>:
  412e08:	e92d4070 	push	{r4, r5, r6, lr}
  412e0c:	e24dd008 	sub	sp, sp, #8
  412e10:	e2506000 	subs	r6, r0, #0
  412e14:	1a00000a 	bne	412e44 <_ZL20icvDestroyMemStorageP12CvMemStorage+0x3c>
  412e18:	e3a030a8 	mov	r3, #168	; 0xa8
  412e1c:	e58d3000 	str	r3, [sp]
  412e20:	e3e0001a 	mvn	r0, #26
  412e24:	e59f10bc 	ldr	r1, [pc, #188]	; 412ee8 <_ZL20icvDestroyMemStorageP12CvMemStorage+0xe0>
  412e28:	e08f1001 	add	r1, pc, r1
  412e2c:	e59f20b8 	ldr	r2, [pc, #184]	; 412eec <_ZL20icvDestroyMemStorageP12CvMemStorage+0xe4>
  412e30:	e08f2002 	add	r2, pc, r2
  412e34:	e59f30b4 	ldr	r3, [pc, #180]	; 412ef0 <_ZL20icvDestroyMemStorageP12CvMemStorage+0xe8>
  412e38:	e08f3003 	add	r3, pc, r3
  412e3c:	ebffff19 	bl	412aa8 <cvError>
  412e40:	ea000025 	b	412edc <_ZL20icvDestroyMemStorageP12CvMemStorage+0xd4>
  412e44:	e596300c 	ldr	r3, [r6, #12]
  412e48:	e3530000 	cmp	r3, #0
  412e4c:	15934008 	ldrne	r4, [r3, #8]
  412e50:	03a04000 	moveq	r4, #0
  412e54:	e5960004 	ldr	r0, [r6, #4]
  412e58:	ea000019 	b	412ec4 <_ZL20icvDestroyMemStorageP12CvMemStorage+0xbc>
  412e5c:	e5905004 	ldr	r5, [r0, #4]
  412e60:	e596300c 	ldr	r3, [r6, #12]
  412e64:	e3530000 	cmp	r3, #0
  412e68:	0a000013 	beq	412ebc <_ZL20icvDestroyMemStorageP12CvMemStorage+0xb4>
  412e6c:	e3540000 	cmp	r4, #0
  412e70:	0a000007 	beq	412e94 <_ZL20icvDestroyMemStorageP12CvMemStorage+0x8c>
  412e74:	e5804000 	str	r4, [r0]
  412e78:	e5943004 	ldr	r3, [r4, #4]
  412e7c:	e5803004 	str	r3, [r0, #4]
  412e80:	e3530000 	cmp	r3, #0
  412e84:	15830000 	strne	r0, [r3]
  412e88:	e5840004 	str	r0, [r4, #4]
  412e8c:	e1a04000 	mov	r4, r0
  412e90:	ea00000a 	b	412ec0 <_ZL20icvDestroyMemStorageP12CvMemStorage+0xb8>
  412e94:	e5830008 	str	r0, [r3, #8]
  412e98:	e5830004 	str	r0, [r3, #4]
  412e9c:	e3a03000 	mov	r3, #0
  412ea0:	e5803004 	str	r3, [r0, #4]
  412ea4:	e5803000 	str	r3, [r0]
  412ea8:	e5963010 	ldr	r3, [r6, #16]
  412eac:	e2433008 	sub	r3, r3, #8
  412eb0:	e5863014 	str	r3, [r6, #20]
  412eb4:	e1a04000 	mov	r4, r0
  412eb8:	ea000000 	b	412ec0 <_ZL20icvDestroyMemStorageP12CvMemStorage+0xb8>
  412ebc:	eb0022b0 	bl	41b984 <cvFree_>
  412ec0:	e1a00005 	mov	r0, r5
  412ec4:	e3500000 	cmp	r0, #0
  412ec8:	1affffe3 	bne	412e5c <_ZL20icvDestroyMemStorageP12CvMemStorage+0x54>
  412ecc:	e3a03000 	mov	r3, #0
  412ed0:	e5863004 	str	r3, [r6, #4]
  412ed4:	e5863008 	str	r3, [r6, #8]
  412ed8:	e5863014 	str	r3, [r6, #20]
  412edc:	e28dd008 	add	sp, sp, #8
  412ee0:	e8bd4070 	pop	{r4, r5, r6, lr}
  412ee4:	e12fff1e 	bx	lr
  412ee8:	1fbeda44 	.word	0x1fbeda44
  412eec:	0002d5e0 	.word	0x0002d5e0
  412ef0:	0002c50c 	.word	0x0002c50c

00412ef4 <_ZL15icvFreeSeqBlockP5CvSeqi>:
  412ef4:	e92d4038 	push	{r3, r4, r5, lr}
  412ef8:	e1a04000 	mov	r4, r0
  412efc:	e5903034 	ldr	r3, [r0, #52]	; 0x34
  412f00:	e3510000 	cmp	r1, #0
  412f04:	05932000 	ldreq	r2, [r3]
  412f08:	11a02003 	movne	r2, r3
  412f0c:	e592200c 	ldr	r2, [r2, #12]
  412f10:	e3520000 	cmp	r2, #0
  412f14:	0a000007 	beq	412f38 <_ZL15icvFreeSeqBlockP5CvSeqi+0x44>
  412f18:	e59f0178 	ldr	r0, [pc, #376]	; 413098 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1a4>
  412f1c:	e08f0000 	add	r0, pc, r0
  412f20:	e59f1174 	ldr	r1, [pc, #372]	; 41309c <_ZL15icvFreeSeqBlockP5CvSeqi+0x1a8>
  412f24:	e59f2174 	ldr	r2, [pc, #372]	; 4130a0 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1ac>
  412f28:	e08f2002 	add	r2, pc, r2
  412f2c:	e59f3170 	ldr	r3, [pc, #368]	; 4130a4 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1b0>
  412f30:	e08f3003 	add	r3, pc, r3
  412f34:	fa008386 	blx	433d54 <__assert_func>
  412f38:	e5935000 	ldr	r5, [r3]
  412f3c:	e1550003 	cmp	r5, r3
  412f40:	1a000010 	bne	412f88 <_ZL15icvFreeSeqBlockP5CvSeqi+0x94>
  412f44:	e5942020 	ldr	r2, [r4, #32]
  412f48:	e5931010 	ldr	r1, [r3, #16]
  412f4c:	e0612002 	rsb	r2, r1, r2
  412f50:	e5930008 	ldr	r0, [r3, #8]
  412f54:	e594101c 	ldr	r1, [r4, #28]
  412f58:	e0222091 	mla	r2, r1, r0, r2
  412f5c:	e583200c 	str	r2, [r3, #12]
  412f60:	e5941020 	ldr	r1, [r4, #32]
  412f64:	e0622001 	rsb	r2, r2, r1
  412f68:	e5832010 	str	r2, [r3, #16]
  412f6c:	e3a02000 	mov	r2, #0
  412f70:	e5842034 	str	r2, [r4, #52]	; 0x34
  412f74:	e5842020 	str	r2, [r4, #32]
  412f78:	e5842024 	str	r2, [r4, #36]	; 0x24
  412f7c:	e5842018 	str	r2, [r4, #24]
  412f80:	e1a05003 	mov	r5, r3
  412f84:	ea00002f 	b	413048 <_ZL15icvFreeSeqBlockP5CvSeqi+0x154>
  412f88:	e3510000 	cmp	r1, #0
  412f8c:	1a000016 	bne	412fec <_ZL15icvFreeSeqBlockP5CvSeqi+0xf8>
  412f90:	e5942024 	ldr	r2, [r4, #36]	; 0x24
  412f94:	e5953010 	ldr	r3, [r5, #16]
  412f98:	e1520003 	cmp	r2, r3
  412f9c:	0a000007 	beq	412fc0 <_ZL15icvFreeSeqBlockP5CvSeqi+0xcc>
  412fa0:	e59f0100 	ldr	r0, [pc, #256]	; 4130a8 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1b4>
  412fa4:	e08f0000 	add	r0, pc, r0
  412fa8:	e3a01fdf 	mov	r1, #892	; 0x37c
  412fac:	e59f20f8 	ldr	r2, [pc, #248]	; 4130ac <_ZL15icvFreeSeqBlockP5CvSeqi+0x1b8>
  412fb0:	e08f2002 	add	r2, pc, r2
  412fb4:	e59f30f4 	ldr	r3, [pc, #244]	; 4130b0 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1bc>
  412fb8:	e08f3003 	add	r3, pc, r3
  412fbc:	fa008364 	blx	433d54 <__assert_func>
  412fc0:	e5943020 	ldr	r3, [r4, #32]
  412fc4:	e0623003 	rsb	r3, r2, r3
  412fc8:	e585300c 	str	r3, [r5, #12]
  412fcc:	e5951000 	ldr	r1, [r5]
  412fd0:	e591000c 	ldr	r0, [r1, #12]
  412fd4:	e594201c 	ldr	r2, [r4, #28]
  412fd8:	e5913010 	ldr	r3, [r1, #16]
  412fdc:	e0233092 	mla	r3, r2, r0, r3
  412fe0:	e5843024 	str	r3, [r4, #36]	; 0x24
  412fe4:	e5843020 	str	r3, [r4, #32]
  412fe8:	ea000010 	b	413030 <_ZL15icvFreeSeqBlockP5CvSeqi+0x13c>
  412fec:	e5931008 	ldr	r1, [r3, #8]
  412ff0:	e594201c 	ldr	r2, [r4, #28]
  412ff4:	e0020291 	mul	r2, r1, r2
  412ff8:	e583200c 	str	r2, [r3, #12]
  412ffc:	e5930010 	ldr	r0, [r3, #16]
  413000:	e0622000 	rsb	r2, r2, r0
  413004:	e5832010 	str	r2, [r3, #16]
  413008:	e5932008 	ldr	r2, [r3, #8]
  41300c:	e0612002 	rsb	r2, r1, r2
  413010:	e5832008 	str	r2, [r3, #8]
  413014:	e5933004 	ldr	r3, [r3, #4]
  413018:	e5942034 	ldr	r2, [r4, #52]	; 0x34
  41301c:	e1520003 	cmp	r2, r3
  413020:	1afffff8 	bne	413008 <_ZL15icvFreeSeqBlockP5CvSeqi+0x114>
  413024:	e5932004 	ldr	r2, [r3, #4]
  413028:	e5842034 	str	r2, [r4, #52]	; 0x34
  41302c:	e1a05003 	mov	r5, r3
  413030:	e5953000 	ldr	r3, [r5]
  413034:	e5952004 	ldr	r2, [r5, #4]
  413038:	e5832004 	str	r2, [r3, #4]
  41303c:	e5953004 	ldr	r3, [r5, #4]
  413040:	e5952000 	ldr	r2, [r5]
  413044:	e5832000 	str	r2, [r3]
  413048:	e595000c 	ldr	r0, [r5, #12]
  41304c:	e3500000 	cmp	r0, #0
  413050:	da000003 	ble	413064 <_ZL15icvFreeSeqBlockP5CvSeqi+0x170>
  413054:	e594101c 	ldr	r1, [r4, #28]
  413058:	fa007a5c 	blx	4319d0 <__aeabi_idivmod>
  41305c:	e3510000 	cmp	r1, #0
  413060:	0a000007 	beq	413084 <_ZL15icvFreeSeqBlockP5CvSeqi+0x190>
  413064:	e59f0048 	ldr	r0, [pc, #72]	; 4130b4 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1c0>
  413068:	e08f0000 	add	r0, pc, r0
  41306c:	e59f1044 	ldr	r1, [pc, #68]	; 4130b8 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1c4>
  413070:	e59f2044 	ldr	r2, [pc, #68]	; 4130bc <_ZL15icvFreeSeqBlockP5CvSeqi+0x1c8>
  413074:	e08f2002 	add	r2, pc, r2
  413078:	e59f3040 	ldr	r3, [pc, #64]	; 4130c0 <_ZL15icvFreeSeqBlockP5CvSeqi+0x1cc>
  41307c:	e08f3003 	add	r3, pc, r3
  413080:	fa008333 	blx	433d54 <__assert_func>
  413084:	e5943030 	ldr	r3, [r4, #48]	; 0x30
  413088:	e5853004 	str	r3, [r5, #4]
  41308c:	e5845030 	str	r5, [r4, #48]	; 0x30
  413090:	e8bd4038 	pop	{r3, r4, r5, lr}
  413094:	e12fff1e 	bx	lr
  413098:	0002c428 	.word	0x0002c428
  41309c:	0000036d 	.word	0x0000036d
  4130a0:	0002bed0 	.word	0x0002bed0
  4130a4:	0002c434 	.word	0x0002c434
  4130a8:	0002c3a0 	.word	0x0002c3a0
  4130ac:	0002be48 	.word	0x0002be48
  4130b0:	0002c3dc 	.word	0x0002c3dc
  4130b4:	0002c2dc 	.word	0x0002c2dc
  4130b8:	00000399 	.word	0x00000399
  4130bc:	0002bd84 	.word	0x0002bd84
  4130c0:	0002c330 	.word	0x0002c330

004130c4 <_ZL17icvInitMemStorageP12CvMemStoragei>:
  4130c4:	e92d4030 	push	{r4, r5, lr}
  4130c8:	e24dd00c 	sub	sp, sp, #12
  4130cc:	e2505000 	subs	r5, r0, #0
  4130d0:	1a00000b 	bne	413104 <_ZL17icvInitMemStorageP12CvMemStoragei+0x40>
  4130d4:	e3a0305c 	mov	r3, #92	; 0x5c
  4130d8:	e58d3000 	str	r3, [sp]
  4130dc:	e3e0001a 	mvn	r0, #26
  4130e0:	e59f1080 	ldr	r1, [pc, #128]	; 413168 <_ZL17icvInitMemStorageP12CvMemStoragei+0xa4>
  4130e4:	e08f1001 	add	r1, pc, r1
  4130e8:	e2811018 	add	r1, r1, #24
  4130ec:	e59f2078 	ldr	r2, [pc, #120]	; 41316c <_ZL17icvInitMemStorageP12CvMemStoragei+0xa8>
  4130f0:	e08f2002 	add	r2, pc, r2
  4130f4:	e59f3074 	ldr	r3, [pc, #116]	; 413170 <_ZL17icvInitMemStorageP12CvMemStoragei+0xac>
  4130f8:	e08f3003 	add	r3, pc, r3
  4130fc:	ebfffe69 	bl	412aa8 <cvError>
  413100:	ea000015 	b	41315c <_ZL17icvInitMemStorageP12CvMemStoragei+0x98>
  413104:	e3510000 	cmp	r1, #0
  413108:	d59f1064 	ldrle	r1, [pc, #100]	; 413174 <_ZL17icvInitMemStorageP12CvMemStoragei+0xb0>
  41310c:	e3710106 	cmn	r1, #-2147483647	; 0x80000001
  413110:	1a000008 	bne	413138 <_ZL17icvInitMemStorageP12CvMemStoragei+0x74>
  413114:	e59f005c 	ldr	r0, [pc, #92]	; 413178 <_ZL17icvInitMemStorageP12CvMemStoragei+0xb4>
  413118:	e08f0000 	add	r0, pc, r0
  41311c:	e3a010e7 	mov	r1, #231	; 0xe7
  413120:	e59f2054 	ldr	r2, [pc, #84]	; 41317c <_ZL17icvInitMemStorageP12CvMemStoragei+0xb8>
  413124:	e08f2002 	add	r2, pc, r2
  413128:	e2822024 	add	r2, r2, #36	; 0x24
  41312c:	e59f304c 	ldr	r3, [pc, #76]	; 413180 <_ZL17icvInitMemStorageP12CvMemStoragei+0xbc>
  413130:	e08f3003 	add	r3, pc, r3
  413134:	fa008306 	blx	433d54 <__assert_func>
  413138:	e2811007 	add	r1, r1, #7
  41313c:	e3c14007 	bic	r4, r1, #7
  413140:	e1a00005 	mov	r0, r5
  413144:	e3a01000 	mov	r1, #0
  413148:	e3a02018 	mov	r2, #24
  41314c:	fa0087e0 	blx	4350d4 <memset>
  413150:	e59f302c 	ldr	r3, [pc, #44]	; 413184 <_ZL17icvInitMemStorageP12CvMemStoragei+0xc0>
  413154:	e5853000 	str	r3, [r5]
  413158:	e5854010 	str	r4, [r5, #16]
  41315c:	e28dd00c 	add	sp, sp, #12
  413160:	e8bd4030 	pop	{r4, r5, lr}
  413164:	e12fff1e 	bx	lr
  413168:	1fbed788 	.word	0x1fbed788
  41316c:	0002d320 	.word	0x0002d320
  413170:	0002c24c 	.word	0x0002c24c
  413174:	0000ff80 	.word	0x0000ff80
  413178:	00029fe8 	.word	0x00029fe8
  41317c:	0002bcd4 	.word	0x0002bcd4
  413180:	00029fe8 	.word	0x00029fe8
  413184:	42890000 	.word	0x42890000

00413188 <cvCreateMemStorage>:
  413188:	e92d4030 	push	{r4, r5, lr}
  41318c:	e24dd00c 	sub	sp, sp, #12
  413190:	e1a05000 	mov	r5, r0
  413194:	e3a00018 	mov	r0, #24
  413198:	eb0021c7 	bl	41b8bc <cvAlloc>
  41319c:	e1a04000 	mov	r4, r0
  4131a0:	ebfffe0f 	bl	4129e4 <cvGetErrStatus>
  4131a4:	e3500000 	cmp	r0, #0
  4131a8:	aa00000b 	bge	4131dc <cvCreateMemStorage+0x54>
  4131ac:	e3a03076 	mov	r3, #118	; 0x76
  4131b0:	e58d3000 	str	r3, [sp]
  4131b4:	e3e00000 	mvn	r0, #0
  4131b8:	e59f1088 	ldr	r1, [pc, #136]	; 413248 <cvCreateMemStorage+0xc0>
  4131bc:	e08f1001 	add	r1, pc, r1
  4131c0:	e281102c 	add	r1, r1, #44	; 0x2c
  4131c4:	e59f2080 	ldr	r2, [pc, #128]	; 41324c <cvCreateMemStorage+0xc4>
  4131c8:	e08f2002 	add	r2, pc, r2
  4131cc:	e59f307c 	ldr	r3, [pc, #124]	; 413250 <cvCreateMemStorage+0xc8>
  4131d0:	e08f3003 	add	r3, pc, r3
  4131d4:	ebfffe33 	bl	412aa8 <cvError>
  4131d8:	ea000010 	b	413220 <cvCreateMemStorage+0x98>
  4131dc:	e1a00004 	mov	r0, r4
  4131e0:	e1a01005 	mov	r1, r5
  4131e4:	ebffffb6 	bl	4130c4 <_ZL17icvInitMemStorageP12CvMemStoragei>
  4131e8:	ebfffdfd 	bl	4129e4 <cvGetErrStatus>
  4131ec:	e3500000 	cmp	r0, #0
  4131f0:	aa00000a 	bge	413220 <cvCreateMemStorage+0x98>
  4131f4:	e3a03077 	mov	r3, #119	; 0x77
  4131f8:	e58d3000 	str	r3, [sp]
  4131fc:	e3e00000 	mvn	r0, #0
  413200:	e59f104c 	ldr	r1, [pc, #76]	; 413254 <cvCreateMemStorage+0xcc>
  413204:	e08f1001 	add	r1, pc, r1
  413208:	e281102c 	add	r1, r1, #44	; 0x2c
  41320c:	e59f2044 	ldr	r2, [pc, #68]	; 413258 <cvCreateMemStorage+0xd0>
  413210:	e08f2002 	add	r2, pc, r2
  413214:	e59f3040 	ldr	r3, [pc, #64]	; 41325c <cvCreateMemStorage+0xd4>
  413218:	e08f3003 	add	r3, pc, r3
  41321c:	ebfffe21 	bl	412aa8 <cvError>
  413220:	ebfffdef 	bl	4129e4 <cvGetErrStatus>
  413224:	e3500000 	cmp	r0, #0
  413228:	aa000002 	bge	413238 <cvCreateMemStorage+0xb0>
  41322c:	e1a00004 	mov	r0, r4
  413230:	eb0021d3 	bl	41b984 <cvFree_>
  413234:	e3a04000 	mov	r4, #0
  413238:	e1a00004 	mov	r0, r4
  41323c:	e28dd00c 	add	sp, sp, #12
  413240:	e8bd4030 	pop	{r4, r5, lr}
  413244:	e12fff1e 	bx	lr
  413248:	1fbed6b0 	.word	0x1fbed6b0
  41324c:	00029e08 	.word	0x00029e08
  413250:	0002c174 	.word	0x0002c174
  413254:	1fbed668 	.word	0x1fbed668
  413258:	00029dc0 	.word	0x00029dc0
  41325c:	0002c12c 	.word	0x0002c12c

00413260 <cvCreateChildMemStorage>:
  413260:	e92d4030 	push	{r4, r5, lr}
  413264:	e24dd00c 	sub	sp, sp, #12
  413268:	e2505000 	subs	r5, r0, #0
  41326c:	1a00000c 	bne	4132a4 <cvCreateChildMemStorage+0x44>
  413270:	e3a0308c 	mov	r3, #140	; 0x8c
  413274:	e58d3000 	str	r3, [sp]
  413278:	e3e0001a 	mvn	r0, #26
  41327c:	e59f1094 	ldr	r1, [pc, #148]	; 413318 <cvCreateChildMemStorage+0xb8>
  413280:	e08f1001 	add	r1, pc, r1
  413284:	e2811040 	add	r1, r1, #64	; 0x40
  413288:	e59f208c 	ldr	r2, [pc, #140]	; 41331c <cvCreateChildMemStorage+0xbc>
  41328c:	e08f2002 	add	r2, pc, r2
  413290:	e59f3088 	ldr	r3, [pc, #136]	; 413320 <cvCreateChildMemStorage+0xc0>
  413294:	e08f3003 	add	r3, pc, r3
  413298:	ebfffe02 	bl	412aa8 <cvError>
  41329c:	e3a04000 	mov	r4, #0
  4132a0:	ea000012 	b	4132f0 <cvCreateChildMemStorage+0x90>
  4132a4:	e5950010 	ldr	r0, [r5, #16]
  4132a8:	ebffffb6 	bl	413188 <cvCreateMemStorage>
  4132ac:	e1a04000 	mov	r4, r0
  4132b0:	ebfffdcb 	bl	4129e4 <cvGetErrStatus>
  4132b4:	e3500000 	cmp	r0, #0
  4132b8:	aa00000b 	bge	4132ec <cvCreateChildMemStorage+0x8c>
  4132bc:	e3a0308e 	mov	r3, #142	; 0x8e
  4132c0:	e58d3000 	str	r3, [sp]
  4132c4:	e3e00000 	mvn	r0, #0
  4132c8:	e59f1054 	ldr	r1, [pc, #84]	; 413324 <cvCreateChildMemStorage+0xc4>
  4132cc:	e08f1001 	add	r1, pc, r1
  4132d0:	e2811040 	add	r1, r1, #64	; 0x40
  4132d4:	e59f204c 	ldr	r2, [pc, #76]	; 413328 <cvCreateChildMemStorage+0xc8>
  4132d8:	e08f2002 	add	r2, pc, r2
  4132dc:	e59f3048 	ldr	r3, [pc, #72]	; 41332c <cvCreateChildMemStorage+0xcc>
  4132e0:	e08f3003 	add	r3, pc, r3
  4132e4:	ebfffdef 	bl	412aa8 <cvError>
  4132e8:	ea000000 	b	4132f0 <cvCreateChildMemStorage+0x90>
  4132ec:	e584500c 	str	r5, [r4, #12]
  4132f0:	ebfffdbb 	bl	4129e4 <cvGetErrStatus>
  4132f4:	e3500000 	cmp	r0, #0
  4132f8:	aa000002 	bge	413308 <cvCreateChildMemStorage+0xa8>
  4132fc:	e1a00004 	mov	r0, r4
  413300:	eb00219f 	bl	41b984 <cvFree_>
  413304:	e3a04000 	mov	r4, #0
  413308:	e1a00004 	mov	r0, r4
  41330c:	e28dd00c 	add	sp, sp, #12
  413310:	e8bd4030 	pop	{r4, r5, lr}
  413314:	e12fff1e 	bx	lr
  413318:	1fbed5ec 	.word	0x1fbed5ec
  41331c:	0002d184 	.word	0x0002d184
  413320:	0002c0b0 	.word	0x0002c0b0
  413324:	1fbed5a0 	.word	0x1fbed5a0
  413328:	00029cf8 	.word	0x00029cf8
  41332c:	0002c064 	.word	0x0002c064

00413330 <cvReleaseMemStorage>:
  413330:	e92d4010 	push	{r4, lr}
  413334:	e24dd008 	sub	sp, sp, #8
  413338:	e3500000 	cmp	r0, #0
  41333c:	1a00000b 	bne	413370 <cvReleaseMemStorage+0x40>
  413340:	e3a030da 	mov	r3, #218	; 0xda
  413344:	e58d3000 	str	r3, [sp]
  413348:	e3e0001a 	mvn	r0, #26
  41334c:	e59f1088 	ldr	r1, [pc, #136]	; 4133dc <cvReleaseMemStorage+0xac>
  413350:	e08f1001 	add	r1, pc, r1
  413354:	e2811058 	add	r1, r1, #88	; 0x58
  413358:	e59f2080 	ldr	r2, [pc, #128]	; 4133e0 <cvReleaseMemStorage+0xb0>
  41335c:	e08f2002 	add	r2, pc, r2
  413360:	e59f307c 	ldr	r3, [pc, #124]	; 4133e4 <cvReleaseMemStorage+0xb4>
  413364:	e08f3003 	add	r3, pc, r3
  413368:	ebfffdce 	bl	412aa8 <cvError>
  41336c:	ea000017 	b	4133d0 <cvReleaseMemStorage+0xa0>
  413370:	e5904000 	ldr	r4, [r0]
  413374:	e3a03000 	mov	r3, #0
  413378:	e5803000 	str	r3, [r0]
  41337c:	e1540003 	cmp	r4, r3
  413380:	0a000012 	beq	4133d0 <cvReleaseMemStorage+0xa0>
  413384:	e1a00004 	mov	r0, r4
  413388:	ebfffe9e 	bl	412e08 <_ZL20icvDestroyMemStorageP12CvMemStorage>
  41338c:	ebfffd94 	bl	4129e4 <cvGetErrStatus>
  413390:	e3500000 	cmp	r0, #0
  413394:	aa00000b 	bge	4133c8 <cvReleaseMemStorage+0x98>
  413398:	e3a030e1 	mov	r3, #225	; 0xe1
  41339c:	e58d3000 	str	r3, [sp]
  4133a0:	e3e00000 	mvn	r0, #0
  4133a4:	e59f103c 	ldr	r1, [pc, #60]	; 4133e8 <cvReleaseMemStorage+0xb8>
  4133a8:	e08f1001 	add	r1, pc, r1
  4133ac:	e2811058 	add	r1, r1, #88	; 0x58
  4133b0:	e59f2034 	ldr	r2, [pc, #52]	; 4133ec <cvReleaseMemStorage+0xbc>
  4133b4:	e08f2002 	add	r2, pc, r2
  4133b8:	e59f3030 	ldr	r3, [pc, #48]	; 4133f0 <cvReleaseMemStorage+0xc0>
  4133bc:	e08f3003 	add	r3, pc, r3
  4133c0:	ebfffdb8 	bl	412aa8 <cvError>
  4133c4:	ea000001 	b	4133d0 <cvReleaseMemStorage+0xa0>
  4133c8:	e1a00004 	mov	r0, r4
  4133cc:	eb00216c 	bl	41b984 <cvFree_>
  4133d0:	e28dd008 	add	sp, sp, #8
  4133d4:	e8bd4010 	pop	{r4, lr}
  4133d8:	e12fff1e 	bx	lr
  4133dc:	1fbed51c 	.word	0x1fbed51c
  4133e0:	0002d0b4 	.word	0x0002d0b4
  4133e4:	0002bfe0 	.word	0x0002bfe0
  4133e8:	1fbed4c4 	.word	0x1fbed4c4
  4133ec:	00029c1c 	.word	0x00029c1c
  4133f0:	0002bf88 	.word	0x0002bf88

004133f4 <cvClearMemStorage>:
  4133f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  4133f8:	e24dd00c 	sub	sp, sp, #12
  4133fc:	e3500000 	cmp	r0, #0
  413400:	1a00000b 	bne	413434 <cvClearMemStorage+0x40>
  413404:	e3a030f2 	mov	r3, #242	; 0xf2
  413408:	e58d3000 	str	r3, [sp]
  41340c:	e3e0001a 	mvn	r0, #26
  413410:	e59f1058 	ldr	r1, [pc, #88]	; 413470 <cvClearMemStorage+0x7c>
  413414:	e08f1001 	add	r1, pc, r1
  413418:	e281106c 	add	r1, r1, #108	; 0x6c
  41341c:	e59f2050 	ldr	r2, [pc, #80]	; 413474 <cvClearMemStorage+0x80>
  413420:	e08f2002 	add	r2, pc, r2
  413424:	e59f304c 	ldr	r3, [pc, #76]	; 413478 <cvClearMemStorage+0x84>
  413428:	e08f3003 	add	r3, pc, r3
  41342c:	ebfffd9d 	bl	412aa8 <cvError>
  413430:	ea00000b 	b	413464 <cvClearMemStorage+0x70>
  413434:	e590300c 	ldr	r3, [r0, #12]
  413438:	e3530000 	cmp	r3, #0
  41343c:	0a000001 	beq	413448 <cvClearMemStorage+0x54>
  413440:	ebfffe70 	bl	412e08 <_ZL20icvDestroyMemStorageP12CvMemStorage>
  413444:	ea000006 	b	413464 <cvClearMemStorage+0x70>
  413448:	e5903004 	ldr	r3, [r0, #4]
  41344c:	e5803008 	str	r3, [r0, #8]
  413450:	e3530000 	cmp	r3, #0
  413454:	15903010 	ldrne	r3, [r0, #16]
  413458:	12433008 	subne	r3, r3, #8
  41345c:	03a03000 	moveq	r3, #0
  413460:	e5803014 	str	r3, [r0, #20]
  413464:	e28dd00c 	add	sp, sp, #12
  413468:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41346c:	e12fff1e 	bx	lr
  413470:	1fbed458 	.word	0x1fbed458
  413474:	0002cff0 	.word	0x0002cff0
  413478:	0002bf1c 	.word	0x0002bf1c

0041347c <cvSaveMemStoragePos>:
  41347c:	e3510000 	cmp	r1, #0
  413480:	13500000 	cmpne	r0, #0
  413484:	1a00000d 	bne	4134c0 <cvSaveMemStoragePos+0x44>
  413488:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41348c:	e24dd00c 	sub	sp, sp, #12
  413490:	e3a03f53 	mov	r3, #332	; 0x14c
  413494:	e58d3000 	str	r3, [sp]
  413498:	e3e0001a 	mvn	r0, #26
  41349c:	e59f1040 	ldr	r1, [pc, #64]	; 4134e4 <cvSaveMemStoragePos+0x68>
  4134a0:	e08f1001 	add	r1, pc, r1
  4134a4:	e2811080 	add	r1, r1, #128	; 0x80
  4134a8:	e59f2038 	ldr	r2, [pc, #56]	; 4134e8 <cvSaveMemStoragePos+0x6c>
  4134ac:	e08f2002 	add	r2, pc, r2
  4134b0:	e59f3034 	ldr	r3, [pc, #52]	; 4134ec <cvSaveMemStoragePos+0x70>
  4134b4:	e08f3003 	add	r3, pc, r3
  4134b8:	ebfffd7a 	bl	412aa8 <cvError>
  4134bc:	ea000005 	b	4134d8 <cvSaveMemStoragePos+0x5c>
  4134c0:	e1a03001 	mov	r3, r1
  4134c4:	e5901008 	ldr	r1, [r0, #8]
  4134c8:	e5831000 	str	r1, [r3]
  4134cc:	e5902014 	ldr	r2, [r0, #20]
  4134d0:	e5832004 	str	r2, [r3, #4]
  4134d4:	e12fff1e 	bx	lr
  4134d8:	e28dd00c 	add	sp, sp, #12
  4134dc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  4134e0:	e12fff1e 	bx	lr
  4134e4:	1fbed3cc 	.word	0x1fbed3cc
  4134e8:	0002cf64 	.word	0x0002cf64
  4134ec:	0002be90 	.word	0x0002be90

004134f0 <cvRestoreMemStoragePos>:
  4134f0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  4134f4:	e24dd00c 	sub	sp, sp, #12
  4134f8:	e3510000 	cmp	r1, #0
  4134fc:	13500000 	cmpne	r0, #0
  413500:	1a00000b 	bne	413534 <cvRestoreMemStoragePos+0x44>
  413504:	e59f30ac 	ldr	r3, [pc, #172]	; 4135b8 <cvRestoreMemStoragePos+0xc8>
  413508:	e58d3000 	str	r3, [sp]
  41350c:	e3e0001a 	mvn	r0, #26
  413510:	e59f10a4 	ldr	r1, [pc, #164]	; 4135bc <cvRestoreMemStoragePos+0xcc>
  413514:	e08f1001 	add	r1, pc, r1
  413518:	e2811094 	add	r1, r1, #148	; 0x94
  41351c:	e59f209c 	ldr	r2, [pc, #156]	; 4135c0 <cvRestoreMemStoragePos+0xd0>
  413520:	e08f2002 	add	r2, pc, r2
  413524:	e59f3098 	ldr	r3, [pc, #152]	; 4135c4 <cvRestoreMemStoragePos+0xd4>
  413528:	e08f3003 	add	r3, pc, r3
  41352c:	ebfffd5d 	bl	412aa8 <cvError>
  413530:	ea00001d 	b	4135ac <cvRestoreMemStoragePos+0xbc>
  413534:	e1a03000 	mov	r3, r0
  413538:	e1a02001 	mov	r2, r1
  41353c:	e5910004 	ldr	r0, [r1, #4]
  413540:	e5931010 	ldr	r1, [r3, #16]
  413544:	e1500001 	cmp	r0, r1
  413548:	da00000b 	ble	41357c <cvRestoreMemStoragePos+0x8c>
  41354c:	e3a03e16 	mov	r3, #352	; 0x160
  413550:	e58d3000 	str	r3, [sp]
  413554:	e3e000c8 	mvn	r0, #200	; 0xc8
  413558:	e59f1068 	ldr	r1, [pc, #104]	; 4135c8 <cvRestoreMemStoragePos+0xd8>
  41355c:	e08f1001 	add	r1, pc, r1
  413560:	e2811094 	add	r1, r1, #148	; 0x94
  413564:	e59f2060 	ldr	r2, [pc, #96]	; 4135cc <cvRestoreMemStoragePos+0xdc>
  413568:	e08f2002 	add	r2, pc, r2
  41356c:	e59f305c 	ldr	r3, [pc, #92]	; 4135d0 <cvRestoreMemStoragePos+0xe0>
  413570:	e08f3003 	add	r3, pc, r3
  413574:	ebfffd4b 	bl	412aa8 <cvError>
  413578:	ea00000b 	b	4135ac <cvRestoreMemStoragePos+0xbc>
  41357c:	e5920000 	ldr	r0, [r2]
  413580:	e5830008 	str	r0, [r3, #8]
  413584:	e5922004 	ldr	r2, [r2, #4]
  413588:	e5832014 	str	r2, [r3, #20]
  41358c:	e3500000 	cmp	r0, #0
  413590:	1a000005 	bne	4135ac <cvRestoreMemStoragePos+0xbc>
  413594:	e5932004 	ldr	r2, [r3, #4]
  413598:	e5832008 	str	r2, [r3, #8]
  41359c:	e3520000 	cmp	r2, #0
  4135a0:	12411008 	subne	r1, r1, #8
  4135a4:	03a01000 	moveq	r1, #0
  4135a8:	e5831014 	str	r1, [r3, #20]
  4135ac:	e28dd00c 	add	sp, sp, #12
  4135b0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  4135b4:	e12fff1e 	bx	lr
  4135b8:	0000015e 	.word	0x0000015e
  4135bc:	1fbed358 	.word	0x1fbed358
  4135c0:	0002cef0 	.word	0x0002cef0
  4135c4:	0002be1c 	.word	0x0002be1c
  4135c8:	1fbed310 	.word	0x1fbed310
  4135cc:	0002cea8 	.word	0x0002cea8
  4135d0:	0002bdd4 	.word	0x0002bdd4

004135d4 <_ZL17icvGoNextMemBlockP12CvMemStorage>:
  4135d4:	e92d4070 	push	{r4, r5, r6, lr}
  4135d8:	e24dd010 	sub	sp, sp, #16
  4135dc:	e2504000 	subs	r4, r0, #0
  4135e0:	1a00000b 	bne	413614 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x40>
  4135e4:	e3a03f43 	mov	r3, #268	; 0x10c
  4135e8:	e58d3000 	str	r3, [sp]
  4135ec:	e3e0001a 	mvn	r0, #26
  4135f0:	e59f11d8 	ldr	r1, [pc, #472]	; 4137d0 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x1fc>
  4135f4:	e08f1001 	add	r1, pc, r1
  4135f8:	e28110ac 	add	r1, r1, #172	; 0xac
  4135fc:	e59f21d0 	ldr	r2, [pc, #464]	; 4137d4 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x200>
  413600:	e08f2002 	add	r2, pc, r2
  413604:	e59f31cc 	ldr	r3, [pc, #460]	; 4137d8 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x204>
  413608:	e08f3003 	add	r3, pc, r3
  41360c:	ebfffd25 	bl	412aa8 <cvError>
  413610:	ea00006b 	b	4137c4 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x1f0>
  413614:	e5943008 	ldr	r3, [r4, #8]
  413618:	e3530000 	cmp	r3, #0
  41361c:	0a000002 	beq	41362c <_ZL17icvGoNextMemBlockP12CvMemStorage+0x58>
  413620:	e5933004 	ldr	r3, [r3, #4]
  413624:	e3530000 	cmp	r3, #0
  413628:	1a00004f 	bne	41376c <_ZL17icvGoNextMemBlockP12CvMemStorage+0x198>
  41362c:	e594500c 	ldr	r5, [r4, #12]
  413630:	e3550000 	cmp	r5, #0
  413634:	1a000011 	bne	413680 <_ZL17icvGoNextMemBlockP12CvMemStorage+0xac>
  413638:	e5940010 	ldr	r0, [r4, #16]
  41363c:	eb00209e 	bl	41b8bc <cvAlloc>
  413640:	e1a06000 	mov	r6, r0
  413644:	ebfffce6 	bl	4129e4 <cvGetErrStatus>
  413648:	e3500000 	cmp	r0, #0
  41364c:	aa00003d 	bge	413748 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x174>
  413650:	e3a03f45 	mov	r3, #276	; 0x114
  413654:	e58d3000 	str	r3, [sp]
  413658:	e3e00000 	mvn	r0, #0
  41365c:	e59f1178 	ldr	r1, [pc, #376]	; 4137dc <_ZL17icvGoNextMemBlockP12CvMemStorage+0x208>
  413660:	e08f1001 	add	r1, pc, r1
  413664:	e28110ac 	add	r1, r1, #172	; 0xac
  413668:	e59f2170 	ldr	r2, [pc, #368]	; 4137e0 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x20c>
  41366c:	e08f2002 	add	r2, pc, r2
  413670:	e59f316c 	ldr	r3, [pc, #364]	; 4137e4 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x210>
  413674:	e08f3003 	add	r3, pc, r3
  413678:	ebfffd0a 	bl	412aa8 <cvError>
  41367c:	ea000050 	b	4137c4 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x1f0>
  413680:	e1a00005 	mov	r0, r5
  413684:	e28d1008 	add	r1, sp, #8
  413688:	ebffff7b 	bl	41347c <cvSaveMemStoragePos>
  41368c:	e1a00005 	mov	r0, r5
  413690:	ebffffcf 	bl	4135d4 <_ZL17icvGoNextMemBlockP12CvMemStorage>
  413694:	ebfffcd2 	bl	4129e4 <cvGetErrStatus>
  413698:	e3500000 	cmp	r0, #0
  41369c:	aa00000b 	bge	4136d0 <_ZL17icvGoNextMemBlockP12CvMemStorage+0xfc>
  4136a0:	e3a03f47 	mov	r3, #284	; 0x11c
  4136a4:	e58d3000 	str	r3, [sp]
  4136a8:	e3e00000 	mvn	r0, #0
  4136ac:	e59f1134 	ldr	r1, [pc, #308]	; 4137e8 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x214>
  4136b0:	e08f1001 	add	r1, pc, r1
  4136b4:	e28110ac 	add	r1, r1, #172	; 0xac
  4136b8:	e59f212c 	ldr	r2, [pc, #300]	; 4137ec <_ZL17icvGoNextMemBlockP12CvMemStorage+0x218>
  4136bc:	e08f2002 	add	r2, pc, r2
  4136c0:	e59f3128 	ldr	r3, [pc, #296]	; 4137f0 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x21c>
  4136c4:	e08f3003 	add	r3, pc, r3
  4136c8:	ebfffcf6 	bl	412aa8 <cvError>
  4136cc:	ea00003c 	b	4137c4 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x1f0>
  4136d0:	e5956008 	ldr	r6, [r5, #8]
  4136d4:	e1a00005 	mov	r0, r5
  4136d8:	e28d1008 	add	r1, sp, #8
  4136dc:	ebffff83 	bl	4134f0 <cvRestoreMemStoragePos>
  4136e0:	e5953008 	ldr	r3, [r5, #8]
  4136e4:	e1530006 	cmp	r3, r6
  4136e8:	1a000010 	bne	413730 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x15c>
  4136ec:	e5953004 	ldr	r3, [r5, #4]
  4136f0:	e1530006 	cmp	r3, r6
  4136f4:	0a000008 	beq	41371c <_ZL17icvGoNextMemBlockP12CvMemStorage+0x148>
  4136f8:	e59f00f4 	ldr	r0, [pc, #244]	; 4137f4 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x220>
  4136fc:	e08f0000 	add	r0, pc, r0
  413700:	e59f10f0 	ldr	r1, [pc, #240]	; 4137f8 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x224>
  413704:	e59f20f0 	ldr	r2, [pc, #240]	; 4137fc <_ZL17icvGoNextMemBlockP12CvMemStorage+0x228>
  413708:	e08f2002 	add	r2, pc, r2
  41370c:	e282203c 	add	r2, r2, #60	; 0x3c
  413710:	e59f30e8 	ldr	r3, [pc, #232]	; 413800 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x22c>
  413714:	e08f3003 	add	r3, pc, r3
  413718:	fa00818d 	blx	433d54 <__assert_func>
  41371c:	e3a03000 	mov	r3, #0
  413720:	e5853004 	str	r3, [r5, #4]
  413724:	e5853008 	str	r3, [r5, #8]
  413728:	e5853014 	str	r3, [r5, #20]
  41372c:	ea000005 	b	413748 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x174>
  413730:	e5962004 	ldr	r2, [r6, #4]
  413734:	e5832004 	str	r2, [r3, #4]
  413738:	e5963004 	ldr	r3, [r6, #4]
  41373c:	e3530000 	cmp	r3, #0
  413740:	15952008 	ldrne	r2, [r5, #8]
  413744:	15832000 	strne	r2, [r3]
  413748:	e3a03000 	mov	r3, #0
  41374c:	e5863004 	str	r3, [r6, #4]
  413750:	e5943008 	ldr	r3, [r4, #8]
  413754:	e5863000 	str	r3, [r6]
  413758:	e5943008 	ldr	r3, [r4, #8]
  41375c:	e3530000 	cmp	r3, #0
  413760:	15836004 	strne	r6, [r3, #4]
  413764:	05846004 	streq	r6, [r4, #4]
  413768:	05846008 	streq	r6, [r4, #8]
  41376c:	e5943008 	ldr	r3, [r4, #8]
  413770:	e5933004 	ldr	r3, [r3, #4]
  413774:	e3530000 	cmp	r3, #0
  413778:	15843008 	strne	r3, [r4, #8]
  41377c:	e5943010 	ldr	r3, [r4, #16]
  413780:	e2433008 	sub	r3, r3, #8
  413784:	e5843014 	str	r3, [r4, #20]
  413788:	e1a02fc3 	asr	r2, r3, #31
  41378c:	e1a02ea2 	lsr	r2, r2, #29
  413790:	e0833002 	add	r3, r3, r2
  413794:	e2033007 	and	r3, r3, #7
  413798:	e1530002 	cmp	r3, r2
  41379c:	0a000008 	beq	4137c4 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x1f0>
  4137a0:	e59f005c 	ldr	r0, [pc, #92]	; 413804 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x230>
  4137a4:	e08f0000 	add	r0, pc, r0
  4137a8:	e59f1058 	ldr	r1, [pc, #88]	; 413808 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x234>
  4137ac:	e59f2058 	ldr	r2, [pc, #88]	; 41380c <_ZL17icvGoNextMemBlockP12CvMemStorage+0x238>
  4137b0:	e08f2002 	add	r2, pc, r2
  4137b4:	e282203c 	add	r2, r2, #60	; 0x3c
  4137b8:	e59f3050 	ldr	r3, [pc, #80]	; 413810 <_ZL17icvGoNextMemBlockP12CvMemStorage+0x23c>
  4137bc:	e08f3003 	add	r3, pc, r3
  4137c0:	fa008163 	blx	433d54 <__assert_func>
  4137c4:	e28dd010 	add	sp, sp, #16
  4137c8:	e8bd4070 	pop	{r4, r5, r6, lr}
  4137cc:	e12fff1e 	bx	lr
  4137d0:	1fbed278 	.word	0x1fbed278
  4137d4:	0002ce10 	.word	0x0002ce10
  4137d8:	0002bd3c 	.word	0x0002bd3c
  4137dc:	1fbed20c 	.word	0x1fbed20c
  4137e0:	00029964 	.word	0x00029964
  4137e4:	0002bcd0 	.word	0x0002bcd0
  4137e8:	1fbed1bc 	.word	0x1fbed1bc
  4137ec:	00029914 	.word	0x00029914
  4137f0:	0002bc80 	.word	0x0002bc80
  4137f4:	0002bc48 	.word	0x0002bc48
  4137f8:	00000123 	.word	0x00000123
  4137fc:	0002b6f0 	.word	0x0002b6f0
  413800:	0002bcd0 	.word	0x0002bcd0
  413804:	0002bba0 	.word	0x0002bba0
  413808:	0000013d 	.word	0x0000013d
  41380c:	0002b648 	.word	0x0002b648
  413810:	0002bc40 	.word	0x0002bc40

00413814 <cvMemStorageAlloc>:
  413814:	e92d4030 	push	{r4, r5, lr}
  413818:	e24dd00c 	sub	sp, sp, #12
  41381c:	e2504000 	subs	r4, r0, #0
  413820:	1a00000c 	bne	413858 <cvMemStorageAlloc+0x44>
  413824:	e3a03f63 	mov	r3, #396	; 0x18c
  413828:	e58d3000 	str	r3, [sp]
  41382c:	e3e0001a 	mvn	r0, #26
  413830:	e59f1190 	ldr	r1, [pc, #400]	; 4139c8 <cvMemStorageAlloc+0x1b4>
  413834:	e08f1001 	add	r1, pc, r1
  413838:	e28110c0 	add	r1, r1, #192	; 0xc0
  41383c:	e59f2188 	ldr	r2, [pc, #392]	; 4139cc <cvMemStorageAlloc+0x1b8>
  413840:	e08f2002 	add	r2, pc, r2
  413844:	e59f3184 	ldr	r3, [pc, #388]	; 4139d0 <cvMemStorageAlloc+0x1bc>
  413848:	e08f3003 	add	r3, pc, r3
  41384c:	ebfffc95 	bl	412aa8 <cvError>
  413850:	e3a00000 	mov	r0, #0
  413854:	ea000058 	b	4139bc <cvMemStorageAlloc+0x1a8>
  413858:	e1a05001 	mov	r5, r1
  41385c:	e3510000 	cmp	r1, #0
  413860:	aa00000c 	bge	413898 <cvMemStorageAlloc+0x84>
  413864:	e59f3168 	ldr	r3, [pc, #360]	; 4139d4 <cvMemStorageAlloc+0x1c0>
  413868:	e58d3000 	str	r3, [sp]
  41386c:	e3e000d2 	mvn	r0, #210	; 0xd2
  413870:	e59f1160 	ldr	r1, [pc, #352]	; 4139d8 <cvMemStorageAlloc+0x1c4>
  413874:	e08f1001 	add	r1, pc, r1
  413878:	e28110c0 	add	r1, r1, #192	; 0xc0
  41387c:	e59f2158 	ldr	r2, [pc, #344]	; 4139dc <cvMemStorageAlloc+0x1c8>
  413880:	e08f2002 	add	r2, pc, r2
  413884:	e59f3154 	ldr	r3, [pc, #340]	; 4139e0 <cvMemStorageAlloc+0x1cc>
  413888:	e08f3003 	add	r3, pc, r3
  41388c:	ebfffc85 	bl	412aa8 <cvError>
  413890:	e3a00000 	mov	r0, #0
  413894:	ea000048 	b	4139bc <cvMemStorageAlloc+0x1a8>
  413898:	e5942014 	ldr	r2, [r4, #20]
  41389c:	e1a03fc2 	asr	r3, r2, #31
  4138a0:	e1a03ea3 	lsr	r3, r3, #29
  4138a4:	e0821003 	add	r1, r2, r3
  4138a8:	e2011007 	and	r1, r1, #7
  4138ac:	e1510003 	cmp	r1, r3
  4138b0:	0a000008 	beq	4138d8 <cvMemStorageAlloc+0xc4>
  4138b4:	e59f0128 	ldr	r0, [pc, #296]	; 4139e4 <cvMemStorageAlloc+0x1d0>
  4138b8:	e08f0000 	add	r0, pc, r0
  4138bc:	e59f1124 	ldr	r1, [pc, #292]	; 4139e8 <cvMemStorageAlloc+0x1d4>
  4138c0:	e59f2124 	ldr	r2, [pc, #292]	; 4139ec <cvMemStorageAlloc+0x1d8>
  4138c4:	e08f2002 	add	r2, pc, r2
  4138c8:	e2822064 	add	r2, r2, #100	; 0x64
  4138cc:	e59f311c 	ldr	r3, [pc, #284]	; 4139f0 <cvMemStorageAlloc+0x1dc>
  4138d0:	e08f3003 	add	r3, pc, r3
  4138d4:	fa00811e 	blx	433d54 <__assert_func>
  4138d8:	e1520005 	cmp	r2, r5
  4138dc:	2a000023 	bcs	413970 <cvMemStorageAlloc+0x15c>
  4138e0:	e5943010 	ldr	r3, [r4, #16]
  4138e4:	e2433008 	sub	r3, r3, #8
  4138e8:	e3c33007 	bic	r3, r3, #7
  4138ec:	e1530005 	cmp	r3, r5
  4138f0:	2a00000c 	bcs	413928 <cvMemStorageAlloc+0x114>
  4138f4:	e59f30f8 	ldr	r3, [pc, #248]	; 4139f4 <cvMemStorageAlloc+0x1e0>
  4138f8:	e58d3000 	str	r3, [sp]
  4138fc:	e3e000d2 	mvn	r0, #210	; 0xd2
  413900:	e59f10f0 	ldr	r1, [pc, #240]	; 4139f8 <cvMemStorageAlloc+0x1e4>
  413904:	e08f1001 	add	r1, pc, r1
  413908:	e28110c0 	add	r1, r1, #192	; 0xc0
  41390c:	e59f20e8 	ldr	r2, [pc, #232]	; 4139fc <cvMemStorageAlloc+0x1e8>
  413910:	e08f2002 	add	r2, pc, r2
  413914:	e59f30e4 	ldr	r3, [pc, #228]	; 413a00 <cvMemStorageAlloc+0x1ec>
  413918:	e08f3003 	add	r3, pc, r3
  41391c:	ebfffc61 	bl	412aa8 <cvError>
  413920:	e3a00000 	mov	r0, #0
  413924:	ea000024 	b	4139bc <cvMemStorageAlloc+0x1a8>
  413928:	e1a00004 	mov	r0, r4
  41392c:	ebffff28 	bl	4135d4 <_ZL17icvGoNextMemBlockP12CvMemStorage>
  413930:	ebfffc2b 	bl	4129e4 <cvGetErrStatus>
  413934:	e3500000 	cmp	r0, #0
  413938:	aa00000c 	bge	413970 <cvMemStorageAlloc+0x15c>
  41393c:	e59f30c0 	ldr	r3, [pc, #192]	; 413a04 <cvMemStorageAlloc+0x1f0>
  413940:	e58d3000 	str	r3, [sp]
  413944:	e3e00000 	mvn	r0, #0
  413948:	e59f10b8 	ldr	r1, [pc, #184]	; 413a08 <cvMemStorageAlloc+0x1f4>
  41394c:	e08f1001 	add	r1, pc, r1
  413950:	e28110c0 	add	r1, r1, #192	; 0xc0
  413954:	e59f20b0 	ldr	r2, [pc, #176]	; 413a0c <cvMemStorageAlloc+0x1f8>
  413958:	e08f2002 	add	r2, pc, r2
  41395c:	e59f30ac 	ldr	r3, [pc, #172]	; 413a10 <cvMemStorageAlloc+0x1fc>
  413960:	e08f3003 	add	r3, pc, r3
  413964:	ebfffc4f 	bl	412aa8 <cvError>
  413968:	e3a00000 	mov	r0, #0
  41396c:	ea000012 	b	4139bc <cvMemStorageAlloc+0x1a8>
  413970:	e5943008 	ldr	r3, [r4, #8]
  413974:	e5941014 	ldr	r1, [r4, #20]
  413978:	e5940010 	ldr	r0, [r4, #16]
  41397c:	e0610000 	rsb	r0, r1, r0
  413980:	e0830000 	add	r0, r3, r0
  413984:	e3100007 	tst	r0, #7
  413988:	0a000008 	beq	4139b0 <cvMemStorageAlloc+0x19c>
  41398c:	e59f0080 	ldr	r0, [pc, #128]	; 413a14 <cvMemStorageAlloc+0x200>
  413990:	e08f0000 	add	r0, pc, r0
  413994:	e59f107c 	ldr	r1, [pc, #124]	; 413a18 <cvMemStorageAlloc+0x204>
  413998:	e59f207c 	ldr	r2, [pc, #124]	; 413a1c <cvMemStorageAlloc+0x208>
  41399c:	e08f2002 	add	r2, pc, r2
  4139a0:	e2822064 	add	r2, r2, #100	; 0x64
  4139a4:	e59f3074 	ldr	r3, [pc, #116]	; 413a20 <cvMemStorageAlloc+0x20c>
  4139a8:	e08f3003 	add	r3, pc, r3
  4139ac:	fa0080e8 	blx	433d54 <__assert_func>
  4139b0:	e0651001 	rsb	r1, r5, r1
  4139b4:	e3c11007 	bic	r1, r1, #7
  4139b8:	e5841014 	str	r1, [r4, #20]
  4139bc:	e28dd00c 	add	sp, sp, #12
  4139c0:	e8bd4030 	pop	{r4, r5, lr}
  4139c4:	e12fff1e 	bx	lr
  4139c8:	1fbed038 	.word	0x1fbed038
  4139cc:	0002bbe8 	.word	0x0002bbe8
  4139d0:	0002bafc 	.word	0x0002bafc
  4139d4:	0000018f 	.word	0x0000018f
  4139d8:	1fbecff8 	.word	0x1fbecff8
  4139dc:	0002bbc0 	.word	0x0002bbc0
  4139e0:	0002babc 	.word	0x0002babc
  4139e4:	0002ba8c 	.word	0x0002ba8c
  4139e8:	00000191 	.word	0x00000191
  4139ec:	0002b534 	.word	0x0002b534
  4139f0:	0002bb2c 	.word	0x0002bb2c
  4139f4:	00000197 	.word	0x00000197
  4139f8:	1fbecf68 	.word	0x1fbecf68
  4139fc:	0002bb54 	.word	0x0002bb54
  413a00:	0002ba2c 	.word	0x0002ba2c
  413a04:	00000199 	.word	0x00000199
  413a08:	1fbecf20 	.word	0x1fbecf20
  413a0c:	00029678 	.word	0x00029678
  413a10:	0002b9e4 	.word	0x0002b9e4
  413a14:	0002b9b4 	.word	0x0002b9b4
  413a18:	0000019d 	.word	0x0000019d
  413a1c:	0002b45c 	.word	0x0002b45c
  413a20:	0002bae4 	.word	0x0002bae4

00413a24 <cvMemStorageAllocString>:
  413a24:	e92d4070 	push	{r4, r5, r6, lr}
  413a28:	e24dd008 	sub	sp, sp, #8
  413a2c:	e1a04000 	mov	r4, r0
  413a30:	e1a06001 	mov	r6, r1
  413a34:	e1a05002 	mov	r5, r2
  413a38:	e3530000 	cmp	r3, #0
  413a3c:	aa000003 	bge	413a50 <cvMemStorageAllocString+0x2c>
  413a40:	e1a00002 	mov	r0, r2
  413a44:	fa008782 	blx	435854 <strlen>
  413a48:	e1a01000 	mov	r1, r0
  413a4c:	ea000000 	b	413a54 <cvMemStorageAllocString+0x30>
  413a50:	e1a01003 	mov	r1, r3
  413a54:	e5841000 	str	r1, [r4]
  413a58:	e1a00006 	mov	r0, r6
  413a5c:	e2811001 	add	r1, r1, #1
  413a60:	ebffff6b 	bl	413814 <cvMemStorageAlloc>
  413a64:	e5840004 	str	r0, [r4, #4]
  413a68:	ebfffbdd 	bl	4129e4 <cvGetErrStatus>
  413a6c:	e3500000 	cmp	r0, #0
  413a70:	aa00000b 	bge	413aa4 <cvMemStorageAllocString+0x80>
  413a74:	e59f3058 	ldr	r3, [pc, #88]	; 413ad4 <cvMemStorageAllocString+0xb0>
  413a78:	e58d3000 	str	r3, [sp]
  413a7c:	e3e00000 	mvn	r0, #0
  413a80:	e59f1050 	ldr	r1, [pc, #80]	; 413ad8 <cvMemStorageAllocString+0xb4>
  413a84:	e08f1001 	add	r1, pc, r1
  413a88:	e28110d4 	add	r1, r1, #212	; 0xd4
  413a8c:	e59f2048 	ldr	r2, [pc, #72]	; 413adc <cvMemStorageAllocString+0xb8>
  413a90:	e08f2002 	add	r2, pc, r2
  413a94:	e59f3044 	ldr	r3, [pc, #68]	; 413ae0 <cvMemStorageAllocString+0xbc>
  413a98:	e08f3003 	add	r3, pc, r3
  413a9c:	ebfffc01 	bl	412aa8 <cvError>
  413aa0:	ea000007 	b	413ac4 <cvMemStorageAllocString+0xa0>
  413aa4:	e5940004 	ldr	r0, [r4, #4]
  413aa8:	e1a01005 	mov	r1, r5
  413aac:	e5942000 	ldr	r2, [r4]
  413ab0:	fa008508 	blx	434ed8 <memcpy>
  413ab4:	e5942004 	ldr	r2, [r4, #4]
  413ab8:	e5943000 	ldr	r3, [r4]
  413abc:	e3a01000 	mov	r1, #0
  413ac0:	e7c21003 	strb	r1, [r2, r3]
  413ac4:	e1a00004 	mov	r0, r4
  413ac8:	e28dd008 	add	sp, sp, #8
  413acc:	e8bd4070 	pop	{r4, r5, r6, lr}
  413ad0:	e12fff1e 	bx	lr
  413ad4:	000001af 	.word	0x000001af
  413ad8:	1fbecde8 	.word	0x1fbecde8
  413adc:	00029540 	.word	0x00029540
  413ae0:	0002b8ac 	.word	0x0002b8ac

00413ae4 <cvSetSeqBlockSize>:
  413ae4:	e92d4070 	push	{r4, r5, r6, lr}
  413ae8:	e24dd008 	sub	sp, sp, #8
  413aec:	e2505000 	subs	r5, r0, #0
  413af0:	0a000002 	beq	413b00 <cvSetSeqBlockSize+0x1c>
  413af4:	e595302c 	ldr	r3, [r5, #44]	; 0x2c
  413af8:	e3530000 	cmp	r3, #0
  413afc:	1a00000b 	bne	413b30 <cvSetSeqBlockSize+0x4c>
  413b00:	e3a03f7d 	mov	r3, #500	; 0x1f4
  413b04:	e58d3000 	str	r3, [sp]
  413b08:	e3e0001a 	mvn	r0, #26
  413b0c:	e59f10e4 	ldr	r1, [pc, #228]	; 413bf8 <cvSetSeqBlockSize+0x114>
  413b10:	e08f1001 	add	r1, pc, r1
  413b14:	e28110ec 	add	r1, r1, #236	; 0xec
  413b18:	e59f20dc 	ldr	r2, [pc, #220]	; 413bfc <cvSetSeqBlockSize+0x118>
  413b1c:	e08f2002 	add	r2, pc, r2
  413b20:	e59f30d8 	ldr	r3, [pc, #216]	; 413c00 <cvSetSeqBlockSize+0x11c>
  413b24:	e08f3003 	add	r3, pc, r3
  413b28:	ebfffbde 	bl	412aa8 <cvError>
  413b2c:	ea00002e 	b	413bec <cvSetSeqBlockSize+0x108>
  413b30:	e3510000 	cmp	r1, #0
  413b34:	aa00000b 	bge	413b68 <cvSetSeqBlockSize+0x84>
  413b38:	e59f30c4 	ldr	r3, [pc, #196]	; 413c04 <cvSetSeqBlockSize+0x120>
  413b3c:	e58d3000 	str	r3, [sp]
  413b40:	e3e000d2 	mvn	r0, #210	; 0xd2
  413b44:	e59f10bc 	ldr	r1, [pc, #188]	; 413c08 <cvSetSeqBlockSize+0x124>
  413b48:	e08f1001 	add	r1, pc, r1
  413b4c:	e28110ec 	add	r1, r1, #236	; 0xec
  413b50:	e59f20b4 	ldr	r2, [pc, #180]	; 413c0c <cvSetSeqBlockSize+0x128>
  413b54:	e08f2002 	add	r2, pc, r2
  413b58:	e59f30b0 	ldr	r3, [pc, #176]	; 413c10 <cvSetSeqBlockSize+0x12c>
  413b5c:	e08f3003 	add	r3, pc, r3
  413b60:	ebfffbd0 	bl	412aa8 <cvError>
  413b64:	ea000020 	b	413bec <cvSetSeqBlockSize+0x108>
  413b68:	e5934010 	ldr	r4, [r3, #16]
  413b6c:	e244401c 	sub	r4, r4, #28
  413b70:	e3c44007 	bic	r4, r4, #7
  413b74:	e595601c 	ldr	r6, [r5, #28]
  413b78:	e3510000 	cmp	r1, #0
  413b7c:	1a000005 	bne	413b98 <cvSetSeqBlockSize+0xb4>
  413b80:	e3a00b01 	mov	r0, #1024	; 0x400
  413b84:	e1a01006 	mov	r1, r6
  413b88:	fa007789 	blx	4319b4 <__aeabi_idiv>
  413b8c:	e3500001 	cmp	r0, #1
  413b90:	a1a01000 	movge	r1, r0
  413b94:	b3a01001 	movlt	r1, #1
  413b98:	e0030196 	mul	r3, r6, r1
  413b9c:	e1530004 	cmp	r3, r4
  413ba0:	da000010 	ble	413be8 <cvSetSeqBlockSize+0x104>
  413ba4:	e1a00004 	mov	r0, r4
  413ba8:	e1a01006 	mov	r1, r6
  413bac:	fa007780 	blx	4319b4 <__aeabi_idiv>
  413bb0:	e2501000 	subs	r1, r0, #0
  413bb4:	1a00000b 	bne	413be8 <cvSetSeqBlockSize+0x104>
  413bb8:	e59f3054 	ldr	r3, [pc, #84]	; 413c14 <cvSetSeqBlockSize+0x130>
  413bbc:	e58d3000 	str	r3, [sp]
  413bc0:	e3e000d2 	mvn	r0, #210	; 0xd2
  413bc4:	e59f104c 	ldr	r1, [pc, #76]	; 413c18 <cvSetSeqBlockSize+0x134>
  413bc8:	e08f1001 	add	r1, pc, r1
  413bcc:	e28110ec 	add	r1, r1, #236	; 0xec
  413bd0:	e59f2044 	ldr	r2, [pc, #68]	; 413c1c <cvSetSeqBlockSize+0x138>
  413bd4:	e08f2002 	add	r2, pc, r2
  413bd8:	e59f3040 	ldr	r3, [pc, #64]	; 413c20 <cvSetSeqBlockSize+0x13c>
  413bdc:	e08f3003 	add	r3, pc, r3
  413be0:	ebfffbb0 	bl	412aa8 <cvError>
  413be4:	ea000000 	b	413bec <cvSetSeqBlockSize+0x108>
  413be8:	e5851028 	str	r1, [r5, #40]	; 0x28
  413bec:	e28dd008 	add	sp, sp, #8
  413bf0:	e8bd4070 	pop	{r4, r5, r6, lr}
  413bf4:	e12fff1e 	bx	lr
  413bf8:	1fbecd5c 	.word	0x1fbecd5c
  413bfc:	0002c8f4 	.word	0x0002c8f4
  413c00:	0002b820 	.word	0x0002b820
  413c04:	000001f6 	.word	0x000001f6
  413c08:	1fbecd24 	.word	0x1fbecd24
  413c0c:	0002c8bc 	.word	0x0002c8bc
  413c10:	0002b7e8 	.word	0x0002b7e8
  413c14:	00000206 	.word	0x00000206
  413c18:	1fbecca4 	.word	0x1fbecca4
  413c1c:	0002b8dc 	.word	0x0002b8dc
  413c20:	0002b768 	.word	0x0002b768

00413c24 <cvCreateSeq>:
  413c24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  413c28:	e24dd008 	sub	sp, sp, #8
  413c2c:	e2536000 	subs	r6, r3, #0
  413c30:	1a00000c 	bne	413c68 <cvCreateSeq+0x44>
  413c34:	e3a03f72 	mov	r3, #456	; 0x1c8
  413c38:	e58d3000 	str	r3, [sp]
  413c3c:	e3e0001a 	mvn	r0, #26
  413c40:	e59f11c0 	ldr	r1, [pc, #448]	; 413e08 <cvCreateSeq+0x1e4>
  413c44:	e08f1001 	add	r1, pc, r1
  413c48:	e2811c01 	add	r1, r1, #256	; 0x100
  413c4c:	e59f21b8 	ldr	r2, [pc, #440]	; 413e0c <cvCreateSeq+0x1e8>
  413c50:	e08f2002 	add	r2, pc, r2
  413c54:	e59f31b4 	ldr	r3, [pc, #436]	; 413e10 <cvCreateSeq+0x1ec>
  413c58:	e08f3003 	add	r3, pc, r3
  413c5c:	ebfffb91 	bl	412aa8 <cvError>
  413c60:	e3a04000 	mov	r4, #0
  413c64:	ea000063 	b	413df8 <cvCreateSeq+0x1d4>
  413c68:	e1a07000 	mov	r7, r0
  413c6c:	e1a08001 	mov	r8, r1
  413c70:	e1a05002 	mov	r5, r2
  413c74:	e3510037 	cmp	r1, #55	; 0x37
  413c78:	da000001 	ble	413c84 <cvCreateSeq+0x60>
  413c7c:	e3520000 	cmp	r2, #0
  413c80:	ca00000c 	bgt	413cb8 <cvCreateSeq+0x94>
  413c84:	e59f3188 	ldr	r3, [pc, #392]	; 413e14 <cvCreateSeq+0x1f0>
  413c88:	e58d3000 	str	r3, [sp]
  413c8c:	e3e000c8 	mvn	r0, #200	; 0xc8
  413c90:	e59f1180 	ldr	r1, [pc, #384]	; 413e18 <cvCreateSeq+0x1f4>
  413c94:	e08f1001 	add	r1, pc, r1
  413c98:	e2811c01 	add	r1, r1, #256	; 0x100
  413c9c:	e59f2178 	ldr	r2, [pc, #376]	; 413e1c <cvCreateSeq+0x1f8>
  413ca0:	e08f2002 	add	r2, pc, r2
  413ca4:	e59f3174 	ldr	r3, [pc, #372]	; 413e20 <cvCreateSeq+0x1fc>
  413ca8:	e08f3003 	add	r3, pc, r3
  413cac:	ebfffb7d 	bl	412aa8 <cvError>
  413cb0:	e3a04000 	mov	r4, #0
  413cb4:	ea00004f 	b	413df8 <cvCreateSeq+0x1d4>
  413cb8:	e1a00006 	mov	r0, r6
  413cbc:	ebfffed4 	bl	413814 <cvMemStorageAlloc>
  413cc0:	e1a04000 	mov	r4, r0
  413cc4:	ebfffb46 	bl	4129e4 <cvGetErrStatus>
  413cc8:	e3500000 	cmp	r0, #0
  413ccc:	aa00000b 	bge	413d00 <cvCreateSeq+0xdc>
  413cd0:	e59f314c 	ldr	r3, [pc, #332]	; 413e24 <cvCreateSeq+0x200>
  413cd4:	e58d3000 	str	r3, [sp]
  413cd8:	e3e00000 	mvn	r0, #0
  413cdc:	e59f1144 	ldr	r1, [pc, #324]	; 413e28 <cvCreateSeq+0x204>
  413ce0:	e08f1001 	add	r1, pc, r1
  413ce4:	e2811c01 	add	r1, r1, #256	; 0x100
  413ce8:	e59f213c 	ldr	r2, [pc, #316]	; 413e2c <cvCreateSeq+0x208>
  413cec:	e08f2002 	add	r2, pc, r2
  413cf0:	e59f3138 	ldr	r3, [pc, #312]	; 413e30 <cvCreateSeq+0x20c>
  413cf4:	e08f3003 	add	r3, pc, r3
  413cf8:	ebfffb6a 	bl	412aa8 <cvError>
  413cfc:	ea00003d 	b	413df8 <cvCreateSeq+0x1d4>
  413d00:	e1a00004 	mov	r0, r4
  413d04:	e3a01000 	mov	r1, #0
  413d08:	e1a02008 	mov	r2, r8
  413d0c:	fa0084f0 	blx	4350d4 <memset>
  413d10:	e5848004 	str	r8, [r4, #4]
  413d14:	e1a03807 	lsl	r3, r7, #16
  413d18:	e1a03823 	lsr	r3, r3, #16
  413d1c:	e3833442 	orr	r3, r3, #1107296256	; 0x42000000
  413d20:	e3833899 	orr	r3, r3, #10027008	; 0x990000
  413d24:	e5843000 	str	r3, [r4]
  413d28:	e2073f7e 	and	r3, r7, #504	; 0x1f8
  413d2c:	e1a031c3 	asr	r3, r3, #3
  413d30:	e2833001 	add	r3, r3, #1
  413d34:	e2072007 	and	r2, r7, #7
  413d38:	e1a02082 	lsl	r2, r2, #1
  413d3c:	e59f10f0 	ldr	r1, [pc, #240]	; 413e34 <cvCreateSeq+0x210>
  413d40:	e1a02231 	lsr	r2, r1, r2
  413d44:	e2022003 	and	r2, r2, #3
  413d48:	e1b01b87 	lsls	r1, r7, #23
  413d4c:	13a01001 	movne	r1, #1
  413d50:	03a01000 	moveq	r1, #0
  413d54:	e1b03213 	lsls	r3, r3, r2
  413d58:	03a02000 	moveq	r2, #0
  413d5c:	12012001 	andne	r2, r1, #1
  413d60:	e3520000 	cmp	r2, #0
  413d64:	0a00000d 	beq	413da0 <cvCreateSeq+0x17c>
  413d68:	e1530005 	cmp	r3, r5
  413d6c:	0a00000b 	beq	413da0 <cvCreateSeq+0x17c>
  413d70:	e59f30c0 	ldr	r3, [pc, #192]	; 413e38 <cvCreateSeq+0x214>
  413d74:	e58d3000 	str	r3, [sp]
  413d78:	e3e000c8 	mvn	r0, #200	; 0xc8
  413d7c:	e59f10b8 	ldr	r1, [pc, #184]	; 413e3c <cvCreateSeq+0x218>
  413d80:	e08f1001 	add	r1, pc, r1
  413d84:	e2811c01 	add	r1, r1, #256	; 0x100
  413d88:	e59f20b0 	ldr	r2, [pc, #176]	; 413e40 <cvCreateSeq+0x21c>
  413d8c:	e08f2002 	add	r2, pc, r2
  413d90:	e59f30ac 	ldr	r3, [pc, #172]	; 413e44 <cvCreateSeq+0x220>
  413d94:	e08f3003 	add	r3, pc, r3
  413d98:	ebfffb42 	bl	412aa8 <cvError>
  413d9c:	ea000015 	b	413df8 <cvCreateSeq+0x1d4>
  413da0:	e584501c 	str	r5, [r4, #28]
  413da4:	e584602c 	str	r6, [r4, #44]	; 0x2c
  413da8:	e3a00b01 	mov	r0, #1024	; 0x400
  413dac:	e1a01005 	mov	r1, r5
  413db0:	fa0076ff 	blx	4319b4 <__aeabi_idiv>
  413db4:	e1a01000 	mov	r1, r0
  413db8:	e1a00004 	mov	r0, r4
  413dbc:	ebffff48 	bl	413ae4 <cvSetSeqBlockSize>
  413dc0:	ebfffb07 	bl	4129e4 <cvGetErrStatus>
  413dc4:	e3500000 	cmp	r0, #0
  413dc8:	aa00000a 	bge	413df8 <cvCreateSeq+0x1d4>
  413dcc:	e59f3074 	ldr	r3, [pc, #116]	; 413e48 <cvCreateSeq+0x224>
  413dd0:	e58d3000 	str	r3, [sp]
  413dd4:	e3e00000 	mvn	r0, #0
  413dd8:	e59f106c 	ldr	r1, [pc, #108]	; 413e4c <cvCreateSeq+0x228>
  413ddc:	e08f1001 	add	r1, pc, r1
  413de0:	e2811c01 	add	r1, r1, #256	; 0x100
  413de4:	e59f2064 	ldr	r2, [pc, #100]	; 413e50 <cvCreateSeq+0x22c>
  413de8:	e08f2002 	add	r2, pc, r2
  413dec:	e59f3060 	ldr	r3, [pc, #96]	; 413e54 <cvCreateSeq+0x230>
  413df0:	e08f3003 	add	r3, pc, r3
  413df4:	ebfffb2b 	bl	412aa8 <cvError>
  413df8:	e1a00004 	mov	r0, r4
  413dfc:	e28dd008 	add	sp, sp, #8
  413e00:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  413e04:	e12fff1e 	bx	lr
  413e08:	1fbecc28 	.word	0x1fbecc28
  413e0c:	0002c7c0 	.word	0x0002c7c0
  413e10:	0002b6ec 	.word	0x0002b6ec
  413e14:	000001ca 	.word	0x000001ca
  413e18:	1fbecbd8 	.word	0x1fbecbd8
  413e1c:	0002c770 	.word	0x0002c770
  413e20:	0002b69c 	.word	0x0002b69c
  413e24:	000001cd 	.word	0x000001cd
  413e28:	1fbecb8c 	.word	0x1fbecb8c
  413e2c:	000292e4 	.word	0x000292e4
  413e30:	0002b650 	.word	0x0002b650
  413e34:	0000ba50 	.word	0x0000ba50
  413e38:	000001da 	.word	0x000001da
  413e3c:	1fbecaec 	.word	0x1fbecaec
  413e40:	0002b764 	.word	0x0002b764
  413e44:	0002b5b0 	.word	0x0002b5b0
  413e48:	000001df 	.word	0x000001df
  413e4c:	1fbeca90 	.word	0x1fbeca90
  413e50:	000291e8 	.word	0x000291e8
  413e54:	0002b554 	.word	0x0002b554

00413e58 <_ZL10icvGrowSeqP5CvSeqi>:
  413e58:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  413e5c:	e24dd00c 	sub	sp, sp, #12
  413e60:	e2505000 	subs	r5, r0, #0
  413e64:	1a00000b 	bne	413e98 <_ZL10icvGrowSeqP5CvSeqi+0x40>
  413e68:	e59f3394 	ldr	r3, [pc, #916]	; 414204 <_ZL10icvGrowSeqP5CvSeqi+0x3ac>
  413e6c:	e58d3000 	str	r3, [sp]
  413e70:	e3e0001a 	mvn	r0, #26
  413e74:	e59f138c 	ldr	r1, [pc, #908]	; 414208 <_ZL10icvGrowSeqP5CvSeqi+0x3b0>
  413e78:	e08f1001 	add	r1, pc, r1
  413e7c:	e2811f43 	add	r1, r1, #268	; 0x10c
  413e80:	e59f2384 	ldr	r2, [pc, #900]	; 41420c <_ZL10icvGrowSeqP5CvSeqi+0x3b4>
  413e84:	e08f2002 	add	r2, pc, r2
  413e88:	e59f3380 	ldr	r3, [pc, #896]	; 414210 <_ZL10icvGrowSeqP5CvSeqi+0x3b8>
  413e8c:	e08f3003 	add	r3, pc, r3
  413e90:	ebfffb04 	bl	412aa8 <cvError>
  413e94:	ea0000d7 	b	4141f8 <_ZL10icvGrowSeqP5CvSeqi+0x3a0>
  413e98:	e1a08001 	mov	r8, r1
  413e9c:	e5954030 	ldr	r4, [r5, #48]	; 0x30
  413ea0:	e3540000 	cmp	r4, #0
  413ea4:	1a00007f 	bne	4140a8 <_ZL10icvGrowSeqP5CvSeqi+0x250>
  413ea8:	e595701c 	ldr	r7, [r5, #28]
  413eac:	e5959028 	ldr	r9, [r5, #40]	; 0x28
  413eb0:	e595402c 	ldr	r4, [r5, #44]	; 0x2c
  413eb4:	e5953018 	ldr	r3, [r5, #24]
  413eb8:	e1530109 	cmp	r3, r9, lsl #2
  413ebc:	a1a00005 	movge	r0, r5
  413ec0:	a1a01089 	lslge	r1, r9, #1
  413ec4:	abffff06 	blge	413ae4 <cvSetSeqBlockSize>
  413ec8:	e3540000 	cmp	r4, #0
  413ecc:	1a00000b 	bne	413f00 <_ZL10icvGrowSeqP5CvSeqi+0xa8>
  413ed0:	e59f333c 	ldr	r3, [pc, #828]	; 414214 <_ZL10icvGrowSeqP5CvSeqi+0x3bc>
  413ed4:	e58d3000 	str	r3, [sp]
  413ed8:	e3e0001a 	mvn	r0, #26
  413edc:	e59f1334 	ldr	r1, [pc, #820]	; 414218 <_ZL10icvGrowSeqP5CvSeqi+0x3c0>
  413ee0:	e08f1001 	add	r1, pc, r1
  413ee4:	e2811f43 	add	r1, r1, #268	; 0x10c
  413ee8:	e59f232c 	ldr	r2, [pc, #812]	; 41421c <_ZL10icvGrowSeqP5CvSeqi+0x3c4>
  413eec:	e08f2002 	add	r2, pc, r2
  413ef0:	e59f3328 	ldr	r3, [pc, #808]	; 414220 <_ZL10icvGrowSeqP5CvSeqi+0x3c8>
  413ef4:	e08f3003 	add	r3, pc, r3
  413ef8:	ebfffaea 	bl	412aa8 <cvError>
  413efc:	ea0000bd 	b	4141f8 <_ZL10icvGrowSeqP5CvSeqi+0x3a0>
  413f00:	e5940014 	ldr	r0, [r4, #20]
  413f04:	e5943010 	ldr	r3, [r4, #16]
  413f08:	e0602003 	rsb	r2, r0, r3
  413f0c:	e5943008 	ldr	r3, [r4, #8]
  413f10:	e0833002 	add	r3, r3, r2
  413f14:	e5956020 	ldr	r6, [r5, #32]
  413f18:	e0663003 	rsb	r3, r6, r3
  413f1c:	e3530008 	cmp	r3, #8
  413f20:	2a000011 	bcs	413f6c <_ZL10icvGrowSeqP5CvSeqi+0x114>
  413f24:	e595301c 	ldr	r3, [r5, #28]
  413f28:	e1500003 	cmp	r0, r3
  413f2c:	ba00000e 	blt	413f6c <_ZL10icvGrowSeqP5CvSeqi+0x114>
  413f30:	e3580000 	cmp	r8, #0
  413f34:	1a00000c 	bne	413f6c <_ZL10icvGrowSeqP5CvSeqi+0x114>
  413f38:	e1a01007 	mov	r1, r7
  413f3c:	fa00769c 	blx	4319b4 <__aeabi_idiv>
  413f40:	e1500009 	cmp	r0, r9
  413f44:	c1a00009 	movgt	r0, r9
  413f48:	e0266097 	mla	r6, r7, r0, r6
  413f4c:	e5856020 	str	r6, [r5, #32]
  413f50:	e5942008 	ldr	r2, [r4, #8]
  413f54:	e5943010 	ldr	r3, [r4, #16]
  413f58:	e0823003 	add	r3, r2, r3
  413f5c:	e0663003 	rsb	r3, r6, r3
  413f60:	e3c33007 	bic	r3, r3, #7
  413f64:	e5843014 	str	r3, [r4, #20]
  413f68:	ea0000a2 	b	4141f8 <_ZL10icvGrowSeqP5CvSeqi+0x3a0>
  413f6c:	e0060799 	mul	r6, r9, r7
  413f70:	e2866018 	add	r6, r6, #24
  413f74:	e5943014 	ldr	r3, [r4, #20]
  413f78:	e1530006 	cmp	r3, r6
  413f7c:	aa00002d 	bge	414038 <_ZL10icvGrowSeqP5CvSeqi+0x1e0>
  413f80:	e3590005 	cmp	r9, #5
  413f84:	c59f3298 	ldrgt	r3, [pc, #664]	; 414224 <_ZL10icvGrowSeqP5CvSeqi+0x3cc>
  413f88:	c0c32399 	smullgt	r2, r3, r9, r3
  413f8c:	c0439fc9 	subgt	r9, r3, r9, asr #31
  413f90:	d3a09001 	movle	r9, #1
  413f94:	e0070799 	mul	r7, r9, r7
  413f98:	e5940014 	ldr	r0, [r4, #20]
  413f9c:	e2877020 	add	r7, r7, #32
  413fa0:	e1500007 	cmp	r0, r7
  413fa4:	ba000006 	blt	413fc4 <_ZL10icvGrowSeqP5CvSeqi+0x16c>
  413fa8:	e595601c 	ldr	r6, [r5, #28]
  413fac:	e2400018 	sub	r0, r0, #24
  413fb0:	e1a01006 	mov	r1, r6
  413fb4:	fa00767e 	blx	4319b4 <__aeabi_idiv>
  413fb8:	e0000096 	mul	r0, r6, r0
  413fbc:	e2806018 	add	r6, r0, #24
  413fc0:	ea00001c 	b	414038 <_ZL10icvGrowSeqP5CvSeqi+0x1e0>
  413fc4:	e1a00004 	mov	r0, r4
  413fc8:	ebfffd81 	bl	4135d4 <_ZL17icvGoNextMemBlockP12CvMemStorage>
  413fcc:	ebfffa84 	bl	4129e4 <cvGetErrStatus>
  413fd0:	e3500000 	cmp	r0, #0
  413fd4:	aa00000b 	bge	414008 <_ZL10icvGrowSeqP5CvSeqi+0x1b0>
  413fd8:	e3a03fc7 	mov	r3, #796	; 0x31c
  413fdc:	e58d3000 	str	r3, [sp]
  413fe0:	e3e00000 	mvn	r0, #0
  413fe4:	e59f123c 	ldr	r1, [pc, #572]	; 414228 <_ZL10icvGrowSeqP5CvSeqi+0x3d0>
  413fe8:	e08f1001 	add	r1, pc, r1
  413fec:	e2811f43 	add	r1, r1, #268	; 0x10c
  413ff0:	e59f2234 	ldr	r2, [pc, #564]	; 41422c <_ZL10icvGrowSeqP5CvSeqi+0x3d4>
  413ff4:	e08f2002 	add	r2, pc, r2
  413ff8:	e59f3230 	ldr	r3, [pc, #560]	; 414230 <_ZL10icvGrowSeqP5CvSeqi+0x3d8>
  413ffc:	e08f3003 	add	r3, pc, r3
  414000:	ebfffaa8 	bl	412aa8 <cvError>
  414004:	ea00007b 	b	4141f8 <_ZL10icvGrowSeqP5CvSeqi+0x3a0>
  414008:	e5943014 	ldr	r3, [r4, #20]
  41400c:	e1530006 	cmp	r3, r6
  414010:	aa000008 	bge	414038 <_ZL10icvGrowSeqP5CvSeqi+0x1e0>
  414014:	e59f0218 	ldr	r0, [pc, #536]	; 414234 <_ZL10icvGrowSeqP5CvSeqi+0x3dc>
  414018:	e08f0000 	add	r0, pc, r0
  41401c:	e59f1214 	ldr	r1, [pc, #532]	; 414238 <_ZL10icvGrowSeqP5CvSeqi+0x3e0>
  414020:	e59f2214 	ldr	r2, [pc, #532]	; 41423c <_ZL10icvGrowSeqP5CvSeqi+0x3e4>
  414024:	e08f2002 	add	r2, pc, r2
  414028:	e2822094 	add	r2, r2, #148	; 0x94
  41402c:	e59f320c 	ldr	r3, [pc, #524]	; 414240 <_ZL10icvGrowSeqP5CvSeqi+0x3e8>
  414030:	e08f3003 	add	r3, pc, r3
  414034:	fa007f46 	blx	433d54 <__assert_func>
  414038:	e1a00004 	mov	r0, r4
  41403c:	e1a01006 	mov	r1, r6
  414040:	ebfffdf3 	bl	413814 <cvMemStorageAlloc>
  414044:	e1a04000 	mov	r4, r0
  414048:	ebfffa65 	bl	4129e4 <cvGetErrStatus>
  41404c:	e3500000 	cmp	r0, #0
  414050:	aa00000b 	bge	414084 <_ZL10icvGrowSeqP5CvSeqi+0x22c>
  414054:	e59f31e8 	ldr	r3, [pc, #488]	; 414244 <_ZL10icvGrowSeqP5CvSeqi+0x3ec>
  414058:	e58d3000 	str	r3, [sp]
  41405c:	e3e00000 	mvn	r0, #0
  414060:	e59f11e0 	ldr	r1, [pc, #480]	; 414248 <_ZL10icvGrowSeqP5CvSeqi+0x3f0>
  414064:	e08f1001 	add	r1, pc, r1
  414068:	e2811f43 	add	r1, r1, #268	; 0x10c
  41406c:	e59f21d8 	ldr	r2, [pc, #472]	; 41424c <_ZL10icvGrowSeqP5CvSeqi+0x3f4>
  414070:	e08f2002 	add	r2, pc, r2
  414074:	e59f31d4 	ldr	r3, [pc, #468]	; 414250 <_ZL10icvGrowSeqP5CvSeqi+0x3f8>
  414078:	e08f3003 	add	r3, pc, r3
  41407c:	ebfffa89 	bl	412aa8 <cvError>
  414080:	ea00005c 	b	4141f8 <_ZL10icvGrowSeqP5CvSeqi+0x3a0>
  414084:	e284301b 	add	r3, r4, #27
  414088:	e3c33007 	bic	r3, r3, #7
  41408c:	e5843010 	str	r3, [r4, #16]
  414090:	e2466018 	sub	r6, r6, #24
  414094:	e584600c 	str	r6, [r4, #12]
  414098:	e3a03000 	mov	r3, #0
  41409c:	e5843004 	str	r3, [r4, #4]
  4140a0:	e5843000 	str	r3, [r4]
  4140a4:	ea000001 	b	4140b0 <_ZL10icvGrowSeqP5CvSeqi+0x258>
  4140a8:	e5943004 	ldr	r3, [r4, #4]
  4140ac:	e5853030 	str	r3, [r5, #48]	; 0x30
  4140b0:	e5953034 	ldr	r3, [r5, #52]	; 0x34
  4140b4:	e3530000 	cmp	r3, #0
  4140b8:	05854034 	streq	r4, [r5, #52]	; 0x34
  4140bc:	05844004 	streq	r4, [r4, #4]
  4140c0:	05844000 	streq	r4, [r4]
  4140c4:	0a000005 	beq	4140e0 <_ZL10icvGrowSeqP5CvSeqi+0x288>
  4140c8:	e5933000 	ldr	r3, [r3]
  4140cc:	e5843000 	str	r3, [r4]
  4140d0:	e5952034 	ldr	r2, [r5, #52]	; 0x34
  4140d4:	e5842004 	str	r2, [r4, #4]
  4140d8:	e5824000 	str	r4, [r2]
  4140dc:	e5834004 	str	r4, [r3, #4]
  4140e0:	e594600c 	ldr	r6, [r4, #12]
  4140e4:	e595701c 	ldr	r7, [r5, #28]
  4140e8:	e1a00006 	mov	r0, r6
  4140ec:	e1a01007 	mov	r1, r7
  4140f0:	fa007636 	blx	4319d0 <__aeabi_idivmod>
  4140f4:	e3510000 	cmp	r1, #0
  4140f8:	1a000001 	bne	414104 <_ZL10icvGrowSeqP5CvSeqi+0x2ac>
  4140fc:	e3560000 	cmp	r6, #0
  414100:	ca000008 	bgt	414128 <_ZL10icvGrowSeqP5CvSeqi+0x2d0>
  414104:	e59f0148 	ldr	r0, [pc, #328]	; 414254 <_ZL10icvGrowSeqP5CvSeqi+0x3fc>
  414108:	e08f0000 	add	r0, pc, r0
  41410c:	e59f1144 	ldr	r1, [pc, #324]	; 414258 <_ZL10icvGrowSeqP5CvSeqi+0x400>
  414110:	e59f2144 	ldr	r2, [pc, #324]	; 41425c <_ZL10icvGrowSeqP5CvSeqi+0x404>
  414114:	e08f2002 	add	r2, pc, r2
  414118:	e2822094 	add	r2, r2, #148	; 0x94
  41411c:	e59f313c 	ldr	r3, [pc, #316]	; 414260 <_ZL10icvGrowSeqP5CvSeqi+0x408>
  414120:	e08f3003 	add	r3, pc, r3
  414124:	fa007f0a 	blx	433d54 <__assert_func>
  414128:	e3580000 	cmp	r8, #0
  41412c:	1a00000c 	bne	414164 <_ZL10icvGrowSeqP5CvSeqi+0x30c>
  414130:	e5943010 	ldr	r3, [r4, #16]
  414134:	e5853024 	str	r3, [r5, #36]	; 0x24
  414138:	e2842010 	add	r2, r4, #16
  41413c:	e812000c 	ldmda	r2, {r2, r3}
  414140:	e0833002 	add	r3, r3, r2
  414144:	e5853020 	str	r3, [r5, #32]
  414148:	e5943000 	ldr	r3, [r4]
  41414c:	e1530004 	cmp	r3, r4
  414150:	12833008 	addne	r3, r3, #8
  414154:	1893000a 	ldmne	r3, {r1, r3}
  414158:	10811003 	addne	r1, r1, r3
  41415c:	e5841008 	str	r1, [r4, #8]
  414160:	ea000022 	b	4141f0 <_ZL10icvGrowSeqP5CvSeqi+0x398>
  414164:	e1a00006 	mov	r0, r6
  414168:	e1a01007 	mov	r1, r7
  41416c:	fa007610 	blx	4319b4 <__aeabi_idiv>
  414170:	e5943010 	ldr	r3, [r4, #16]
  414174:	e0836006 	add	r6, r3, r6
  414178:	e5846010 	str	r6, [r4, #16]
  41417c:	e5943000 	ldr	r3, [r4]
  414180:	e1530004 	cmp	r3, r4
  414184:	0a00000e 	beq	4141c4 <_ZL10icvGrowSeqP5CvSeqi+0x36c>
  414188:	e5953034 	ldr	r3, [r5, #52]	; 0x34
  41418c:	e5933008 	ldr	r3, [r3, #8]
  414190:	e3530000 	cmp	r3, #0
  414194:	0a000008 	beq	4141bc <_ZL10icvGrowSeqP5CvSeqi+0x364>
  414198:	e59f00c4 	ldr	r0, [pc, #196]	; 414264 <_ZL10icvGrowSeqP5CvSeqi+0x40c>
  41419c:	e08f0000 	add	r0, pc, r0
  4141a0:	e59f10c0 	ldr	r1, [pc, #192]	; 414268 <_ZL10icvGrowSeqP5CvSeqi+0x410>
  4141a4:	e59f20c0 	ldr	r2, [pc, #192]	; 41426c <_ZL10icvGrowSeqP5CvSeqi+0x414>
  4141a8:	e08f2002 	add	r2, pc, r2
  4141ac:	e2822094 	add	r2, r2, #148	; 0x94
  4141b0:	e59f30b8 	ldr	r3, [pc, #184]	; 414270 <_ZL10icvGrowSeqP5CvSeqi+0x418>
  4141b4:	e08f3003 	add	r3, pc, r3
  4141b8:	fa007ee5 	blx	433d54 <__assert_func>
  4141bc:	e5854034 	str	r4, [r5, #52]	; 0x34
  4141c0:	ea000001 	b	4141cc <_ZL10icvGrowSeqP5CvSeqi+0x374>
  4141c4:	e5856024 	str	r6, [r5, #36]	; 0x24
  4141c8:	e5856020 	str	r6, [r5, #32]
  4141cc:	e3a03000 	mov	r3, #0
  4141d0:	e5843008 	str	r3, [r4, #8]
  4141d4:	e5943008 	ldr	r3, [r4, #8]
  4141d8:	e0833000 	add	r3, r3, r0
  4141dc:	e5843008 	str	r3, [r4, #8]
  4141e0:	e5944004 	ldr	r4, [r4, #4]
  4141e4:	e5953034 	ldr	r3, [r5, #52]	; 0x34
  4141e8:	e1530004 	cmp	r3, r4
  4141ec:	1afffff8 	bne	4141d4 <_ZL10icvGrowSeqP5CvSeqi+0x37c>
  4141f0:	e3a03000 	mov	r3, #0
  4141f4:	e584300c 	str	r3, [r4, #12]
  4141f8:	e28dd00c 	add	sp, sp, #12
  4141fc:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  414200:	e12fff1e 	bx	lr
  414204:	000002ee 	.word	0x000002ee
  414208:	1fbec9f4 	.word	0x1fbec9f4
  41420c:	0002c58c 	.word	0x0002c58c
  414210:	0002b4b8 	.word	0x0002b4b8
  414214:	000002fb 	.word	0x000002fb
  414218:	1fbec98c 	.word	0x1fbec98c
  41421c:	0002b674 	.word	0x0002b674
  414220:	0002b450 	.word	0x0002b450
  414224:	55555556 	.word	0x55555556
  414228:	1fbec884 	.word	0x1fbec884
  41422c:	00028fdc 	.word	0x00028fdc
  414230:	0002b348 	.word	0x0002b348
  414234:	0002b32c 	.word	0x0002b32c
  414238:	0000031d 	.word	0x0000031d
  41423c:	0002add4 	.word	0x0002add4
  414240:	0002b558 	.word	0x0002b558
  414244:	00000321 	.word	0x00000321
  414248:	1fbec808 	.word	0x1fbec808
  41424c:	00028f60 	.word	0x00028f60
  414250:	0002b2cc 	.word	0x0002b2cc
  414254:	0002b23c 	.word	0x0002b23c
  414258:	0000033b 	.word	0x0000033b
  41425c:	0002ace4 	.word	0x0002ace4
  414260:	0002b488 	.word	0x0002b488
  414264:	0002b1a8 	.word	0x0002b1a8
  414268:	0000034b 	.word	0x0000034b
  41426c:	0002ac50 	.word	0x0002ac50
  414270:	0002b42c 	.word	0x0002b42c

00414274 <cvGetSeqElem>:
  414274:	e5902018 	ldr	r2, [r0, #24]
  414278:	e1a03002 	mov	r3, r2
  41427c:	e1510002 	cmp	r1, r2
  414280:	3a000009 	bcc	4142ac <cvGetSeqElem+0x38>
  414284:	e3510000 	cmp	r1, #0
  414288:	a3a0c000 	movge	ip, #0
  41428c:	b1a0c002 	movlt	ip, r2
  414290:	e08c1001 	add	r1, ip, r1
  414294:	e1510002 	cmp	r1, r2
  414298:	b3a0c000 	movlt	ip, #0
  41429c:	a1a0c002 	movge	ip, r2
  4142a0:	e06c1001 	rsb	r1, ip, r1
  4142a4:	e1530001 	cmp	r3, r1
  4142a8:	9a000013 	bls	4142fc <cvGetSeqElem+0x88>
  4142ac:	e5903034 	ldr	r3, [r0, #52]	; 0x34
  4142b0:	e1520081 	cmp	r2, r1, lsl #1
  4142b4:	aa000002 	bge	4142c4 <cvGetSeqElem+0x50>
  4142b8:	ea000005 	b	4142d4 <cvGetSeqElem+0x60>
  4142bc:	e5933004 	ldr	r3, [r3, #4]
  4142c0:	e0621001 	rsb	r1, r2, r1
  4142c4:	e593200c 	ldr	r2, [r3, #12]
  4142c8:	e1510002 	cmp	r1, r2
  4142cc:	aafffffa 	bge	4142bc <cvGetSeqElem+0x48>
  4142d0:	ea000005 	b	4142ec <cvGetSeqElem+0x78>
  4142d4:	e5933000 	ldr	r3, [r3]
  4142d8:	e593c00c 	ldr	ip, [r3, #12]
  4142dc:	e06c2002 	rsb	r2, ip, r2
  4142e0:	e1510002 	cmp	r1, r2
  4142e4:	bafffffa 	blt	4142d4 <cvGetSeqElem+0x60>
  4142e8:	e0621001 	rsb	r1, r2, r1
  4142ec:	e5932010 	ldr	r2, [r3, #16]
  4142f0:	e590301c 	ldr	r3, [r0, #28]
  4142f4:	e0202193 	mla	r0, r3, r1, r2
  4142f8:	e12fff1e 	bx	lr
  4142fc:	e3a00000 	mov	r0, #0
  414300:	e12fff1e 	bx	lr

00414304 <cvSeqElemIdx>:
  414304:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  414308:	e24dd00c 	sub	sp, sp, #12
  41430c:	e1a05000 	mov	r5, r0
  414310:	e3510000 	cmp	r1, #0
  414314:	13500000 	cmpne	r0, #0
  414318:	03a00001 	moveq	r0, #1
  41431c:	13a00000 	movne	r0, #0
  414320:	1a00000c 	bne	414358 <cvSeqElemIdx+0x54>
  414324:	e59f30d4 	ldr	r3, [pc, #212]	; 414400 <cvSeqElemIdx+0xfc>
  414328:	e58d3000 	str	r3, [sp]
  41432c:	e3e0001a 	mvn	r0, #26
  414330:	e59f10cc 	ldr	r1, [pc, #204]	; 414404 <cvSeqElemIdx+0x100>
  414334:	e08f1001 	add	r1, pc, r1
  414338:	e2811f46 	add	r1, r1, #280	; 0x118
  41433c:	e59f20c4 	ldr	r2, [pc, #196]	; 414408 <cvSeqElemIdx+0x104>
  414340:	e08f2002 	add	r2, pc, r2
  414344:	e59f30c0 	ldr	r3, [pc, #192]	; 41440c <cvSeqElemIdx+0x108>
  414348:	e08f3003 	add	r3, pc, r3
  41434c:	ebfff9d5 	bl	412aa8 <cvError>
  414350:	e3e00000 	mvn	r0, #0
  414354:	ea000026 	b	4143f4 <cvSeqElemIdx+0xf0>
  414358:	e1a0e001 	mov	lr, r1
  41435c:	e5956034 	ldr	r6, [r5, #52]	; 0x34
  414360:	e595101c 	ldr	r1, [r5, #28]
  414364:	e1a04006 	mov	r4, r6
  414368:	e1a0700e 	mov	r7, lr
  41436c:	e594c010 	ldr	ip, [r4, #16]
  414370:	e06cc00e 	rsb	ip, ip, lr
  414374:	e594300c 	ldr	r3, [r4, #12]
  414378:	e0030391 	mul	r3, r1, r3
  41437c:	e15c0003 	cmp	ip, r3
  414380:	2a000017 	bcs	4143e4 <cvSeqElemIdx+0xe0>
  414384:	e3520000 	cmp	r2, #0
  414388:	15824000 	strne	r4, [r2]
  41438c:	e3510020 	cmp	r1, #32
  414390:	ca000005 	bgt	4143ac <cvSeqElemIdx+0xa8>
  414394:	e59f3074 	ldr	r3, [pc, #116]	; 414410 <cvSeqElemIdx+0x10c>
  414398:	e08f3003 	add	r3, pc, r3
  41439c:	e0833001 	add	r3, r3, r1
  4143a0:	e5d320b3 	ldrb	r2, [r3, #179]	; 0xb3
  4143a4:	e3a00001 	mov	r0, #1
  4143a8:	ea000000 	b	4143b0 <cvSeqElemIdx+0xac>
  4143ac:	e3e02000 	mvn	r2, #0
  4143b0:	e3500000 	cmp	r0, #0
  4143b4:	15943010 	ldrne	r3, [r4, #16]
  4143b8:	10637007 	rsbne	r7, r3, r7
  4143bc:	11a00237 	lsrne	r0, r7, r2
  4143c0:	05940010 	ldreq	r0, [r4, #16]
  4143c4:	00600007 	rsbeq	r0, r0, r7
  4143c8:	0b00b0e2 	bleq	440758 <____aeabi_uidiv_from_arm>
  4143cc:	e5952034 	ldr	r2, [r5, #52]	; 0x34
  4143d0:	e5943008 	ldr	r3, [r4, #8]
  4143d4:	e5922008 	ldr	r2, [r2, #8]
  4143d8:	e0623003 	rsb	r3, r2, r3
  4143dc:	e0830000 	add	r0, r3, r0
  4143e0:	ea000003 	b	4143f4 <cvSeqElemIdx+0xf0>
  4143e4:	e5944004 	ldr	r4, [r4, #4]
  4143e8:	e1540006 	cmp	r4, r6
  4143ec:	1affffdd 	bne	414368 <cvSeqElemIdx+0x64>
  4143f0:	e3e00000 	mvn	r0, #0
  4143f4:	e28dd00c 	add	sp, sp, #12
  4143f8:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  4143fc:	e12fff1e 	bx	lr
  414400:	00000245 	.word	0x00000245
  414404:	1fbec538 	.word	0x1fbec538
  414408:	0002c0d0 	.word	0x0002c0d0
  41440c:	0002affc 	.word	0x0002affc
  414410:	0002aa60 	.word	0x0002aa60

00414414 <cvSliceLength>:
  414414:	e24dd008 	sub	sp, sp, #8
  414418:	e28d3008 	add	r3, sp, #8
  41441c:	e9030003 	stmdb	r3, {r0, r1}
  414420:	e5920018 	ldr	r0, [r2, #24]
  414424:	e59d2004 	ldr	r2, [sp, #4]
  414428:	e59d1000 	ldr	r1, [sp]
  41442c:	e0523001 	subs	r3, r2, r1
  414430:	0a000008 	beq	414458 <cvSliceLength+0x44>
  414434:	e3510000 	cmp	r1, #0
  414438:	b0801001 	addlt	r1, r0, r1
  41443c:	b58d1000 	strlt	r1, [sp]
  414440:	e3520000 	cmp	r2, #0
  414444:	d0802002 	addle	r2, r0, r2
  414448:	d58d2004 	strle	r2, [sp, #4]
  41444c:	e59d2000 	ldr	r2, [sp]
  414450:	e59d3004 	ldr	r3, [sp, #4]
  414454:	e0623003 	rsb	r3, r2, r3
  414458:	e3530000 	cmp	r3, #0
  41445c:	b0800003 	addlt	r0, r0, r3
  414460:	ba000001 	blt	41446c <cvSliceLength+0x58>
  414464:	e1530000 	cmp	r3, r0
  414468:	d1a00003 	movle	r0, r3
  41446c:	e28dd008 	add	sp, sp, #8
  414470:	e12fff1e 	bx	lr

00414474 <cvMakeSeqHeaderForArray>:
  414474:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  414478:	e24dd008 	sub	sp, sp, #8
  41447c:	e59d6028 	ldr	r6, [sp, #40]	; 0x28
  414480:	e59d402c 	ldr	r4, [sp, #44]	; 0x2c
  414484:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
  414488:	e2527000 	subs	r7, r2, #0
  41448c:	da000006 	ble	4144ac <cvMakeSeqHeaderForArray+0x38>
  414490:	e1a08000 	mov	r8, r0
  414494:	e1a0a001 	mov	sl, r1
  414498:	e1a09003 	mov	r9, r3
  41449c:	e3510037 	cmp	r1, #55	; 0x37
  4144a0:	da000001 	ble	4144ac <cvMakeSeqHeaderForArray+0x38>
  4144a4:	e3560000 	cmp	r6, #0
  4144a8:	aa00000c 	bge	4144e0 <cvMakeSeqHeaderForArray+0x6c>
  4144ac:	e59f3168 	ldr	r3, [pc, #360]	; 41461c <cvMakeSeqHeaderForArray+0x1a8>
  4144b0:	e58d3000 	str	r3, [sp]
  4144b4:	e3e000c8 	mvn	r0, #200	; 0xc8
  4144b8:	e59f1160 	ldr	r1, [pc, #352]	; 414620 <cvMakeSeqHeaderForArray+0x1ac>
  4144bc:	e08f1001 	add	r1, pc, r1
  4144c0:	e2811f4a 	add	r1, r1, #296	; 0x128
  4144c4:	e59f2158 	ldr	r2, [pc, #344]	; 414624 <cvMakeSeqHeaderForArray+0x1b0>
  4144c8:	e08f2002 	add	r2, pc, r2
  4144cc:	e59f3154 	ldr	r3, [pc, #340]	; 414628 <cvMakeSeqHeaderForArray+0x1b4>
  4144d0:	e08f3003 	add	r3, pc, r3
  4144d4:	ebfff973 	bl	412aa8 <cvError>
  4144d8:	e3a04000 	mov	r4, #0
  4144dc:	ea00004a 	b	41460c <cvMakeSeqHeaderForArray+0x198>
  4144e0:	e3540000 	cmp	r4, #0
  4144e4:	0a000004 	beq	4144fc <cvMakeSeqHeaderForArray+0x88>
  4144e8:	e3550000 	cmp	r5, #0
  4144ec:	13530000 	cmpne	r3, #0
  4144f0:	1a00000e 	bne	414530 <cvMakeSeqHeaderForArray+0xbc>
  4144f4:	e3560000 	cmp	r6, #0
  4144f8:	da00000c 	ble	414530 <cvMakeSeqHeaderForArray+0xbc>
  4144fc:	e3a03faf 	mov	r3, #700	; 0x2bc
  414500:	e58d3000 	str	r3, [sp]
  414504:	e3e0001a 	mvn	r0, #26
  414508:	e59f111c 	ldr	r1, [pc, #284]	; 41462c <cvMakeSeqHeaderForArray+0x1b8>
  41450c:	e08f1001 	add	r1, pc, r1
  414510:	e2811f4a 	add	r1, r1, #296	; 0x128
  414514:	e59f2114 	ldr	r2, [pc, #276]	; 414630 <cvMakeSeqHeaderForArray+0x1bc>
  414518:	e08f2002 	add	r2, pc, r2
  41451c:	e59f3110 	ldr	r3, [pc, #272]	; 414634 <cvMakeSeqHeaderForArray+0x1c0>
  414520:	e08f3003 	add	r3, pc, r3
  414524:	ebfff95f 	bl	412aa8 <cvError>
  414528:	e3a04000 	mov	r4, #0
  41452c:	ea000036 	b	41460c <cvMakeSeqHeaderForArray+0x198>
  414530:	e1a00004 	mov	r0, r4
  414534:	e3a01000 	mov	r1, #0
  414538:	e1a0200a 	mov	r2, sl
  41453c:	fa0082e4 	blx	4350d4 <memset>
  414540:	e584a004 	str	sl, [r4, #4]
  414544:	e1a03808 	lsl	r3, r8, #16
  414548:	e1a03823 	lsr	r3, r3, #16
  41454c:	e3833442 	orr	r3, r3, #1107296256	; 0x42000000
  414550:	e3833899 	orr	r3, r3, #10027008	; 0x990000
  414554:	e5843000 	str	r3, [r4]
  414558:	e2083f7e 	and	r3, r8, #504	; 0x1f8
  41455c:	e1a031c3 	asr	r3, r3, #3
  414560:	e2833001 	add	r3, r3, #1
  414564:	e2082007 	and	r2, r8, #7
  414568:	e1a02082 	lsl	r2, r2, #1
  41456c:	e59f10c4 	ldr	r1, [pc, #196]	; 414638 <cvMakeSeqHeaderForArray+0x1c4>
  414570:	e1a02231 	lsr	r2, r1, r2
  414574:	e2022003 	and	r2, r2, #3
  414578:	e1b01b88 	lsls	r1, r8, #23
  41457c:	13a01001 	movne	r1, #1
  414580:	03a01000 	moveq	r1, #0
  414584:	e1b03213 	lsls	r3, r3, r2
  414588:	03a02000 	moveq	r2, #0
  41458c:	12012001 	andne	r2, r1, #1
  414590:	e3520000 	cmp	r2, #0
  414594:	0a00000e 	beq	4145d4 <cvMakeSeqHeaderForArray+0x160>
  414598:	e1530007 	cmp	r3, r7
  41459c:	0a00000c 	beq	4145d4 <cvMakeSeqHeaderForArray+0x160>
  4145a0:	e59f3094 	ldr	r3, [pc, #148]	; 41463c <cvMakeSeqHeaderForArray+0x1c8>
  4145a4:	e58d3000 	str	r3, [sp]
  4145a8:	e3e000c8 	mvn	r0, #200	; 0xc8
  4145ac:	e59f108c 	ldr	r1, [pc, #140]	; 414640 <cvMakeSeqHeaderForArray+0x1cc>
  4145b0:	e08f1001 	add	r1, pc, r1
  4145b4:	e2811f4a 	add	r1, r1, #296	; 0x128
  4145b8:	e59f2084 	ldr	r2, [pc, #132]	; 414644 <cvMakeSeqHeaderForArray+0x1d0>
  4145bc:	e08f2002 	add	r2, pc, r2
  4145c0:	e59f3080 	ldr	r3, [pc, #128]	; 414648 <cvMakeSeqHeaderForArray+0x1d4>
  4145c4:	e08f3003 	add	r3, pc, r3
  4145c8:	ebfff936 	bl	412aa8 <cvError>
  4145cc:	e3a04000 	mov	r4, #0
  4145d0:	ea00000d 	b	41460c <cvMakeSeqHeaderForArray+0x198>
  4145d4:	e584701c 	str	r7, [r4, #28]
  4145d8:	e5846018 	str	r6, [r4, #24]
  4145dc:	e0279796 	mla	r7, r6, r7, r9
  4145e0:	e5847024 	str	r7, [r4, #36]	; 0x24
  4145e4:	e5847020 	str	r7, [r4, #32]
  4145e8:	e3560000 	cmp	r6, #0
  4145ec:	da000006 	ble	41460c <cvMakeSeqHeaderForArray+0x198>
  4145f0:	e5845034 	str	r5, [r4, #52]	; 0x34
  4145f4:	e5855004 	str	r5, [r5, #4]
  4145f8:	e5855000 	str	r5, [r5]
  4145fc:	e3a03000 	mov	r3, #0
  414600:	e5853008 	str	r3, [r5, #8]
  414604:	e585600c 	str	r6, [r5, #12]
  414608:	e5859010 	str	r9, [r5, #16]
  41460c:	e1a00004 	mov	r0, r4
  414610:	e28dd008 	add	sp, sp, #8
  414614:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  414618:	e12fff1e 	bx	lr
  41461c:	000002b9 	.word	0x000002b9
  414620:	1fbec3b0 	.word	0x1fbec3b0
  414624:	0002bf48 	.word	0x0002bf48
  414628:	0002ae74 	.word	0x0002ae74
  41462c:	1fbec360 	.word	0x1fbec360
  414630:	0002bef8 	.word	0x0002bef8
  414634:	0002ae24 	.word	0x0002ae24
  414638:	0000ba50 	.word	0x0000ba50
  41463c:	000002ca 	.word	0x000002ca
  414640:	1fbec2bc 	.word	0x1fbec2bc
  414644:	0002b044 	.word	0x0002b044
  414648:	0002ad80 	.word	0x0002ad80

0041464c <cvStartAppendToSeq>:
  41464c:	e92d4070 	push	{r4, r5, r6, lr}
  414650:	e24dd008 	sub	sp, sp, #8
  414654:	e3510000 	cmp	r1, #0
  414658:	13500000 	cmpne	r0, #0
  41465c:	1a00000b 	bne	414690 <cvStartAppendToSeq+0x44>
  414660:	e59f3078 	ldr	r3, [pc, #120]	; 4146e0 <cvStartAppendToSeq+0x94>
  414664:	e58d3000 	str	r3, [sp]
  414668:	e3e0001a 	mvn	r0, #26
  41466c:	e59f1070 	ldr	r1, [pc, #112]	; 4146e4 <cvStartAppendToSeq+0x98>
  414670:	e08f1001 	add	r1, pc, r1
  414674:	e2811d05 	add	r1, r1, #320	; 0x140
  414678:	e59f2068 	ldr	r2, [pc, #104]	; 4146e8 <cvStartAppendToSeq+0x9c>
  41467c:	e08f2002 	add	r2, pc, r2
  414680:	e59f3064 	ldr	r3, [pc, #100]	; 4146ec <cvStartAppendToSeq+0xa0>
  414684:	e08f3003 	add	r3, pc, r3
  414688:	ebfff906 	bl	412aa8 <cvError>
  41468c:	ea000010 	b	4146d4 <cvStartAppendToSeq+0x88>
  414690:	e1a05000 	mov	r5, r0
  414694:	e1a04001 	mov	r4, r1
  414698:	e3a06018 	mov	r6, #24
  41469c:	e1a00001 	mov	r0, r1
  4146a0:	e3a01000 	mov	r1, #0
  4146a4:	e1a02006 	mov	r2, r6
  4146a8:	fa008289 	blx	4350d4 <memset>
  4146ac:	e5846000 	str	r6, [r4]
  4146b0:	e5845004 	str	r5, [r4, #4]
  4146b4:	e5953034 	ldr	r3, [r5, #52]	; 0x34
  4146b8:	e3530000 	cmp	r3, #0
  4146bc:	15933000 	ldrne	r3, [r3]
  4146c0:	e5843008 	str	r3, [r4, #8]
  4146c4:	e5953024 	ldr	r3, [r5, #36]	; 0x24
  4146c8:	e584300c 	str	r3, [r4, #12]
  4146cc:	e5953020 	ldr	r3, [r5, #32]
  4146d0:	e5843014 	str	r3, [r4, #20]
  4146d4:	e28dd008 	add	sp, sp, #8
  4146d8:	e8bd4070 	pop	{r4, r5, r6, lr}
  4146dc:	e12fff1e 	bx	lr
  4146e0:	000003ae 	.word	0x000003ae
  4146e4:	1fbec1fc 	.word	0x1fbec1fc
  4146e8:	0002bd94 	.word	0x0002bd94
  4146ec:	0002acc0 	.word	0x0002acc0

004146f0 <cvStartWriteSeq>:
  4146f0:	e92d4030 	push	{r4, r5, lr}
  4146f4:	e24dd00c 	sub	sp, sp, #12
  4146f8:	e59d4018 	ldr	r4, [sp, #24]
  4146fc:	e3540000 	cmp	r4, #0
  414700:	13530000 	cmpne	r3, #0
  414704:	1a00000b 	bne	414738 <cvStartWriteSeq+0x48>
  414708:	e3a03ff2 	mov	r3, #968	; 0x3c8
  41470c:	e58d3000 	str	r3, [sp]
  414710:	e3e0001a 	mvn	r0, #26
  414714:	e59f1078 	ldr	r1, [pc, #120]	; 414794 <cvStartWriteSeq+0xa4>
  414718:	e08f1001 	add	r1, pc, r1
  41471c:	e2811f55 	add	r1, r1, #340	; 0x154
  414720:	e59f2070 	ldr	r2, [pc, #112]	; 414798 <cvStartWriteSeq+0xa8>
  414724:	e08f2002 	add	r2, pc, r2
  414728:	e59f306c 	ldr	r3, [pc, #108]	; 41479c <cvStartWriteSeq+0xac>
  41472c:	e08f3003 	add	r3, pc, r3
  414730:	ebfff8dc 	bl	412aa8 <cvError>
  414734:	ea000013 	b	414788 <cvStartWriteSeq+0x98>
  414738:	ebfffd39 	bl	413c24 <cvCreateSeq>
  41473c:	e1a05000 	mov	r5, r0
  414740:	ebfff8a7 	bl	4129e4 <cvGetErrStatus>
  414744:	e3500000 	cmp	r0, #0
  414748:	aa00000b 	bge	41477c <cvStartWriteSeq+0x8c>
  41474c:	e59f304c 	ldr	r3, [pc, #76]	; 4147a0 <cvStartWriteSeq+0xb0>
  414750:	e58d3000 	str	r3, [sp]
  414754:	e3e00000 	mvn	r0, #0
  414758:	e59f1044 	ldr	r1, [pc, #68]	; 4147a4 <cvStartWriteSeq+0xb4>
  41475c:	e08f1001 	add	r1, pc, r1
  414760:	e2811f55 	add	r1, r1, #340	; 0x154
  414764:	e59f203c 	ldr	r2, [pc, #60]	; 4147a8 <cvStartWriteSeq+0xb8>
  414768:	e08f2002 	add	r2, pc, r2
  41476c:	e59f3038 	ldr	r3, [pc, #56]	; 4147ac <cvStartWriteSeq+0xbc>
  414770:	e08f3003 	add	r3, pc, r3
  414774:	ebfff8cb 	bl	412aa8 <cvError>
  414778:	ea000002 	b	414788 <cvStartWriteSeq+0x98>
  41477c:	e1a00005 	mov	r0, r5
  414780:	e1a01004 	mov	r1, r4
  414784:	ebffffb0 	bl	41464c <cvStartAppendToSeq>
  414788:	e28dd00c 	add	sp, sp, #12
  41478c:	e8bd4030 	pop	{r4, r5, lr}
  414790:	e12fff1e 	bx	lr
  414794:	1fbec154 	.word	0x1fbec154
  414798:	0002bcec 	.word	0x0002bcec
  41479c:	0002ac18 	.word	0x0002ac18
  4147a0:	000003ca 	.word	0x000003ca
  4147a4:	1fbec110 	.word	0x1fbec110
  4147a8:	00028868 	.word	0x00028868
  4147ac:	0002abd4 	.word	0x0002abd4

004147b0 <cvFlushSeqWriter>:
  4147b0:	e92d4070 	push	{r4, r5, r6, lr}
  4147b4:	e24dd008 	sub	sp, sp, #8
  4147b8:	e2505000 	subs	r5, r0, #0
  4147bc:	1a00000b 	bne	4147f0 <cvFlushSeqWriter+0x40>
  4147c0:	e3a03ff7 	mov	r3, #988	; 0x3dc
  4147c4:	e58d3000 	str	r3, [sp]
  4147c8:	e3e0001a 	mvn	r0, #26
  4147cc:	e59f10b8 	ldr	r1, [pc, #184]	; 41488c <cvFlushSeqWriter+0xdc>
  4147d0:	e08f1001 	add	r1, pc, r1
  4147d4:	e2811f59 	add	r1, r1, #356	; 0x164
  4147d8:	e59f20b0 	ldr	r2, [pc, #176]	; 414890 <cvFlushSeqWriter+0xe0>
  4147dc:	e08f2002 	add	r2, pc, r2
  4147e0:	e59f30ac 	ldr	r3, [pc, #172]	; 414894 <cvFlushSeqWriter+0xe4>
  4147e4:	e08f3003 	add	r3, pc, r3
  4147e8:	ebfff8ae 	bl	412aa8 <cvError>
  4147ec:	ea000023 	b	414880 <cvFlushSeqWriter+0xd0>
  4147f0:	e5953004 	ldr	r3, [r5, #4]
  4147f4:	e595200c 	ldr	r2, [r5, #12]
  4147f8:	e5832024 	str	r2, [r3, #36]	; 0x24
  4147fc:	e5956008 	ldr	r6, [r5, #8]
  414800:	e3560000 	cmp	r6, #0
  414804:	0a00001d 	beq	414880 <cvFlushSeqWriter+0xd0>
  414808:	e5952004 	ldr	r2, [r5, #4]
  41480c:	e5924034 	ldr	r4, [r2, #52]	; 0x34
  414810:	e595000c 	ldr	r0, [r5, #12]
  414814:	e5962010 	ldr	r2, [r6, #16]
  414818:	e0620000 	rsb	r0, r2, r0
  41481c:	e593101c 	ldr	r1, [r3, #28]
  414820:	fa007463 	blx	4319b4 <__aeabi_idiv>
  414824:	e586000c 	str	r0, [r6, #12]
  414828:	e5953008 	ldr	r3, [r5, #8]
  41482c:	e593300c 	ldr	r3, [r3, #12]
  414830:	e3530000 	cmp	r3, #0
  414834:	ca000008 	bgt	41485c <cvFlushSeqWriter+0xac>
  414838:	e59f0058 	ldr	r0, [pc, #88]	; 414898 <cvFlushSeqWriter+0xe8>
  41483c:	e08f0000 	add	r0, pc, r0
  414840:	e3a01ffa 	mov	r1, #1000	; 0x3e8
  414844:	e59f2050 	ldr	r2, [pc, #80]	; 41489c <cvFlushSeqWriter+0xec>
  414848:	e08f2002 	add	r2, pc, r2
  41484c:	e28220d4 	add	r2, r2, #212	; 0xd4
  414850:	e59f3048 	ldr	r3, [pc, #72]	; 4148a0 <cvFlushSeqWriter+0xf0>
  414854:	e08f3003 	add	r3, pc, r3
  414858:	fa007d3d 	blx	433d54 <__assert_func>
  41485c:	e1a03004 	mov	r3, r4
  414860:	e3a02000 	mov	r2, #0
  414864:	e593100c 	ldr	r1, [r3, #12]
  414868:	e0822001 	add	r2, r2, r1
  41486c:	e5933004 	ldr	r3, [r3, #4]
  414870:	e1530004 	cmp	r3, r4
  414874:	1afffffa 	bne	414864 <cvFlushSeqWriter+0xb4>
  414878:	e5953004 	ldr	r3, [r5, #4]
  41487c:	e5832018 	str	r2, [r3, #24]
  414880:	e28dd008 	add	sp, sp, #8
  414884:	e8bd4070 	pop	{r4, r5, r6, lr}
  414888:	e12fff1e 	bx	lr
  41488c:	1fbec09c 	.word	0x1fbec09c
  414890:	0002bc34 	.word	0x0002bc34
  414894:	0002ab60 	.word	0x0002ab60
  414898:	0002ab08 	.word	0x0002ab08
  41489c:	0002a5b0 	.word	0x0002a5b0
  4148a0:	0002ae18 	.word	0x0002ae18

004148a4 <cvEndWriteSeq>:
  4148a4:	e92d4010 	push	{r4, lr}
  4148a8:	e24dd008 	sub	sp, sp, #8
  4148ac:	e2504000 	subs	r4, r0, #0
  4148b0:	1a00000c 	bne	4148e8 <cvEndWriteSeq+0x44>
  4148b4:	e59f3110 	ldr	r3, [pc, #272]	; 4149cc <cvEndWriteSeq+0x128>
  4148b8:	e58d3000 	str	r3, [sp]
  4148bc:	e3e0001a 	mvn	r0, #26
  4148c0:	e59f1108 	ldr	r1, [pc, #264]	; 4149d0 <cvEndWriteSeq+0x12c>
  4148c4:	e08f1001 	add	r1, pc, r1
  4148c8:	e2811f5e 	add	r1, r1, #376	; 0x178
  4148cc:	e59f2100 	ldr	r2, [pc, #256]	; 4149d4 <cvEndWriteSeq+0x130>
  4148d0:	e08f2002 	add	r2, pc, r2
  4148d4:	e59f30fc 	ldr	r3, [pc, #252]	; 4149d8 <cvEndWriteSeq+0x134>
  4148d8:	e08f3003 	add	r3, pc, r3
  4148dc:	ebfff871 	bl	412aa8 <cvError>
  4148e0:	e3a00000 	mov	r0, #0
  4148e4:	ea000035 	b	4149c0 <cvEndWriteSeq+0x11c>
  4148e8:	e1a00004 	mov	r0, r4
  4148ec:	ebffffaf 	bl	4147b0 <cvFlushSeqWriter>
  4148f0:	ebfff83b 	bl	4129e4 <cvGetErrStatus>
  4148f4:	e3500000 	cmp	r0, #0
  4148f8:	aa00000c 	bge	414930 <cvEndWriteSeq+0x8c>
  4148fc:	e59f30d8 	ldr	r3, [pc, #216]	; 4149dc <cvEndWriteSeq+0x138>
  414900:	e58d3000 	str	r3, [sp]
  414904:	e3e00000 	mvn	r0, #0
  414908:	e59f10d0 	ldr	r1, [pc, #208]	; 4149e0 <cvEndWriteSeq+0x13c>
  41490c:	e08f1001 	add	r1, pc, r1
  414910:	e2811f5e 	add	r1, r1, #376	; 0x178
  414914:	e59f20c8 	ldr	r2, [pc, #200]	; 4149e4 <cvEndWriteSeq+0x140>
  414918:	e08f2002 	add	r2, pc, r2
  41491c:	e59f30c4 	ldr	r3, [pc, #196]	; 4149e8 <cvEndWriteSeq+0x144>
  414920:	e08f3003 	add	r3, pc, r3
  414924:	ebfff85f 	bl	412aa8 <cvError>
  414928:	e3a00000 	mov	r0, #0
  41492c:	ea000023 	b	4149c0 <cvEndWriteSeq+0x11c>
  414930:	e5940004 	ldr	r0, [r4, #4]
  414934:	e5942008 	ldr	r2, [r4, #8]
  414938:	e3520000 	cmp	r2, #0
  41493c:	0a00001d 	beq	4149b8 <cvEndWriteSeq+0x114>
  414940:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
  414944:	e3510000 	cmp	r1, #0
  414948:	0a00001a 	beq	4149b8 <cvEndWriteSeq+0x114>
  41494c:	e5913008 	ldr	r3, [r1, #8]
  414950:	e591c010 	ldr	ip, [r1, #16]
  414954:	e083300c 	add	r3, r3, ip
  414958:	e592200c 	ldr	r2, [r2, #12]
  41495c:	e3520000 	cmp	r2, #0
  414960:	ca000008 	bgt	414988 <cvEndWriteSeq+0xe4>
  414964:	e59f0080 	ldr	r0, [pc, #128]	; 4149ec <cvEndWriteSeq+0x148>
  414968:	e08f0000 	add	r0, pc, r0
  41496c:	e59f107c 	ldr	r1, [pc, #124]	; 4149f0 <cvEndWriteSeq+0x14c>
  414970:	e59f207c 	ldr	r2, [pc, #124]	; 4149f4 <cvEndWriteSeq+0x150>
  414974:	e08f2002 	add	r2, pc, r2
  414978:	e28220f8 	add	r2, r2, #248	; 0xf8
  41497c:	e59f3074 	ldr	r3, [pc, #116]	; 4149f8 <cvEndWriteSeq+0x154>
  414980:	e08f3003 	add	r3, pc, r3
  414984:	fa007cf2 	blx	433d54 <__assert_func>
  414988:	e5912014 	ldr	r2, [r1, #20]
  41498c:	e0622003 	rsb	r2, r2, r3
  414990:	e590c020 	ldr	ip, [r0, #32]
  414994:	e06c2002 	rsb	r2, ip, r2
  414998:	e3520008 	cmp	r2, #8
  41499c:	2a000005 	bcs	4149b8 <cvEndWriteSeq+0x114>
  4149a0:	e5902024 	ldr	r2, [r0, #36]	; 0x24
  4149a4:	e0623003 	rsb	r3, r2, r3
  4149a8:	e3c33007 	bic	r3, r3, #7
  4149ac:	e5813014 	str	r3, [r1, #20]
  4149b0:	e5903024 	ldr	r3, [r0, #36]	; 0x24
  4149b4:	e5803020 	str	r3, [r0, #32]
  4149b8:	e3a03000 	mov	r3, #0
  4149bc:	e584300c 	str	r3, [r4, #12]
  4149c0:	e28dd008 	add	sp, sp, #8
  4149c4:	e8bd4010 	pop	{r4, lr}
  4149c8:	e12fff1e 	bx	lr
  4149cc:	00000403 	.word	0x00000403
  4149d0:	1fbebfa8 	.word	0x1fbebfa8
  4149d4:	0002bb40 	.word	0x0002bb40
  4149d8:	0002aa6c 	.word	0x0002aa6c
  4149dc:	00000405 	.word	0x00000405
  4149e0:	1fbebf60 	.word	0x1fbebf60
  4149e4:	000286b8 	.word	0x000286b8
  4149e8:	0002aa24 	.word	0x0002aa24
  4149ec:	0002a9dc 	.word	0x0002a9dc
  4149f0:	0000040e 	.word	0x0000040e
  4149f4:	0002a484 	.word	0x0002a484
  4149f8:	0002acec 	.word	0x0002acec

004149fc <cvCreateSeqBlock>:
  4149fc:	e92d4030 	push	{r4, r5, lr}
  414a00:	e24dd00c 	sub	sp, sp, #12
  414a04:	e2504000 	subs	r4, r0, #0
  414a08:	0a000002 	beq	414a18 <cvCreateSeqBlock+0x1c>
  414a0c:	e5945004 	ldr	r5, [r4, #4]
  414a10:	e3550000 	cmp	r5, #0
  414a14:	1a00000b 	bne	414a48 <cvCreateSeqBlock+0x4c>
  414a18:	e59f30a0 	ldr	r3, [pc, #160]	; 414ac0 <cvCreateSeqBlock+0xc4>
  414a1c:	e58d3000 	str	r3, [sp]
  414a20:	e3e0001a 	mvn	r0, #26
  414a24:	e59f1098 	ldr	r1, [pc, #152]	; 414ac4 <cvCreateSeqBlock+0xc8>
  414a28:	e08f1001 	add	r1, pc, r1
  414a2c:	e2811f62 	add	r1, r1, #392	; 0x188
  414a30:	e59f2090 	ldr	r2, [pc, #144]	; 414ac8 <cvCreateSeqBlock+0xcc>
  414a34:	e08f2002 	add	r2, pc, r2
  414a38:	e59f308c 	ldr	r3, [pc, #140]	; 414acc <cvCreateSeqBlock+0xd0>
  414a3c:	e08f3003 	add	r3, pc, r3
  414a40:	ebfff818 	bl	412aa8 <cvError>
  414a44:	ea00001a 	b	414ab4 <cvCreateSeqBlock+0xb8>
  414a48:	e1a00004 	mov	r0, r4
  414a4c:	ebffff57 	bl	4147b0 <cvFlushSeqWriter>
  414a50:	e1a00005 	mov	r0, r5
  414a54:	e3a01000 	mov	r1, #0
  414a58:	ebfffcfe 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  414a5c:	ebfff7e0 	bl	4129e4 <cvGetErrStatus>
  414a60:	e3500000 	cmp	r0, #0
  414a64:	aa00000b 	bge	414a98 <cvCreateSeqBlock+0x9c>
  414a68:	e59f3060 	ldr	r3, [pc, #96]	; 414ad0 <cvCreateSeqBlock+0xd4>
  414a6c:	e58d3000 	str	r3, [sp]
  414a70:	e3e00000 	mvn	r0, #0
  414a74:	e59f1058 	ldr	r1, [pc, #88]	; 414ad4 <cvCreateSeqBlock+0xd8>
  414a78:	e08f1001 	add	r1, pc, r1
  414a7c:	e2811f62 	add	r1, r1, #392	; 0x188
  414a80:	e59f2050 	ldr	r2, [pc, #80]	; 414ad8 <cvCreateSeqBlock+0xdc>
  414a84:	e08f2002 	add	r2, pc, r2
  414a88:	e59f304c 	ldr	r3, [pc, #76]	; 414adc <cvCreateSeqBlock+0xe0>
  414a8c:	e08f3003 	add	r3, pc, r3
  414a90:	ebfff804 	bl	412aa8 <cvError>
  414a94:	ea000006 	b	414ab4 <cvCreateSeqBlock+0xb8>
  414a98:	e5953034 	ldr	r3, [r5, #52]	; 0x34
  414a9c:	e5933000 	ldr	r3, [r3]
  414aa0:	e5843008 	str	r3, [r4, #8]
  414aa4:	e5953024 	ldr	r3, [r5, #36]	; 0x24
  414aa8:	e584300c 	str	r3, [r4, #12]
  414aac:	e5953020 	ldr	r3, [r5, #32]
  414ab0:	e5843014 	str	r3, [r4, #20]
  414ab4:	e28dd00c 	add	sp, sp, #12
  414ab8:	e8bd4030 	pop	{r4, r5, lr}
  414abc:	e12fff1e 	bx	lr
  414ac0:	0000042b 	.word	0x0000042b
  414ac4:	1fbebe44 	.word	0x1fbebe44
  414ac8:	0002b9dc 	.word	0x0002b9dc
  414acc:	0002a908 	.word	0x0002a908
  414ad0:	00000431 	.word	0x00000431
  414ad4:	1fbebdf4 	.word	0x1fbebdf4
  414ad8:	0002854c 	.word	0x0002854c
  414adc:	0002a8b8 	.word	0x0002a8b8

00414ae0 <cvStartReadSeq>:
  414ae0:	e92d4070 	push	{r4, r5, r6, lr}
  414ae4:	e24dd008 	sub	sp, sp, #8
  414ae8:	e3510000 	cmp	r1, #0
  414aec:	0a000005 	beq	414b08 <cvStartReadSeq+0x28>
  414af0:	e3a03000 	mov	r3, #0
  414af4:	e5813004 	str	r3, [r1, #4]
  414af8:	e5813008 	str	r3, [r1, #8]
  414afc:	e5813010 	str	r3, [r1, #16]
  414b00:	e5813014 	str	r3, [r1, #20]
  414b04:	e581300c 	str	r3, [r1, #12]
  414b08:	e3510000 	cmp	r1, #0
  414b0c:	13500000 	cmpne	r0, #0
  414b10:	1a00000b 	bne	414b44 <cvStartReadSeq+0x64>
  414b14:	e59f30cc 	ldr	r3, [pc, #204]	; 414be8 <cvStartReadSeq+0x108>
  414b18:	e58d3000 	str	r3, [sp]
  414b1c:	e3e0001a 	mvn	r0, #26
  414b20:	e59f10c4 	ldr	r1, [pc, #196]	; 414bec <cvStartReadSeq+0x10c>
  414b24:	e08f1001 	add	r1, pc, r1
  414b28:	e2811f67 	add	r1, r1, #412	; 0x19c
  414b2c:	e59f20bc 	ldr	r2, [pc, #188]	; 414bf0 <cvStartReadSeq+0x110>
  414b30:	e08f2002 	add	r2, pc, r2
  414b34:	e59f30b8 	ldr	r3, [pc, #184]	; 414bf4 <cvStartReadSeq+0x114>
  414b38:	e08f3003 	add	r3, pc, r3
  414b3c:	ebfff7d9 	bl	412aa8 <cvError>
  414b40:	ea000025 	b	414bdc <cvStartReadSeq+0xfc>
  414b44:	e3a03020 	mov	r3, #32
  414b48:	e5813000 	str	r3, [r1]
  414b4c:	e5810004 	str	r0, [r1, #4]
  414b50:	e5903034 	ldr	r3, [r0, #52]	; 0x34
  414b54:	e3530000 	cmp	r3, #0
  414b58:	0a000018 	beq	414bc0 <cvStartReadSeq+0xe0>
  414b5c:	e5934000 	ldr	r4, [r3]
  414b60:	e5935010 	ldr	r5, [r3, #16]
  414b64:	e581500c 	str	r5, [r1, #12]
  414b68:	e594c00c 	ldr	ip, [r4, #12]
  414b6c:	e24cc001 	sub	ip, ip, #1
  414b70:	e590e01c 	ldr	lr, [r0, #28]
  414b74:	e5946010 	ldr	r6, [r4, #16]
  414b78:	e02c6c9e 	mla	ip, lr, ip, r6
  414b7c:	e581c01c 	str	ip, [r1, #28]
  414b80:	e590e034 	ldr	lr, [r0, #52]	; 0x34
  414b84:	e59ee008 	ldr	lr, [lr, #8]
  414b88:	e581e018 	str	lr, [r1, #24]
  414b8c:	e3520000 	cmp	r2, #0
  414b90:	1581c00c 	strne	ip, [r1, #12]
  414b94:	1581501c 	strne	r5, [r1, #28]
  414b98:	15814008 	strne	r4, [r1, #8]
  414b9c:	05813008 	streq	r3, [r1, #8]
  414ba0:	e5912008 	ldr	r2, [r1, #8]
  414ba4:	e5923010 	ldr	r3, [r2, #16]
  414ba8:	e5813010 	str	r3, [r1, #16]
  414bac:	e592c00c 	ldr	ip, [r2, #12]
  414bb0:	e590201c 	ldr	r2, [r0, #28]
  414bb4:	e0233c92 	mla	r3, r2, ip, r3
  414bb8:	e5813014 	str	r3, [r1, #20]
  414bbc:	ea000006 	b	414bdc <cvStartReadSeq+0xfc>
  414bc0:	e3a03000 	mov	r3, #0
  414bc4:	e5813018 	str	r3, [r1, #24]
  414bc8:	e5813008 	str	r3, [r1, #8]
  414bcc:	e5813014 	str	r3, [r1, #20]
  414bd0:	e5813010 	str	r3, [r1, #16]
  414bd4:	e581301c 	str	r3, [r1, #28]
  414bd8:	e581300c 	str	r3, [r1, #12]
  414bdc:	e28dd008 	add	sp, sp, #8
  414be0:	e8bd4070 	pop	{r4, r5, r6, lr}
  414be4:	e12fff1e 	bx	lr
  414be8:	00000452 	.word	0x00000452
  414bec:	1fbebd48 	.word	0x1fbebd48
  414bf0:	0002b8e0 	.word	0x0002b8e0
  414bf4:	0002a80c 	.word	0x0002a80c

00414bf8 <cvChangeSeqBlock>:
  414bf8:	e3500000 	cmp	r0, #0
  414bfc:	1a00000d 	bne	414c38 <cvChangeSeqBlock+0x40>
  414c00:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  414c04:	e24dd00c 	sub	sp, sp, #12
  414c08:	e59f30a0 	ldr	r3, [pc, #160]	; 414cb0 <cvChangeSeqBlock+0xb8>
  414c0c:	e58d3000 	str	r3, [sp]
  414c10:	e3e0001a 	mvn	r0, #26
  414c14:	e59f1098 	ldr	r1, [pc, #152]	; 414cb4 <cvChangeSeqBlock+0xbc>
  414c18:	e08f1001 	add	r1, pc, r1
  414c1c:	e2811f6b 	add	r1, r1, #428	; 0x1ac
  414c20:	e59f2090 	ldr	r2, [pc, #144]	; 414cb8 <cvChangeSeqBlock+0xc0>
  414c24:	e08f2002 	add	r2, pc, r2
  414c28:	e59f308c 	ldr	r3, [pc, #140]	; 414cbc <cvChangeSeqBlock+0xc4>
  414c2c:	e08f3003 	add	r3, pc, r3
  414c30:	ebfff79c 	bl	412aa8 <cvError>
  414c34:	ea00001a 	b	414ca4 <cvChangeSeqBlock+0xac>
  414c38:	e3510000 	cmp	r1, #0
  414c3c:	da000005 	ble	414c58 <cvChangeSeqBlock+0x60>
  414c40:	e5903008 	ldr	r3, [r0, #8]
  414c44:	e5933004 	ldr	r3, [r3, #4]
  414c48:	e5803008 	str	r3, [r0, #8]
  414c4c:	e5933010 	ldr	r3, [r3, #16]
  414c50:	e580300c 	str	r3, [r0, #12]
  414c54:	ea000009 	b	414c80 <cvChangeSeqBlock+0x88>
  414c58:	e5903008 	ldr	r3, [r0, #8]
  414c5c:	e5931000 	ldr	r1, [r3]
  414c60:	e5801008 	str	r1, [r0, #8]
  414c64:	e591300c 	ldr	r3, [r1, #12]
  414c68:	e2433001 	sub	r3, r3, #1
  414c6c:	e5902004 	ldr	r2, [r0, #4]
  414c70:	e592201c 	ldr	r2, [r2, #28]
  414c74:	e5911010 	ldr	r1, [r1, #16]
  414c78:	e0231392 	mla	r3, r2, r3, r1
  414c7c:	e580300c 	str	r3, [r0, #12]
  414c80:	e5902008 	ldr	r2, [r0, #8]
  414c84:	e5923010 	ldr	r3, [r2, #16]
  414c88:	e5803010 	str	r3, [r0, #16]
  414c8c:	e590c004 	ldr	ip, [r0, #4]
  414c90:	e592100c 	ldr	r1, [r2, #12]
  414c94:	e59c201c 	ldr	r2, [ip, #28]
  414c98:	e0233192 	mla	r3, r2, r1, r3
  414c9c:	e5803014 	str	r3, [r0, #20]
  414ca0:	e12fff1e 	bx	lr
  414ca4:	e28dd00c 	add	sp, sp, #12
  414ca8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  414cac:	e12fff1e 	bx	lr
  414cb0:	00000488 	.word	0x00000488
  414cb4:	1fbebc54 	.word	0x1fbebc54
  414cb8:	0002b7ec 	.word	0x0002b7ec
  414cbc:	0002a718 	.word	0x0002a718

00414cc0 <_ZL21icvSeqElemsClearFlagsP5CvSeqii>:
  414cc0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  414cc4:	e24dd028 	sub	sp, sp, #40	; 0x28
  414cc8:	e3500000 	cmp	r0, #0
  414ccc:	1a00000b 	bne	414d00 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x40>
  414cd0:	e59f310c 	ldr	r3, [pc, #268]	; 414de4 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x124>
  414cd4:	e58d3000 	str	r3, [sp]
  414cd8:	e3e0001a 	mvn	r0, #26
  414cdc:	e59f1104 	ldr	r1, [pc, #260]	; 414de8 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x128>
  414ce0:	e08f1001 	add	r1, pc, r1
  414ce4:	e2811d07 	add	r1, r1, #448	; 0x1c0
  414ce8:	e59f20fc 	ldr	r2, [pc, #252]	; 414dec <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x12c>
  414cec:	e08f2002 	add	r2, pc, r2
  414cf0:	e59f30f8 	ldr	r3, [pc, #248]	; 414df0 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x130>
  414cf4:	e08f3003 	add	r3, pc, r3
  414cf8:	ebfff76a 	bl	412aa8 <cvError>
  414cfc:	ea000035 	b	414dd8 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x118>
  414d00:	e1a07002 	mov	r7, r2
  414d04:	e590301c 	ldr	r3, [r0, #28]
  414d08:	e5906018 	ldr	r6, [r0, #24]
  414d0c:	e1a05001 	mov	r5, r1
  414d10:	e1a08003 	mov	r8, r3
  414d14:	e1510003 	cmp	r1, r3
  414d18:	9a00000b 	bls	414d4c <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x8c>
  414d1c:	e3a03ed2 	mov	r3, #3360	; 0xd20
  414d20:	e58d3000 	str	r3, [sp]
  414d24:	e3e00004 	mvn	r0, #4
  414d28:	e59f10c4 	ldr	r1, [pc, #196]	; 414df4 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x134>
  414d2c:	e08f1001 	add	r1, pc, r1
  414d30:	e2811d07 	add	r1, r1, #448	; 0x1c0
  414d34:	e59f20bc 	ldr	r2, [pc, #188]	; 414df8 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x138>
  414d38:	e08f2002 	add	r2, pc, r2
  414d3c:	e59f30b8 	ldr	r3, [pc, #184]	; 414dfc <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x13c>
  414d40:	e08f3003 	add	r3, pc, r3
  414d44:	ebfff757 	bl	412aa8 <cvError>
  414d48:	ea000022 	b	414dd8 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x118>
  414d4c:	e28d1008 	add	r1, sp, #8
  414d50:	e3a02000 	mov	r2, #0
  414d54:	ebffff61 	bl	414ae0 <cvStartReadSeq>
  414d58:	ebfff721 	bl	4129e4 <cvGetErrStatus>
  414d5c:	e3500000 	cmp	r0, #0
  414d60:	aa000019 	bge	414dcc <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x10c>
  414d64:	e59f3094 	ldr	r3, [pc, #148]	; 414e00 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x140>
  414d68:	e58d3000 	str	r3, [sp]
  414d6c:	e3e00000 	mvn	r0, #0
  414d70:	e59f108c 	ldr	r1, [pc, #140]	; 414e04 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x144>
  414d74:	e08f1001 	add	r1, pc, r1
  414d78:	e2811d07 	add	r1, r1, #448	; 0x1c0
  414d7c:	e59f2084 	ldr	r2, [pc, #132]	; 414e08 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x148>
  414d80:	e08f2002 	add	r2, pc, r2
  414d84:	e59f3080 	ldr	r3, [pc, #128]	; 414e0c <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x14c>
  414d88:	e08f3003 	add	r3, pc, r3
  414d8c:	ebfff745 	bl	412aa8 <cvError>
  414d90:	ea000010 	b	414dd8 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x118>
  414d94:	e59d2014 	ldr	r2, [sp, #20]
  414d98:	e7923005 	ldr	r3, [r2, r5]
  414d9c:	e1c33007 	bic	r3, r3, r7
  414da0:	e7823005 	str	r3, [r2, r5]
  414da4:	e59d3014 	ldr	r3, [sp, #20]
  414da8:	e0833008 	add	r3, r3, r8
  414dac:	e58d3014 	str	r3, [sp, #20]
  414db0:	e59d201c 	ldr	r2, [sp, #28]
  414db4:	e1530002 	cmp	r3, r2
  414db8:	228d0008 	addcs	r0, sp, #8
  414dbc:	23a01001 	movcs	r1, #1
  414dc0:	2bffff8c 	blcs	414bf8 <cvChangeSeqBlock>
  414dc4:	e2844001 	add	r4, r4, #1
  414dc8:	ea000000 	b	414dd0 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0x110>
  414dcc:	e3a04000 	mov	r4, #0
  414dd0:	e1540006 	cmp	r4, r6
  414dd4:	baffffee 	blt	414d94 <_ZL21icvSeqElemsClearFlagsP5CvSeqii+0xd4>
  414dd8:	e28dd028 	add	sp, sp, #40	; 0x28
  414ddc:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  414de0:	e12fff1e 	bx	lr
  414de4:	00000d1a 	.word	0x00000d1a
  414de8:	1fbebb8c 	.word	0x1fbebb8c
  414dec:	0002b724 	.word	0x0002b724
  414df0:	0002a650 	.word	0x0002a650
  414df4:	1fbebb40 	.word	0x1fbebb40
  414df8:	0002b6d8 	.word	0x0002b6d8
  414dfc:	0002a604 	.word	0x0002a604
  414e00:	00000d22 	.word	0x00000d22
  414e04:	1fbebaf8 	.word	0x1fbebaf8
  414e08:	00028250 	.word	0x00028250
  414e0c:	0002a5bc 	.word	0x0002a5bc

00414e10 <cvGetSeqReaderPos>:
  414e10:	e92d4010 	push	{r4, lr}
  414e14:	e24dd008 	sub	sp, sp, #8
  414e18:	e2504000 	subs	r4, r0, #0
  414e1c:	0a000002 	beq	414e2c <cvGetSeqReaderPos+0x1c>
  414e20:	e594300c 	ldr	r3, [r4, #12]
  414e24:	e3530000 	cmp	r3, #0
  414e28:	1a00000c 	bne	414e60 <cvGetSeqReaderPos+0x50>
  414e2c:	e59f3098 	ldr	r3, [pc, #152]	; 414ecc <cvGetSeqReaderPos+0xbc>
  414e30:	e58d3000 	str	r3, [sp]
  414e34:	e3e0001a 	mvn	r0, #26
  414e38:	e59f1090 	ldr	r1, [pc, #144]	; 414ed0 <cvGetSeqReaderPos+0xc0>
  414e3c:	e08f1001 	add	r1, pc, r1
  414e40:	e2811f75 	add	r1, r1, #468	; 0x1d4
  414e44:	e59f2088 	ldr	r2, [pc, #136]	; 414ed4 <cvGetSeqReaderPos+0xc4>
  414e48:	e08f2002 	add	r2, pc, r2
  414e4c:	e59f3084 	ldr	r3, [pc, #132]	; 414ed8 <cvGetSeqReaderPos+0xc8>
  414e50:	e08f3003 	add	r3, pc, r3
  414e54:	ebfff713 	bl	412aa8 <cvError>
  414e58:	e3e00000 	mvn	r0, #0
  414e5c:	ea000017 	b	414ec0 <cvGetSeqReaderPos+0xb0>
  414e60:	e5942004 	ldr	r2, [r4, #4]
  414e64:	e592101c 	ldr	r1, [r2, #28]
  414e68:	e3510020 	cmp	r1, #32
  414e6c:	ca000005 	bgt	414e88 <cvGetSeqReaderPos+0x78>
  414e70:	e59f2064 	ldr	r2, [pc, #100]	; 414edc <cvGetSeqReaderPos+0xcc>
  414e74:	e08f2002 	add	r2, pc, r2
  414e78:	e0822001 	add	r2, r2, r1
  414e7c:	e5d200b3 	ldrb	r0, [r2, #179]	; 0xb3
  414e80:	e3a02001 	mov	r2, #1
  414e84:	ea000001 	b	414e90 <cvGetSeqReaderPos+0x80>
  414e88:	e3a02000 	mov	r2, #0
  414e8c:	e3e00000 	mvn	r0, #0
  414e90:	e3520000 	cmp	r2, #0
  414e94:	15942010 	ldrne	r2, [r4, #16]
  414e98:	10623003 	rsbne	r3, r2, r3
  414e9c:	11a00053 	asrne	r0, r3, r0
  414ea0:	05940010 	ldreq	r0, [r4, #16]
  414ea4:	00600003 	rsbeq	r0, r0, r3
  414ea8:	0b00ae28 	bleq	440750 <____aeabi_idiv_from_arm>
  414eac:	e5943008 	ldr	r3, [r4, #8]
  414eb0:	e5933008 	ldr	r3, [r3, #8]
  414eb4:	e5942018 	ldr	r2, [r4, #24]
  414eb8:	e0623003 	rsb	r3, r2, r3
  414ebc:	e0830000 	add	r0, r3, r0
  414ec0:	e28dd008 	add	sp, sp, #8
  414ec4:	e8bd4010 	pop	{r4, lr}
  414ec8:	e12fff1e 	bx	lr
  414ecc:	000004a7 	.word	0x000004a7
  414ed0:	1fbeba30 	.word	0x1fbeba30
  414ed4:	0002b5c8 	.word	0x0002b5c8
  414ed8:	0002a4f4 	.word	0x0002a4f4
  414edc:	00029f84 	.word	0x00029f84

00414ee0 <cvSetSeqReaderPos>:
  414ee0:	e92d4010 	push	{r4, lr}
  414ee4:	e24dd008 	sub	sp, sp, #8
  414ee8:	e3500000 	cmp	r0, #0
  414eec:	0a000002 	beq	414efc <cvSetSeqReaderPos+0x1c>
  414ef0:	e5903004 	ldr	r3, [r0, #4]
  414ef4:	e3530000 	cmp	r3, #0
  414ef8:	1a00000b 	bne	414f2c <cvSetSeqReaderPos+0x4c>
  414efc:	e59f31e8 	ldr	r3, [pc, #488]	; 4150ec <cvSetSeqReaderPos+0x20c>
  414f00:	e58d3000 	str	r3, [sp]
  414f04:	e3e0001a 	mvn	r0, #26
  414f08:	e59f11e0 	ldr	r1, [pc, #480]	; 4150f0 <cvSetSeqReaderPos+0x210>
  414f0c:	e08f1001 	add	r1, pc, r1
  414f10:	e2811f7a 	add	r1, r1, #488	; 0x1e8
  414f14:	e59f21d8 	ldr	r2, [pc, #472]	; 4150f4 <cvSetSeqReaderPos+0x214>
  414f18:	e08f2002 	add	r2, pc, r2
  414f1c:	e59f31d4 	ldr	r3, [pc, #468]	; 4150f8 <cvSetSeqReaderPos+0x218>
  414f20:	e08f3003 	add	r3, pc, r3
  414f24:	ebfff6df 	bl	412aa8 <cvError>
  414f28:	ea00006c 	b	4150e0 <cvSetSeqReaderPos+0x200>
  414f2c:	e593c018 	ldr	ip, [r3, #24]
  414f30:	e593e01c 	ldr	lr, [r3, #28]
  414f34:	e3520000 	cmp	r2, #0
  414f38:	1a000043 	bne	41504c <cvSetSeqReaderPos+0x16c>
  414f3c:	e3510000 	cmp	r1, #0
  414f40:	aa000010 	bge	414f88 <cvSetSeqReaderPos+0xa8>
  414f44:	e26c2000 	rsb	r2, ip, #0
  414f48:	e1520001 	cmp	r2, r1
  414f4c:	da00000b 	ble	414f80 <cvSetSeqReaderPos+0xa0>
  414f50:	e59f31a4 	ldr	r3, [pc, #420]	; 4150fc <cvSetSeqReaderPos+0x21c>
  414f54:	e58d3000 	str	r3, [sp]
  414f58:	e3e000d2 	mvn	r0, #210	; 0xd2
  414f5c:	e59f119c 	ldr	r1, [pc, #412]	; 415100 <cvSetSeqReaderPos+0x220>
  414f60:	e08f1001 	add	r1, pc, r1
  414f64:	e2811f7a 	add	r1, r1, #488	; 0x1e8
  414f68:	e59f2194 	ldr	r2, [pc, #404]	; 415104 <cvSetSeqReaderPos+0x224>
  414f6c:	e08f2002 	add	r2, pc, r2
  414f70:	e59f3190 	ldr	r3, [pc, #400]	; 415108 <cvSetSeqReaderPos+0x228>
  414f74:	e08f3003 	add	r3, pc, r3
  414f78:	ebfff6ca 	bl	412aa8 <cvError>
  414f7c:	ea000057 	b	4150e0 <cvSetSeqReaderPos+0x200>
  414f80:	e081100c 	add	r1, r1, ip
  414f84:	ea000010 	b	414fcc <cvSetSeqReaderPos+0xec>
  414f88:	e151000c 	cmp	r1, ip
  414f8c:	ba00000e 	blt	414fcc <cvSetSeqReaderPos+0xec>
  414f90:	e06c1001 	rsb	r1, ip, r1
  414f94:	e151000c 	cmp	r1, ip
  414f98:	ba00000b 	blt	414fcc <cvSetSeqReaderPos+0xec>
  414f9c:	e59f3168 	ldr	r3, [pc, #360]	; 41510c <cvSetSeqReaderPos+0x22c>
  414fa0:	e58d3000 	str	r3, [sp]
  414fa4:	e3e000d2 	mvn	r0, #210	; 0xd2
  414fa8:	e59f1160 	ldr	r1, [pc, #352]	; 415110 <cvSetSeqReaderPos+0x230>
  414fac:	e08f1001 	add	r1, pc, r1
  414fb0:	e2811f7a 	add	r1, r1, #488	; 0x1e8
  414fb4:	e59f2158 	ldr	r2, [pc, #344]	; 415114 <cvSetSeqReaderPos+0x234>
  414fb8:	e08f2002 	add	r2, pc, r2
  414fbc:	e59f3154 	ldr	r3, [pc, #340]	; 415118 <cvSetSeqReaderPos+0x238>
  414fc0:	e08f3003 	add	r3, pc, r3
  414fc4:	ebfff6b7 	bl	412aa8 <cvError>
  414fc8:	ea000044 	b	4150e0 <cvSetSeqReaderPos+0x200>
  414fcc:	e5933034 	ldr	r3, [r3, #52]	; 0x34
  414fd0:	e593200c 	ldr	r2, [r3, #12]
  414fd4:	e1510002 	cmp	r1, r2
  414fd8:	ba00000d 	blt	415014 <cvSetSeqReaderPos+0x134>
  414fdc:	e15c0081 	cmp	ip, r1, lsl #1
  414fe0:	ba000005 	blt	414ffc <cvSetSeqReaderPos+0x11c>
  414fe4:	e5933004 	ldr	r3, [r3, #4]
  414fe8:	e0621001 	rsb	r1, r2, r1
  414fec:	e593200c 	ldr	r2, [r3, #12]
  414ff0:	e1510002 	cmp	r1, r2
  414ff4:	aafffffa 	bge	414fe4 <cvSetSeqReaderPos+0x104>
  414ff8:	ea000005 	b	415014 <cvSetSeqReaderPos+0x134>
  414ffc:	e5933000 	ldr	r3, [r3]
  415000:	e593200c 	ldr	r2, [r3, #12]
  415004:	e062c00c 	rsb	ip, r2, ip
  415008:	e151000c 	cmp	r1, ip
  41500c:	bafffffa 	blt	414ffc <cvSetSeqReaderPos+0x11c>
  415010:	e06c1001 	rsb	r1, ip, r1
  415014:	e5932010 	ldr	r2, [r3, #16]
  415018:	e021219e 	mla	r1, lr, r1, r2
  41501c:	e580100c 	str	r1, [r0, #12]
  415020:	e5902008 	ldr	r2, [r0, #8]
  415024:	e1520003 	cmp	r2, r3
  415028:	0a00002c 	beq	4150e0 <cvSetSeqReaderPos+0x200>
  41502c:	e5803008 	str	r3, [r0, #8]
  415030:	e5932010 	ldr	r2, [r3, #16]
  415034:	e5802010 	str	r2, [r0, #16]
  415038:	e593200c 	ldr	r2, [r3, #12]
  41503c:	e5933010 	ldr	r3, [r3, #16]
  415040:	e02e3e92 	mla	lr, r2, lr, r3
  415044:	e580e014 	str	lr, [r0, #20]
  415048:	ea000024 	b	4150e0 <cvSetSeqReaderPos+0x200>
  41504c:	e590200c 	ldr	r2, [r0, #12]
  415050:	e001019e 	mul	r1, lr, r1
  415054:	e5903008 	ldr	r3, [r0, #8]
  415058:	e3510000 	cmp	r1, #0
  41505c:	ca00000a 	bgt	41508c <cvSetSeqReaderPos+0x1ac>
  415060:	ea000019 	b	4150cc <cvSetSeqReaderPos+0x1ec>
  415064:	e062200c 	rsb	r2, r2, ip
  415068:	e0621001 	rsb	r1, r2, r1
  41506c:	e5933004 	ldr	r3, [r3, #4]
  415070:	e5803008 	str	r3, [r0, #8]
  415074:	e5932010 	ldr	r2, [r3, #16]
  415078:	e5802010 	str	r2, [r0, #16]
  41507c:	e593c00c 	ldr	ip, [r3, #12]
  415080:	e5934010 	ldr	r4, [r3, #16]
  415084:	e02c4c9e 	mla	ip, lr, ip, r4
  415088:	e580c014 	str	ip, [r0, #20]
  41508c:	e0824001 	add	r4, r2, r1
  415090:	e590c014 	ldr	ip, [r0, #20]
  415094:	e154000c 	cmp	r4, ip
  415098:	2afffff1 	bcs	415064 <cvSetSeqReaderPos+0x184>
  41509c:	e580400c 	str	r4, [r0, #12]
  4150a0:	ea00000e 	b	4150e0 <cvSetSeqReaderPos+0x200>
  4150a4:	e06c2002 	rsb	r2, ip, r2
  4150a8:	e0811002 	add	r1, r1, r2
  4150ac:	e5933000 	ldr	r3, [r3]
  4150b0:	e5803008 	str	r3, [r0, #8]
  4150b4:	e5932010 	ldr	r2, [r3, #16]
  4150b8:	e5802010 	str	r2, [r0, #16]
  4150bc:	e593c010 	ldr	ip, [r3, #16]
  4150c0:	e593200c 	ldr	r2, [r3, #12]
  4150c4:	e022c29e 	mla	r2, lr, r2, ip
  4150c8:	e5802014 	str	r2, [r0, #20]
  4150cc:	e0824001 	add	r4, r2, r1
  4150d0:	e590c010 	ldr	ip, [r0, #16]
  4150d4:	e154000c 	cmp	r4, ip
  4150d8:	3afffff1 	bcc	4150a4 <cvSetSeqReaderPos+0x1c4>
  4150dc:	e580400c 	str	r4, [r0, #12]
  4150e0:	e28dd008 	add	sp, sp, #8
  4150e4:	e8bd4010 	pop	{r4, lr}
  4150e8:	e12fff1e 	bx	lr
  4150ec:	000004c4 	.word	0x000004c4
  4150f0:	1fbeb960 	.word	0x1fbeb960
  4150f4:	0002b4f8 	.word	0x0002b4f8
  4150f8:	0002a424 	.word	0x0002a424
  4150fc:	000004ce 	.word	0x000004ce
  415100:	1fbeb90c 	.word	0x1fbeb90c
  415104:	0002b4a4 	.word	0x0002b4a4
  415108:	0002a3d0 	.word	0x0002a3d0
  41510c:	000004d5 	.word	0x000004d5
  415110:	1fbeb8c0 	.word	0x1fbeb8c0
  415114:	0002b458 	.word	0x0002b458
  415118:	0002a384 	.word	0x0002a384

0041511c <cvCvtSeqToArray>:
  41511c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  415120:	e24dd030 	sub	sp, sp, #48	; 0x30
  415124:	e28dc008 	add	ip, sp, #8
  415128:	e88c000c 	stm	ip, {r2, r3}
  41512c:	e1a08001 	mov	r8, r1
  415130:	e3510000 	cmp	r1, #0
  415134:	13500000 	cmpne	r0, #0
  415138:	1a00000b 	bne	41516c <cvCvtSeqToArray+0x50>
  41513c:	e3a03fa3 	mov	r3, #652	; 0x28c
  415140:	e58d3000 	str	r3, [sp]
  415144:	e3e0001a 	mvn	r0, #26
  415148:	e59f1100 	ldr	r1, [pc, #256]	; 415250 <cvCvtSeqToArray+0x134>
  41514c:	e08f1001 	add	r1, pc, r1
  415150:	e2811f7f 	add	r1, r1, #508	; 0x1fc
  415154:	e59f20f8 	ldr	r2, [pc, #248]	; 415254 <cvCvtSeqToArray+0x138>
  415158:	e08f2002 	add	r2, pc, r2
  41515c:	e59f30f4 	ldr	r3, [pc, #244]	; 415258 <cvCvtSeqToArray+0x13c>
  415160:	e08f3003 	add	r3, pc, r3
  415164:	ebfff64f 	bl	412aa8 <cvError>
  415168:	ea000034 	b	415240 <cvCvtSeqToArray+0x124>
  41516c:	e1a04000 	mov	r4, r0
  415170:	e590701c 	ldr	r7, [r0, #28]
  415174:	e28d3008 	add	r3, sp, #8
  415178:	e8930003 	ldm	r3, {r0, r1}
  41517c:	e1a02004 	mov	r2, r4
  415180:	ebfffca3 	bl	414414 <cvSliceLength>
  415184:	e0150790 	muls	r5, r0, r7
  415188:	0a00002c 	beq	415240 <cvCvtSeqToArray+0x124>
  41518c:	e1a00004 	mov	r0, r4
  415190:	e28d4010 	add	r4, sp, #16
  415194:	e1a01004 	mov	r1, r4
  415198:	e3a02000 	mov	r2, #0
  41519c:	ebfffe4f 	bl	414ae0 <cvStartReadSeq>
  4151a0:	e1a00004 	mov	r0, r4
  4151a4:	e59d1008 	ldr	r1, [sp, #8]
  4151a8:	e3a02000 	mov	r2, #0
  4151ac:	ebffff4b 	bl	414ee0 <cvSetSeqReaderPos>
  4151b0:	ebfff60b 	bl	4129e4 <cvGetErrStatus>
  4151b4:	e3500000 	cmp	r0, #0
  4151b8:	aa00000b 	bge	4151ec <cvCvtSeqToArray+0xd0>
  4151bc:	e59f3098 	ldr	r3, [pc, #152]	; 41525c <cvCvtSeqToArray+0x140>
  4151c0:	e58d3000 	str	r3, [sp]
  4151c4:	e3e00000 	mvn	r0, #0
  4151c8:	e59f1090 	ldr	r1, [pc, #144]	; 415260 <cvCvtSeqToArray+0x144>
  4151cc:	e08f1001 	add	r1, pc, r1
  4151d0:	e2811f7f 	add	r1, r1, #508	; 0x1fc
  4151d4:	e59f2088 	ldr	r2, [pc, #136]	; 415264 <cvCvtSeqToArray+0x148>
  4151d8:	e08f2002 	add	r2, pc, r2
  4151dc:	e59f3084 	ldr	r3, [pc, #132]	; 415268 <cvCvtSeqToArray+0x14c>
  4151e0:	e08f3003 	add	r3, pc, r3
  4151e4:	ebfff62f 	bl	412aa8 <cvError>
  4151e8:	ea000014 	b	415240 <cvCvtSeqToArray+0x124>
  4151ec:	e1a06008 	mov	r6, r8
  4151f0:	e59d101c 	ldr	r1, [sp, #28]
  4151f4:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
  4151f8:	e0614004 	rsb	r4, r1, r4
  4151fc:	e1540005 	cmp	r4, r5
  415200:	c1a04005 	movgt	r4, r5
  415204:	e1a00006 	mov	r0, r6
  415208:	e1a02004 	mov	r2, r4
  41520c:	fa007f31 	blx	434ed8 <memcpy>
  415210:	e0866004 	add	r6, r6, r4
  415214:	e59d3018 	ldr	r3, [sp, #24]
  415218:	e5932004 	ldr	r2, [r3, #4]
  41521c:	e58d2018 	str	r2, [sp, #24]
  415220:	e5921010 	ldr	r1, [r2, #16]
  415224:	e58d101c 	str	r1, [sp, #28]
  415228:	e592300c 	ldr	r3, [r2, #12]
  41522c:	e0231397 	mla	r3, r7, r3, r1
  415230:	e58d3024 	str	r3, [sp, #36]	; 0x24
  415234:	e0645005 	rsb	r5, r4, r5
  415238:	e3550000 	cmp	r5, #0
  41523c:	caffffeb 	bgt	4151f0 <cvCvtSeqToArray+0xd4>
  415240:	e1a00008 	mov	r0, r8
  415244:	e28dd030 	add	sp, sp, #48	; 0x30
  415248:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  41524c:	e12fff1e 	bx	lr
  415250:	1fbeb720 	.word	0x1fbeb720
  415254:	0002b2b8 	.word	0x0002b2b8
  415258:	0002a1e4 	.word	0x0002a1e4
  41525c:	00000295 	.word	0x00000295
  415260:	1fbeb6a0 	.word	0x1fbeb6a0
  415264:	00027df8 	.word	0x00027df8
  415268:	0002a164 	.word	0x0002a164

0041526c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi>:
  41526c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  415270:	e24dd02c 	sub	sp, sp, #44	; 0x2c
  415274:	e59da050 	ldr	sl, [sp, #80]	; 0x50
  415278:	e35a0000 	cmp	sl, #0
  41527c:	13500000 	cmpne	r0, #0
  415280:	1a00000c 	bne	4152b8 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x4c>
  415284:	e59f31cc 	ldr	r3, [pc, #460]	; 415458 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1ec>
  415288:	e58d3000 	str	r3, [sp]
  41528c:	e3e0001a 	mvn	r0, #26
  415290:	e59f11c4 	ldr	r1, [pc, #452]	; 41545c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1f0>
  415294:	e08f1001 	add	r1, pc, r1
  415298:	e2811f83 	add	r1, r1, #524	; 0x20c
  41529c:	e59f21bc 	ldr	r2, [pc, #444]	; 415460 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1f4>
  4152a0:	e08f2002 	add	r2, pc, r2
  4152a4:	e59f31b8 	ldr	r3, [pc, #440]	; 415464 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1f8>
  4152a8:	e08f3003 	add	r3, pc, r3
  4152ac:	ebfff5fd 	bl	412aa8 <cvError>
  4152b0:	e3a00000 	mov	r0, #0
  4152b4:	ea000064 	b	41544c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1e0>
  4152b8:	e1a06002 	mov	r6, r2
  4152bc:	e1a07003 	mov	r7, r3
  4152c0:	e1a0b000 	mov	fp, r0
  4152c4:	e590301c 	ldr	r3, [r0, #28]
  4152c8:	e5905018 	ldr	r5, [r0, #24]
  4152cc:	e59a4000 	ldr	r4, [sl]
  4152d0:	e1a08001 	mov	r8, r1
  4152d4:	e1a09003 	mov	r9, r3
  4152d8:	e1510003 	cmp	r1, r3
  4152dc:	9a00000c 	bls	415314 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0xa8>
  4152e0:	e59f3180 	ldr	r3, [pc, #384]	; 415468 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1fc>
  4152e4:	e58d3000 	str	r3, [sp]
  4152e8:	e3e00004 	mvn	r0, #4
  4152ec:	e59f1178 	ldr	r1, [pc, #376]	; 41546c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x200>
  4152f0:	e08f1001 	add	r1, pc, r1
  4152f4:	e2811f83 	add	r1, r1, #524	; 0x20c
  4152f8:	e59f2170 	ldr	r2, [pc, #368]	; 415470 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x204>
  4152fc:	e08f2002 	add	r2, pc, r2
  415300:	e59f316c 	ldr	r3, [pc, #364]	; 415474 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x208>
  415304:	e08f3003 	add	r3, pc, r3
  415308:	ebfff5e6 	bl	412aa8 <cvError>
  41530c:	e3a00000 	mov	r0, #0
  415310:	ea00004d 	b	41544c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1e0>
  415314:	e3550000 	cmp	r5, #0
  415318:	0a000048 	beq	415440 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1d4>
  41531c:	e1540005 	cmp	r4, r5
  415320:	3a000006 	bcc	415340 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0xd4>
  415324:	e1a00004 	mov	r0, r4
  415328:	e1a01005 	mov	r1, r5
  41532c:	fa0071a7 	blx	4319d0 <__aeabi_idivmod>
  415330:	e3510000 	cmp	r1, #0
  415334:	a3a04000 	movge	r4, #0
  415338:	b1a04005 	movlt	r4, r5
  41533c:	e0844001 	add	r4, r4, r1
  415340:	e1a0000b 	mov	r0, fp
  415344:	e28d1008 	add	r1, sp, #8
  415348:	e3a02000 	mov	r2, #0
  41534c:	ebfffde3 	bl	414ae0 <cvStartReadSeq>
  415350:	ebfff5a3 	bl	4129e4 <cvGetErrStatus>
  415354:	e3500000 	cmp	r0, #0
  415358:	aa00000c 	bge	415390 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x124>
  41535c:	e3a03ed5 	mov	r3, #3408	; 0xd50
  415360:	e58d3000 	str	r3, [sp]
  415364:	e3e00000 	mvn	r0, #0
  415368:	e59f1108 	ldr	r1, [pc, #264]	; 415478 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x20c>
  41536c:	e08f1001 	add	r1, pc, r1
  415370:	e2811f83 	add	r1, r1, #524	; 0x20c
  415374:	e59f2100 	ldr	r2, [pc, #256]	; 41547c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x210>
  415378:	e08f2002 	add	r2, pc, r2
  41537c:	e59f30fc 	ldr	r3, [pc, #252]	; 415480 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x214>
  415380:	e08f3003 	add	r3, pc, r3
  415384:	ebfff5c7 	bl	412aa8 <cvError>
  415388:	e3a00000 	mov	r0, #0
  41538c:	ea00002e 	b	41544c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1e0>
  415390:	e3540000 	cmp	r4, #0
  415394:	0a000006 	beq	4153b4 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x148>
  415398:	e28d0008 	add	r0, sp, #8
  41539c:	e1a01004 	mov	r1, r4
  4153a0:	e3a02000 	mov	r2, #0
  4153a4:	ebfffecd 	bl	414ee0 <cvSetSeqReaderPos>
  4153a8:	ebfff58d 	bl	4129e4 <cvGetErrStatus>
  4153ac:	e3500000 	cmp	r0, #0
  4153b0:	ba000001 	blt	4153bc <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x150>
  4153b4:	e3a04000 	mov	r4, #0
  4153b8:	ea000019 	b	415424 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1b8>
  4153bc:	e59f30c0 	ldr	r3, [pc, #192]	; 415484 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x218>
  4153c0:	e58d3000 	str	r3, [sp]
  4153c4:	e3e00000 	mvn	r0, #0
  4153c8:	e59f10b8 	ldr	r1, [pc, #184]	; 415488 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x21c>
  4153cc:	e08f1001 	add	r1, pc, r1
  4153d0:	e2811f83 	add	r1, r1, #524	; 0x20c
  4153d4:	e59f20b0 	ldr	r2, [pc, #176]	; 41548c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x220>
  4153d8:	e08f2002 	add	r2, pc, r2
  4153dc:	e59f30ac 	ldr	r3, [pc, #172]	; 415490 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x224>
  4153e0:	e08f3003 	add	r3, pc, r3
  4153e4:	ebfff5af 	bl	412aa8 <cvError>
  4153e8:	e3a00000 	mov	r0, #0
  4153ec:	ea000016 	b	41544c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1e0>
  4153f0:	e59d3014 	ldr	r3, [sp, #20]
  4153f4:	e7932008 	ldr	r2, [r3, r8]
  4153f8:	e0022006 	and	r2, r2, r6
  4153fc:	e1520007 	cmp	r2, r7
  415400:	0a000009 	beq	41542c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1c0>
  415404:	e0833009 	add	r3, r3, r9
  415408:	e58d3014 	str	r3, [sp, #20]
  41540c:	e59d201c 	ldr	r2, [sp, #28]
  415410:	e1530002 	cmp	r3, r2
  415414:	228d0008 	addcs	r0, sp, #8
  415418:	23a01001 	movcs	r1, #1
  41541c:	2bfffdf5 	blcs	414bf8 <cvChangeSeqBlock>
  415420:	e2844001 	add	r4, r4, #1
  415424:	e1540005 	cmp	r4, r5
  415428:	bafffff0 	blt	4153f0 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x184>
  41542c:	e1540005 	cmp	r4, r5
  415430:	aa000004 	bge	415448 <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1dc>
  415434:	e59d0014 	ldr	r0, [sp, #20]
  415438:	e58a4000 	str	r4, [sl]
  41543c:	ea000002 	b	41544c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1e0>
  415440:	e3a00000 	mov	r0, #0
  415444:	ea000000 	b	41544c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi+0x1e0>
  415448:	e3a00000 	mov	r0, #0
  41544c:	e28dd02c 	add	sp, sp, #44	; 0x2c
  415450:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  415454:	e12fff1e 	bx	lr
  415458:	00000d3e 	.word	0x00000d3e
  41545c:	1fbeb5d8 	.word	0x1fbeb5d8
  415460:	0002b170 	.word	0x0002b170
  415464:	0002a09c 	.word	0x0002a09c
  415468:	00000d45 	.word	0x00000d45
  41546c:	1fbeb57c 	.word	0x1fbeb57c
  415470:	0002b114 	.word	0x0002b114
  415474:	0002a040 	.word	0x0002a040
  415478:	1fbeb500 	.word	0x1fbeb500
  41547c:	00027c58 	.word	0x00027c58
  415480:	00029fc4 	.word	0x00029fc4
  415484:	00000d53 	.word	0x00000d53
  415488:	1fbeb4a0 	.word	0x1fbeb4a0
  41548c:	00027bf8 	.word	0x00027bf8
  415490:	00029f64 	.word	0x00029f64

00415494 <cvSeqPush>:
  415494:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  415498:	e24dd00c 	sub	sp, sp, #12
  41549c:	e2507000 	subs	r7, r0, #0
  4154a0:	1a00000c 	bne	4154d8 <cvSeqPush+0x44>
  4154a4:	e59f317c 	ldr	r3, [pc, #380]	; 415628 <cvSeqPush+0x194>
  4154a8:	e58d3000 	str	r3, [sp]
  4154ac:	e3e0001a 	mvn	r0, #26
  4154b0:	e59f1174 	ldr	r1, [pc, #372]	; 41562c <cvSeqPush+0x198>
  4154b4:	e08f1001 	add	r1, pc, r1
  4154b8:	e2811e22 	add	r1, r1, #544	; 0x220
  4154bc:	e59f216c 	ldr	r2, [pc, #364]	; 415630 <cvSeqPush+0x19c>
  4154c0:	e08f2002 	add	r2, pc, r2
  4154c4:	e59f3168 	ldr	r3, [pc, #360]	; 415634 <cvSeqPush+0x1a0>
  4154c8:	e08f3003 	add	r3, pc, r3
  4154cc:	ebfff575 	bl	412aa8 <cvError>
  4154d0:	e3a05000 	mov	r5, #0
  4154d4:	ea00004f 	b	415618 <cvSeqPush+0x184>
  4154d8:	e1a06001 	mov	r6, r1
  4154dc:	e597401c 	ldr	r4, [r7, #28]
  4154e0:	e5975024 	ldr	r5, [r7, #36]	; 0x24
  4154e4:	e5973020 	ldr	r3, [r7, #32]
  4154e8:	e1530005 	cmp	r3, r5
  4154ec:	8a00001f 	bhi	415570 <cvSeqPush+0xdc>
  4154f0:	e1a00007 	mov	r0, r7
  4154f4:	e3a01000 	mov	r1, #0
  4154f8:	ebfffa56 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  4154fc:	ebfff538 	bl	4129e4 <cvGetErrStatus>
  415500:	e3500000 	cmp	r0, #0
  415504:	aa00000b 	bge	415538 <cvSeqPush+0xa4>
  415508:	e59f3128 	ldr	r3, [pc, #296]	; 415638 <cvSeqPush+0x1a4>
  41550c:	e58d3000 	str	r3, [sp]
  415510:	e3e00000 	mvn	r0, #0
  415514:	e59f1120 	ldr	r1, [pc, #288]	; 41563c <cvSeqPush+0x1a8>
  415518:	e08f1001 	add	r1, pc, r1
  41551c:	e2811e22 	add	r1, r1, #544	; 0x220
  415520:	e59f2118 	ldr	r2, [pc, #280]	; 415640 <cvSeqPush+0x1ac>
  415524:	e08f2002 	add	r2, pc, r2
  415528:	e59f3114 	ldr	r3, [pc, #276]	; 415644 <cvSeqPush+0x1b0>
  41552c:	e08f3003 	add	r3, pc, r3
  415530:	ebfff55c 	bl	412aa8 <cvError>
  415534:	ea000037 	b	415618 <cvSeqPush+0x184>
  415538:	e5975024 	ldr	r5, [r7, #36]	; 0x24
  41553c:	e0852004 	add	r2, r5, r4
  415540:	e5973020 	ldr	r3, [r7, #32]
  415544:	e1520003 	cmp	r2, r3
  415548:	9a000008 	bls	415570 <cvSeqPush+0xdc>
  41554c:	e59f00f4 	ldr	r0, [pc, #244]	; 415648 <cvSeqPush+0x1b4>
  415550:	e08f0000 	add	r0, pc, r0
  415554:	e59f10f0 	ldr	r1, [pc, #240]	; 41564c <cvSeqPush+0x1b8>
  415558:	e59f20f0 	ldr	r2, [pc, #240]	; 415650 <cvSeqPush+0x1bc>
  41555c:	e08f2002 	add	r2, pc, r2
  415560:	e2822f47 	add	r2, r2, #284	; 0x11c
  415564:	e59f30e8 	ldr	r3, [pc, #232]	; 415654 <cvSeqPush+0x1c0>
  415568:	e08f3003 	add	r3, pc, r3
  41556c:	fa0079f8 	blx	433d54 <__assert_func>
  415570:	e3560000 	cmp	r6, #0
  415574:	0a00001d 	beq	4155f0 <cvSeqPush+0x15c>
  415578:	e3140003 	tst	r4, #3
  41557c:	1a000018 	bne	4155e4 <cvSeqPush+0x150>
  415580:	e3160003 	tst	r6, #3
  415584:	1a000001 	bne	415590 <cvSeqPush+0xfc>
  415588:	e3150003 	tst	r5, #3
  41558c:	0a00000c 	beq	4155c4 <cvSeqPush+0x130>
  415590:	e59f00c0 	ldr	r0, [pc, #192]	; 415658 <cvSeqPush+0x1c4>
  415594:	e08f0000 	add	r0, pc, r0
  415598:	e59f10bc 	ldr	r1, [pc, #188]	; 41565c <cvSeqPush+0x1c8>
  41559c:	e59f20bc 	ldr	r2, [pc, #188]	; 415660 <cvSeqPush+0x1cc>
  4155a0:	e08f2002 	add	r2, pc, r2
  4155a4:	e2822f47 	add	r2, r2, #284	; 0x11c
  4155a8:	e59f30b4 	ldr	r3, [pc, #180]	; 415664 <cvSeqPush+0x1d0>
  4155ac:	e08f3003 	add	r3, pc, r3
  4155b0:	fa0079e7 	blx	433d54 <__assert_func>
  4155b4:	e7962003 	ldr	r2, [r6, r3]
  4155b8:	e7852003 	str	r2, [r5, r3]
  4155bc:	e2833004 	add	r3, r3, #4
  4155c0:	ea000000 	b	4155c8 <cvSeqPush+0x134>
  4155c4:	e3a03000 	mov	r3, #0
  4155c8:	e1530004 	cmp	r3, r4
  4155cc:	3afffff8 	bcc	4155b4 <cvSeqPush+0x120>
  4155d0:	ea000006 	b	4155f0 <cvSeqPush+0x15c>
  4155d4:	e7d62003 	ldrb	r2, [r6, r3]
  4155d8:	e7c52003 	strb	r2, [r5, r3]
  4155dc:	e2833001 	add	r3, r3, #1
  4155e0:	ea000000 	b	4155e8 <cvSeqPush+0x154>
  4155e4:	e3a03000 	mov	r3, #0
  4155e8:	e1530004 	cmp	r3, r4
  4155ec:	3afffff8 	bcc	4155d4 <cvSeqPush+0x140>
  4155f0:	e5973034 	ldr	r3, [r7, #52]	; 0x34
  4155f4:	e5932000 	ldr	r2, [r3]
  4155f8:	e592300c 	ldr	r3, [r2, #12]
  4155fc:	e2833001 	add	r3, r3, #1
  415600:	e582300c 	str	r3, [r2, #12]
  415604:	e5973018 	ldr	r3, [r7, #24]
  415608:	e2833001 	add	r3, r3, #1
  41560c:	e5873018 	str	r3, [r7, #24]
  415610:	e0854004 	add	r4, r5, r4
  415614:	e5874024 	str	r4, [r7, #36]	; 0x24
  415618:	e1a00005 	mov	r0, r5
  41561c:	e28dd00c 	add	sp, sp, #12
  415620:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  415624:	e12fff1e 	bx	lr
  415628:	00000527 	.word	0x00000527
  41562c:	1fbeb3b8 	.word	0x1fbeb3b8
  415630:	0002af50 	.word	0x0002af50
  415634:	00029e7c 	.word	0x00029e7c
  415638:	0000052e 	.word	0x0000052e
  41563c:	1fbeb354 	.word	0x1fbeb354
  415640:	00027aac 	.word	0x00027aac
  415644:	00029e18 	.word	0x00029e18
  415648:	00029df4 	.word	0x00029df4
  41564c:	00000531 	.word	0x00000531
  415650:	0002989c 	.word	0x0002989c
  415654:	0002a120 	.word	0x0002a120
  415658:	00029db0 	.word	0x00029db0
  41565c:	00000535 	.word	0x00000535
  415660:	00029858 	.word	0x00029858
  415664:	00027cdc 	.word	0x00027cdc

00415668 <cvSeqPop>:
  415668:	e92d4010 	push	{r4, lr}
  41566c:	e24dd008 	sub	sp, sp, #8
  415670:	e2504000 	subs	r4, r0, #0
  415674:	1a00000b 	bne	4156a8 <cvSeqPop+0x40>
  415678:	e59f3170 	ldr	r3, [pc, #368]	; 4157f0 <cvSeqPop+0x188>
  41567c:	e58d3000 	str	r3, [sp]
  415680:	e3e0001a 	mvn	r0, #26
  415684:	e59f1168 	ldr	r1, [pc, #360]	; 4157f4 <cvSeqPop+0x18c>
  415688:	e08f1001 	add	r1, pc, r1
  41568c:	e2811f8b 	add	r1, r1, #556	; 0x22c
  415690:	e59f2160 	ldr	r2, [pc, #352]	; 4157f8 <cvSeqPop+0x190>
  415694:	e08f2002 	add	r2, pc, r2
  415698:	e59f315c 	ldr	r3, [pc, #348]	; 4157fc <cvSeqPop+0x194>
  41569c:	e08f3003 	add	r3, pc, r3
  4156a0:	ebfff500 	bl	412aa8 <cvError>
  4156a4:	ea00004e 	b	4157e4 <cvSeqPop+0x17c>
  4156a8:	e5943018 	ldr	r3, [r4, #24]
  4156ac:	e3530000 	cmp	r3, #0
  4156b0:	ca00000b 	bgt	4156e4 <cvSeqPop+0x7c>
  4156b4:	e59f3144 	ldr	r3, [pc, #324]	; 415800 <cvSeqPop+0x198>
  4156b8:	e58d3000 	str	r3, [sp]
  4156bc:	e3e000c8 	mvn	r0, #200	; 0xc8
  4156c0:	e59f113c 	ldr	r1, [pc, #316]	; 415804 <cvSeqPop+0x19c>
  4156c4:	e08f1001 	add	r1, pc, r1
  4156c8:	e2811f8b 	add	r1, r1, #556	; 0x22c
  4156cc:	e59f2134 	ldr	r2, [pc, #308]	; 415808 <cvSeqPop+0x1a0>
  4156d0:	e08f2002 	add	r2, pc, r2
  4156d4:	e59f3130 	ldr	r3, [pc, #304]	; 41580c <cvSeqPop+0x1a4>
  4156d8:	e08f3003 	add	r3, pc, r3
  4156dc:	ebfff4f1 	bl	412aa8 <cvError>
  4156e0:	ea00003f 	b	4157e4 <cvSeqPop+0x17c>
  4156e4:	e594301c 	ldr	r3, [r4, #28]
  4156e8:	e5942024 	ldr	r2, [r4, #36]	; 0x24
  4156ec:	e1a00003 	mov	r0, r3
  4156f0:	e0632002 	rsb	r2, r3, r2
  4156f4:	e5842024 	str	r2, [r4, #36]	; 0x24
  4156f8:	e3510000 	cmp	r1, #0
  4156fc:	0a00001d 	beq	415778 <cvSeqPop+0x110>
  415700:	e3130003 	tst	r3, #3
  415704:	1a000018 	bne	41576c <cvSeqPop+0x104>
  415708:	e3120003 	tst	r2, #3
  41570c:	1a000001 	bne	415718 <cvSeqPop+0xb0>
  415710:	e3110003 	tst	r1, #3
  415714:	0a00000c 	beq	41574c <cvSeqPop+0xe4>
  415718:	e59f00f0 	ldr	r0, [pc, #240]	; 415810 <cvSeqPop+0x1a8>
  41571c:	e08f0000 	add	r0, pc, r0
  415720:	e59f10ec 	ldr	r1, [pc, #236]	; 415814 <cvSeqPop+0x1ac>
  415724:	e59f20ec 	ldr	r2, [pc, #236]	; 415818 <cvSeqPop+0x1b0>
  415728:	e08f2002 	add	r2, pc, r2
  41572c:	e2822f4f 	add	r2, r2, #316	; 0x13c
  415730:	e59f30e4 	ldr	r3, [pc, #228]	; 41581c <cvSeqPop+0x1b4>
  415734:	e08f3003 	add	r3, pc, r3
  415738:	fa007985 	blx	433d54 <__assert_func>
  41573c:	e792c003 	ldr	ip, [r2, r3]
  415740:	e781c003 	str	ip, [r1, r3]
  415744:	e2833004 	add	r3, r3, #4
  415748:	ea000000 	b	415750 <cvSeqPop+0xe8>
  41574c:	e3a03000 	mov	r3, #0
  415750:	e1530000 	cmp	r3, r0
  415754:	3afffff8 	bcc	41573c <cvSeqPop+0xd4>
  415758:	ea000006 	b	415778 <cvSeqPop+0x110>
  41575c:	e7d2c003 	ldrb	ip, [r2, r3]
  415760:	e7c1c003 	strb	ip, [r1, r3]
  415764:	e2833001 	add	r3, r3, #1
  415768:	ea000000 	b	415770 <cvSeqPop+0x108>
  41576c:	e3a03000 	mov	r3, #0
  415770:	e1530000 	cmp	r3, r0
  415774:	3afffff8 	bcc	41575c <cvSeqPop+0xf4>
  415778:	e5842024 	str	r2, [r4, #36]	; 0x24
  41577c:	e5943018 	ldr	r3, [r4, #24]
  415780:	e2433001 	sub	r3, r3, #1
  415784:	e5843018 	str	r3, [r4, #24]
  415788:	e5943034 	ldr	r3, [r4, #52]	; 0x34
  41578c:	e5932000 	ldr	r2, [r3]
  415790:	e592300c 	ldr	r3, [r2, #12]
  415794:	e2433001 	sub	r3, r3, #1
  415798:	e582300c 	str	r3, [r2, #12]
  41579c:	e3530000 	cmp	r3, #0
  4157a0:	1a00000f 	bne	4157e4 <cvSeqPop+0x17c>
  4157a4:	e1a00004 	mov	r0, r4
  4157a8:	e3a01000 	mov	r1, #0
  4157ac:	ebfff5d0 	bl	412ef4 <_ZL15icvFreeSeqBlockP5CvSeqi>
  4157b0:	e5942024 	ldr	r2, [r4, #36]	; 0x24
  4157b4:	e5943020 	ldr	r3, [r4, #32]
  4157b8:	e1520003 	cmp	r2, r3
  4157bc:	0a000008 	beq	4157e4 <cvSeqPop+0x17c>
  4157c0:	e59f0058 	ldr	r0, [pc, #88]	; 415820 <cvSeqPop+0x1b8>
  4157c4:	e08f0000 	add	r0, pc, r0
  4157c8:	e59f1054 	ldr	r1, [pc, #84]	; 415824 <cvSeqPop+0x1bc>
  4157cc:	e59f2054 	ldr	r2, [pc, #84]	; 415828 <cvSeqPop+0x1c0>
  4157d0:	e08f2002 	add	r2, pc, r2
  4157d4:	e2822f4f 	add	r2, r2, #316	; 0x13c
  4157d8:	e59f304c 	ldr	r3, [pc, #76]	; 41582c <cvSeqPop+0x1c4>
  4157dc:	e08f3003 	add	r3, pc, r3
  4157e0:	fa00795b 	blx	433d54 <__assert_func>
  4157e4:	e28dd008 	add	sp, sp, #8
  4157e8:	e8bd4010 	pop	{r4, lr}
  4157ec:	e12fff1e 	bx	lr
  4157f0:	0000054c 	.word	0x0000054c
  4157f4:	1fbeb1e4 	.word	0x1fbeb1e4
  4157f8:	0002ad7c 	.word	0x0002ad7c
  4157fc:	00029ca8 	.word	0x00029ca8
  415800:	0000054e 	.word	0x0000054e
  415804:	1fbeb1a8 	.word	0x1fbeb1a8
  415808:	0002ad40 	.word	0x0002ad40
  41580c:	00029c6c 	.word	0x00029c6c
  415810:	00029c28 	.word	0x00029c28
  415814:	00000554 	.word	0x00000554
  415818:	000296d0 	.word	0x000296d0
  41581c:	00027b54 	.word	0x00027b54
  415820:	00029b80 	.word	0x00029b80
  415824:	0000055b 	.word	0x0000055b
  415828:	00029628 	.word	0x00029628
  41582c:	00029ed0 	.word	0x00029ed0

00415830 <cvSeqPushFront>:
  415830:	e92d4070 	push	{r4, r5, r6, lr}
  415834:	e24dd008 	sub	sp, sp, #8
  415838:	e2505000 	subs	r5, r0, #0
  41583c:	1a00000c 	bne	415874 <cvSeqPushFront+0x44>
  415840:	e59f318c 	ldr	r3, [pc, #396]	; 4159d4 <cvSeqPushFront+0x1a4>
  415844:	e58d3000 	str	r3, [sp]
  415848:	e3e0001a 	mvn	r0, #26
  41584c:	e59f1184 	ldr	r1, [pc, #388]	; 4159d8 <cvSeqPushFront+0x1a8>
  415850:	e08f1001 	add	r1, pc, r1
  415854:	e2811f8e 	add	r1, r1, #568	; 0x238
  415858:	e59f217c 	ldr	r2, [pc, #380]	; 4159dc <cvSeqPushFront+0x1ac>
  41585c:	e08f2002 	add	r2, pc, r2
  415860:	e59f3178 	ldr	r3, [pc, #376]	; 4159e0 <cvSeqPushFront+0x1b0>
  415864:	e08f3003 	add	r3, pc, r3
  415868:	ebfff48e 	bl	412aa8 <cvError>
  41586c:	e3a00000 	mov	r0, #0
  415870:	ea000054 	b	4159c8 <cvSeqPushFront+0x198>
  415874:	e1a04001 	mov	r4, r1
  415878:	e595601c 	ldr	r6, [r5, #28]
  41587c:	e5951034 	ldr	r1, [r5, #52]	; 0x34
  415880:	e3510000 	cmp	r1, #0
  415884:	0a000002 	beq	415894 <cvSeqPushFront+0x64>
  415888:	e5913008 	ldr	r3, [r1, #8]
  41588c:	e3530000 	cmp	r3, #0
  415890:	1a00001f 	bne	415914 <cvSeqPushFront+0xe4>
  415894:	e1a00005 	mov	r0, r5
  415898:	e3a01001 	mov	r1, #1
  41589c:	ebfff96d 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  4158a0:	ebfff44f 	bl	4129e4 <cvGetErrStatus>
  4158a4:	e3500000 	cmp	r0, #0
  4158a8:	aa00000c 	bge	4158e0 <cvSeqPushFront+0xb0>
  4158ac:	e59f3130 	ldr	r3, [pc, #304]	; 4159e4 <cvSeqPushFront+0x1b4>
  4158b0:	e58d3000 	str	r3, [sp]
  4158b4:	e3e00000 	mvn	r0, #0
  4158b8:	e59f1128 	ldr	r1, [pc, #296]	; 4159e8 <cvSeqPushFront+0x1b8>
  4158bc:	e08f1001 	add	r1, pc, r1
  4158c0:	e2811f8e 	add	r1, r1, #568	; 0x238
  4158c4:	e59f2120 	ldr	r2, [pc, #288]	; 4159ec <cvSeqPushFront+0x1bc>
  4158c8:	e08f2002 	add	r2, pc, r2
  4158cc:	e59f311c 	ldr	r3, [pc, #284]	; 4159f0 <cvSeqPushFront+0x1c0>
  4158d0:	e08f3003 	add	r3, pc, r3
  4158d4:	ebfff473 	bl	412aa8 <cvError>
  4158d8:	e3a00000 	mov	r0, #0
  4158dc:	ea000039 	b	4159c8 <cvSeqPushFront+0x198>
  4158e0:	e5951034 	ldr	r1, [r5, #52]	; 0x34
  4158e4:	e5913008 	ldr	r3, [r1, #8]
  4158e8:	e3530000 	cmp	r3, #0
  4158ec:	ca000008 	bgt	415914 <cvSeqPushFront+0xe4>
  4158f0:	e59f00fc 	ldr	r0, [pc, #252]	; 4159f4 <cvSeqPushFront+0x1c4>
  4158f4:	e08f0000 	add	r0, pc, r0
  4158f8:	e59f10f8 	ldr	r1, [pc, #248]	; 4159f8 <cvSeqPushFront+0x1c8>
  4158fc:	e59f20f8 	ldr	r2, [pc, #248]	; 4159fc <cvSeqPushFront+0x1cc>
  415900:	e08f2002 	add	r2, pc, r2
  415904:	e2822f57 	add	r2, r2, #348	; 0x15c
  415908:	e59f30f0 	ldr	r3, [pc, #240]	; 415a00 <cvSeqPushFront+0x1d0>
  41590c:	e08f3003 	add	r3, pc, r3
  415910:	fa00790f 	blx	433d54 <__assert_func>
  415914:	e1a02006 	mov	r2, r6
  415918:	e5910010 	ldr	r0, [r1, #16]
  41591c:	e0660000 	rsb	r0, r6, r0
  415920:	e5810010 	str	r0, [r1, #16]
  415924:	e3540000 	cmp	r4, #0
  415928:	0a00001d 	beq	4159a4 <cvSeqPushFront+0x174>
  41592c:	e3160003 	tst	r6, #3
  415930:	1a000018 	bne	415998 <cvSeqPushFront+0x168>
  415934:	e3140003 	tst	r4, #3
  415938:	1a000001 	bne	415944 <cvSeqPushFront+0x114>
  41593c:	e3100003 	tst	r0, #3
  415940:	0a00000c 	beq	415978 <cvSeqPushFront+0x148>
  415944:	e59f00b8 	ldr	r0, [pc, #184]	; 415a04 <cvSeqPushFront+0x1d4>
  415948:	e08f0000 	add	r0, pc, r0
  41594c:	e59f10b4 	ldr	r1, [pc, #180]	; 415a08 <cvSeqPushFront+0x1d8>
  415950:	e59f20b4 	ldr	r2, [pc, #180]	; 415a0c <cvSeqPushFront+0x1dc>
  415954:	e08f2002 	add	r2, pc, r2
  415958:	e2822f57 	add	r2, r2, #348	; 0x15c
  41595c:	e59f30ac 	ldr	r3, [pc, #172]	; 415a10 <cvSeqPushFront+0x1e0>
  415960:	e08f3003 	add	r3, pc, r3
  415964:	fa0078fa 	blx	433d54 <__assert_func>
  415968:	e794c003 	ldr	ip, [r4, r3]
  41596c:	e780c003 	str	ip, [r0, r3]
  415970:	e2833004 	add	r3, r3, #4
  415974:	ea000000 	b	41597c <cvSeqPushFront+0x14c>
  415978:	e3a03000 	mov	r3, #0
  41597c:	e1530002 	cmp	r3, r2
  415980:	3afffff8 	bcc	415968 <cvSeqPushFront+0x138>
  415984:	ea000006 	b	4159a4 <cvSeqPushFront+0x174>
  415988:	e7d4c003 	ldrb	ip, [r4, r3]
  41598c:	e7c0c003 	strb	ip, [r0, r3]
  415990:	e2833001 	add	r3, r3, #1
  415994:	ea000000 	b	41599c <cvSeqPushFront+0x16c>
  415998:	e3a03000 	mov	r3, #0
  41599c:	e1530002 	cmp	r3, r2
  4159a0:	3afffff8 	bcc	415988 <cvSeqPushFront+0x158>
  4159a4:	e591300c 	ldr	r3, [r1, #12]
  4159a8:	e2833001 	add	r3, r3, #1
  4159ac:	e581300c 	str	r3, [r1, #12]
  4159b0:	e5913008 	ldr	r3, [r1, #8]
  4159b4:	e2433001 	sub	r3, r3, #1
  4159b8:	e5813008 	str	r3, [r1, #8]
  4159bc:	e5953018 	ldr	r3, [r5, #24]
  4159c0:	e2833001 	add	r3, r3, #1
  4159c4:	e5853018 	str	r3, [r5, #24]
  4159c8:	e28dd008 	add	sp, sp, #8
  4159cc:	e8bd4070 	pop	{r4, r5, r6, lr}
  4159d0:	e12fff1e 	bx	lr
  4159d4:	0000056f 	.word	0x0000056f
  4159d8:	1fbeb01c 	.word	0x1fbeb01c
  4159dc:	0002abb4 	.word	0x0002abb4
  4159e0:	00029ae0 	.word	0x00029ae0
  4159e4:	00000576 	.word	0x00000576
  4159e8:	1fbeafb0 	.word	0x1fbeafb0
  4159ec:	00027708 	.word	0x00027708
  4159f0:	00029a74 	.word	0x00029a74
  4159f4:	00029a50 	.word	0x00029a50
  4159f8:	00000579 	.word	0x00000579
  4159fc:	000294f8 	.word	0x000294f8
  415a00:	00029dbc 	.word	0x00029dbc
  415a04:	000299fc 	.word	0x000299fc
  415a08:	0000057f 	.word	0x0000057f
  415a0c:	000294a4 	.word	0x000294a4
  415a10:	00027928 	.word	0x00027928

00415a14 <cvSeqPopFront>:
  415a14:	e92d4030 	push	{r4, r5, lr}
  415a18:	e24dd00c 	sub	sp, sp, #12
  415a1c:	e3500000 	cmp	r0, #0
  415a20:	1a00000b 	bne	415a54 <cvSeqPopFront+0x40>
  415a24:	e59f313c 	ldr	r3, [pc, #316]	; 415b68 <cvSeqPopFront+0x154>
  415a28:	e58d3000 	str	r3, [sp]
  415a2c:	e3e0001a 	mvn	r0, #26
  415a30:	e59f1134 	ldr	r1, [pc, #308]	; 415b6c <cvSeqPopFront+0x158>
  415a34:	e08f1001 	add	r1, pc, r1
  415a38:	e2811f92 	add	r1, r1, #584	; 0x248
  415a3c:	e59f212c 	ldr	r2, [pc, #300]	; 415b70 <cvSeqPopFront+0x15c>
  415a40:	e08f2002 	add	r2, pc, r2
  415a44:	e59f3128 	ldr	r3, [pc, #296]	; 415b74 <cvSeqPopFront+0x160>
  415a48:	e08f3003 	add	r3, pc, r3
  415a4c:	ebfff415 	bl	412aa8 <cvError>
  415a50:	ea000041 	b	415b5c <cvSeqPopFront+0x148>
  415a54:	e5903018 	ldr	r3, [r0, #24]
  415a58:	e3530000 	cmp	r3, #0
  415a5c:	ca00000b 	bgt	415a90 <cvSeqPopFront+0x7c>
  415a60:	e59f3110 	ldr	r3, [pc, #272]	; 415b78 <cvSeqPopFront+0x164>
  415a64:	e58d3000 	str	r3, [sp]
  415a68:	e3e000c8 	mvn	r0, #200	; 0xc8
  415a6c:	e59f1108 	ldr	r1, [pc, #264]	; 415b7c <cvSeqPopFront+0x168>
  415a70:	e08f1001 	add	r1, pc, r1
  415a74:	e2811f92 	add	r1, r1, #584	; 0x248
  415a78:	e59f2100 	ldr	r2, [pc, #256]	; 415b80 <cvSeqPopFront+0x16c>
  415a7c:	e08f2002 	add	r2, pc, r2
  415a80:	e59f30fc 	ldr	r3, [pc, #252]	; 415b84 <cvSeqPopFront+0x170>
  415a84:	e08f3003 	add	r3, pc, r3
  415a88:	ebfff406 	bl	412aa8 <cvError>
  415a8c:	ea000032 	b	415b5c <cvSeqPopFront+0x148>
  415a90:	e590501c 	ldr	r5, [r0, #28]
  415a94:	e5904034 	ldr	r4, [r0, #52]	; 0x34
  415a98:	e3510000 	cmp	r1, #0
  415a9c:	0a00001f 	beq	415b20 <cvSeqPopFront+0x10c>
  415aa0:	e1a02005 	mov	r2, r5
  415aa4:	e594c010 	ldr	ip, [r4, #16]
  415aa8:	e3150003 	tst	r5, #3
  415aac:	1a000018 	bne	415b14 <cvSeqPopFront+0x100>
  415ab0:	e31c0003 	tst	ip, #3
  415ab4:	1a000001 	bne	415ac0 <cvSeqPopFront+0xac>
  415ab8:	e3110003 	tst	r1, #3
  415abc:	0a00000c 	beq	415af4 <cvSeqPopFront+0xe0>
  415ac0:	e59f00c0 	ldr	r0, [pc, #192]	; 415b88 <cvSeqPopFront+0x174>
  415ac4:	e08f0000 	add	r0, pc, r0
  415ac8:	e59f10bc 	ldr	r1, [pc, #188]	; 415b8c <cvSeqPopFront+0x178>
  415acc:	e59f20bc 	ldr	r2, [pc, #188]	; 415b90 <cvSeqPopFront+0x17c>
  415ad0:	e08f2002 	add	r2, pc, r2
  415ad4:	e2822d06 	add	r2, r2, #384	; 0x180
  415ad8:	e59f30b4 	ldr	r3, [pc, #180]	; 415b94 <cvSeqPopFront+0x180>
  415adc:	e08f3003 	add	r3, pc, r3
  415ae0:	fa00789b 	blx	433d54 <__assert_func>
  415ae4:	e79ce003 	ldr	lr, [ip, r3]
  415ae8:	e781e003 	str	lr, [r1, r3]
  415aec:	e2833004 	add	r3, r3, #4
  415af0:	ea000000 	b	415af8 <cvSeqPopFront+0xe4>
  415af4:	e3a03000 	mov	r3, #0
  415af8:	e1530002 	cmp	r3, r2
  415afc:	3afffff8 	bcc	415ae4 <cvSeqPopFront+0xd0>
  415b00:	ea000006 	b	415b20 <cvSeqPopFront+0x10c>
  415b04:	e7dce003 	ldrb	lr, [ip, r3]
  415b08:	e7c1e003 	strb	lr, [r1, r3]
  415b0c:	e2833001 	add	r3, r3, #1
  415b10:	ea000000 	b	415b18 <cvSeqPopFront+0x104>
  415b14:	e3a03000 	mov	r3, #0
  415b18:	e1530002 	cmp	r3, r2
  415b1c:	3afffff8 	bcc	415b04 <cvSeqPopFront+0xf0>
  415b20:	e5943010 	ldr	r3, [r4, #16]
  415b24:	e0833005 	add	r3, r3, r5
  415b28:	e5843010 	str	r3, [r4, #16]
  415b2c:	e5943008 	ldr	r3, [r4, #8]
  415b30:	e2833001 	add	r3, r3, #1
  415b34:	e5843008 	str	r3, [r4, #8]
  415b38:	e5903018 	ldr	r3, [r0, #24]
  415b3c:	e2433001 	sub	r3, r3, #1
  415b40:	e5803018 	str	r3, [r0, #24]
  415b44:	e594300c 	ldr	r3, [r4, #12]
  415b48:	e2433001 	sub	r3, r3, #1
  415b4c:	e584300c 	str	r3, [r4, #12]
  415b50:	e3530000 	cmp	r3, #0
  415b54:	03a01001 	moveq	r1, #1
  415b58:	0bfff4e5 	bleq	412ef4 <_ZL15icvFreeSeqBlockP5CvSeqi>
  415b5c:	e28dd00c 	add	sp, sp, #12
  415b60:	e8bd4030 	pop	{r4, r5, lr}
  415b64:	e12fff1e 	bx	lr
  415b68:	00000596 	.word	0x00000596
  415b6c:	1fbeae38 	.word	0x1fbeae38
  415b70:	0002a9d0 	.word	0x0002a9d0
  415b74:	000298fc 	.word	0x000298fc
  415b78:	00000598 	.word	0x00000598
  415b7c:	1fbeadfc 	.word	0x1fbeadfc
  415b80:	0002a994 	.word	0x0002a994
  415b84:	000298c0 	.word	0x000298c0
  415b88:	00029880 	.word	0x00029880
  415b8c:	0000059e 	.word	0x0000059e
  415b90:	00029328 	.word	0x00029328
  415b94:	000277ac 	.word	0x000277ac

00415b98 <cvSeqInsert>:
  415b98:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  415b9c:	e24dd01c 	sub	sp, sp, #28
  415ba0:	e58d2010 	str	r2, [sp, #16]
  415ba4:	e2509000 	subs	r9, r0, #0
  415ba8:	1a00000c 	bne	415be0 <cvSeqInsert+0x48>
  415bac:	e59f3464 	ldr	r3, [pc, #1124]	; 416018 <cvSeqInsert+0x480>
  415bb0:	e58d3000 	str	r3, [sp]
  415bb4:	e3e0001a 	mvn	r0, #26
  415bb8:	e59f145c 	ldr	r1, [pc, #1116]	; 41601c <cvSeqInsert+0x484>
  415bbc:	e08f1001 	add	r1, pc, r1
  415bc0:	e2811f96 	add	r1, r1, #600	; 0x258
  415bc4:	e59f2454 	ldr	r2, [pc, #1108]	; 416020 <cvSeqInsert+0x488>
  415bc8:	e08f2002 	add	r2, pc, r2
  415bcc:	e59f3450 	ldr	r3, [pc, #1104]	; 416024 <cvSeqInsert+0x48c>
  415bd0:	e08f3003 	add	r3, pc, r3
  415bd4:	ebfff3b3 	bl	412aa8 <cvError>
  415bd8:	e3a0b000 	mov	fp, #0
  415bdc:	ea000109 	b	416008 <cvSeqInsert+0x470>
  415be0:	e5993018 	ldr	r3, [r9, #24]
  415be4:	e58d300c 	str	r3, [sp, #12]
  415be8:	e3510000 	cmp	r1, #0
  415bec:	a3a03000 	movge	r3, #0
  415bf0:	b59d300c 	ldrlt	r3, [sp, #12]
  415bf4:	e0831001 	add	r1, r3, r1
  415bf8:	e59d300c 	ldr	r3, [sp, #12]
  415bfc:	e1510003 	cmp	r1, r3
  415c00:	d3a08000 	movle	r8, #0
  415c04:	c59d800c 	ldrgt	r8, [sp, #12]
  415c08:	e0688001 	rsb	r8, r8, r1
  415c0c:	e59d300c 	ldr	r3, [sp, #12]
  415c10:	e1580003 	cmp	r8, r3
  415c14:	9a00000c 	bls	415c4c <cvSeqInsert+0xb4>
  415c18:	e59f3408 	ldr	r3, [pc, #1032]	; 416028 <cvSeqInsert+0x490>
  415c1c:	e58d3000 	str	r3, [sp]
  415c20:	e3e000d2 	mvn	r0, #210	; 0xd2
  415c24:	e59f1400 	ldr	r1, [pc, #1024]	; 41602c <cvSeqInsert+0x494>
  415c28:	e08f1001 	add	r1, pc, r1
  415c2c:	e2811f96 	add	r1, r1, #600	; 0x258
  415c30:	e59f23f8 	ldr	r2, [pc, #1016]	; 416030 <cvSeqInsert+0x498>
  415c34:	e08f2002 	add	r2, pc, r2
  415c38:	e59f33f4 	ldr	r3, [pc, #1012]	; 416034 <cvSeqInsert+0x49c>
  415c3c:	e08f3003 	add	r3, pc, r3
  415c40:	ebfff398 	bl	412aa8 <cvError>
  415c44:	e3a0b000 	mov	fp, #0
  415c48:	ea0000ee 	b	416008 <cvSeqInsert+0x470>
  415c4c:	e59d300c 	ldr	r3, [sp, #12]
  415c50:	e1580003 	cmp	r8, r3
  415c54:	1a000012 	bne	415ca4 <cvSeqInsert+0x10c>
  415c58:	e1a00009 	mov	r0, r9
  415c5c:	e59d1010 	ldr	r1, [sp, #16]
  415c60:	ebfffe0b 	bl	415494 <cvSeqPush>
  415c64:	e1a0b000 	mov	fp, r0
  415c68:	ebfff35d 	bl	4129e4 <cvGetErrStatus>
  415c6c:	e3500000 	cmp	r0, #0
  415c70:	aa0000e4 	bge	416008 <cvSeqInsert+0x470>
  415c74:	e59f33bc 	ldr	r3, [pc, #956]	; 416038 <cvSeqInsert+0x4a0>
  415c78:	e58d3000 	str	r3, [sp]
  415c7c:	e3e00000 	mvn	r0, #0
  415c80:	e59f13b4 	ldr	r1, [pc, #948]	; 41603c <cvSeqInsert+0x4a4>
  415c84:	e08f1001 	add	r1, pc, r1
  415c88:	e2811f96 	add	r1, r1, #600	; 0x258
  415c8c:	e59f23ac 	ldr	r2, [pc, #940]	; 416040 <cvSeqInsert+0x4a8>
  415c90:	e08f2002 	add	r2, pc, r2
  415c94:	e59f33a8 	ldr	r3, [pc, #936]	; 416044 <cvSeqInsert+0x4ac>
  415c98:	e08f3003 	add	r3, pc, r3
  415c9c:	ebfff381 	bl	412aa8 <cvError>
  415ca0:	ea0000d8 	b	416008 <cvSeqInsert+0x470>
  415ca4:	e3580000 	cmp	r8, #0
  415ca8:	1a000012 	bne	415cf8 <cvSeqInsert+0x160>
  415cac:	e1a00009 	mov	r0, r9
  415cb0:	e59d1010 	ldr	r1, [sp, #16]
  415cb4:	ebfffedd 	bl	415830 <cvSeqPushFront>
  415cb8:	e1a0b000 	mov	fp, r0
  415cbc:	ebfff348 	bl	4129e4 <cvGetErrStatus>
  415cc0:	e3500000 	cmp	r0, #0
  415cc4:	aa0000cf 	bge	416008 <cvSeqInsert+0x470>
  415cc8:	e59f3378 	ldr	r3, [pc, #888]	; 416048 <cvSeqInsert+0x4b0>
  415ccc:	e58d3000 	str	r3, [sp]
  415cd0:	e3e00000 	mvn	r0, #0
  415cd4:	e59f1370 	ldr	r1, [pc, #880]	; 41604c <cvSeqInsert+0x4b4>
  415cd8:	e08f1001 	add	r1, pc, r1
  415cdc:	e2811f96 	add	r1, r1, #600	; 0x258
  415ce0:	e59f2368 	ldr	r2, [pc, #872]	; 416050 <cvSeqInsert+0x4b8>
  415ce4:	e08f2002 	add	r2, pc, r2
  415ce8:	e59f3364 	ldr	r3, [pc, #868]	; 416054 <cvSeqInsert+0x4bc>
  415cec:	e08f3003 	add	r3, pc, r3
  415cf0:	ebfff36c 	bl	412aa8 <cvError>
  415cf4:	ea0000c3 	b	416008 <cvSeqInsert+0x470>
  415cf8:	e599701c 	ldr	r7, [r9, #28]
  415cfc:	e59d300c 	ldr	r3, [sp, #12]
  415d00:	e15800c3 	cmp	r8, r3, asr #1
  415d04:	ba000068 	blt	415eac <cvSeqInsert+0x314>
  415d08:	e5993024 	ldr	r3, [r9, #36]	; 0x24
  415d0c:	e1a0a007 	mov	sl, r7
  415d10:	e0833007 	add	r3, r3, r7
  415d14:	e1a02003 	mov	r2, r3
  415d18:	e58d3014 	str	r3, [sp, #20]
  415d1c:	e5993020 	ldr	r3, [r9, #32]
  415d20:	e1530002 	cmp	r3, r2
  415d24:	2a000022 	bcs	415db4 <cvSeqInsert+0x21c>
  415d28:	e1a00009 	mov	r0, r9
  415d2c:	e3a01000 	mov	r1, #0
  415d30:	ebfff848 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  415d34:	ebfff32a 	bl	4129e4 <cvGetErrStatus>
  415d38:	e3500000 	cmp	r0, #0
  415d3c:	aa00000c 	bge	415d74 <cvSeqInsert+0x1dc>
  415d40:	e59f3310 	ldr	r3, [pc, #784]	; 416058 <cvSeqInsert+0x4c0>
  415d44:	e58d3000 	str	r3, [sp]
  415d48:	e3e00000 	mvn	r0, #0
  415d4c:	e59f1308 	ldr	r1, [pc, #776]	; 41605c <cvSeqInsert+0x4c4>
  415d50:	e08f1001 	add	r1, pc, r1
  415d54:	e2811f96 	add	r1, r1, #600	; 0x258
  415d58:	e59f2300 	ldr	r2, [pc, #768]	; 416060 <cvSeqInsert+0x4c8>
  415d5c:	e08f2002 	add	r2, pc, r2
  415d60:	e59f32fc 	ldr	r3, [pc, #764]	; 416064 <cvSeqInsert+0x4cc>
  415d64:	e08f3003 	add	r3, pc, r3
  415d68:	ebfff34e 	bl	412aa8 <cvError>
  415d6c:	e3a0b000 	mov	fp, #0
  415d70:	ea0000a4 	b	416008 <cvSeqInsert+0x470>
  415d74:	e5993024 	ldr	r3, [r9, #36]	; 0x24
  415d78:	e0833007 	add	r3, r3, r7
  415d7c:	e1a02003 	mov	r2, r3
  415d80:	e58d3014 	str	r3, [sp, #20]
  415d84:	e5993020 	ldr	r3, [r9, #32]
  415d88:	e1530002 	cmp	r3, r2
  415d8c:	2a000008 	bcs	415db4 <cvSeqInsert+0x21c>
  415d90:	e59f02d0 	ldr	r0, [pc, #720]	; 416068 <cvSeqInsert+0x4d0>
  415d94:	e08f0000 	add	r0, pc, r0
  415d98:	e59f12cc 	ldr	r1, [pc, #716]	; 41606c <cvSeqInsert+0x4d4>
  415d9c:	e59f22cc 	ldr	r2, [pc, #716]	; 416070 <cvSeqInsert+0x4d8>
  415da0:	e08f2002 	add	r2, pc, r2
  415da4:	e2822f69 	add	r2, r2, #420	; 0x1a4
  415da8:	e59f32c4 	ldr	r3, [pc, #708]	; 416074 <cvSeqInsert+0x4dc>
  415dac:	e08f3003 	add	r3, pc, r3
  415db0:	fa0077e7 	blx	433d54 <__assert_func>
  415db4:	e5993034 	ldr	r3, [r9, #52]	; 0x34
  415db8:	e593b008 	ldr	fp, [r3, #8]
  415dbc:	e5934000 	ldr	r4, [r3]
  415dc0:	e594300c 	ldr	r3, [r4, #12]
  415dc4:	e2833001 	add	r3, r3, #1
  415dc8:	e584300c 	str	r3, [r4, #12]
  415dcc:	e5945010 	ldr	r5, [r4, #16]
  415dd0:	e59d3014 	ldr	r3, [sp, #20]
  415dd4:	e0655003 	rsb	r5, r5, r3
  415dd8:	ea00001a 	b	415e48 <cvSeqInsert+0x2b0>
  415ddc:	e5946000 	ldr	r6, [r4]
  415de0:	e5941010 	ldr	r1, [r4, #16]
  415de4:	e081000a 	add	r0, r1, sl
  415de8:	e0672005 	rsb	r2, r7, r5
  415dec:	fa007c86 	blx	43500c <memmove>
  415df0:	e596500c 	ldr	r5, [r6, #12]
  415df4:	e0050597 	mul	r5, r7, r5
  415df8:	e5961010 	ldr	r1, [r6, #16]
  415dfc:	e06a3005 	rsb	r3, sl, r5
  415e00:	e5940010 	ldr	r0, [r4, #16]
  415e04:	e0811003 	add	r1, r1, r3
  415e08:	e1a0200a 	mov	r2, sl
  415e0c:	fa007c31 	blx	434ed8 <memcpy>
  415e10:	e5993034 	ldr	r3, [r9, #52]	; 0x34
  415e14:	e5933000 	ldr	r3, [r3]
  415e18:	e1560003 	cmp	r6, r3
  415e1c:	1a000008 	bne	415e44 <cvSeqInsert+0x2ac>
  415e20:	e59f0250 	ldr	r0, [pc, #592]	; 416078 <cvSeqInsert+0x4e0>
  415e24:	e08f0000 	add	r0, pc, r0
  415e28:	e59f124c 	ldr	r1, [pc, #588]	; 41607c <cvSeqInsert+0x4e4>
  415e2c:	e59f224c 	ldr	r2, [pc, #588]	; 416080 <cvSeqInsert+0x4e8>
  415e30:	e08f2002 	add	r2, pc, r2
  415e34:	e2822f69 	add	r2, r2, #420	; 0x1a4
  415e38:	e59f3244 	ldr	r3, [pc, #580]	; 416084 <cvSeqInsert+0x4ec>
  415e3c:	e08f3003 	add	r3, pc, r3
  415e40:	fa0077c3 	blx	433d54 <__assert_func>
  415e44:	e1a04006 	mov	r4, r6
  415e48:	e5943008 	ldr	r3, [r4, #8]
  415e4c:	e06b2003 	rsb	r2, fp, r3
  415e50:	e1520008 	cmp	r2, r8
  415e54:	caffffe0 	bgt	415ddc <cvSeqInsert+0x244>
  415e58:	e0638008 	rsb	r8, r3, r8
  415e5c:	e088b00b 	add	fp, r8, fp
  415e60:	e00b0b97 	mul	fp, r7, fp
  415e64:	e5941010 	ldr	r1, [r4, #16]
  415e68:	e087000b 	add	r0, r7, fp
  415e6c:	e06b2005 	rsb	r2, fp, r5
  415e70:	e0810000 	add	r0, r1, r0
  415e74:	e081100b 	add	r1, r1, fp
  415e78:	e0672002 	rsb	r2, r7, r2
  415e7c:	fa007c62 	blx	43500c <memmove>
  415e80:	e5943010 	ldr	r3, [r4, #16]
  415e84:	e083b00b 	add	fp, r3, fp
  415e88:	e59d3010 	ldr	r3, [sp, #16]
  415e8c:	e3530000 	cmp	r3, #0
  415e90:	11a0000b 	movne	r0, fp
  415e94:	11a01003 	movne	r1, r3
  415e98:	11a02007 	movne	r2, r7
  415e9c:	1b00aa29 	blne	440748 <__memcpy_from_arm>
  415ea0:	e59d3014 	ldr	r3, [sp, #20]
  415ea4:	e5893024 	str	r3, [r9, #36]	; 0x24
  415ea8:	ea000053 	b	415ffc <cvSeqInsert+0x464>
  415eac:	e5995034 	ldr	r5, [r9, #52]	; 0x34
  415eb0:	e5953008 	ldr	r3, [r5, #8]
  415eb4:	e3530000 	cmp	r3, #0
  415eb8:	1a000013 	bne	415f0c <cvSeqInsert+0x374>
  415ebc:	e1a00009 	mov	r0, r9
  415ec0:	e3a01001 	mov	r1, #1
  415ec4:	ebfff7e3 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  415ec8:	ebfff2c5 	bl	4129e4 <cvGetErrStatus>
  415ecc:	e3500000 	cmp	r0, #0
  415ed0:	aa00000c 	bge	415f08 <cvSeqInsert+0x370>
  415ed4:	e59f31ac 	ldr	r3, [pc, #428]	; 416088 <cvSeqInsert+0x4f0>
  415ed8:	e58d3000 	str	r3, [sp]
  415edc:	e3e00000 	mvn	r0, #0
  415ee0:	e59f11a4 	ldr	r1, [pc, #420]	; 41608c <cvSeqInsert+0x4f4>
  415ee4:	e08f1001 	add	r1, pc, r1
  415ee8:	e2811f96 	add	r1, r1, #600	; 0x258
  415eec:	e59f219c 	ldr	r2, [pc, #412]	; 416090 <cvSeqInsert+0x4f8>
  415ef0:	e08f2002 	add	r2, pc, r2
  415ef4:	e59f3198 	ldr	r3, [pc, #408]	; 416094 <cvSeqInsert+0x4fc>
  415ef8:	e08f3003 	add	r3, pc, r3
  415efc:	ebfff2e9 	bl	412aa8 <cvError>
  415f00:	e3a0b000 	mov	fp, #0
  415f04:	ea00003f 	b	416008 <cvSeqInsert+0x470>
  415f08:	e5995034 	ldr	r5, [r9, #52]	; 0x34
  415f0c:	e595b008 	ldr	fp, [r5, #8]
  415f10:	e595300c 	ldr	r3, [r5, #12]
  415f14:	e2833001 	add	r3, r3, #1
  415f18:	e585300c 	str	r3, [r5, #12]
  415f1c:	e24b3001 	sub	r3, fp, #1
  415f20:	e5853008 	str	r3, [r5, #8]
  415f24:	e1a0a007 	mov	sl, r7
  415f28:	e5953010 	ldr	r3, [r5, #16]
  415f2c:	e0673003 	rsb	r3, r7, r3
  415f30:	e5853010 	str	r3, [r5, #16]
  415f34:	ea000019 	b	415fa0 <cvSeqInsert+0x408>
  415f38:	e5956004 	ldr	r6, [r5, #4]
  415f3c:	e0040497 	mul	r4, r7, r4
  415f40:	e5951010 	ldr	r1, [r5, #16]
  415f44:	e1a00001 	mov	r0, r1
  415f48:	e081100a 	add	r1, r1, sl
  415f4c:	e0672004 	rsb	r2, r7, r4
  415f50:	fa007c2d 	blx	43500c <memmove>
  415f54:	e5950010 	ldr	r0, [r5, #16]
  415f58:	e06a4004 	rsb	r4, sl, r4
  415f5c:	e0800004 	add	r0, r0, r4
  415f60:	e5961010 	ldr	r1, [r6, #16]
  415f64:	e1a0200a 	mov	r2, sl
  415f68:	fa007bda 	blx	434ed8 <memcpy>
  415f6c:	e5993034 	ldr	r3, [r9, #52]	; 0x34
  415f70:	e1560003 	cmp	r6, r3
  415f74:	1a000008 	bne	415f9c <cvSeqInsert+0x404>
  415f78:	e59f0118 	ldr	r0, [pc, #280]	; 416098 <cvSeqInsert+0x500>
  415f7c:	e08f0000 	add	r0, pc, r0
  415f80:	e59f1114 	ldr	r1, [pc, #276]	; 41609c <cvSeqInsert+0x504>
  415f84:	e59f2114 	ldr	r2, [pc, #276]	; 4160a0 <cvSeqInsert+0x508>
  415f88:	e08f2002 	add	r2, pc, r2
  415f8c:	e2822f69 	add	r2, r2, #420	; 0x1a4
  415f90:	e59f310c 	ldr	r3, [pc, #268]	; 4160a4 <cvSeqInsert+0x50c>
  415f94:	e08f3003 	add	r3, pc, r3
  415f98:	fa00776d 	blx	433d54 <__assert_func>
  415f9c:	e1a05006 	mov	r5, r6
  415fa0:	e5952008 	ldr	r2, [r5, #8]
  415fa4:	e06b3002 	rsb	r3, fp, r2
  415fa8:	e595400c 	ldr	r4, [r5, #12]
  415fac:	e0833004 	add	r3, r3, r4
  415fb0:	e1530008 	cmp	r3, r8
  415fb4:	baffffdf 	blt	415f38 <cvSeqInsert+0x3a0>
  415fb8:	e0628008 	rsb	r8, r2, r8
  415fbc:	e088b00b 	add	fp, r8, fp
  415fc0:	e00b0b97 	mul	fp, r7, fp
  415fc4:	e5951010 	ldr	r1, [r5, #16]
  415fc8:	e1a00001 	mov	r0, r1
  415fcc:	e0811007 	add	r1, r1, r7
  415fd0:	e067200b 	rsb	r2, r7, fp
  415fd4:	fa007c0c 	blx	43500c <memmove>
  415fd8:	e5953010 	ldr	r3, [r5, #16]
  415fdc:	e067b00b 	rsb	fp, r7, fp
  415fe0:	e083b00b 	add	fp, r3, fp
  415fe4:	e59d3010 	ldr	r3, [sp, #16]
  415fe8:	e3530000 	cmp	r3, #0
  415fec:	11a0000b 	movne	r0, fp
  415ff0:	11a01003 	movne	r1, r3
  415ff4:	11a02007 	movne	r2, r7
  415ff8:	1b00a9d2 	blne	440748 <__memcpy_from_arm>
  415ffc:	e59d300c 	ldr	r3, [sp, #12]
  416000:	e2833001 	add	r3, r3, #1
  416004:	e5893018 	str	r3, [r9, #24]
  416008:	e1a0000b 	mov	r0, fp
  41600c:	e28dd01c 	add	sp, sp, #28
  416010:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  416014:	e12fff1e 	bx	lr
  416018:	000005bb 	.word	0x000005bb
  41601c:	1fbeacb0 	.word	0x1fbeacb0
  416020:	0002a848 	.word	0x0002a848
  416024:	00029774 	.word	0x00029774
  416028:	000005c2 	.word	0x000005c2
  41602c:	1fbeac44 	.word	0x1fbeac44
  416030:	0002a7dc 	.word	0x0002a7dc
  416034:	00029708 	.word	0x00029708
  416038:	000005c6 	.word	0x000005c6
  41603c:	1fbeabe8 	.word	0x1fbeabe8
  416040:	00027340 	.word	0x00027340
  416044:	000296ac 	.word	0x000296ac
  416048:	000005ca 	.word	0x000005ca
  41604c:	1fbeab94 	.word	0x1fbeab94
  416050:	000272ec 	.word	0x000272ec
  416054:	00029658 	.word	0x00029658
  416058:	000005d6 	.word	0x000005d6
  41605c:	1fbeab1c 	.word	0x1fbeab1c
  416060:	00027274 	.word	0x00027274
  416064:	000295e0 	.word	0x000295e0
  416068:	000295b0 	.word	0x000295b0
  41606c:	000005d9 	.word	0x000005d9
  416070:	00029058 	.word	0x00029058
  416074:	00029934 	.word	0x00029934
  416078:	00029520 	.word	0x00029520
  41607c:	000005eb 	.word	0x000005eb
  416080:	00028fc8 	.word	0x00028fc8
  416084:	000298bc 	.word	0x000298bc
  416088:	000005fe 	.word	0x000005fe
  41608c:	1fbea988 	.word	0x1fbea988
  416090:	000270e0 	.word	0x000270e0
  416094:	0002944c 	.word	0x0002944c
  416098:	000293c8 	.word	0x000293c8
  41609c:	00000611 	.word	0x00000611
  4160a0:	00028e70 	.word	0x00028e70
  4160a4:	00029780 	.word	0x00029780

004160a8 <cvSeqRemove>:
  4160a8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4160ac:	e24dd00c 	sub	sp, sp, #12
  4160b0:	e2508000 	subs	r8, r0, #0
  4160b4:	1a00000b 	bne	4160e8 <cvSeqRemove+0x40>
  4160b8:	e59f3218 	ldr	r3, [pc, #536]	; 4162d8 <cvSeqRemove+0x230>
  4160bc:	e58d3000 	str	r3, [sp]
  4160c0:	e3e0001a 	mvn	r0, #26
  4160c4:	e59f1210 	ldr	r1, [pc, #528]	; 4162dc <cvSeqRemove+0x234>
  4160c8:	e08f1001 	add	r1, pc, r1
  4160cc:	e2811f99 	add	r1, r1, #612	; 0x264
  4160d0:	e59f2208 	ldr	r2, [pc, #520]	; 4162e0 <cvSeqRemove+0x238>
  4160d4:	e08f2002 	add	r2, pc, r2
  4160d8:	e59f3204 	ldr	r3, [pc, #516]	; 4162e4 <cvSeqRemove+0x23c>
  4160dc:	e08f3003 	add	r3, pc, r3
  4160e0:	ebfff270 	bl	412aa8 <cvError>
  4160e4:	ea000078 	b	4162cc <cvSeqRemove+0x224>
  4160e8:	e598c018 	ldr	ip, [r8, #24]
  4160ec:	e3510000 	cmp	r1, #0
  4160f0:	a3a03000 	movge	r3, #0
  4160f4:	b1a0300c 	movlt	r3, ip
  4160f8:	e0831001 	add	r1, r3, r1
  4160fc:	e151000c 	cmp	r1, ip
  416100:	b3a03000 	movlt	r3, #0
  416104:	a1a0300c 	movge	r3, ip
  416108:	e0631001 	rsb	r1, r3, r1
  41610c:	e151000c 	cmp	r1, ip
  416110:	3a00000b 	bcc	416144 <cvSeqRemove+0x9c>
  416114:	e59f31cc 	ldr	r3, [pc, #460]	; 4162e8 <cvSeqRemove+0x240>
  416118:	e58d3000 	str	r3, [sp]
  41611c:	e3e000d2 	mvn	r0, #210	; 0xd2
  416120:	e59f11c4 	ldr	r1, [pc, #452]	; 4162ec <cvSeqRemove+0x244>
  416124:	e08f1001 	add	r1, pc, r1
  416128:	e2811f99 	add	r1, r1, #612	; 0x264
  41612c:	e59f21bc 	ldr	r2, [pc, #444]	; 4162f0 <cvSeqRemove+0x248>
  416130:	e08f2002 	add	r2, pc, r2
  416134:	e59f31b8 	ldr	r3, [pc, #440]	; 4162f4 <cvSeqRemove+0x24c>
  416138:	e08f3003 	add	r3, pc, r3
  41613c:	ebfff259 	bl	412aa8 <cvError>
  416140:	ea000061 	b	4162cc <cvSeqRemove+0x224>
  416144:	e24c9001 	sub	r9, ip, #1
  416148:	e1590001 	cmp	r9, r1
  41614c:	1a000003 	bne	416160 <cvSeqRemove+0xb8>
  416150:	e1a00008 	mov	r0, r8
  416154:	e3a01000 	mov	r1, #0
  416158:	ebfffd42 	bl	415668 <cvSeqPop>
  41615c:	ea00005a 	b	4162cc <cvSeqRemove+0x224>
  416160:	e3510000 	cmp	r1, #0
  416164:	1a000002 	bne	416174 <cvSeqRemove+0xcc>
  416168:	e1a00008 	mov	r0, r8
  41616c:	ebfffe28 	bl	415a14 <cvSeqPopFront>
  416170:	ea000055 	b	4162cc <cvSeqRemove+0x224>
  416174:	e5984034 	ldr	r4, [r8, #52]	; 0x34
  416178:	e598701c 	ldr	r7, [r8, #28]
  41617c:	e5945008 	ldr	r5, [r4, #8]
  416180:	ea000000 	b	416188 <cvSeqRemove+0xe0>
  416184:	e5944004 	ldr	r4, [r4, #4]
  416188:	e5940008 	ldr	r0, [r4, #8]
  41618c:	e0652000 	rsb	r2, r5, r0
  416190:	e594300c 	ldr	r3, [r4, #12]
  416194:	e0822003 	add	r2, r2, r3
  416198:	e1520001 	cmp	r2, r1
  41619c:	dafffff8 	ble	416184 <cvSeqRemove+0xdc>
  4161a0:	e5946010 	ldr	r6, [r4, #16]
  4161a4:	e0600001 	rsb	r0, r0, r1
  4161a8:	e0805005 	add	r5, r0, r5
  4161ac:	e0256597 	mla	r5, r7, r5, r6
  4161b0:	e15100cc 	cmp	r1, ip, asr #1
  4161b4:	b3a0a001 	movlt	sl, #1
  4161b8:	a3a0a000 	movge	sl, #0
  4161bc:	ba00001b 	blt	416230 <cvSeqRemove+0x188>
  4161c0:	e0656006 	rsb	r6, r5, r6
  4161c4:	e0226397 	mla	r2, r7, r3, r6
  4161c8:	ea00000c 	b	416200 <cvSeqRemove+0x158>
  4161cc:	e5944004 	ldr	r4, [r4, #4]
  4161d0:	e0676002 	rsb	r6, r7, r2
  4161d4:	e1a00005 	mov	r0, r5
  4161d8:	e0851007 	add	r1, r5, r7
  4161dc:	e1a02006 	mov	r2, r6
  4161e0:	fa007b89 	blx	43500c <memmove>
  4161e4:	e0850006 	add	r0, r5, r6
  4161e8:	e5941010 	ldr	r1, [r4, #16]
  4161ec:	e1a02007 	mov	r2, r7
  4161f0:	fa007b38 	blx	434ed8 <memcpy>
  4161f4:	e5945010 	ldr	r5, [r4, #16]
  4161f8:	e594600c 	ldr	r6, [r4, #12]
  4161fc:	e0020697 	mul	r2, r7, r6
  416200:	e5983034 	ldr	r3, [r8, #52]	; 0x34
  416204:	e5933000 	ldr	r3, [r3]
  416208:	e1530004 	cmp	r3, r4
  41620c:	1affffee 	bne	4161cc <cvSeqRemove+0x124>
  416210:	e1a00005 	mov	r0, r5
  416214:	e0851007 	add	r1, r5, r7
  416218:	e0672002 	rsb	r2, r7, r2
  41621c:	fa007b7a 	blx	43500c <memmove>
  416220:	e5983024 	ldr	r3, [r8, #36]	; 0x24
  416224:	e0677003 	rsb	r7, r7, r3
  416228:	e5887024 	str	r7, [r8, #36]	; 0x24
  41622c:	ea00001e 	b	4162ac <cvSeqRemove+0x204>
  416230:	e1a0b007 	mov	fp, r7
  416234:	e0855007 	add	r5, r5, r7
  416238:	e0665005 	rsb	r5, r6, r5
  41623c:	ea00000d 	b	416278 <cvSeqRemove+0x1d0>
  416240:	e5946000 	ldr	r6, [r4]
  416244:	e5941010 	ldr	r1, [r4, #16]
  416248:	e081000b 	add	r0, r1, fp
  41624c:	e0672005 	rsb	r2, r7, r5
  416250:	fa007b6d 	blx	43500c <memmove>
  416254:	e596500c 	ldr	r5, [r6, #12]
  416258:	e0050597 	mul	r5, r7, r5
  41625c:	e5961010 	ldr	r1, [r6, #16]
  416260:	e06b3005 	rsb	r3, fp, r5
  416264:	e5940010 	ldr	r0, [r4, #16]
  416268:	e0811003 	add	r1, r1, r3
  41626c:	e1a0200b 	mov	r2, fp
  416270:	fa007b18 	blx	434ed8 <memcpy>
  416274:	e1a04006 	mov	r4, r6
  416278:	e5983034 	ldr	r3, [r8, #52]	; 0x34
  41627c:	e1530004 	cmp	r3, r4
  416280:	1affffee 	bne	416240 <cvSeqRemove+0x198>
  416284:	e5941010 	ldr	r1, [r4, #16]
  416288:	e0810007 	add	r0, r1, r7
  41628c:	e0672005 	rsb	r2, r7, r5
  416290:	fa007b5d 	blx	43500c <memmove>
  416294:	e5943010 	ldr	r3, [r4, #16]
  416298:	e0837007 	add	r7, r3, r7
  41629c:	e5847010 	str	r7, [r4, #16]
  4162a0:	e5943008 	ldr	r3, [r4, #8]
  4162a4:	e2833001 	add	r3, r3, #1
  4162a8:	e5843008 	str	r3, [r4, #8]
  4162ac:	e5889018 	str	r9, [r8, #24]
  4162b0:	e594300c 	ldr	r3, [r4, #12]
  4162b4:	e2433001 	sub	r3, r3, #1
  4162b8:	e584300c 	str	r3, [r4, #12]
  4162bc:	e3530000 	cmp	r3, #0
  4162c0:	01a00008 	moveq	r0, r8
  4162c4:	01a0100a 	moveq	r1, sl
  4162c8:	0bfff309 	bleq	412ef4 <_ZL15icvFreeSeqBlockP5CvSeqi>
  4162cc:	e28dd00c 	add	sp, sp, #12
  4162d0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4162d4:	e12fff1e 	bx	lr
  4162d8:	00000636 	.word	0x00000636
  4162dc:	1fbea7a4 	.word	0x1fbea7a4
  4162e0:	0002a33c 	.word	0x0002a33c
  4162e4:	00029268 	.word	0x00029268
  4162e8:	0000063e 	.word	0x0000063e
  4162ec:	1fbea748 	.word	0x1fbea748
  4162f0:	000295f8 	.word	0x000295f8
  4162f4:	0002920c 	.word	0x0002920c

004162f8 <cvSeqPushMulti>:
  4162f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  4162fc:	e24dd008 	sub	sp, sp, #8
  416300:	e2506000 	subs	r6, r0, #0
  416304:	1a00000b 	bne	416338 <cvSeqPushMulti+0x40>
  416308:	e59f3244 	ldr	r3, [pc, #580]	; 416554 <cvSeqPushMulti+0x25c>
  41630c:	e58d3000 	str	r3, [sp]
  416310:	e3e0001a 	mvn	r0, #26
  416314:	e59f123c 	ldr	r1, [pc, #572]	; 416558 <cvSeqPushMulti+0x260>
  416318:	e08f1001 	add	r1, pc, r1
  41631c:	e2811e27 	add	r1, r1, #624	; 0x270
  416320:	e59f2234 	ldr	r2, [pc, #564]	; 41655c <cvSeqPushMulti+0x264>
  416324:	e08f2002 	add	r2, pc, r2
  416328:	e59f3230 	ldr	r3, [pc, #560]	; 416560 <cvSeqPushMulti+0x268>
  41632c:	e08f3003 	add	r3, pc, r3
  416330:	ebfff1dc 	bl	412aa8 <cvError>
  416334:	ea000083 	b	416548 <cvSeqPushMulti+0x250>
  416338:	e1a07001 	mov	r7, r1
  41633c:	e1a05002 	mov	r5, r2
  416340:	e3520000 	cmp	r2, #0
  416344:	aa00000b 	bge	416378 <cvSeqPushMulti+0x80>
  416348:	e3a03e69 	mov	r3, #1680	; 0x690
  41634c:	e58d3000 	str	r3, [sp]
  416350:	e3e000c8 	mvn	r0, #200	; 0xc8
  416354:	e59f1208 	ldr	r1, [pc, #520]	; 416564 <cvSeqPushMulti+0x26c>
  416358:	e08f1001 	add	r1, pc, r1
  41635c:	e2811e27 	add	r1, r1, #624	; 0x270
  416360:	e59f2200 	ldr	r2, [pc, #512]	; 416568 <cvSeqPushMulti+0x270>
  416364:	e08f2002 	add	r2, pc, r2
  416368:	e59f31fc 	ldr	r3, [pc, #508]	; 41656c <cvSeqPushMulti+0x274>
  41636c:	e08f3003 	add	r3, pc, r3
  416370:	ebfff1cc 	bl	412aa8 <cvError>
  416374:	ea000073 	b	416548 <cvSeqPushMulti+0x250>
  416378:	e596801c 	ldr	r8, [r6, #28]
  41637c:	e3530000 	cmp	r3, #0
  416380:	0a000031 	beq	41644c <cvSeqPushMulti+0x154>
  416384:	ea000033 	b	416458 <cvSeqPushMulti+0x160>
  416388:	e2863020 	add	r3, r6, #32
  41638c:	e8930009 	ldm	r3, {r0, r3}
  416390:	e0400003 	sub	r0, r0, r3
  416394:	e1a01008 	mov	r1, r8
  416398:	fa006d85 	blx	4319b4 <__aeabi_idiv>
  41639c:	e1500005 	cmp	r0, r5
  4163a0:	c1a00005 	movgt	r0, r5
  4163a4:	e3500000 	cmp	r0, #0
  4163a8:	da000013 	ble	4163fc <cvSeqPushMulti+0x104>
  4163ac:	e5963034 	ldr	r3, [r6, #52]	; 0x34
  4163b0:	e5932000 	ldr	r2, [r3]
  4163b4:	e592300c 	ldr	r3, [r2, #12]
  4163b8:	e0833000 	add	r3, r3, r0
  4163bc:	e582300c 	str	r3, [r2, #12]
  4163c0:	e5963018 	ldr	r3, [r6, #24]
  4163c4:	e0833000 	add	r3, r3, r0
  4163c8:	e5863018 	str	r3, [r6, #24]
  4163cc:	e0605005 	rsb	r5, r0, r5
  4163d0:	e0040098 	mul	r4, r8, r0
  4163d4:	e3570000 	cmp	r7, #0
  4163d8:	0a000004 	beq	4163f0 <cvSeqPushMulti+0xf8>
  4163dc:	e5960024 	ldr	r0, [r6, #36]	; 0x24
  4163e0:	e1a01007 	mov	r1, r7
  4163e4:	e1a02004 	mov	r2, r4
  4163e8:	fa007aba 	blx	434ed8 <memcpy>
  4163ec:	e0877004 	add	r7, r7, r4
  4163f0:	e5960024 	ldr	r0, [r6, #36]	; 0x24
  4163f4:	e0800004 	add	r0, r0, r4
  4163f8:	e5860024 	str	r0, [r6, #36]	; 0x24
  4163fc:	e3550000 	cmp	r5, #0
  416400:	da000011 	ble	41644c <cvSeqPushMulti+0x154>
  416404:	e1a00006 	mov	r0, r6
  416408:	e3a01000 	mov	r1, #0
  41640c:	ebfff691 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  416410:	ebfff173 	bl	4129e4 <cvGetErrStatus>
  416414:	e3500000 	cmp	r0, #0
  416418:	aa00000b 	bge	41644c <cvSeqPushMulti+0x154>
  41641c:	e59f314c 	ldr	r3, [pc, #332]	; 416570 <cvSeqPushMulti+0x278>
  416420:	e58d3000 	str	r3, [sp]
  416424:	e3e00000 	mvn	r0, #0
  416428:	e59f1144 	ldr	r1, [pc, #324]	; 416574 <cvSeqPushMulti+0x27c>
  41642c:	e08f1001 	add	r1, pc, r1
  416430:	e2811e27 	add	r1, r1, #624	; 0x270
  416434:	e59f213c 	ldr	r2, [pc, #316]	; 416578 <cvSeqPushMulti+0x280>
  416438:	e08f2002 	add	r2, pc, r2
  41643c:	e59f3138 	ldr	r3, [pc, #312]	; 41657c <cvSeqPushMulti+0x284>
  416440:	e08f3003 	add	r3, pc, r3
  416444:	ebfff197 	bl	412aa8 <cvError>
  416448:	ea00003e 	b	416548 <cvSeqPushMulti+0x250>
  41644c:	e3550000 	cmp	r5, #0
  416450:	caffffcc 	bgt	416388 <cvSeqPushMulti+0x90>
  416454:	ea00003b 	b	416548 <cvSeqPushMulti+0x250>
  416458:	e5964034 	ldr	r4, [r6, #52]	; 0x34
  41645c:	ea000037 	b	416540 <cvSeqPushMulti+0x248>
  416460:	e3540000 	cmp	r4, #0
  416464:	0a000002 	beq	416474 <cvSeqPushMulti+0x17c>
  416468:	e5943008 	ldr	r3, [r4, #8]
  41646c:	e3530000 	cmp	r3, #0
  416470:	1a00001e 	bne	4164f0 <cvSeqPushMulti+0x1f8>
  416474:	e1a00006 	mov	r0, r6
  416478:	e3a01001 	mov	r1, #1
  41647c:	ebfff675 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  416480:	ebfff157 	bl	4129e4 <cvGetErrStatus>
  416484:	e3500000 	cmp	r0, #0
  416488:	aa00000b 	bge	4164bc <cvSeqPushMulti+0x1c4>
  41648c:	e59f30ec 	ldr	r3, [pc, #236]	; 416580 <cvSeqPushMulti+0x288>
  416490:	e58d3000 	str	r3, [sp]
  416494:	e3e00000 	mvn	r0, #0
  416498:	e59f10e4 	ldr	r1, [pc, #228]	; 416584 <cvSeqPushMulti+0x28c>
  41649c:	e08f1001 	add	r1, pc, r1
  4164a0:	e2811e27 	add	r1, r1, #624	; 0x270
  4164a4:	e59f20dc 	ldr	r2, [pc, #220]	; 416588 <cvSeqPushMulti+0x290>
  4164a8:	e08f2002 	add	r2, pc, r2
  4164ac:	e59f30d8 	ldr	r3, [pc, #216]	; 41658c <cvSeqPushMulti+0x294>
  4164b0:	e08f3003 	add	r3, pc, r3
  4164b4:	ebfff17b 	bl	412aa8 <cvError>
  4164b8:	ea000022 	b	416548 <cvSeqPushMulti+0x250>
  4164bc:	e5964034 	ldr	r4, [r6, #52]	; 0x34
  4164c0:	e5943008 	ldr	r3, [r4, #8]
  4164c4:	e3530000 	cmp	r3, #0
  4164c8:	ca000008 	bgt	4164f0 <cvSeqPushMulti+0x1f8>
  4164cc:	e59f00bc 	ldr	r0, [pc, #188]	; 416590 <cvSeqPushMulti+0x298>
  4164d0:	e08f0000 	add	r0, pc, r0
  4164d4:	e59f10b8 	ldr	r1, [pc, #184]	; 416594 <cvSeqPushMulti+0x29c>
  4164d8:	e59f20b8 	ldr	r2, [pc, #184]	; 416598 <cvSeqPushMulti+0x2a0>
  4164dc:	e08f2002 	add	r2, pc, r2
  4164e0:	e2822f73 	add	r2, r2, #460	; 0x1cc
  4164e4:	e59f30b0 	ldr	r3, [pc, #176]	; 41659c <cvSeqPushMulti+0x2a4>
  4164e8:	e08f3003 	add	r3, pc, r3
  4164ec:	fa007618 	blx	433d54 <__assert_func>
  4164f0:	e5943008 	ldr	r3, [r4, #8]
  4164f4:	e1530005 	cmp	r3, r5
  4164f8:	d1a02003 	movle	r2, r3
  4164fc:	c1a02005 	movgt	r2, r5
  416500:	e0625005 	rsb	r5, r2, r5
  416504:	e0623003 	rsb	r3, r2, r3
  416508:	e5843008 	str	r3, [r4, #8]
  41650c:	e594300c 	ldr	r3, [r4, #12]
  416510:	e0833002 	add	r3, r3, r2
  416514:	e584300c 	str	r3, [r4, #12]
  416518:	e5963018 	ldr	r3, [r6, #24]
  41651c:	e0833002 	add	r3, r3, r2
  416520:	e5863018 	str	r3, [r6, #24]
  416524:	e0020298 	mul	r2, r8, r2
  416528:	e5940010 	ldr	r0, [r4, #16]
  41652c:	e0620000 	rsb	r0, r2, r0
  416530:	e5840010 	str	r0, [r4, #16]
  416534:	e3570000 	cmp	r7, #0
  416538:	10217598 	mlane	r1, r8, r5, r7
  41653c:	1b00a881 	blne	440748 <__memcpy_from_arm>
  416540:	e3550000 	cmp	r5, #0
  416544:	caffffc5 	bgt	416460 <cvSeqPushMulti+0x168>
  416548:	e28dd008 	add	sp, sp, #8
  41654c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  416550:	e12fff1e 	bx	lr
  416554:	0000068e 	.word	0x0000068e
  416558:	1fbea554 	.word	0x1fbea554
  41655c:	00029414 	.word	0x00029414
  416560:	00029018 	.word	0x00029018
  416564:	1fbea514 	.word	0x1fbea514
  416568:	000293ec 	.word	0x000293ec
  41656c:	00028fd8 	.word	0x00028fd8
  416570:	000006aa 	.word	0x000006aa
  416574:	1fbea440 	.word	0x1fbea440
  416578:	00026b98 	.word	0x00026b98
  41657c:	00028f04 	.word	0x00028f04
  416580:	000006b7 	.word	0x000006b7
  416584:	1fbea3d0 	.word	0x1fbea3d0
  416588:	00026b28 	.word	0x00026b28
  41658c:	00028e94 	.word	0x00028e94
  416590:	00028e74 	.word	0x00028e74
  416594:	000006ba 	.word	0x000006ba
  416598:	0002891c 	.word	0x0002891c
  41659c:	000291e0 	.word	0x000291e0

004165a0 <cvSeqPopMulti>:
  4165a0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  4165a4:	e24dd00c 	sub	sp, sp, #12
  4165a8:	e2504000 	subs	r4, r0, #0
  4165ac:	1a00000b 	bne	4165e0 <cvSeqPopMulti+0x40>
  4165b0:	e59f3204 	ldr	r3, [pc, #516]	; 4167bc <cvSeqPopMulti+0x21c>
  4165b4:	e58d3000 	str	r3, [sp]
  4165b8:	e3e0001a 	mvn	r0, #26
  4165bc:	e59f11fc 	ldr	r1, [pc, #508]	; 4167c0 <cvSeqPopMulti+0x220>
  4165c0:	e08f1001 	add	r1, pc, r1
  4165c4:	e2811d0a 	add	r1, r1, #640	; 0x280
  4165c8:	e59f21f4 	ldr	r2, [pc, #500]	; 4167c4 <cvSeqPopMulti+0x224>
  4165cc:	e08f2002 	add	r2, pc, r2
  4165d0:	e59f31f0 	ldr	r3, [pc, #496]	; 4167c8 <cvSeqPopMulti+0x228>
  4165d4:	e08f3003 	add	r3, pc, r3
  4165d8:	ebfff132 	bl	412aa8 <cvError>
  4165dc:	ea000073 	b	4167b0 <cvSeqPopMulti+0x210>
  4165e0:	e1a06001 	mov	r6, r1
  4165e4:	e1a05002 	mov	r5, r2
  4165e8:	e3520000 	cmp	r2, #0
  4165ec:	aa00000b 	bge	416620 <cvSeqPopMulti+0x80>
  4165f0:	e59f31d4 	ldr	r3, [pc, #468]	; 4167cc <cvSeqPopMulti+0x22c>
  4165f4:	e58d3000 	str	r3, [sp]
  4165f8:	e3e000c8 	mvn	r0, #200	; 0xc8
  4165fc:	e59f11cc 	ldr	r1, [pc, #460]	; 4167d0 <cvSeqPopMulti+0x230>
  416600:	e08f1001 	add	r1, pc, r1
  416604:	e2811d0a 	add	r1, r1, #640	; 0x280
  416608:	e59f21c4 	ldr	r2, [pc, #452]	; 4167d4 <cvSeqPopMulti+0x234>
  41660c:	e08f2002 	add	r2, pc, r2
  416610:	e59f31c0 	ldr	r3, [pc, #448]	; 4167d8 <cvSeqPopMulti+0x238>
  416614:	e08f3003 	add	r3, pc, r3
  416618:	ebfff122 	bl	412aa8 <cvError>
  41661c:	ea000063 	b	4167b0 <cvSeqPopMulti+0x210>
  416620:	e5942018 	ldr	r2, [r4, #24]
  416624:	e1520005 	cmp	r2, r5
  416628:	b1a05002 	movlt	r5, r2
  41662c:	e3530000 	cmp	r3, #0
  416630:	1a00005c 	bne	4167a8 <cvSeqPopMulti+0x208>
  416634:	e3560000 	cmp	r6, #0
  416638:	1594301c 	ldrne	r3, [r4, #28]
  41663c:	10266593 	mlane	r6, r3, r5, r6
  416640:	ea000027 	b	4166e4 <cvSeqPopMulti+0x144>
  416644:	e5943034 	ldr	r3, [r4, #52]	; 0x34
  416648:	e5931000 	ldr	r1, [r3]
  41664c:	e591200c 	ldr	r2, [r1, #12]
  416650:	e1520005 	cmp	r2, r5
  416654:	c1a03005 	movgt	r3, r5
  416658:	d1a03002 	movle	r3, r2
  41665c:	e3530000 	cmp	r3, #0
  416660:	ca000008 	bgt	416688 <cvSeqPopMulti+0xe8>
  416664:	e59f0170 	ldr	r0, [pc, #368]	; 4167dc <cvSeqPopMulti+0x23c>
  416668:	e08f0000 	add	r0, pc, r0
  41666c:	e59f116c 	ldr	r1, [pc, #364]	; 4167e0 <cvSeqPopMulti+0x240>
  416670:	e59f216c 	ldr	r2, [pc, #364]	; 4167e4 <cvSeqPopMulti+0x244>
  416674:	e08f2002 	add	r2, pc, r2
  416678:	e2822f7f 	add	r2, r2, #508	; 0x1fc
  41667c:	e59f3164 	ldr	r3, [pc, #356]	; 4167e8 <cvSeqPopMulti+0x248>
  416680:	e08f3003 	add	r3, pc, r3
  416684:	fa0075b2 	blx	433d54 <__assert_func>
  416688:	e0632002 	rsb	r2, r3, r2
  41668c:	e581200c 	str	r2, [r1, #12]
  416690:	e5942018 	ldr	r2, [r4, #24]
  416694:	e0632002 	rsb	r2, r3, r2
  416698:	e5842018 	str	r2, [r4, #24]
  41669c:	e0635005 	rsb	r5, r3, r5
  4166a0:	e594201c 	ldr	r2, [r4, #28]
  4166a4:	e0020293 	mul	r2, r3, r2
  4166a8:	e2623000 	rsb	r3, r2, #0
  4166ac:	e5941024 	ldr	r1, [r4, #36]	; 0x24
  4166b0:	e0811003 	add	r1, r1, r3
  4166b4:	e5841024 	str	r1, [r4, #36]	; 0x24
  4166b8:	e3560000 	cmp	r6, #0
  4166bc:	10866003 	addne	r6, r6, r3
  4166c0:	11a00006 	movne	r0, r6
  4166c4:	1b00a81f 	blne	440748 <__memcpy_from_arm>
  4166c8:	e5943034 	ldr	r3, [r4, #52]	; 0x34
  4166cc:	e5933000 	ldr	r3, [r3]
  4166d0:	e593300c 	ldr	r3, [r3, #12]
  4166d4:	e3530000 	cmp	r3, #0
  4166d8:	01a00004 	moveq	r0, r4
  4166dc:	03a01000 	moveq	r1, #0
  4166e0:	0bfff203 	bleq	412ef4 <_ZL15icvFreeSeqBlockP5CvSeqi>
  4166e4:	e3550000 	cmp	r5, #0
  4166e8:	caffffd5 	bgt	416644 <cvSeqPopMulti+0xa4>
  4166ec:	ea00002f 	b	4167b0 <cvSeqPopMulti+0x210>
  4166f0:	e5941034 	ldr	r1, [r4, #52]	; 0x34
  4166f4:	e591200c 	ldr	r2, [r1, #12]
  4166f8:	e1520005 	cmp	r2, r5
  4166fc:	c1a03005 	movgt	r3, r5
  416700:	d1a03002 	movle	r3, r2
  416704:	e3530000 	cmp	r3, #0
  416708:	ca000008 	bgt	416730 <cvSeqPopMulti+0x190>
  41670c:	e59f00d8 	ldr	r0, [pc, #216]	; 4167ec <cvSeqPopMulti+0x24c>
  416710:	e08f0000 	add	r0, pc, r0
  416714:	e59f10d4 	ldr	r1, [pc, #212]	; 4167f0 <cvSeqPopMulti+0x250>
  416718:	e59f20d4 	ldr	r2, [pc, #212]	; 4167f4 <cvSeqPopMulti+0x254>
  41671c:	e08f2002 	add	r2, pc, r2
  416720:	e2822f7f 	add	r2, r2, #508	; 0x1fc
  416724:	e59f30cc 	ldr	r3, [pc, #204]	; 4167f8 <cvSeqPopMulti+0x258>
  416728:	e08f3003 	add	r3, pc, r3
  41672c:	fa007588 	blx	433d54 <__assert_func>
  416730:	e0632002 	rsb	r2, r3, r2
  416734:	e581200c 	str	r2, [r1, #12]
  416738:	e5942018 	ldr	r2, [r4, #24]
  41673c:	e0632002 	rsb	r2, r3, r2
  416740:	e5842018 	str	r2, [r4, #24]
  416744:	e0635005 	rsb	r5, r3, r5
  416748:	e5941034 	ldr	r1, [r4, #52]	; 0x34
  41674c:	e5912008 	ldr	r2, [r1, #8]
  416750:	e0822003 	add	r2, r2, r3
  416754:	e5812008 	str	r2, [r1, #8]
  416758:	e594701c 	ldr	r7, [r4, #28]
  41675c:	e0070793 	mul	r7, r3, r7
  416760:	e3560000 	cmp	r6, #0
  416764:	0a000005 	beq	416780 <cvSeqPopMulti+0x1e0>
  416768:	e5943034 	ldr	r3, [r4, #52]	; 0x34
  41676c:	e1a00006 	mov	r0, r6
  416770:	e5931010 	ldr	r1, [r3, #16]
  416774:	e1a02007 	mov	r2, r7
  416778:	fa0079d6 	blx	434ed8 <memcpy>
  41677c:	e0866007 	add	r6, r6, r7
  416780:	e5942034 	ldr	r2, [r4, #52]	; 0x34
  416784:	e5923010 	ldr	r3, [r2, #16]
  416788:	e0833007 	add	r3, r3, r7
  41678c:	e5823010 	str	r3, [r2, #16]
  416790:	e5943034 	ldr	r3, [r4, #52]	; 0x34
  416794:	e593300c 	ldr	r3, [r3, #12]
  416798:	e3530000 	cmp	r3, #0
  41679c:	01a00004 	moveq	r0, r4
  4167a0:	03a01001 	moveq	r1, #1
  4167a4:	0bfff1d2 	bleq	412ef4 <_ZL15icvFreeSeqBlockP5CvSeqi>
  4167a8:	e3550000 	cmp	r5, #0
  4167ac:	caffffcf 	bgt	4166f0 <cvSeqPopMulti+0x150>
  4167b0:	e28dd00c 	add	sp, sp, #12
  4167b4:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  4167b8:	e12fff1e 	bx	lr
  4167bc:	000006d9 	.word	0x000006d9
  4167c0:	1fbea2ac 	.word	0x1fbea2ac
  4167c4:	0002916c 	.word	0x0002916c
  4167c8:	00028d70 	.word	0x00028d70
  4167cc:	000006db 	.word	0x000006db
  4167d0:	1fbea26c 	.word	0x1fbea26c
  4167d4:	00029144 	.word	0x00029144
  4167d8:	00028d30 	.word	0x00028d30
  4167dc:	00028cdc 	.word	0x00028cdc
  4167e0:	000006e9 	.word	0x000006e9
  4167e4:	00028784 	.word	0x00028784
  4167e8:	000290f8 	.word	0x000290f8
  4167ec:	00028c34 	.word	0x00028c34
  4167f0:	00000702 	.word	0x00000702
  4167f4:	000286dc 	.word	0x000286dc
  4167f8:	00029050 	.word	0x00029050

004167fc <cvClearSeq>:
  4167fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  416800:	e24dd00c 	sub	sp, sp, #12
  416804:	e2503000 	subs	r3, r0, #0
  416808:	1a00000b 	bne	41683c <cvClearSeq+0x40>
  41680c:	e59f3048 	ldr	r3, [pc, #72]	; 41685c <cvClearSeq+0x60>
  416810:	e58d3000 	str	r3, [sp]
  416814:	e3e0001a 	mvn	r0, #26
  416818:	e59f1040 	ldr	r1, [pc, #64]	; 416860 <cvClearSeq+0x64>
  41681c:	e08f1001 	add	r1, pc, r1
  416820:	e2811e29 	add	r1, r1, #656	; 0x290
  416824:	e59f2038 	ldr	r2, [pc, #56]	; 416864 <cvClearSeq+0x68>
  416828:	e08f2002 	add	r2, pc, r2
  41682c:	e59f3034 	ldr	r3, [pc, #52]	; 416868 <cvClearSeq+0x6c>
  416830:	e08f3003 	add	r3, pc, r3
  416834:	ebfff09b 	bl	412aa8 <cvError>
  416838:	ea000004 	b	416850 <cvClearSeq+0x54>
  41683c:	e1a00003 	mov	r0, r3
  416840:	e3a01000 	mov	r1, #0
  416844:	e5932018 	ldr	r2, [r3, #24]
  416848:	e1a03001 	mov	r3, r1
  41684c:	ebffff53 	bl	4165a0 <cvSeqPopMulti>
  416850:	e28dd00c 	add	sp, sp, #12
  416854:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  416858:	e12fff1e 	bx	lr
  41685c:	00000723 	.word	0x00000723
  416860:	1fbea050 	.word	0x1fbea050
  416864:	00029be8 	.word	0x00029be8
  416868:	00028b14 	.word	0x00028b14

0041686c <cvSeqSlice>:
  41686c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  416870:	e24dd030 	sub	sp, sp, #48	; 0x30
  416874:	e28dc008 	add	ip, sp, #8
  416878:	e88c0006 	stm	ip, {r1, r2}
  41687c:	e59d9050 	ldr	r9, [sp, #80]	; 0x50
  416880:	e2505000 	subs	r5, r0, #0
  416884:	0a000004 	beq	41689c <cvSeqSlice+0x30>
  416888:	e1a0a003 	mov	sl, r3
  41688c:	e1d520b2 	ldrh	r2, [r5, #2]
  416890:	e59f327c 	ldr	r3, [pc, #636]	; 416b14 <cvSeqSlice+0x2a8>
  416894:	e1530802 	cmp	r3, r2, lsl #16
  416898:	0a00000c 	beq	4168d0 <cvSeqSlice+0x64>
  41689c:	e59f3274 	ldr	r3, [pc, #628]	; 416b18 <cvSeqSlice+0x2ac>
  4168a0:	e58d3000 	str	r3, [sp]
  4168a4:	e3e00004 	mvn	r0, #4
  4168a8:	e59f126c 	ldr	r1, [pc, #620]	; 416b1c <cvSeqSlice+0x2b0>
  4168ac:	e08f1001 	add	r1, pc, r1
  4168b0:	e2811fa7 	add	r1, r1, #668	; 0x29c
  4168b4:	e59f2264 	ldr	r2, [pc, #612]	; 416b20 <cvSeqSlice+0x2b4>
  4168b8:	e08f2002 	add	r2, pc, r2
  4168bc:	e59f3260 	ldr	r3, [pc, #608]	; 416b24 <cvSeqSlice+0x2b8>
  4168c0:	e08f3003 	add	r3, pc, r3
  4168c4:	ebfff077 	bl	412aa8 <cvError>
  4168c8:	e3a07000 	mov	r7, #0
  4168cc:	ea00008c 	b	416b04 <cvSeqSlice+0x298>
  4168d0:	e35a0000 	cmp	sl, #0
  4168d4:	1a00000f 	bne	416918 <cvSeqSlice+0xac>
  4168d8:	e595a02c 	ldr	sl, [r5, #44]	; 0x2c
  4168dc:	e35a0000 	cmp	sl, #0
  4168e0:	1a00000c 	bne	416918 <cvSeqSlice+0xac>
  4168e4:	e59f323c 	ldr	r3, [pc, #572]	; 416b28 <cvSeqSlice+0x2bc>
  4168e8:	e58d3000 	str	r3, [sp]
  4168ec:	e3e0001a 	mvn	r0, #26
  4168f0:	e59f1234 	ldr	r1, [pc, #564]	; 416b2c <cvSeqSlice+0x2c0>
  4168f4:	e08f1001 	add	r1, pc, r1
  4168f8:	e2811fa7 	add	r1, r1, #668	; 0x29c
  4168fc:	e59f222c 	ldr	r2, [pc, #556]	; 416b30 <cvSeqSlice+0x2c4>
  416900:	e08f2002 	add	r2, pc, r2
  416904:	e59f3228 	ldr	r3, [pc, #552]	; 416b34 <cvSeqSlice+0x2c8>
  416908:	e08f3003 	add	r3, pc, r3
  41690c:	ebfff065 	bl	412aa8 <cvError>
  416910:	e3a07000 	mov	r7, #0
  416914:	ea00007a 	b	416b04 <cvSeqSlice+0x298>
  416918:	e595601c 	ldr	r6, [r5, #28]
  41691c:	e28d3008 	add	r3, sp, #8
  416920:	e8930003 	ldm	r3, {r0, r1}
  416924:	e1a02005 	mov	r2, r5
  416928:	ebfff6b9 	bl	414414 <cvSliceLength>
  41692c:	e1a04000 	mov	r4, r0
  416930:	e59d3008 	ldr	r3, [sp, #8]
  416934:	e3530000 	cmp	r3, #0
  416938:	b5952018 	ldrlt	r2, [r5, #24]
  41693c:	b0833002 	addlt	r3, r3, r2
  416940:	b58d3008 	strlt	r3, [sp, #8]
  416944:	ba000003 	blt	416958 <cvSeqSlice+0xec>
  416948:	e5952018 	ldr	r2, [r5, #24]
  41694c:	e1530002 	cmp	r3, r2
  416950:	a0623003 	rsbge	r3, r2, r3
  416954:	a58d3008 	strge	r3, [sp, #8]
  416958:	e5953018 	ldr	r3, [r5, #24]
  41695c:	e1540003 	cmp	r4, r3
  416960:	8a000004 	bhi	416978 <cvSeqSlice+0x10c>
  416964:	e59d8008 	ldr	r8, [sp, #8]
  416968:	e1530008 	cmp	r3, r8
  41696c:	8a00000e 	bhi	4169ac <cvSeqSlice+0x140>
  416970:	e3540000 	cmp	r4, #0
  416974:	0a00000c 	beq	4169ac <cvSeqSlice+0x140>
  416978:	e59f31b8 	ldr	r3, [pc, #440]	; 416b38 <cvSeqSlice+0x2cc>
  41697c:	e58d3000 	str	r3, [sp]
  416980:	e3e000d2 	mvn	r0, #210	; 0xd2
  416984:	e59f11b0 	ldr	r1, [pc, #432]	; 416b3c <cvSeqSlice+0x2d0>
  416988:	e08f1001 	add	r1, pc, r1
  41698c:	e2811fa7 	add	r1, r1, #668	; 0x29c
  416990:	e59f21a8 	ldr	r2, [pc, #424]	; 416b40 <cvSeqSlice+0x2d4>
  416994:	e08f2002 	add	r2, pc, r2
  416998:	e59f31a4 	ldr	r3, [pc, #420]	; 416b44 <cvSeqSlice+0x2d8>
  41699c:	e08f3003 	add	r3, pc, r3
  4169a0:	ebfff040 	bl	412aa8 <cvError>
  4169a4:	e3a07000 	mov	r7, #0
  4169a8:	ea000055 	b	416b04 <cvSeqSlice+0x298>
  4169ac:	e5950000 	ldr	r0, [r5]
  4169b0:	e5951004 	ldr	r1, [r5, #4]
  4169b4:	e1a02006 	mov	r2, r6
  4169b8:	e1a0300a 	mov	r3, sl
  4169bc:	ebfff498 	bl	413c24 <cvCreateSeq>
  4169c0:	e1a07000 	mov	r7, r0
  4169c4:	ebfff006 	bl	4129e4 <cvGetErrStatus>
  4169c8:	e3500000 	cmp	r0, #0
  4169cc:	aa00000b 	bge	416a00 <cvSeqSlice+0x194>
  4169d0:	e59f3170 	ldr	r3, [pc, #368]	; 416b48 <cvSeqSlice+0x2dc>
  4169d4:	e58d3000 	str	r3, [sp]
  4169d8:	e3e00000 	mvn	r0, #0
  4169dc:	e59f1168 	ldr	r1, [pc, #360]	; 416b4c <cvSeqSlice+0x2e0>
  4169e0:	e08f1001 	add	r1, pc, r1
  4169e4:	e2811fa7 	add	r1, r1, #668	; 0x29c
  4169e8:	e59f2160 	ldr	r2, [pc, #352]	; 416b50 <cvSeqSlice+0x2e4>
  4169ec:	e08f2002 	add	r2, pc, r2
  4169f0:	e59f315c 	ldr	r3, [pc, #348]	; 416b54 <cvSeqSlice+0x2e8>
  4169f4:	e08f3003 	add	r3, pc, r3
  4169f8:	ebfff02a 	bl	412aa8 <cvError>
  4169fc:	ea000040 	b	416b04 <cvSeqSlice+0x298>
  416a00:	e3540000 	cmp	r4, #0
  416a04:	da00003e 	ble	416b04 <cvSeqSlice+0x298>
  416a08:	e1a00005 	mov	r0, r5
  416a0c:	e28d5010 	add	r5, sp, #16
  416a10:	e1a01005 	mov	r1, r5
  416a14:	e3a02000 	mov	r2, #0
  416a18:	ebfff830 	bl	414ae0 <cvStartReadSeq>
  416a1c:	e1a00005 	mov	r0, r5
  416a20:	e1a01008 	mov	r1, r8
  416a24:	e3a02000 	mov	r2, #0
  416a28:	ebfff92c 	bl	414ee0 <cvSetSeqReaderPos>
  416a2c:	e59d301c 	ldr	r3, [sp, #28]
  416a30:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
  416a34:	e0630000 	rsb	r0, r3, r0
  416a38:	e1a01006 	mov	r1, r6
  416a3c:	fa006bdc 	blx	4319b4 <__aeabi_idiv>
  416a40:	e1a05000 	mov	r5, r0
  416a44:	e3a06000 	mov	r6, #0
  416a48:	e1a08006 	mov	r8, r6
  416a4c:	e1550004 	cmp	r5, r4
  416a50:	c1a05004 	movgt	r5, r4
  416a54:	e3590000 	cmp	r9, #0
  416a58:	1a00001b 	bne	416acc <cvSeqSlice+0x260>
  416a5c:	e1a0000a 	mov	r0, sl
  416a60:	e3a01014 	mov	r1, #20
  416a64:	ebfff36a 	bl	413814 <cvMemStorageAlloc>
  416a68:	e3580000 	cmp	r8, #0
  416a6c:	1a000006 	bne	416a8c <cvSeqSlice+0x220>
  416a70:	e5800004 	str	r0, [r0, #4]
  416a74:	e5800000 	str	r0, [r0]
  416a78:	e5870034 	str	r0, [r7, #52]	; 0x34
  416a7c:	e3a03000 	mov	r3, #0
  416a80:	e5803008 	str	r3, [r0, #8]
  416a84:	e1a08000 	mov	r8, r0
  416a88:	ea000007 	b	416aac <cvSeqSlice+0x240>
  416a8c:	e5806000 	str	r6, [r0]
  416a90:	e5808004 	str	r8, [r0, #4]
  416a94:	e5880000 	str	r0, [r8]
  416a98:	e5860004 	str	r0, [r6, #4]
  416a9c:	e2862008 	add	r2, r6, #8
  416aa0:	e892000c 	ldm	r2, {r2, r3}
  416aa4:	e0823003 	add	r3, r2, r3
  416aa8:	e5803008 	str	r3, [r0, #8]
  416aac:	e59d301c 	ldr	r3, [sp, #28]
  416ab0:	e5803010 	str	r3, [r0, #16]
  416ab4:	e580500c 	str	r5, [r0, #12]
  416ab8:	e5973018 	ldr	r3, [r7, #24]
  416abc:	e0833005 	add	r3, r3, r5
  416ac0:	e5873018 	str	r3, [r7, #24]
  416ac4:	e1a06000 	mov	r6, r0
  416ac8:	ea000004 	b	416ae0 <cvSeqSlice+0x274>
  416acc:	e1a00007 	mov	r0, r7
  416ad0:	e59d101c 	ldr	r1, [sp, #28]
  416ad4:	e1a02005 	mov	r2, r5
  416ad8:	e3a03000 	mov	r3, #0
  416adc:	ebfffe05 	bl	4162f8 <cvSeqPushMulti>
  416ae0:	e0654004 	rsb	r4, r5, r4
  416ae4:	e59d3018 	ldr	r3, [sp, #24]
  416ae8:	e5933004 	ldr	r3, [r3, #4]
  416aec:	e58d3018 	str	r3, [sp, #24]
  416af0:	e5932010 	ldr	r2, [r3, #16]
  416af4:	e58d201c 	str	r2, [sp, #28]
  416af8:	e593500c 	ldr	r5, [r3, #12]
  416afc:	e3540000 	cmp	r4, #0
  416b00:	caffffd1 	bgt	416a4c <cvSeqSlice+0x1e0>
  416b04:	e1a00007 	mov	r0, r7
  416b08:	e28dd030 	add	sp, sp, #48	; 0x30
  416b0c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  416b10:	e12fff1e 	bx	lr
  416b14:	42990000 	.word	0x42990000
  416b18:	00000738 	.word	0x00000738
  416b1c:	1fbe9fc0 	.word	0x1fbe9fc0
  416b20:	00028ecc 	.word	0x00028ecc
  416b24:	00028a84 	.word	0x00028a84
  416b28:	0000073e 	.word	0x0000073e
  416b2c:	1fbe9f78 	.word	0x1fbe9f78
  416b30:	00028b28 	.word	0x00028b28
  416b34:	00028a3c 	.word	0x00028a3c
  416b38:	00000749 	.word	0x00000749
  416b3c:	1fbe9ee4 	.word	0x1fbe9ee4
  416b40:	00028e08 	.word	0x00028e08
  416b44:	000289a8 	.word	0x000289a8
  416b48:	0000074b 	.word	0x0000074b
  416b4c:	1fbe9e8c 	.word	0x1fbe9e8c
  416b50:	000265e4 	.word	0x000265e4
  416b54:	00028950 	.word	0x00028950

00416b58 <cvSeqRemoveSlice>:
  416b58:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  416b5c:	e24dd054 	sub	sp, sp, #84	; 0x54
  416b60:	e28d3008 	add	r3, sp, #8
  416b64:	e8830006 	stm	r3, {r1, r2}
  416b68:	e2506000 	subs	r6, r0, #0
  416b6c:	0a000003 	beq	416b80 <cvSeqRemoveSlice+0x28>
  416b70:	e1d620b2 	ldrh	r2, [r6, #2]
  416b74:	e59f3354 	ldr	r3, [pc, #852]	; 416ed0 <cvSeqRemoveSlice+0x378>
  416b78:	e1530802 	cmp	r3, r2, lsl #16
  416b7c:	0a00000b 	beq	416bb0 <cvSeqRemoveSlice+0x58>
  416b80:	e59f334c 	ldr	r3, [pc, #844]	; 416ed4 <cvSeqRemoveSlice+0x37c>
  416b84:	e58d3000 	str	r3, [sp]
  416b88:	e3e00004 	mvn	r0, #4
  416b8c:	e59f1344 	ldr	r1, [pc, #836]	; 416ed8 <cvSeqRemoveSlice+0x380>
  416b90:	e08f1001 	add	r1, pc, r1
  416b94:	e2811faa 	add	r1, r1, #680	; 0x2a8
  416b98:	e59f233c 	ldr	r2, [pc, #828]	; 416edc <cvSeqRemoveSlice+0x384>
  416b9c:	e08f2002 	add	r2, pc, r2
  416ba0:	e59f3338 	ldr	r3, [pc, #824]	; 416ee0 <cvSeqRemoveSlice+0x388>
  416ba4:	e08f3003 	add	r3, pc, r3
  416ba8:	ebffefbe 	bl	412aa8 <cvError>
  416bac:	ea0000c4 	b	416ec4 <cvSeqRemoveSlice+0x36c>
  416bb0:	e28d3008 	add	r3, sp, #8
  416bb4:	e8930003 	ldm	r3, {r0, r1}
  416bb8:	e1a02006 	mov	r2, r6
  416bbc:	ebfff614 	bl	414414 <cvSliceLength>
  416bc0:	e5964018 	ldr	r4, [r6, #24]
  416bc4:	e59d3008 	ldr	r3, [sp, #8]
  416bc8:	e3530000 	cmp	r3, #0
  416bcc:	b0843003 	addlt	r3, r4, r3
  416bd0:	b58d3008 	strlt	r3, [sp, #8]
  416bd4:	ba000002 	blt	416be4 <cvSeqRemoveSlice+0x8c>
  416bd8:	e1540003 	cmp	r4, r3
  416bdc:	d0643003 	rsble	r3, r4, r3
  416be0:	d58d3008 	strle	r3, [sp, #8]
  416be4:	e59d8008 	ldr	r8, [sp, #8]
  416be8:	e1580004 	cmp	r8, r4
  416bec:	3a00000b 	bcc	416c20 <cvSeqRemoveSlice+0xc8>
  416bf0:	e59f32ec 	ldr	r3, [pc, #748]	; 416ee4 <cvSeqRemoveSlice+0x38c>
  416bf4:	e58d3000 	str	r3, [sp]
  416bf8:	e3e000d2 	mvn	r0, #210	; 0xd2
  416bfc:	e59f12e4 	ldr	r1, [pc, #740]	; 416ee8 <cvSeqRemoveSlice+0x390>
  416c00:	e08f1001 	add	r1, pc, r1
  416c04:	e2811faa 	add	r1, r1, #680	; 0x2a8
  416c08:	e59f22dc 	ldr	r2, [pc, #732]	; 416eec <cvSeqRemoveSlice+0x394>
  416c0c:	e08f2002 	add	r2, pc, r2
  416c10:	e59f32d8 	ldr	r3, [pc, #728]	; 416ef0 <cvSeqRemoveSlice+0x398>
  416c14:	e08f3003 	add	r3, pc, r3
  416c18:	ebffefa2 	bl	412aa8 <cvError>
  416c1c:	ea0000a8 	b	416ec4 <cvSeqRemoveSlice+0x36c>
  416c20:	e0807008 	add	r7, r0, r8
  416c24:	e58d700c 	str	r7, [sp, #12]
  416c28:	e1540007 	cmp	r4, r7
  416c2c:	da00009a 	ble	416e9c <cvSeqRemoveSlice+0x344>
  416c30:	e596501c 	ldr	r5, [r6, #28]
  416c34:	e1a00006 	mov	r0, r6
  416c38:	e28d1010 	add	r1, sp, #16
  416c3c:	e3a02000 	mov	r2, #0
  416c40:	ebfff7a6 	bl	414ae0 <cvStartReadSeq>
  416c44:	e1a00006 	mov	r0, r6
  416c48:	e28d1030 	add	r1, sp, #48	; 0x30
  416c4c:	e3a02000 	mov	r2, #0
  416c50:	ebfff7a2 	bl	414ae0 <cvStartReadSeq>
  416c54:	e0674004 	rsb	r4, r7, r4
  416c58:	e1580004 	cmp	r8, r4
  416c5c:	da000047 	ble	416d80 <cvSeqRemoveSlice+0x228>
  416c60:	e5964018 	ldr	r4, [r6, #24]
  416c64:	e0674004 	rsb	r4, r7, r4
  416c68:	e28d0010 	add	r0, sp, #16
  416c6c:	e1a01008 	mov	r1, r8
  416c70:	e3a02000 	mov	r2, #0
  416c74:	ebfff899 	bl	414ee0 <cvSetSeqReaderPos>
  416c78:	e28d0030 	add	r0, sp, #48	; 0x30
  416c7c:	e1a01007 	mov	r1, r7
  416c80:	e3a02000 	mov	r2, #0
  416c84:	ebfff895 	bl	414ee0 <cvSetSeqReaderPos>
  416c88:	e3a07000 	mov	r7, #0
  416c8c:	ea000031 	b	416d58 <cvSeqRemoveSlice+0x200>
  416c90:	e1a02005 	mov	r2, r5
  416c94:	e59d101c 	ldr	r1, [sp, #28]
  416c98:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
  416c9c:	e3150003 	tst	r5, #3
  416ca0:	1a000018 	bne	416d08 <cvSeqRemoveSlice+0x1b0>
  416ca4:	e3100003 	tst	r0, #3
  416ca8:	1a000001 	bne	416cb4 <cvSeqRemoveSlice+0x15c>
  416cac:	e3110003 	tst	r1, #3
  416cb0:	0a00000c 	beq	416ce8 <cvSeqRemoveSlice+0x190>
  416cb4:	e59f0238 	ldr	r0, [pc, #568]	; 416ef4 <cvSeqRemoveSlice+0x39c>
  416cb8:	e08f0000 	add	r0, pc, r0
  416cbc:	e59f1234 	ldr	r1, [pc, #564]	; 416ef8 <cvSeqRemoveSlice+0x3a0>
  416cc0:	e59f2234 	ldr	r2, [pc, #564]	; 416efc <cvSeqRemoveSlice+0x3a4>
  416cc4:	e08f2002 	add	r2, pc, r2
  416cc8:	e2822f8a 	add	r2, r2, #552	; 0x228
  416ccc:	e59f322c 	ldr	r3, [pc, #556]	; 416f00 <cvSeqRemoveSlice+0x3a8>
  416cd0:	e08f3003 	add	r3, pc, r3
  416cd4:	fa00741e 	blx	433d54 <__assert_func>
  416cd8:	e790c003 	ldr	ip, [r0, r3]
  416cdc:	e781c003 	str	ip, [r1, r3]
  416ce0:	e2833004 	add	r3, r3, #4
  416ce4:	ea000000 	b	416cec <cvSeqRemoveSlice+0x194>
  416ce8:	e3a03000 	mov	r3, #0
  416cec:	e1530002 	cmp	r3, r2
  416cf0:	3afffff8 	bcc	416cd8 <cvSeqRemoveSlice+0x180>
  416cf4:	ea000006 	b	416d14 <cvSeqRemoveSlice+0x1bc>
  416cf8:	e7d0c003 	ldrb	ip, [r0, r3]
  416cfc:	e7c1c003 	strb	ip, [r1, r3]
  416d00:	e2833001 	add	r3, r3, #1
  416d04:	ea000000 	b	416d0c <cvSeqRemoveSlice+0x1b4>
  416d08:	e3a03000 	mov	r3, #0
  416d0c:	e1530002 	cmp	r3, r2
  416d10:	3afffff8 	bcc	416cf8 <cvSeqRemoveSlice+0x1a0>
  416d14:	e59d301c 	ldr	r3, [sp, #28]
  416d18:	e0833005 	add	r3, r3, r5
  416d1c:	e58d301c 	str	r3, [sp, #28]
  416d20:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
  416d24:	e1530002 	cmp	r3, r2
  416d28:	228d0010 	addcs	r0, sp, #16
  416d2c:	23a01001 	movcs	r1, #1
  416d30:	2bfff7b0 	blcs	414bf8 <cvChangeSeqBlock>
  416d34:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  416d38:	e0833005 	add	r3, r3, r5
  416d3c:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  416d40:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  416d44:	e1530002 	cmp	r3, r2
  416d48:	228d0030 	addcs	r0, sp, #48	; 0x30
  416d4c:	23a01001 	movcs	r1, #1
  416d50:	2bfff7a8 	blcs	414bf8 <cvChangeSeqBlock>
  416d54:	e2877001 	add	r7, r7, #1
  416d58:	e1570004 	cmp	r7, r4
  416d5c:	baffffcb 	blt	416c90 <cvSeqRemoveSlice+0x138>
  416d60:	e1a00006 	mov	r0, r6
  416d64:	e3a01000 	mov	r1, #0
  416d68:	e59d3008 	ldr	r3, [sp, #8]
  416d6c:	e59d200c 	ldr	r2, [sp, #12]
  416d70:	e0632002 	rsb	r2, r3, r2
  416d74:	e1a03001 	mov	r3, r1
  416d78:	ebfffe08 	bl	4165a0 <cvSeqPopMulti>
  416d7c:	ea000050 	b	416ec4 <cvSeqRemoveSlice+0x36c>
  416d80:	e28d0010 	add	r0, sp, #16
  416d84:	e1a01007 	mov	r1, r7
  416d88:	e3a02000 	mov	r2, #0
  416d8c:	ebfff853 	bl	414ee0 <cvSetSeqReaderPos>
  416d90:	e28d0030 	add	r0, sp, #48	; 0x30
  416d94:	e1a01008 	mov	r1, r8
  416d98:	e3a02000 	mov	r2, #0
  416d9c:	ebfff84f 	bl	414ee0 <cvSetSeqReaderPos>
  416da0:	e3a07000 	mov	r7, #0
  416da4:	ea000032 	b	416e74 <cvSeqRemoveSlice+0x31c>
  416da8:	e1a04005 	mov	r4, r5
  416dac:	e2659000 	rsb	r9, r5, #0
  416db0:	e59d301c 	ldr	r3, [sp, #28]
  416db4:	e0833009 	add	r3, r3, r9
  416db8:	e58d301c 	str	r3, [sp, #28]
  416dbc:	e59d2020 	ldr	r2, [sp, #32]
  416dc0:	e1530002 	cmp	r3, r2
  416dc4:	328d0010 	addcc	r0, sp, #16
  416dc8:	33e01000 	mvncc	r1, #0
  416dcc:	3bfff789 	blcc	414bf8 <cvChangeSeqBlock>
  416dd0:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  416dd4:	e0833009 	add	r3, r3, r9
  416dd8:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  416ddc:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
  416de0:	e1530002 	cmp	r3, r2
  416de4:	328d0030 	addcc	r0, sp, #48	; 0x30
  416de8:	33e01000 	mvncc	r1, #0
  416dec:	3bfff781 	blcc	414bf8 <cvChangeSeqBlock>
  416df0:	e59d201c 	ldr	r2, [sp, #28]
  416df4:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
  416df8:	e3150003 	tst	r5, #3
  416dfc:	1a000018 	bne	416e64 <cvSeqRemoveSlice+0x30c>
  416e00:	e3110003 	tst	r1, #3
  416e04:	1a000001 	bne	416e10 <cvSeqRemoveSlice+0x2b8>
  416e08:	e3120003 	tst	r2, #3
  416e0c:	0a00000c 	beq	416e44 <cvSeqRemoveSlice+0x2ec>
  416e10:	e59f00ec 	ldr	r0, [pc, #236]	; 416f04 <cvSeqRemoveSlice+0x3ac>
  416e14:	e08f0000 	add	r0, pc, r0
  416e18:	e59f10e8 	ldr	r1, [pc, #232]	; 416f08 <cvSeqRemoveSlice+0x3b0>
  416e1c:	e59f20e8 	ldr	r2, [pc, #232]	; 416f0c <cvSeqRemoveSlice+0x3b4>
  416e20:	e08f2002 	add	r2, pc, r2
  416e24:	e2822f8a 	add	r2, r2, #552	; 0x228
  416e28:	e59f30e0 	ldr	r3, [pc, #224]	; 416f10 <cvSeqRemoveSlice+0x3b8>
  416e2c:	e08f3003 	add	r3, pc, r3
  416e30:	fa0073c7 	blx	433d54 <__assert_func>
  416e34:	e7910003 	ldr	r0, [r1, r3]
  416e38:	e7820003 	str	r0, [r2, r3]
  416e3c:	e2833004 	add	r3, r3, #4
  416e40:	ea000000 	b	416e48 <cvSeqRemoveSlice+0x2f0>
  416e44:	e3a03000 	mov	r3, #0
  416e48:	e1530004 	cmp	r3, r4
  416e4c:	3afffff8 	bcc	416e34 <cvSeqRemoveSlice+0x2dc>
  416e50:	ea000006 	b	416e70 <cvSeqRemoveSlice+0x318>
  416e54:	e7d10003 	ldrb	r0, [r1, r3]
  416e58:	e7c20003 	strb	r0, [r2, r3]
  416e5c:	e2833001 	add	r3, r3, #1
  416e60:	ea000000 	b	416e68 <cvSeqRemoveSlice+0x310>
  416e64:	e3a03000 	mov	r3, #0
  416e68:	e1530004 	cmp	r3, r4
  416e6c:	3afffff8 	bcc	416e54 <cvSeqRemoveSlice+0x2fc>
  416e70:	e2877001 	add	r7, r7, #1
  416e74:	e1570008 	cmp	r7, r8
  416e78:	baffffca 	blt	416da8 <cvSeqRemoveSlice+0x250>
  416e7c:	e1a00006 	mov	r0, r6
  416e80:	e3a01000 	mov	r1, #0
  416e84:	e59d3008 	ldr	r3, [sp, #8]
  416e88:	e59d200c 	ldr	r2, [sp, #12]
  416e8c:	e0632002 	rsb	r2, r3, r2
  416e90:	e3a03001 	mov	r3, #1
  416e94:	ebfffdc1 	bl	4165a0 <cvSeqPopMulti>
  416e98:	ea000009 	b	416ec4 <cvSeqRemoveSlice+0x36c>
  416e9c:	e1a00006 	mov	r0, r6
  416ea0:	e3a01000 	mov	r1, #0
  416ea4:	e0682004 	rsb	r2, r8, r4
  416ea8:	e1a03001 	mov	r3, r1
  416eac:	ebfffdbb 	bl	4165a0 <cvSeqPopMulti>
  416eb0:	e1a00006 	mov	r0, r6
  416eb4:	e3a01000 	mov	r1, #0
  416eb8:	e0642007 	rsb	r2, r4, r7
  416ebc:	e3a03001 	mov	r3, #1
  416ec0:	ebfffdb6 	bl	4165a0 <cvSeqPopMulti>
  416ec4:	e28dd054 	add	sp, sp, #84	; 0x54
  416ec8:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  416ecc:	e12fff1e 	bx	lr
  416ed0:	42990000 	.word	0x42990000
  416ed4:	00000787 	.word	0x00000787
  416ed8:	1fbe9cdc 	.word	0x1fbe9cdc
  416edc:	00028be8 	.word	0x00028be8
  416ee0:	000287a0 	.word	0x000287a0
  416ee4:	00000792 	.word	0x00000792
  416ee8:	1fbe9c6c 	.word	0x1fbe9c6c
  416eec:	00028ba4 	.word	0x00028ba4
  416ef0:	00028730 	.word	0x00028730
  416ef4:	0002868c 	.word	0x0002868c
  416ef8:	000007a6 	.word	0x000007a6
  416efc:	00028134 	.word	0x00028134
  416f00:	000265b8 	.word	0x000265b8
  416f04:	00028530 	.word	0x00028530
  416f08:	000007b8 	.word	0x000007b8
  416f0c:	00027fd8 	.word	0x00027fd8
  416f10:	0002645c 	.word	0x0002645c

00416f14 <cvSeqInsertSlice>:
  416f14:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  416f18:	e24dd0a4 	sub	sp, sp, #164	; 0xa4
  416f1c:	e2505000 	subs	r5, r0, #0
  416f20:	0a000005 	beq	416f3c <cvSeqInsertSlice+0x28>
  416f24:	e1a07001 	mov	r7, r1
  416f28:	e1a06002 	mov	r6, r2
  416f2c:	e1d520b2 	ldrh	r2, [r5, #2]
  416f30:	e59f35a4 	ldr	r3, [pc, #1444]	; 4174dc <cvSeqInsertSlice+0x5c8>
  416f34:	e1530802 	cmp	r3, r2, lsl #16
  416f38:	0a00000b 	beq	416f6c <cvSeqInsertSlice+0x58>
  416f3c:	e59f359c 	ldr	r3, [pc, #1436]	; 4174e0 <cvSeqInsertSlice+0x5cc>
  416f40:	e58d3000 	str	r3, [sp]
  416f44:	e3e00004 	mvn	r0, #4
  416f48:	e59f1594 	ldr	r1, [pc, #1428]	; 4174e4 <cvSeqInsertSlice+0x5d0>
  416f4c:	e08f1001 	add	r1, pc, r1
  416f50:	e2811faf 	add	r1, r1, #700	; 0x2bc
  416f54:	e59f258c 	ldr	r2, [pc, #1420]	; 4174e8 <cvSeqInsertSlice+0x5d4>
  416f58:	e08f2002 	add	r2, pc, r2
  416f5c:	e59f3588 	ldr	r3, [pc, #1416]	; 4174ec <cvSeqInsertSlice+0x5d8>
  416f60:	e08f3003 	add	r3, pc, r3
  416f64:	ebffeecf 	bl	412aa8 <cvError>
  416f68:	ea000158 	b	4174d0 <cvSeqInsertSlice+0x5bc>
  416f6c:	e3560000 	cmp	r6, #0
  416f70:	0a000003 	beq	416f84 <cvSeqInsertSlice+0x70>
  416f74:	e1d620b2 	ldrh	r2, [r6, #2]
  416f78:	e59f355c 	ldr	r3, [pc, #1372]	; 4174dc <cvSeqInsertSlice+0x5c8>
  416f7c:	e1530802 	cmp	r3, r2, lsl #16
  416f80:	0a000050 	beq	4170c8 <cvSeqInsertSlice+0x1b4>
  416f84:	e3560000 	cmp	r6, #0
  416f88:	0a00000d 	beq	416fc4 <cvSeqInsertSlice+0xb0>
  416f8c:	e5961000 	ldr	r1, [r6]
  416f90:	e1a02821 	lsr	r2, r1, #16
  416f94:	e59f3554 	ldr	r3, [pc, #1364]	; 4174f0 <cvSeqInsertSlice+0x5dc>
  416f98:	e1530802 	cmp	r3, r2, lsl #16
  416f9c:	1a000008 	bne	416fc4 <cvSeqInsertSlice+0xb0>
  416fa0:	e5960018 	ldr	r0, [r6, #24]
  416fa4:	e3500000 	cmp	r0, #0
  416fa8:	da000005 	ble	416fc4 <cvSeqInsertSlice+0xb0>
  416fac:	e596c014 	ldr	ip, [r6, #20]
  416fb0:	e35c0000 	cmp	ip, #0
  416fb4:	da000002 	ble	416fc4 <cvSeqInsertSlice+0xb0>
  416fb8:	e5963010 	ldr	r3, [r6, #16]
  416fbc:	e3530000 	cmp	r3, #0
  416fc0:	1a00000b 	bne	416ff4 <cvSeqInsertSlice+0xe0>
  416fc4:	e59f3528 	ldr	r3, [pc, #1320]	; 4174f4 <cvSeqInsertSlice+0x5e0>
  416fc8:	e58d3000 	str	r3, [sp]
  416fcc:	e3e00004 	mvn	r0, #4
  416fd0:	e59f1520 	ldr	r1, [pc, #1312]	; 4174f8 <cvSeqInsertSlice+0x5e4>
  416fd4:	e08f1001 	add	r1, pc, r1
  416fd8:	e2811faf 	add	r1, r1, #700	; 0x2bc
  416fdc:	e59f2518 	ldr	r2, [pc, #1304]	; 4174fc <cvSeqInsertSlice+0x5e8>
  416fe0:	e08f2002 	add	r2, pc, r2
  416fe4:	e59f3514 	ldr	r3, [pc, #1300]	; 417500 <cvSeqInsertSlice+0x5ec>
  416fe8:	e08f3003 	add	r3, pc, r3
  416fec:	ebffeead 	bl	412aa8 <cvError>
  416ff0:	ea000136 	b	4174d0 <cvSeqInsertSlice+0x5bc>
  416ff4:	e3110901 	tst	r1, #16384	; 0x4000
  416ff8:	0a000003 	beq	41700c <cvSeqInsertSlice+0xf8>
  416ffc:	e35c0001 	cmp	ip, #1
  417000:	0a00000d 	beq	41703c <cvSeqInsertSlice+0x128>
  417004:	e3500001 	cmp	r0, #1
  417008:	0a00000b 	beq	41703c <cvSeqInsertSlice+0x128>
  41700c:	e59f34f0 	ldr	r3, [pc, #1264]	; 417504 <cvSeqInsertSlice+0x5f0>
  417010:	e58d3000 	str	r3, [sp]
  417014:	e3e00004 	mvn	r0, #4
  417018:	e59f14e8 	ldr	r1, [pc, #1256]	; 417508 <cvSeqInsertSlice+0x5f4>
  41701c:	e08f1001 	add	r1, pc, r1
  417020:	e2811faf 	add	r1, r1, #700	; 0x2bc
  417024:	e59f24e0 	ldr	r2, [pc, #1248]	; 41750c <cvSeqInsertSlice+0x5f8>
  417028:	e08f2002 	add	r2, pc, r2
  41702c:	e59f34dc 	ldr	r3, [pc, #1244]	; 417510 <cvSeqInsertSlice+0x5fc>
  417030:	e08f3003 	add	r3, pc, r3
  417034:	ebffee9b 	bl	412aa8 <cvError>
  417038:	ea000124 	b	4174d0 <cvSeqInsertSlice+0x5bc>
  41703c:	e201ef7e 	and	lr, r1, #504	; 0x1f8
  417040:	e1a0e1ce 	asr	lr, lr, #3
  417044:	e28ee001 	add	lr, lr, #1
  417048:	e2011007 	and	r1, r1, #7
  41704c:	e1a01081 	lsl	r1, r1, #1
  417050:	e59f24bc 	ldr	r2, [pc, #1212]	; 417514 <cvSeqInsertSlice+0x600>
  417054:	e1a02132 	lsr	r2, r2, r1
  417058:	e2022003 	and	r2, r2, #3
  41705c:	e080100c 	add	r1, r0, ip
  417060:	e2411001 	sub	r1, r1, #1
  417064:	e58d1000 	str	r1, [sp]
  417068:	e28d1068 	add	r1, sp, #104	; 0x68
  41706c:	e58d1004 	str	r1, [sp, #4]
  417070:	e28d1014 	add	r1, sp, #20
  417074:	e58d1008 	str	r1, [sp, #8]
  417078:	e3a00000 	mov	r0, #0
  41707c:	e3a01038 	mov	r1, #56	; 0x38
  417080:	e1a0221e 	lsl	r2, lr, r2
  417084:	ebfff4fa 	bl	414474 <cvMakeSeqHeaderForArray>
  417088:	e1a06000 	mov	r6, r0
  41708c:	ebffee54 	bl	4129e4 <cvGetErrStatus>
  417090:	e3500000 	cmp	r0, #0
  417094:	aa00000b 	bge	4170c8 <cvSeqInsertSlice+0x1b4>
  417098:	e59f3478 	ldr	r3, [pc, #1144]	; 417518 <cvSeqInsertSlice+0x604>
  41709c:	e58d3000 	str	r3, [sp]
  4170a0:	e3e00000 	mvn	r0, #0
  4170a4:	e59f1470 	ldr	r1, [pc, #1136]	; 41751c <cvSeqInsertSlice+0x608>
  4170a8:	e08f1001 	add	r1, pc, r1
  4170ac:	e2811faf 	add	r1, r1, #700	; 0x2bc
  4170b0:	e59f2468 	ldr	r2, [pc, #1128]	; 417520 <cvSeqInsertSlice+0x60c>
  4170b4:	e08f2002 	add	r2, pc, r2
  4170b8:	e59f3464 	ldr	r3, [pc, #1124]	; 417524 <cvSeqInsertSlice+0x610>
  4170bc:	e08f3003 	add	r3, pc, r3
  4170c0:	ebffee78 	bl	412aa8 <cvError>
  4170c4:	ea000101 	b	4174d0 <cvSeqInsertSlice+0x5bc>
  4170c8:	e595401c 	ldr	r4, [r5, #28]
  4170cc:	e596301c 	ldr	r3, [r6, #28]
  4170d0:	e1540003 	cmp	r4, r3
  4170d4:	0a00000b 	beq	417108 <cvSeqInsertSlice+0x1f4>
  4170d8:	e59f3448 	ldr	r3, [pc, #1096]	; 417528 <cvSeqInsertSlice+0x614>
  4170dc:	e58d3000 	str	r3, [sp]
  4170e0:	e3e000d0 	mvn	r0, #208	; 0xd0
  4170e4:	e59f1440 	ldr	r1, [pc, #1088]	; 41752c <cvSeqInsertSlice+0x618>
  4170e8:	e08f1001 	add	r1, pc, r1
  4170ec:	e2811faf 	add	r1, r1, #700	; 0x2bc
  4170f0:	e59f2438 	ldr	r2, [pc, #1080]	; 417530 <cvSeqInsertSlice+0x61c>
  4170f4:	e08f2002 	add	r2, pc, r2
  4170f8:	e59f3434 	ldr	r3, [pc, #1076]	; 417534 <cvSeqInsertSlice+0x620>
  4170fc:	e08f3003 	add	r3, pc, r3
  417100:	ebffee68 	bl	412aa8 <cvError>
  417104:	ea0000f1 	b	4174d0 <cvSeqInsertSlice+0x5bc>
  417108:	e5968018 	ldr	r8, [r6, #24]
  41710c:	e3580000 	cmp	r8, #0
  417110:	0a0000ee 	beq	4174d0 <cvSeqInsertSlice+0x5bc>
  417114:	e595a018 	ldr	sl, [r5, #24]
  417118:	e3570000 	cmp	r7, #0
  41711c:	a3a09000 	movge	r9, #0
  417120:	b1a0900a 	movlt	r9, sl
  417124:	e0897007 	add	r7, r9, r7
  417128:	e157000a 	cmp	r7, sl
  41712c:	d3a09000 	movle	r9, #0
  417130:	c1a0900a 	movgt	r9, sl
  417134:	e0699007 	rsb	r9, r9, r7
  417138:	e159000a 	cmp	r9, sl
  41713c:	9a00000b 	bls	417170 <cvSeqInsertSlice+0x25c>
  417140:	e59f33f0 	ldr	r3, [pc, #1008]	; 417538 <cvSeqInsertSlice+0x624>
  417144:	e58d3000 	str	r3, [sp]
  417148:	e3e000d2 	mvn	r0, #210	; 0xd2
  41714c:	e59f13e8 	ldr	r1, [pc, #1000]	; 41753c <cvSeqInsertSlice+0x628>
  417150:	e08f1001 	add	r1, pc, r1
  417154:	e2811faf 	add	r1, r1, #700	; 0x2bc
  417158:	e59f23e0 	ldr	r2, [pc, #992]	; 417540 <cvSeqInsertSlice+0x62c>
  41715c:	e08f2002 	add	r2, pc, r2
  417160:	e59f33dc 	ldr	r3, [pc, #988]	; 417544 <cvSeqInsertSlice+0x630>
  417164:	e08f3003 	add	r3, pc, r3
  417168:	ebffee4e 	bl	412aa8 <cvError>
  41716c:	ea0000d7 	b	4174d0 <cvSeqInsertSlice+0x5bc>
  417170:	e15900ca 	cmp	r9, sl, asr #1
  417174:	aa000048 	bge	41729c <cvSeqInsertSlice+0x388>
  417178:	e1a00005 	mov	r0, r5
  41717c:	e3a01000 	mov	r1, #0
  417180:	e1a02008 	mov	r2, r8
  417184:	e3a03001 	mov	r3, #1
  417188:	ebfffc5a 	bl	4162f8 <cvSeqPushMulti>
  41718c:	e1a00005 	mov	r0, r5
  417190:	e28d1028 	add	r1, sp, #40	; 0x28
  417194:	e3a02000 	mov	r2, #0
  417198:	ebfff650 	bl	414ae0 <cvStartReadSeq>
  41719c:	e1a00005 	mov	r0, r5
  4171a0:	e28d5048 	add	r5, sp, #72	; 0x48
  4171a4:	e1a01005 	mov	r1, r5
  4171a8:	e3a02000 	mov	r2, #0
  4171ac:	ebfff64b 	bl	414ae0 <cvStartReadSeq>
  4171b0:	e1a00005 	mov	r0, r5
  4171b4:	e1a01008 	mov	r1, r8
  4171b8:	e3a02000 	mov	r2, #0
  4171bc:	ebfff747 	bl	414ee0 <cvSetSeqReaderPos>
  4171c0:	e3a05000 	mov	r5, #0
  4171c4:	ea000031 	b	417290 <cvSeqInsertSlice+0x37c>
  4171c8:	e1a02004 	mov	r2, r4
  4171cc:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
  4171d0:	e59d0054 	ldr	r0, [sp, #84]	; 0x54
  4171d4:	e3140003 	tst	r4, #3
  4171d8:	1a000018 	bne	417240 <cvSeqInsertSlice+0x32c>
  4171dc:	e3100003 	tst	r0, #3
  4171e0:	1a000001 	bne	4171ec <cvSeqInsertSlice+0x2d8>
  4171e4:	e3110003 	tst	r1, #3
  4171e8:	0a00000c 	beq	417220 <cvSeqInsertSlice+0x30c>
  4171ec:	e59f0354 	ldr	r0, [pc, #852]	; 417548 <cvSeqInsertSlice+0x634>
  4171f0:	e08f0000 	add	r0, pc, r0
  4171f4:	e59f1350 	ldr	r1, [pc, #848]	; 41754c <cvSeqInsertSlice+0x638>
  4171f8:	e59f2350 	ldr	r2, [pc, #848]	; 417550 <cvSeqInsertSlice+0x63c>
  4171fc:	e08f2002 	add	r2, pc, r2
  417200:	e2822e25 	add	r2, r2, #592	; 0x250
  417204:	e59f3348 	ldr	r3, [pc, #840]	; 417554 <cvSeqInsertSlice+0x640>
  417208:	e08f3003 	add	r3, pc, r3
  41720c:	fa0072d0 	blx	433d54 <__assert_func>
  417210:	e790c003 	ldr	ip, [r0, r3]
  417214:	e781c003 	str	ip, [r1, r3]
  417218:	e2833004 	add	r3, r3, #4
  41721c:	ea000000 	b	417224 <cvSeqInsertSlice+0x310>
  417220:	e3a03000 	mov	r3, #0
  417224:	e1530002 	cmp	r3, r2
  417228:	3afffff8 	bcc	417210 <cvSeqInsertSlice+0x2fc>
  41722c:	ea000006 	b	41724c <cvSeqInsertSlice+0x338>
  417230:	e7d0c003 	ldrb	ip, [r0, r3]
  417234:	e7c1c003 	strb	ip, [r1, r3]
  417238:	e2833001 	add	r3, r3, #1
  41723c:	ea000000 	b	417244 <cvSeqInsertSlice+0x330>
  417240:	e3a03000 	mov	r3, #0
  417244:	e1530002 	cmp	r3, r2
  417248:	3afffff8 	bcc	417230 <cvSeqInsertSlice+0x31c>
  41724c:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
  417250:	e0833004 	add	r3, r3, r4
  417254:	e58d3034 	str	r3, [sp, #52]	; 0x34
  417258:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  41725c:	e1530002 	cmp	r3, r2
  417260:	228d0028 	addcs	r0, sp, #40	; 0x28
  417264:	23a01001 	movcs	r1, #1
  417268:	2bfff662 	blcs	414bf8 <cvChangeSeqBlock>
  41726c:	e59d3054 	ldr	r3, [sp, #84]	; 0x54
  417270:	e0833004 	add	r3, r3, r4
  417274:	e58d3054 	str	r3, [sp, #84]	; 0x54
  417278:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
  41727c:	e1530002 	cmp	r3, r2
  417280:	228d0048 	addcs	r0, sp, #72	; 0x48
  417284:	23a01001 	movcs	r1, #1
  417288:	2bfff65a 	blcs	414bf8 <cvChangeSeqBlock>
  41728c:	e2855001 	add	r5, r5, #1
  417290:	e1550009 	cmp	r5, r9
  417294:	baffffcb 	blt	4171c8 <cvSeqInsertSlice+0x2b4>
  417298:	ea00004e 	b	4173d8 <cvSeqInsertSlice+0x4c4>
  41729c:	e1a00005 	mov	r0, r5
  4172a0:	e3a01000 	mov	r1, #0
  4172a4:	e1a02008 	mov	r2, r8
  4172a8:	e1a03001 	mov	r3, r1
  4172ac:	ebfffc11 	bl	4162f8 <cvSeqPushMulti>
  4172b0:	e1a00005 	mov	r0, r5
  4172b4:	e28d7028 	add	r7, sp, #40	; 0x28
  4172b8:	e1a01007 	mov	r1, r7
  4172bc:	e3a02000 	mov	r2, #0
  4172c0:	ebfff606 	bl	414ae0 <cvStartReadSeq>
  4172c4:	e1a00005 	mov	r0, r5
  4172c8:	e28db048 	add	fp, sp, #72	; 0x48
  4172cc:	e1a0100b 	mov	r1, fp
  4172d0:	e3a02000 	mov	r2, #0
  4172d4:	ebfff601 	bl	414ae0 <cvStartReadSeq>
  4172d8:	e1a0000b 	mov	r0, fp
  4172dc:	e1a0100a 	mov	r1, sl
  4172e0:	e3a02000 	mov	r2, #0
  4172e4:	ebfff6fd 	bl	414ee0 <cvSetSeqReaderPos>
  4172e8:	e1a00007 	mov	r0, r7
  4172ec:	e5951018 	ldr	r1, [r5, #24]
  4172f0:	e3a02000 	mov	r2, #0
  4172f4:	ebfff6f9 	bl	414ee0 <cvSetSeqReaderPos>
  4172f8:	e3a07000 	mov	r7, #0
  4172fc:	ea000032 	b	4173cc <cvSeqInsertSlice+0x4b8>
  417300:	e1a05004 	mov	r5, r4
  417304:	e264b000 	rsb	fp, r4, #0
  417308:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
  41730c:	e083300b 	add	r3, r3, fp
  417310:	e58d3034 	str	r3, [sp, #52]	; 0x34
  417314:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
  417318:	e1530002 	cmp	r3, r2
  41731c:	328d0028 	addcc	r0, sp, #40	; 0x28
  417320:	33e01000 	mvncc	r1, #0
  417324:	3bfff633 	blcc	414bf8 <cvChangeSeqBlock>
  417328:	e59d3054 	ldr	r3, [sp, #84]	; 0x54
  41732c:	e083300b 	add	r3, r3, fp
  417330:	e58d3054 	str	r3, [sp, #84]	; 0x54
  417334:	e59d2058 	ldr	r2, [sp, #88]	; 0x58
  417338:	e1530002 	cmp	r3, r2
  41733c:	328d0048 	addcc	r0, sp, #72	; 0x48
  417340:	33e01000 	mvncc	r1, #0
  417344:	3bfff62b 	blcc	414bf8 <cvChangeSeqBlock>
  417348:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
  41734c:	e59d1054 	ldr	r1, [sp, #84]	; 0x54
  417350:	e3140003 	tst	r4, #3
  417354:	1a000018 	bne	4173bc <cvSeqInsertSlice+0x4a8>
  417358:	e3110003 	tst	r1, #3
  41735c:	1a000001 	bne	417368 <cvSeqInsertSlice+0x454>
  417360:	e3120003 	tst	r2, #3
  417364:	0a00000c 	beq	41739c <cvSeqInsertSlice+0x488>
  417368:	e59f01e8 	ldr	r0, [pc, #488]	; 417558 <cvSeqInsertSlice+0x644>
  41736c:	e08f0000 	add	r0, pc, r0
  417370:	e59f11e4 	ldr	r1, [pc, #484]	; 41755c <cvSeqInsertSlice+0x648>
  417374:	e59f21e4 	ldr	r2, [pc, #484]	; 417560 <cvSeqInsertSlice+0x64c>
  417378:	e08f2002 	add	r2, pc, r2
  41737c:	e2822e25 	add	r2, r2, #592	; 0x250
  417380:	e59f31dc 	ldr	r3, [pc, #476]	; 417564 <cvSeqInsertSlice+0x650>
  417384:	e08f3003 	add	r3, pc, r3
  417388:	fa007271 	blx	433d54 <__assert_func>
  41738c:	e7910003 	ldr	r0, [r1, r3]
  417390:	e7820003 	str	r0, [r2, r3]
  417394:	e2833004 	add	r3, r3, #4
  417398:	ea000000 	b	4173a0 <cvSeqInsertSlice+0x48c>
  41739c:	e3a03000 	mov	r3, #0
  4173a0:	e1530005 	cmp	r3, r5
  4173a4:	3afffff8 	bcc	41738c <cvSeqInsertSlice+0x478>
  4173a8:	ea000006 	b	4173c8 <cvSeqInsertSlice+0x4b4>
  4173ac:	e7d10003 	ldrb	r0, [r1, r3]
  4173b0:	e7c20003 	strb	r0, [r2, r3]
  4173b4:	e2833001 	add	r3, r3, #1
  4173b8:	ea000000 	b	4173c0 <cvSeqInsertSlice+0x4ac>
  4173bc:	e3a03000 	mov	r3, #0
  4173c0:	e1530005 	cmp	r3, r5
  4173c4:	3afffff8 	bcc	4173ac <cvSeqInsertSlice+0x498>
  4173c8:	e2877001 	add	r7, r7, #1
  4173cc:	e069300a 	rsb	r3, r9, sl
  4173d0:	e1530007 	cmp	r3, r7
  4173d4:	caffffc9 	bgt	417300 <cvSeqInsertSlice+0x3ec>
  4173d8:	e1a00006 	mov	r0, r6
  4173dc:	e28d1048 	add	r1, sp, #72	; 0x48
  4173e0:	e3a02000 	mov	r2, #0
  4173e4:	ebfff5bd 	bl	414ae0 <cvStartReadSeq>
  4173e8:	e28d0028 	add	r0, sp, #40	; 0x28
  4173ec:	e1a01009 	mov	r1, r9
  4173f0:	e3a02000 	mov	r2, #0
  4173f4:	ebfff6b9 	bl	414ee0 <cvSetSeqReaderPos>
  4173f8:	e3a05000 	mov	r5, #0
  4173fc:	ea000031 	b	4174c8 <cvSeqInsertSlice+0x5b4>
  417400:	e1a02004 	mov	r2, r4
  417404:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
  417408:	e59d0054 	ldr	r0, [sp, #84]	; 0x54
  41740c:	e3140003 	tst	r4, #3
  417410:	1a000018 	bne	417478 <cvSeqInsertSlice+0x564>
  417414:	e3100003 	tst	r0, #3
  417418:	1a000001 	bne	417424 <cvSeqInsertSlice+0x510>
  41741c:	e3110003 	tst	r1, #3
  417420:	0a00000c 	beq	417458 <cvSeqInsertSlice+0x544>
  417424:	e59f013c 	ldr	r0, [pc, #316]	; 417568 <cvSeqInsertSlice+0x654>
  417428:	e08f0000 	add	r0, pc, r0
  41742c:	e3a01e82 	mov	r1, #2080	; 0x820
  417430:	e59f2134 	ldr	r2, [pc, #308]	; 41756c <cvSeqInsertSlice+0x658>
  417434:	e08f2002 	add	r2, pc, r2
  417438:	e2822e25 	add	r2, r2, #592	; 0x250
  41743c:	e59f312c 	ldr	r3, [pc, #300]	; 417570 <cvSeqInsertSlice+0x65c>
  417440:	e08f3003 	add	r3, pc, r3
  417444:	fa007242 	blx	433d54 <__assert_func>
  417448:	e790c003 	ldr	ip, [r0, r3]
  41744c:	e781c003 	str	ip, [r1, r3]
  417450:	e2833004 	add	r3, r3, #4
  417454:	ea000000 	b	41745c <cvSeqInsertSlice+0x548>
  417458:	e3a03000 	mov	r3, #0
  41745c:	e1530002 	cmp	r3, r2
  417460:	3afffff8 	bcc	417448 <cvSeqInsertSlice+0x534>
  417464:	ea000006 	b	417484 <cvSeqInsertSlice+0x570>
  417468:	e7d0c003 	ldrb	ip, [r0, r3]
  41746c:	e7c1c003 	strb	ip, [r1, r3]
  417470:	e2833001 	add	r3, r3, #1
  417474:	ea000000 	b	41747c <cvSeqInsertSlice+0x568>
  417478:	e3a03000 	mov	r3, #0
  41747c:	e1530002 	cmp	r3, r2
  417480:	3afffff8 	bcc	417468 <cvSeqInsertSlice+0x554>
  417484:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
  417488:	e0833004 	add	r3, r3, r4
  41748c:	e58d3034 	str	r3, [sp, #52]	; 0x34
  417490:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  417494:	e1530002 	cmp	r3, r2
  417498:	228d0028 	addcs	r0, sp, #40	; 0x28
  41749c:	23a01001 	movcs	r1, #1
  4174a0:	2bfff5d4 	blcs	414bf8 <cvChangeSeqBlock>
  4174a4:	e59d3054 	ldr	r3, [sp, #84]	; 0x54
  4174a8:	e0833004 	add	r3, r3, r4
  4174ac:	e58d3054 	str	r3, [sp, #84]	; 0x54
  4174b0:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
  4174b4:	e1530002 	cmp	r3, r2
  4174b8:	228d0048 	addcs	r0, sp, #72	; 0x48
  4174bc:	23a01001 	movcs	r1, #1
  4174c0:	2bfff5cc 	blcs	414bf8 <cvChangeSeqBlock>
  4174c4:	e2855001 	add	r5, r5, #1
  4174c8:	e1550008 	cmp	r5, r8
  4174cc:	baffffcb 	blt	417400 <cvSeqInsertSlice+0x4ec>
  4174d0:	e28dd0a4 	add	sp, sp, #164	; 0xa4
  4174d4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4174d8:	e12fff1e 	bx	lr
  4174dc:	42990000 	.word	0x42990000
  4174e0:	000007d8 	.word	0x000007d8
  4174e4:	1fbe9920 	.word	0x1fbe9920
  4174e8:	0002887c 	.word	0x0002887c
  4174ec:	000283e4 	.word	0x000283e4
  4174f0:	42420000 	.word	0x42420000
  4174f4:	000007de 	.word	0x000007de
  4174f8:	1fbe9898 	.word	0x1fbe9898
  4174fc:	00028818 	.word	0x00028818
  417500:	0002835c 	.word	0x0002835c
  417504:	000007e1 	.word	0x000007e1
  417508:	1fbe9850 	.word	0x1fbe9850
  41750c:	000287f4 	.word	0x000287f4
  417510:	00028314 	.word	0x00028314
  417514:	0000ba50 	.word	0x0000ba50
  417518:	000007e6 	.word	0x000007e6
  41751c:	1fbe97c4 	.word	0x1fbe97c4
  417520:	00025f1c 	.word	0x00025f1c
  417524:	00028288 	.word	0x00028288
  417528:	000007eb 	.word	0x000007eb
  41752c:	1fbe9784 	.word	0x1fbe9784
  417530:	00028758 	.word	0x00028758
  417534:	00028248 	.word	0x00028248
  417538:	000007f7 	.word	0x000007f7
  41753c:	1fbe971c 	.word	0x1fbe971c
  417540:	000292b4 	.word	0x000292b4
  417544:	000281e0 	.word	0x000281e0
  417548:	00028154 	.word	0x00028154
  41754c:	00000805 	.word	0x00000805
  417550:	00027bfc 	.word	0x00027bfc
  417554:	00026080 	.word	0x00026080
  417558:	00027fd8 	.word	0x00027fd8
  41755c:	00000817 	.word	0x00000817
  417560:	00027a80 	.word	0x00027a80
  417564:	00025f04 	.word	0x00025f04
  417568:	00027f1c 	.word	0x00027f1c
  41756c:	000279c4 	.word	0x000279c4
  417570:	00025e48 	.word	0x00025e48

00417574 <cvSeqSort>:
  417574:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  417578:	e24dde73 	sub	sp, sp, #1840	; 0x730
  41757c:	e24dd004 	sub	sp, sp, #4
  417580:	e58d200c 	str	r2, [sp, #12]
  417584:	e2503000 	subs	r3, r0, #0
  417588:	e58d3020 	str	r3, [sp, #32]
  41758c:	0a000004 	beq	4175a4 <cvSeqSort+0x30>
  417590:	e1a08001 	mov	r8, r1
  417594:	e1d320b2 	ldrh	r2, [r3, #2]
  417598:	e59f3f18 	ldr	r3, [pc, #3864]	; 4184b8 <cvSeqSort+0xf44>
  41759c:	e1530802 	cmp	r3, r2, lsl #16
  4175a0:	0a00000e 	beq	4175e0 <cvSeqSort+0x6c>
  4175a4:	e59d3020 	ldr	r3, [sp, #32]
  4175a8:	e3530000 	cmp	r3, #0
  4175ac:	03e0001a 	mvneq	r0, #26
  4175b0:	13e00004 	mvnne	r0, #4
  4175b4:	e59f3f00 	ldr	r3, [pc, #3840]	; 4184bc <cvSeqSort+0xf48>
  4175b8:	e58d3000 	str	r3, [sp]
  4175bc:	e59f1efc 	ldr	r1, [pc, #3836]	; 4184c0 <cvSeqSort+0xf4c>
  4175c0:	e08f1001 	add	r1, pc, r1
  4175c4:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  4175c8:	e59f2ef4 	ldr	r2, [pc, #3828]	; 4184c4 <cvSeqSort+0xf50>
  4175cc:	e08f2002 	add	r2, pc, r2
  4175d0:	e59f3ef0 	ldr	r3, [pc, #3824]	; 4184c8 <cvSeqSort+0xf54>
  4175d4:	e08f3003 	add	r3, pc, r3
  4175d8:	ebffed32 	bl	412aa8 <cvError>
  4175dc:	ea0003e6 	b	41857c <cvSeqSort+0x1008>
  4175e0:	e3510000 	cmp	r1, #0
  4175e4:	1a00000b 	bne	417618 <cvSeqSort+0xa4>
  4175e8:	e59f3edc 	ldr	r3, [pc, #3804]	; 4184cc <cvSeqSort+0xf58>
  4175ec:	e58d3000 	str	r3, [sp]
  4175f0:	e3e0001a 	mvn	r0, #26
  4175f4:	e59f1ed4 	ldr	r1, [pc, #3796]	; 4184d0 <cvSeqSort+0xf5c>
  4175f8:	e08f1001 	add	r1, pc, r1
  4175fc:	e2811e2d 	add	r1, r1, #720	; 0x2d0
  417600:	e59f2ecc 	ldr	r2, [pc, #3788]	; 4184d4 <cvSeqSort+0xf60>
  417604:	e08f2002 	add	r2, pc, r2
  417608:	e59f3ec8 	ldr	r3, [pc, #3784]	; 4184d8 <cvSeqSort+0xf64>
  41760c:	e08f3003 	add	r3, pc, r3
  417610:	ebffed24 	bl	412aa8 <cvError>
  417614:	ea0003d8 	b	41857c <cvSeqSort+0x1008>
  417618:	e59d2020 	ldr	r2, [sp, #32]
  41761c:	e5923018 	ldr	r3, [r2, #24]
  417620:	e3530001 	cmp	r3, #1
  417624:	da0003d4 	ble	41857c <cvSeqSort+0x1008>
  417628:	e1a03002 	mov	r3, r2
  41762c:	e592401c 	ldr	r4, [r2, #28]
  417630:	e0642184 	rsb	r2, r4, r4, lsl #3
  417634:	e58d2024 	str	r2, [sp, #36]	; 0x24
  417638:	e1a00003 	mov	r0, r3
  41763c:	e28d5030 	add	r5, sp, #48	; 0x30
  417640:	e1a01005 	mov	r1, r5
  417644:	e3a02000 	mov	r2, #0
  417648:	ebfff524 	bl	414ae0 <cvStartReadSeq>
  41764c:	e28de050 	add	lr, sp, #80	; 0x50
  417650:	e1a0c005 	mov	ip, r5
  417654:	e8bc000f 	ldm	ip!, {r0, r1, r2, r3}
  417658:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
  41765c:	e89c000f 	ldm	ip, {r0, r1, r2, r3}
  417660:	e88e000f 	stm	lr, {r0, r1, r2, r3}
  417664:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
  417668:	e58d3130 	str	r3, [sp, #304]	; 0x130
  41766c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  417670:	e58d3134 	str	r3, [sp, #308]	; 0x134
  417674:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
  417678:	e58d2138 	str	r2, [sp, #312]	; 0x138
  41767c:	e59d1044 	ldr	r1, [sp, #68]	; 0x44
  417680:	e58d113c 	str	r1, [sp, #316]	; 0x13c
  417684:	e1a0a004 	mov	sl, r4
  417688:	e264b000 	rsb	fp, r4, #0
  41768c:	e083300b 	add	r3, r3, fp
  417690:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  417694:	e1520003 	cmp	r2, r3
  417698:	828d0050 	addhi	r0, sp, #80	; 0x50
  41769c:	83e01000 	mvnhi	r1, #0
  4176a0:	8bfff554 	blhi	414bf8 <cvChangeSeqBlock>
  4176a4:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
  4176a8:	e58d3140 	str	r3, [sp, #320]	; 0x140
  4176ac:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  4176b0:	e58d3144 	str	r3, [sp, #324]	; 0x144
  4176b4:	e59d3060 	ldr	r3, [sp, #96]	; 0x60
  4176b8:	e58d3148 	str	r3, [sp, #328]	; 0x148
  4176bc:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
  4176c0:	e58d314c 	str	r3, [sp, #332]	; 0x14c
  4176c4:	e3a03000 	mov	r3, #0
  4176c8:	e58d3010 	str	r3, [sp, #16]
  4176cc:	ea0003a7 	b	418570 <cvSeqSort+0xffc>
  4176d0:	e28d2e73 	add	r2, sp, #1840	; 0x730
  4176d4:	e59d1010 	ldr	r1, [sp, #16]
  4176d8:	e0823281 	add	r3, r2, r1, lsl #5
  4176dc:	e5132600 	ldr	r2, [r3, #-1536]	; 0x600
  4176e0:	e58d2038 	str	r2, [sp, #56]	; 0x38
  4176e4:	e51325fc 	ldr	r2, [r3, #-1532]	; 0x5fc
  4176e8:	e58d203c 	str	r2, [sp, #60]	; 0x3c
  4176ec:	e51325f8 	ldr	r2, [r3, #-1528]	; 0x5f8
  4176f0:	e58d2040 	str	r2, [sp, #64]	; 0x40
  4176f4:	e51325f4 	ldr	r2, [r3, #-1524]	; 0x5f4
  4176f8:	e58d2044 	str	r2, [sp, #68]	; 0x44
  4176fc:	e51325f0 	ldr	r2, [r3, #-1520]	; 0x5f0
  417700:	e58d2058 	str	r2, [sp, #88]	; 0x58
  417704:	e51325ec 	ldr	r2, [r3, #-1516]	; 0x5ec
  417708:	e58d205c 	str	r2, [sp, #92]	; 0x5c
  41770c:	e51325e8 	ldr	r2, [r3, #-1512]	; 0x5e8
  417710:	e58d2060 	str	r2, [sp, #96]	; 0x60
  417714:	e51335e4 	ldr	r3, [r3, #-1508]	; 0x5e4
  417718:	e58d3064 	str	r3, [sp, #100]	; 0x64
  41771c:	e2413001 	sub	r3, r1, #1
  417720:	e58d3010 	str	r3, [sp, #16]
  417724:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
  417728:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
  41772c:	e1520003 	cmp	r2, r3
  417730:	1a000004 	bne	417748 <cvSeqSort+0x1d4>
  417734:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
  417738:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  41773c:	e06cc003 	rsb	ip, ip, r3
  417740:	e08cc004 	add	ip, ip, r4
  417744:	ea000006 	b	417764 <cvSeqSort+0x1f0>
  417748:	e28d0050 	add	r0, sp, #80	; 0x50
  41774c:	ebfff5af 	bl	414e10 <cvGetSeqReaderPos>
  417750:	e1a05000 	mov	r5, r0
  417754:	e28d0030 	add	r0, sp, #48	; 0x30
  417758:	ebfff5ac 	bl	414e10 <cvGetSeqReaderPos>
  41775c:	e0600005 	rsb	r0, r0, r5
  417760:	e02c4490 	mla	ip, r0, r4, r4
  417764:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  417768:	e15c0003 	cmp	ip, r3
  41776c:	ca000051 	bgt	4178b8 <cvSeqSort+0x344>
  417770:	e28dce11 	add	ip, sp, #272	; 0x110
  417774:	e28de030 	add	lr, sp, #48	; 0x30
  417778:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  41777c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  417780:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  417784:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  417788:	e28dc0f0 	add	ip, sp, #240	; 0xf0
  41778c:	e28dee11 	add	lr, sp, #272	; 0x110
  417790:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  417794:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  417798:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  41779c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  4177a0:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  4177a4:	e083300a 	add	r3, r3, sl
  4177a8:	e58d30fc 	str	r3, [sp, #252]	; 0xfc
  4177ac:	e59d2104 	ldr	r2, [sp, #260]	; 0x104
  4177b0:	e1530002 	cmp	r3, r2
  4177b4:	228d00f0 	addcs	r0, sp, #240	; 0xf0
  4177b8:	23a01001 	movcs	r1, #1
  4177bc:	2bfff50d 	blcs	414bf8 <cvChangeSeqBlock>
  4177c0:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  4177c4:	e083300a 	add	r3, r3, sl
  4177c8:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  4177cc:	e59d2064 	ldr	r2, [sp, #100]	; 0x64
  4177d0:	e1530002 	cmp	r3, r2
  4177d4:	3a000032 	bcc	4178a4 <cvSeqSort+0x330>
  4177d8:	e28d0050 	add	r0, sp, #80	; 0x50
  4177dc:	e3a01001 	mov	r1, #1
  4177e0:	ebfff504 	bl	414bf8 <cvChangeSeqBlock>
  4177e4:	ea00002e 	b	4178a4 <cvSeqSort+0x330>
  4177e8:	e58d311c 	str	r3, [sp, #284]	; 0x11c
  4177ec:	e59d30f8 	ldr	r3, [sp, #248]	; 0xf8
  4177f0:	e59d2118 	ldr	r2, [sp, #280]	; 0x118
  4177f4:	e1520003 	cmp	r2, r3
  4177f8:	0a00001d 	beq	417874 <cvSeqSort+0x300>
  4177fc:	e58d3118 	str	r3, [sp, #280]	; 0x118
  417800:	e59d3100 	ldr	r3, [sp, #256]	; 0x100
  417804:	e58d3120 	str	r3, [sp, #288]	; 0x120
  417808:	e59d3104 	ldr	r3, [sp, #260]	; 0x104
  41780c:	e58d3124 	str	r3, [sp, #292]	; 0x124
  417810:	ea000017 	b	417874 <cvSeqSort+0x300>
  417814:	e085300b 	add	r3, r5, fp
  417818:	e58d311c 	str	r3, [sp, #284]	; 0x11c
  41781c:	e59d2120 	ldr	r2, [sp, #288]	; 0x120
  417820:	e1530002 	cmp	r3, r2
  417824:	328d0e11 	addcc	r0, sp, #272	; 0x110
  417828:	33e01000 	mvncc	r1, #0
  41782c:	3bfff4f1 	blcc	414bf8 <cvChangeSeqBlock>
  417830:	e59d011c 	ldr	r0, [sp, #284]	; 0x11c
  417834:	e1a01005 	mov	r1, r5
  417838:	e59d200c 	ldr	r2, [sp, #12]
  41783c:	e1a0e00f 	mov	lr, pc
  417840:	e12fff18 	bx	r8
  417844:	e3500000 	cmp	r0, #0
  417848:	da00000d 	ble	417884 <cvSeqSort+0x310>
  41784c:	e3a03000 	mov	r3, #0
  417850:	ea000005 	b	41786c <cvSeqSort+0x2f8>
  417854:	e59d211c 	ldr	r2, [sp, #284]	; 0x11c
  417858:	e7d21003 	ldrb	r1, [r2, r3]
  41785c:	e7d50003 	ldrb	r0, [r5, r3]
  417860:	e7c20003 	strb	r0, [r2, r3]
  417864:	e7c51003 	strb	r1, [r5, r3]
  417868:	e2833001 	add	r3, r3, #1
  41786c:	e1530004 	cmp	r3, r4
  417870:	bafffff7 	blt	417854 <cvSeqSort+0x2e0>
  417874:	e59d511c 	ldr	r5, [sp, #284]	; 0x11c
  417878:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  41787c:	e1550003 	cmp	r5, r3
  417880:	1affffe3 	bne	417814 <cvSeqSort+0x2a0>
  417884:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  417888:	e083300a 	add	r3, r3, sl
  41788c:	e58d30fc 	str	r3, [sp, #252]	; 0xfc
  417890:	e59d2104 	ldr	r2, [sp, #260]	; 0x104
  417894:	e1530002 	cmp	r3, r2
  417898:	228d00f0 	addcs	r0, sp, #240	; 0xf0
  41789c:	23a01001 	movcs	r1, #1
  4178a0:	2bfff4d4 	blcs	414bf8 <cvChangeSeqBlock>
  4178a4:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  4178a8:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
  4178ac:	e1530002 	cmp	r3, r2
  4178b0:	1affffcc 	bne	4177e8 <cvSeqSort+0x274>
  4178b4:	ea00032d 	b	418570 <cvSeqSort+0xffc>
  4178b8:	e28de0f0 	add	lr, sp, #240	; 0xf0
  4178bc:	e28d5030 	add	r5, sp, #48	; 0x30
  4178c0:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
  4178c4:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
  4178c8:	e895000f 	ldm	r5, {r0, r1, r2, r3}
  4178cc:	e88e000f 	stm	lr, {r0, r1, r2, r3}
  4178d0:	e28de070 	add	lr, sp, #112	; 0x70
  4178d4:	e28d50f0 	add	r5, sp, #240	; 0xf0
  4178d8:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
  4178dc:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
  4178e0:	e895000f 	ldm	r5, {r0, r1, r2, r3}
  4178e4:	e88e000f 	stm	lr, {r0, r1, r2, r3}
  4178e8:	e28de0d0 	add	lr, sp, #208	; 0xd0
  4178ec:	e28d5050 	add	r5, sp, #80	; 0x50
  4178f0:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
  4178f4:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
  4178f8:	e895000f 	ldm	r5, {r0, r1, r2, r3}
  4178fc:	e88e000f 	stm	lr, {r0, r1, r2, r3}
  417900:	e28de0b0 	add	lr, sp, #176	; 0xb0
  417904:	e28d50d0 	add	r5, sp, #208	; 0xd0
  417908:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
  41790c:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
  417910:	e895000f 	ldm	r5, {r0, r1, r2, r3}
  417914:	e88e000f 	stm	lr, {r0, r1, r2, r3}
  417918:	e1a0000c 	mov	r0, ip
  41791c:	e1a01004 	mov	r1, r4
  417920:	fa006823 	blx	4319b4 <__aeabi_idiv>
  417924:	e1a07000 	mov	r7, r0
  417928:	e3500028 	cmp	r0, #40	; 0x28
  41792c:	da0000bb 	ble	417c20 <cvSeqSort+0x6ac>
  417930:	e2806007 	add	r6, r0, #7
  417934:	e3500000 	cmp	r0, #0
  417938:	a1a06000 	movge	r6, r0
  41793c:	e1a061c6 	asr	r6, r6, #3
  417940:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  417944:	e58d3014 	str	r3, [sp, #20]
  417948:	e28d50f0 	add	r5, sp, #240	; 0xf0
  41794c:	e1a00005 	mov	r0, r5
  417950:	e1a01006 	mov	r1, r6
  417954:	e3a02001 	mov	r2, #1
  417958:	ebfff560 	bl	414ee0 <cvSetSeqReaderPos>
  41795c:	e59d20fc 	ldr	r2, [sp, #252]	; 0xfc
  417960:	e58d2018 	str	r2, [sp, #24]
  417964:	e1a00005 	mov	r0, r5
  417968:	e1a01006 	mov	r1, r6
  41796c:	e3a02001 	mov	r2, #1
  417970:	ebfff55a 	bl	414ee0 <cvSetSeqReaderPos>
  417974:	e59d50fc 	ldr	r5, [sp, #252]	; 0xfc
  417978:	e59d0014 	ldr	r0, [sp, #20]
  41797c:	e59d1018 	ldr	r1, [sp, #24]
  417980:	e59d200c 	ldr	r2, [sp, #12]
  417984:	e1a0e00f 	mov	lr, pc
  417988:	e12fff18 	bx	r8
  41798c:	e3500000 	cmp	r0, #0
  417990:	aa000011 	bge	4179dc <cvSeqSort+0x468>
  417994:	e59d0018 	ldr	r0, [sp, #24]
  417998:	e1a01005 	mov	r1, r5
  41799c:	e59d200c 	ldr	r2, [sp, #12]
  4179a0:	e1a0e00f 	mov	lr, pc
  4179a4:	e12fff18 	bx	r8
  4179a8:	e3500000 	cmp	r0, #0
  4179ac:	ba000007 	blt	4179d0 <cvSeqSort+0x45c>
  4179b0:	e59d0014 	ldr	r0, [sp, #20]
  4179b4:	e1a01005 	mov	r1, r5
  4179b8:	e59d200c 	ldr	r2, [sp, #12]
  4179bc:	e1a0e00f 	mov	lr, pc
  4179c0:	e12fff18 	bx	r8
  4179c4:	e3500000 	cmp	r0, #0
  4179c8:	a59d5014 	ldrge	r5, [sp, #20]
  4179cc:	ea000000 	b	4179d4 <cvSeqSort+0x460>
  4179d0:	e59d5018 	ldr	r5, [sp, #24]
  4179d4:	e58d5014 	str	r5, [sp, #20]
  4179d8:	ea000010 	b	417a20 <cvSeqSort+0x4ac>
  4179dc:	e59d0018 	ldr	r0, [sp, #24]
  4179e0:	e1a01005 	mov	r1, r5
  4179e4:	e59d200c 	ldr	r2, [sp, #12]
  4179e8:	e1a0e00f 	mov	lr, pc
  4179ec:	e12fff18 	bx	r8
  4179f0:	e3500000 	cmp	r0, #0
  4179f4:	ca000007 	bgt	417a18 <cvSeqSort+0x4a4>
  4179f8:	e59d0014 	ldr	r0, [sp, #20]
  4179fc:	e1a01005 	mov	r1, r5
  417a00:	e59d200c 	ldr	r2, [sp, #12]
  417a04:	e1a0e00f 	mov	lr, pc
  417a08:	e12fff18 	bx	r8
  417a0c:	e3500000 	cmp	r0, #0
  417a10:	b59d5014 	ldrlt	r5, [sp, #20]
  417a14:	ea000000 	b	417a1c <cvSeqSort+0x4a8>
  417a18:	e59d5018 	ldr	r5, [sp, #24]
  417a1c:	e58d5014 	str	r5, [sp, #20]
  417a20:	e0873fa7 	add	r3, r7, r7, lsr #31
  417a24:	e1a030c3 	asr	r3, r3, #1
  417a28:	e58d3028 	str	r3, [sp, #40]	; 0x28
  417a2c:	e0462106 	sub	r2, r6, r6, lsl #2
  417a30:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  417a34:	e28d50f0 	add	r5, sp, #240	; 0xf0
  417a38:	e1a00005 	mov	r0, r5
  417a3c:	e0831002 	add	r1, r3, r2
  417a40:	e3a02001 	mov	r2, #1
  417a44:	ebfff525 	bl	414ee0 <cvSetSeqReaderPos>
  417a48:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  417a4c:	e58d3018 	str	r3, [sp, #24]
  417a50:	e1a00005 	mov	r0, r5
  417a54:	e1a01006 	mov	r1, r6
  417a58:	e3a02001 	mov	r2, #1
  417a5c:	ebfff51f 	bl	414ee0 <cvSetSeqReaderPos>
  417a60:	e59d20fc 	ldr	r2, [sp, #252]	; 0xfc
  417a64:	e58d201c 	str	r2, [sp, #28]
  417a68:	e1a00005 	mov	r0, r5
  417a6c:	e1a01006 	mov	r1, r6
  417a70:	e3a02001 	mov	r2, #1
  417a74:	ebfff519 	bl	414ee0 <cvSetSeqReaderPos>
  417a78:	e59d50fc 	ldr	r5, [sp, #252]	; 0xfc
  417a7c:	e59d0018 	ldr	r0, [sp, #24]
  417a80:	e59d101c 	ldr	r1, [sp, #28]
  417a84:	e59d200c 	ldr	r2, [sp, #12]
  417a88:	e1a0e00f 	mov	lr, pc
  417a8c:	e12fff18 	bx	r8
  417a90:	e3500000 	cmp	r0, #0
  417a94:	aa000011 	bge	417ae0 <cvSeqSort+0x56c>
  417a98:	e59d001c 	ldr	r0, [sp, #28]
  417a9c:	e1a01005 	mov	r1, r5
  417aa0:	e59d200c 	ldr	r2, [sp, #12]
  417aa4:	e1a0e00f 	mov	lr, pc
  417aa8:	e12fff18 	bx	r8
  417aac:	e3500000 	cmp	r0, #0
  417ab0:	ba000007 	blt	417ad4 <cvSeqSort+0x560>
  417ab4:	e59d0018 	ldr	r0, [sp, #24]
  417ab8:	e1a01005 	mov	r1, r5
  417abc:	e59d200c 	ldr	r2, [sp, #12]
  417ac0:	e1a0e00f 	mov	lr, pc
  417ac4:	e12fff18 	bx	r8
  417ac8:	e3500000 	cmp	r0, #0
  417acc:	a59d5018 	ldrge	r5, [sp, #24]
  417ad0:	ea000000 	b	417ad8 <cvSeqSort+0x564>
  417ad4:	e59d501c 	ldr	r5, [sp, #28]
  417ad8:	e58d5018 	str	r5, [sp, #24]
  417adc:	ea000010 	b	417b24 <cvSeqSort+0x5b0>
  417ae0:	e59d001c 	ldr	r0, [sp, #28]
  417ae4:	e1a01005 	mov	r1, r5
  417ae8:	e59d200c 	ldr	r2, [sp, #12]
  417aec:	e1a0e00f 	mov	lr, pc
  417af0:	e12fff18 	bx	r8
  417af4:	e3500000 	cmp	r0, #0
  417af8:	ca000007 	bgt	417b1c <cvSeqSort+0x5a8>
  417afc:	e59d0018 	ldr	r0, [sp, #24]
  417b00:	e1a01005 	mov	r1, r5
  417b04:	e59d200c 	ldr	r2, [sp, #12]
  417b08:	e1a0e00f 	mov	lr, pc
  417b0c:	e12fff18 	bx	r8
  417b10:	e3500000 	cmp	r0, #0
  417b14:	b59d5018 	ldrlt	r5, [sp, #24]
  417b18:	ea000000 	b	417b20 <cvSeqSort+0x5ac>
  417b1c:	e59d501c 	ldr	r5, [sp, #28]
  417b20:	e58d5018 	str	r5, [sp, #24]
  417b24:	e2471001 	sub	r1, r7, #1
  417b28:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  417b2c:	e0831001 	add	r1, r3, r1
  417b30:	e28d50f0 	add	r5, sp, #240	; 0xf0
  417b34:	e1a00005 	mov	r0, r5
  417b38:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
  417b3c:	e0631001 	rsb	r1, r3, r1
  417b40:	e3a02001 	mov	r2, #1
  417b44:	ebfff4e5 	bl	414ee0 <cvSetSeqReaderPos>
  417b48:	e59d70fc 	ldr	r7, [sp, #252]	; 0xfc
  417b4c:	e1a00005 	mov	r0, r5
  417b50:	e1a01006 	mov	r1, r6
  417b54:	e3a02001 	mov	r2, #1
  417b58:	ebfff4e0 	bl	414ee0 <cvSetSeqReaderPos>
  417b5c:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  417b60:	e58d301c 	str	r3, [sp, #28]
  417b64:	e1a00005 	mov	r0, r5
  417b68:	e1a01006 	mov	r1, r6
  417b6c:	e3a02001 	mov	r2, #1
  417b70:	ebfff4da 	bl	414ee0 <cvSetSeqReaderPos>
  417b74:	e59d50fc 	ldr	r5, [sp, #252]	; 0xfc
  417b78:	e1a00007 	mov	r0, r7
  417b7c:	e59d101c 	ldr	r1, [sp, #28]
  417b80:	e59d200c 	ldr	r2, [sp, #12]
  417b84:	e1a0e00f 	mov	lr, pc
  417b88:	e12fff18 	bx	r8
  417b8c:	e3500000 	cmp	r0, #0
  417b90:	aa000011 	bge	417bdc <cvSeqSort+0x668>
  417b94:	e59d001c 	ldr	r0, [sp, #28]
  417b98:	e1a01005 	mov	r1, r5
  417b9c:	e59d600c 	ldr	r6, [sp, #12]
  417ba0:	e1a02006 	mov	r2, r6
  417ba4:	e1a0e00f 	mov	lr, pc
  417ba8:	e12fff18 	bx	r8
  417bac:	e3500000 	cmp	r0, #0
  417bb0:	ba000007 	blt	417bd4 <cvSeqSort+0x660>
  417bb4:	e1a00007 	mov	r0, r7
  417bb8:	e1a01005 	mov	r1, r5
  417bbc:	e1a02006 	mov	r2, r6
  417bc0:	e1a0e00f 	mov	lr, pc
  417bc4:	e12fff18 	bx	r8
  417bc8:	e3500000 	cmp	r0, #0
  417bcc:	a1a05007 	movge	r5, r7
  417bd0:	ea000023 	b	417c64 <cvSeqSort+0x6f0>
  417bd4:	e59d501c 	ldr	r5, [sp, #28]
  417bd8:	ea000021 	b	417c64 <cvSeqSort+0x6f0>
  417bdc:	e59d001c 	ldr	r0, [sp, #28]
  417be0:	e1a01005 	mov	r1, r5
  417be4:	e59d200c 	ldr	r2, [sp, #12]
  417be8:	e1a0e00f 	mov	lr, pc
  417bec:	e12fff18 	bx	r8
  417bf0:	e3500000 	cmp	r0, #0
  417bf4:	ca000007 	bgt	417c18 <cvSeqSort+0x6a4>
  417bf8:	e1a00007 	mov	r0, r7
  417bfc:	e1a01005 	mov	r1, r5
  417c00:	e59d200c 	ldr	r2, [sp, #12]
  417c04:	e1a0e00f 	mov	lr, pc
  417c08:	e12fff18 	bx	r8
  417c0c:	e3500000 	cmp	r0, #0
  417c10:	b1a05007 	movlt	r5, r7
  417c14:	ea000012 	b	417c64 <cvSeqSort+0x6f0>
  417c18:	e59d501c 	ldr	r5, [sp, #28]
  417c1c:	ea000010 	b	417c64 <cvSeqSort+0x6f0>
  417c20:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  417c24:	e58d3014 	str	r3, [sp, #20]
  417c28:	e0805fa0 	add	r5, r0, r0, lsr #31
  417c2c:	e1a050c5 	asr	r5, r5, #1
  417c30:	e28d60f0 	add	r6, sp, #240	; 0xf0
  417c34:	e1a00006 	mov	r0, r6
  417c38:	e1a01005 	mov	r1, r5
  417c3c:	e3a02001 	mov	r2, #1
  417c40:	ebfff4a6 	bl	414ee0 <cvSetSeqReaderPos>
  417c44:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  417c48:	e58d3018 	str	r3, [sp, #24]
  417c4c:	e2471001 	sub	r1, r7, #1
  417c50:	e1a00006 	mov	r0, r6
  417c54:	e0651001 	rsb	r1, r5, r1
  417c58:	e3a02001 	mov	r2, #1
  417c5c:	ebfff49f 	bl	414ee0 <cvSetSeqReaderPos>
  417c60:	e59d50fc 	ldr	r5, [sp, #252]	; 0xfc
  417c64:	e59d0014 	ldr	r0, [sp, #20]
  417c68:	e59d1018 	ldr	r1, [sp, #24]
  417c6c:	e59d200c 	ldr	r2, [sp, #12]
  417c70:	e1a0e00f 	mov	lr, pc
  417c74:	e12fff18 	bx	r8
  417c78:	e3500000 	cmp	r0, #0
  417c7c:	aa000011 	bge	417cc8 <cvSeqSort+0x754>
  417c80:	e59d0018 	ldr	r0, [sp, #24]
  417c84:	e1a01005 	mov	r1, r5
  417c88:	e59d600c 	ldr	r6, [sp, #12]
  417c8c:	e1a02006 	mov	r2, r6
  417c90:	e1a0e00f 	mov	lr, pc
  417c94:	e12fff18 	bx	r8
  417c98:	e3500000 	cmp	r0, #0
  417c9c:	ba000007 	blt	417cc0 <cvSeqSort+0x74c>
  417ca0:	e59d0014 	ldr	r0, [sp, #20]
  417ca4:	e1a01005 	mov	r1, r5
  417ca8:	e1a02006 	mov	r2, r6
  417cac:	e1a0e00f 	mov	lr, pc
  417cb0:	e12fff18 	bx	r8
  417cb4:	e3500000 	cmp	r0, #0
  417cb8:	a59d5014 	ldrge	r5, [sp, #20]
  417cbc:	ea000011 	b	417d08 <cvSeqSort+0x794>
  417cc0:	e59d5018 	ldr	r5, [sp, #24]
  417cc4:	ea00000f 	b	417d08 <cvSeqSort+0x794>
  417cc8:	e59d0018 	ldr	r0, [sp, #24]
  417ccc:	e1a01005 	mov	r1, r5
  417cd0:	e59d200c 	ldr	r2, [sp, #12]
  417cd4:	e1a0e00f 	mov	lr, pc
  417cd8:	e12fff18 	bx	r8
  417cdc:	e3500000 	cmp	r0, #0
  417ce0:	ca000007 	bgt	417d04 <cvSeqSort+0x790>
  417ce4:	e59d0014 	ldr	r0, [sp, #20]
  417ce8:	e1a01005 	mov	r1, r5
  417cec:	e59d200c 	ldr	r2, [sp, #12]
  417cf0:	e1a0e00f 	mov	lr, pc
  417cf4:	e12fff18 	bx	r8
  417cf8:	e3500000 	cmp	r0, #0
  417cfc:	b59d5014 	ldrlt	r5, [sp, #20]
  417d00:	ea000000 	b	417d08 <cvSeqSort+0x794>
  417d04:	e59d5018 	ldr	r5, [sp, #24]
  417d08:	e28dc030 	add	ip, sp, #48	; 0x30
  417d0c:	e28de070 	add	lr, sp, #112	; 0x70
  417d10:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  417d14:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  417d18:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  417d1c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  417d20:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  417d24:	e1530005 	cmp	r3, r5
  417d28:	1a000008 	bne	417d50 <cvSeqSort+0x7dc>
  417d2c:	ea00000b 	b	417d60 <cvSeqSort+0x7ec>
  417d30:	e7d51003 	ldrb	r1, [r5, r3]
  417d34:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  417d38:	e7d22003 	ldrb	r2, [r2, r3]
  417d3c:	e7c52003 	strb	r2, [r5, r3]
  417d40:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  417d44:	e7c21003 	strb	r1, [r2, r3]
  417d48:	e2833001 	add	r3, r3, #1
  417d4c:	ea000000 	b	417d54 <cvSeqSort+0x7e0>
  417d50:	e3a03000 	mov	r3, #0
  417d54:	e1530004 	cmp	r3, r4
  417d58:	bafffff4 	blt	417d30 <cvSeqSort+0x7bc>
  417d5c:	e59d503c 	ldr	r5, [sp, #60]	; 0x3c
  417d60:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  417d64:	e083300a 	add	r3, r3, sl
  417d68:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  417d6c:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  417d70:	e1530002 	cmp	r3, r2
  417d74:	228d0030 	addcs	r0, sp, #48	; 0x30
  417d78:	23a01001 	movcs	r1, #1
  417d7c:	2bfff39d 	blcs	414bf8 <cvChangeSeqBlock>
  417d80:	e28dc090 	add	ip, sp, #144	; 0x90
  417d84:	e28de030 	add	lr, sp, #48	; 0x30
  417d88:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  417d8c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  417d90:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  417d94:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  417d98:	e3a07000 	mov	r7, #0
  417d9c:	ea000029 	b	417e48 <cvSeqSort+0x8d4>
  417da0:	e3590000 	cmp	r9, #0
  417da4:	1a00001c 	bne	417e1c <cvSeqSort+0x8a8>
  417da8:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  417dac:	e59d209c 	ldr	r2, [sp, #156]	; 0x9c
  417db0:	e1520003 	cmp	r2, r3
  417db4:	1a000009 	bne	417de0 <cvSeqSort+0x86c>
  417db8:	ea00000b 	b	417dec <cvSeqSort+0x878>
  417dbc:	e59d209c 	ldr	r2, [sp, #156]	; 0x9c
  417dc0:	e7d21003 	ldrb	r1, [r2, r3]
  417dc4:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
  417dc8:	e7d00003 	ldrb	r0, [r0, r3]
  417dcc:	e7c20003 	strb	r0, [r2, r3]
  417dd0:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  417dd4:	e7c21003 	strb	r1, [r2, r3]
  417dd8:	e2833001 	add	r3, r3, #1
  417ddc:	ea000000 	b	417de4 <cvSeqSort+0x870>
  417de0:	e3a03000 	mov	r3, #0
  417de4:	e1530004 	cmp	r3, r4
  417de8:	bafffff3 	blt	417dbc <cvSeqSort+0x848>
  417dec:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
  417df0:	e083300a 	add	r3, r3, sl
  417df4:	e58d309c 	str	r3, [sp, #156]	; 0x9c
  417df8:	e59d20a4 	ldr	r2, [sp, #164]	; 0xa4
  417dfc:	e1530002 	cmp	r3, r2
  417e00:	3a000004 	bcc	417e18 <cvSeqSort+0x8a4>
  417e04:	e28d0090 	add	r0, sp, #144	; 0x90
  417e08:	e3a01001 	mov	r1, #1
  417e0c:	ebfff379 	bl	414bf8 <cvChangeSeqBlock>
  417e10:	e3a07001 	mov	r7, #1
  417e14:	ea000000 	b	417e1c <cvSeqSort+0x8a8>
  417e18:	e3a07001 	mov	r7, #1
  417e1c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  417e20:	e083300a 	add	r3, r3, sl
  417e24:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  417e28:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  417e2c:	e1530002 	cmp	r3, r2
  417e30:	3a000004 	bcc	417e48 <cvSeqSort+0x8d4>
  417e34:	e28d0030 	add	r0, sp, #48	; 0x30
  417e38:	e3a01001 	mov	r1, #1
  417e3c:	ebfff36d 	bl	414bf8 <cvChangeSeqBlock>
  417e40:	ea000000 	b	417e48 <cvSeqSort+0x8d4>
  417e44:	e3a07001 	mov	r7, #1
  417e48:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
  417e4c:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  417e50:	e1500003 	cmp	r0, r3
  417e54:	0a000007 	beq	417e78 <cvSeqSort+0x904>
  417e58:	e1a01005 	mov	r1, r5
  417e5c:	e59d200c 	ldr	r2, [sp, #12]
  417e60:	e1a0e00f 	mov	lr, pc
  417e64:	e12fff18 	bx	r8
  417e68:	e2509000 	subs	r9, r0, #0
  417e6c:	ca000003 	bgt	417e80 <cvSeqSort+0x90c>
  417e70:	e3a06001 	mov	r6, #1
  417e74:	ea000002 	b	417e84 <cvSeqSort+0x910>
  417e78:	e3a06000 	mov	r6, #0
  417e7c:	ea000000 	b	417e84 <cvSeqSort+0x910>
  417e80:	e3a06000 	mov	r6, #0
  417e84:	e3560000 	cmp	r6, #0
  417e88:	1affffc4 	bne	417da0 <cvSeqSort+0x82c>
  417e8c:	ea000026 	b	417f2c <cvSeqSort+0x9b8>
  417e90:	e3590000 	cmp	r9, #0
  417e94:	1a00001c 	bne	417f0c <cvSeqSort+0x998>
  417e98:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  417e9c:	e59d20dc 	ldr	r2, [sp, #220]	; 0xdc
  417ea0:	e1520003 	cmp	r2, r3
  417ea4:	1a000009 	bne	417ed0 <cvSeqSort+0x95c>
  417ea8:	ea00000b 	b	417edc <cvSeqSort+0x968>
  417eac:	e59d20dc 	ldr	r2, [sp, #220]	; 0xdc
  417eb0:	e7d21003 	ldrb	r1, [r2, r3]
  417eb4:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
  417eb8:	e7d00003 	ldrb	r0, [r0, r3]
  417ebc:	e7c20003 	strb	r0, [r2, r3]
  417ec0:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
  417ec4:	e7c21003 	strb	r1, [r2, r3]
  417ec8:	e2833001 	add	r3, r3, #1
  417ecc:	ea000000 	b	417ed4 <cvSeqSort+0x960>
  417ed0:	e3a03000 	mov	r3, #0
  417ed4:	e1530004 	cmp	r3, r4
  417ed8:	bafffff3 	blt	417eac <cvSeqSort+0x938>
  417edc:	e59d30dc 	ldr	r3, [sp, #220]	; 0xdc
  417ee0:	e083300b 	add	r3, r3, fp
  417ee4:	e58d30dc 	str	r3, [sp, #220]	; 0xdc
  417ee8:	e59d20e0 	ldr	r2, [sp, #224]	; 0xe0
  417eec:	e1530002 	cmp	r3, r2
  417ef0:	2a000004 	bcs	417f08 <cvSeqSort+0x994>
  417ef4:	e28d00d0 	add	r0, sp, #208	; 0xd0
  417ef8:	e3e01000 	mvn	r1, #0
  417efc:	ebfff33d 	bl	414bf8 <cvChangeSeqBlock>
  417f00:	e3a07001 	mov	r7, #1
  417f04:	ea000000 	b	417f0c <cvSeqSort+0x998>
  417f08:	e3a07001 	mov	r7, #1
  417f0c:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  417f10:	e083300b 	add	r3, r3, fp
  417f14:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  417f18:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
  417f1c:	e1530002 	cmp	r3, r2
  417f20:	328d0050 	addcc	r0, sp, #80	; 0x50
  417f24:	33e01000 	mvncc	r1, #0
  417f28:	3bfff332 	blcc	414bf8 <cvChangeSeqBlock>
  417f2c:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
  417f30:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  417f34:	e1530000 	cmp	r3, r0
  417f38:	0a000007 	beq	417f5c <cvSeqSort+0x9e8>
  417f3c:	e1a01005 	mov	r1, r5
  417f40:	e59d200c 	ldr	r2, [sp, #12]
  417f44:	e1a0e00f 	mov	lr, pc
  417f48:	e12fff18 	bx	r8
  417f4c:	e2509000 	subs	r9, r0, #0
  417f50:	ba000003 	blt	417f64 <cvSeqSort+0x9f0>
  417f54:	e3a03001 	mov	r3, #1
  417f58:	ea000002 	b	417f68 <cvSeqSort+0x9f4>
  417f5c:	e1a03006 	mov	r3, r6
  417f60:	ea000000 	b	417f68 <cvSeqSort+0x9f4>
  417f64:	e1a03006 	mov	r3, r6
  417f68:	e3530000 	cmp	r3, #0
  417f6c:	1affffc7 	bne	417e90 <cvSeqSort+0x91c>
  417f70:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
  417f74:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  417f78:	e1500003 	cmp	r0, r3
  417f7c:	1a000041 	bne	418088 <cvSeqSort+0xb14>
  417f80:	e1a01005 	mov	r1, r5
  417f84:	e59d200c 	ldr	r2, [sp, #12]
  417f88:	e1a0e00f 	mov	lr, pc
  417f8c:	e12fff18 	bx	r8
  417f90:	e2509000 	subs	r9, r0, #0
  417f94:	1a00001c 	bne	41800c <cvSeqSort+0xa98>
  417f98:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  417f9c:	e59d209c 	ldr	r2, [sp, #156]	; 0x9c
  417fa0:	e1520003 	cmp	r2, r3
  417fa4:	1a000009 	bne	417fd0 <cvSeqSort+0xa5c>
  417fa8:	ea00000b 	b	417fdc <cvSeqSort+0xa68>
  417fac:	e59d209c 	ldr	r2, [sp, #156]	; 0x9c
  417fb0:	e7d21003 	ldrb	r1, [r2, r3]
  417fb4:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
  417fb8:	e7d00003 	ldrb	r0, [r0, r3]
  417fbc:	e7c20003 	strb	r0, [r2, r3]
  417fc0:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  417fc4:	e7c21003 	strb	r1, [r2, r3]
  417fc8:	e2833001 	add	r3, r3, #1
  417fcc:	ea000000 	b	417fd4 <cvSeqSort+0xa60>
  417fd0:	e3a03000 	mov	r3, #0
  417fd4:	e1530004 	cmp	r3, r4
  417fd8:	bafffff3 	blt	417fac <cvSeqSort+0xa38>
  417fdc:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
  417fe0:	e083300a 	add	r3, r3, sl
  417fe4:	e58d309c 	str	r3, [sp, #156]	; 0x9c
  417fe8:	e59d20a4 	ldr	r2, [sp, #164]	; 0xa4
  417fec:	e1530002 	cmp	r3, r2
  417ff0:	3a000004 	bcc	418008 <cvSeqSort+0xa94>
  417ff4:	e28d0090 	add	r0, sp, #144	; 0x90
  417ff8:	e3a01001 	mov	r1, #1
  417ffc:	ebfff2fd 	bl	414bf8 <cvChangeSeqBlock>
  418000:	e3a07001 	mov	r7, #1
  418004:	ea000000 	b	41800c <cvSeqSort+0xa98>
  418008:	e3a07001 	mov	r7, #1
  41800c:	e3590000 	cmp	r9, #0
  418010:	ca000009 	bgt	41803c <cvSeqSort+0xac8>
  418014:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  418018:	e083300a 	add	r3, r3, sl
  41801c:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  418020:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  418024:	e1530002 	cmp	r3, r2
  418028:	3a000030 	bcc	4180f0 <cvSeqSort+0xb7c>
  41802c:	e28d0030 	add	r0, sp, #48	; 0x30
  418030:	e3a01001 	mov	r1, #1
  418034:	ebfff2ef 	bl	414bf8 <cvChangeSeqBlock>
  418038:	ea00002c 	b	4180f0 <cvSeqSort+0xb7c>
  41803c:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  418040:	e083300b 	add	r3, r3, fp
  418044:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  418048:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
  41804c:	e1530002 	cmp	r3, r2
  418050:	2a000026 	bcs	4180f0 <cvSeqSort+0xb7c>
  418054:	e28d0050 	add	r0, sp, #80	; 0x50
  418058:	e3e01000 	mvn	r1, #0
  41805c:	ebfff2e5 	bl	414bf8 <cvChangeSeqBlock>
  418060:	ea000022 	b	4180f0 <cvSeqSort+0xb7c>
  418064:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  418068:	e7d21003 	ldrb	r1, [r2, r3]
  41806c:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
  418070:	e7d00003 	ldrb	r0, [r0, r3]
  418074:	e7c20003 	strb	r0, [r2, r3]
  418078:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
  41807c:	e7c21003 	strb	r1, [r2, r3]
  418080:	e2833001 	add	r3, r3, #1
  418084:	ea000000 	b	41808c <cvSeqSort+0xb18>
  418088:	e3a03000 	mov	r3, #0
  41808c:	e1530004 	cmp	r3, r4
  418090:	bafffff3 	blt	418064 <cvSeqSort+0xaf0>
  418094:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  418098:	e083300a 	add	r3, r3, sl
  41809c:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  4180a0:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  4180a4:	e1530002 	cmp	r3, r2
  4180a8:	228d0030 	addcs	r0, sp, #48	; 0x30
  4180ac:	23a01001 	movcs	r1, #1
  4180b0:	2bfff2d0 	blcs	414bf8 <cvChangeSeqBlock>
  4180b4:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
  4180b8:	e59d903c 	ldr	r9, [sp, #60]	; 0x3c
  4180bc:	e1590003 	cmp	r9, r3
  4180c0:	13a09000 	movne	r9, #0
  4180c4:	03a09001 	moveq	r9, #1
  4180c8:	e083300b 	add	r3, r3, fp
  4180cc:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  4180d0:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
  4180d4:	e1530002 	cmp	r3, r2
  4180d8:	328d0050 	addcc	r0, sp, #80	; 0x50
  4180dc:	33e01000 	mvncc	r1, #0
  4180e0:	3bfff2c4 	blcc	414bf8 <cvChangeSeqBlock>
  4180e4:	e3590000 	cmp	r9, #0
  4180e8:	0affff55 	beq	417e44 <cvSeqSort+0x8d0>
  4180ec:	e3a07001 	mov	r7, #1
  4180f0:	e3570000 	cmp	r7, #0
  4180f4:	1a00000c 	bne	41812c <cvSeqSort+0xbb8>
  4180f8:	e28dc030 	add	ip, sp, #48	; 0x30
  4180fc:	e28de070 	add	lr, sp, #112	; 0x70
  418100:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  418104:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418108:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  41810c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  418110:	e28dc050 	add	ip, sp, #80	; 0x50
  418114:	e28de0b0 	add	lr, sp, #176	; 0xb0
  418118:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  41811c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418120:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  418124:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  418128:	eafffd90 	b	417770 <cvSeqSort+0x1fc>
  41812c:	e28d0030 	add	r0, sp, #48	; 0x30
  418130:	ebfff336 	bl	414e10 <cvGetSeqReaderPos>
  418134:	e2506000 	subs	r6, r0, #0
  418138:	059d3020 	ldreq	r3, [sp, #32]
  41813c:	05936018 	ldreq	r6, [r3, #24]
  418140:	e28d0070 	add	r0, sp, #112	; 0x70
  418144:	ebfff331 	bl	414e10 <cvGetSeqReaderPos>
  418148:	e1a05000 	mov	r5, r0
  41814c:	e28d0090 	add	r0, sp, #144	; 0x90
  418150:	ebfff32e 	bl	414e10 <cvGetSeqReaderPos>
  418154:	e3500000 	cmp	r0, #0
  418158:	059d3020 	ldreq	r3, [sp, #32]
  41815c:	05930018 	ldreq	r0, [r3, #24]
  418160:	e0603006 	rsb	r3, r0, r6
  418164:	e58d3014 	str	r3, [sp, #20]
  418168:	e0650000 	rsb	r0, r5, r0
  41816c:	e1530000 	cmp	r3, r0
  418170:	b1a06003 	movlt	r6, r3
  418174:	a1a06000 	movge	r6, r0
  418178:	e3560000 	cmp	r6, #0
  41817c:	da000030 	ble	418244 <cvSeqSort+0xcd0>
  418180:	e28dc0f0 	add	ip, sp, #240	; 0xf0
  418184:	e28de070 	add	lr, sp, #112	; 0x70
  418188:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  41818c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418190:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  418194:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  418198:	e28dce11 	add	ip, sp, #272	; 0x110
  41819c:	e28de030 	add	lr, sp, #48	; 0x30
  4181a0:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  4181a4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  4181a8:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  4181ac:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  4181b0:	e28d0e11 	add	r0, sp, #272	; 0x110
  4181b4:	e2661000 	rsb	r1, r6, #0
  4181b8:	e3a02001 	mov	r2, #1
  4181bc:	ebfff347 	bl	414ee0 <cvSetSeqReaderPos>
  4181c0:	e3a05000 	mov	r5, #0
  4181c4:	ea00001c 	b	41823c <cvSeqSort+0xcc8>
  4181c8:	e59d20fc 	ldr	r2, [sp, #252]	; 0xfc
  4181cc:	e7d21003 	ldrb	r1, [r2, r3]
  4181d0:	e59d011c 	ldr	r0, [sp, #284]	; 0x11c
  4181d4:	e7d00003 	ldrb	r0, [r0, r3]
  4181d8:	e7c20003 	strb	r0, [r2, r3]
  4181dc:	e59d211c 	ldr	r2, [sp, #284]	; 0x11c
  4181e0:	e7c21003 	strb	r1, [r2, r3]
  4181e4:	e2833001 	add	r3, r3, #1
  4181e8:	ea000000 	b	4181f0 <cvSeqSort+0xc7c>
  4181ec:	e3a03000 	mov	r3, #0
  4181f0:	e1530004 	cmp	r3, r4
  4181f4:	bafffff3 	blt	4181c8 <cvSeqSort+0xc54>
  4181f8:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  4181fc:	e083300a 	add	r3, r3, sl
  418200:	e58d30fc 	str	r3, [sp, #252]	; 0xfc
  418204:	e59d2104 	ldr	r2, [sp, #260]	; 0x104
  418208:	e1530002 	cmp	r3, r2
  41820c:	228d00f0 	addcs	r0, sp, #240	; 0xf0
  418210:	23a01001 	movcs	r1, #1
  418214:	2bfff277 	blcs	414bf8 <cvChangeSeqBlock>
  418218:	e59d311c 	ldr	r3, [sp, #284]	; 0x11c
  41821c:	e083300a 	add	r3, r3, sl
  418220:	e58d311c 	str	r3, [sp, #284]	; 0x11c
  418224:	e59d2124 	ldr	r2, [sp, #292]	; 0x124
  418228:	e1530002 	cmp	r3, r2
  41822c:	228d0e11 	addcs	r0, sp, #272	; 0x110
  418230:	23a01001 	movcs	r1, #1
  418234:	2bfff26f 	blcs	414bf8 <cvChangeSeqBlock>
  418238:	e2855001 	add	r5, r5, #1
  41823c:	e1550006 	cmp	r5, r6
  418240:	baffffe9 	blt	4181ec <cvSeqSort+0xc78>
  418244:	e28d0050 	add	r0, sp, #80	; 0x50
  418248:	ebfff2f0 	bl	414e10 <cvGetSeqReaderPos>
  41824c:	e1a09000 	mov	r9, r0
  418250:	e28d00b0 	add	r0, sp, #176	; 0xb0
  418254:	ebfff2ed 	bl	414e10 <cvGetSeqReaderPos>
  418258:	e1a05000 	mov	r5, r0
  41825c:	e28d00d0 	add	r0, sp, #208	; 0xd0
  418260:	ebfff2ea 	bl	414e10 <cvGetSeqReaderPos>
  418264:	e0605005 	rsb	r5, r0, r5
  418268:	e0697000 	rsb	r7, r9, r0
  41826c:	e1550007 	cmp	r5, r7
  418270:	b1a06005 	movlt	r6, r5
  418274:	a1a06007 	movge	r6, r7
  418278:	e3560000 	cmp	r6, #0
  41827c:	da000030 	ble	418344 <cvSeqSort+0xdd0>
  418280:	e28dc0f0 	add	ip, sp, #240	; 0xf0
  418284:	e28de030 	add	lr, sp, #48	; 0x30
  418288:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  41828c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418290:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  418294:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  418298:	e28dce11 	add	ip, sp, #272	; 0x110
  41829c:	e28de0b0 	add	lr, sp, #176	; 0xb0
  4182a0:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  4182a4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  4182a8:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  4182ac:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  4182b0:	e28d0e11 	add	r0, sp, #272	; 0x110
  4182b4:	e2661001 	rsb	r1, r6, #1
  4182b8:	e3a02001 	mov	r2, #1
  4182bc:	ebfff307 	bl	414ee0 <cvSetSeqReaderPos>
  4182c0:	e3a05000 	mov	r5, #0
  4182c4:	ea00001c 	b	41833c <cvSeqSort+0xdc8>
  4182c8:	e59d20fc 	ldr	r2, [sp, #252]	; 0xfc
  4182cc:	e7d21003 	ldrb	r1, [r2, r3]
  4182d0:	e59d011c 	ldr	r0, [sp, #284]	; 0x11c
  4182d4:	e7d00003 	ldrb	r0, [r0, r3]
  4182d8:	e7c20003 	strb	r0, [r2, r3]
  4182dc:	e59d211c 	ldr	r2, [sp, #284]	; 0x11c
  4182e0:	e7c21003 	strb	r1, [r2, r3]
  4182e4:	e2833001 	add	r3, r3, #1
  4182e8:	ea000000 	b	4182f0 <cvSeqSort+0xd7c>
  4182ec:	e3a03000 	mov	r3, #0
  4182f0:	e1530004 	cmp	r3, r4
  4182f4:	bafffff3 	blt	4182c8 <cvSeqSort+0xd54>
  4182f8:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  4182fc:	e083300a 	add	r3, r3, sl
  418300:	e58d30fc 	str	r3, [sp, #252]	; 0xfc
  418304:	e59d2104 	ldr	r2, [sp, #260]	; 0x104
  418308:	e1530002 	cmp	r3, r2
  41830c:	228d00f0 	addcs	r0, sp, #240	; 0xf0
  418310:	23a01001 	movcs	r1, #1
  418314:	2bfff237 	blcs	414bf8 <cvChangeSeqBlock>
  418318:	e59d311c 	ldr	r3, [sp, #284]	; 0x11c
  41831c:	e083300a 	add	r3, r3, sl
  418320:	e58d311c 	str	r3, [sp, #284]	; 0x11c
  418324:	e59d2124 	ldr	r2, [sp, #292]	; 0x124
  418328:	e1530002 	cmp	r3, r2
  41832c:	228d0e11 	addcs	r0, sp, #272	; 0x110
  418330:	23a01001 	movcs	r1, #1
  418334:	2bfff22f 	blcs	414bf8 <cvChangeSeqBlock>
  418338:	e2855001 	add	r5, r5, #1
  41833c:	e1550006 	cmp	r5, r6
  418340:	baffffe9 	blt	4182ec <cvSeqSort+0xd78>
  418344:	e59d3014 	ldr	r3, [sp, #20]
  418348:	e3530001 	cmp	r3, #1
  41834c:	da000074 	ble	418524 <cvSeqSort+0xfb0>
  418350:	e3570001 	cmp	r7, #1
  418354:	da000060 	ble	4184dc <cvSeqSort+0xf68>
  418358:	e1530007 	cmp	r3, r7
  41835c:	da00002a 	ble	41840c <cvSeqSort+0xe98>
  418360:	e59d3010 	ldr	r3, [sp, #16]
  418364:	e2833001 	add	r3, r3, #1
  418368:	e58d3010 	str	r3, [sp, #16]
  41836c:	e28d2e73 	add	r2, sp, #1840	; 0x730
  418370:	e0825283 	add	r5, r2, r3, lsl #5
  418374:	e59d3078 	ldr	r3, [sp, #120]	; 0x78
  418378:	e5053600 	str	r3, [r5, #-1536]	; 0x600
  41837c:	e59d307c 	ldr	r3, [sp, #124]	; 0x7c
  418380:	e50535fc 	str	r3, [r5, #-1532]	; 0x5fc
  418384:	e59d3080 	ldr	r3, [sp, #128]	; 0x80
  418388:	e50535f8 	str	r3, [r5, #-1528]	; 0x5f8
  41838c:	e59d3084 	ldr	r3, [sp, #132]	; 0x84
  418390:	e50535f4 	str	r3, [r5, #-1524]	; 0x5f4
  418394:	e28d0070 	add	r0, sp, #112	; 0x70
  418398:	e59d3014 	ldr	r3, [sp, #20]
  41839c:	e2431001 	sub	r1, r3, #1
  4183a0:	e3a02001 	mov	r2, #1
  4183a4:	ebfff2cd 	bl	414ee0 <cvSetSeqReaderPos>
  4183a8:	e59d3078 	ldr	r3, [sp, #120]	; 0x78
  4183ac:	e50535f0 	str	r3, [r5, #-1520]	; 0x5f0
  4183b0:	e59d307c 	ldr	r3, [sp, #124]	; 0x7c
  4183b4:	e50535ec 	str	r3, [r5, #-1516]	; 0x5ec
  4183b8:	e59d3080 	ldr	r3, [sp, #128]	; 0x80
  4183bc:	e50535e8 	str	r3, [r5, #-1512]	; 0x5e8
  4183c0:	e59d3084 	ldr	r3, [sp, #132]	; 0x84
  4183c4:	e50535e4 	str	r3, [r5, #-1508]	; 0x5e4
  4183c8:	e28dc050 	add	ip, sp, #80	; 0x50
  4183cc:	e28de0b0 	add	lr, sp, #176	; 0xb0
  4183d0:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  4183d4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  4183d8:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  4183dc:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  4183e0:	e28dc030 	add	ip, sp, #48	; 0x30
  4183e4:	e28de050 	add	lr, sp, #80	; 0x50
  4183e8:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  4183ec:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  4183f0:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  4183f4:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  4183f8:	e28d0030 	add	r0, sp, #48	; 0x30
  4183fc:	e2671001 	rsb	r1, r7, #1
  418400:	e3a02001 	mov	r2, #1
  418404:	ebfff2b5 	bl	414ee0 <cvSetSeqReaderPos>
  418408:	eafffcc5 	b	417724 <cvSeqSort+0x1b0>
  41840c:	e59d3010 	ldr	r3, [sp, #16]
  418410:	e2833001 	add	r3, r3, #1
  418414:	e58d3010 	str	r3, [sp, #16]
  418418:	e28d2e73 	add	r2, sp, #1840	; 0x730
  41841c:	e0825283 	add	r5, r2, r3, lsl #5
  418420:	e59d30b8 	ldr	r3, [sp, #184]	; 0xb8
  418424:	e50535f0 	str	r3, [r5, #-1520]	; 0x5f0
  418428:	e59d30bc 	ldr	r3, [sp, #188]	; 0xbc
  41842c:	e50535ec 	str	r3, [r5, #-1516]	; 0x5ec
  418430:	e59d30c0 	ldr	r3, [sp, #192]	; 0xc0
  418434:	e50535e8 	str	r3, [r5, #-1512]	; 0x5e8
  418438:	e59d30c4 	ldr	r3, [sp, #196]	; 0xc4
  41843c:	e50535e4 	str	r3, [r5, #-1508]	; 0x5e4
  418440:	e28d00b0 	add	r0, sp, #176	; 0xb0
  418444:	e2671001 	rsb	r1, r7, #1
  418448:	e3a02001 	mov	r2, #1
  41844c:	ebfff2a3 	bl	414ee0 <cvSetSeqReaderPos>
  418450:	e59d30b8 	ldr	r3, [sp, #184]	; 0xb8
  418454:	e5053600 	str	r3, [r5, #-1536]	; 0x600
  418458:	e59d30bc 	ldr	r3, [sp, #188]	; 0xbc
  41845c:	e50535fc 	str	r3, [r5, #-1532]	; 0x5fc
  418460:	e59d30c0 	ldr	r3, [sp, #192]	; 0xc0
  418464:	e50535f8 	str	r3, [r5, #-1528]	; 0x5f8
  418468:	e59d30c4 	ldr	r3, [sp, #196]	; 0xc4
  41846c:	e50535f4 	str	r3, [r5, #-1524]	; 0x5f4
  418470:	e28dc050 	add	ip, sp, #80	; 0x50
  418474:	e28de070 	add	lr, sp, #112	; 0x70
  418478:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  41847c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418480:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  418484:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  418488:	e28dc030 	add	ip, sp, #48	; 0x30
  41848c:	e28de050 	add	lr, sp, #80	; 0x50
  418490:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  418494:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418498:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  41849c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  4184a0:	e28d0050 	add	r0, sp, #80	; 0x50
  4184a4:	e59d3014 	ldr	r3, [sp, #20]
  4184a8:	e2431001 	sub	r1, r3, #1
  4184ac:	e3a02001 	mov	r2, #1
  4184b0:	ebfff28a 	bl	414ee0 <cvSetSeqReaderPos>
  4184b4:	eafffc9a 	b	417724 <cvSeqSort+0x1b0>
  4184b8:	42990000 	.word	0x42990000
  4184bc:	0000087f 	.word	0x0000087f
  4184c0:	1fbe92ac 	.word	0x1fbe92ac
  4184c4:	000282c4 	.word	0x000282c4
  4184c8:	00027d70 	.word	0x00027d70
  4184cc:	00000882 	.word	0x00000882
  4184d0:	1fbe9274 	.word	0x1fbe9274
  4184d4:	000282a0 	.word	0x000282a0
  4184d8:	00027d38 	.word	0x00027d38
  4184dc:	e28dc050 	add	ip, sp, #80	; 0x50
  4184e0:	e28de070 	add	lr, sp, #112	; 0x70
  4184e4:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  4184e8:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  4184ec:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  4184f0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  4184f4:	e28dc030 	add	ip, sp, #48	; 0x30
  4184f8:	e28de050 	add	lr, sp, #80	; 0x50
  4184fc:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  418500:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418504:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  418508:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  41850c:	e28d0050 	add	r0, sp, #80	; 0x50
  418510:	e59d3014 	ldr	r3, [sp, #20]
  418514:	e2431001 	sub	r1, r3, #1
  418518:	e3a02001 	mov	r2, #1
  41851c:	ebfff26f 	bl	414ee0 <cvSetSeqReaderPos>
  418520:	eafffc7f 	b	417724 <cvSeqSort+0x1b0>
  418524:	e3570001 	cmp	r7, #1
  418528:	da000010 	ble	418570 <cvSeqSort+0xffc>
  41852c:	e28dc050 	add	ip, sp, #80	; 0x50
  418530:	e28de0b0 	add	lr, sp, #176	; 0xb0
  418534:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  418538:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  41853c:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  418540:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  418544:	e28dc030 	add	ip, sp, #48	; 0x30
  418548:	e28de050 	add	lr, sp, #80	; 0x50
  41854c:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
  418550:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
  418554:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
  418558:	e88c000f 	stm	ip, {r0, r1, r2, r3}
  41855c:	e28d0030 	add	r0, sp, #48	; 0x30
  418560:	e2671001 	rsb	r1, r7, #1
  418564:	e3a02001 	mov	r2, #1
  418568:	ebfff25c 	bl	414ee0 <cvSetSeqReaderPos>
  41856c:	eafffc6c 	b	417724 <cvSeqSort+0x1b0>
  418570:	e59d3010 	ldr	r3, [sp, #16]
  418574:	e3530000 	cmp	r3, #0
  418578:	aafffc54 	bge	4176d0 <cvSeqSort+0x15c>
  41857c:	e28dde73 	add	sp, sp, #1840	; 0x730
  418580:	e28dd004 	add	sp, sp, #4
  418584:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  418588:	e12fff1e 	bx	lr

0041858c <cvSeqSearch>:
  41858c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  418590:	e24dd02c 	sub	sp, sp, #44	; 0x2c
  418594:	e59db050 	ldr	fp, [sp, #80]	; 0x50
  418598:	e2509000 	subs	r9, r0, #0
  41859c:	0a000005 	beq	4185b8 <cvSeqSearch+0x2c>
  4185a0:	e1a07001 	mov	r7, r1
  4185a4:	e1a0a002 	mov	sl, r2
  4185a8:	e1d910b2 	ldrh	r1, [r9, #2]
  4185ac:	e59f22b8 	ldr	r2, [pc, #696]	; 41886c <cvSeqSearch+0x2e0>
  4185b0:	e1520801 	cmp	r2, r1, lsl #16
  4185b4:	0a00000f 	beq	4185f8 <cvSeqSearch+0x6c>
  4185b8:	e3590000 	cmp	r9, #0
  4185bc:	03e0001a 	mvneq	r0, #26
  4185c0:	13e00004 	mvnne	r0, #4
  4185c4:	e59f32a4 	ldr	r3, [pc, #676]	; 418870 <cvSeqSearch+0x2e4>
  4185c8:	e58d3000 	str	r3, [sp]
  4185cc:	e59f12a0 	ldr	r1, [pc, #672]	; 418874 <cvSeqSearch+0x2e8>
  4185d0:	e08f1001 	add	r1, pc, r1
  4185d4:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  4185d8:	e59f2298 	ldr	r2, [pc, #664]	; 418878 <cvSeqSearch+0x2ec>
  4185dc:	e08f2002 	add	r2, pc, r2
  4185e0:	e59f3294 	ldr	r3, [pc, #660]	; 41887c <cvSeqSearch+0x2f0>
  4185e4:	e08f3003 	add	r3, pc, r3
  4185e8:	ebffe92e 	bl	412aa8 <cvError>
  4185ec:	e3e05000 	mvn	r5, #0
  4185f0:	e3a08000 	mov	r8, #0
  4185f4:	ea000096 	b	418854 <cvSeqSearch+0x2c8>
  4185f8:	e3570000 	cmp	r7, #0
  4185fc:	1a00000d 	bne	418638 <cvSeqSearch+0xac>
  418600:	e59f3278 	ldr	r3, [pc, #632]	; 418880 <cvSeqSearch+0x2f4>
  418604:	e58d3000 	str	r3, [sp]
  418608:	e3e0001a 	mvn	r0, #26
  41860c:	e59f1270 	ldr	r1, [pc, #624]	; 418884 <cvSeqSearch+0x2f8>
  418610:	e08f1001 	add	r1, pc, r1
  418614:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  418618:	e59f2268 	ldr	r2, [pc, #616]	; 418888 <cvSeqSearch+0x2fc>
  41861c:	e08f2002 	add	r2, pc, r2
  418620:	e59f3264 	ldr	r3, [pc, #612]	; 41888c <cvSeqSearch+0x300>
  418624:	e08f3003 	add	r3, pc, r3
  418628:	ebffe91e 	bl	412aa8 <cvError>
  41862c:	e3e05000 	mvn	r5, #0
  418630:	e3a08000 	mov	r8, #0
  418634:	ea000086 	b	418854 <cvSeqSearch+0x2c8>
  418638:	e599601c 	ldr	r6, [r9, #28]
  41863c:	e5995018 	ldr	r5, [r9, #24]
  418640:	e3550000 	cmp	r5, #0
  418644:	0a000080 	beq	41884c <cvSeqSearch+0x2c0>
  418648:	e3530000 	cmp	r3, #0
  41864c:	1a000056 	bne	4187ac <cvSeqSearch+0x220>
  418650:	e1a00009 	mov	r0, r9
  418654:	e28d1008 	add	r1, sp, #8
  418658:	e3a02000 	mov	r2, #0
  41865c:	ebfff11f 	bl	414ae0 <cvStartReadSeq>
  418660:	e35a0000 	cmp	sl, #0
  418664:	1a000011 	bne	4186b0 <cvSeqSearch+0x124>
  418668:	ea000014 	b	4186c0 <cvSeqSearch+0x134>
  41866c:	e1a00007 	mov	r0, r7
  418670:	e59d1014 	ldr	r1, [sp, #20]
  418674:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
  418678:	e1a0e00f 	mov	lr, pc
  41867c:	e12fff1a 	bx	sl
  418680:	e3500000 	cmp	r0, #0
  418684:	0a000043 	beq	418798 <cvSeqSearch+0x20c>
  418688:	e59d3014 	ldr	r3, [sp, #20]
  41868c:	e0833006 	add	r3, r3, r6
  418690:	e58d3014 	str	r3, [sp, #20]
  418694:	e59d201c 	ldr	r2, [sp, #28]
  418698:	e1530002 	cmp	r3, r2
  41869c:	228d0008 	addcs	r0, sp, #8
  4186a0:	23a01001 	movcs	r1, #1
  4186a4:	2bfff153 	blcs	414bf8 <cvChangeSeqBlock>
  4186a8:	e2844001 	add	r4, r4, #1
  4186ac:	ea000000 	b	4186b4 <cvSeqSearch+0x128>
  4186b0:	e3a04000 	mov	r4, #0
  4186b4:	e1540005 	cmp	r4, r5
  4186b8:	baffffeb 	blt	41866c <cvSeqSearch+0xe0>
  4186bc:	ea000035 	b	418798 <cvSeqSearch+0x20c>
  4186c0:	e1a08006 	mov	r8, r6
  4186c4:	e3160003 	tst	r6, #3
  4186c8:	0a000017 	beq	41872c <cvSeqSearch+0x1a0>
  4186cc:	e3a04000 	mov	r4, #0
  4186d0:	ea00002e 	b	418790 <cvSeqSearch+0x204>
  4186d4:	e59d2014 	ldr	r2, [sp, #20]
  4186d8:	e7921003 	ldr	r1, [r2, r3]
  4186dc:	e7972003 	ldr	r2, [r7, r3]
  4186e0:	e1510002 	cmp	r1, r2
  4186e4:	1a000004 	bne	4186fc <cvSeqSearch+0x170>
  4186e8:	e2833004 	add	r3, r3, #4
  4186ec:	ea000000 	b	4186f4 <cvSeqSearch+0x168>
  4186f0:	e3a03000 	mov	r3, #0
  4186f4:	e1530006 	cmp	r3, r6
  4186f8:	bafffff5 	blt	4186d4 <cvSeqSearch+0x148>
  4186fc:	e1530006 	cmp	r3, r6
  418700:	0a000024 	beq	418798 <cvSeqSearch+0x20c>
  418704:	e59d3014 	ldr	r3, [sp, #20]
  418708:	e0833008 	add	r3, r3, r8
  41870c:	e58d3014 	str	r3, [sp, #20]
  418710:	e59d201c 	ldr	r2, [sp, #28]
  418714:	e1530002 	cmp	r3, r2
  418718:	228d0008 	addcs	r0, sp, #8
  41871c:	23a01001 	movcs	r1, #1
  418720:	2bfff134 	blcs	414bf8 <cvChangeSeqBlock>
  418724:	e2844001 	add	r4, r4, #1
  418728:	ea000000 	b	418730 <cvSeqSearch+0x1a4>
  41872c:	e3a04000 	mov	r4, #0
  418730:	e1540005 	cmp	r4, r5
  418734:	baffffed 	blt	4186f0 <cvSeqSearch+0x164>
  418738:	ea000016 	b	418798 <cvSeqSearch+0x20c>
  41873c:	e59d2014 	ldr	r2, [sp, #20]
  418740:	e7d21003 	ldrb	r1, [r2, r3]
  418744:	e7d72003 	ldrb	r2, [r7, r3]
  418748:	e1510002 	cmp	r1, r2
  41874c:	1a000004 	bne	418764 <cvSeqSearch+0x1d8>
  418750:	e2833001 	add	r3, r3, #1
  418754:	ea000000 	b	41875c <cvSeqSearch+0x1d0>
  418758:	e3a03000 	mov	r3, #0
  41875c:	e1530006 	cmp	r3, r6
  418760:	bafffff5 	blt	41873c <cvSeqSearch+0x1b0>
  418764:	e1530006 	cmp	r3, r6
  418768:	0a00000a 	beq	418798 <cvSeqSearch+0x20c>
  41876c:	e59d3014 	ldr	r3, [sp, #20]
  418770:	e0833008 	add	r3, r3, r8
  418774:	e58d3014 	str	r3, [sp, #20]
  418778:	e59d201c 	ldr	r2, [sp, #28]
  41877c:	e1530002 	cmp	r3, r2
  418780:	228d0008 	addcs	r0, sp, #8
  418784:	23a01001 	movcs	r1, #1
  418788:	2bfff11a 	blcs	414bf8 <cvChangeSeqBlock>
  41878c:	e2844001 	add	r4, r4, #1
  418790:	e1540005 	cmp	r4, r5
  418794:	baffffef 	blt	418758 <cvSeqSearch+0x1cc>
  418798:	e1540005 	cmp	r4, r5
  41879c:	b59d8014 	ldrlt	r8, [sp, #20]
  4187a0:	a3a08000 	movge	r8, #0
  4187a4:	e1a05004 	mov	r5, r4
  4187a8:	ea000029 	b	418854 <cvSeqSearch+0x2c8>
  4187ac:	e35a0000 	cmp	sl, #0
  4187b0:	1a000020 	bne	418838 <cvSeqSearch+0x2ac>
  4187b4:	e59f30d4 	ldr	r3, [pc, #212]	; 418890 <cvSeqSearch+0x304>
  4187b8:	e58d3000 	str	r3, [sp]
  4187bc:	e3e0001a 	mvn	r0, #26
  4187c0:	e59f10cc 	ldr	r1, [pc, #204]	; 418894 <cvSeqSearch+0x308>
  4187c4:	e08f1001 	add	r1, pc, r1
  4187c8:	e2811fb7 	add	r1, r1, #732	; 0x2dc
  4187cc:	e59f20c4 	ldr	r2, [pc, #196]	; 418898 <cvSeqSearch+0x30c>
  4187d0:	e08f2002 	add	r2, pc, r2
  4187d4:	e59f30c0 	ldr	r3, [pc, #192]	; 41889c <cvSeqSearch+0x310>
  4187d8:	e08f3003 	add	r3, pc, r3
  4187dc:	ebffe8b1 	bl	412aa8 <cvError>
  4187e0:	e3e05000 	mvn	r5, #0
  4187e4:	e3a08000 	mov	r8, #0
  4187e8:	ea000019 	b	418854 <cvSeqSearch+0x2c8>
  4187ec:	e0864005 	add	r4, r6, r5
  4187f0:	e1a040c4 	asr	r4, r4, #1
  4187f4:	e1a00009 	mov	r0, r9
  4187f8:	e1a01004 	mov	r1, r4
  4187fc:	ebffee9c 	bl	414274 <cvGetSeqElem>
  418800:	e1a08000 	mov	r8, r0
  418804:	e1a00007 	mov	r0, r7
  418808:	e1a01008 	mov	r1, r8
  41880c:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
  418810:	e1a0e00f 	mov	lr, pc
  418814:	e12fff1a 	bx	sl
  418818:	e3500000 	cmp	r0, #0
  41881c:	01a05004 	moveq	r5, r4
  418820:	0a00000b 	beq	418854 <cvSeqSearch+0x2c8>
  418824:	e3500000 	cmp	r0, #0
  418828:	a2846001 	addge	r6, r4, #1
  41882c:	aa000002 	bge	41883c <cvSeqSearch+0x2b0>
  418830:	e1a05004 	mov	r5, r4
  418834:	ea000000 	b	41883c <cvSeqSearch+0x2b0>
  418838:	e3a06000 	mov	r6, #0
  41883c:	e1550006 	cmp	r5, r6
  418840:	caffffe9 	bgt	4187ec <cvSeqSearch+0x260>
  418844:	e3a08000 	mov	r8, #0
  418848:	ea000001 	b	418854 <cvSeqSearch+0x2c8>
  41884c:	e3e05000 	mvn	r5, #0
  418850:	e3a08000 	mov	r8, #0
  418854:	e35b0000 	cmp	fp, #0
  418858:	158b5000 	strne	r5, [fp]
  41885c:	e1a00008 	mov	r0, r8
  418860:	e28dd02c 	add	sp, sp, #44	; 0x2c
  418864:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  418868:	e12fff1e 	bx	lr
  41886c:	42990000 	.word	0x42990000
  418870:	00000998 	.word	0x00000998
  418874:	1fbe829c 	.word	0x1fbe829c
  418878:	000272b4 	.word	0x000272b4
  41887c:	00026d60 	.word	0x00026d60
  418880:	0000099b 	.word	0x0000099b
  418884:	1fbe825c 	.word	0x1fbe825c
  418888:	000272a0 	.word	0x000272a0
  41888c:	00026d20 	.word	0x00026d20
  418890:	000009d5 	.word	0x000009d5
  418894:	1fbe80a8 	.word	0x1fbe80a8
  418898:	000270d4 	.word	0x000270d4
  41889c:	00026b6c 	.word	0x00026b6c

004188a0 <cvSeqInvert>:
  4188a0:	e92d4070 	push	{r4, r5, r6, lr}
  4188a4:	e24dd048 	sub	sp, sp, #72	; 0x48
  4188a8:	e1a05000 	mov	r5, r0
  4188ac:	e28d1008 	add	r1, sp, #8
  4188b0:	e3a02000 	mov	r2, #0
  4188b4:	ebfff089 	bl	414ae0 <cvStartReadSeq>
  4188b8:	ebffe849 	bl	4129e4 <cvGetErrStatus>
  4188bc:	e3500000 	cmp	r0, #0
  4188c0:	aa00000b 	bge	4188f4 <cvSeqInvert+0x54>
  4188c4:	e3a03c0a 	mov	r3, #2560	; 0xa00
  4188c8:	e58d3000 	str	r3, [sp]
  4188cc:	e3e00000 	mvn	r0, #0
  4188d0:	e59f1104 	ldr	r1, [pc, #260]	; 4189dc <cvSeqInvert+0x13c>
  4188d4:	e08f1001 	add	r1, pc, r1
  4188d8:	e2811fba 	add	r1, r1, #744	; 0x2e8
  4188dc:	e59f20fc 	ldr	r2, [pc, #252]	; 4189e0 <cvSeqInvert+0x140>
  4188e0:	e08f2002 	add	r2, pc, r2
  4188e4:	e59f30f8 	ldr	r3, [pc, #248]	; 4189e4 <cvSeqInvert+0x144>
  4188e8:	e08f3003 	add	r3, pc, r3
  4188ec:	ebffe86d 	bl	412aa8 <cvError>
  4188f0:	ea000036 	b	4189d0 <cvSeqInvert+0x130>
  4188f4:	e1a00005 	mov	r0, r5
  4188f8:	e28d1028 	add	r1, sp, #40	; 0x28
  4188fc:	e3a02001 	mov	r2, #1
  418900:	ebfff076 	bl	414ae0 <cvStartReadSeq>
  418904:	ebffe836 	bl	4129e4 <cvGetErrStatus>
  418908:	e3500000 	cmp	r0, #0
  41890c:	aa00000b 	bge	418940 <cvSeqInvert+0xa0>
  418910:	e59f30d0 	ldr	r3, [pc, #208]	; 4189e8 <cvSeqInvert+0x148>
  418914:	e58d3000 	str	r3, [sp]
  418918:	e3e00000 	mvn	r0, #0
  41891c:	e59f10c8 	ldr	r1, [pc, #200]	; 4189ec <cvSeqInvert+0x14c>
  418920:	e08f1001 	add	r1, pc, r1
  418924:	e2811fba 	add	r1, r1, #744	; 0x2e8
  418928:	e59f20c0 	ldr	r2, [pc, #192]	; 4189f0 <cvSeqInvert+0x150>
  41892c:	e08f2002 	add	r2, pc, r2
  418930:	e59f30bc 	ldr	r3, [pc, #188]	; 4189f4 <cvSeqInvert+0x154>
  418934:	e08f3003 	add	r3, pc, r3
  418938:	ebffe85a 	bl	412aa8 <cvError>
  41893c:	ea000023 	b	4189d0 <cvSeqInvert+0x130>
  418940:	e595401c 	ldr	r4, [r5, #28]
  418944:	e5956018 	ldr	r6, [r5, #24]
  418948:	e1a060c6 	asr	r6, r6, #1
  41894c:	e3a05000 	mov	r5, #0
  418950:	ea00001c 	b	4189c8 <cvSeqInvert+0x128>
  418954:	e59d2014 	ldr	r2, [sp, #20]
  418958:	e7d21003 	ldrb	r1, [r2, r3]
  41895c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
  418960:	e7d00003 	ldrb	r0, [r0, r3]
  418964:	e7c20003 	strb	r0, [r2, r3]
  418968:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
  41896c:	e7c21003 	strb	r1, [r2, r3]
  418970:	e2833001 	add	r3, r3, #1
  418974:	ea000000 	b	41897c <cvSeqInvert+0xdc>
  418978:	e3a03000 	mov	r3, #0
  41897c:	e1530004 	cmp	r3, r4
  418980:	bafffff3 	blt	418954 <cvSeqInvert+0xb4>
  418984:	e59d3014 	ldr	r3, [sp, #20]
  418988:	e0833004 	add	r3, r3, r4
  41898c:	e58d3014 	str	r3, [sp, #20]
  418990:	e59d201c 	ldr	r2, [sp, #28]
  418994:	e1530002 	cmp	r3, r2
  418998:	228d0008 	addcs	r0, sp, #8
  41899c:	23a01001 	movcs	r1, #1
  4189a0:	2bfff094 	blcs	414bf8 <cvChangeSeqBlock>
  4189a4:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
  4189a8:	e0643003 	rsb	r3, r4, r3
  4189ac:	e58d3034 	str	r3, [sp, #52]	; 0x34
  4189b0:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
  4189b4:	e1530002 	cmp	r3, r2
  4189b8:	328d0028 	addcc	r0, sp, #40	; 0x28
  4189bc:	33e01000 	mvncc	r1, #0
  4189c0:	3bfff08c 	blcc	414bf8 <cvChangeSeqBlock>
  4189c4:	e2855001 	add	r5, r5, #1
  4189c8:	e1550006 	cmp	r5, r6
  4189cc:	baffffe9 	blt	418978 <cvSeqInvert+0xd8>
  4189d0:	e28dd048 	add	sp, sp, #72	; 0x48
  4189d4:	e8bd4070 	pop	{r4, r5, r6, lr}
  4189d8:	e12fff1e 	bx	lr
  4189dc:	1fbe7f98 	.word	0x1fbe7f98
  4189e0:	000246f0 	.word	0x000246f0
  4189e4:	00026a5c 	.word	0x00026a5c
  4189e8:	00000a01 	.word	0x00000a01
  4189ec:	1fbe7f4c 	.word	0x1fbe7f4c
  4189f0:	000246a4 	.word	0x000246a4
  4189f4:	00026a10 	.word	0x00026a10

004189f8 <cvSeqPartition>:
  4189f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4189fc:	e24dd074 	sub	sp, sp, #116	; 0x74
  418a00:	e58d1008 	str	r1, [sp, #8]
  418a04:	e1a0a003 	mov	sl, r3
  418a08:	e3a03000 	mov	r3, #0
  418a0c:	e58d3010 	str	r3, [sp, #16]
  418a10:	e2523000 	subs	r3, r2, #0
  418a14:	e58d300c 	str	r3, [sp, #12]
  418a18:	1a00000d 	bne	418a54 <cvSeqPartition+0x5c>
  418a1c:	e59f3588 	ldr	r3, [pc, #1416]	; 418fac <cvSeqPartition+0x5b4>
  418a20:	e58d3000 	str	r3, [sp]
  418a24:	e3e0001a 	mvn	r0, #26
  418a28:	e59f1580 	ldr	r1, [pc, #1408]	; 418fb0 <cvSeqPartition+0x5b8>
  418a2c:	e08f1001 	add	r1, pc, r1
  418a30:	e2811fbd 	add	r1, r1, #756	; 0x2f4
  418a34:	e59f2578 	ldr	r2, [pc, #1400]	; 418fb4 <cvSeqPartition+0x5bc>
  418a38:	e08f2002 	add	r2, pc, r2
  418a3c:	e59f3574 	ldr	r3, [pc, #1396]	; 418fb8 <cvSeqPartition+0x5c0>
  418a40:	e08f3003 	add	r3, pc, r3
  418a44:	ebffe817 	bl	412aa8 <cvError>
  418a48:	e3a05000 	mov	r5, #0
  418a4c:	e1a06005 	mov	r6, r5
  418a50:	ea00014c 	b	418f88 <cvSeqPartition+0x590>
  418a54:	e1a05000 	mov	r5, r0
  418a58:	e35a0000 	cmp	sl, #0
  418a5c:	13500000 	cmpne	r0, #0
  418a60:	03a09001 	moveq	r9, #1
  418a64:	13a09000 	movne	r9, #0
  418a68:	1a00000d 	bne	418aa4 <cvSeqPartition+0xac>
  418a6c:	e59f3548 	ldr	r3, [pc, #1352]	; 418fbc <cvSeqPartition+0x5c4>
  418a70:	e58d3000 	str	r3, [sp]
  418a74:	e3e0001a 	mvn	r0, #26
  418a78:	e59f1540 	ldr	r1, [pc, #1344]	; 418fc0 <cvSeqPartition+0x5c8>
  418a7c:	e08f1001 	add	r1, pc, r1
  418a80:	e2811fbd 	add	r1, r1, #756	; 0x2f4
  418a84:	e59f2538 	ldr	r2, [pc, #1336]	; 418fc4 <cvSeqPartition+0x5cc>
  418a88:	e08f2002 	add	r2, pc, r2
  418a8c:	e59f3534 	ldr	r3, [pc, #1332]	; 418fc8 <cvSeqPartition+0x5d0>
  418a90:	e08f3003 	add	r3, pc, r3
  418a94:	ebffe803 	bl	412aa8 <cvError>
  418a98:	e3a05000 	mov	r5, #0
  418a9c:	e1a06005 	mov	r6, r5
  418aa0:	ea000138 	b	418f88 <cvSeqPartition+0x590>
  418aa4:	e59d3008 	ldr	r3, [sp, #8]
  418aa8:	e3530000 	cmp	r3, #0
  418aac:	0590302c 	ldreq	r3, [r0, #44]	; 0x2c
  418ab0:	058d3008 	streq	r3, [sp, #8]
  418ab4:	e59d3008 	ldr	r3, [sp, #8]
  418ab8:	e3530000 	cmp	r3, #0
  418abc:	1a00000d 	bne	418af8 <cvSeqPartition+0x100>
  418ac0:	e59f3504 	ldr	r3, [pc, #1284]	; 418fcc <cvSeqPartition+0x5d4>
  418ac4:	e58d3000 	str	r3, [sp]
  418ac8:	e3e0001a 	mvn	r0, #26
  418acc:	e59f14fc 	ldr	r1, [pc, #1276]	; 418fd0 <cvSeqPartition+0x5d8>
  418ad0:	e08f1001 	add	r1, pc, r1
  418ad4:	e2811fbd 	add	r1, r1, #756	; 0x2f4
  418ad8:	e59f24f4 	ldr	r2, [pc, #1268]	; 418fd4 <cvSeqPartition+0x5dc>
  418adc:	e08f2002 	add	r2, pc, r2
  418ae0:	e59f34f0 	ldr	r3, [pc, #1264]	; 418fd8 <cvSeqPartition+0x5e0>
  418ae4:	e08f3003 	add	r3, pc, r3
  418ae8:	ebffe7ee 	bl	412aa8 <cvError>
  418aec:	e3a05000 	mov	r5, #0
  418af0:	e1a06005 	mov	r6, r5
  418af4:	ea000123 	b	418f88 <cvSeqPartition+0x590>
  418af8:	e3550000 	cmp	r5, #0
  418afc:	0a000005 	beq	418b18 <cvSeqPartition+0x120>
  418b00:	e1d520b2 	ldrh	r2, [r5, #2]
  418b04:	e59f34d0 	ldr	r3, [pc, #1232]	; 418fdc <cvSeqPartition+0x5e4>
  418b08:	e1530802 	cmp	r3, r2, lsl #16
  418b0c:	0a000003 	beq	418b20 <cvSeqPartition+0x128>
  418b10:	e1a06009 	mov	r6, r9
  418b14:	ea000002 	b	418b24 <cvSeqPartition+0x12c>
  418b18:	e1a06009 	mov	r6, r9
  418b1c:	ea000000 	b	418b24 <cvSeqPartition+0x12c>
  418b20:	e3a06001 	mov	r6, #1
  418b24:	e59d0008 	ldr	r0, [sp, #8]
  418b28:	ebffe9cc 	bl	413260 <cvCreateChildMemStorage>
  418b2c:	e1a03000 	mov	r3, r0
  418b30:	e58d0010 	str	r0, [sp, #16]
  418b34:	e3a00000 	mov	r0, #0
  418b38:	e3a01038 	mov	r1, #56	; 0x38
  418b3c:	e3a0200c 	mov	r2, #12
  418b40:	ebffec37 	bl	413c24 <cvCreateSeq>
  418b44:	e1a08000 	mov	r8, r0
  418b48:	e1a00005 	mov	r0, r5
  418b4c:	e28d1030 	add	r1, sp, #48	; 0x30
  418b50:	e3a02000 	mov	r2, #0
  418b54:	ebffefe1 	bl	414ae0 <cvStartReadSeq>
  418b58:	e3a04000 	mov	r4, #0
  418b5c:	e58d4018 	str	r4, [sp, #24]
  418b60:	e58d401c 	str	r4, [sp, #28]
  418b64:	e58d4020 	str	r4, [sp, #32]
  418b68:	e58d4024 	str	r4, [sp, #36]	; 0x24
  418b6c:	e58d4028 	str	r4, [sp, #40]	; 0x28
  418b70:	e58d402c 	str	r4, [sp, #44]	; 0x2c
  418b74:	e1a00008 	mov	r0, r8
  418b78:	e28d1018 	add	r1, sp, #24
  418b7c:	ebffeeb2 	bl	41464c <cvStartAppendToSeq>
  418b80:	ea00003b 	b	418c74 <cvSeqPartition+0x27c>
  418b84:	e3a03000 	mov	r3, #0
  418b88:	e58d3050 	str	r3, [sp, #80]	; 0x50
  418b8c:	e58d3054 	str	r3, [sp, #84]	; 0x54
  418b90:	e58d3058 	str	r3, [sp, #88]	; 0x58
  418b94:	e1560003 	cmp	r6, r3
  418b98:	0a000003 	beq	418bac <cvSeqPartition+0x1b4>
  418b9c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  418ba0:	e5933000 	ldr	r3, [r3]
  418ba4:	e3530000 	cmp	r3, #0
  418ba8:	ba000001 	blt	418bb4 <cvSeqPartition+0x1bc>
  418bac:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  418bb0:	e58d3054 	str	r3, [sp, #84]	; 0x54
  418bb4:	e59d301c 	ldr	r3, [sp, #28]
  418bb8:	e593301c 	ldr	r3, [r3, #28]
  418bbc:	e353000c 	cmp	r3, #12
  418bc0:	0a000008 	beq	418be8 <cvSeqPartition+0x1f0>
  418bc4:	e59f0414 	ldr	r0, [pc, #1044]	; 418fe0 <cvSeqPartition+0x5e8>
  418bc8:	e08f0000 	add	r0, pc, r0
  418bcc:	e59f1410 	ldr	r1, [pc, #1040]	; 418fe4 <cvSeqPartition+0x5ec>
  418bd0:	e59f2410 	ldr	r2, [pc, #1040]	; 418fe8 <cvSeqPartition+0x5f0>
  418bd4:	e08f2002 	add	r2, pc, r2
  418bd8:	e2822fa1 	add	r2, r2, #644	; 0x284
  418bdc:	e59f3408 	ldr	r3, [pc, #1032]	; 418fec <cvSeqPartition+0x5f4>
  418be0:	e08f3003 	add	r3, pc, r3
  418be4:	fa006c5a 	blx	433d54 <__assert_func>
  418be8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  418bec:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
  418bf0:	e1520003 	cmp	r2, r3
  418bf4:	228d0018 	addcs	r0, sp, #24
  418bf8:	2bffef7f 	blcs	4149fc <cvCreateSeqBlock>
  418bfc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
  418c00:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  418c04:	e243300c 	sub	r3, r3, #12
  418c08:	e1500003 	cmp	r0, r3
  418c0c:	9a000008 	bls	418c34 <cvSeqPartition+0x23c>
  418c10:	e59f03d8 	ldr	r0, [pc, #984]	; 418ff0 <cvSeqPartition+0x5f8>
  418c14:	e08f0000 	add	r0, pc, r0
  418c18:	e59f13c4 	ldr	r1, [pc, #964]	; 418fe4 <cvSeqPartition+0x5ec>
  418c1c:	e59f23d0 	ldr	r2, [pc, #976]	; 418ff4 <cvSeqPartition+0x5fc>
  418c20:	e08f2002 	add	r2, pc, r2
  418c24:	e2822fa1 	add	r2, r2, #644	; 0x284
  418c28:	e59f33c8 	ldr	r3, [pc, #968]	; 418ff8 <cvSeqPartition+0x600>
  418c2c:	e08f3003 	add	r3, pc, r3
  418c30:	fa006c47 	blx	433d54 <__assert_func>
  418c34:	e28d1050 	add	r1, sp, #80	; 0x50
  418c38:	e3a0200c 	mov	r2, #12
  418c3c:	fa0070a5 	blx	434ed8 <memcpy>
  418c40:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  418c44:	e283300c 	add	r3, r3, #12
  418c48:	e58d3024 	str	r3, [sp, #36]	; 0x24
  418c4c:	e595201c 	ldr	r2, [r5, #28]
  418c50:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  418c54:	e0833002 	add	r3, r3, r2
  418c58:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  418c5c:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  418c60:	e1530002 	cmp	r3, r2
  418c64:	228d0030 	addcs	r0, sp, #48	; 0x30
  418c68:	23a01001 	movcs	r1, #1
  418c6c:	2bffefe1 	blcs	414bf8 <cvChangeSeqBlock>
  418c70:	e2844001 	add	r4, r4, #1
  418c74:	e5953018 	ldr	r3, [r5, #24]
  418c78:	e1530004 	cmp	r3, r4
  418c7c:	caffffc0 	bgt	418b84 <cvSeqPartition+0x18c>
  418c80:	e28d0018 	add	r0, sp, #24
  418c84:	ebffef06 	bl	4148a4 <cvEndWriteSeq>
  418c88:	e1a00008 	mov	r0, r8
  418c8c:	e28d1030 	add	r1, sp, #48	; 0x30
  418c90:	e3a02000 	mov	r2, #0
  418c94:	ebffef91 	bl	414ae0 <cvStartReadSeq>
  418c98:	e1a00008 	mov	r0, r8
  418c9c:	e28d1050 	add	r1, sp, #80	; 0x50
  418ca0:	e3a02000 	mov	r2, #0
  418ca4:	ebffef8d 	bl	414ae0 <cvStartReadSeq>
  418ca8:	e3a0b000 	mov	fp, #0
  418cac:	ea000060 	b	418e34 <cvSeqPartition+0x43c>
  418cb0:	e59d705c 	ldr	r7, [sp, #92]	; 0x5c
  418cb4:	e598301c 	ldr	r3, [r8, #28]
  418cb8:	e0873003 	add	r3, r7, r3
  418cbc:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  418cc0:	e59d2064 	ldr	r2, [sp, #100]	; 0x64
  418cc4:	e1530002 	cmp	r3, r2
  418cc8:	228d0050 	addcs	r0, sp, #80	; 0x50
  418ccc:	23a01001 	movcs	r1, #1
  418cd0:	2bffefc8 	blcs	414bf8 <cvChangeSeqBlock>
  418cd4:	e5973004 	ldr	r3, [r7, #4]
  418cd8:	e3530000 	cmp	r3, #0
  418cdc:	0a000053 	beq	418e30 <cvSeqPartition+0x438>
  418ce0:	e1a05007 	mov	r5, r7
  418ce4:	ea000000 	b	418cec <cvSeqPartition+0x2f4>
  418ce8:	e1a05003 	mov	r5, r3
  418cec:	e5953000 	ldr	r3, [r5]
  418cf0:	e3530000 	cmp	r3, #0
  418cf4:	1afffffb 	bne	418ce8 <cvSeqPartition+0x2f0>
  418cf8:	e3a06000 	mov	r6, #0
  418cfc:	ea000048 	b	418e24 <cvSeqPartition+0x42c>
  418d00:	e59d403c 	ldr	r4, [sp, #60]	; 0x3c
  418d04:	e5941004 	ldr	r1, [r4, #4]
  418d08:	e3510000 	cmp	r1, #0
  418d0c:	0a000009 	beq	418d38 <cvSeqPartition+0x340>
  418d10:	e1540007 	cmp	r4, r7
  418d14:	0a000009 	beq	418d40 <cvSeqPartition+0x348>
  418d18:	e5970004 	ldr	r0, [r7, #4]
  418d1c:	e59d2098 	ldr	r2, [sp, #152]	; 0x98
  418d20:	e1a0e00f 	mov	lr, pc
  418d24:	e12fff1a 	bx	sl
  418d28:	e3500000 	cmp	r0, #0
  418d2c:	0a000005 	beq	418d48 <cvSeqPartition+0x350>
  418d30:	e3a03001 	mov	r3, #1
  418d34:	ea000004 	b	418d4c <cvSeqPartition+0x354>
  418d38:	e1a03009 	mov	r3, r9
  418d3c:	ea000002 	b	418d4c <cvSeqPartition+0x354>
  418d40:	e1a03009 	mov	r3, r9
  418d44:	ea000000 	b	418d4c <cvSeqPartition+0x354>
  418d48:	e1a03009 	mov	r3, r9
  418d4c:	e3530000 	cmp	r3, #0
  418d50:	0a00002a 	beq	418e00 <cvSeqPartition+0x408>
  418d54:	e1a02004 	mov	r2, r4
  418d58:	ea000000 	b	418d60 <cvSeqPartition+0x368>
  418d5c:	e1a02003 	mov	r2, r3
  418d60:	e5923000 	ldr	r3, [r2]
  418d64:	e3530000 	cmp	r3, #0
  418d68:	1afffffb 	bne	418d5c <cvSeqPartition+0x364>
  418d6c:	e1520005 	cmp	r2, r5
  418d70:	0a000022 	beq	418e00 <cvSeqPartition+0x408>
  418d74:	e5951008 	ldr	r1, [r5, #8]
  418d78:	e5923008 	ldr	r3, [r2, #8]
  418d7c:	e1510003 	cmp	r1, r3
  418d80:	c5825000 	strgt	r5, [r2]
  418d84:	ca000005 	bgt	418da0 <cvSeqPartition+0x3a8>
  418d88:	e5852000 	str	r2, [r5]
  418d8c:	e5923008 	ldr	r3, [r2, #8]
  418d90:	e1510003 	cmp	r1, r3
  418d94:	02833001 	addeq	r3, r3, #1
  418d98:	e5823008 	str	r3, [r2, #8]
  418d9c:	e1a05002 	mov	r5, r2
  418da0:	e5953000 	ldr	r3, [r5]
  418da4:	e3530000 	cmp	r3, #0
  418da8:	0a00000a 	beq	418dd8 <cvSeqPartition+0x3e0>
  418dac:	e59f0248 	ldr	r0, [pc, #584]	; 418ffc <cvSeqPartition+0x604>
  418db0:	e08f0000 	add	r0, pc, r0
  418db4:	e59f1244 	ldr	r1, [pc, #580]	; 419000 <cvSeqPartition+0x608>
  418db8:	e59f2244 	ldr	r2, [pc, #580]	; 419004 <cvSeqPartition+0x60c>
  418dbc:	e08f2002 	add	r2, pc, r2
  418dc0:	e2822fa1 	add	r2, r2, #644	; 0x284
  418dc4:	e59f323c 	ldr	r3, [pc, #572]	; 419008 <cvSeqPartition+0x610>
  418dc8:	e08f3003 	add	r3, pc, r3
  418dcc:	fa006be0 	blx	433d54 <__assert_func>
  418dd0:	e5845000 	str	r5, [r4]
  418dd4:	e1a04003 	mov	r4, r3
  418dd8:	e5943000 	ldr	r3, [r4]
  418ddc:	e3530000 	cmp	r3, #0
  418de0:	1afffffa 	bne	418dd0 <cvSeqPartition+0x3d8>
  418de4:	e1a03007 	mov	r3, r7
  418de8:	ea000001 	b	418df4 <cvSeqPartition+0x3fc>
  418dec:	e5835000 	str	r5, [r3]
  418df0:	e1a03002 	mov	r3, r2
  418df4:	e5932000 	ldr	r2, [r3]
  418df8:	e3520000 	cmp	r2, #0
  418dfc:	1afffffa 	bne	418dec <cvSeqPartition+0x3f4>
  418e00:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  418e04:	e283300c 	add	r3, r3, #12
  418e08:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  418e0c:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  418e10:	e1530002 	cmp	r3, r2
  418e14:	228d0030 	addcs	r0, sp, #48	; 0x30
  418e18:	23a01001 	movcs	r1, #1
  418e1c:	2bffef75 	blcs	414bf8 <cvChangeSeqBlock>
  418e20:	e2866001 	add	r6, r6, #1
  418e24:	e5983018 	ldr	r3, [r8, #24]
  418e28:	e1530006 	cmp	r3, r6
  418e2c:	caffffb3 	bgt	418d00 <cvSeqPartition+0x308>
  418e30:	e28bb001 	add	fp, fp, #1
  418e34:	e5983018 	ldr	r3, [r8, #24]
  418e38:	e153000b 	cmp	r3, fp
  418e3c:	caffff9b 	bgt	418cb0 <cvSeqPartition+0x2b8>
  418e40:	e3a00000 	mov	r0, #0
  418e44:	e3a01038 	mov	r1, #56	; 0x38
  418e48:	e3a02004 	mov	r2, #4
  418e4c:	e59d3008 	ldr	r3, [sp, #8]
  418e50:	ebffeb73 	bl	413c24 <cvCreateSeq>
  418e54:	e1a06000 	mov	r6, r0
  418e58:	e28d1018 	add	r1, sp, #24
  418e5c:	ebffedfa 	bl	41464c <cvStartAppendToSeq>
  418e60:	e3a04000 	mov	r4, #0
  418e64:	e1a05004 	mov	r5, r4
  418e68:	ea000041 	b	418f74 <cvSeqPartition+0x57c>
  418e6c:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  418e70:	e3e03000 	mvn	r3, #0
  418e74:	e58d3014 	str	r3, [sp, #20]
  418e78:	e5923004 	ldr	r3, [r2, #4]
  418e7c:	e3530000 	cmp	r3, #0
  418e80:	1a000001 	bne	418e8c <cvSeqPartition+0x494>
  418e84:	ea00000b 	b	418eb8 <cvSeqPartition+0x4c0>
  418e88:	e1a02003 	mov	r2, r3
  418e8c:	e5923000 	ldr	r3, [r2]
  418e90:	e3530000 	cmp	r3, #0
  418e94:	1afffffb 	bne	418e88 <cvSeqPartition+0x490>
  418e98:	e5923008 	ldr	r3, [r2, #8]
  418e9c:	e3530000 	cmp	r3, #0
  418ea0:	a1e03005 	mvnge	r3, r5
  418ea4:	a5823008 	strge	r3, [r2, #8]
  418ea8:	a2855001 	addge	r5, r5, #1
  418eac:	e5923008 	ldr	r3, [r2, #8]
  418eb0:	e1e03003 	mvn	r3, r3
  418eb4:	e58d3014 	str	r3, [sp, #20]
  418eb8:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  418ebc:	e283300c 	add	r3, r3, #12
  418ec0:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  418ec4:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  418ec8:	e1530002 	cmp	r3, r2
  418ecc:	228d0030 	addcs	r0, sp, #48	; 0x30
  418ed0:	23a01001 	movcs	r1, #1
  418ed4:	2bffef47 	blcs	414bf8 <cvChangeSeqBlock>
  418ed8:	e59d301c 	ldr	r3, [sp, #28]
  418edc:	e593301c 	ldr	r3, [r3, #28]
  418ee0:	e3530004 	cmp	r3, #4
  418ee4:	0a000008 	beq	418f0c <cvSeqPartition+0x514>
  418ee8:	e59f011c 	ldr	r0, [pc, #284]	; 41900c <cvSeqPartition+0x614>
  418eec:	e08f0000 	add	r0, pc, r0
  418ef0:	e59f1118 	ldr	r1, [pc, #280]	; 419010 <cvSeqPartition+0x618>
  418ef4:	e59f2118 	ldr	r2, [pc, #280]	; 419014 <cvSeqPartition+0x61c>
  418ef8:	e08f2002 	add	r2, pc, r2
  418efc:	e2822fa1 	add	r2, r2, #644	; 0x284
  418f00:	e59f3110 	ldr	r3, [pc, #272]	; 419018 <cvSeqPartition+0x620>
  418f04:	e08f3003 	add	r3, pc, r3
  418f08:	fa006b91 	blx	433d54 <__assert_func>
  418f0c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  418f10:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
  418f14:	e1520003 	cmp	r2, r3
  418f18:	228d0018 	addcs	r0, sp, #24
  418f1c:	2bffeeb6 	blcs	4149fc <cvCreateSeqBlock>
  418f20:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
  418f24:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  418f28:	e2433004 	sub	r3, r3, #4
  418f2c:	e1500003 	cmp	r0, r3
  418f30:	9a000008 	bls	418f58 <cvSeqPartition+0x560>
  418f34:	e59f00e0 	ldr	r0, [pc, #224]	; 41901c <cvSeqPartition+0x624>
  418f38:	e08f0000 	add	r0, pc, r0
  418f3c:	e59f10cc 	ldr	r1, [pc, #204]	; 419010 <cvSeqPartition+0x618>
  418f40:	e59f20d8 	ldr	r2, [pc, #216]	; 419020 <cvSeqPartition+0x628>
  418f44:	e08f2002 	add	r2, pc, r2
  418f48:	e2822fa1 	add	r2, r2, #644	; 0x284
  418f4c:	e59f30d0 	ldr	r3, [pc, #208]	; 419024 <cvSeqPartition+0x62c>
  418f50:	e08f3003 	add	r3, pc, r3
  418f54:	fa006b7e 	blx	433d54 <__assert_func>
  418f58:	e28d1014 	add	r1, sp, #20
  418f5c:	e3a02004 	mov	r2, #4
  418f60:	fa006fdc 	blx	434ed8 <memcpy>
  418f64:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  418f68:	e2833004 	add	r3, r3, #4
  418f6c:	e58d3024 	str	r3, [sp, #36]	; 0x24
  418f70:	e2844001 	add	r4, r4, #1
  418f74:	e5983018 	ldr	r3, [r8, #24]
  418f78:	e1530004 	cmp	r3, r4
  418f7c:	caffffba 	bgt	418e6c <cvSeqPartition+0x474>
  418f80:	e28d0018 	add	r0, sp, #24
  418f84:	ebffee46 	bl	4148a4 <cvEndWriteSeq>
  418f88:	e59d300c 	ldr	r3, [sp, #12]
  418f8c:	e3530000 	cmp	r3, #0
  418f90:	15836000 	strne	r6, [r3]
  418f94:	e28d0010 	add	r0, sp, #16
  418f98:	ebffe8e4 	bl	413330 <cvReleaseMemStorage>
  418f9c:	e1a00005 	mov	r0, r5
  418fa0:	e28dd074 	add	sp, sp, #116	; 0x74
  418fa4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  418fa8:	e12fff1e 	bx	lr
  418fac:	00000a33 	.word	0x00000a33
  418fb0:	1fbe7e40 	.word	0x1fbe7e40
  418fb4:	000279d8 	.word	0x000279d8
  418fb8:	00026904 	.word	0x00026904
  418fbc:	00000a36 	.word	0x00000a36
  418fc0:	1fbe7df0 	.word	0x1fbe7df0
  418fc4:	00027988 	.word	0x00027988
  418fc8:	000268b4 	.word	0x000268b4
  418fcc:	00000a3c 	.word	0x00000a3c
  418fd0:	1fbe7d9c 	.word	0x1fbe7d9c
  418fd4:	00027934 	.word	0x00027934
  418fd8:	00026860 	.word	0x00026860
  418fdc:	42980000 	.word	0x42980000
  418fe0:	0002677c 	.word	0x0002677c
  418fe4:	00000a4e 	.word	0x00000a4e
  418fe8:	00026224 	.word	0x00026224
  418fec:	00026cf4 	.word	0x00026cf4
  418ff0:	00026730 	.word	0x00026730
  418ff4:	000261d8 	.word	0x000261d8
  418ff8:	00026cd0 	.word	0x00026cd0
  418ffc:	00026594 	.word	0x00026594
  419000:	00000a7f 	.word	0x00000a7f
  419004:	0002603c 	.word	0x0002603c
  419008:	00026b68 	.word	0x00026b68
  41900c:	00026458 	.word	0x00026458
  419010:	00000aac 	.word	0x00000aac
  419014:	00025f00 	.word	0x00025f00
  419018:	00026a40 	.word	0x00026a40
  41901c:	0002640c 	.word	0x0002640c
  419020:	00025eb4 	.word	0x00025eb4
  419024:	00026a1c 	.word	0x00026a1c

00419028 <cvCreateSet>:
  419028:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41902c:	e24dd00c 	sub	sp, sp, #12
  419030:	e3530000 	cmp	r3, #0
  419034:	1a00000c 	bne	41906c <cvCreateSet+0x44>
  419038:	e59f3098 	ldr	r3, [pc, #152]	; 4190d8 <cvCreateSet+0xb0>
  41903c:	e58d3000 	str	r3, [sp]
  419040:	e3e0001a 	mvn	r0, #26
  419044:	e59f1090 	ldr	r1, [pc, #144]	; 4190dc <cvCreateSet+0xb4>
  419048:	e08f1001 	add	r1, pc, r1
  41904c:	e2811fc1 	add	r1, r1, #772	; 0x304
  419050:	e59f2088 	ldr	r2, [pc, #136]	; 4190e0 <cvCreateSet+0xb8>
  419054:	e08f2002 	add	r2, pc, r2
  419058:	e59f3084 	ldr	r3, [pc, #132]	; 4190e4 <cvCreateSet+0xbc>
  41905c:	e08f3003 	add	r3, pc, r3
  419060:	ebffe690 	bl	412aa8 <cvError>
  419064:	e3a00000 	mov	r0, #0
  419068:	ea000017 	b	4190cc <cvCreateSet+0xa4>
  41906c:	e351003f 	cmp	r1, #63	; 0x3f
  419070:	da000003 	ble	419084 <cvCreateSet+0x5c>
  419074:	e3520007 	cmp	r2, #7
  419078:	da000001 	ble	419084 <cvCreateSet+0x5c>
  41907c:	e3120003 	tst	r2, #3
  419080:	0a00000c 	beq	4190b8 <cvCreateSet+0x90>
  419084:	e59f305c 	ldr	r3, [pc, #92]	; 4190e8 <cvCreateSet+0xc0>
  419088:	e58d3000 	str	r3, [sp]
  41908c:	e3e000c8 	mvn	r0, #200	; 0xc8
  419090:	e59f1054 	ldr	r1, [pc, #84]	; 4190ec <cvCreateSet+0xc4>
  419094:	e08f1001 	add	r1, pc, r1
  419098:	e2811fc1 	add	r1, r1, #772	; 0x304
  41909c:	e59f204c 	ldr	r2, [pc, #76]	; 4190f0 <cvCreateSet+0xc8>
  4190a0:	e08f2002 	add	r2, pc, r2
  4190a4:	e59f3048 	ldr	r3, [pc, #72]	; 4190f4 <cvCreateSet+0xcc>
  4190a8:	e08f3003 	add	r3, pc, r3
  4190ac:	ebffe67d 	bl	412aa8 <cvError>
  4190b0:	e3a00000 	mov	r0, #0
  4190b4:	ea000004 	b	4190cc <cvCreateSet+0xa4>
  4190b8:	ebffead9 	bl	413c24 <cvCreateSeq>
  4190bc:	e1d030b0 	ldrh	r3, [r0]
  4190c0:	e3833442 	orr	r3, r3, #1107296256	; 0x42000000
  4190c4:	e3833726 	orr	r3, r3, #9961472	; 0x980000
  4190c8:	e5803000 	str	r3, [r0]
  4190cc:	e28dd00c 	add	sp, sp, #12
  4190d0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  4190d4:	e12fff1e 	bx	lr
  4190d8:	00000aca 	.word	0x00000aca
  4190dc:	1fbe7824 	.word	0x1fbe7824
  4190e0:	000273bc 	.word	0x000273bc
  4190e4:	000262e8 	.word	0x000262e8
  4190e8:	00000ace 	.word	0x00000ace
  4190ec:	1fbe77d8 	.word	0x1fbe77d8
  4190f0:	00027370 	.word	0x00027370
  4190f4:	0002629c 	.word	0x0002629c

004190f8 <cvSetAdd>:
  4190f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  4190fc:	e24dd008 	sub	sp, sp, #8
  419100:	e2505000 	subs	r5, r0, #0
  419104:	1a00000c 	bne	41913c <cvSetAdd+0x44>
  419108:	e59f31bc 	ldr	r3, [pc, #444]	; 4192cc <cvSetAdd+0x1d4>
  41910c:	e58d3000 	str	r3, [sp]
  419110:	e3e0001a 	mvn	r0, #26
  419114:	e59f11b4 	ldr	r1, [pc, #436]	; 4192d0 <cvSetAdd+0x1d8>
  419118:	e08f1001 	add	r1, pc, r1
  41911c:	e2811e31 	add	r1, r1, #784	; 0x310
  419120:	e59f21ac 	ldr	r2, [pc, #428]	; 4192d4 <cvSetAdd+0x1dc>
  419124:	e08f2002 	add	r2, pc, r2
  419128:	e59f31a8 	ldr	r3, [pc, #424]	; 4192d8 <cvSetAdd+0x1e0>
  41912c:	e08f3003 	add	r3, pc, r3
  419130:	ebffe65c 	bl	412aa8 <cvError>
  419134:	e3e00000 	mvn	r0, #0
  419138:	ea000060 	b	4192c0 <cvSetAdd+0x1c8>
  41913c:	e1a04001 	mov	r4, r1
  419140:	e1a06002 	mov	r6, r2
  419144:	e5953038 	ldr	r3, [r5, #56]	; 0x38
  419148:	e3530000 	cmp	r3, #0
  41914c:	1a000038 	bne	419234 <cvSetAdd+0x13c>
  419150:	e5957018 	ldr	r7, [r5, #24]
  419154:	e595801c 	ldr	r8, [r5, #28]
  419158:	e1a00005 	mov	r0, r5
  41915c:	e3a01000 	mov	r1, #0
  419160:	ebffeb3c 	bl	413e58 <_ZL10icvGrowSeqP5CvSeqi>
  419164:	ebffe61e 	bl	4129e4 <cvGetErrStatus>
  419168:	e3500000 	cmp	r0, #0
  41916c:	aa00000c 	bge	4191a4 <cvSetAdd+0xac>
  419170:	e59f3164 	ldr	r3, [pc, #356]	; 4192dc <cvSetAdd+0x1e4>
  419174:	e58d3000 	str	r3, [sp]
  419178:	e3e00000 	mvn	r0, #0
  41917c:	e59f115c 	ldr	r1, [pc, #348]	; 4192e0 <cvSetAdd+0x1e8>
  419180:	e08f1001 	add	r1, pc, r1
  419184:	e2811e31 	add	r1, r1, #784	; 0x310
  419188:	e59f2154 	ldr	r2, [pc, #340]	; 4192e4 <cvSetAdd+0x1ec>
  41918c:	e08f2002 	add	r2, pc, r2
  419190:	e59f3150 	ldr	r3, [pc, #336]	; 4192e8 <cvSetAdd+0x1f0>
  419194:	e08f3003 	add	r3, pc, r3
  419198:	ebffe642 	bl	412aa8 <cvError>
  41919c:	e3e00000 	mvn	r0, #0
  4191a0:	ea000046 	b	4192c0 <cvSetAdd+0x1c8>
  4191a4:	e5953024 	ldr	r3, [r5, #36]	; 0x24
  4191a8:	e5853038 	str	r3, [r5, #56]	; 0x38
  4191ac:	ea000004 	b	4191c4 <cvSetAdd+0xcc>
  4191b0:	e3871102 	orr	r1, r7, #-2147483648	; 0x80000000
  4191b4:	e5831000 	str	r1, [r3]
  4191b8:	e5832004 	str	r2, [r3, #4]
  4191bc:	e2877001 	add	r7, r7, #1
  4191c0:	e1a03002 	mov	r3, r2
  4191c4:	e0832008 	add	r2, r3, r8
  4191c8:	e5951020 	ldr	r1, [r5, #32]
  4191cc:	e1520001 	cmp	r2, r1
  4191d0:	9afffff6 	bls	4191b0 <cvSetAdd+0xb8>
  4191d4:	e3570301 	cmp	r7, #67108864	; 0x4000000
  4191d8:	da000008 	ble	419200 <cvSetAdd+0x108>
  4191dc:	e59f0108 	ldr	r0, [pc, #264]	; 4192ec <cvSetAdd+0x1f4>
  4191e0:	e08f0000 	add	r0, pc, r0
  4191e4:	e59f1104 	ldr	r1, [pc, #260]	; 4192f0 <cvSetAdd+0x1f8>
  4191e8:	e59f2104 	ldr	r2, [pc, #260]	; 4192f4 <cvSetAdd+0x1fc>
  4191ec:	e08f2002 	add	r2, pc, r2
  4191f0:	e2822e2d 	add	r2, r2, #720	; 0x2d0
  4191f4:	e59f30fc 	ldr	r3, [pc, #252]	; 4192f8 <cvSetAdd+0x200>
  4191f8:	e08f3003 	add	r3, pc, r3
  4191fc:	fa006ad4 	blx	433d54 <__assert_func>
  419200:	e0683003 	rsb	r3, r8, r3
  419204:	e3a02000 	mov	r2, #0
  419208:	e5832004 	str	r2, [r3, #4]
  41920c:	e5953034 	ldr	r3, [r5, #52]	; 0x34
  419210:	e5931000 	ldr	r1, [r3]
  419214:	e5953018 	ldr	r3, [r5, #24]
  419218:	e0632007 	rsb	r2, r3, r7
  41921c:	e591300c 	ldr	r3, [r1, #12]
  419220:	e0833002 	add	r3, r3, r2
  419224:	e581300c 	str	r3, [r1, #12]
  419228:	e5857018 	str	r7, [r5, #24]
  41922c:	e5953020 	ldr	r3, [r5, #32]
  419230:	e5853024 	str	r3, [r5, #36]	; 0x24
  419234:	e5951038 	ldr	r1, [r5, #56]	; 0x38
  419238:	e5913004 	ldr	r3, [r1, #4]
  41923c:	e5853038 	str	r3, [r5, #56]	; 0x38
  419240:	e5910000 	ldr	r0, [r1]
  419244:	e3c0033f 	bic	r0, r0, #-67108864	; 0xfc000000
  419248:	e3540000 	cmp	r4, #0
  41924c:	0a000015 	beq	4192a8 <cvSetAdd+0x1b0>
  419250:	e595c01c 	ldr	ip, [r5, #28]
  419254:	e1a0c12c 	lsr	ip, ip, #2
  419258:	e3140003 	tst	r4, #3
  41925c:	1a000001 	bne	419268 <cvSetAdd+0x170>
  419260:	e3110003 	tst	r1, #3
  419264:	0a00000c 	beq	41929c <cvSetAdd+0x1a4>
  419268:	e59f008c 	ldr	r0, [pc, #140]	; 4192fc <cvSetAdd+0x204>
  41926c:	e08f0000 	add	r0, pc, r0
  419270:	e59f1088 	ldr	r1, [pc, #136]	; 419300 <cvSetAdd+0x208>
  419274:	e59f2088 	ldr	r2, [pc, #136]	; 419304 <cvSetAdd+0x20c>
  419278:	e08f2002 	add	r2, pc, r2
  41927c:	e2822e2d 	add	r2, r2, #720	; 0x2d0
  419280:	e59f3080 	ldr	r3, [pc, #128]	; 419308 <cvSetAdd+0x210>
  419284:	e08f3003 	add	r3, pc, r3
  419288:	fa006ab1 	blx	433d54 <__assert_func>
  41928c:	e7942103 	ldr	r2, [r4, r3, lsl #2]
  419290:	e7812103 	str	r2, [r1, r3, lsl #2]
  419294:	e2833001 	add	r3, r3, #1
  419298:	ea000000 	b	4192a0 <cvSetAdd+0x1a8>
  41929c:	e3a03000 	mov	r3, #0
  4192a0:	e153000c 	cmp	r3, ip
  4192a4:	3afffff8 	bcc	41928c <cvSetAdd+0x194>
  4192a8:	e5810000 	str	r0, [r1]
  4192ac:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
  4192b0:	e2833001 	add	r3, r3, #1
  4192b4:	e585303c 	str	r3, [r5, #60]	; 0x3c
  4192b8:	e3560000 	cmp	r6, #0
  4192bc:	15861000 	strne	r1, [r6]
  4192c0:	e28dd008 	add	sp, sp, #8
  4192c4:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  4192c8:	e12fff1e 	bx	lr
  4192cc:	00000ae6 	.word	0x00000ae6
  4192d0:	1fbe7754 	.word	0x1fbe7754
  4192d4:	000272ec 	.word	0x000272ec
  4192d8:	00026218 	.word	0x00026218
  4192dc:	00000aed 	.word	0x00000aed
  4192e0:	1fbe76ec 	.word	0x1fbe76ec
  4192e4:	00023e44 	.word	0x00023e44
  4192e8:	000261b0 	.word	0x000261b0
  4192ec:	00026164 	.word	0x00026164
  4192f0:	00000af5 	.word	0x00000af5
  4192f4:	00025c0c 	.word	0x00025c0c
  4192f8:	000267a8 	.word	0x000267a8
  4192fc:	000260d8 	.word	0x000260d8
  419300:	00000b01 	.word	0x00000b01
  419304:	00025b80 	.word	0x00025b80
  419308:	00024004 	.word	0x00024004

0041930c <cvSetRemove>:
  41930c:	e92d4010 	push	{r4, lr}
  419310:	e24dd008 	sub	sp, sp, #8
  419314:	e1a04000 	mov	r4, r0
  419318:	ebffebd5 	bl	414274 <cvGetSeqElem>
  41931c:	e3500000 	cmp	r0, #0
  419320:	0a000003 	beq	419334 <cvSetRemove+0x28>
  419324:	e5903000 	ldr	r3, [r0]
  419328:	e3530000 	cmp	r3, #0
  41932c:	b3a00000 	movlt	r0, #0
  419330:	ea000000 	b	419338 <cvSetRemove+0x2c>
  419334:	e3a00000 	mov	r0, #0
  419338:	e3500000 	cmp	r0, #0
  41933c:	0a000015 	beq	419398 <cvSetRemove+0x8c>
  419340:	e5903000 	ldr	r3, [r0]
  419344:	e3530000 	cmp	r3, #0
  419348:	aa000008 	bge	419370 <cvSetRemove+0x64>
  41934c:	e59f0084 	ldr	r0, [pc, #132]	; 4193d8 <cvSetRemove+0xcc>
  419350:	e08f0000 	add	r0, pc, r0
  419354:	e59f1080 	ldr	r1, [pc, #128]	; 4193dc <cvSetRemove+0xd0>
  419358:	e59f2080 	ldr	r2, [pc, #128]	; 4193e0 <cvSetRemove+0xd4>
  41935c:	e08f2002 	add	r2, pc, r2
  419360:	e2822c03 	add	r2, r2, #768	; 0x300
  419364:	e59f3078 	ldr	r3, [pc, #120]	; 4193e4 <cvSetRemove+0xd8>
  419368:	e08f3003 	add	r3, pc, r3
  41936c:	fa006a78 	blx	433d54 <__assert_func>
  419370:	e5942038 	ldr	r2, [r4, #56]	; 0x38
  419374:	e5802004 	str	r2, [r0, #4]
  419378:	e3c3333f 	bic	r3, r3, #-67108864	; 0xfc000000
  41937c:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
  419380:	e5803000 	str	r3, [r0]
  419384:	e5840038 	str	r0, [r4, #56]	; 0x38
  419388:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
  41938c:	e2433001 	sub	r3, r3, #1
  419390:	e584303c 	str	r3, [r4, #60]	; 0x3c
  419394:	ea00000c 	b	4193cc <cvSetRemove+0xc0>
  419398:	e3540000 	cmp	r4, #0
  41939c:	1a00000a 	bne	4193cc <cvSetRemove+0xc0>
  4193a0:	e59f3040 	ldr	r3, [pc, #64]	; 4193e8 <cvSetRemove+0xdc>
  4193a4:	e58d3000 	str	r3, [sp]
  4193a8:	e3e0001a 	mvn	r0, #26
  4193ac:	e59f1038 	ldr	r1, [pc, #56]	; 4193ec <cvSetRemove+0xe0>
  4193b0:	e08f1001 	add	r1, pc, r1
  4193b4:	e2811fc7 	add	r1, r1, #796	; 0x31c
  4193b8:	e59f2030 	ldr	r2, [pc, #48]	; 4193f0 <cvSetRemove+0xe4>
  4193bc:	e08f2002 	add	r2, pc, r2
  4193c0:	e59f302c 	ldr	r3, [pc, #44]	; 4193f4 <cvSetRemove+0xe8>
  4193c4:	e08f3003 	add	r3, pc, r3
  4193c8:	ebffe5b6 	bl	412aa8 <cvError>
  4193cc:	e28dd008 	add	sp, sp, #8
  4193d0:	e8bd4010 	pop	{r4, lr}
  4193d4:	e12fff1e 	bx	lr
  4193d8:	00023cec 	.word	0x00023cec
  4193dc:	00000447 	.word	0x00000447
  4193e0:	00025a9c 	.word	0x00025a9c
  4193e4:	00023cec 	.word	0x00023cec
  4193e8:	00000b1b 	.word	0x00000b1b
  4193ec:	1fbe74bc 	.word	0x1fbe74bc
  4193f0:	00027054 	.word	0x00027054
  4193f4:	00025f80 	.word	0x00025f80

004193f8 <cvClearSet>:
  4193f8:	e92d4010 	push	{r4, lr}
  4193fc:	e24dd008 	sub	sp, sp, #8
  419400:	e1a04000 	mov	r4, r0
  419404:	ebfff4fc 	bl	4167fc <cvClearSeq>
  419408:	ebffe575 	bl	4129e4 <cvGetErrStatus>
  41940c:	e3500000 	cmp	r0, #0
  419410:	aa00000b 	bge	419444 <cvClearSet+0x4c>
  419414:	e59f3040 	ldr	r3, [pc, #64]	; 41945c <cvClearSet+0x64>
  419418:	e58d3000 	str	r3, [sp]
  41941c:	e3e00000 	mvn	r0, #0
  419420:	e59f1038 	ldr	r1, [pc, #56]	; 419460 <cvClearSet+0x68>
  419424:	e08f1001 	add	r1, pc, r1
  419428:	e2811fca 	add	r1, r1, #808	; 0x328
  41942c:	e59f2030 	ldr	r2, [pc, #48]	; 419464 <cvClearSet+0x6c>
  419430:	e08f2002 	add	r2, pc, r2
  419434:	e59f302c 	ldr	r3, [pc, #44]	; 419468 <cvClearSet+0x70>
  419438:	e08f3003 	add	r3, pc, r3
  41943c:	ebffe599 	bl	412aa8 <cvError>
  419440:	ea000002 	b	419450 <cvClearSet+0x58>
  419444:	e3a03000 	mov	r3, #0
  419448:	e5843038 	str	r3, [r4, #56]	; 0x38
  41944c:	e584303c 	str	r3, [r4, #60]	; 0x3c
  419450:	e28dd008 	add	sp, sp, #8
  419454:	e8bd4010 	pop	{r4, lr}
  419458:	e12fff1e 	bx	lr
  41945c:	00000b29 	.word	0x00000b29
  419460:	1fbe7448 	.word	0x1fbe7448
  419464:	00023ba0 	.word	0x00023ba0
  419468:	00025f0c 	.word	0x00025f0c

0041946c <cvCreateGraph>:
  41946c:	e92d4030 	push	{r4, r5, lr}
  419470:	e24dd00c 	sub	sp, sp, #12
  419474:	e3510043 	cmp	r1, #67	; 0x43
  419478:	da000004 	ble	419490 <cvCreateGraph+0x24>
  41947c:	e1a05003 	mov	r5, r3
  419480:	e3530017 	cmp	r3, #23
  419484:	da000001 	ble	419490 <cvCreateGraph+0x24>
  419488:	e3520007 	cmp	r2, #7
  41948c:	ca00000c 	bgt	4194c4 <cvCreateGraph+0x58>
  419490:	e59f30e4 	ldr	r3, [pc, #228]	; 41957c <cvCreateGraph+0x110>
  419494:	e58d3000 	str	r3, [sp]
  419498:	e3e000c8 	mvn	r0, #200	; 0xc8
  41949c:	e59f10dc 	ldr	r1, [pc, #220]	; 419580 <cvCreateGraph+0x114>
  4194a0:	e08f1001 	add	r1, pc, r1
  4194a4:	e2811fcd 	add	r1, r1, #820	; 0x334
  4194a8:	e59f20d4 	ldr	r2, [pc, #212]	; 419584 <cvCreateGraph+0x118>
  4194ac:	e08f2002 	add	r2, pc, r2
  4194b0:	e59f30d0 	ldr	r3, [pc, #208]	; 419588 <cvCreateGraph+0x11c>
  4194b4:	e08f3003 	add	r3, pc, r3
  4194b8:	ebffe57a 	bl	412aa8 <cvError>
  4194bc:	e3a04000 	mov	r4, #0
  4194c0:	ea000029 	b	41956c <cvCreateGraph+0x100>
  4194c4:	e59d3018 	ldr	r3, [sp, #24]
  4194c8:	ebfffed6 	bl	419028 <cvCreateSet>
  4194cc:	e1a04000 	mov	r4, r0
  4194d0:	ebffe543 	bl	4129e4 <cvGetErrStatus>
  4194d4:	e3500000 	cmp	r0, #0
  4194d8:	aa00000c 	bge	419510 <cvCreateGraph+0xa4>
  4194dc:	e59f30a8 	ldr	r3, [pc, #168]	; 41958c <cvCreateGraph+0x120>
  4194e0:	e58d3000 	str	r3, [sp]
  4194e4:	e3e00000 	mvn	r0, #0
  4194e8:	e59f10a0 	ldr	r1, [pc, #160]	; 419590 <cvCreateGraph+0x124>
  4194ec:	e08f1001 	add	r1, pc, r1
  4194f0:	e2811fcd 	add	r1, r1, #820	; 0x334
  4194f4:	e59f2098 	ldr	r2, [pc, #152]	; 419594 <cvCreateGraph+0x128>
  4194f8:	e08f2002 	add	r2, pc, r2
  4194fc:	e59f3094 	ldr	r3, [pc, #148]	; 419598 <cvCreateGraph+0x12c>
  419500:	e08f3003 	add	r3, pc, r3
  419504:	ebffe567 	bl	412aa8 <cvError>
  419508:	e3a04000 	mov	r4, #0
  41950c:	ea000016 	b	41956c <cvCreateGraph+0x100>
  419510:	e3a00000 	mov	r0, #0
  419514:	e3a01040 	mov	r1, #64	; 0x40
  419518:	e1a02005 	mov	r2, r5
  41951c:	e59d3018 	ldr	r3, [sp, #24]
  419520:	ebfffec0 	bl	419028 <cvCreateSet>
  419524:	e1a05000 	mov	r5, r0
  419528:	ebffe52d 	bl	4129e4 <cvGetErrStatus>
  41952c:	e3500000 	cmp	r0, #0
  419530:	aa00000c 	bge	419568 <cvCreateGraph+0xfc>
  419534:	e59f3060 	ldr	r3, [pc, #96]	; 41959c <cvCreateGraph+0x130>
  419538:	e58d3000 	str	r3, [sp]
  41953c:	e3e00000 	mvn	r0, #0
  419540:	e59f1058 	ldr	r1, [pc, #88]	; 4195a0 <cvCreateGraph+0x134>
  419544:	e08f1001 	add	r1, pc, r1
  419548:	e2811fcd 	add	r1, r1, #820	; 0x334
  41954c:	e59f2050 	ldr	r2, [pc, #80]	; 4195a4 <cvCreateGraph+0x138>
  419550:	e08f2002 	add	r2, pc, r2
  419554:	e59f304c 	ldr	r3, [pc, #76]	; 4195a8 <cvCreateGraph+0x13c>
  419558:	e08f3003 	add	r3, pc, r3
  41955c:	ebffe551 	bl	412aa8 <cvError>
  419560:	e3a04000 	mov	r4, #0
  419564:	ea000000 	b	41956c <cvCreateGraph+0x100>
  419568:	e5845040 	str	r5, [r4, #64]	; 0x40
  41956c:	e1a00004 	mov	r0, r4
  419570:	e28dd00c 	add	sp, sp, #12
  419574:	e8bd4030 	pop	{r4, r5, lr}
  419578:	e12fff1e 	bx	lr
  41957c:	00000b46 	.word	0x00000b46
  419580:	1fbe73cc 	.word	0x1fbe73cc
  419584:	00026f64 	.word	0x00026f64
  419588:	00025e90 	.word	0x00025e90
  41958c:	00000b48 	.word	0x00000b48
  419590:	1fbe7380 	.word	0x1fbe7380
  419594:	00023ad8 	.word	0x00023ad8
  419598:	00025e44 	.word	0x00025e44
  41959c:	00000b4a 	.word	0x00000b4a
  4195a0:	1fbe7328 	.word	0x1fbe7328
  4195a4:	00023a80 	.word	0x00023a80
  4195a8:	00025dec 	.word	0x00025dec

004195ac <cvClearGraph>:
  4195ac:	e92d4010 	push	{r4, lr}
  4195b0:	e24dd008 	sub	sp, sp, #8
  4195b4:	e2504000 	subs	r4, r0, #0
  4195b8:	1a00000b 	bne	4195ec <cvClearGraph+0x40>
  4195bc:	e59f3044 	ldr	r3, [pc, #68]	; 419608 <cvClearGraph+0x5c>
  4195c0:	e58d3000 	str	r3, [sp]
  4195c4:	e3e0001a 	mvn	r0, #26
  4195c8:	e59f103c 	ldr	r1, [pc, #60]	; 41960c <cvClearGraph+0x60>
  4195cc:	e08f1001 	add	r1, pc, r1
  4195d0:	e2811fd1 	add	r1, r1, #836	; 0x344
  4195d4:	e59f2034 	ldr	r2, [pc, #52]	; 419610 <cvClearGraph+0x64>
  4195d8:	e08f2002 	add	r2, pc, r2
  4195dc:	e59f3030 	ldr	r3, [pc, #48]	; 419614 <cvClearGraph+0x68>
  4195e0:	e08f3003 	add	r3, pc, r3
  4195e4:	ebffe52f 	bl	412aa8 <cvError>
  4195e8:	ea000003 	b	4195fc <cvClearGraph+0x50>
  4195ec:	e5940040 	ldr	r0, [r4, #64]	; 0x40
  4195f0:	ebffff80 	bl	4193f8 <cvClearSet>
  4195f4:	e1a00004 	mov	r0, r4
  4195f8:	ebffff7e 	bl	4193f8 <cvClearSet>
  4195fc:	e28dd008 	add	sp, sp, #8
  419600:	e8bd4010 	pop	{r4, lr}
  419604:	e12fff1e 	bx	lr
  419608:	00000b5e 	.word	0x00000b5e
  41960c:	1fbe72a0 	.word	0x1fbe72a0
  419610:	00026e38 	.word	0x00026e38
  419614:	00025d64 	.word	0x00025d64

00419618 <cvGraphAddVtx>:
  419618:	e92d4070 	push	{r4, r5, r6, lr}
  41961c:	e24dd010 	sub	sp, sp, #16
  419620:	e2506000 	subs	r6, r0, #0
  419624:	1a00000c 	bne	41965c <cvGraphAddVtx+0x44>
  419628:	e59f3118 	ldr	r3, [pc, #280]	; 419748 <cvGraphAddVtx+0x130>
  41962c:	e58d3000 	str	r3, [sp]
  419630:	e3e0001a 	mvn	r0, #26
  419634:	e59f1110 	ldr	r1, [pc, #272]	; 41974c <cvGraphAddVtx+0x134>
  419638:	e08f1001 	add	r1, pc, r1
  41963c:	e2811fd5 	add	r1, r1, #852	; 0x354
  419640:	e59f2108 	ldr	r2, [pc, #264]	; 419750 <cvGraphAddVtx+0x138>
  419644:	e08f2002 	add	r2, pc, r2
  419648:	e59f3104 	ldr	r3, [pc, #260]	; 419754 <cvGraphAddVtx+0x13c>
  41964c:	e08f3003 	add	r3, pc, r3
  419650:	ebffe514 	bl	412aa8 <cvError>
  419654:	e3e00000 	mvn	r0, #0
  419658:	ea000037 	b	41973c <cvGraphAddVtx+0x124>
  41965c:	e1a04001 	mov	r4, r1
  419660:	e1a05002 	mov	r5, r2
  419664:	e5963038 	ldr	r3, [r6, #56]	; 0x38
  419668:	e58d300c 	str	r3, [sp, #12]
  41966c:	e3530000 	cmp	r3, #0
  419670:	0a000008 	beq	419698 <cvGraphAddVtx+0x80>
  419674:	e5932004 	ldr	r2, [r3, #4]
  419678:	e5862038 	str	r2, [r6, #56]	; 0x38
  41967c:	e5932000 	ldr	r2, [r3]
  419680:	e3c2233f 	bic	r2, r2, #-67108864	; 0xfc000000
  419684:	e5832000 	str	r2, [r3]
  419688:	e596303c 	ldr	r3, [r6, #60]	; 0x3c
  41968c:	e2833001 	add	r3, r3, #1
  419690:	e586303c 	str	r3, [r6, #60]	; 0x3c
  419694:	ea000003 	b	4196a8 <cvGraphAddVtx+0x90>
  419698:	e1a00006 	mov	r0, r6
  41969c:	e3a01000 	mov	r1, #0
  4196a0:	e28d200c 	add	r2, sp, #12
  4196a4:	ebfffe93 	bl	4190f8 <cvSetAdd>
  4196a8:	e59de00c 	ldr	lr, [sp, #12]
  4196ac:	e35e0000 	cmp	lr, #0
  4196b0:	0a00001e 	beq	419730 <cvGraphAddVtx+0x118>
  4196b4:	e3540000 	cmp	r4, #0
  4196b8:	0a000018 	beq	419720 <cvGraphAddVtx+0x108>
  4196bc:	e596001c 	ldr	r0, [r6, #28]
  4196c0:	e2400008 	sub	r0, r0, #8
  4196c4:	e1a00120 	lsr	r0, r0, #2
  4196c8:	e28ec008 	add	ip, lr, #8
  4196cc:	e2841008 	add	r1, r4, #8
  4196d0:	e3110003 	tst	r1, #3
  4196d4:	1a000001 	bne	4196e0 <cvGraphAddVtx+0xc8>
  4196d8:	e31c0003 	tst	ip, #3
  4196dc:	0a00000c 	beq	419714 <cvGraphAddVtx+0xfc>
  4196e0:	e59f0070 	ldr	r0, [pc, #112]	; 419758 <cvGraphAddVtx+0x140>
  4196e4:	e08f0000 	add	r0, pc, r0
  4196e8:	e59f106c 	ldr	r1, [pc, #108]	; 41975c <cvGraphAddVtx+0x144>
  4196ec:	e59f206c 	ldr	r2, [pc, #108]	; 419760 <cvGraphAddVtx+0x148>
  4196f0:	e08f2002 	add	r2, pc, r2
  4196f4:	e2822fca 	add	r2, r2, #808	; 0x328
  4196f8:	e59f3064 	ldr	r3, [pc, #100]	; 419764 <cvGraphAddVtx+0x14c>
  4196fc:	e08f3003 	add	r3, pc, r3
  419700:	fa006993 	blx	433d54 <__assert_func>
  419704:	e7912103 	ldr	r2, [r1, r3, lsl #2]
  419708:	e78c2103 	str	r2, [ip, r3, lsl #2]
  41970c:	e2833001 	add	r3, r3, #1
  419710:	ea000000 	b	419718 <cvGraphAddVtx+0x100>
  419714:	e3a03000 	mov	r3, #0
  419718:	e1530000 	cmp	r3, r0
  41971c:	3afffff8 	bcc	419704 <cvGraphAddVtx+0xec>
  419720:	e3a03000 	mov	r3, #0
  419724:	e58e3004 	str	r3, [lr, #4]
  419728:	e59e0000 	ldr	r0, [lr]
  41972c:	ea000000 	b	419734 <cvGraphAddVtx+0x11c>
  419730:	e3e00000 	mvn	r0, #0
  419734:	e3550000 	cmp	r5, #0
  419738:	1585e000 	strne	lr, [r5]
  41973c:	e28dd010 	add	sp, sp, #16
  419740:	e8bd4070 	pop	{r4, r5, r6, lr}
  419744:	e12fff1e 	bx	lr
  419748:	00000b73 	.word	0x00000b73
  41974c:	1fbe7234 	.word	0x1fbe7234
  419750:	00026dcc 	.word	0x00026dcc
  419754:	00025cf8 	.word	0x00025cf8
  419758:	00025c60 	.word	0x00025c60
  41975c:	00000b7a 	.word	0x00000b7a
  419760:	00025708 	.word	0x00025708
  419764:	00023b8c 	.word	0x00023b8c

00419768 <cvFindGraphEdgeByPtr>:
  419768:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41976c:	e24dd00c 	sub	sp, sp, #12
  419770:	e3510000 	cmp	r1, #0
  419774:	13500000 	cmpne	r0, #0
  419778:	0a000002 	beq	419788 <cvFindGraphEdgeByPtr+0x20>
  41977c:	e1a0c001 	mov	ip, r1
  419780:	e3520000 	cmp	r2, #0
  419784:	1a00000c 	bne	4197bc <cvFindGraphEdgeByPtr+0x54>
  419788:	e59f30dc 	ldr	r3, [pc, #220]	; 41986c <cvFindGraphEdgeByPtr+0x104>
  41978c:	e58d3000 	str	r3, [sp]
  419790:	e3e0001a 	mvn	r0, #26
  419794:	e59f10d4 	ldr	r1, [pc, #212]	; 419870 <cvFindGraphEdgeByPtr+0x108>
  419798:	e08f1001 	add	r1, pc, r1
  41979c:	e2811fd9 	add	r1, r1, #868	; 0x364
  4197a0:	e59f20cc 	ldr	r2, [pc, #204]	; 419874 <cvFindGraphEdgeByPtr+0x10c>
  4197a4:	e08f2002 	add	r2, pc, r2
  4197a8:	e59f30c8 	ldr	r3, [pc, #200]	; 419878 <cvFindGraphEdgeByPtr+0x110>
  4197ac:	e08f3003 	add	r3, pc, r3
  4197b0:	ebffe4bc 	bl	412aa8 <cvError>
  4197b4:	e3a00000 	mov	r0, #0
  4197b8:	ea000028 	b	419860 <cvFindGraphEdgeByPtr+0xf8>
  4197bc:	e1510002 	cmp	r1, r2
  4197c0:	0a000025 	beq	41985c <cvFindGraphEdgeByPtr+0xf4>
  4197c4:	e5903000 	ldr	r3, [r0]
  4197c8:	e3130a01 	tst	r3, #4096	; 0x1000
  4197cc:	1a000007 	bne	4197f0 <cvFindGraphEdgeByPtr+0x88>
  4197d0:	e5911000 	ldr	r1, [r1]
  4197d4:	e3c1133f 	bic	r1, r1, #-67108864	; 0xfc000000
  4197d8:	e5923000 	ldr	r3, [r2]
  4197dc:	e3c3333f 	bic	r3, r3, #-67108864	; 0xfc000000
  4197e0:	e1510003 	cmp	r1, r3
  4197e4:	c1a0300c 	movgt	r3, ip
  4197e8:	c1a0c002 	movgt	ip, r2
  4197ec:	c1a02003 	movgt	r2, r3
  4197f0:	e59c0004 	ldr	r0, [ip, #4]
  4197f4:	ea000015 	b	419850 <cvFindGraphEdgeByPtr+0xe8>
  4197f8:	e5901014 	ldr	r1, [r0, #20]
  4197fc:	e151000c 	cmp	r1, ip
  419800:	13a03000 	movne	r3, #0
  419804:	03a03001 	moveq	r3, #1
  419808:	e3530001 	cmp	r3, #1
  41980c:	0a00000b 	beq	419840 <cvFindGraphEdgeByPtr+0xd8>
  419810:	e590e010 	ldr	lr, [r0, #16]
  419814:	e15e000c 	cmp	lr, ip
  419818:	0a000008 	beq	419840 <cvFindGraphEdgeByPtr+0xd8>
  41981c:	e59f0058 	ldr	r0, [pc, #88]	; 41987c <cvFindGraphEdgeByPtr+0x114>
  419820:	e08f0000 	add	r0, pc, r0
  419824:	e59f1054 	ldr	r1, [pc, #84]	; 419880 <cvFindGraphEdgeByPtr+0x118>
  419828:	e59f2054 	ldr	r2, [pc, #84]	; 419884 <cvFindGraphEdgeByPtr+0x11c>
  41982c:	e08f2002 	add	r2, pc, r2
  419830:	e2822fda 	add	r2, r2, #872	; 0x368
  419834:	e59f304c 	ldr	r3, [pc, #76]	; 419888 <cvFindGraphEdgeByPtr+0x120>
  419838:	e08f3003 	add	r3, pc, r3
  41983c:	fa006944 	blx	433d54 <__assert_func>
  419840:	e1520001 	cmp	r2, r1
  419844:	0a000005 	beq	419860 <cvFindGraphEdgeByPtr+0xf8>
  419848:	e2833002 	add	r3, r3, #2
  41984c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
  419850:	e3500000 	cmp	r0, #0
  419854:	1affffe7 	bne	4197f8 <cvFindGraphEdgeByPtr+0x90>
  419858:	ea000000 	b	419860 <cvFindGraphEdgeByPtr+0xf8>
  41985c:	e3a00000 	mov	r0, #0
  419860:	e28dd00c 	add	sp, sp, #12
  419864:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  419868:	e12fff1e 	bx	lr
  41986c:	00000bdc 	.word	0x00000bdc
  419870:	1fbe70d4 	.word	0x1fbe70d4
  419874:	00026c6c 	.word	0x00026c6c
  419878:	00025b98 	.word	0x00025b98
  41987c:	00025b24 	.word	0x00025b24
  419880:	00000bec 	.word	0x00000bec
  419884:	000255cc 	.word	0x000255cc
  419888:	00026188 	.word	0x00026188

0041988c <cvFindGraphEdge>:
  41988c:	e92d4070 	push	{r4, r5, r6, lr}
  419890:	e24dd008 	sub	sp, sp, #8
  419894:	e2505000 	subs	r5, r0, #0
  419898:	1a00000c 	bne	4198d0 <cvFindGraphEdge+0x44>
  41989c:	e59f30ac 	ldr	r3, [pc, #172]	; 419950 <cvFindGraphEdge+0xc4>
  4198a0:	e58d3000 	str	r3, [sp]
  4198a4:	e3e0001a 	mvn	r0, #26
  4198a8:	e59f10a4 	ldr	r1, [pc, #164]	; 419954 <cvFindGraphEdge+0xc8>
  4198ac:	e08f1001 	add	r1, pc, r1
  4198b0:	e2811fdf 	add	r1, r1, #892	; 0x37c
  4198b4:	e59f209c 	ldr	r2, [pc, #156]	; 419958 <cvFindGraphEdge+0xcc>
  4198b8:	e08f2002 	add	r2, pc, r2
  4198bc:	e59f3098 	ldr	r3, [pc, #152]	; 41995c <cvFindGraphEdge+0xd0>
  4198c0:	e08f3003 	add	r3, pc, r3
  4198c4:	ebffe477 	bl	412aa8 <cvError>
  4198c8:	e3a00000 	mov	r0, #0
  4198cc:	ea00001c 	b	419944 <cvFindGraphEdge+0xb8>
  4198d0:	e1a06002 	mov	r6, r2
  4198d4:	e1a00005 	mov	r0, r5
  4198d8:	ebffea65 	bl	414274 <cvGetSeqElem>
  4198dc:	e3500000 	cmp	r0, #0
  4198e0:	0a000004 	beq	4198f8 <cvFindGraphEdge+0x6c>
  4198e4:	e5903000 	ldr	r3, [r0]
  4198e8:	e3530000 	cmp	r3, #0
  4198ec:	aa000003 	bge	419900 <cvFindGraphEdge+0x74>
  4198f0:	e3a04000 	mov	r4, #0
  4198f4:	ea000002 	b	419904 <cvFindGraphEdge+0x78>
  4198f8:	e3a04000 	mov	r4, #0
  4198fc:	ea000000 	b	419904 <cvFindGraphEdge+0x78>
  419900:	e1a04000 	mov	r4, r0
  419904:	e1a00005 	mov	r0, r5
  419908:	e1a01006 	mov	r1, r6
  41990c:	ebffea58 	bl	414274 <cvGetSeqElem>
  419910:	e3500000 	cmp	r0, #0
  419914:	0a000004 	beq	41992c <cvFindGraphEdge+0xa0>
  419918:	e5903000 	ldr	r3, [r0]
  41991c:	e3530000 	cmp	r3, #0
  419920:	aa000003 	bge	419934 <cvFindGraphEdge+0xa8>
  419924:	e3a02000 	mov	r2, #0
  419928:	ea000002 	b	419938 <cvFindGraphEdge+0xac>
  41992c:	e3a02000 	mov	r2, #0
  419930:	ea000000 	b	419938 <cvFindGraphEdge+0xac>
  419934:	e1a02000 	mov	r2, r0
  419938:	e1a00005 	mov	r0, r5
  41993c:	e1a01004 	mov	r1, r4
  419940:	ebffff88 	bl	419768 <cvFindGraphEdgeByPtr>
  419944:	e28dd008 	add	sp, sp, #8
  419948:	e8bd4070 	pop	{r4, r5, r6, lr}
  41994c:	e12fff1e 	bx	lr
  419950:	00000c04 	.word	0x00000c04
  419954:	1fbe6fc0 	.word	0x1fbe6fc0
  419958:	00026130 	.word	0x00026130
  41995c:	00025a84 	.word	0x00025a84

00419960 <cvGraphAddEdgeByPtr>:
  419960:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  419964:	e24dd014 	sub	sp, sp, #20
  419968:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
  41996c:	e2507000 	subs	r7, r0, #0
  419970:	1a00000d 	bne	4199ac <cvGraphAddEdgeByPtr+0x4c>
  419974:	e59f32e0 	ldr	r3, [pc, #736]	; 419c5c <cvGraphAddEdgeByPtr+0x2fc>
  419978:	e58d3000 	str	r3, [sp]
  41997c:	e3e0001a 	mvn	r0, #26
  419980:	e59f12d8 	ldr	r1, [pc, #728]	; 419c60 <cvGraphAddEdgeByPtr+0x300>
  419984:	e08f1001 	add	r1, pc, r1
  419988:	e2811fe3 	add	r1, r1, #908	; 0x38c
  41998c:	e59f22d0 	ldr	r2, [pc, #720]	; 419c64 <cvGraphAddEdgeByPtr+0x304>
  419990:	e08f2002 	add	r2, pc, r2
  419994:	e59f32cc 	ldr	r3, [pc, #716]	; 419c68 <cvGraphAddEdgeByPtr+0x308>
  419998:	e08f3003 	add	r3, pc, r3
  41999c:	ebffe441 	bl	412aa8 <cvError>
  4199a0:	e3e00000 	mvn	r0, #0
  4199a4:	e3a04000 	mov	r4, #0
  4199a8:	ea0000a6 	b	419c48 <cvGraphAddEdgeByPtr+0x2e8>
  4199ac:	e1a05001 	mov	r5, r1
  4199b0:	e1a06002 	mov	r6, r2
  4199b4:	e1a09003 	mov	r9, r3
  4199b8:	e5973000 	ldr	r3, [r7]
  4199bc:	e3130a01 	tst	r3, #4096	; 0x1000
  4199c0:	1a000006 	bne	4199e0 <cvGraphAddEdgeByPtr+0x80>
  4199c4:	e5912000 	ldr	r2, [r1]
  4199c8:	e3c2233f 	bic	r2, r2, #-67108864	; 0xfc000000
  4199cc:	e5963000 	ldr	r3, [r6]
  4199d0:	e3c3333f 	bic	r3, r3, #-67108864	; 0xfc000000
  4199d4:	e1520003 	cmp	r2, r3
  4199d8:	c1a05006 	movgt	r5, r6
  4199dc:	c1a06001 	movgt	r6, r1
  4199e0:	e1a00007 	mov	r0, r7
  4199e4:	e1a01005 	mov	r1, r5
  4199e8:	e1a02006 	mov	r2, r6
  4199ec:	ebffff5d 	bl	419768 <cvFindGraphEdgeByPtr>
  4199f0:	e1a04000 	mov	r4, r0
  4199f4:	ebffe3fa 	bl	4129e4 <cvGetErrStatus>
  4199f8:	e3500000 	cmp	r0, #0
  4199fc:	aa00000c 	bge	419a34 <cvGraphAddEdgeByPtr+0xd4>
  419a00:	e59f3264 	ldr	r3, [pc, #612]	; 419c6c <cvGraphAddEdgeByPtr+0x30c>
  419a04:	e58d3000 	str	r3, [sp]
  419a08:	e3e00000 	mvn	r0, #0
  419a0c:	e59f125c 	ldr	r1, [pc, #604]	; 419c70 <cvGraphAddEdgeByPtr+0x310>
  419a10:	e08f1001 	add	r1, pc, r1
  419a14:	e2811fe3 	add	r1, r1, #908	; 0x38c
  419a18:	e59f2254 	ldr	r2, [pc, #596]	; 419c74 <cvGraphAddEdgeByPtr+0x314>
  419a1c:	e08f2002 	add	r2, pc, r2
  419a20:	e59f3250 	ldr	r3, [pc, #592]	; 419c78 <cvGraphAddEdgeByPtr+0x318>
  419a24:	e08f3003 	add	r3, pc, r3
  419a28:	ebffe41e 	bl	412aa8 <cvError>
  419a2c:	e3e00000 	mvn	r0, #0
  419a30:	ea000084 	b	419c48 <cvGraphAddEdgeByPtr+0x2e8>
  419a34:	e3540000 	cmp	r4, #0
  419a38:	1a000081 	bne	419c44 <cvGraphAddEdgeByPtr+0x2e4>
  419a3c:	e1550006 	cmp	r5, r6
  419a40:	1a00000e 	bne	419a80 <cvGraphAddEdgeByPtr+0x120>
  419a44:	e3550000 	cmp	r5, #0
  419a48:	13e00004 	mvnne	r0, #4
  419a4c:	03e0001a 	mvneq	r0, #26
  419a50:	e59f3224 	ldr	r3, [pc, #548]	; 419c7c <cvGraphAddEdgeByPtr+0x31c>
  419a54:	e58d3000 	str	r3, [sp]
  419a58:	e59f1220 	ldr	r1, [pc, #544]	; 419c80 <cvGraphAddEdgeByPtr+0x320>
  419a5c:	e08f1001 	add	r1, pc, r1
  419a60:	e2811fe3 	add	r1, r1, #908	; 0x38c
  419a64:	e59f2218 	ldr	r2, [pc, #536]	; 419c84 <cvGraphAddEdgeByPtr+0x324>
  419a68:	e08f2002 	add	r2, pc, r2
  419a6c:	e59f3214 	ldr	r3, [pc, #532]	; 419c88 <cvGraphAddEdgeByPtr+0x328>
  419a70:	e08f3003 	add	r3, pc, r3
  419a74:	ebffe40b 	bl	412aa8 <cvError>
  419a78:	e3e00000 	mvn	r0, #0
  419a7c:	ea000071 	b	419c48 <cvGraphAddEdgeByPtr+0x2e8>
  419a80:	e5970040 	ldr	r0, [r7, #64]	; 0x40
  419a84:	e5903038 	ldr	r3, [r0, #56]	; 0x38
  419a88:	e58d300c 	str	r3, [sp, #12]
  419a8c:	e3530000 	cmp	r3, #0
  419a90:	0a000008 	beq	419ab8 <cvGraphAddEdgeByPtr+0x158>
  419a94:	e5932004 	ldr	r2, [r3, #4]
  419a98:	e5802038 	str	r2, [r0, #56]	; 0x38
  419a9c:	e5932000 	ldr	r2, [r3]
  419aa0:	e3c2233f 	bic	r2, r2, #-67108864	; 0xfc000000
  419aa4:	e5832000 	str	r2, [r3]
  419aa8:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
  419aac:	e2833001 	add	r3, r3, #1
  419ab0:	e580303c 	str	r3, [r0, #60]	; 0x3c
  419ab4:	ea000002 	b	419ac4 <cvGraphAddEdgeByPtr+0x164>
  419ab8:	e3a01000 	mov	r1, #0
  419abc:	e28d200c 	add	r2, sp, #12
  419ac0:	ebfffd8c 	bl	4190f8 <cvSetAdd>
  419ac4:	e59d400c 	ldr	r4, [sp, #12]
  419ac8:	ebffe3c5 	bl	4129e4 <cvGetErrStatus>
  419acc:	e3500000 	cmp	r0, #0
  419ad0:	aa00000c 	bge	419b08 <cvGraphAddEdgeByPtr+0x1a8>
  419ad4:	e59f31b0 	ldr	r3, [pc, #432]	; 419c8c <cvGraphAddEdgeByPtr+0x32c>
  419ad8:	e58d3000 	str	r3, [sp]
  419adc:	e3e00000 	mvn	r0, #0
  419ae0:	e59f11a8 	ldr	r1, [pc, #424]	; 419c90 <cvGraphAddEdgeByPtr+0x330>
  419ae4:	e08f1001 	add	r1, pc, r1
  419ae8:	e2811fe3 	add	r1, r1, #908	; 0x38c
  419aec:	e59f21a0 	ldr	r2, [pc, #416]	; 419c94 <cvGraphAddEdgeByPtr+0x334>
  419af0:	e08f2002 	add	r2, pc, r2
  419af4:	e59f319c 	ldr	r3, [pc, #412]	; 419c98 <cvGraphAddEdgeByPtr+0x338>
  419af8:	e08f3003 	add	r3, pc, r3
  419afc:	ebffe3e9 	bl	412aa8 <cvError>
  419b00:	e3e00000 	mvn	r0, #0
  419b04:	ea00004f 	b	419c48 <cvGraphAddEdgeByPtr+0x2e8>
  419b08:	e5943000 	ldr	r3, [r4]
  419b0c:	e3530000 	cmp	r3, #0
  419b10:	aa000008 	bge	419b38 <cvGraphAddEdgeByPtr+0x1d8>
  419b14:	e59f0180 	ldr	r0, [pc, #384]	; 419c9c <cvGraphAddEdgeByPtr+0x33c>
  419b18:	e08f0000 	add	r0, pc, r0
  419b1c:	e59f117c 	ldr	r1, [pc, #380]	; 419ca0 <cvGraphAddEdgeByPtr+0x340>
  419b20:	e59f217c 	ldr	r2, [pc, #380]	; 419ca4 <cvGraphAddEdgeByPtr+0x344>
  419b24:	e08f2002 	add	r2, pc, r2
  419b28:	e2822d0f 	add	r2, r2, #960	; 0x3c0
  419b2c:	e59f3174 	ldr	r3, [pc, #372]	; 419ca8 <cvGraphAddEdgeByPtr+0x348>
  419b30:	e08f3003 	add	r3, pc, r3
  419b34:	fa006886 	blx	433d54 <__assert_func>
  419b38:	e5845010 	str	r5, [r4, #16]
  419b3c:	e5846014 	str	r6, [r4, #20]
  419b40:	e5953004 	ldr	r3, [r5, #4]
  419b44:	e5843008 	str	r3, [r4, #8]
  419b48:	e5963004 	ldr	r3, [r6, #4]
  419b4c:	e584300c 	str	r3, [r4, #12]
  419b50:	e5864004 	str	r4, [r6, #4]
  419b54:	e5854004 	str	r4, [r5, #4]
  419b58:	e5973040 	ldr	r3, [r7, #64]	; 0x40
  419b5c:	e593201c 	ldr	r2, [r3, #28]
  419b60:	e2422018 	sub	r2, r2, #24
  419b64:	e1a02122 	lsr	r2, r2, #2
  419b68:	e3590000 	cmp	r9, #0
  419b6c:	0a00001b 	beq	419be0 <cvGraphAddEdgeByPtr+0x280>
  419b70:	e3520000 	cmp	r2, #0
  419b74:	da000015 	ble	419bd0 <cvGraphAddEdgeByPtr+0x270>
  419b78:	e284c018 	add	ip, r4, #24
  419b7c:	e2890018 	add	r0, r9, #24
  419b80:	e3100003 	tst	r0, #3
  419b84:	1a000001 	bne	419b90 <cvGraphAddEdgeByPtr+0x230>
  419b88:	e31c0003 	tst	ip, #3
  419b8c:	0a00000c 	beq	419bc4 <cvGraphAddEdgeByPtr+0x264>
  419b90:	e59f0114 	ldr	r0, [pc, #276]	; 419cac <cvGraphAddEdgeByPtr+0x34c>
  419b94:	e08f0000 	add	r0, pc, r0
  419b98:	e59f1110 	ldr	r1, [pc, #272]	; 419cb0 <cvGraphAddEdgeByPtr+0x350>
  419b9c:	e59f2110 	ldr	r2, [pc, #272]	; 419cb4 <cvGraphAddEdgeByPtr+0x354>
  419ba0:	e08f2002 	add	r2, pc, r2
  419ba4:	e2822d0f 	add	r2, r2, #960	; 0x3c0
  419ba8:	e59f3108 	ldr	r3, [pc, #264]	; 419cb8 <cvGraphAddEdgeByPtr+0x358>
  419bac:	e08f3003 	add	r3, pc, r3
  419bb0:	fa006867 	blx	433d54 <__assert_func>
  419bb4:	e7901103 	ldr	r1, [r0, r3, lsl #2]
  419bb8:	e78c1103 	str	r1, [ip, r3, lsl #2]
  419bbc:	e2833001 	add	r3, r3, #1
  419bc0:	ea000000 	b	419bc8 <cvGraphAddEdgeByPtr+0x268>
  419bc4:	e3a03000 	mov	r3, #0
  419bc8:	e1530002 	cmp	r3, r2
  419bcc:	3afffff8 	bcc	419bb4 <cvGraphAddEdgeByPtr+0x254>
  419bd0:	e5993004 	ldr	r3, [r9, #4]
  419bd4:	e5843004 	str	r3, [r4, #4]
  419bd8:	e3a00001 	mov	r0, #1
  419bdc:	ea000019 	b	419c48 <cvGraphAddEdgeByPtr+0x2e8>
  419be0:	e3520000 	cmp	r2, #0
  419be4:	da000012 	ble	419c34 <cvGraphAddEdgeByPtr+0x2d4>
  419be8:	e2840018 	add	r0, r4, #24
  419bec:	e3100003 	tst	r0, #3
  419bf0:	0a00000c 	beq	419c28 <cvGraphAddEdgeByPtr+0x2c8>
  419bf4:	e59f00c0 	ldr	r0, [pc, #192]	; 419cbc <cvGraphAddEdgeByPtr+0x35c>
  419bf8:	e08f0000 	add	r0, pc, r0
  419bfc:	e59f10bc 	ldr	r1, [pc, #188]	; 419cc0 <cvGraphAddEdgeByPtr+0x360>
  419c00:	e59f20bc 	ldr	r2, [pc, #188]	; 419cc4 <cvGraphAddEdgeByPtr+0x364>
  419c04:	e08f2002 	add	r2, pc, r2
  419c08:	e2822d0f 	add	r2, r2, #960	; 0x3c0
  419c0c:	e59f30b4 	ldr	r3, [pc, #180]	; 419cc8 <cvGraphAddEdgeByPtr+0x368>
  419c10:	e08f3003 	add	r3, pc, r3
  419c14:	fa00684e 	blx	433d54 <__assert_func>
  419c18:	e3a01000 	mov	r1, #0
  419c1c:	e7801103 	str	r1, [r0, r3, lsl #2]
  419c20:	e2833001 	add	r3, r3, #1
  419c24:	ea000000 	b	419c2c <cvGraphAddEdgeByPtr+0x2cc>
  419c28:	e3a03000 	mov	r3, #0
  419c2c:	e1530002 	cmp	r3, r2
  419c30:	3afffff8 	bcc	419c18 <cvGraphAddEdgeByPtr+0x2b8>
  419c34:	e3a035fe 	mov	r3, #1065353216	; 0x3f800000
  419c38:	e5843004 	str	r3, [r4, #4]
  419c3c:	e3a00001 	mov	r0, #1
  419c40:	ea000000 	b	419c48 <cvGraphAddEdgeByPtr+0x2e8>
  419c44:	e3a00000 	mov	r0, #0
  419c48:	e3580000 	cmp	r8, #0
  419c4c:	15884000 	strne	r4, [r8]
  419c50:	e28dd014 	add	sp, sp, #20
  419c54:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  419c58:	e12fff1e 	bx	lr
  419c5c:	00000c23 	.word	0x00000c23
  419c60:	1fbe6ee8 	.word	0x1fbe6ee8
  419c64:	00026058 	.word	0x00026058
  419c68:	000259ac 	.word	0x000259ac
  419c6c:	00000c2c 	.word	0x00000c2c
  419c70:	1fbe6e5c 	.word	0x1fbe6e5c
  419c74:	000235b4 	.word	0x000235b4
  419c78:	00025920 	.word	0x00025920
  419c7c:	00000c35 	.word	0x00000c35
  419c80:	1fbe6e10 	.word	0x1fbe6e10
  419c84:	00025f98 	.word	0x00025f98
  419c88:	000258d4 	.word	0x000258d4
  419c8c:	00000c37 	.word	0x00000c37
  419c90:	1fbe6d88 	.word	0x1fbe6d88
  419c94:	000234e0 	.word	0x000234e0
  419c98:	0002584c 	.word	0x0002584c
  419c9c:	0002582c 	.word	0x0002582c
  419ca0:	00000c38 	.word	0x00000c38
  419ca4:	000252d4 	.word	0x000252d4
  419ca8:	00025efc 	.word	0x00025efc
  419cac:	000257b0 	.word	0x000257b0
  419cb0:	00000c44 	.word	0x00000c44
  419cb4:	00025258 	.word	0x00025258
  419cb8:	000236dc 	.word	0x000236dc
  419cbc:	0002574c 	.word	0x0002574c
  419cc0:	00000c4a 	.word	0x00000c4a
  419cc4:	000251f4 	.word	0x000251f4
  419cc8:	00025e30 	.word	0x00025e30

00419ccc <cvGraphAddEdge>:
  419ccc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  419cd0:	e24dd00c 	sub	sp, sp, #12
  419cd4:	e2505000 	subs	r5, r0, #0
  419cd8:	1a00000c 	bne	419d10 <cvGraphAddEdge+0x44>
  419cdc:	e59f30bc 	ldr	r3, [pc, #188]	; 419da0 <cvGraphAddEdge+0xd4>
  419ce0:	e58d3000 	str	r3, [sp]
  419ce4:	e3e0001a 	mvn	r0, #26
  419ce8:	e59f10b4 	ldr	r1, [pc, #180]	; 419da4 <cvGraphAddEdge+0xd8>
  419cec:	e08f1001 	add	r1, pc, r1
  419cf0:	e2811e3a 	add	r1, r1, #928	; 0x3a0
  419cf4:	e59f20ac 	ldr	r2, [pc, #172]	; 419da8 <cvGraphAddEdge+0xdc>
  419cf8:	e08f2002 	add	r2, pc, r2
  419cfc:	e59f30a8 	ldr	r3, [pc, #168]	; 419dac <cvGraphAddEdge+0xe0>
  419d00:	e08f3003 	add	r3, pc, r3
  419d04:	ebffe367 	bl	412aa8 <cvError>
  419d08:	e3e00000 	mvn	r0, #0
  419d0c:	ea000020 	b	419d94 <cvGraphAddEdge+0xc8>
  419d10:	e1a07002 	mov	r7, r2
  419d14:	e1a06003 	mov	r6, r3
  419d18:	e1a00005 	mov	r0, r5
  419d1c:	ebffe954 	bl	414274 <cvGetSeqElem>
  419d20:	e3500000 	cmp	r0, #0
  419d24:	0a000004 	beq	419d3c <cvGraphAddEdge+0x70>
  419d28:	e5903000 	ldr	r3, [r0]
  419d2c:	e3530000 	cmp	r3, #0
  419d30:	aa000003 	bge	419d44 <cvGraphAddEdge+0x78>
  419d34:	e3a04000 	mov	r4, #0
  419d38:	ea000002 	b	419d48 <cvGraphAddEdge+0x7c>
  419d3c:	e3a04000 	mov	r4, #0
  419d40:	ea000000 	b	419d48 <cvGraphAddEdge+0x7c>
  419d44:	e1a04000 	mov	r4, r0
  419d48:	e1a00005 	mov	r0, r5
  419d4c:	e1a01007 	mov	r1, r7
  419d50:	ebffe947 	bl	414274 <cvGetSeqElem>
  419d54:	e3500000 	cmp	r0, #0
  419d58:	0a000004 	beq	419d70 <cvGraphAddEdge+0xa4>
  419d5c:	e5903000 	ldr	r3, [r0]
  419d60:	e3530000 	cmp	r3, #0
  419d64:	aa000003 	bge	419d78 <cvGraphAddEdge+0xac>
  419d68:	e3a02000 	mov	r2, #0
  419d6c:	ea000002 	b	419d7c <cvGraphAddEdge+0xb0>
  419d70:	e3a02000 	mov	r2, #0
  419d74:	ea000000 	b	419d7c <cvGraphAddEdge+0xb0>
  419d78:	e1a02000 	mov	r2, r0
  419d7c:	e59d3020 	ldr	r3, [sp, #32]
  419d80:	e58d3000 	str	r3, [sp]
  419d84:	e1a00005 	mov	r0, r5
  419d88:	e1a01004 	mov	r1, r4
  419d8c:	e1a03006 	mov	r3, r6
  419d90:	ebfffef2 	bl	419960 <cvGraphAddEdgeByPtr>
  419d94:	e28dd00c 	add	sp, sp, #12
  419d98:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  419d9c:	e12fff1e 	bx	lr
  419da0:	00000c69 	.word	0x00000c69
  419da4:	1fbe6b80 	.word	0x1fbe6b80
  419da8:	00026718 	.word	0x00026718
  419dac:	00025644 	.word	0x00025644

00419db0 <cvGraphRemoveEdgeByPtr>:
  419db0:	e92d4070 	push	{r4, r5, r6, lr}
  419db4:	e24dd008 	sub	sp, sp, #8
  419db8:	e3510000 	cmp	r1, #0
  419dbc:	13500000 	cmpne	r0, #0
  419dc0:	0a000003 	beq	419dd4 <cvGraphRemoveEdgeByPtr+0x24>
  419dc4:	e1a0e000 	mov	lr, r0
  419dc8:	e1a0c001 	mov	ip, r1
  419dcc:	e3520000 	cmp	r2, #0
  419dd0:	1a00000b 	bne	419e04 <cvGraphRemoveEdgeByPtr+0x54>
  419dd4:	e59f3220 	ldr	r3, [pc, #544]	; 419ffc <cvGraphRemoveEdgeByPtr+0x24c>
  419dd8:	e58d3000 	str	r3, [sp]
  419ddc:	e3e0001a 	mvn	r0, #26
  419de0:	e59f1218 	ldr	r1, [pc, #536]	; 41a000 <cvGraphRemoveEdgeByPtr+0x250>
  419de4:	e08f1001 	add	r1, pc, r1
  419de8:	e2811e3b 	add	r1, r1, #944	; 0x3b0
  419dec:	e59f2210 	ldr	r2, [pc, #528]	; 41a004 <cvGraphRemoveEdgeByPtr+0x254>
  419df0:	e08f2002 	add	r2, pc, r2
  419df4:	e59f320c 	ldr	r3, [pc, #524]	; 41a008 <cvGraphRemoveEdgeByPtr+0x258>
  419df8:	e08f3003 	add	r3, pc, r3
  419dfc:	ebffe329 	bl	412aa8 <cvError>
  419e00:	ea00007a 	b	419ff0 <cvGraphRemoveEdgeByPtr+0x240>
  419e04:	e1510002 	cmp	r1, r2
  419e08:	0a000078 	beq	419ff0 <cvGraphRemoveEdgeByPtr+0x240>
  419e0c:	e5903000 	ldr	r3, [r0]
  419e10:	e3130a01 	tst	r3, #4096	; 0x1000
  419e14:	1a000007 	bne	419e38 <cvGraphRemoveEdgeByPtr+0x88>
  419e18:	e5911000 	ldr	r1, [r1]
  419e1c:	e3c1133f 	bic	r1, r1, #-67108864	; 0xfc000000
  419e20:	e5923000 	ldr	r3, [r2]
  419e24:	e3c3333f 	bic	r3, r3, #-67108864	; 0xfc000000
  419e28:	e1510003 	cmp	r1, r3
  419e2c:	c1a0300c 	movgt	r3, ip
  419e30:	c1a0c002 	movgt	ip, r2
  419e34:	c1a02003 	movgt	r2, r3
  419e38:	e59c3004 	ldr	r3, [ip, #4]
  419e3c:	e3a06000 	mov	r6, #0
  419e40:	e1a05006 	mov	r5, r6
  419e44:	ea000017 	b	419ea8 <cvGraphRemoveEdgeByPtr+0xf8>
  419e48:	e5930014 	ldr	r0, [r3, #20]
  419e4c:	e150000c 	cmp	r0, ip
  419e50:	13a01000 	movne	r1, #0
  419e54:	03a01001 	moveq	r1, #1
  419e58:	e3510001 	cmp	r1, #1
  419e5c:	0a00000b 	beq	419e90 <cvGraphRemoveEdgeByPtr+0xe0>
  419e60:	e5934010 	ldr	r4, [r3, #16]
  419e64:	e154000c 	cmp	r4, ip
  419e68:	0a000008 	beq	419e90 <cvGraphRemoveEdgeByPtr+0xe0>
  419e6c:	e59f0198 	ldr	r0, [pc, #408]	; 41a00c <cvGraphRemoveEdgeByPtr+0x25c>
  419e70:	e08f0000 	add	r0, pc, r0
  419e74:	e59f1194 	ldr	r1, [pc, #404]	; 41a010 <cvGraphRemoveEdgeByPtr+0x260>
  419e78:	e59f2194 	ldr	r2, [pc, #404]	; 41a014 <cvGraphRemoveEdgeByPtr+0x264>
  419e7c:	e08f2002 	add	r2, pc, r2
  419e80:	e2822e42 	add	r2, r2, #1056	; 0x420
  419e84:	e59f318c 	ldr	r3, [pc, #396]	; 41a018 <cvGraphRemoveEdgeByPtr+0x268>
  419e88:	e08f3003 	add	r3, pc, r3
  419e8c:	fa0067b0 	blx	433d54 <__assert_func>
  419e90:	e1520000 	cmp	r2, r0
  419e94:	0a000006 	beq	419eb4 <cvGraphRemoveEdgeByPtr+0x104>
  419e98:	e2810002 	add	r0, r1, #2
  419e9c:	e1a06003 	mov	r6, r3
  419ea0:	e7933100 	ldr	r3, [r3, r0, lsl #2]
  419ea4:	e1a05001 	mov	r5, r1
  419ea8:	e3530000 	cmp	r3, #0
  419eac:	1affffe5 	bne	419e48 <cvGraphRemoveEdgeByPtr+0x98>
  419eb0:	e1a01005 	mov	r1, r5
  419eb4:	e3530000 	cmp	r3, #0
  419eb8:	0a00004c 	beq	419ff0 <cvGraphRemoveEdgeByPtr+0x240>
  419ebc:	e2811002 	add	r1, r1, #2
  419ec0:	e7933101 	ldr	r3, [r3, r1, lsl #2]
  419ec4:	e3560000 	cmp	r6, #0
  419ec8:	12855002 	addne	r5, r5, #2
  419ecc:	17863105 	strne	r3, [r6, r5, lsl #2]
  419ed0:	058c3004 	streq	r3, [ip, #4]
  419ed4:	e5923004 	ldr	r3, [r2, #4]
  419ed8:	e3a05000 	mov	r5, #0
  419edc:	e1a04005 	mov	r4, r5
  419ee0:	ea000018 	b	419f48 <cvGraphRemoveEdgeByPtr+0x198>
  419ee4:	e5931014 	ldr	r1, [r3, #20]
  419ee8:	e1510002 	cmp	r1, r2
  419eec:	13a01000 	movne	r1, #0
  419ef0:	03a01001 	moveq	r1, #1
  419ef4:	e3510001 	cmp	r1, #1
  419ef8:	0a00000b 	beq	419f2c <cvGraphRemoveEdgeByPtr+0x17c>
  419efc:	e5930010 	ldr	r0, [r3, #16]
  419f00:	e1500002 	cmp	r0, r2
  419f04:	0a000008 	beq	419f2c <cvGraphRemoveEdgeByPtr+0x17c>
  419f08:	e59f010c 	ldr	r0, [pc, #268]	; 41a01c <cvGraphRemoveEdgeByPtr+0x26c>
  419f0c:	e08f0000 	add	r0, pc, r0
  419f10:	e59f1108 	ldr	r1, [pc, #264]	; 41a020 <cvGraphRemoveEdgeByPtr+0x270>
  419f14:	e59f2108 	ldr	r2, [pc, #264]	; 41a024 <cvGraphRemoveEdgeByPtr+0x274>
  419f18:	e08f2002 	add	r2, pc, r2
  419f1c:	e2822e42 	add	r2, r2, #1056	; 0x420
  419f20:	e59f3100 	ldr	r3, [pc, #256]	; 41a028 <cvGraphRemoveEdgeByPtr+0x278>
  419f24:	e08f3003 	add	r3, pc, r3
  419f28:	fa006789 	blx	433d54 <__assert_func>
  419f2c:	e5930010 	ldr	r0, [r3, #16]
  419f30:	e150000c 	cmp	r0, ip
  419f34:	0a000006 	beq	419f54 <cvGraphRemoveEdgeByPtr+0x1a4>
  419f38:	e2810002 	add	r0, r1, #2
  419f3c:	e1a05003 	mov	r5, r3
  419f40:	e7933100 	ldr	r3, [r3, r0, lsl #2]
  419f44:	e1a04001 	mov	r4, r1
  419f48:	e3530000 	cmp	r3, #0
  419f4c:	1affffe4 	bne	419ee4 <cvGraphRemoveEdgeByPtr+0x134>
  419f50:	e1a01004 	mov	r1, r4
  419f54:	e3530000 	cmp	r3, #0
  419f58:	1a000008 	bne	419f80 <cvGraphRemoveEdgeByPtr+0x1d0>
  419f5c:	e59f00c8 	ldr	r0, [pc, #200]	; 41a02c <cvGraphRemoveEdgeByPtr+0x27c>
  419f60:	e08f0000 	add	r0, pc, r0
  419f64:	e59f10c4 	ldr	r1, [pc, #196]	; 41a030 <cvGraphRemoveEdgeByPtr+0x280>
  419f68:	e59f20c4 	ldr	r2, [pc, #196]	; 41a034 <cvGraphRemoveEdgeByPtr+0x284>
  419f6c:	e08f2002 	add	r2, pc, r2
  419f70:	e2822e42 	add	r2, r2, #1056	; 0x420
  419f74:	e59f30bc 	ldr	r3, [pc, #188]	; 41a038 <cvGraphRemoveEdgeByPtr+0x288>
  419f78:	e08f3003 	add	r3, pc, r3
  419f7c:	fa006774 	blx	433d54 <__assert_func>
  419f80:	e2811002 	add	r1, r1, #2
  419f84:	e7931101 	ldr	r1, [r3, r1, lsl #2]
  419f88:	e3550000 	cmp	r5, #0
  419f8c:	12844002 	addne	r4, r4, #2
  419f90:	17851104 	strne	r1, [r5, r4, lsl #2]
  419f94:	05821004 	streq	r1, [r2, #4]
  419f98:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
  419f9c:	e5932000 	ldr	r2, [r3]
  419fa0:	e3520000 	cmp	r2, #0
  419fa4:	aa000008 	bge	419fcc <cvGraphRemoveEdgeByPtr+0x21c>
  419fa8:	e59f008c 	ldr	r0, [pc, #140]	; 41a03c <cvGraphRemoveEdgeByPtr+0x28c>
  419fac:	e08f0000 	add	r0, pc, r0
  419fb0:	e59f1088 	ldr	r1, [pc, #136]	; 41a040 <cvGraphRemoveEdgeByPtr+0x290>
  419fb4:	e59f2088 	ldr	r2, [pc, #136]	; 41a044 <cvGraphRemoveEdgeByPtr+0x294>
  419fb8:	e08f2002 	add	r2, pc, r2
  419fbc:	e2822c03 	add	r2, r2, #768	; 0x300
  419fc0:	e59f3080 	ldr	r3, [pc, #128]	; 41a048 <cvGraphRemoveEdgeByPtr+0x298>
  419fc4:	e08f3003 	add	r3, pc, r3
  419fc8:	fa006761 	blx	433d54 <__assert_func>
  419fcc:	e5910038 	ldr	r0, [r1, #56]	; 0x38
  419fd0:	e5830004 	str	r0, [r3, #4]
  419fd4:	e3c2233f 	bic	r2, r2, #-67108864	; 0xfc000000
  419fd8:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
  419fdc:	e5832000 	str	r2, [r3]
  419fe0:	e5813038 	str	r3, [r1, #56]	; 0x38
  419fe4:	e591303c 	ldr	r3, [r1, #60]	; 0x3c
  419fe8:	e2433001 	sub	r3, r3, #1
  419fec:	e581303c 	str	r3, [r1, #60]	; 0x3c
  419ff0:	e28dd008 	add	sp, sp, #8
  419ff4:	e8bd4070 	pop	{r4, r5, r6, lr}
  419ff8:	e12fff1e 	bx	lr
  419ffc:	00000c82 	.word	0x00000c82
  41a000:	1fbe6a88 	.word	0x1fbe6a88
  41a004:	00026620 	.word	0x00026620
  41a008:	0002554c 	.word	0x0002554c
  41a00c:	000254d4 	.word	0x000254d4
  41a010:	00000c92 	.word	0x00000c92
  41a014:	00024f7c 	.word	0x00024f7c
  41a018:	00025b38 	.word	0x00025b38
  41a01c:	00025438 	.word	0x00025438
  41a020:	00000ca4 	.word	0x00000ca4
  41a024:	00024ee0 	.word	0x00024ee0
  41a028:	00025b4c 	.word	0x00025b4c
  41a02c:	000253e4 	.word	0x000253e4
  41a030:	00000ca9 	.word	0x00000ca9
  41a034:	00024e8c 	.word	0x00024e8c
  41a038:	00025b1c 	.word	0x00025b1c
  41a03c:	00023090 	.word	0x00023090
  41a040:	00000447 	.word	0x00000447
  41a044:	00024e40 	.word	0x00024e40
  41a048:	00023090 	.word	0x00023090

0041a04c <cvGraphRemoveVtxByPtr>:
  41a04c:	e92d4070 	push	{r4, r5, r6, lr}
  41a050:	e24dd008 	sub	sp, sp, #8
  41a054:	e3510000 	cmp	r1, #0
  41a058:	13500000 	cmpne	r0, #0
  41a05c:	1a00000c 	bne	41a094 <cvGraphRemoveVtxByPtr+0x48>
  41a060:	e59f3108 	ldr	r3, [pc, #264]	; 41a170 <cvGraphRemoveVtxByPtr+0x124>
  41a064:	e58d3000 	str	r3, [sp]
  41a068:	e3e0001a 	mvn	r0, #26
  41a06c:	e59f1100 	ldr	r1, [pc, #256]	; 41a174 <cvGraphRemoveVtxByPtr+0x128>
  41a070:	e08f1001 	add	r1, pc, r1
  41a074:	e2811ff2 	add	r1, r1, #968	; 0x3c8
  41a078:	e59f20f8 	ldr	r2, [pc, #248]	; 41a178 <cvGraphRemoveVtxByPtr+0x12c>
  41a07c:	e08f2002 	add	r2, pc, r2
  41a080:	e59f30f4 	ldr	r3, [pc, #244]	; 41a17c <cvGraphRemoveVtxByPtr+0x130>
  41a084:	e08f3003 	add	r3, pc, r3
  41a088:	ebffe286 	bl	412aa8 <cvError>
  41a08c:	e3e00000 	mvn	r0, #0
  41a090:	ea000033 	b	41a164 <cvGraphRemoveVtxByPtr+0x118>
  41a094:	e1a04000 	mov	r4, r0
  41a098:	e1a05001 	mov	r5, r1
  41a09c:	e5913000 	ldr	r3, [r1]
  41a0a0:	e3530000 	cmp	r3, #0
  41a0a4:	aa00000c 	bge	41a0dc <cvGraphRemoveVtxByPtr+0x90>
  41a0a8:	e59f30d0 	ldr	r3, [pc, #208]	; 41a180 <cvGraphRemoveVtxByPtr+0x134>
  41a0ac:	e58d3000 	str	r3, [sp]
  41a0b0:	e3e00004 	mvn	r0, #4
  41a0b4:	e59f10c8 	ldr	r1, [pc, #200]	; 41a184 <cvGraphRemoveVtxByPtr+0x138>
  41a0b8:	e08f1001 	add	r1, pc, r1
  41a0bc:	e2811ff2 	add	r1, r1, #968	; 0x3c8
  41a0c0:	e59f20c0 	ldr	r2, [pc, #192]	; 41a188 <cvGraphRemoveVtxByPtr+0x13c>
  41a0c4:	e08f2002 	add	r2, pc, r2
  41a0c8:	e59f30bc 	ldr	r3, [pc, #188]	; 41a18c <cvGraphRemoveVtxByPtr+0x140>
  41a0cc:	e08f3003 	add	r3, pc, r3
  41a0d0:	ebffe274 	bl	412aa8 <cvError>
  41a0d4:	e3e00000 	mvn	r0, #0
  41a0d8:	ea000021 	b	41a164 <cvGraphRemoveVtxByPtr+0x118>
  41a0dc:	e5903040 	ldr	r3, [r0, #64]	; 0x40
  41a0e0:	e593603c 	ldr	r6, [r3, #60]	; 0x3c
  41a0e4:	e5953004 	ldr	r3, [r5, #4]
  41a0e8:	e3530000 	cmp	r3, #0
  41a0ec:	0a000004 	beq	41a104 <cvGraphRemoveVtxByPtr+0xb8>
  41a0f0:	e1a00004 	mov	r0, r4
  41a0f4:	e5931010 	ldr	r1, [r3, #16]
  41a0f8:	e5932014 	ldr	r2, [r3, #20]
  41a0fc:	ebffff2b 	bl	419db0 <cvGraphRemoveEdgeByPtr>
  41a100:	eafffff7 	b	41a0e4 <cvGraphRemoveVtxByPtr+0x98>
  41a104:	e5943040 	ldr	r3, [r4, #64]	; 0x40
  41a108:	e593003c 	ldr	r0, [r3, #60]	; 0x3c
  41a10c:	e0600006 	rsb	r0, r0, r6
  41a110:	e5953000 	ldr	r3, [r5]
  41a114:	e3530000 	cmp	r3, #0
  41a118:	aa000008 	bge	41a140 <cvGraphRemoveVtxByPtr+0xf4>
  41a11c:	e59f006c 	ldr	r0, [pc, #108]	; 41a190 <cvGraphRemoveVtxByPtr+0x144>
  41a120:	e08f0000 	add	r0, pc, r0
  41a124:	e59f1068 	ldr	r1, [pc, #104]	; 41a194 <cvGraphRemoveVtxByPtr+0x148>
  41a128:	e59f2068 	ldr	r2, [pc, #104]	; 41a198 <cvGraphRemoveVtxByPtr+0x14c>
  41a12c:	e08f2002 	add	r2, pc, r2
  41a130:	e2822c03 	add	r2, r2, #768	; 0x300
  41a134:	e59f3060 	ldr	r3, [pc, #96]	; 41a19c <cvGraphRemoveVtxByPtr+0x150>
  41a138:	e08f3003 	add	r3, pc, r3
  41a13c:	fa006704 	blx	433d54 <__assert_func>
  41a140:	e5942038 	ldr	r2, [r4, #56]	; 0x38
  41a144:	e5852004 	str	r2, [r5, #4]
  41a148:	e3c3333f 	bic	r3, r3, #-67108864	; 0xfc000000
  41a14c:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
  41a150:	e5853000 	str	r3, [r5]
  41a154:	e5845038 	str	r5, [r4, #56]	; 0x38
  41a158:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
  41a15c:	e2433001 	sub	r3, r3, #1
  41a160:	e584303c 	str	r3, [r4, #60]	; 0x3c
  41a164:	e28dd008 	add	sp, sp, #8
  41a168:	e8bd4070 	pop	{r4, r5, r6, lr}
  41a16c:	e12fff1e 	bx	lr
  41a170:	00000b93 	.word	0x00000b93
  41a174:	1fbe67fc 	.word	0x1fbe67fc
  41a178:	00026394 	.word	0x00026394
  41a17c:	000252c0 	.word	0x000252c0
  41a180:	00000b96 	.word	0x00000b96
  41a184:	1fbe67b4 	.word	0x1fbe67b4
  41a188:	000259dc 	.word	0x000259dc
  41a18c:	00025278 	.word	0x00025278
  41a190:	00022f1c 	.word	0x00022f1c
  41a194:	00000447 	.word	0x00000447
  41a198:	00024ccc 	.word	0x00024ccc
  41a19c:	00022f1c 	.word	0x00022f1c

0041a1a0 <cvGraphRemoveVtx>:
  41a1a0:	e92d4070 	push	{r4, r5, r6, lr}
  41a1a4:	e24dd008 	sub	sp, sp, #8
  41a1a8:	e2506000 	subs	r6, r0, #0
  41a1ac:	1a00000c 	bne	41a1e4 <cvGraphRemoveVtx+0x44>
  41a1b0:	e59f3130 	ldr	r3, [pc, #304]	; 41a2e8 <cvGraphRemoveVtx+0x148>
  41a1b4:	e58d3000 	str	r3, [sp]
  41a1b8:	e3e0001a 	mvn	r0, #26
  41a1bc:	e59f1128 	ldr	r1, [pc, #296]	; 41a2ec <cvGraphRemoveVtx+0x14c>
  41a1c0:	e08f1001 	add	r1, pc, r1
  41a1c4:	e2811e3e 	add	r1, r1, #992	; 0x3e0
  41a1c8:	e59f2120 	ldr	r2, [pc, #288]	; 41a2f0 <cvGraphRemoveVtx+0x150>
  41a1cc:	e08f2002 	add	r2, pc, r2
  41a1d0:	e59f311c 	ldr	r3, [pc, #284]	; 41a2f4 <cvGraphRemoveVtx+0x154>
  41a1d4:	e08f3003 	add	r3, pc, r3
  41a1d8:	ebffe232 	bl	412aa8 <cvError>
  41a1dc:	e3e00000 	mvn	r0, #0
  41a1e0:	ea00003d 	b	41a2dc <cvGraphRemoveVtx+0x13c>
  41a1e4:	e1a00006 	mov	r0, r6
  41a1e8:	ebffe821 	bl	414274 <cvGetSeqElem>
  41a1ec:	e3500000 	cmp	r0, #0
  41a1f0:	0a000004 	beq	41a208 <cvGraphRemoveVtx+0x68>
  41a1f4:	e5903000 	ldr	r3, [r0]
  41a1f8:	e3530000 	cmp	r3, #0
  41a1fc:	aa000003 	bge	41a210 <cvGraphRemoveVtx+0x70>
  41a200:	e3a05000 	mov	r5, #0
  41a204:	ea000002 	b	41a214 <cvGraphRemoveVtx+0x74>
  41a208:	e3a05000 	mov	r5, #0
  41a20c:	ea000000 	b	41a214 <cvGraphRemoveVtx+0x74>
  41a210:	e1a05000 	mov	r5, r0
  41a214:	e3550000 	cmp	r5, #0
  41a218:	1a00000c 	bne	41a250 <cvGraphRemoveVtx+0xb0>
  41a21c:	e59f30d4 	ldr	r3, [pc, #212]	; 41a2f8 <cvGraphRemoveVtx+0x158>
  41a220:	e58d3000 	str	r3, [sp]
  41a224:	e3e00004 	mvn	r0, #4
  41a228:	e59f10cc 	ldr	r1, [pc, #204]	; 41a2fc <cvGraphRemoveVtx+0x15c>
  41a22c:	e08f1001 	add	r1, pc, r1
  41a230:	e2811e3e 	add	r1, r1, #992	; 0x3e0
  41a234:	e59f20c4 	ldr	r2, [pc, #196]	; 41a300 <cvGraphRemoveVtx+0x160>
  41a238:	e08f2002 	add	r2, pc, r2
  41a23c:	e59f30c0 	ldr	r3, [pc, #192]	; 41a304 <cvGraphRemoveVtx+0x164>
  41a240:	e08f3003 	add	r3, pc, r3
  41a244:	ebffe217 	bl	412aa8 <cvError>
  41a248:	e3e00000 	mvn	r0, #0
  41a24c:	ea000022 	b	41a2dc <cvGraphRemoveVtx+0x13c>
  41a250:	e5963040 	ldr	r3, [r6, #64]	; 0x40
  41a254:	e593403c 	ldr	r4, [r3, #60]	; 0x3c
  41a258:	e5953004 	ldr	r3, [r5, #4]
  41a25c:	e2844001 	add	r4, r4, #1
  41a260:	e3530000 	cmp	r3, #0
  41a264:	0a000004 	beq	41a27c <cvGraphRemoveVtx+0xdc>
  41a268:	e1a00006 	mov	r0, r6
  41a26c:	e5931010 	ldr	r1, [r3, #16]
  41a270:	e5932014 	ldr	r2, [r3, #20]
  41a274:	ebfffecd 	bl	419db0 <cvGraphRemoveEdgeByPtr>
  41a278:	eafffff6 	b	41a258 <cvGraphRemoveVtx+0xb8>
  41a27c:	e5963040 	ldr	r3, [r6, #64]	; 0x40
  41a280:	e593003c 	ldr	r0, [r3, #60]	; 0x3c
  41a284:	e0600004 	rsb	r0, r0, r4
  41a288:	e5953000 	ldr	r3, [r5]
  41a28c:	e3530000 	cmp	r3, #0
  41a290:	aa000008 	bge	41a2b8 <cvGraphRemoveVtx+0x118>
  41a294:	e59f006c 	ldr	r0, [pc, #108]	; 41a308 <cvGraphRemoveVtx+0x168>
  41a298:	e08f0000 	add	r0, pc, r0
  41a29c:	e59f1068 	ldr	r1, [pc, #104]	; 41a30c <cvGraphRemoveVtx+0x16c>
  41a2a0:	e59f2068 	ldr	r2, [pc, #104]	; 41a310 <cvGraphRemoveVtx+0x170>
  41a2a4:	e08f2002 	add	r2, pc, r2
  41a2a8:	e2822c03 	add	r2, r2, #768	; 0x300
  41a2ac:	e59f3060 	ldr	r3, [pc, #96]	; 41a314 <cvGraphRemoveVtx+0x174>
  41a2b0:	e08f3003 	add	r3, pc, r3
  41a2b4:	fa0066a6 	blx	433d54 <__assert_func>
  41a2b8:	e5962038 	ldr	r2, [r6, #56]	; 0x38
  41a2bc:	e5852004 	str	r2, [r5, #4]
  41a2c0:	e3c3333f 	bic	r3, r3, #-67108864	; 0xfc000000
  41a2c4:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
  41a2c8:	e5853000 	str	r3, [r5]
  41a2cc:	e5865038 	str	r5, [r6, #56]	; 0x38
  41a2d0:	e596303c 	ldr	r3, [r6, #60]	; 0x3c
  41a2d4:	e2433001 	sub	r3, r3, #1
  41a2d8:	e586303c 	str	r3, [r6, #60]	; 0x3c
  41a2dc:	e28dd008 	add	sp, sp, #8
  41a2e0:	e8bd4070 	pop	{r4, r5, r6, lr}
  41a2e4:	e12fff1e 	bx	lr
  41a2e8:	00000bb5 	.word	0x00000bb5
  41a2ec:	1fbe66ac 	.word	0x1fbe66ac
  41a2f0:	00026244 	.word	0x00026244
  41a2f4:	00025170 	.word	0x00025170
  41a2f8:	00000bb9 	.word	0x00000bb9
  41a2fc:	1fbe6640 	.word	0x1fbe6640
  41a300:	00025890 	.word	0x00025890
  41a304:	00025104 	.word	0x00025104
  41a308:	00022da4 	.word	0x00022da4
  41a30c:	00000447 	.word	0x00000447
  41a310:	00024b54 	.word	0x00024b54
  41a314:	00022da4 	.word	0x00022da4

0041a318 <cvGraphRemoveEdge>:
  41a318:	e92d4070 	push	{r4, r5, r6, lr}
  41a31c:	e24dd008 	sub	sp, sp, #8
  41a320:	e2505000 	subs	r5, r0, #0
  41a324:	1a00000b 	bne	41a358 <cvGraphRemoveEdge+0x40>
  41a328:	e59f30a8 	ldr	r3, [pc, #168]	; 41a3d8 <cvGraphRemoveEdge+0xc0>
  41a32c:	e58d3000 	str	r3, [sp]
  41a330:	e3e0001a 	mvn	r0, #26
  41a334:	e59f10a0 	ldr	r1, [pc, #160]	; 41a3dc <cvGraphRemoveEdge+0xc4>
  41a338:	e08f1001 	add	r1, pc, r1
  41a33c:	e2811ffd 	add	r1, r1, #1012	; 0x3f4
  41a340:	e59f2098 	ldr	r2, [pc, #152]	; 41a3e0 <cvGraphRemoveEdge+0xc8>
  41a344:	e08f2002 	add	r2, pc, r2
  41a348:	e59f3094 	ldr	r3, [pc, #148]	; 41a3e4 <cvGraphRemoveEdge+0xcc>
  41a34c:	e08f3003 	add	r3, pc, r3
  41a350:	ebffe1d4 	bl	412aa8 <cvError>
  41a354:	ea00001c 	b	41a3cc <cvGraphRemoveEdge+0xb4>
  41a358:	e1a06002 	mov	r6, r2
  41a35c:	e1a00005 	mov	r0, r5
  41a360:	ebffe7c3 	bl	414274 <cvGetSeqElem>
  41a364:	e3500000 	cmp	r0, #0
  41a368:	0a000004 	beq	41a380 <cvGraphRemoveEdge+0x68>
  41a36c:	e5903000 	ldr	r3, [r0]
  41a370:	e3530000 	cmp	r3, #0
  41a374:	aa000003 	bge	41a388 <cvGraphRemoveEdge+0x70>
  41a378:	e3a04000 	mov	r4, #0
  41a37c:	ea000002 	b	41a38c <cvGraphRemoveEdge+0x74>
  41a380:	e3a04000 	mov	r4, #0
  41a384:	ea000000 	b	41a38c <cvGraphRemoveEdge+0x74>
  41a388:	e1a04000 	mov	r4, r0
  41a38c:	e1a00005 	mov	r0, r5
  41a390:	e1a01006 	mov	r1, r6
  41a394:	ebffe7b6 	bl	414274 <cvGetSeqElem>
  41a398:	e3500000 	cmp	r0, #0
  41a39c:	0a000004 	beq	41a3b4 <cvGraphRemoveEdge+0x9c>
  41a3a0:	e5903000 	ldr	r3, [r0]
  41a3a4:	e3530000 	cmp	r3, #0
  41a3a8:	aa000003 	bge	41a3bc <cvGraphRemoveEdge+0xa4>
  41a3ac:	e3a02000 	mov	r2, #0
  41a3b0:	ea000002 	b	41a3c0 <cvGraphRemoveEdge+0xa8>
  41a3b4:	e3a02000 	mov	r2, #0
  41a3b8:	ea000000 	b	41a3c0 <cvGraphRemoveEdge+0xa8>
  41a3bc:	e1a02000 	mov	r2, r0
  41a3c0:	e1a00005 	mov	r0, r5
  41a3c4:	e1a01004 	mov	r1, r4
  41a3c8:	ebfffe78 	bl	419db0 <cvGraphRemoveEdgeByPtr>
  41a3cc:	e28dd008 	add	sp, sp, #8
  41a3d0:	e8bd4070 	pop	{r4, r5, r6, lr}
  41a3d4:	e12fff1e 	bx	lr
  41a3d8:	00000cc3 	.word	0x00000cc3
  41a3dc:	1fbe6534 	.word	0x1fbe6534
  41a3e0:	000260cc 	.word	0x000260cc
  41a3e4:	00024ff8 	.word	0x00024ff8

0041a3e8 <cvGraphVtxDegreeByPtr>:
  41a3e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41a3ec:	e24dd00c 	sub	sp, sp, #12
  41a3f0:	e3510000 	cmp	r1, #0
  41a3f4:	13500000 	cmpne	r0, #0
  41a3f8:	1a00000d 	bne	41a434 <cvGraphVtxDegreeByPtr+0x4c>
  41a3fc:	e59f30a8 	ldr	r3, [pc, #168]	; 41a4ac <cvGraphVtxDegreeByPtr+0xc4>
  41a400:	e58d3000 	str	r3, [sp]
  41a404:	e3e0001a 	mvn	r0, #26
  41a408:	e59f10a0 	ldr	r1, [pc, #160]	; 41a4b0 <cvGraphVtxDegreeByPtr+0xc8>
  41a40c:	e08f1001 	add	r1, pc, r1
  41a410:	e2811b01 	add	r1, r1, #1024	; 0x400
  41a414:	e2811008 	add	r1, r1, #8
  41a418:	e59f2094 	ldr	r2, [pc, #148]	; 41a4b4 <cvGraphVtxDegreeByPtr+0xcc>
  41a41c:	e08f2002 	add	r2, pc, r2
  41a420:	e59f3090 	ldr	r3, [pc, #144]	; 41a4b8 <cvGraphVtxDegreeByPtr+0xd0>
  41a424:	e08f3003 	add	r3, pc, r3
  41a428:	ebffe19e 	bl	412aa8 <cvError>
  41a42c:	e3e00000 	mvn	r0, #0
  41a430:	ea00001a 	b	41a4a0 <cvGraphVtxDegreeByPtr+0xb8>
  41a434:	e1a0c001 	mov	ip, r1
  41a438:	e5913004 	ldr	r3, [r1, #4]
  41a43c:	e3a00000 	mov	r0, #0
  41a440:	ea000014 	b	41a498 <cvGraphVtxDegreeByPtr+0xb0>
  41a444:	e2800001 	add	r0, r0, #1
  41a448:	e5932010 	ldr	r2, [r3, #16]
  41a44c:	e152000c 	cmp	r2, ip
  41a450:	0a00000b 	beq	41a484 <cvGraphVtxDegreeByPtr+0x9c>
  41a454:	e5932014 	ldr	r2, [r3, #20]
  41a458:	e152000c 	cmp	r2, ip
  41a45c:	0a000008 	beq	41a484 <cvGraphVtxDegreeByPtr+0x9c>
  41a460:	e59f0054 	ldr	r0, [pc, #84]	; 41a4bc <cvGraphVtxDegreeByPtr+0xd4>
  41a464:	e08f0000 	add	r0, pc, r0
  41a468:	e59f1050 	ldr	r1, [pc, #80]	; 41a4c0 <cvGraphVtxDegreeByPtr+0xd8>
  41a46c:	e59f2050 	ldr	r2, [pc, #80]	; 41a4c4 <cvGraphVtxDegreeByPtr+0xdc>
  41a470:	e08f2002 	add	r2, pc, r2
  41a474:	e2822e46 	add	r2, r2, #1120	; 0x460
  41a478:	e59f3048 	ldr	r3, [pc, #72]	; 41a4c8 <cvGraphVtxDegreeByPtr+0xe0>
  41a47c:	e08f3003 	add	r3, pc, r3
  41a480:	fa006633 	blx	433d54 <__assert_func>
  41a484:	e5932014 	ldr	r2, [r3, #20]
  41a488:	e152000c 	cmp	r2, ip
  41a48c:	03a0200c 	moveq	r2, #12
  41a490:	13a02008 	movne	r2, #8
  41a494:	e7923003 	ldr	r3, [r2, r3]
  41a498:	e3530000 	cmp	r3, #0
  41a49c:	1affffe8 	bne	41a444 <cvGraphVtxDegreeByPtr+0x5c>
  41a4a0:	e28dd00c 	add	sp, sp, #12
  41a4a4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41a4a8:	e12fff1e 	bx	lr
  41a4ac:	00000cda 	.word	0x00000cda
  41a4b0:	1fbe6460 	.word	0x1fbe6460
  41a4b4:	00025ff4 	.word	0x00025ff4
  41a4b8:	00024f20 	.word	0x00024f20
  41a4bc:	00024ee0 	.word	0x00024ee0
  41a4c0:	00000cdf 	.word	0x00000cdf
  41a4c4:	00024988 	.word	0x00024988
  41a4c8:	00025664 	.word	0x00025664

0041a4cc <cvGraphVtxDegree>:
  41a4cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41a4d0:	e24dd00c 	sub	sp, sp, #12
  41a4d4:	e3500000 	cmp	r0, #0
  41a4d8:	1a00000c 	bne	41a510 <cvGraphVtxDegree+0x44>
  41a4dc:	e59f3108 	ldr	r3, [pc, #264]	; 41a5ec <cvGraphVtxDegree+0x120>
  41a4e0:	e58d3000 	str	r3, [sp]
  41a4e4:	e3e0001a 	mvn	r0, #26
  41a4e8:	e59f1100 	ldr	r1, [pc, #256]	; 41a5f0 <cvGraphVtxDegree+0x124>
  41a4ec:	e08f1001 	add	r1, pc, r1
  41a4f0:	e2811e42 	add	r1, r1, #1056	; 0x420
  41a4f4:	e59f20f8 	ldr	r2, [pc, #248]	; 41a5f4 <cvGraphVtxDegree+0x128>
  41a4f8:	e08f2002 	add	r2, pc, r2
  41a4fc:	e59f30f4 	ldr	r3, [pc, #244]	; 41a5f8 <cvGraphVtxDegree+0x12c>
  41a500:	e08f3003 	add	r3, pc, r3
  41a504:	ebffe167 	bl	412aa8 <cvError>
  41a508:	e3e00000 	mvn	r0, #0
  41a50c:	ea000033 	b	41a5e0 <cvGraphVtxDegree+0x114>
  41a510:	ebffe757 	bl	414274 <cvGetSeqElem>
  41a514:	e3500000 	cmp	r0, #0
  41a518:	0a000004 	beq	41a530 <cvGraphVtxDegree+0x64>
  41a51c:	e5903000 	ldr	r3, [r0]
  41a520:	e3530000 	cmp	r3, #0
  41a524:	aa000003 	bge	41a538 <cvGraphVtxDegree+0x6c>
  41a528:	e3a01000 	mov	r1, #0
  41a52c:	ea000002 	b	41a53c <cvGraphVtxDegree+0x70>
  41a530:	e3a01000 	mov	r1, #0
  41a534:	ea000000 	b	41a53c <cvGraphVtxDegree+0x70>
  41a538:	e1a01000 	mov	r1, r0
  41a53c:	e3510000 	cmp	r1, #0
  41a540:	1a00000c 	bne	41a578 <cvGraphVtxDegree+0xac>
  41a544:	e59f30b0 	ldr	r3, [pc, #176]	; 41a5fc <cvGraphVtxDegree+0x130>
  41a548:	e58d3000 	str	r3, [sp]
  41a54c:	e3e000cb 	mvn	r0, #203	; 0xcb
  41a550:	e59f10a8 	ldr	r1, [pc, #168]	; 41a600 <cvGraphVtxDegree+0x134>
  41a554:	e08f1001 	add	r1, pc, r1
  41a558:	e2811e42 	add	r1, r1, #1056	; 0x420
  41a55c:	e59f20a0 	ldr	r2, [pc, #160]	; 41a604 <cvGraphVtxDegree+0x138>
  41a560:	e08f2002 	add	r2, pc, r2
  41a564:	e59f309c 	ldr	r3, [pc, #156]	; 41a608 <cvGraphVtxDegree+0x13c>
  41a568:	e08f3003 	add	r3, pc, r3
  41a56c:	ebffe14d 	bl	412aa8 <cvError>
  41a570:	e3e00000 	mvn	r0, #0
  41a574:	ea000019 	b	41a5e0 <cvGraphVtxDegree+0x114>
  41a578:	e5913004 	ldr	r3, [r1, #4]
  41a57c:	e3a00000 	mov	r0, #0
  41a580:	ea000014 	b	41a5d8 <cvGraphVtxDegree+0x10c>
  41a584:	e2800001 	add	r0, r0, #1
  41a588:	e5932010 	ldr	r2, [r3, #16]
  41a58c:	e1520001 	cmp	r2, r1
  41a590:	0a00000b 	beq	41a5c4 <cvGraphVtxDegree+0xf8>
  41a594:	e5932014 	ldr	r2, [r3, #20]
  41a598:	e1520001 	cmp	r2, r1
  41a59c:	0a000008 	beq	41a5c4 <cvGraphVtxDegree+0xf8>
  41a5a0:	e59f0064 	ldr	r0, [pc, #100]	; 41a60c <cvGraphVtxDegree+0x140>
  41a5a4:	e08f0000 	add	r0, pc, r0
  41a5a8:	e59f1060 	ldr	r1, [pc, #96]	; 41a610 <cvGraphVtxDegree+0x144>
  41a5ac:	e59f2060 	ldr	r2, [pc, #96]	; 41a614 <cvGraphVtxDegree+0x148>
  41a5b0:	e08f2002 	add	r2, pc, r2
  41a5b4:	e2822e4a 	add	r2, r2, #1184	; 0x4a0
  41a5b8:	e59f3058 	ldr	r3, [pc, #88]	; 41a618 <cvGraphVtxDegree+0x14c>
  41a5bc:	e08f3003 	add	r3, pc, r3
  41a5c0:	fa0065e3 	blx	433d54 <__assert_func>
  41a5c4:	e5932014 	ldr	r2, [r3, #20]
  41a5c8:	e1520001 	cmp	r2, r1
  41a5cc:	03a0200c 	moveq	r2, #12
  41a5d0:	13a02008 	movne	r2, #8
  41a5d4:	e7923003 	ldr	r3, [r2, r3]
  41a5d8:	e3530000 	cmp	r3, #0
  41a5dc:	1affffe8 	bne	41a584 <cvGraphVtxDegree+0xb8>
  41a5e0:	e28dd00c 	add	sp, sp, #12
  41a5e4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41a5e8:	e12fff1e 	bx	lr
  41a5ec:	00000cf5 	.word	0x00000cf5
  41a5f0:	1fbe6380 	.word	0x1fbe6380
  41a5f4:	00025f18 	.word	0x00025f18
  41a5f8:	00024e44 	.word	0x00024e44
  41a5fc:	00000cf9 	.word	0x00000cf9
  41a600:	1fbe6318 	.word	0x1fbe6318
  41a604:	00025eb0 	.word	0x00025eb0
  41a608:	00024ddc 	.word	0x00024ddc
  41a60c:	00024da0 	.word	0x00024da0
  41a610:	00000cfe 	.word	0x00000cfe
  41a614:	00024848 	.word	0x00024848
  41a618:	00025524 	.word	0x00025524

0041a61c <cvCreateGraphScanner>:
  41a61c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41a620:	e24dd014 	sub	sp, sp, #20
  41a624:	e3a03000 	mov	r3, #0
  41a628:	e58d300c 	str	r3, [sp, #12]
  41a62c:	e2505000 	subs	r5, r0, #0
  41a630:	1a00000d 	bne	41a66c <cvCreateGraphScanner+0x50>
  41a634:	e59f3264 	ldr	r3, [pc, #612]	; 41a8a0 <cvCreateGraphScanner+0x284>
  41a638:	e58d3000 	str	r3, [sp]
  41a63c:	e3e0001a 	mvn	r0, #26
  41a640:	e59f125c 	ldr	r1, [pc, #604]	; 41a8a4 <cvCreateGraphScanner+0x288>
  41a644:	e08f1001 	add	r1, pc, r1
  41a648:	e2811e43 	add	r1, r1, #1072	; 0x430
  41a64c:	e2811004 	add	r1, r1, #4
  41a650:	e59f2250 	ldr	r2, [pc, #592]	; 41a8a8 <cvCreateGraphScanner+0x28c>
  41a654:	e08f2002 	add	r2, pc, r2
  41a658:	e59f324c 	ldr	r3, [pc, #588]	; 41a8ac <cvCreateGraphScanner+0x290>
  41a65c:	e08f3003 	add	r3, pc, r3
  41a660:	ebffe110 	bl	412aa8 <cvError>
  41a664:	e3a04000 	mov	r4, #0
  41a668:	ea000080 	b	41a870 <cvCreateGraphScanner+0x254>
  41a66c:	e1a06001 	mov	r6, r1
  41a670:	e1a07002 	mov	r7, r2
  41a674:	e595302c 	ldr	r3, [r5, #44]	; 0x2c
  41a678:	e3530000 	cmp	r3, #0
  41a67c:	1a00000d 	bne	41a6b8 <cvCreateGraphScanner+0x9c>
  41a680:	e59f3228 	ldr	r3, [pc, #552]	; 41a8b0 <cvCreateGraphScanner+0x294>
  41a684:	e58d3000 	str	r3, [sp]
  41a688:	e3e00002 	mvn	r0, #2
  41a68c:	e59f1220 	ldr	r1, [pc, #544]	; 41a8b4 <cvCreateGraphScanner+0x298>
  41a690:	e08f1001 	add	r1, pc, r1
  41a694:	e2811e43 	add	r1, r1, #1072	; 0x430
  41a698:	e2811004 	add	r1, r1, #4
  41a69c:	e59f2214 	ldr	r2, [pc, #532]	; 41a8b8 <cvCreateGraphScanner+0x29c>
  41a6a0:	e08f2002 	add	r2, pc, r2
  41a6a4:	e59f3210 	ldr	r3, [pc, #528]	; 41a8bc <cvCreateGraphScanner+0x2a0>
  41a6a8:	e08f3003 	add	r3, pc, r3
  41a6ac:	ebffe0fd 	bl	412aa8 <cvError>
  41a6b0:	e3a04000 	mov	r4, #0
  41a6b4:	ea00006d 	b	41a870 <cvCreateGraphScanner+0x254>
  41a6b8:	e3a0001c 	mov	r0, #28
  41a6bc:	eb00047e 	bl	41b8bc <cvAlloc>
  41a6c0:	e1a04000 	mov	r4, r0
  41a6c4:	ebffe0c6 	bl	4129e4 <cvGetErrStatus>
  41a6c8:	e3500000 	cmp	r0, #0
  41a6cc:	aa00000c 	bge	41a704 <cvCreateGraphScanner+0xe8>
  41a6d0:	e59f31e8 	ldr	r3, [pc, #488]	; 41a8c0 <cvCreateGraphScanner+0x2a4>
  41a6d4:	e58d3000 	str	r3, [sp]
  41a6d8:	e3e00000 	mvn	r0, #0
  41a6dc:	e59f11e0 	ldr	r1, [pc, #480]	; 41a8c4 <cvCreateGraphScanner+0x2a8>
  41a6e0:	e08f1001 	add	r1, pc, r1
  41a6e4:	e2811e43 	add	r1, r1, #1072	; 0x430
  41a6e8:	e2811004 	add	r1, r1, #4
  41a6ec:	e59f21d4 	ldr	r2, [pc, #468]	; 41a8c8 <cvCreateGraphScanner+0x2ac>
  41a6f0:	e08f2002 	add	r2, pc, r2
  41a6f4:	e59f31d0 	ldr	r3, [pc, #464]	; 41a8cc <cvCreateGraphScanner+0x2b0>
  41a6f8:	e08f3003 	add	r3, pc, r3
  41a6fc:	ebffe0e9 	bl	412aa8 <cvError>
  41a700:	ea00005a 	b	41a870 <cvCreateGraphScanner+0x254>
  41a704:	e1a00004 	mov	r0, r4
  41a708:	e3a01000 	mov	r1, #0
  41a70c:	e3a0201c 	mov	r2, #28
  41a710:	fa006a6f 	blx	4350d4 <memset>
  41a714:	e584500c 	str	r5, [r4, #12]
  41a718:	e5847018 	str	r7, [r4, #24]
  41a71c:	e5846000 	str	r6, [r4]
  41a720:	e3560000 	cmp	r6, #0
  41a724:	03a03000 	moveq	r3, #0
  41a728:	13e03000 	mvnne	r3, #0
  41a72c:	e5843014 	str	r3, [r4, #20]
  41a730:	e595002c 	ldr	r0, [r5, #44]	; 0x2c
  41a734:	ebffe2c9 	bl	413260 <cvCreateChildMemStorage>
  41a738:	e58d000c 	str	r0, [sp, #12]
  41a73c:	ebffe0a8 	bl	4129e4 <cvGetErrStatus>
  41a740:	e3500000 	cmp	r0, #0
  41a744:	aa00000c 	bge	41a77c <cvCreateGraphScanner+0x160>
  41a748:	e59f3180 	ldr	r3, [pc, #384]	; 41a8d0 <cvCreateGraphScanner+0x2b4>
  41a74c:	e58d3000 	str	r3, [sp]
  41a750:	e3e00000 	mvn	r0, #0
  41a754:	e59f1178 	ldr	r1, [pc, #376]	; 41a8d4 <cvCreateGraphScanner+0x2b8>
  41a758:	e08f1001 	add	r1, pc, r1
  41a75c:	e2811e43 	add	r1, r1, #1072	; 0x430
  41a760:	e2811004 	add	r1, r1, #4
  41a764:	e59f216c 	ldr	r2, [pc, #364]	; 41a8d8 <cvCreateGraphScanner+0x2bc>
  41a768:	e08f2002 	add	r2, pc, r2
  41a76c:	e59f3168 	ldr	r3, [pc, #360]	; 41a8dc <cvCreateGraphScanner+0x2c0>
  41a770:	e08f3003 	add	r3, pc, r3
  41a774:	ebffe0cb 	bl	412aa8 <cvError>
  41a778:	ea00003c 	b	41a870 <cvCreateGraphScanner+0x254>
  41a77c:	e3a00000 	mov	r0, #0
  41a780:	e3a01040 	mov	r1, #64	; 0x40
  41a784:	e3a02008 	mov	r2, #8
  41a788:	e59d300c 	ldr	r3, [sp, #12]
  41a78c:	ebffe524 	bl	413c24 <cvCreateSeq>
  41a790:	e5840010 	str	r0, [r4, #16]
  41a794:	ebffe092 	bl	4129e4 <cvGetErrStatus>
  41a798:	e3500000 	cmp	r0, #0
  41a79c:	aa00000c 	bge	41a7d4 <cvCreateGraphScanner+0x1b8>
  41a7a0:	e59f3138 	ldr	r3, [pc, #312]	; 41a8e0 <cvCreateGraphScanner+0x2c4>
  41a7a4:	e58d3000 	str	r3, [sp]
  41a7a8:	e3e00000 	mvn	r0, #0
  41a7ac:	e59f1130 	ldr	r1, [pc, #304]	; 41a8e4 <cvCreateGraphScanner+0x2c8>
  41a7b0:	e08f1001 	add	r1, pc, r1
  41a7b4:	e2811e43 	add	r1, r1, #1072	; 0x430
  41a7b8:	e2811004 	add	r1, r1, #4
  41a7bc:	e59f2124 	ldr	r2, [pc, #292]	; 41a8e8 <cvCreateGraphScanner+0x2cc>
  41a7c0:	e08f2002 	add	r2, pc, r2
  41a7c4:	e59f3120 	ldr	r3, [pc, #288]	; 41a8ec <cvCreateGraphScanner+0x2d0>
  41a7c8:	e08f3003 	add	r3, pc, r3
  41a7cc:	ebffe0b5 	bl	412aa8 <cvError>
  41a7d0:	ea000026 	b	41a870 <cvCreateGraphScanner+0x254>
  41a7d4:	e1a00005 	mov	r0, r5
  41a7d8:	e3a01000 	mov	r1, #0
  41a7dc:	e3a02206 	mov	r2, #1610612736	; 0x60000000
  41a7e0:	ebffe936 	bl	414cc0 <_ZL21icvSeqElemsClearFlagsP5CvSeqii>
  41a7e4:	ebffe07e 	bl	4129e4 <cvGetErrStatus>
  41a7e8:	e3500000 	cmp	r0, #0
  41a7ec:	aa00000c 	bge	41a824 <cvCreateGraphScanner+0x208>
  41a7f0:	e59f30f8 	ldr	r3, [pc, #248]	; 41a8f0 <cvCreateGraphScanner+0x2d4>
  41a7f4:	e58d3000 	str	r3, [sp]
  41a7f8:	e3e00000 	mvn	r0, #0
  41a7fc:	e59f10f0 	ldr	r1, [pc, #240]	; 41a8f4 <cvCreateGraphScanner+0x2d8>
  41a800:	e08f1001 	add	r1, pc, r1
  41a804:	e2811e43 	add	r1, r1, #1072	; 0x430
  41a808:	e2811004 	add	r1, r1, #4
  41a80c:	e59f20e4 	ldr	r2, [pc, #228]	; 41a8f8 <cvCreateGraphScanner+0x2dc>
  41a810:	e08f2002 	add	r2, pc, r2
  41a814:	e59f30e0 	ldr	r3, [pc, #224]	; 41a8fc <cvCreateGraphScanner+0x2e0>
  41a818:	e08f3003 	add	r3, pc, r3
  41a81c:	ebffe0a1 	bl	412aa8 <cvError>
  41a820:	ea000012 	b	41a870 <cvCreateGraphScanner+0x254>
  41a824:	e5950040 	ldr	r0, [r5, #64]	; 0x40
  41a828:	e3a01000 	mov	r1, #0
  41a82c:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  41a830:	ebffe922 	bl	414cc0 <_ZL21icvSeqElemsClearFlagsP5CvSeqii>
  41a834:	ebffe06a 	bl	4129e4 <cvGetErrStatus>
  41a838:	e3500000 	cmp	r0, #0
  41a83c:	aa00000b 	bge	41a870 <cvCreateGraphScanner+0x254>
  41a840:	e59f30b8 	ldr	r3, [pc, #184]	; 41a900 <cvCreateGraphScanner+0x2e4>
  41a844:	e58d3000 	str	r3, [sp]
  41a848:	e3e00000 	mvn	r0, #0
  41a84c:	e59f10b0 	ldr	r1, [pc, #176]	; 41a904 <cvCreateGraphScanner+0x2e8>
  41a850:	e08f1001 	add	r1, pc, r1
  41a854:	e2811e43 	add	r1, r1, #1072	; 0x430
  41a858:	e2811004 	add	r1, r1, #4
  41a85c:	e59f20a4 	ldr	r2, [pc, #164]	; 41a908 <cvCreateGraphScanner+0x2ec>
  41a860:	e08f2002 	add	r2, pc, r2
  41a864:	e59f30a0 	ldr	r3, [pc, #160]	; 41a90c <cvCreateGraphScanner+0x2f0>
  41a868:	e08f3003 	add	r3, pc, r3
  41a86c:	ebffe08d 	bl	412aa8 <cvError>
  41a870:	ebffe05b 	bl	4129e4 <cvGetErrStatus>
  41a874:	e3500000 	cmp	r0, #0
  41a878:	aa000004 	bge	41a890 <cvCreateGraphScanner+0x274>
  41a87c:	e28d000c 	add	r0, sp, #12
  41a880:	ebffe2aa 	bl	413330 <cvReleaseMemStorage>
  41a884:	e1a00004 	mov	r0, r4
  41a888:	eb00043d 	bl	41b984 <cvFree_>
  41a88c:	e3a04000 	mov	r4, #0
  41a890:	e1a00004 	mov	r0, r4
  41a894:	e28dd014 	add	sp, sp, #20
  41a898:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41a89c:	e12fff1e 	bx	lr
  41a8a0:	00000d76 	.word	0x00000d76
  41a8a4:	1fbe6228 	.word	0x1fbe6228
  41a8a8:	000254c8 	.word	0x000254c8
  41a8ac:	00024ce8 	.word	0x00024ce8
  41a8b0:	00000d78 	.word	0x00000d78
  41a8b4:	1fbe61dc 	.word	0x1fbe61dc
  41a8b8:	00025490 	.word	0x00025490
  41a8bc:	00024c9c 	.word	0x00024c9c
  41a8c0:	00000d7a 	.word	0x00000d7a
  41a8c4:	1fbe618c 	.word	0x1fbe618c
  41a8c8:	000228e0 	.word	0x000228e0
  41a8cc:	00024c4c 	.word	0x00024c4c
  41a8d0:	00000d82 	.word	0x00000d82
  41a8d4:	1fbe6114 	.word	0x1fbe6114
  41a8d8:	00022868 	.word	0x00022868
  41a8dc:	00024bd4 	.word	0x00024bd4
  41a8e0:	00000d85 	.word	0x00000d85
  41a8e4:	1fbe60bc 	.word	0x1fbe60bc
  41a8e8:	00022810 	.word	0x00022810
  41a8ec:	00024b7c 	.word	0x00024b7c
  41a8f0:	00000d8a 	.word	0x00000d8a
  41a8f4:	1fbe606c 	.word	0x1fbe606c
  41a8f8:	000227c0 	.word	0x000227c0
  41a8fc:	00024b2c 	.word	0x00024b2c
  41a900:	00000d8e 	.word	0x00000d8e
  41a904:	1fbe601c 	.word	0x1fbe601c
  41a908:	00022770 	.word	0x00022770
  41a90c:	00024adc 	.word	0x00024adc

0041a910 <cvReleaseGraphScanner>:
  41a910:	e92d4010 	push	{r4, lr}
  41a914:	e24dd008 	sub	sp, sp, #8
  41a918:	e2504000 	subs	r4, r0, #0
  41a91c:	1a00000c 	bne	41a954 <cvReleaseGraphScanner+0x44>
  41a920:	e59f30a8 	ldr	r3, [pc, #168]	; 41a9d0 <cvReleaseGraphScanner+0xc0>
  41a924:	e58d3000 	str	r3, [sp]
  41a928:	e3e0001a 	mvn	r0, #26
  41a92c:	e59f10a0 	ldr	r1, [pc, #160]	; 41a9d4 <cvReleaseGraphScanner+0xc4>
  41a930:	e08f1001 	add	r1, pc, r1
  41a934:	e2811d11 	add	r1, r1, #1088	; 0x440
  41a938:	e281100c 	add	r1, r1, #12
  41a93c:	e59f2094 	ldr	r2, [pc, #148]	; 41a9d8 <cvReleaseGraphScanner+0xc8>
  41a940:	e08f2002 	add	r2, pc, r2
  41a944:	e59f3090 	ldr	r3, [pc, #144]	; 41a9dc <cvReleaseGraphScanner+0xcc>
  41a948:	e08f3003 	add	r3, pc, r3
  41a94c:	ebffe055 	bl	412aa8 <cvError>
  41a950:	ea00001b 	b	41a9c4 <cvReleaseGraphScanner+0xb4>
  41a954:	e5943000 	ldr	r3, [r4]
  41a958:	e3530000 	cmp	r3, #0
  41a95c:	0a000018 	beq	41a9c4 <cvReleaseGraphScanner+0xb4>
  41a960:	e5930010 	ldr	r0, [r3, #16]
  41a964:	e3500000 	cmp	r0, #0
  41a968:	0a000011 	beq	41a9b4 <cvReleaseGraphScanner+0xa4>
  41a96c:	e280002c 	add	r0, r0, #44	; 0x2c
  41a970:	ebffe26e 	bl	413330 <cvReleaseMemStorage>
  41a974:	ebffe01a 	bl	4129e4 <cvGetErrStatus>
  41a978:	e3500000 	cmp	r0, #0
  41a97c:	aa00000c 	bge	41a9b4 <cvReleaseGraphScanner+0xa4>
  41a980:	e59f3058 	ldr	r3, [pc, #88]	; 41a9e0 <cvReleaseGraphScanner+0xd0>
  41a984:	e58d3000 	str	r3, [sp]
  41a988:	e3e00000 	mvn	r0, #0
  41a98c:	e59f1050 	ldr	r1, [pc, #80]	; 41a9e4 <cvReleaseGraphScanner+0xd4>
  41a990:	e08f1001 	add	r1, pc, r1
  41a994:	e2811d11 	add	r1, r1, #1088	; 0x440
  41a998:	e281100c 	add	r1, r1, #12
  41a99c:	e59f2044 	ldr	r2, [pc, #68]	; 41a9e8 <cvReleaseGraphScanner+0xd8>
  41a9a0:	e08f2002 	add	r2, pc, r2
  41a9a4:	e59f3040 	ldr	r3, [pc, #64]	; 41a9ec <cvReleaseGraphScanner+0xdc>
  41a9a8:	e08f3003 	add	r3, pc, r3
  41a9ac:	ebffe03d 	bl	412aa8 <cvError>
  41a9b0:	ea000003 	b	41a9c4 <cvReleaseGraphScanner+0xb4>
  41a9b4:	e5940000 	ldr	r0, [r4]
  41a9b8:	eb0003f1 	bl	41b984 <cvFree_>
  41a9bc:	e3a03000 	mov	r3, #0
  41a9c0:	e5843000 	str	r3, [r4]
  41a9c4:	e28dd008 	add	sp, sp, #8
  41a9c8:	e8bd4010 	pop	{r4, lr}
  41a9cc:	e12fff1e 	bx	lr
  41a9d0:	00000da4 	.word	0x00000da4
  41a9d4:	1fbe5f3c 	.word	0x1fbe5f3c
  41a9d8:	00025218 	.word	0x00025218
  41a9dc:	000249fc 	.word	0x000249fc
  41a9e0:	00000da9 	.word	0x00000da9
  41a9e4:	1fbe5edc 	.word	0x1fbe5edc
  41a9e8:	00022630 	.word	0x00022630
  41a9ec:	0002499c 	.word	0x0002499c

0041a9f0 <cvNextGraphItem>:
  41a9f0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41a9f4:	e24dd014 	sub	sp, sp, #20
  41a9f8:	e2507000 	subs	r7, r0, #0
  41a9fc:	0a000002 	beq	41aa0c <cvNextGraphItem+0x1c>
  41aa00:	e5973010 	ldr	r3, [r7, #16]
  41aa04:	e3530000 	cmp	r3, #0
  41aa08:	1a00000d 	bne	41aa44 <cvNextGraphItem+0x54>
  41aa0c:	e3a03d37 	mov	r3, #3520	; 0xdc0
  41aa10:	e58d3000 	str	r3, [sp]
  41aa14:	e3e0001a 	mvn	r0, #26
  41aa18:	e59f12c8 	ldr	r1, [pc, #712]	; 41ace8 <cvNextGraphItem+0x2f8>
  41aa1c:	e08f1001 	add	r1, pc, r1
  41aa20:	e2811e46 	add	r1, r1, #1120	; 0x460
  41aa24:	e2811004 	add	r1, r1, #4
  41aa28:	e59f22bc 	ldr	r2, [pc, #700]	; 41acec <cvNextGraphItem+0x2fc>
  41aa2c:	e08f2002 	add	r2, pc, r2
  41aa30:	e59f32b8 	ldr	r3, [pc, #696]	; 41acf0 <cvNextGraphItem+0x300>
  41aa34:	e08f3003 	add	r3, pc, r3
  41aa38:	ebffe01a 	bl	412aa8 <cvError>
  41aa3c:	e3e00000 	mvn	r0, #0
  41aa40:	ea0000a5 	b	41acdc <cvNextGraphItem+0x2ec>
  41aa44:	e5976004 	ldr	r6, [r7, #4]
  41aa48:	e5975000 	ldr	r5, [r7]
  41aa4c:	e5974008 	ldr	r4, [r7, #8]
  41aa50:	ea000002 	b	41aa60 <cvNextGraphItem+0x70>
  41aa54:	e3a06000 	mov	r6, #0
  41aa58:	ea000000 	b	41aa60 <cvNextGraphItem+0x70>
  41aa5c:	e1a06005 	mov	r6, r5
  41aa60:	e3560000 	cmp	r6, #0
  41aa64:	0a000064 	beq	41abfc <cvNextGraphItem+0x20c>
  41aa68:	e5963000 	ldr	r3, [r6]
  41aa6c:	e3130101 	tst	r3, #1073741824	; 0x40000000
  41aa70:	0a000002 	beq	41aa80 <cvNextGraphItem+0x90>
  41aa74:	ea000060 	b	41abfc <cvNextGraphItem+0x20c>
  41aa78:	e1a05006 	mov	r5, r6
  41aa7c:	ea00005e 	b	41abfc <cvNextGraphItem+0x20c>
  41aa80:	e5876000 	str	r6, [r7]
  41aa84:	e5964004 	ldr	r4, [r6, #4]
  41aa88:	e5963000 	ldr	r3, [r6]
  41aa8c:	e3833101 	orr	r3, r3, #1073741824	; 0x40000000
  41aa90:	e5863000 	str	r3, [r6]
  41aa94:	e5973018 	ldr	r3, [r7, #24]
  41aa98:	e3130001 	tst	r3, #1
  41aa9c:	0afffff5 	beq	41aa78 <cvNextGraphItem+0x88>
  41aaa0:	e5876000 	str	r6, [r7]
  41aaa4:	e5963004 	ldr	r3, [r6, #4]
  41aaa8:	e5873008 	str	r3, [r7, #8]
  41aaac:	e3a03000 	mov	r3, #0
  41aab0:	e5873004 	str	r3, [r7, #4]
  41aab4:	e3a00001 	mov	r0, #1
  41aab8:	ea000087 	b	41acdc <cvNextGraphItem+0x2ec>
  41aabc:	e5942010 	ldr	r2, [r4, #16]
  41aac0:	e1520005 	cmp	r2, r5
  41aac4:	03a03014 	moveq	r3, #20
  41aac8:	13a03010 	movne	r3, #16
  41aacc:	e7936004 	ldr	r6, [r3, r4]
  41aad0:	e5943000 	ldr	r3, [r4]
  41aad4:	e3130101 	tst	r3, #1073741824	; 0x40000000
  41aad8:	1a000033 	bne	41abac <cvNextGraphItem+0x1bc>
  41aadc:	e597100c 	ldr	r1, [r7, #12]
  41aae0:	e5911000 	ldr	r1, [r1]
  41aae4:	e3110a01 	tst	r1, #4096	; 0x1000
  41aae8:	0a000001 	beq	41aaf4 <cvNextGraphItem+0x104>
  41aaec:	e1520006 	cmp	r2, r6
  41aaf0:	0a000028 	beq	41ab98 <cvNextGraphItem+0x1a8>
  41aaf4:	e3833101 	orr	r3, r3, #1073741824	; 0x40000000
  41aaf8:	e5843000 	str	r3, [r4]
  41aafc:	e5961000 	ldr	r1, [r6]
  41ab00:	e3110101 	tst	r1, #1073741824	; 0x40000000
  41ab04:	1a00000f 	bne	41ab48 <cvNextGraphItem+0x158>
  41ab08:	e58d5008 	str	r5, [sp, #8]
  41ab0c:	e58d400c 	str	r4, [sp, #12]
  41ab10:	e5953000 	ldr	r3, [r5]
  41ab14:	e3833202 	orr	r3, r3, #536870912	; 0x20000000
  41ab18:	e5853000 	str	r3, [r5]
  41ab1c:	e5970010 	ldr	r0, [r7, #16]
  41ab20:	e28d1008 	add	r1, sp, #8
  41ab24:	ebffea5a 	bl	415494 <cvSeqPush>
  41ab28:	e5973018 	ldr	r3, [r7, #24]
  41ab2c:	e3130002 	tst	r3, #2
  41ab30:	0a000033 	beq	41ac04 <cvNextGraphItem+0x214>
  41ab34:	e5875000 	str	r5, [r7]
  41ab38:	e5876004 	str	r6, [r7, #4]
  41ab3c:	e5874008 	str	r4, [r7, #8]
  41ab40:	e3a00002 	mov	r0, #2
  41ab44:	ea000064 	b	41acdc <cvNextGraphItem+0x2ec>
  41ab48:	e5970018 	ldr	r0, [r7, #24]
  41ab4c:	e310001c 	tst	r0, #28
  41ab50:	0a000015 	beq	41abac <cvNextGraphItem+0x1bc>
  41ab54:	e3110202 	tst	r1, #536870912	; 0x20000000
  41ab58:	1a000004 	bne	41ab70 <cvNextGraphItem+0x180>
  41ab5c:	e3130201 	tst	r3, #268435456	; 0x10000000
  41ab60:	13a00008 	movne	r0, #8
  41ab64:	1a000002 	bne	41ab74 <cvNextGraphItem+0x184>
  41ab68:	e3a00010 	mov	r0, #16
  41ab6c:	ea000000 	b	41ab74 <cvNextGraphItem+0x184>
  41ab70:	e3a00004 	mov	r0, #4
  41ab74:	e3c33201 	bic	r3, r3, #268435456	; 0x10000000
  41ab78:	e5843000 	str	r3, [r4]
  41ab7c:	e5973018 	ldr	r3, [r7, #24]
  41ab80:	e1100003 	tst	r0, r3
  41ab84:	0a000008 	beq	41abac <cvNextGraphItem+0x1bc>
  41ab88:	e5875000 	str	r5, [r7]
  41ab8c:	e5876004 	str	r6, [r7, #4]
  41ab90:	e5874008 	str	r4, [r7, #8]
  41ab94:	ea000050 	b	41acdc <cvNextGraphItem+0x2ec>
  41ab98:	e5961000 	ldr	r1, [r6]
  41ab9c:	e2011206 	and	r1, r1, #1610612736	; 0x60000000
  41aba0:	e3510206 	cmp	r1, #1610612736	; 0x60000000
  41aba4:	03833201 	orreq	r3, r3, #268435456	; 0x10000000
  41aba8:	05843000 	streq	r3, [r4]
  41abac:	e1520005 	cmp	r2, r5
  41abb0:	0a00000c 	beq	41abe8 <cvNextGraphItem+0x1f8>
  41abb4:	e5943014 	ldr	r3, [r4, #20]
  41abb8:	e1530005 	cmp	r3, r5
  41abbc:	0a000009 	beq	41abe8 <cvNextGraphItem+0x1f8>
  41abc0:	e59f012c 	ldr	r0, [pc, #300]	; 41acf4 <cvNextGraphItem+0x304>
  41abc4:	e08f0000 	add	r0, pc, r0
  41abc8:	e59f1128 	ldr	r1, [pc, #296]	; 41acf8 <cvNextGraphItem+0x308>
  41abcc:	e59f2128 	ldr	r2, [pc, #296]	; 41acfc <cvNextGraphItem+0x30c>
  41abd0:	e08f2002 	add	r2, pc, r2
  41abd4:	e2822d13 	add	r2, r2, #1216	; 0x4c0
  41abd8:	e282200c 	add	r2, r2, #12
  41abdc:	e59f311c 	ldr	r3, [pc, #284]	; 41ad00 <cvNextGraphItem+0x310>
  41abe0:	e08f3003 	add	r3, pc, r3
  41abe4:	fa00645a 	blx	433d54 <__assert_func>
  41abe8:	e5943014 	ldr	r3, [r4, #20]
  41abec:	e1530005 	cmp	r3, r5
  41abf0:	03a0300c 	moveq	r3, #12
  41abf4:	13a03008 	movne	r3, #8
  41abf8:	e7934004 	ldr	r4, [r3, r4]
  41abfc:	e3540000 	cmp	r4, #0
  41ac00:	1affffad 	bne	41aabc <cvNextGraphItem+0xcc>
  41ac04:	e3540000 	cmp	r4, #0
  41ac08:	1affff94 	bne	41aa60 <cvNextGraphItem+0x70>
  41ac0c:	e5970010 	ldr	r0, [r7, #16]
  41ac10:	e5903018 	ldr	r3, [r0, #24]
  41ac14:	e3530000 	cmp	r3, #0
  41ac18:	1a000005 	bne	41ac34 <cvNextGraphItem+0x244>
  41ac1c:	e5973014 	ldr	r3, [r7, #20]
  41ac20:	e3530000 	cmp	r3, #0
  41ac24:	aa000016 	bge	41ac84 <cvNextGraphItem+0x294>
  41ac28:	e3a03000 	mov	r3, #0
  41ac2c:	e5873014 	str	r3, [r7, #20]
  41ac30:	ea000014 	b	41ac88 <cvNextGraphItem+0x298>
  41ac34:	e28d1008 	add	r1, sp, #8
  41ac38:	ebffea8a 	bl	415668 <cvSeqPop>
  41ac3c:	e59d5008 	ldr	r5, [sp, #8]
  41ac40:	e5953000 	ldr	r3, [r5]
  41ac44:	e3c33202 	bic	r3, r3, #536870912	; 0x20000000
  41ac48:	e5853000 	str	r3, [r5]
  41ac4c:	e59d400c 	ldr	r4, [sp, #12]
  41ac50:	e5973018 	ldr	r3, [r7, #24]
  41ac54:	e3130040 	tst	r3, #64	; 0x40
  41ac58:	0affff7d 	beq	41aa54 <cvNextGraphItem+0x64>
  41ac5c:	e5875000 	str	r5, [r7]
  41ac60:	e5874008 	str	r4, [r7, #8]
  41ac64:	e5943010 	ldr	r3, [r4, #16]
  41ac68:	e1530005 	cmp	r3, r5
  41ac6c:	03a05014 	moveq	r5, #20
  41ac70:	13a05010 	movne	r5, #16
  41ac74:	e7953004 	ldr	r3, [r5, r4]
  41ac78:	e5873004 	str	r3, [r7, #4]
  41ac7c:	e3a00040 	mov	r0, #64	; 0x40
  41ac80:	ea000015 	b	41acdc <cvNextGraphItem+0x2ec>
  41ac84:	e3a05000 	mov	r5, #0
  41ac88:	e3550000 	cmp	r5, #0
  41ac8c:	1a000008 	bne	41acb4 <cvNextGraphItem+0x2c4>
  41ac90:	e597000c 	ldr	r0, [r7, #12]
  41ac94:	e2873014 	add	r3, r7, #20
  41ac98:	e58d3000 	str	r3, [sp]
  41ac9c:	e3a01000 	mov	r1, #0
  41aca0:	e3a02103 	mov	r2, #-1073741824	; 0xc0000000
  41aca4:	e1a03001 	mov	r3, r1
  41aca8:	ebffe96f 	bl	41526c <_ZL18icvSeqFindNextElemP5CvSeqiiiPi>
  41acac:	e2505000 	subs	r5, r0, #0
  41acb0:	0a000008 	beq	41acd8 <cvNextGraphItem+0x2e8>
  41acb4:	e5973018 	ldr	r3, [r7, #24]
  41acb8:	e3130020 	tst	r3, #32
  41acbc:	0affff66 	beq	41aa5c <cvNextGraphItem+0x6c>
  41acc0:	e5875004 	str	r5, [r7, #4]
  41acc4:	e3a03000 	mov	r3, #0
  41acc8:	e5873008 	str	r3, [r7, #8]
  41accc:	e5873000 	str	r3, [r7]
  41acd0:	e3a00020 	mov	r0, #32
  41acd4:	ea000000 	b	41acdc <cvNextGraphItem+0x2ec>
  41acd8:	e3e00000 	mvn	r0, #0
  41acdc:	e28dd014 	add	sp, sp, #20
  41ace0:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41ace4:	e12fff1e 	bx	lr
  41ace8:	1fbe5e50 	.word	0x1fbe5e50
  41acec:	00025154 	.word	0x00025154
  41acf0:	00024910 	.word	0x00024910
  41acf4:	00024780 	.word	0x00024780
  41acf8:	00000e16 	.word	0x00000e16
  41acfc:	00024228 	.word	0x00024228
  41ad00:	00024fb4 	.word	0x00024fb4

0041ad04 <cvCloneGraph>:
  41ad04:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41ad08:	e24dd03c 	sub	sp, sp, #60	; 0x3c
  41ad0c:	e2504000 	subs	r4, r0, #0
  41ad10:	0a000006 	beq	41ad30 <cvCloneGraph+0x2c>
  41ad14:	e1a06001 	mov	r6, r1
  41ad18:	e5943000 	ldr	r3, [r4]
  41ad1c:	e3c33cf1 	bic	r3, r3, #61696	; 0xf100
  41ad20:	e3c330ff 	bic	r3, r3, #255	; 0xff
  41ad24:	e59f2418 	ldr	r2, [pc, #1048]	; 41b144 <cvCloneGraph+0x440>
  41ad28:	e1530002 	cmp	r3, r2
  41ad2c:	0a00000f 	beq	41ad70 <cvCloneGraph+0x6c>
  41ad30:	e59f3410 	ldr	r3, [pc, #1040]	; 41b148 <cvCloneGraph+0x444>
  41ad34:	e58d3000 	str	r3, [sp]
  41ad38:	e3e00004 	mvn	r0, #4
  41ad3c:	e59f1408 	ldr	r1, [pc, #1032]	; 41b14c <cvCloneGraph+0x448>
  41ad40:	e08f1001 	add	r1, pc, r1
  41ad44:	e2811e47 	add	r1, r1, #1136	; 0x470
  41ad48:	e2811004 	add	r1, r1, #4
  41ad4c:	e59f23fc 	ldr	r2, [pc, #1020]	; 41b150 <cvCloneGraph+0x44c>
  41ad50:	e08f2002 	add	r2, pc, r2
  41ad54:	e59f33f8 	ldr	r3, [pc, #1016]	; 41b154 <cvCloneGraph+0x450>
  41ad58:	e08f3003 	add	r3, pc, r3
  41ad5c:	ebffdf51 	bl	412aa8 <cvError>
  41ad60:	e3a05000 	mov	r5, #0
  41ad64:	e1a0a005 	mov	sl, r5
  41ad68:	e58d500c 	str	r5, [sp, #12]
  41ad6c:	ea0000e8 	b	41b114 <cvCloneGraph+0x410>
  41ad70:	e3510000 	cmp	r1, #0
  41ad74:	0594602c 	ldreq	r6, [r4, #44]	; 0x2c
  41ad78:	e3560000 	cmp	r6, #0
  41ad7c:	1a00000f 	bne	41adc0 <cvCloneGraph+0xbc>
  41ad80:	e59f33d0 	ldr	r3, [pc, #976]	; 41b158 <cvCloneGraph+0x454>
  41ad84:	e58d3000 	str	r3, [sp]
  41ad88:	e3e0001a 	mvn	r0, #26
  41ad8c:	e59f13c8 	ldr	r1, [pc, #968]	; 41b15c <cvCloneGraph+0x458>
  41ad90:	e08f1001 	add	r1, pc, r1
  41ad94:	e2811e47 	add	r1, r1, #1136	; 0x470
  41ad98:	e2811004 	add	r1, r1, #4
  41ad9c:	e59f23bc 	ldr	r2, [pc, #956]	; 41b160 <cvCloneGraph+0x45c>
  41ada0:	e08f2002 	add	r2, pc, r2
  41ada4:	e59f33b8 	ldr	r3, [pc, #952]	; 41b164 <cvCloneGraph+0x460>
  41ada8:	e08f3003 	add	r3, pc, r3
  41adac:	ebffdf3d 	bl	412aa8 <cvError>
  41adb0:	e3a05000 	mov	r5, #0
  41adb4:	e1a0a005 	mov	sl, r5
  41adb8:	e58d500c 	str	r5, [sp, #12]
  41adbc:	ea0000d4 	b	41b114 <cvCloneGraph+0x410>
  41adc0:	e594b01c 	ldr	fp, [r4, #28]
  41adc4:	e5943040 	ldr	r3, [r4, #64]	; 0x40
  41adc8:	e593901c 	ldr	r9, [r3, #28]
  41adcc:	e5940018 	ldr	r0, [r4, #24]
  41add0:	e1a00100 	lsl	r0, r0, #2
  41add4:	eb0002b8 	bl	41b8bc <cvAlloc>
  41add8:	e1a0a000 	mov	sl, r0
  41addc:	ebffdf00 	bl	4129e4 <cvGetErrStatus>
  41ade0:	e3500000 	cmp	r0, #0
  41ade4:	aa00000e 	bge	41ae24 <cvCloneGraph+0x120>
  41ade8:	e59f3378 	ldr	r3, [pc, #888]	; 41b168 <cvCloneGraph+0x464>
  41adec:	e58d3000 	str	r3, [sp]
  41adf0:	e3e00000 	mvn	r0, #0
  41adf4:	e59f1370 	ldr	r1, [pc, #880]	; 41b16c <cvCloneGraph+0x468>
  41adf8:	e08f1001 	add	r1, pc, r1
  41adfc:	e2811e47 	add	r1, r1, #1136	; 0x470
  41ae00:	e2811004 	add	r1, r1, #4
  41ae04:	e59f2364 	ldr	r2, [pc, #868]	; 41b170 <cvCloneGraph+0x46c>
  41ae08:	e08f2002 	add	r2, pc, r2
  41ae0c:	e59f3360 	ldr	r3, [pc, #864]	; 41b174 <cvCloneGraph+0x470>
  41ae10:	e08f3003 	add	r3, pc, r3
  41ae14:	ebffdf23 	bl	412aa8 <cvError>
  41ae18:	e3a05000 	mov	r5, #0
  41ae1c:	e58d500c 	str	r5, [sp, #12]
  41ae20:	ea0000bb 	b	41b114 <cvCloneGraph+0x410>
  41ae24:	e5940018 	ldr	r0, [r4, #24]
  41ae28:	e1a00100 	lsl	r0, r0, #2
  41ae2c:	eb0002a2 	bl	41b8bc <cvAlloc>
  41ae30:	e1a05000 	mov	r5, r0
  41ae34:	ebffdeea 	bl	4129e4 <cvGetErrStatus>
  41ae38:	e3500000 	cmp	r0, #0
  41ae3c:	aa00000e 	bge	41ae7c <cvCloneGraph+0x178>
  41ae40:	e59f3330 	ldr	r3, [pc, #816]	; 41b178 <cvCloneGraph+0x474>
  41ae44:	e58d3000 	str	r3, [sp]
  41ae48:	e3e00000 	mvn	r0, #0
  41ae4c:	e59f1328 	ldr	r1, [pc, #808]	; 41b17c <cvCloneGraph+0x478>
  41ae50:	e08f1001 	add	r1, pc, r1
  41ae54:	e2811e47 	add	r1, r1, #1136	; 0x470
  41ae58:	e2811004 	add	r1, r1, #4
  41ae5c:	e59f231c 	ldr	r2, [pc, #796]	; 41b180 <cvCloneGraph+0x47c>
  41ae60:	e08f2002 	add	r2, pc, r2
  41ae64:	e59f3318 	ldr	r3, [pc, #792]	; 41b184 <cvCloneGraph+0x480>
  41ae68:	e08f3003 	add	r3, pc, r3
  41ae6c:	ebffdf0d 	bl	412aa8 <cvError>
  41ae70:	e3a03000 	mov	r3, #0
  41ae74:	e58d300c 	str	r3, [sp, #12]
  41ae78:	ea0000a5 	b	41b114 <cvCloneGraph+0x410>
  41ae7c:	e5940000 	ldr	r0, [r4]
  41ae80:	e5941004 	ldr	r1, [r4, #4]
  41ae84:	e58d6000 	str	r6, [sp]
  41ae88:	e1a0200b 	mov	r2, fp
  41ae8c:	e1a03009 	mov	r3, r9
  41ae90:	ebfff975 	bl	41946c <cvCreateGraph>
  41ae94:	e58d000c 	str	r0, [sp, #12]
  41ae98:	ebffded1 	bl	4129e4 <cvGetErrStatus>
  41ae9c:	e3500000 	cmp	r0, #0
  41aea0:	aa00000c 	bge	41aed8 <cvCloneGraph+0x1d4>
  41aea4:	e3a03ee7 	mov	r3, #3696	; 0xe70
  41aea8:	e58d3000 	str	r3, [sp]
  41aeac:	e3e00000 	mvn	r0, #0
  41aeb0:	e59f12d0 	ldr	r1, [pc, #720]	; 41b188 <cvCloneGraph+0x484>
  41aeb4:	e08f1001 	add	r1, pc, r1
  41aeb8:	e2811e47 	add	r1, r1, #1136	; 0x470
  41aebc:	e2811004 	add	r1, r1, #4
  41aec0:	e59f22c4 	ldr	r2, [pc, #708]	; 41b18c <cvCloneGraph+0x488>
  41aec4:	e08f2002 	add	r2, pc, r2
  41aec8:	e59f32c0 	ldr	r3, [pc, #704]	; 41b190 <cvCloneGraph+0x48c>
  41aecc:	e08f3003 	add	r3, pc, r3
  41aed0:	ebffdef4 	bl	412aa8 <cvError>
  41aed4:	ea00008e 	b	41b114 <cvCloneGraph+0x410>
  41aed8:	e59d300c 	ldr	r3, [sp, #12]
  41aedc:	e2830c12 	add	r0, r3, #4608	; 0x1200
  41aee0:	e2841c12 	add	r1, r4, #4608	; 0x1200
  41aee4:	e5942004 	ldr	r2, [r4, #4]
  41aee8:	e2800010 	add	r0, r0, #16
  41aeec:	e2811010 	add	r1, r1, #16
  41aef0:	e2422044 	sub	r2, r2, #68	; 0x44
  41aef4:	fa0067f7 	blx	434ed8 <memcpy>
  41aef8:	e1a00004 	mov	r0, r4
  41aefc:	e28d1018 	add	r1, sp, #24
  41af00:	e3a02000 	mov	r2, #0
  41af04:	ebffe6f5 	bl	414ae0 <cvStartReadSeq>
  41af08:	e3a08000 	mov	r8, #0
  41af0c:	e1a07008 	mov	r7, r8
  41af10:	ea00002b 	b	41afc4 <cvCloneGraph+0x2c0>
  41af14:	e59d6024 	ldr	r6, [sp, #36]	; 0x24
  41af18:	e5963000 	ldr	r3, [r6]
  41af1c:	e3530000 	cmp	r3, #0
  41af20:	ba00001e 	blt	41afa0 <cvCloneGraph+0x29c>
  41af24:	e28d2038 	add	r2, sp, #56	; 0x38
  41af28:	e3a03000 	mov	r3, #0
  41af2c:	e5223024 	str	r3, [r2, #-36]!	; 0x24
  41af30:	e59d000c 	ldr	r0, [sp, #12]
  41af34:	e1a01006 	mov	r1, r6
  41af38:	ebfff9b6 	bl	419618 <cvGraphAddVtx>
  41af3c:	ebffdea8 	bl	4129e4 <cvGetErrStatus>
  41af40:	e3500000 	cmp	r0, #0
  41af44:	aa00000c 	bge	41af7c <cvCloneGraph+0x278>
  41af48:	e59f3244 	ldr	r3, [pc, #580]	; 41b194 <cvCloneGraph+0x490>
  41af4c:	e58d3000 	str	r3, [sp]
  41af50:	e3e00000 	mvn	r0, #0
  41af54:	e59f123c 	ldr	r1, [pc, #572]	; 41b198 <cvCloneGraph+0x494>
  41af58:	e08f1001 	add	r1, pc, r1
  41af5c:	e2811e47 	add	r1, r1, #1136	; 0x470
  41af60:	e2811004 	add	r1, r1, #4
  41af64:	e59f2230 	ldr	r2, [pc, #560]	; 41b19c <cvCloneGraph+0x498>
  41af68:	e08f2002 	add	r2, pc, r2
  41af6c:	e59f322c 	ldr	r3, [pc, #556]	; 41b1a0 <cvCloneGraph+0x49c>
  41af70:	e08f3003 	add	r3, pc, r3
  41af74:	ebffdecb 	bl	412aa8 <cvError>
  41af78:	ea000065 	b	41b114 <cvCloneGraph+0x410>
  41af7c:	e1a03108 	lsl	r3, r8, #2
  41af80:	e5962000 	ldr	r2, [r6]
  41af84:	e59d1014 	ldr	r1, [sp, #20]
  41af88:	e5812000 	str	r2, [r1]
  41af8c:	e78a2108 	str	r2, [sl, r8, lsl #2]
  41af90:	e5868000 	str	r8, [r6]
  41af94:	e59d2014 	ldr	r2, [sp, #20]
  41af98:	e7852003 	str	r2, [r5, r3]
  41af9c:	e2888001 	add	r8, r8, #1
  41afa0:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  41afa4:	e083300b 	add	r3, r3, fp
  41afa8:	e58d3024 	str	r3, [sp, #36]	; 0x24
  41afac:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
  41afb0:	e1530002 	cmp	r3, r2
  41afb4:	228d0018 	addcs	r0, sp, #24
  41afb8:	23a01001 	movcs	r1, #1
  41afbc:	2bffe70d 	blcs	414bf8 <cvChangeSeqBlock>
  41afc0:	e2877001 	add	r7, r7, #1
  41afc4:	e5943018 	ldr	r3, [r4, #24]
  41afc8:	e1530007 	cmp	r3, r7
  41afcc:	caffffd0 	bgt	41af14 <cvCloneGraph+0x210>
  41afd0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
  41afd4:	e28d1018 	add	r1, sp, #24
  41afd8:	e3a02000 	mov	r2, #0
  41afdc:	ebffe6bf 	bl	414ae0 <cvStartReadSeq>
  41afe0:	e3a06000 	mov	r6, #0
  41afe4:	ea00002c 	b	41b09c <cvCloneGraph+0x398>
  41afe8:	e59d7024 	ldr	r7, [sp, #36]	; 0x24
  41afec:	e5973000 	ldr	r3, [r7]
  41aff0:	e3530000 	cmp	r3, #0
  41aff4:	ba00001f 	blt	41b078 <cvCloneGraph+0x374>
  41aff8:	e28d3038 	add	r3, sp, #56	; 0x38
  41affc:	e3a02000 	mov	r2, #0
  41b000:	e5232024 	str	r2, [r3, #-36]!	; 0x24
  41b004:	e5972010 	ldr	r2, [r7, #16]
  41b008:	e5922000 	ldr	r2, [r2]
  41b00c:	e7951102 	ldr	r1, [r5, r2, lsl #2]
  41b010:	e5972014 	ldr	r2, [r7, #20]
  41b014:	e5922000 	ldr	r2, [r2]
  41b018:	e7952102 	ldr	r2, [r5, r2, lsl #2]
  41b01c:	e58d3000 	str	r3, [sp]
  41b020:	e59d000c 	ldr	r0, [sp, #12]
  41b024:	e1a03007 	mov	r3, r7
  41b028:	ebfffa4c 	bl	419960 <cvGraphAddEdgeByPtr>
  41b02c:	ebffde6c 	bl	4129e4 <cvGetErrStatus>
  41b030:	e3500000 	cmp	r0, #0
  41b034:	aa00000c 	bge	41b06c <cvCloneGraph+0x368>
  41b038:	e59f3164 	ldr	r3, [pc, #356]	; 41b1a4 <cvCloneGraph+0x4a0>
  41b03c:	e58d3000 	str	r3, [sp]
  41b040:	e3e00000 	mvn	r0, #0
  41b044:	e59f115c 	ldr	r1, [pc, #348]	; 41b1a8 <cvCloneGraph+0x4a4>
  41b048:	e08f1001 	add	r1, pc, r1
  41b04c:	e2811e47 	add	r1, r1, #1136	; 0x470
  41b050:	e2811004 	add	r1, r1, #4
  41b054:	e59f2150 	ldr	r2, [pc, #336]	; 41b1ac <cvCloneGraph+0x4a8>
  41b058:	e08f2002 	add	r2, pc, r2
  41b05c:	e59f314c 	ldr	r3, [pc, #332]	; 41b1b0 <cvCloneGraph+0x4ac>
  41b060:	e08f3003 	add	r3, pc, r3
  41b064:	ebffde8f 	bl	412aa8 <cvError>
  41b068:	ea000029 	b	41b114 <cvCloneGraph+0x410>
  41b06c:	e5972000 	ldr	r2, [r7]
  41b070:	e59d3014 	ldr	r3, [sp, #20]
  41b074:	e5832000 	str	r2, [r3]
  41b078:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  41b07c:	e0833009 	add	r3, r3, r9
  41b080:	e58d3024 	str	r3, [sp, #36]	; 0x24
  41b084:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
  41b088:	e1530002 	cmp	r3, r2
  41b08c:	228d0018 	addcs	r0, sp, #24
  41b090:	23a01001 	movcs	r1, #1
  41b094:	2bffe6d7 	blcs	414bf8 <cvChangeSeqBlock>
  41b098:	e2866001 	add	r6, r6, #1
  41b09c:	e5943040 	ldr	r3, [r4, #64]	; 0x40
  41b0a0:	e5933018 	ldr	r3, [r3, #24]
  41b0a4:	e1530006 	cmp	r3, r6
  41b0a8:	caffffce 	bgt	41afe8 <cvCloneGraph+0x2e4>
  41b0ac:	e1a00004 	mov	r0, r4
  41b0b0:	e28d1018 	add	r1, sp, #24
  41b0b4:	e3a02000 	mov	r2, #0
  41b0b8:	ebffe688 	bl	414ae0 <cvStartReadSeq>
  41b0bc:	e3a07000 	mov	r7, #0
  41b0c0:	e1a06007 	mov	r6, r7
  41b0c4:	ea00000e 	b	41b104 <cvCloneGraph+0x400>
  41b0c8:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  41b0cc:	e5932000 	ldr	r2, [r3]
  41b0d0:	e3520000 	cmp	r2, #0
  41b0d4:	a79a2107 	ldrge	r2, [sl, r7, lsl #2]
  41b0d8:	a5832000 	strge	r2, [r3]
  41b0dc:	a2877001 	addge	r7, r7, #1
  41b0e0:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  41b0e4:	e083300b 	add	r3, r3, fp
  41b0e8:	e58d3024 	str	r3, [sp, #36]	; 0x24
  41b0ec:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
  41b0f0:	e1530002 	cmp	r3, r2
  41b0f4:	228d0018 	addcs	r0, sp, #24
  41b0f8:	23a01001 	movcs	r1, #1
  41b0fc:	2bffe6bd 	blcs	414bf8 <cvChangeSeqBlock>
  41b100:	e2866001 	add	r6, r6, #1
  41b104:	e5943040 	ldr	r3, [r4, #64]	; 0x40
  41b108:	e5933018 	ldr	r3, [r3, #24]
  41b10c:	e1530006 	cmp	r3, r6
  41b110:	caffffec 	bgt	41b0c8 <cvCloneGraph+0x3c4>
  41b114:	e1a0000a 	mov	r0, sl
  41b118:	eb000219 	bl	41b984 <cvFree_>
  41b11c:	e1a00005 	mov	r0, r5
  41b120:	eb000217 	bl	41b984 <cvFree_>
  41b124:	ebffde2e 	bl	4129e4 <cvGetErrStatus>
  41b128:	e3500000 	cmp	r0, #0
  41b12c:	b3a03000 	movlt	r3, #0
  41b130:	b58d300c 	strlt	r3, [sp, #12]
  41b134:	e59d000c 	ldr	r0, [sp, #12]
  41b138:	e28dd03c 	add	sp, sp, #60	; 0x3c
  41b13c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41b140:	e12fff1e 	bx	lr
  41b144:	42980600 	.word	0x42980600
  41b148:	00000e62 	.word	0x00000e62
  41b14c:	1fbe5b2c 	.word	0x1fbe5b2c
  41b150:	00024e78 	.word	0x00024e78
  41b154:	000245ec 	.word	0x000245ec
  41b158:	00000e68 	.word	0x00000e68
  41b15c:	1fbe5adc 	.word	0x1fbe5adc
  41b160:	00024688 	.word	0x00024688
  41b164:	0002459c 	.word	0x0002459c
  41b168:	00000e6d 	.word	0x00000e6d
  41b16c:	1fbe5a74 	.word	0x1fbe5a74
  41b170:	000221c8 	.word	0x000221c8
  41b174:	00024534 	.word	0x00024534
  41b178:	00000e6e 	.word	0x00000e6e
  41b17c:	1fbe5a1c 	.word	0x1fbe5a1c
  41b180:	00022170 	.word	0x00022170
  41b184:	000244dc 	.word	0x000244dc
  41b188:	1fbe59b8 	.word	0x1fbe59b8
  41b18c:	0002210c 	.word	0x0002210c
  41b190:	00024478 	.word	0x00024478
  41b194:	00000e7c 	.word	0x00000e7c
  41b198:	1fbe5914 	.word	0x1fbe5914
  41b19c:	00022068 	.word	0x00022068
  41b1a0:	000243d4 	.word	0x000243d4
  41b1a4:	00000e8e 	.word	0x00000e8e
  41b1a8:	1fbe5824 	.word	0x1fbe5824
  41b1ac:	00021f78 	.word	0x00021f78
  41b1b0:	000242e4 	.word	0x000242e4

0041b1b4 <cvInsertNodeIntoTree>:
  41b1b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41b1b8:	e24dd00c 	sub	sp, sp, #12
  41b1bc:	e3510000 	cmp	r1, #0
  41b1c0:	13500000 	cmpne	r0, #0
  41b1c4:	1a00000c 	bne	41b1fc <cvInsertNodeIntoTree+0x48>
  41b1c8:	e59f3098 	ldr	r3, [pc, #152]	; 41b268 <cvInsertNodeIntoTree+0xb4>
  41b1cc:	e58d3000 	str	r3, [sp]
  41b1d0:	e3e0001a 	mvn	r0, #26
  41b1d4:	e59f1090 	ldr	r1, [pc, #144]	; 41b26c <cvInsertNodeIntoTree+0xb8>
  41b1d8:	e08f1001 	add	r1, pc, r1
  41b1dc:	e2811d12 	add	r1, r1, #1152	; 0x480
  41b1e0:	e2811004 	add	r1, r1, #4
  41b1e4:	e59f2084 	ldr	r2, [pc, #132]	; 41b270 <cvInsertNodeIntoTree+0xbc>
  41b1e8:	e08f2002 	add	r2, pc, r2
  41b1ec:	e59f3080 	ldr	r3, [pc, #128]	; 41b274 <cvInsertNodeIntoTree+0xc0>
  41b1f0:	e08f3003 	add	r3, pc, r3
  41b1f4:	ebffde2b 	bl	412aa8 <cvError>
  41b1f8:	ea000017 	b	41b25c <cvInsertNodeIntoTree+0xa8>
  41b1fc:	e1a0c000 	mov	ip, r0
  41b200:	e1a03001 	mov	r3, r1
  41b204:	e1510002 	cmp	r1, r2
  41b208:	03a02000 	moveq	r2, #0
  41b20c:	11a02001 	movne	r2, r1
  41b210:	e58c2010 	str	r2, [ip, #16]
  41b214:	e5932014 	ldr	r2, [r3, #20]
  41b218:	e58c200c 	str	r2, [ip, #12]
  41b21c:	e5932014 	ldr	r2, [r3, #20]
  41b220:	e15c0002 	cmp	ip, r2
  41b224:	1a000009 	bne	41b250 <cvInsertNodeIntoTree+0x9c>
  41b228:	e59f0048 	ldr	r0, [pc, #72]	; 41b278 <cvInsertNodeIntoTree+0xc4>
  41b22c:	e08f0000 	add	r0, pc, r0
  41b230:	e59f1044 	ldr	r1, [pc, #68]	; 41b27c <cvInsertNodeIntoTree+0xc8>
  41b234:	e59f2044 	ldr	r2, [pc, #68]	; 41b280 <cvInsertNodeIntoTree+0xcc>
  41b238:	e08f2002 	add	r2, pc, r2
  41b23c:	e2822e4f 	add	r2, r2, #1264	; 0x4f0
  41b240:	e2822004 	add	r2, r2, #4
  41b244:	e59f3038 	ldr	r3, [pc, #56]	; 41b284 <cvInsertNodeIntoTree+0xd0>
  41b248:	e08f3003 	add	r3, pc, r3
  41b24c:	fa0062c0 	blx	433d54 <__assert_func>
  41b250:	e3520000 	cmp	r2, #0
  41b254:	1582c008 	strne	ip, [r2, #8]
  41b258:	e583c014 	str	ip, [r3, #20]
  41b25c:	e28dd00c 	add	sp, sp, #12
  41b260:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41b264:	e12fff1e 	bx	lr
  41b268:	00000eef 	.word	0x00000eef
  41b26c:	1fbe5694 	.word	0x1fbe5694
  41b270:	00025228 	.word	0x00025228
  41b274:	00024154 	.word	0x00024154
  41b278:	00024118 	.word	0x00024118
  41b27c:	00000ef4 	.word	0x00000ef4
  41b280:	00023bc0 	.word	0x00023bc0
  41b284:	00024998 	.word	0x00024998

0041b288 <cvRemoveNodeFromTree>:
  41b288:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41b28c:	e24dd00c 	sub	sp, sp, #12
  41b290:	e3500000 	cmp	r0, #0
  41b294:	1a00000c 	bne	41b2cc <cvRemoveNodeFromTree+0x44>
  41b298:	e59f30e8 	ldr	r3, [pc, #232]	; 41b388 <cvRemoveNodeFromTree+0x100>
  41b29c:	e58d3000 	str	r3, [sp]
  41b2a0:	e3e0001a 	mvn	r0, #26
  41b2a4:	e59f10e0 	ldr	r1, [pc, #224]	; 41b38c <cvRemoveNodeFromTree+0x104>
  41b2a8:	e08f1001 	add	r1, pc, r1
  41b2ac:	e2811e49 	add	r1, r1, #1168	; 0x490
  41b2b0:	e281100c 	add	r1, r1, #12
  41b2b4:	e59f20d4 	ldr	r2, [pc, #212]	; 41b390 <cvRemoveNodeFromTree+0x108>
  41b2b8:	e08f2002 	add	r2, pc, r2
  41b2bc:	e59f30d0 	ldr	r3, [pc, #208]	; 41b394 <cvRemoveNodeFromTree+0x10c>
  41b2c0:	e08f3003 	add	r3, pc, r3
  41b2c4:	ebffddf7 	bl	412aa8 <cvError>
  41b2c8:	ea00002b 	b	41b37c <cvRemoveNodeFromTree+0xf4>
  41b2cc:	e1500001 	cmp	r0, r1
  41b2d0:	1a00000c 	bne	41b308 <cvRemoveNodeFromTree+0x80>
  41b2d4:	e59f30bc 	ldr	r3, [pc, #188]	; 41b398 <cvRemoveNodeFromTree+0x110>
  41b2d8:	e58d3000 	str	r3, [sp]
  41b2dc:	e3e00004 	mvn	r0, #4
  41b2e0:	e59f10b4 	ldr	r1, [pc, #180]	; 41b39c <cvRemoveNodeFromTree+0x114>
  41b2e4:	e08f1001 	add	r1, pc, r1
  41b2e8:	e2811e49 	add	r1, r1, #1168	; 0x490
  41b2ec:	e281100c 	add	r1, r1, #12
  41b2f0:	e59f20a8 	ldr	r2, [pc, #168]	; 41b3a0 <cvRemoveNodeFromTree+0x118>
  41b2f4:	e08f2002 	add	r2, pc, r2
  41b2f8:	e59f30a4 	ldr	r3, [pc, #164]	; 41b3a4 <cvRemoveNodeFromTree+0x11c>
  41b2fc:	e08f3003 	add	r3, pc, r3
  41b300:	ebffdde8 	bl	412aa8 <cvError>
  41b304:	ea00001c 	b	41b37c <cvRemoveNodeFromTree+0xf4>
  41b308:	e590300c 	ldr	r3, [r0, #12]
  41b30c:	e3530000 	cmp	r3, #0
  41b310:	15902008 	ldrne	r2, [r0, #8]
  41b314:	15832008 	strne	r2, [r3, #8]
  41b318:	e5903008 	ldr	r3, [r0, #8]
  41b31c:	e3530000 	cmp	r3, #0
  41b320:	1590200c 	ldrne	r2, [r0, #12]
  41b324:	1583200c 	strne	r2, [r3, #12]
  41b328:	1a000013 	bne	41b37c <cvRemoveNodeFromTree+0xf4>
  41b32c:	e5903010 	ldr	r3, [r0, #16]
  41b330:	e3530000 	cmp	r3, #0
  41b334:	01a03001 	moveq	r3, r1
  41b338:	e3530000 	cmp	r3, #0
  41b33c:	0a00000e 	beq	41b37c <cvRemoveNodeFromTree+0xf4>
  41b340:	e5932014 	ldr	r2, [r3, #20]
  41b344:	e1500002 	cmp	r0, r2
  41b348:	0a000009 	beq	41b374 <cvRemoveNodeFromTree+0xec>
  41b34c:	e59f0054 	ldr	r0, [pc, #84]	; 41b3a8 <cvRemoveNodeFromTree+0x120>
  41b350:	e08f0000 	add	r0, pc, r0
  41b354:	e59f1050 	ldr	r1, [pc, #80]	; 41b3ac <cvRemoveNodeFromTree+0x124>
  41b358:	e59f2050 	ldr	r2, [pc, #80]	; 41b3b0 <cvRemoveNodeFromTree+0x128>
  41b35c:	e08f2002 	add	r2, pc, r2
  41b360:	e2822e52 	add	r2, r2, #1312	; 0x520
  41b364:	e2822004 	add	r2, r2, #4
  41b368:	e59f3044 	ldr	r3, [pc, #68]	; 41b3b4 <cvRemoveNodeFromTree+0x12c>
  41b36c:	e08f3003 	add	r3, pc, r3
  41b370:	fa006277 	blx	433d54 <__assert_func>
  41b374:	e590200c 	ldr	r2, [r0, #12]
  41b378:	e5832014 	str	r2, [r3, #20]
  41b37c:	e28dd00c 	add	sp, sp, #12
  41b380:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41b384:	e12fff1e 	bx	lr
  41b388:	00000f0a 	.word	0x00000f0a
  41b38c:	1fbe55c4 	.word	0x1fbe55c4
  41b390:	00025158 	.word	0x00025158
  41b394:	00024084 	.word	0x00024084
  41b398:	00000f0d 	.word	0x00000f0d
  41b39c:	1fbe5588 	.word	0x1fbe5588
  41b3a0:	00024904 	.word	0x00024904
  41b3a4:	00024048 	.word	0x00024048
  41b3a8:	00023ff4 	.word	0x00023ff4
  41b3ac:	00000f1c 	.word	0x00000f1c
  41b3b0:	00023a9c 	.word	0x00023a9c
  41b3b4:	000248ac 	.word	0x000248ac

0041b3b8 <cvInitTreeNodeIterator>:
  41b3b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41b3bc:	e24dd00c 	sub	sp, sp, #12
  41b3c0:	e3510000 	cmp	r1, #0
  41b3c4:	13500000 	cmpne	r0, #0
  41b3c8:	1a00000c 	bne	41b400 <cvInitTreeNodeIterator+0x48>
  41b3cc:	e59f3088 	ldr	r3, [pc, #136]	; 41b45c <cvInitTreeNodeIterator+0xa4>
  41b3d0:	e58d3000 	str	r3, [sp]
  41b3d4:	e3e0001a 	mvn	r0, #26
  41b3d8:	e59f1080 	ldr	r1, [pc, #128]	; 41b460 <cvInitTreeNodeIterator+0xa8>
  41b3dc:	e08f1001 	add	r1, pc, r1
  41b3e0:	e2811e4b 	add	r1, r1, #1200	; 0x4b0
  41b3e4:	e2811004 	add	r1, r1, #4
  41b3e8:	e59f2074 	ldr	r2, [pc, #116]	; 41b464 <cvInitTreeNodeIterator+0xac>
  41b3ec:	e08f2002 	add	r2, pc, r2
  41b3f0:	e59f3070 	ldr	r3, [pc, #112]	; 41b468 <cvInitTreeNodeIterator+0xb0>
  41b3f4:	e08f3003 	add	r3, pc, r3
  41b3f8:	ebffddaa 	bl	412aa8 <cvError>
  41b3fc:	ea000013 	b	41b450 <cvInitTreeNodeIterator+0x98>
  41b400:	e1a03000 	mov	r3, r0
  41b404:	e3520000 	cmp	r2, #0
  41b408:	aa00000c 	bge	41b440 <cvInitTreeNodeIterator+0x88>
  41b40c:	e59f3058 	ldr	r3, [pc, #88]	; 41b46c <cvInitTreeNodeIterator+0xb4>
  41b410:	e58d3000 	str	r3, [sp]
  41b414:	e3e000d2 	mvn	r0, #210	; 0xd2
  41b418:	e59f1050 	ldr	r1, [pc, #80]	; 41b470 <cvInitTreeNodeIterator+0xb8>
  41b41c:	e08f1001 	add	r1, pc, r1
  41b420:	e2811e4b 	add	r1, r1, #1200	; 0x4b0
  41b424:	e2811004 	add	r1, r1, #4
  41b428:	e59f2044 	ldr	r2, [pc, #68]	; 41b474 <cvInitTreeNodeIterator+0xbc>
  41b42c:	e08f2002 	add	r2, pc, r2
  41b430:	e59f3040 	ldr	r3, [pc, #64]	; 41b478 <cvInitTreeNodeIterator+0xc0>
  41b434:	e08f3003 	add	r3, pc, r3
  41b438:	ebffdd9a 	bl	412aa8 <cvError>
  41b43c:	ea000003 	b	41b450 <cvInitTreeNodeIterator+0x98>
  41b440:	e5831000 	str	r1, [r3]
  41b444:	e3a01000 	mov	r1, #0
  41b448:	e5801004 	str	r1, [r0, #4]
  41b44c:	e5802008 	str	r2, [r0, #8]
  41b450:	e28dd00c 	add	sp, sp, #12
  41b454:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41b458:	e12fff1e 	bx	lr
  41b45c:	00000f2e 	.word	0x00000f2e
  41b460:	1fbe5490 	.word	0x1fbe5490
  41b464:	00025024 	.word	0x00025024
  41b468:	00023f50 	.word	0x00023f50
  41b46c:	00000f31 	.word	0x00000f31
  41b470:	1fbe5450 	.word	0x1fbe5450
  41b474:	00024fe4 	.word	0x00024fe4
  41b478:	00023f10 	.word	0x00023f10

0041b47c <cvNextTreeNode>:
  41b47c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41b480:	e24dd00c 	sub	sp, sp, #12
  41b484:	e250c000 	subs	ip, r0, #0
  41b488:	1a00000d 	bne	41b4c4 <cvNextTreeNode+0x48>
  41b48c:	e59f30c8 	ldr	r3, [pc, #200]	; 41b55c <cvNextTreeNode+0xe0>
  41b490:	e58d3000 	str	r3, [sp]
  41b494:	e3e0001a 	mvn	r0, #26
  41b498:	e59f10c0 	ldr	r1, [pc, #192]	; 41b560 <cvNextTreeNode+0xe4>
  41b49c:	e08f1001 	add	r1, pc, r1
  41b4a0:	e2811d13 	add	r1, r1, #1216	; 0x4c0
  41b4a4:	e281100c 	add	r1, r1, #12
  41b4a8:	e59f20b4 	ldr	r2, [pc, #180]	; 41b564 <cvNextTreeNode+0xe8>
  41b4ac:	e08f2002 	add	r2, pc, r2
  41b4b0:	e59f30b0 	ldr	r3, [pc, #176]	; 41b568 <cvNextTreeNode+0xec>
  41b4b4:	e08f3003 	add	r3, pc, r3
  41b4b8:	ebffdd7a 	bl	412aa8 <cvError>
  41b4bc:	e3a00000 	mov	r0, #0
  41b4c0:	ea000022 	b	41b550 <cvNextTreeNode+0xd4>
  41b4c4:	e59c0000 	ldr	r0, [ip]
  41b4c8:	e59c2004 	ldr	r2, [ip, #4]
  41b4cc:	e3500000 	cmp	r0, #0
  41b4d0:	0a00001a 	beq	41b540 <cvNextTreeNode+0xc4>
  41b4d4:	e5903014 	ldr	r3, [r0, #20]
  41b4d8:	e3530000 	cmp	r3, #0
  41b4dc:	0a000009 	beq	41b508 <cvNextTreeNode+0x8c>
  41b4e0:	e2821001 	add	r1, r2, #1
  41b4e4:	e59ce008 	ldr	lr, [ip, #8]
  41b4e8:	e151000e 	cmp	r1, lr
  41b4ec:	ba000015 	blt	41b548 <cvNextTreeNode+0xcc>
  41b4f0:	e1a03000 	mov	r3, r0
  41b4f4:	ea000004 	b	41b50c <cvNextTreeNode+0x90>
  41b4f8:	e5933010 	ldr	r3, [r3, #16]
  41b4fc:	e2522001 	subs	r2, r2, #1
  41b500:	5a000001 	bpl	41b50c <cvNextTreeNode+0x90>
  41b504:	ea000004 	b	41b51c <cvNextTreeNode+0xa0>
  41b508:	e1a03000 	mov	r3, r0
  41b50c:	e593100c 	ldr	r1, [r3, #12]
  41b510:	e3510000 	cmp	r1, #0
  41b514:	0afffff7 	beq	41b4f8 <cvNextTreeNode+0x7c>
  41b518:	ea000000 	b	41b520 <cvNextTreeNode+0xa4>
  41b51c:	e3a03000 	mov	r3, #0
  41b520:	e3530000 	cmp	r3, #0
  41b524:	0a000003 	beq	41b538 <cvNextTreeNode+0xbc>
  41b528:	e59c1008 	ldr	r1, [ip, #8]
  41b52c:	e3510000 	cmp	r1, #0
  41b530:	1593300c 	ldrne	r3, [r3, #12]
  41b534:	03a03000 	moveq	r3, #0
  41b538:	e1a01002 	mov	r1, r2
  41b53c:	ea000001 	b	41b548 <cvNextTreeNode+0xcc>
  41b540:	e1a01002 	mov	r1, r2
  41b544:	e1a03000 	mov	r3, r0
  41b548:	e58c3000 	str	r3, [ip]
  41b54c:	e58c1004 	str	r1, [ip, #4]
  41b550:	e28dd00c 	add	sp, sp, #12
  41b554:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41b558:	e12fff1e 	bx	lr
  41b55c:	00000f48 	.word	0x00000f48
  41b560:	1fbe53d0 	.word	0x1fbe53d0
  41b564:	00021da4 	.word	0x00021da4
  41b568:	00023e90 	.word	0x00023e90

0041b56c <cvTreeToNodeSeq>:
  41b56c:	e92d4030 	push	{r4, r5, lr}
  41b570:	e24dd01c 	sub	sp, sp, #28
  41b574:	e2523000 	subs	r3, r2, #0
  41b578:	1a00000d 	bne	41b5b4 <cvTreeToNodeSeq+0x48>
  41b57c:	e59f3110 	ldr	r3, [pc, #272]	; 41b694 <cvTreeToNodeSeq+0x128>
  41b580:	e58d3000 	str	r3, [sp]
  41b584:	e3e0001a 	mvn	r0, #26
  41b588:	e59f1108 	ldr	r1, [pc, #264]	; 41b698 <cvTreeToNodeSeq+0x12c>
  41b58c:	e08f1001 	add	r1, pc, r1
  41b590:	e2811e4d 	add	r1, r1, #1232	; 0x4d0
  41b594:	e281100c 	add	r1, r1, #12
  41b598:	e59f20fc 	ldr	r2, [pc, #252]	; 41b69c <cvTreeToNodeSeq+0x130>
  41b59c:	e08f2002 	add	r2, pc, r2
  41b5a0:	e59f30f8 	ldr	r3, [pc, #248]	; 41b6a0 <cvTreeToNodeSeq+0x134>
  41b5a4:	e08f3003 	add	r3, pc, r3
  41b5a8:	ebffdd3e 	bl	412aa8 <cvError>
  41b5ac:	e3a04000 	mov	r4, #0
  41b5b0:	ea000033 	b	41b684 <cvTreeToNodeSeq+0x118>
  41b5b4:	e1a05000 	mov	r5, r0
  41b5b8:	e3a00000 	mov	r0, #0
  41b5bc:	e3a02004 	mov	r2, #4
  41b5c0:	ebffe197 	bl	413c24 <cvCreateSeq>
  41b5c4:	e1a04000 	mov	r4, r0
  41b5c8:	ebffdd05 	bl	4129e4 <cvGetErrStatus>
  41b5cc:	e3500000 	cmp	r0, #0
  41b5d0:	aa00000c 	bge	41b608 <cvTreeToNodeSeq+0x9c>
  41b5d4:	e59f30c8 	ldr	r3, [pc, #200]	; 41b6a4 <cvTreeToNodeSeq+0x138>
  41b5d8:	e58d3000 	str	r3, [sp]
  41b5dc:	e3e00000 	mvn	r0, #0
  41b5e0:	e59f10c0 	ldr	r1, [pc, #192]	; 41b6a8 <cvTreeToNodeSeq+0x13c>
  41b5e4:	e08f1001 	add	r1, pc, r1
  41b5e8:	e2811e4d 	add	r1, r1, #1232	; 0x4d0
  41b5ec:	e281100c 	add	r1, r1, #12
  41b5f0:	e59f20b4 	ldr	r2, [pc, #180]	; 41b6ac <cvTreeToNodeSeq+0x140>
  41b5f4:	e08f2002 	add	r2, pc, r2
  41b5f8:	e59f30b0 	ldr	r3, [pc, #176]	; 41b6b0 <cvTreeToNodeSeq+0x144>
  41b5fc:	e08f3003 	add	r3, pc, r3
  41b600:	ebffdd28 	bl	412aa8 <cvError>
  41b604:	ea00001e 	b	41b684 <cvTreeToNodeSeq+0x118>
  41b608:	e3550000 	cmp	r5, #0
  41b60c:	0a00001c 	beq	41b684 <cvTreeToNodeSeq+0x118>
  41b610:	e28d000c 	add	r0, sp, #12
  41b614:	e1a01005 	mov	r1, r5
  41b618:	e3e02102 	mvn	r2, #-2147483648	; 0x80000000
  41b61c:	ebffff65 	bl	41b3b8 <cvInitTreeNodeIterator>
  41b620:	ebffdcef 	bl	4129e4 <cvGetErrStatus>
  41b624:	e3500000 	cmp	r0, #0
  41b628:	aa00000c 	bge	41b660 <cvTreeToNodeSeq+0xf4>
  41b62c:	e59f3080 	ldr	r3, [pc, #128]	; 41b6b4 <cvTreeToNodeSeq+0x148>
  41b630:	e58d3000 	str	r3, [sp]
  41b634:	e3e00000 	mvn	r0, #0
  41b638:	e59f1078 	ldr	r1, [pc, #120]	; 41b6b8 <cvTreeToNodeSeq+0x14c>
  41b63c:	e08f1001 	add	r1, pc, r1
  41b640:	e2811e4d 	add	r1, r1, #1232	; 0x4d0
  41b644:	e281100c 	add	r1, r1, #12
  41b648:	e59f206c 	ldr	r2, [pc, #108]	; 41b6bc <cvTreeToNodeSeq+0x150>
  41b64c:	e08f2002 	add	r2, pc, r2
  41b650:	e59f3068 	ldr	r3, [pc, #104]	; 41b6c0 <cvTreeToNodeSeq+0x154>
  41b654:	e08f3003 	add	r3, pc, r3
  41b658:	ebffdd12 	bl	412aa8 <cvError>
  41b65c:	ea000008 	b	41b684 <cvTreeToNodeSeq+0x118>
  41b660:	e28d000c 	add	r0, sp, #12
  41b664:	ebffff84 	bl	41b47c <cvNextTreeNode>
  41b668:	e58d0008 	str	r0, [sp, #8]
  41b66c:	e3500000 	cmp	r0, #0
  41b670:	0a000003 	beq	41b684 <cvTreeToNodeSeq+0x118>
  41b674:	e1a00004 	mov	r0, r4
  41b678:	e28d1008 	add	r1, sp, #8
  41b67c:	ebffe784 	bl	415494 <cvSeqPush>
  41b680:	eafffff6 	b	41b660 <cvTreeToNodeSeq+0xf4>
  41b684:	e1a00004 	mov	r0, r4
  41b688:	e28dd01c 	add	sp, sp, #28
  41b68c:	e8bd4030 	pop	{r4, r5, lr}
  41b690:	e12fff1e 	bx	lr
  41b694:	00000ebd 	.word	0x00000ebd
  41b698:	1fbe52e0 	.word	0x1fbe52e0
  41b69c:	00023e8c 	.word	0x00023e8c
  41b6a0:	00023da0 	.word	0x00023da0
  41b6a4:	00000ebf 	.word	0x00000ebf
  41b6a8:	1fbe5288 	.word	0x1fbe5288
  41b6ac:	000219dc 	.word	0x000219dc
  41b6b0:	00023d48 	.word	0x00023d48
  41b6b4:	00000ec3 	.word	0x00000ec3
  41b6b8:	1fbe5230 	.word	0x1fbe5230
  41b6bc:	00021984 	.word	0x00021984
  41b6c0:	00023cf0 	.word	0x00023cf0

0041b6c4 <cvPrevTreeNode>:
  41b6c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41b6c8:	e24dd00c 	sub	sp, sp, #12
  41b6cc:	e250e000 	subs	lr, r0, #0
  41b6d0:	1a00000d 	bne	41b70c <cvPrevTreeNode+0x48>
  41b6d4:	e59f30ac 	ldr	r3, [pc, #172]	; 41b788 <cvPrevTreeNode+0xc4>
  41b6d8:	e58d3000 	str	r3, [sp]
  41b6dc:	e3e0001a 	mvn	r0, #26
  41b6e0:	e59f10a4 	ldr	r1, [pc, #164]	; 41b78c <cvPrevTreeNode+0xc8>
  41b6e4:	e08f1001 	add	r1, pc, r1
  41b6e8:	e2811e4e 	add	r1, r1, #1248	; 0x4e0
  41b6ec:	e281100c 	add	r1, r1, #12
  41b6f0:	e59f2098 	ldr	r2, [pc, #152]	; 41b790 <cvPrevTreeNode+0xcc>
  41b6f4:	e08f2002 	add	r2, pc, r2
  41b6f8:	e59f3094 	ldr	r3, [pc, #148]	; 41b794 <cvPrevTreeNode+0xd0>
  41b6fc:	e08f3003 	add	r3, pc, r3
  41b700:	ebffdce8 	bl	412aa8 <cvError>
  41b704:	e3a00000 	mov	r0, #0
  41b708:	ea00001b 	b	41b77c <cvPrevTreeNode+0xb8>
  41b70c:	e59e0000 	ldr	r0, [lr]
  41b710:	e59e1004 	ldr	r1, [lr, #4]
  41b714:	e3500000 	cmp	r0, #0
  41b718:	0a000014 	beq	41b770 <cvPrevTreeNode+0xac>
  41b71c:	e5902008 	ldr	r2, [r0, #8]
  41b720:	e3520000 	cmp	r2, #0
  41b724:	1a00000a 	bne	41b754 <cvPrevTreeNode+0x90>
  41b728:	e5903010 	ldr	r3, [r0, #16]
  41b72c:	e2511001 	subs	r1, r1, #1
  41b730:	51a02003 	movpl	r2, r3
  41b734:	ea00000e 	b	41b774 <cvPrevTreeNode+0xb0>
  41b738:	e2811001 	add	r1, r1, #1
  41b73c:	e1a02003 	mov	r2, r3
  41b740:	ea000000 	b	41b748 <cvPrevTreeNode+0x84>
  41b744:	e1a02003 	mov	r2, r3
  41b748:	e592300c 	ldr	r3, [r2, #12]
  41b74c:	e3530000 	cmp	r3, #0
  41b750:	1afffffb 	bne	41b744 <cvPrevTreeNode+0x80>
  41b754:	e5923014 	ldr	r3, [r2, #20]
  41b758:	e3530000 	cmp	r3, #0
  41b75c:	0a000004 	beq	41b774 <cvPrevTreeNode+0xb0>
  41b760:	e59ec008 	ldr	ip, [lr, #8]
  41b764:	e15c0001 	cmp	ip, r1
  41b768:	cafffff2 	bgt	41b738 <cvPrevTreeNode+0x74>
  41b76c:	ea000000 	b	41b774 <cvPrevTreeNode+0xb0>
  41b770:	e1a02000 	mov	r2, r0
  41b774:	e58e2000 	str	r2, [lr]
  41b778:	e58e1004 	str	r1, [lr, #4]
  41b77c:	e28dd00c 	add	sp, sp, #12
  41b780:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41b784:	e12fff1e 	bx	lr
  41b788:	00000f79 	.word	0x00000f79
  41b78c:	1fbe5188 	.word	0x1fbe5188
  41b790:	00024d1c 	.word	0x00024d1c
  41b794:	00023c48 	.word	0x00023c48

0041b798 <_ZL14icvDefaultFreePvS_>:
  41b798:	e310001f 	tst	r0, #31
  41b79c:	1a000004 	bne	41b7b4 <_ZL14icvDefaultFreePvS_+0x1c>
  41b7a0:	e92d4008 	push	{r3, lr}
  41b7a4:	e5100004 	ldr	r0, [r0, #-4]
  41b7a8:	fa00643f 	blx	4348ac <free>
  41b7ac:	e3a00000 	mov	r0, #0
  41b7b0:	ea000001 	b	41b7bc <_ZL14icvDefaultFreePvS_+0x24>
  41b7b4:	e3e00030 	mvn	r0, #48	; 0x30
  41b7b8:	e12fff1e 	bx	lr
  41b7bc:	e8bd4008 	pop	{r3, lr}
  41b7c0:	e12fff1e 	bx	lr

0041b7c4 <_ZL15icvDefaultAllocjPv>:
  41b7c4:	e92d4008 	push	{r3, lr}
  41b7c8:	e3500a01 	cmp	r0, #4096	; 0x1000
  41b7cc:	23a03040 	movcs	r3, #64	; 0x40
  41b7d0:	33a03020 	movcc	r3, #32
  41b7d4:	e0830000 	add	r0, r3, r0
  41b7d8:	e2800004 	add	r0, r0, #4
  41b7dc:	fa00642e 	blx	43489c <malloc>
  41b7e0:	e2503000 	subs	r3, r0, #0
  41b7e4:	12830024 	addne	r0, r3, #36	; 0x24
  41b7e8:	13c0001f 	bicne	r0, r0, #31
  41b7ec:	15003004 	strne	r3, [r0, #-4]
  41b7f0:	03a00000 	moveq	r0, #0
  41b7f4:	e8bd4008 	pop	{r3, lr}
  41b7f8:	e12fff1e 	bx	lr

0041b7fc <cvSetMemoryManager>:
  41b7fc:	e1a0c000 	mov	ip, r0
  41b800:	e1a03001 	mov	r3, r1
  41b804:	e2700001 	rsbs	r0, r0, #1
  41b808:	33a00000 	movcc	r0, #0
  41b80c:	e2711001 	rsbs	r1, r1, #1
  41b810:	33a01000 	movcc	r1, #0
  41b814:	e1500001 	cmp	r0, r1
  41b818:	0a00000c 	beq	41b850 <cvSetMemoryManager+0x54>
  41b81c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41b820:	e24dd00c 	sub	sp, sp, #12
  41b824:	e3a03059 	mov	r3, #89	; 0x59
  41b828:	e58d3000 	str	r3, [sp]
  41b82c:	e3e0001a 	mvn	r0, #26
  41b830:	e59f1064 	ldr	r1, [pc, #100]	; 41b89c <cvSetMemoryManager+0xa0>
  41b834:	e08f1001 	add	r1, pc, r1
  41b838:	e59f2060 	ldr	r2, [pc, #96]	; 41b8a0 <cvSetMemoryManager+0xa4>
  41b83c:	e08f2002 	add	r2, pc, r2
  41b840:	e59f305c 	ldr	r3, [pc, #92]	; 41b8a4 <cvSetMemoryManager+0xa8>
  41b844:	e08f3003 	add	r3, pc, r3
  41b848:	ebffdc96 	bl	412aa8 <cvError>
  41b84c:	ea00000f 	b	41b890 <cvSetMemoryManager+0x94>
  41b850:	e35c0000 	cmp	ip, #0
  41b854:	059fc04c 	ldreq	ip, [pc, #76]	; 41b8a8 <cvSetMemoryManager+0xac>
  41b858:	008fc00c 	addeq	ip, pc, ip
  41b85c:	e59f1048 	ldr	r1, [pc, #72]	; 41b8ac <cvSetMemoryManager+0xb0>
  41b860:	e08f1001 	add	r1, pc, r1
  41b864:	e581c000 	str	ip, [r1]
  41b868:	e3530000 	cmp	r3, #0
  41b86c:	059f303c 	ldreq	r3, [pc, #60]	; 41b8b0 <cvSetMemoryManager+0xb4>
  41b870:	008f3003 	addeq	r3, pc, r3
  41b874:	e59f1038 	ldr	r1, [pc, #56]	; 41b8b4 <cvSetMemoryManager+0xb8>
  41b878:	e08f1001 	add	r1, pc, r1
  41b87c:	e5813004 	str	r3, [r1, #4]
  41b880:	e59f3030 	ldr	r3, [pc, #48]	; 41b8b8 <cvSetMemoryManager+0xbc>
  41b884:	e08f3003 	add	r3, pc, r3
  41b888:	e5832000 	str	r2, [r3]
  41b88c:	e12fff1e 	bx	lr
  41b890:	e28dd00c 	add	sp, sp, #12
  41b894:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41b898:	e12fff1e 	bx	lr
  41b89c:	1fbe5534 	.word	0x1fbe5534
  41b8a0:	000243f4 	.word	0x000243f4
  41b8a4:	00024420 	.word	0x00024420
  41b8a8:	ffffff64 	.word	0xffffff64
  41b8ac:	1fbe552c 	.word	0x1fbe552c
  41b8b0:	ffffff20 	.word	0xffffff20
  41b8b4:	1fbe5514 	.word	0x1fbe5514
  41b8b8:	1fbe6464 	.word	0x1fbe6464

0041b8bc <cvAlloc>:
  41b8bc:	e92d4010 	push	{r4, lr}
  41b8c0:	e24dd008 	sub	sp, sp, #8
  41b8c4:	e3500101 	cmp	r0, #1073741824	; 0x40000000
  41b8c8:	9a00000c 	bls	41b900 <cvAlloc+0x44>
  41b8cc:	e3a0306d 	mov	r3, #109	; 0x6d
  41b8d0:	e58d3000 	str	r3, [sp]
  41b8d4:	e3e000d2 	mvn	r0, #210	; 0xd2
  41b8d8:	e59f1084 	ldr	r1, [pc, #132]	; 41b964 <cvAlloc+0xa8>
  41b8dc:	e08f1001 	add	r1, pc, r1
  41b8e0:	e2811014 	add	r1, r1, #20
  41b8e4:	e59f207c 	ldr	r2, [pc, #124]	; 41b968 <cvAlloc+0xac>
  41b8e8:	e08f2002 	add	r2, pc, r2
  41b8ec:	e59f3078 	ldr	r3, [pc, #120]	; 41b96c <cvAlloc+0xb0>
  41b8f0:	e08f3003 	add	r3, pc, r3
  41b8f4:	ebffdc6b 	bl	412aa8 <cvError>
  41b8f8:	e3a04000 	mov	r4, #0
  41b8fc:	ea000014 	b	41b954 <cvAlloc+0x98>
  41b900:	e59f3068 	ldr	r3, [pc, #104]	; 41b970 <cvAlloc+0xb4>
  41b904:	e08f3003 	add	r3, pc, r3
  41b908:	e5931000 	ldr	r1, [r3]
  41b90c:	e59f3060 	ldr	r3, [pc, #96]	; 41b974 <cvAlloc+0xb8>
  41b910:	e08f3003 	add	r3, pc, r3
  41b914:	e593c000 	ldr	ip, [r3]
  41b918:	e1a0e00f 	mov	lr, pc
  41b91c:	e12fff1c 	bx	ip
  41b920:	e2504000 	subs	r4, r0, #0
  41b924:	1a00000a 	bne	41b954 <cvAlloc+0x98>
  41b928:	e3a03071 	mov	r3, #113	; 0x71
  41b92c:	e58d3000 	str	r3, [sp]
  41b930:	e3e00003 	mvn	r0, #3
  41b934:	e59f103c 	ldr	r1, [pc, #60]	; 41b978 <cvAlloc+0xbc>
  41b938:	e08f1001 	add	r1, pc, r1
  41b93c:	e2811014 	add	r1, r1, #20
  41b940:	e59f2034 	ldr	r2, [pc, #52]	; 41b97c <cvAlloc+0xc0>
  41b944:	e08f2002 	add	r2, pc, r2
  41b948:	e59f3030 	ldr	r3, [pc, #48]	; 41b980 <cvAlloc+0xc4>
  41b94c:	e08f3003 	add	r3, pc, r3
  41b950:	ebffdc54 	bl	412aa8 <cvError>
  41b954:	e1a00004 	mov	r0, r4
  41b958:	e28dd008 	add	sp, sp, #8
  41b95c:	e8bd4010 	pop	{r4, lr}
  41b960:	e12fff1e 	bx	lr
  41b964:	1fbe548c 	.word	0x1fbe548c
  41b968:	00024398 	.word	0x00024398
  41b96c:	00024374 	.word	0x00024374
  41b970:	1fbe63e4 	.word	0x1fbe63e4
  41b974:	1fbe547c 	.word	0x1fbe547c
  41b978:	1fbe5430 	.word	0x1fbe5430
  41b97c:	00024370 	.word	0x00024370
  41b980:	00024318 	.word	0x00024318

0041b984 <cvFree_>:
  41b984:	e3500000 	cmp	r0, #0
  41b988:	012fff1e 	bxeq	lr
  41b98c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  41b990:	e24dd00c 	sub	sp, sp, #12
  41b994:	e59f3054 	ldr	r3, [pc, #84]	; 41b9f0 <cvFree_+0x6c>
  41b998:	e08f3003 	add	r3, pc, r3
  41b99c:	e5931000 	ldr	r1, [r3]
  41b9a0:	e59f304c 	ldr	r3, [pc, #76]	; 41b9f4 <cvFree_+0x70>
  41b9a4:	e08f3003 	add	r3, pc, r3
  41b9a8:	e593c004 	ldr	ip, [r3, #4]
  41b9ac:	e1a0e00f 	mov	lr, pc
  41b9b0:	e12fff1c 	bx	ip
  41b9b4:	e3500000 	cmp	r0, #0
  41b9b8:	aa000009 	bge	41b9e4 <cvFree_+0x60>
  41b9bc:	e3a03083 	mov	r3, #131	; 0x83
  41b9c0:	e58d3000 	str	r3, [sp]
  41b9c4:	e59f102c 	ldr	r1, [pc, #44]	; 41b9f8 <cvFree_+0x74>
  41b9c8:	e08f1001 	add	r1, pc, r1
  41b9cc:	e281101c 	add	r1, r1, #28
  41b9d0:	e59f2024 	ldr	r2, [pc, #36]	; 41b9fc <cvFree_+0x78>
  41b9d4:	e08f2002 	add	r2, pc, r2
  41b9d8:	e59f3020 	ldr	r3, [pc, #32]	; 41ba00 <cvFree_+0x7c>
  41b9dc:	e08f3003 	add	r3, pc, r3
  41b9e0:	ebffdc30 	bl	412aa8 <cvError>
  41b9e4:	e28dd00c 	add	sp, sp, #12
  41b9e8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  41b9ec:	e12fff1e 	bx	lr
  41b9f0:	1fbe6350 	.word	0x1fbe6350
  41b9f4:	1fbe53e8 	.word	0x1fbe53e8
  41b9f8:	1fbe53a0 	.word	0x1fbe53a0
  41b9fc:	000242f0 	.word	0x000242f0
  41ba00:	00024288 	.word	0x00024288

0041ba04 <_Z14icvSet_8u_C1MRPhiPKhi6CvSizeS1_>:
  41ba04:	e92d4010 	push	{r4, lr}
  41ba08:	e24dd010 	sub	sp, sp, #16
  41ba0c:	e1a04000 	mov	r4, r0
  41ba10:	e1a0e001 	mov	lr, r1
  41ba14:	e59f103c 	ldr	r1, [pc, #60]	; 41ba58 <_Z14icvSet_8u_C1MRPhiPKhi6CvSizeS1_+0x54>
  41ba18:	e08f1001 	add	r1, pc, r1
  41ba1c:	e59f0038 	ldr	r0, [pc, #56]	; 41ba5c <_Z14icvSet_8u_C1MRPhiPKhi6CvSizeS1_+0x58>
  41ba20:	e791c000 	ldr	ip, [r1, r0]
  41ba24:	e28d1014 	add	r1, sp, #20
  41ba28:	e9910003 	ldmib	r1, {r0, r1}
  41ba2c:	e88d0003 	stm	sp, {r0, r1}
  41ba30:	e59d1020 	ldr	r1, [sp, #32]
  41ba34:	e58d1008 	str	r1, [sp, #8]
  41ba38:	e1a00004 	mov	r0, r4
  41ba3c:	e1a0100e 	mov	r1, lr
  41ba40:	e59cc000 	ldr	ip, [ip]
  41ba44:	e1a0e00f 	mov	lr, pc
  41ba48:	e12fff1c 	bx	ip
  41ba4c:	e28dd010 	add	sp, sp, #16
  41ba50:	e8bd4010 	pop	{r4, lr}
  41ba54:	e12fff1e 	bx	lr
  41ba58:	0002561c 	.word	0x0002561c
  41ba5c:	00000000 	.word	0x00000000

0041ba60 <_ZL16icvSet_8u_C1MR_fPhiPKhi6CvSizeS1_>:
  41ba60:	e92d4030 	push	{r4, r5, lr}
  41ba64:	e59dc014 	ldr	ip, [sp, #20]
  41ba68:	e5dc5000 	ldrb	r5, [ip]
  41ba6c:	ea000017 	b	41bad0 <_ZL16icvSet_8u_C1MR_fPhiPKhi6CvSizeS1_+0x70>
  41ba70:	e1a0e00c 	mov	lr, ip
  41ba74:	e7d2400c 	ldrb	r4, [r2, ip]
  41ba78:	e3540000 	cmp	r4, #0
  41ba7c:	17c0500c 	strbne	r5, [r0, ip]
  41ba80:	e28ee001 	add	lr, lr, #1
  41ba84:	e7d2400e 	ldrb	r4, [r2, lr]
  41ba88:	e3540000 	cmp	r4, #0
  41ba8c:	17c0500e 	strbne	r5, [r0, lr]
  41ba90:	e28cc002 	add	ip, ip, #2
  41ba94:	ea000000 	b	41ba9c <_ZL16icvSet_8u_C1MR_fPhiPKhi6CvSizeS1_+0x3c>
  41ba98:	e3a0c000 	mov	ip, #0
  41ba9c:	e59de00c 	ldr	lr, [sp, #12]
  41baa0:	e24e4002 	sub	r4, lr, #2
  41baa4:	e154000c 	cmp	r4, ip
  41baa8:	aafffff0 	bge	41ba70 <_ZL16icvSet_8u_C1MR_fPhiPKhi6CvSizeS1_+0x10>
  41baac:	ea000003 	b	41bac0 <_ZL16icvSet_8u_C1MR_fPhiPKhi6CvSizeS1_+0x60>
  41bab0:	e7d2400c 	ldrb	r4, [r2, ip]
  41bab4:	e3540000 	cmp	r4, #0
  41bab8:	17c0500c 	strbne	r5, [r0, ip]
  41babc:	e28cc001 	add	ip, ip, #1
  41bac0:	e15c000e 	cmp	ip, lr
  41bac4:	bafffff9 	blt	41bab0 <_ZL16icvSet_8u_C1MR_fPhiPKhi6CvSizeS1_+0x50>
  41bac8:	e0822003 	add	r2, r2, r3
  41bacc:	e0800001 	add	r0, r0, r1
  41bad0:	e59dc010 	ldr	ip, [sp, #16]
  41bad4:	e24ce001 	sub	lr, ip, #1
  41bad8:	e58de010 	str	lr, [sp, #16]
  41badc:	e35c0000 	cmp	ip, #0
  41bae0:	1affffec 	bne	41ba98 <_ZL16icvSet_8u_C1MR_fPhiPKhi6CvSizeS1_+0x38>
  41bae4:	e3a00000 	mov	r0, #0
  41bae8:	e8bd4030 	pop	{r4, r5, lr}
  41baec:	e12fff1e 	bx	lr

0041baf0 <_Z15icvSet_16s_C1MRPtiPKhi6CvSizePKt>:
  41baf0:	e92d4010 	push	{r4, lr}
  41baf4:	e24dd010 	sub	sp, sp, #16
  41baf8:	e1a04000 	mov	r4, r0
  41bafc:	e1a0e001 	mov	lr, r1
  41bb00:	e59f103c 	ldr	r1, [pc, #60]	; 41bb44 <_Z15icvSet_16s_C1MRPtiPKhi6CvSizePKt+0x54>
  41bb04:	e08f1001 	add	r1, pc, r1
  41bb08:	e59f0038 	ldr	r0, [pc, #56]	; 41bb48 <_Z15icvSet_16s_C1MRPtiPKhi6CvSizePKt+0x58>
  41bb0c:	e791c000 	ldr	ip, [r1, r0]
  41bb10:	e28d1014 	add	r1, sp, #20
  41bb14:	e9910003 	ldmib	r1, {r0, r1}
  41bb18:	e88d0003 	stm	sp, {r0, r1}
  41bb1c:	e59d1020 	ldr	r1, [sp, #32]
  41bb20:	e58d1008 	str	r1, [sp, #8]
  41bb24:	e1a00004 	mov	r0, r4
  41bb28:	e1a0100e 	mov	r1, lr
  41bb2c:	e59cc000 	ldr	ip, [ip]
  41bb30:	e1a0e00f 	mov	lr, pc
  41bb34:	e12fff1c 	bx	ip
  41bb38:	e28dd010 	add	sp, sp, #16
  41bb3c:	e8bd4010 	pop	{r4, lr}
  41bb40:	e12fff1e 	bx	lr
  41bb44:	00025530 	.word	0x00025530
  41bb48:	0000013c 	.word	0x0000013c

0041bb4c <_ZL17icvSet_16s_C1MR_fPtiPKhi6CvSizePKt>:
  41bb4c:	e92d4030 	push	{r4, r5, lr}
  41bb50:	e59dc014 	ldr	ip, [sp, #20]
  41bb54:	e1dc50b0 	ldrh	r5, [ip]
  41bb58:	e1a010a1 	lsr	r1, r1, #1
  41bb5c:	ea00001a 	b	41bbcc <_ZL17icvSet_16s_C1MR_fPtiPKhi6CvSizePKt+0x80>
  41bb60:	e1a0e00c 	mov	lr, ip
  41bb64:	e7d2400c 	ldrb	r4, [r2, ip]
  41bb68:	e3540000 	cmp	r4, #0
  41bb6c:	11a0408c 	lslne	r4, ip, #1
  41bb70:	118050b4 	strhne	r5, [r0, r4]
  41bb74:	e28ee001 	add	lr, lr, #1
  41bb78:	e7d2400e 	ldrb	r4, [r2, lr]
  41bb7c:	e3540000 	cmp	r4, #0
  41bb80:	11a0e08e 	lslne	lr, lr, #1
  41bb84:	118050be 	strhne	r5, [r0, lr]
  41bb88:	e28cc002 	add	ip, ip, #2
  41bb8c:	ea000000 	b	41bb94 <_ZL17icvSet_16s_C1MR_fPtiPKhi6CvSizePKt+0x48>
  41bb90:	e3a0c000 	mov	ip, #0
  41bb94:	e59de00c 	ldr	lr, [sp, #12]
  41bb98:	e24e4002 	sub	r4, lr, #2
  41bb9c:	e154000c 	cmp	r4, ip
  41bba0:	aaffffee 	bge	41bb60 <_ZL17icvSet_16s_C1MR_fPtiPKhi6CvSizePKt+0x14>
  41bba4:	ea000004 	b	41bbbc <_ZL17icvSet_16s_C1MR_fPtiPKhi6CvSizePKt+0x70>
  41bba8:	e7d2400c 	ldrb	r4, [r2, ip]
  41bbac:	e3540000 	cmp	r4, #0
  41bbb0:	11a0408c 	lslne	r4, ip, #1
  41bbb4:	118050b4 	strhne	r5, [r0, r4]
  41bbb8:	e28cc001 	add	ip, ip, #1
  41bbbc:	e15c000e 	cmp	ip, lr
  41bbc0:	bafffff8 	blt	41bba8 <_ZL17icvSet_16s_C1MR_fPtiPKhi6CvSizePKt+0x5c>
  41bbc4:	e0822003 	add	r2, r2, r3
  41bbc8:	e0800081 	add	r0, r0, r1, lsl #1
  41bbcc:	e59dc010 	ldr	ip, [sp, #16]
  41bbd0:	e24ce001 	sub	lr, ip, #1
  41bbd4:	e58de010 	str	lr, [sp, #16]
  41bbd8:	e35c0000 	cmp	ip, #0
  41bbdc:	1affffeb 	bne	41bb90 <_ZL17icvSet_16s_C1MR_fPtiPKhi6CvSizePKt+0x44>
  41bbe0:	e3a00000 	mov	r0, #0
  41bbe4:	e8bd4030 	pop	{r4, r5, lr}
  41bbe8:	e12fff1e 	bx	lr

0041bbec <_Z14icvSet_8u_C3MRPhiPKhi6CvSizeS1_>:
  41bbec:	e92d4010 	push	{r4, lr}
  41bbf0:	e24dd010 	sub	sp, sp, #16
  41bbf4:	e1a04000 	mov	r4, r0
  41bbf8:	e1a0e001 	mov	lr, r1
  41bbfc:	e59f103c 	ldr	r1, [pc, #60]	; 41bc40 <_Z14icvSet_8u_C3MRPhiPKhi6CvSizeS1_+0x54>
  41bc00:	e08f1001 	add	r1, pc, r1
  41bc04:	e59f0038 	ldr	r0, [pc, #56]	; 41bc44 <_Z14icvSet_8u_C3MRPhiPKhi6CvSizeS1_+0x58>
  41bc08:	e791c000 	ldr	ip, [r1, r0]
  41bc0c:	e28d1014 	add	r1, sp, #20
  41bc10:	e9910003 	ldmib	r1, {r0, r1}
  41bc14:	e88d0003 	stm	sp, {r0, r1}
  41bc18:	e59d1020 	ldr	r1, [sp, #32]
  41bc1c:	e58d1008 	str	r1, [sp, #8]
  41bc20:	e1a00004 	mov	r0, r4
  41bc24:	e1a0100e 	mov	r1, lr
  41bc28:	e59cc000 	ldr	ip, [ip]
  41bc2c:	e1a0e00f 	mov	lr, pc
  41bc30:	e12fff1c 	bx	ip
  41bc34:	e28dd010 	add	sp, sp, #16
  41bc38:	e8bd4010 	pop	{r4, lr}
  41bc3c:	e12fff1e 	bx	lr
  41bc40:	00025434 	.word	0x00025434
  41bc44:	00000094 	.word	0x00000094

0041bc48 <_ZL16icvSet_8u_C3MR_fPhiPKhi6CvSizeS1_>:
  41bc48:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41bc4c:	e59dc01c 	ldr	ip, [sp, #28]
  41bc50:	e5dc7000 	ldrb	r7, [ip]
  41bc54:	e5dc6001 	ldrb	r6, [ip, #1]
  41bc58:	e5dc5002 	ldrb	r5, [ip, #2]
  41bc5c:	ea000010 	b	41bca4 <_ZL16icvSet_8u_C3MR_fPhiPKhi6CvSizeS1_+0x5c>
  41bc60:	e7d2e00c 	ldrb	lr, [r2, ip]
  41bc64:	e35e0000 	cmp	lr, #0
  41bc68:	0a000005 	beq	41bc84 <_ZL16icvSet_8u_C3MR_fPhiPKhi6CvSizeS1_+0x3c>
  41bc6c:	e08ce08c 	add	lr, ip, ip, lsl #1
  41bc70:	e7c0700e 	strb	r7, [r0, lr]
  41bc74:	e28e4001 	add	r4, lr, #1
  41bc78:	e7c06004 	strb	r6, [r0, r4]
  41bc7c:	e28ee002 	add	lr, lr, #2
  41bc80:	e7c0500e 	strb	r5, [r0, lr]
  41bc84:	e28cc001 	add	ip, ip, #1
  41bc88:	ea000000 	b	41bc90 <_ZL16icvSet_8u_C3MR_fPhiPKhi6CvSizeS1_+0x48>
  41bc8c:	e3a0c000 	mov	ip, #0
  41bc90:	e59de014 	ldr	lr, [sp, #20]
  41bc94:	e15e000c 	cmp	lr, ip
  41bc98:	cafffff0 	bgt	41bc60 <_ZL16icvSet_8u_C3MR_fPhiPKhi6CvSizeS1_+0x18>
  41bc9c:	e0822003 	add	r2, r2, r3
  41bca0:	e0800001 	add	r0, r0, r1
  41bca4:	e59dc018 	ldr	ip, [sp, #24]
  41bca8:	e24ce001 	sub	lr, ip, #1
  41bcac:	e58de018 	str	lr, [sp, #24]
  41bcb0:	e35c0000 	cmp	ip, #0
  41bcb4:	1afffff4 	bne	41bc8c <_ZL16icvSet_8u_C3MR_fPhiPKhi6CvSizeS1_+0x44>
  41bcb8:	e3a00000 	mov	r0, #0
  41bcbc:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41bcc0:	e12fff1e 	bx	lr

0041bcc4 <_Z14icvSet_8u_C4MRPiiPKhi6CvSizePKi>:
  41bcc4:	e92d4010 	push	{r4, lr}
  41bcc8:	e24dd010 	sub	sp, sp, #16
  41bccc:	e1a04000 	mov	r4, r0
  41bcd0:	e1a0e001 	mov	lr, r1
  41bcd4:	e59f103c 	ldr	r1, [pc, #60]	; 41bd18 <_Z14icvSet_8u_C4MRPiiPKhi6CvSizePKi+0x54>
  41bcd8:	e08f1001 	add	r1, pc, r1
  41bcdc:	e59f0038 	ldr	r0, [pc, #56]	; 41bd1c <_Z14icvSet_8u_C4MRPiiPKhi6CvSizePKi+0x58>
  41bce0:	e791c000 	ldr	ip, [r1, r0]
  41bce4:	e28d1014 	add	r1, sp, #20
  41bce8:	e9910003 	ldmib	r1, {r0, r1}
  41bcec:	e88d0003 	stm	sp, {r0, r1}
  41bcf0:	e59d1020 	ldr	r1, [sp, #32]
  41bcf4:	e58d1008 	str	r1, [sp, #8]
  41bcf8:	e1a00004 	mov	r0, r4
  41bcfc:	e1a0100e 	mov	r1, lr
  41bd00:	e59cc000 	ldr	ip, [ip]
  41bd04:	e1a0e00f 	mov	lr, pc
  41bd08:	e12fff1c 	bx	ip
  41bd0c:	e28dd010 	add	sp, sp, #16
  41bd10:	e8bd4010 	pop	{r4, lr}
  41bd14:	e12fff1e 	bx	lr
  41bd18:	0002535c 	.word	0x0002535c
  41bd1c:	000000bc 	.word	0x000000bc

0041bd20 <_ZL16icvSet_8u_C4MR_fPiiPKhi6CvSizePKi>:
  41bd20:	e92d4030 	push	{r4, r5, lr}
  41bd24:	e59dc014 	ldr	ip, [sp, #20]
  41bd28:	e59c5000 	ldr	r5, [ip]
  41bd2c:	e1a01121 	lsr	r1, r1, #2
  41bd30:	ea000017 	b	41bd94 <_ZL16icvSet_8u_C4MR_fPiiPKhi6CvSizePKi+0x74>
  41bd34:	e1a0e00c 	mov	lr, ip
  41bd38:	e7d2400c 	ldrb	r4, [r2, ip]
  41bd3c:	e3540000 	cmp	r4, #0
  41bd40:	1780510c 	strne	r5, [r0, ip, lsl #2]
  41bd44:	e28ee001 	add	lr, lr, #1
  41bd48:	e7d2400e 	ldrb	r4, [r2, lr]
  41bd4c:	e3540000 	cmp	r4, #0
  41bd50:	1780510e 	strne	r5, [r0, lr, lsl #2]
  41bd54:	e28cc002 	add	ip, ip, #2
  41bd58:	ea000000 	b	41bd60 <_ZL16icvSet_8u_C4MR_fPiiPKhi6CvSizePKi+0x40>
  41bd5c:	e3a0c000 	mov	ip, #0
  41bd60:	e59de00c 	ldr	lr, [sp, #12]
  41bd64:	e24e4002 	sub	r4, lr, #2
  41bd68:	e154000c 	cmp	r4, ip
  41bd6c:	aafffff0 	bge	41bd34 <_ZL16icvSet_8u_C4MR_fPiiPKhi6CvSizePKi+0x14>
  41bd70:	ea000003 	b	41bd84 <_ZL16icvSet_8u_C4MR_fPiiPKhi6CvSizePKi+0x64>
  41bd74:	e7d2400c 	ldrb	r4, [r2, ip]
  41bd78:	e3540000 	cmp	r4, #0
  41bd7c:	1780510c 	strne	r5, [r0, ip, lsl #2]
  41bd80:	e28cc001 	add	ip, ip, #1
  41bd84:	e15c000e 	cmp	ip, lr
  41bd88:	bafffff9 	blt	41bd74 <_ZL16icvSet_8u_C4MR_fPiiPKhi6CvSizePKi+0x54>
  41bd8c:	e0822003 	add	r2, r2, r3
  41bd90:	e0800101 	add	r0, r0, r1, lsl #2
  41bd94:	e59dc010 	ldr	ip, [sp, #16]
  41bd98:	e24ce001 	sub	lr, ip, #1
  41bd9c:	e58de010 	str	lr, [sp, #16]
  41bda0:	e35c0000 	cmp	ip, #0
  41bda4:	1affffec 	bne	41bd5c <_ZL16icvSet_8u_C4MR_fPiiPKhi6CvSizePKi+0x3c>
  41bda8:	e3a00000 	mov	r0, #0
  41bdac:	e8bd4030 	pop	{r4, r5, lr}
  41bdb0:	e12fff1e 	bx	lr

0041bdb4 <_Z15icvSet_16s_C3MRPtiPKhi6CvSizePKt>:
  41bdb4:	e92d4010 	push	{r4, lr}
  41bdb8:	e24dd010 	sub	sp, sp, #16
  41bdbc:	e1a04000 	mov	r4, r0
  41bdc0:	e1a0e001 	mov	lr, r1
  41bdc4:	e59f103c 	ldr	r1, [pc, #60]	; 41be08 <_Z15icvSet_16s_C3MRPtiPKhi6CvSizePKt+0x54>
  41bdc8:	e08f1001 	add	r1, pc, r1
  41bdcc:	e59f0038 	ldr	r0, [pc, #56]	; 41be0c <_Z15icvSet_16s_C3MRPtiPKhi6CvSizePKt+0x58>
  41bdd0:	e791c000 	ldr	ip, [r1, r0]
  41bdd4:	e28d1014 	add	r1, sp, #20
  41bdd8:	e9910003 	ldmib	r1, {r0, r1}
  41bddc:	e88d0003 	stm	sp, {r0, r1}
  41bde0:	e59d1020 	ldr	r1, [sp, #32]
  41bde4:	e58d1008 	str	r1, [sp, #8]
  41bde8:	e1a00004 	mov	r0, r4
  41bdec:	e1a0100e 	mov	r1, lr
  41bdf0:	e59cc000 	ldr	ip, [ip]
  41bdf4:	e1a0e00f 	mov	lr, pc
  41bdf8:	e12fff1c 	bx	ip
  41bdfc:	e28dd010 	add	sp, sp, #16
  41be00:	e8bd4010 	pop	{r4, lr}
  41be04:	e12fff1e 	bx	lr
  41be08:	0002526c 	.word	0x0002526c
  41be0c:	0000005c 	.word	0x0000005c

0041be10 <_ZL17icvSet_16s_C3MR_fPtiPKhi6CvSizePKt>:
  41be10:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41be14:	e59dc01c 	ldr	ip, [sp, #28]
  41be18:	e1dc70b0 	ldrh	r7, [ip]
  41be1c:	e1dc60b2 	ldrh	r6, [ip, #2]
  41be20:	e1dc50b4 	ldrh	r5, [ip, #4]
  41be24:	e1a010a1 	lsr	r1, r1, #1
  41be28:	ea000011 	b	41be74 <_ZL17icvSet_16s_C3MR_fPtiPKhi6CvSizePKt+0x64>
  41be2c:	e7d2e00c 	ldrb	lr, [r2, ip]
  41be30:	e35e0000 	cmp	lr, #0
  41be34:	0a000006 	beq	41be54 <_ZL17icvSet_16s_C3MR_fPtiPKhi6CvSizePKt+0x44>
  41be38:	e08ce08c 	add	lr, ip, ip, lsl #1
  41be3c:	e1a0e08e 	lsl	lr, lr, #1
  41be40:	e18070be 	strh	r7, [r0, lr]
  41be44:	e28e4002 	add	r4, lr, #2
  41be48:	e18060b4 	strh	r6, [r0, r4]
  41be4c:	e28ee004 	add	lr, lr, #4
  41be50:	e18050be 	strh	r5, [r0, lr]
  41be54:	e28cc001 	add	ip, ip, #1
  41be58:	ea000000 	b	41be60 <_ZL17icvSet_16s_C3MR_fPtiPKhi6CvSizePKt+0x50>
  41be5c:	e3a0c000 	mov	ip, #0
  41be60:	e59de014 	ldr	lr, [sp, #20]
  41be64:	e15e000c 	cmp	lr, ip
  41be68:	caffffef 	bgt	41be2c <_ZL17icvSet_16s_C3MR_fPtiPKhi6CvSizePKt+0x1c>
  41be6c:	e0822003 	add	r2, r2, r3
  41be70:	e0800081 	add	r0, r0, r1, lsl #1
  41be74:	e59dc018 	ldr	ip, [sp, #24]
  41be78:	e24ce001 	sub	lr, ip, #1
  41be7c:	e58de018 	str	lr, [sp, #24]
  41be80:	e35c0000 	cmp	ip, #0
  41be84:	1afffff4 	bne	41be5c <_ZL17icvSet_16s_C3MR_fPtiPKhi6CvSizePKt+0x4c>
  41be88:	e3a00000 	mov	r0, #0
  41be8c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41be90:	e12fff1e 	bx	lr

0041be94 <_Z15icvSet_32f_C3MRPiiPKhi6CvSizePKi>:
  41be94:	e92d4010 	push	{r4, lr}
  41be98:	e24dd010 	sub	sp, sp, #16
  41be9c:	e1a04000 	mov	r4, r0
  41bea0:	e1a0e001 	mov	lr, r1
  41bea4:	e59f103c 	ldr	r1, [pc, #60]	; 41bee8 <_Z15icvSet_32f_C3MRPiiPKhi6CvSizePKi+0x54>
  41bea8:	e08f1001 	add	r1, pc, r1
  41beac:	e59f0038 	ldr	r0, [pc, #56]	; 41beec <_Z15icvSet_32f_C3MRPiiPKhi6CvSizePKi+0x58>
  41beb0:	e791c000 	ldr	ip, [r1, r0]
  41beb4:	e28d1014 	add	r1, sp, #20
  41beb8:	e9910003 	ldmib	r1, {r0, r1}
  41bebc:	e88d0003 	stm	sp, {r0, r1}
  41bec0:	e59d1020 	ldr	r1, [sp, #32]
  41bec4:	e58d1008 	str	r1, [sp, #8]
  41bec8:	e1a00004 	mov	r0, r4
  41becc:	e1a0100e 	mov	r1, lr
  41bed0:	e59cc000 	ldr	ip, [ip]
  41bed4:	e1a0e00f 	mov	lr, pc
  41bed8:	e12fff1c 	bx	ip
  41bedc:	e28dd010 	add	sp, sp, #16
  41bee0:	e8bd4010 	pop	{r4, lr}
  41bee4:	e12fff1e 	bx	lr
  41bee8:	0002518c 	.word	0x0002518c
  41beec:	000000a8 	.word	0x000000a8

0041bef0 <_ZL17icvSet_32f_C3MR_fPiiPKhi6CvSizePKi>:
  41bef0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41bef4:	e59dc01c 	ldr	ip, [sp, #28]
  41bef8:	e59c7000 	ldr	r7, [ip]
  41befc:	e59c6004 	ldr	r6, [ip, #4]
  41bf00:	e59c5008 	ldr	r5, [ip, #8]
  41bf04:	e1a01121 	lsr	r1, r1, #2
  41bf08:	ea000011 	b	41bf54 <_ZL17icvSet_32f_C3MR_fPiiPKhi6CvSizePKi+0x64>
  41bf0c:	e7d2e00c 	ldrb	lr, [r2, ip]
  41bf10:	e35e0000 	cmp	lr, #0
  41bf14:	0a000006 	beq	41bf34 <_ZL17icvSet_32f_C3MR_fPiiPKhi6CvSizePKi+0x44>
  41bf18:	e08ce08c 	add	lr, ip, ip, lsl #1
  41bf1c:	e1a0e10e 	lsl	lr, lr, #2
  41bf20:	e780700e 	str	r7, [r0, lr]
  41bf24:	e28e4004 	add	r4, lr, #4
  41bf28:	e7806004 	str	r6, [r0, r4]
  41bf2c:	e28ee008 	add	lr, lr, #8
  41bf30:	e780500e 	str	r5, [r0, lr]
  41bf34:	e28cc001 	add	ip, ip, #1
  41bf38:	ea000000 	b	41bf40 <_ZL17icvSet_32f_C3MR_fPiiPKhi6CvSizePKi+0x50>
  41bf3c:	e3a0c000 	mov	ip, #0
  41bf40:	e59de014 	ldr	lr, [sp, #20]
  41bf44:	e15e000c 	cmp	lr, ip
  41bf48:	caffffef 	bgt	41bf0c <_ZL17icvSet_32f_C3MR_fPiiPKhi6CvSizePKi+0x1c>
  41bf4c:	e0822003 	add	r2, r2, r3
  41bf50:	e0800101 	add	r0, r0, r1, lsl #2
  41bf54:	e59dc018 	ldr	ip, [sp, #24]
  41bf58:	e24ce001 	sub	lr, ip, #1
  41bf5c:	e58de018 	str	lr, [sp, #24]
  41bf60:	e35c0000 	cmp	ip, #0
  41bf64:	1afffff4 	bne	41bf3c <_ZL17icvSet_32f_C3MR_fPiiPKhi6CvSizePKi+0x4c>
  41bf68:	e3a00000 	mov	r0, #0
  41bf6c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41bf70:	e12fff1e 	bx	lr

0041bf74 <_Z15icvSet_32f_C4MRPiiPKhi6CvSizePKi>:
  41bf74:	e92d4010 	push	{r4, lr}
  41bf78:	e24dd010 	sub	sp, sp, #16
  41bf7c:	e1a04000 	mov	r4, r0
  41bf80:	e1a0e001 	mov	lr, r1
  41bf84:	e59f103c 	ldr	r1, [pc, #60]	; 41bfc8 <_Z15icvSet_32f_C4MRPiiPKhi6CvSizePKi+0x54>
  41bf88:	e08f1001 	add	r1, pc, r1
  41bf8c:	e59f0038 	ldr	r0, [pc, #56]	; 41bfcc <_Z15icvSet_32f_C4MRPiiPKhi6CvSizePKi+0x58>
  41bf90:	e791c000 	ldr	ip, [r1, r0]
  41bf94:	e28d1014 	add	r1, sp, #20
  41bf98:	e9910003 	ldmib	r1, {r0, r1}
  41bf9c:	e88d0003 	stm	sp, {r0, r1}
  41bfa0:	e59d1020 	ldr	r1, [sp, #32]
  41bfa4:	e58d1008 	str	r1, [sp, #8]
  41bfa8:	e1a00004 	mov	r0, r4
  41bfac:	e1a0100e 	mov	r1, lr
  41bfb0:	e59cc000 	ldr	ip, [ip]
  41bfb4:	e1a0e00f 	mov	lr, pc
  41bfb8:	e12fff1c 	bx	ip
  41bfbc:	e28dd010 	add	sp, sp, #16
  41bfc0:	e8bd4010 	pop	{r4, lr}
  41bfc4:	e12fff1e 	bx	lr
  41bfc8:	000250ac 	.word	0x000250ac
  41bfcc:	000000dc 	.word	0x000000dc

0041bfd0 <_ZL17icvSet_32f_C4MR_fPiiPKhi6CvSizePKi>:
  41bfd0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  41bfd4:	e59dc020 	ldr	ip, [sp, #32]
  41bfd8:	e59c7000 	ldr	r7, [ip]
  41bfdc:	e59c6004 	ldr	r6, [ip, #4]
  41bfe0:	e59c5008 	ldr	r5, [ip, #8]
  41bfe4:	e59c400c 	ldr	r4, [ip, #12]
  41bfe8:	e1a01121 	lsr	r1, r1, #2
  41bfec:	ea000012 	b	41c03c <_ZL17icvSet_32f_C4MR_fPiiPKhi6CvSizePKi+0x6c>
  41bff0:	e7d2e00c 	ldrb	lr, [r2, ip]
  41bff4:	e35e0000 	cmp	lr, #0
  41bff8:	0a000007 	beq	41c01c <_ZL17icvSet_32f_C4MR_fPiiPKhi6CvSizePKi+0x4c>
  41bffc:	e1a0e20c 	lsl	lr, ip, #4
  41c000:	e780720c 	str	r7, [r0, ip, lsl #4]
  41c004:	e28e8004 	add	r8, lr, #4
  41c008:	e7806008 	str	r6, [r0, r8]
  41c00c:	e28e8008 	add	r8, lr, #8
  41c010:	e7805008 	str	r5, [r0, r8]
  41c014:	e28ee00c 	add	lr, lr, #12
  41c018:	e780400e 	str	r4, [r0, lr]
  41c01c:	e28cc001 	add	ip, ip, #1
  41c020:	ea000000 	b	41c028 <_ZL17icvSet_32f_C4MR_fPiiPKhi6CvSizePKi+0x58>
  41c024:	e3a0c000 	mov	ip, #0
  41c028:	e59de018 	ldr	lr, [sp, #24]
  41c02c:	e15e000c 	cmp	lr, ip
  41c030:	caffffee 	bgt	41bff0 <_ZL17icvSet_32f_C4MR_fPiiPKhi6CvSizePKi+0x20>
  41c034:	e0822003 	add	r2, r2, r3
  41c038:	e0800101 	add	r0, r0, r1, lsl #2
  41c03c:	e59dc01c 	ldr	ip, [sp, #28]
  41c040:	e24ce001 	sub	lr, ip, #1
  41c044:	e58de01c 	str	lr, [sp, #28]
  41c048:	e35c0000 	cmp	ip, #0
  41c04c:	1afffff4 	bne	41c024 <_ZL17icvSet_32f_C4MR_fPiiPKhi6CvSizePKi+0x54>
  41c050:	e3a00000 	mov	r0, #0
  41c054:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  41c058:	e12fff1e 	bx	lr

0041c05c <_Z15icvCopy_8u_C1MRPKhiPhi6CvSizeS0_i>:
  41c05c:	e92d4010 	push	{r4, lr}
  41c060:	e24dd010 	sub	sp, sp, #16
  41c064:	e1a04000 	mov	r4, r0
  41c068:	e1a0e001 	mov	lr, r1
  41c06c:	e59f1044 	ldr	r1, [pc, #68]	; 41c0b8 <_Z15icvCopy_8u_C1MRPKhiPhi6CvSizeS0_i+0x5c>
  41c070:	e08f1001 	add	r1, pc, r1
  41c074:	e59f0040 	ldr	r0, [pc, #64]	; 41c0bc <_Z15icvCopy_8u_C1MRPKhiPhi6CvSizeS0_i+0x60>
  41c078:	e791c000 	ldr	ip, [r1, r0]
  41c07c:	e28d1014 	add	r1, sp, #20
  41c080:	e9910003 	ldmib	r1, {r0, r1}
  41c084:	e88d0003 	stm	sp, {r0, r1}
  41c088:	e59d1020 	ldr	r1, [sp, #32]
  41c08c:	e58d1008 	str	r1, [sp, #8]
  41c090:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41c094:	e58d100c 	str	r1, [sp, #12]
  41c098:	e1a00004 	mov	r0, r4
  41c09c:	e1a0100e 	mov	r1, lr
  41c0a0:	e59cc000 	ldr	ip, [ip]
  41c0a4:	e1a0e00f 	mov	lr, pc
  41c0a8:	e12fff1c 	bx	ip
  41c0ac:	e28dd010 	add	sp, sp, #16
  41c0b0:	e8bd4010 	pop	{r4, lr}
  41c0b4:	e12fff1e 	bx	lr
  41c0b8:	00024fc4 	.word	0x00024fc4
  41c0bc:	000000ec 	.word	0x000000ec

0041c0c0 <_ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i>:
  41c0c0:	e92d4070 	push	{r4, r5, r6, lr}
  41c0c4:	e59d4018 	ldr	r4, [sp, #24]
  41c0c8:	e59d601c 	ldr	r6, [sp, #28]
  41c0cc:	ea00001b 	b	41c140 <_ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i+0x80>
  41c0d0:	e1a0e00c 	mov	lr, ip
  41c0d4:	e7d4500c 	ldrb	r5, [r4, ip]
  41c0d8:	e3550000 	cmp	r5, #0
  41c0dc:	17d0500c 	ldrbne	r5, [r0, ip]
  41c0e0:	17c2500c 	strbne	r5, [r2, ip]
  41c0e4:	e28ee001 	add	lr, lr, #1
  41c0e8:	e7d4500e 	ldrb	r5, [r4, lr]
  41c0ec:	e3550000 	cmp	r5, #0
  41c0f0:	17d0500e 	ldrbne	r5, [r0, lr]
  41c0f4:	17c2500e 	strbne	r5, [r2, lr]
  41c0f8:	e28cc002 	add	ip, ip, #2
  41c0fc:	ea000000 	b	41c104 <_ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i+0x44>
  41c100:	e3a0c000 	mov	ip, #0
  41c104:	e59de010 	ldr	lr, [sp, #16]
  41c108:	e24e5002 	sub	r5, lr, #2
  41c10c:	e155000c 	cmp	r5, ip
  41c110:	aaffffee 	bge	41c0d0 <_ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i+0x10>
  41c114:	ea000004 	b	41c12c <_ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i+0x6c>
  41c118:	e7d4500c 	ldrb	r5, [r4, ip]
  41c11c:	e3550000 	cmp	r5, #0
  41c120:	17d0500c 	ldrbne	r5, [r0, ip]
  41c124:	17c2500c 	strbne	r5, [r2, ip]
  41c128:	e28cc001 	add	ip, ip, #1
  41c12c:	e15c000e 	cmp	ip, lr
  41c130:	bafffff8 	blt	41c118 <_ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i+0x58>
  41c134:	e0800001 	add	r0, r0, r1
  41c138:	e0822003 	add	r2, r2, r3
  41c13c:	e0844006 	add	r4, r4, r6
  41c140:	e59dc014 	ldr	ip, [sp, #20]
  41c144:	e24ce001 	sub	lr, ip, #1
  41c148:	e58de014 	str	lr, [sp, #20]
  41c14c:	e35c0000 	cmp	ip, #0
  41c150:	1affffea 	bne	41c100 <_ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i+0x40>
  41c154:	e3a00000 	mov	r0, #0
  41c158:	e8bd4070 	pop	{r4, r5, r6, lr}
  41c15c:	e12fff1e 	bx	lr

0041c160 <_Z16icvCopy_16s_C1MRPKtiPti6CvSizePKhi>:
  41c160:	e92d4010 	push	{r4, lr}
  41c164:	e24dd010 	sub	sp, sp, #16
  41c168:	e1a04000 	mov	r4, r0
  41c16c:	e1a0e001 	mov	lr, r1
  41c170:	e59f1044 	ldr	r1, [pc, #68]	; 41c1bc <_Z16icvCopy_16s_C1MRPKtiPti6CvSizePKhi+0x5c>
  41c174:	e08f1001 	add	r1, pc, r1
  41c178:	e59f0040 	ldr	r0, [pc, #64]	; 41c1c0 <_Z16icvCopy_16s_C1MRPKtiPti6CvSizePKhi+0x60>
  41c17c:	e791c000 	ldr	ip, [r1, r0]
  41c180:	e28d1014 	add	r1, sp, #20
  41c184:	e9910003 	ldmib	r1, {r0, r1}
  41c188:	e88d0003 	stm	sp, {r0, r1}
  41c18c:	e59d1020 	ldr	r1, [sp, #32]
  41c190:	e58d1008 	str	r1, [sp, #8]
  41c194:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41c198:	e58d100c 	str	r1, [sp, #12]
  41c19c:	e1a00004 	mov	r0, r4
  41c1a0:	e1a0100e 	mov	r1, lr
  41c1a4:	e59cc000 	ldr	ip, [ip]
  41c1a8:	e1a0e00f 	mov	lr, pc
  41c1ac:	e12fff1c 	bx	ip
  41c1b0:	e28dd010 	add	sp, sp, #16
  41c1b4:	e8bd4010 	pop	{r4, lr}
  41c1b8:	e12fff1e 	bx	lr
  41c1bc:	00024ec0 	.word	0x00024ec0
  41c1c0:	00000114 	.word	0x00000114

0041c1c4 <_ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi>:
  41c1c4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41c1c8:	e59d401c 	ldr	r4, [sp, #28]
  41c1cc:	e59d6020 	ldr	r6, [sp, #32]
  41c1d0:	e1a010a1 	lsr	r1, r1, #1
  41c1d4:	e1a030a3 	lsr	r3, r3, #1
  41c1d8:	ea00001e 	b	41c258 <_ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi+0x94>
  41c1dc:	e1a0e00c 	mov	lr, ip
  41c1e0:	e7d4500c 	ldrb	r5, [r4, ip]
  41c1e4:	e3550000 	cmp	r5, #0
  41c1e8:	11a0508c 	lslne	r5, ip, #1
  41c1ec:	119070b5 	ldrhne	r7, [r0, r5]
  41c1f0:	118270b5 	strhne	r7, [r2, r5]
  41c1f4:	e28ee001 	add	lr, lr, #1
  41c1f8:	e7d4500e 	ldrb	r5, [r4, lr]
  41c1fc:	e3550000 	cmp	r5, #0
  41c200:	11a0e08e 	lslne	lr, lr, #1
  41c204:	119050be 	ldrhne	r5, [r0, lr]
  41c208:	118250be 	strhne	r5, [r2, lr]
  41c20c:	e28cc002 	add	ip, ip, #2
  41c210:	ea000000 	b	41c218 <_ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi+0x54>
  41c214:	e3a0c000 	mov	ip, #0
  41c218:	e59de014 	ldr	lr, [sp, #20]
  41c21c:	e24e5002 	sub	r5, lr, #2
  41c220:	e155000c 	cmp	r5, ip
  41c224:	aaffffec 	bge	41c1dc <_ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi+0x18>
  41c228:	ea000005 	b	41c244 <_ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi+0x80>
  41c22c:	e7d4500c 	ldrb	r5, [r4, ip]
  41c230:	e3550000 	cmp	r5, #0
  41c234:	11a0508c 	lslne	r5, ip, #1
  41c238:	119070b5 	ldrhne	r7, [r0, r5]
  41c23c:	118270b5 	strhne	r7, [r2, r5]
  41c240:	e28cc001 	add	ip, ip, #1
  41c244:	e15c000e 	cmp	ip, lr
  41c248:	bafffff7 	blt	41c22c <_ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi+0x68>
  41c24c:	e0800081 	add	r0, r0, r1, lsl #1
  41c250:	e0822083 	add	r2, r2, r3, lsl #1
  41c254:	e0844006 	add	r4, r4, r6
  41c258:	e59dc018 	ldr	ip, [sp, #24]
  41c25c:	e24ce001 	sub	lr, ip, #1
  41c260:	e58de018 	str	lr, [sp, #24]
  41c264:	e35c0000 	cmp	ip, #0
  41c268:	1affffe9 	bne	41c214 <_ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi+0x50>
  41c26c:	e3a00000 	mov	r0, #0
  41c270:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41c274:	e12fff1e 	bx	lr

0041c278 <_Z15icvCopy_8u_C3MRPKhiPhi6CvSizeS0_i>:
  41c278:	e92d4010 	push	{r4, lr}
  41c27c:	e24dd010 	sub	sp, sp, #16
  41c280:	e1a04000 	mov	r4, r0
  41c284:	e1a0e001 	mov	lr, r1
  41c288:	e59f1044 	ldr	r1, [pc, #68]	; 41c2d4 <_Z15icvCopy_8u_C3MRPKhiPhi6CvSizeS0_i+0x5c>
  41c28c:	e08f1001 	add	r1, pc, r1
  41c290:	e59f0040 	ldr	r0, [pc, #64]	; 41c2d8 <_Z15icvCopy_8u_C3MRPKhiPhi6CvSizeS0_i+0x60>
  41c294:	e791c000 	ldr	ip, [r1, r0]
  41c298:	e28d1014 	add	r1, sp, #20
  41c29c:	e9910003 	ldmib	r1, {r0, r1}
  41c2a0:	e88d0003 	stm	sp, {r0, r1}
  41c2a4:	e59d1020 	ldr	r1, [sp, #32]
  41c2a8:	e58d1008 	str	r1, [sp, #8]
  41c2ac:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41c2b0:	e58d100c 	str	r1, [sp, #12]
  41c2b4:	e1a00004 	mov	r0, r4
  41c2b8:	e1a0100e 	mov	r1, lr
  41c2bc:	e59cc000 	ldr	ip, [ip]
  41c2c0:	e1a0e00f 	mov	lr, pc
  41c2c4:	e12fff1c 	bx	ip
  41c2c8:	e28dd010 	add	sp, sp, #16
  41c2cc:	e8bd4010 	pop	{r4, lr}
  41c2d0:	e12fff1e 	bx	lr
  41c2d4:	00024da8 	.word	0x00024da8
  41c2d8:	00000044 	.word	0x00000044

0041c2dc <_ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i>:
  41c2dc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  41c2e0:	e59d6028 	ldr	r6, [sp, #40]	; 0x28
  41c2e4:	e59d902c 	ldr	r9, [sp, #44]	; 0x2c
  41c2e8:	ea000014 	b	41c340 <_ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i+0x64>
  41c2ec:	e7d6e00c 	ldrb	lr, [r6, ip]
  41c2f0:	e35e0000 	cmp	lr, #0
  41c2f4:	0a000008 	beq	41c31c <_ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i+0x40>
  41c2f8:	e08ce08c 	add	lr, ip, ip, lsl #1
  41c2fc:	e7d0a00e 	ldrb	sl, [r0, lr]
  41c300:	e28e5001 	add	r5, lr, #1
  41c304:	e7d08005 	ldrb	r8, [r0, r5]
  41c308:	e28e4002 	add	r4, lr, #2
  41c30c:	e7d07004 	ldrb	r7, [r0, r4]
  41c310:	e7c2a00e 	strb	sl, [r2, lr]
  41c314:	e7c28005 	strb	r8, [r2, r5]
  41c318:	e7c27004 	strb	r7, [r2, r4]
  41c31c:	e28cc001 	add	ip, ip, #1
  41c320:	ea000000 	b	41c328 <_ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i+0x4c>
  41c324:	e3a0c000 	mov	ip, #0
  41c328:	e59de020 	ldr	lr, [sp, #32]
  41c32c:	e15e000c 	cmp	lr, ip
  41c330:	caffffed 	bgt	41c2ec <_ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i+0x10>
  41c334:	e0800001 	add	r0, r0, r1
  41c338:	e0822003 	add	r2, r2, r3
  41c33c:	e0866009 	add	r6, r6, r9
  41c340:	e59dc024 	ldr	ip, [sp, #36]	; 0x24
  41c344:	e24ce001 	sub	lr, ip, #1
  41c348:	e58de024 	str	lr, [sp, #36]	; 0x24
  41c34c:	e35c0000 	cmp	ip, #0
  41c350:	1afffff3 	bne	41c324 <_ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i+0x48>
  41c354:	e3a00000 	mov	r0, #0
  41c358:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  41c35c:	e12fff1e 	bx	lr

0041c360 <_Z15icvCopy_8u_C4MRPKiiPii6CvSizePKhi>:
  41c360:	e92d4010 	push	{r4, lr}
  41c364:	e24dd010 	sub	sp, sp, #16
  41c368:	e1a04000 	mov	r4, r0
  41c36c:	e1a0e001 	mov	lr, r1
  41c370:	e59f1044 	ldr	r1, [pc, #68]	; 41c3bc <_Z15icvCopy_8u_C4MRPKiiPii6CvSizePKhi+0x5c>
  41c374:	e08f1001 	add	r1, pc, r1
  41c378:	e59f0040 	ldr	r0, [pc, #64]	; 41c3c0 <_Z15icvCopy_8u_C4MRPKiiPii6CvSizePKhi+0x60>
  41c37c:	e791c000 	ldr	ip, [r1, r0]
  41c380:	e28d1014 	add	r1, sp, #20
  41c384:	e9910003 	ldmib	r1, {r0, r1}
  41c388:	e88d0003 	stm	sp, {r0, r1}
  41c38c:	e59d1020 	ldr	r1, [sp, #32]
  41c390:	e58d1008 	str	r1, [sp, #8]
  41c394:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41c398:	e58d100c 	str	r1, [sp, #12]
  41c39c:	e1a00004 	mov	r0, r4
  41c3a0:	e1a0100e 	mov	r1, lr
  41c3a4:	e59cc000 	ldr	ip, [ip]
  41c3a8:	e1a0e00f 	mov	lr, pc
  41c3ac:	e12fff1c 	bx	ip
  41c3b0:	e28dd010 	add	sp, sp, #16
  41c3b4:	e8bd4010 	pop	{r4, lr}
  41c3b8:	e12fff1e 	bx	lr
  41c3bc:	00024cc0 	.word	0x00024cc0
  41c3c0:	00000074 	.word	0x00000074

0041c3c4 <_ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi>:
  41c3c4:	e92d4070 	push	{r4, r5, r6, lr}
  41c3c8:	e59d4018 	ldr	r4, [sp, #24]
  41c3cc:	e59d601c 	ldr	r6, [sp, #28]
  41c3d0:	e1a01121 	lsr	r1, r1, #2
  41c3d4:	e1a03123 	lsr	r3, r3, #2
  41c3d8:	ea00001b 	b	41c44c <_ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi+0x88>
  41c3dc:	e1a0e00c 	mov	lr, ip
  41c3e0:	e7d4500c 	ldrb	r5, [r4, ip]
  41c3e4:	e3550000 	cmp	r5, #0
  41c3e8:	1790510c 	ldrne	r5, [r0, ip, lsl #2]
  41c3ec:	1782510c 	strne	r5, [r2, ip, lsl #2]
  41c3f0:	e28ee001 	add	lr, lr, #1
  41c3f4:	e7d4500e 	ldrb	r5, [r4, lr]
  41c3f8:	e3550000 	cmp	r5, #0
  41c3fc:	1790510e 	ldrne	r5, [r0, lr, lsl #2]
  41c400:	1782510e 	strne	r5, [r2, lr, lsl #2]
  41c404:	e28cc002 	add	ip, ip, #2
  41c408:	ea000000 	b	41c410 <_ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi+0x4c>
  41c40c:	e3a0c000 	mov	ip, #0
  41c410:	e59de010 	ldr	lr, [sp, #16]
  41c414:	e24e5002 	sub	r5, lr, #2
  41c418:	e155000c 	cmp	r5, ip
  41c41c:	aaffffee 	bge	41c3dc <_ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi+0x18>
  41c420:	ea000004 	b	41c438 <_ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi+0x74>
  41c424:	e7d4500c 	ldrb	r5, [r4, ip]
  41c428:	e3550000 	cmp	r5, #0
  41c42c:	1790510c 	ldrne	r5, [r0, ip, lsl #2]
  41c430:	1782510c 	strne	r5, [r2, ip, lsl #2]
  41c434:	e28cc001 	add	ip, ip, #1
  41c438:	e15c000e 	cmp	ip, lr
  41c43c:	bafffff8 	blt	41c424 <_ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi+0x60>
  41c440:	e0800101 	add	r0, r0, r1, lsl #2
  41c444:	e0822103 	add	r2, r2, r3, lsl #2
  41c448:	e0844006 	add	r4, r4, r6
  41c44c:	e59dc014 	ldr	ip, [sp, #20]
  41c450:	e24ce001 	sub	lr, ip, #1
  41c454:	e58de014 	str	lr, [sp, #20]
  41c458:	e35c0000 	cmp	ip, #0
  41c45c:	1affffea 	bne	41c40c <_ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi+0x48>
  41c460:	e3a00000 	mov	r0, #0
  41c464:	e8bd4070 	pop	{r4, r5, r6, lr}
  41c468:	e12fff1e 	bx	lr

0041c46c <_Z16icvCopy_16s_C3MRPKtiPti6CvSizePKhi>:
  41c46c:	e92d4010 	push	{r4, lr}
  41c470:	e24dd010 	sub	sp, sp, #16
  41c474:	e1a04000 	mov	r4, r0
  41c478:	e1a0e001 	mov	lr, r1
  41c47c:	e59f1044 	ldr	r1, [pc, #68]	; 41c4c8 <_Z16icvCopy_16s_C3MRPKtiPti6CvSizePKhi+0x5c>
  41c480:	e08f1001 	add	r1, pc, r1
  41c484:	e59f0040 	ldr	r0, [pc, #64]	; 41c4cc <_Z16icvCopy_16s_C3MRPKtiPti6CvSizePKhi+0x60>
  41c488:	e791c000 	ldr	ip, [r1, r0]
  41c48c:	e28d1014 	add	r1, sp, #20
  41c490:	e9910003 	ldmib	r1, {r0, r1}
  41c494:	e88d0003 	stm	sp, {r0, r1}
  41c498:	e59d1020 	ldr	r1, [sp, #32]
  41c49c:	e58d1008 	str	r1, [sp, #8]
  41c4a0:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41c4a4:	e58d100c 	str	r1, [sp, #12]
  41c4a8:	e1a00004 	mov	r0, r4
  41c4ac:	e1a0100e 	mov	r1, lr
  41c4b0:	e59cc000 	ldr	ip, [ip]
  41c4b4:	e1a0e00f 	mov	lr, pc
  41c4b8:	e12fff1c 	bx	ip
  41c4bc:	e28dd010 	add	sp, sp, #16
  41c4c0:	e8bd4010 	pop	{r4, lr}
  41c4c4:	e12fff1e 	bx	lr
  41c4c8:	00024bb4 	.word	0x00024bb4
  41c4cc:	0000012c 	.word	0x0000012c

0041c4d0 <_ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi>:
  41c4d0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  41c4d4:	e59d6028 	ldr	r6, [sp, #40]	; 0x28
  41c4d8:	e59d902c 	ldr	r9, [sp, #44]	; 0x2c
  41c4dc:	e1a010a1 	lsr	r1, r1, #1
  41c4e0:	e1a030a3 	lsr	r3, r3, #1
  41c4e4:	ea000015 	b	41c540 <_ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi+0x70>
  41c4e8:	e7d6e00c 	ldrb	lr, [r6, ip]
  41c4ec:	e35e0000 	cmp	lr, #0
  41c4f0:	0a000009 	beq	41c51c <_ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi+0x4c>
  41c4f4:	e08ce08c 	add	lr, ip, ip, lsl #1
  41c4f8:	e1a0e08e 	lsl	lr, lr, #1
  41c4fc:	e190a0be 	ldrh	sl, [r0, lr]
  41c500:	e28e5002 	add	r5, lr, #2
  41c504:	e19080b5 	ldrh	r8, [r0, r5]
  41c508:	e28e4004 	add	r4, lr, #4
  41c50c:	e19070b4 	ldrh	r7, [r0, r4]
  41c510:	e182a0be 	strh	sl, [r2, lr]
  41c514:	e18280b5 	strh	r8, [r2, r5]
  41c518:	e18270b4 	strh	r7, [r2, r4]
  41c51c:	e28cc001 	add	ip, ip, #1
  41c520:	ea000000 	b	41c528 <_ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi+0x58>
  41c524:	e3a0c000 	mov	ip, #0
  41c528:	e59de020 	ldr	lr, [sp, #32]
  41c52c:	e15e000c 	cmp	lr, ip
  41c530:	caffffec 	bgt	41c4e8 <_ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi+0x18>
  41c534:	e0800081 	add	r0, r0, r1, lsl #1
  41c538:	e0822083 	add	r2, r2, r3, lsl #1
  41c53c:	e0866009 	add	r6, r6, r9
  41c540:	e59dc024 	ldr	ip, [sp, #36]	; 0x24
  41c544:	e24ce001 	sub	lr, ip, #1
  41c548:	e58de024 	str	lr, [sp, #36]	; 0x24
  41c54c:	e35c0000 	cmp	ip, #0
  41c550:	1afffff3 	bne	41c524 <_ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi+0x54>
  41c554:	e3a00000 	mov	r0, #0
  41c558:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  41c55c:	e12fff1e 	bx	lr

0041c560 <_Z16icvCopy_32f_C3MRPKiiPii6CvSizePKhi>:
  41c560:	e92d4010 	push	{r4, lr}
  41c564:	e24dd010 	sub	sp, sp, #16
  41c568:	e1a04000 	mov	r4, r0
  41c56c:	e1a0e001 	mov	lr, r1
  41c570:	e59f1044 	ldr	r1, [pc, #68]	; 41c5bc <_Z16icvCopy_32f_C3MRPKiiPii6CvSizePKhi+0x5c>
  41c574:	e08f1001 	add	r1, pc, r1
  41c578:	e59f0040 	ldr	r0, [pc, #64]	; 41c5c0 <_Z16icvCopy_32f_C3MRPKiiPii6CvSizePKhi+0x60>
  41c57c:	e791c000 	ldr	ip, [r1, r0]
  41c580:	e28d1014 	add	r1, sp, #20
  41c584:	e9910003 	ldmib	r1, {r0, r1}
  41c588:	e88d0003 	stm	sp, {r0, r1}
  41c58c:	e59d1020 	ldr	r1, [sp, #32]
  41c590:	e58d1008 	str	r1, [sp, #8]
  41c594:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41c598:	e58d100c 	str	r1, [sp, #12]
  41c59c:	e1a00004 	mov	r0, r4
  41c5a0:	e1a0100e 	mov	r1, lr
  41c5a4:	e59cc000 	ldr	ip, [ip]
  41c5a8:	e1a0e00f 	mov	lr, pc
  41c5ac:	e12fff1c 	bx	ip
  41c5b0:	e28dd010 	add	sp, sp, #16
  41c5b4:	e8bd4010 	pop	{r4, lr}
  41c5b8:	e12fff1e 	bx	lr
  41c5bc:	00024ac0 	.word	0x00024ac0
  41c5c0:	0000015c 	.word	0x0000015c

0041c5c4 <_ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi>:
  41c5c4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  41c5c8:	e59d6028 	ldr	r6, [sp, #40]	; 0x28
  41c5cc:	e59d902c 	ldr	r9, [sp, #44]	; 0x2c
  41c5d0:	e1a01121 	lsr	r1, r1, #2
  41c5d4:	e1a03123 	lsr	r3, r3, #2
  41c5d8:	ea000015 	b	41c634 <_ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi+0x70>
  41c5dc:	e7d6e00c 	ldrb	lr, [r6, ip]
  41c5e0:	e35e0000 	cmp	lr, #0
  41c5e4:	0a000009 	beq	41c610 <_ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi+0x4c>
  41c5e8:	e08ce08c 	add	lr, ip, ip, lsl #1
  41c5ec:	e1a0e10e 	lsl	lr, lr, #2
  41c5f0:	e790a00e 	ldr	sl, [r0, lr]
  41c5f4:	e28e5004 	add	r5, lr, #4
  41c5f8:	e7908005 	ldr	r8, [r0, r5]
  41c5fc:	e28e4008 	add	r4, lr, #8
  41c600:	e7907004 	ldr	r7, [r0, r4]
  41c604:	e782a00e 	str	sl, [r2, lr]
  41c608:	e7828005 	str	r8, [r2, r5]
  41c60c:	e7827004 	str	r7, [r2, r4]
  41c610:	e28cc001 	add	ip, ip, #1
  41c614:	ea000000 	b	41c61c <_ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi+0x58>
  41c618:	e3a0c000 	mov	ip, #0
  41c61c:	e59de020 	ldr	lr, [sp, #32]
  41c620:	e15e000c 	cmp	lr, ip
  41c624:	caffffec 	bgt	41c5dc <_ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi+0x18>
  41c628:	e0800101 	add	r0, r0, r1, lsl #2
  41c62c:	e0822103 	add	r2, r2, r3, lsl #2
  41c630:	e0866009 	add	r6, r6, r9
  41c634:	e59dc024 	ldr	ip, [sp, #36]	; 0x24
  41c638:	e24ce001 	sub	lr, ip, #1
  41c63c:	e58de024 	str	lr, [sp, #36]	; 0x24
  41c640:	e35c0000 	cmp	ip, #0
  41c644:	1afffff3 	bne	41c618 <_ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi+0x54>
  41c648:	e3a00000 	mov	r0, #0
  41c64c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  41c650:	e12fff1e 	bx	lr

0041c654 <_Z16icvCopy_32f_C4MRPKiiPii6CvSizePKhi>:
  41c654:	e92d4010 	push	{r4, lr}
  41c658:	e24dd010 	sub	sp, sp, #16
  41c65c:	e1a04000 	mov	r4, r0
  41c660:	e1a0e001 	mov	lr, r1
  41c664:	e59f1044 	ldr	r1, [pc, #68]	; 41c6b0 <_Z16icvCopy_32f_C4MRPKiiPii6CvSizePKhi+0x5c>
  41c668:	e08f1001 	add	r1, pc, r1
  41c66c:	e59f0040 	ldr	r0, [pc, #64]	; 41c6b4 <_Z16icvCopy_32f_C4MRPKiiPii6CvSizePKhi+0x60>
  41c670:	e791c000 	ldr	ip, [r1, r0]
  41c674:	e28d1014 	add	r1, sp, #20
  41c678:	e9910003 	ldmib	r1, {r0, r1}
  41c67c:	e88d0003 	stm	sp, {r0, r1}
  41c680:	e59d1020 	ldr	r1, [sp, #32]
  41c684:	e58d1008 	str	r1, [sp, #8]
  41c688:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41c68c:	e58d100c 	str	r1, [sp, #12]
  41c690:	e1a00004 	mov	r0, r4
  41c694:	e1a0100e 	mov	r1, lr
  41c698:	e59cc000 	ldr	ip, [ip]
  41c69c:	e1a0e00f 	mov	lr, pc
  41c6a0:	e12fff1c 	bx	ip
  41c6a4:	e28dd010 	add	sp, sp, #16
  41c6a8:	e8bd4010 	pop	{r4, lr}
  41c6ac:	e12fff1e 	bx	lr
  41c6b0:	000249cc 	.word	0x000249cc
  41c6b4:	00000068 	.word	0x00000068

0041c6b8 <_ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi>:
  41c6b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  41c6bc:	e59d5020 	ldr	r5, [sp, #32]
  41c6c0:	e59d6024 	ldr	r6, [sp, #36]	; 0x24
  41c6c4:	e1a01121 	lsr	r1, r1, #2
  41c6c8:	e1a03123 	lsr	r3, r3, #2
  41c6cc:	ea000017 	b	41c730 <_ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi+0x78>
  41c6d0:	e7d5e00c 	ldrb	lr, [r5, ip]
  41c6d4:	e35e0000 	cmp	lr, #0
  41c6d8:	0a00000b 	beq	41c70c <_ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi+0x54>
  41c6dc:	e1a0e20c 	lsl	lr, ip, #4
  41c6e0:	e790820c 	ldr	r8, [r0, ip, lsl #4]
  41c6e4:	e28e4004 	add	r4, lr, #4
  41c6e8:	e7907004 	ldr	r7, [r0, r4]
  41c6ec:	e782820c 	str	r8, [r2, ip, lsl #4]
  41c6f0:	e7827004 	str	r7, [r2, r4]
  41c6f4:	e28e4008 	add	r4, lr, #8
  41c6f8:	e7908004 	ldr	r8, [r0, r4]
  41c6fc:	e28ee00c 	add	lr, lr, #12
  41c700:	e790700e 	ldr	r7, [r0, lr]
  41c704:	e7828004 	str	r8, [r2, r4]
  41c708:	e782700e 	str	r7, [r2, lr]
  41c70c:	e28cc001 	add	ip, ip, #1
  41c710:	ea000000 	b	41c718 <_ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi+0x60>
  41c714:	e3a0c000 	mov	ip, #0
  41c718:	e59de018 	ldr	lr, [sp, #24]
  41c71c:	e15e000c 	cmp	lr, ip
  41c720:	caffffea 	bgt	41c6d0 <_ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi+0x18>
  41c724:	e0800101 	add	r0, r0, r1, lsl #2
  41c728:	e0822103 	add	r2, r2, r3, lsl #2
  41c72c:	e0855006 	add	r5, r5, r6
  41c730:	e59dc01c 	ldr	ip, [sp, #28]
  41c734:	e24ce001 	sub	lr, ip, #1
  41c738:	e58de01c 	str	lr, [sp, #28]
  41c73c:	e35c0000 	cmp	ip, #0
  41c740:	1afffff3 	bne	41c714 <_ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi+0x5c>
  41c744:	e3a00000 	mov	r0, #0
  41c748:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  41c74c:	e12fff1e 	bx	lr

0041c750 <_ZL17icvInitSetMRTableP13CvBtFuncTable>:
  41c750:	e59f3058 	ldr	r3, [pc, #88]	; 41c7b0 <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x60>
  41c754:	e08f3003 	add	r3, pc, r3
  41c758:	e59f2054 	ldr	r2, [pc, #84]	; 41c7b4 <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x64>
  41c75c:	e7932002 	ldr	r2, [r3, r2]
  41c760:	e5802004 	str	r2, [r0, #4]
  41c764:	e59f204c 	ldr	r2, [pc, #76]	; 41c7b8 <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x68>
  41c768:	e7932002 	ldr	r2, [r3, r2]
  41c76c:	e5802008 	str	r2, [r0, #8]
  41c770:	e59f2044 	ldr	r2, [pc, #68]	; 41c7bc <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x6c>
  41c774:	e7932002 	ldr	r2, [r3, r2]
  41c778:	e580200c 	str	r2, [r0, #12]
  41c77c:	e59f203c 	ldr	r2, [pc, #60]	; 41c7c0 <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x70>
  41c780:	e7932002 	ldr	r2, [r3, r2]
  41c784:	e5802010 	str	r2, [r0, #16]
  41c788:	e59f2034 	ldr	r2, [pc, #52]	; 41c7c4 <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x74>
  41c78c:	e7932002 	ldr	r2, [r3, r2]
  41c790:	e5802018 	str	r2, [r0, #24]
  41c794:	e59f202c 	ldr	r2, [pc, #44]	; 41c7c8 <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x78>
  41c798:	e7932002 	ldr	r2, [r3, r2]
  41c79c:	e5802030 	str	r2, [r0, #48]	; 0x30
  41c7a0:	e59f2024 	ldr	r2, [pc, #36]	; 41c7cc <_ZL17icvInitSetMRTableP13CvBtFuncTable+0x7c>
  41c7a4:	e7933002 	ldr	r3, [r3, r2]
  41c7a8:	e5803040 	str	r3, [r0, #64]	; 0x40
  41c7ac:	e12fff1e 	bx	lr
  41c7b0:	000248e0 	.word	0x000248e0
  41c7b4:	00000038 	.word	0x00000038
  41c7b8:	000000f4 	.word	0x000000f4
  41c7bc:	000000a4 	.word	0x000000a4
  41c7c0:	00000150 	.word	0x00000150
  41c7c4:	0000011c 	.word	0x0000011c
  41c7c8:	00000154 	.word	0x00000154
  41c7cc:	00000060 	.word	0x00000060

0041c7d0 <_ZL18icvInitCopyMRTableP13CvBtFuncTable>:
  41c7d0:	e59f3058 	ldr	r3, [pc, #88]	; 41c830 <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x60>
  41c7d4:	e08f3003 	add	r3, pc, r3
  41c7d8:	e59f2054 	ldr	r2, [pc, #84]	; 41c834 <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x64>
  41c7dc:	e7932002 	ldr	r2, [r3, r2]
  41c7e0:	e5802004 	str	r2, [r0, #4]
  41c7e4:	e59f204c 	ldr	r2, [pc, #76]	; 41c838 <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x68>
  41c7e8:	e7932002 	ldr	r2, [r3, r2]
  41c7ec:	e5802008 	str	r2, [r0, #8]
  41c7f0:	e59f2044 	ldr	r2, [pc, #68]	; 41c83c <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x6c>
  41c7f4:	e7932002 	ldr	r2, [r3, r2]
  41c7f8:	e580200c 	str	r2, [r0, #12]
  41c7fc:	e59f203c 	ldr	r2, [pc, #60]	; 41c840 <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x70>
  41c800:	e7932002 	ldr	r2, [r3, r2]
  41c804:	e5802010 	str	r2, [r0, #16]
  41c808:	e59f2034 	ldr	r2, [pc, #52]	; 41c844 <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x74>
  41c80c:	e7932002 	ldr	r2, [r3, r2]
  41c810:	e5802018 	str	r2, [r0, #24]
  41c814:	e59f202c 	ldr	r2, [pc, #44]	; 41c848 <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x78>
  41c818:	e7932002 	ldr	r2, [r3, r2]
  41c81c:	e5802030 	str	r2, [r0, #48]	; 0x30
  41c820:	e59f2024 	ldr	r2, [pc, #36]	; 41c84c <_ZL18icvInitCopyMRTableP13CvBtFuncTable+0x7c>
  41c824:	e7933002 	ldr	r3, [r3, r2]
  41c828:	e5803040 	str	r3, [r0, #64]	; 0x40
  41c82c:	e12fff1e 	bx	lr
  41c830:	00024860 	.word	0x00024860
  41c834:	000000d8 	.word	0x000000d8
  41c838:	00000160 	.word	0x00000160
  41c83c:	00000004 	.word	0x00000004
  41c840:	00000090 	.word	0x00000090
  41c844:	00000050 	.word	0x00000050
  41c848:	00000098 	.word	0x00000098
  41c84c:	00000034 	.word	0x00000034

0041c850 <_ZL16icvCopy_8u_C1R_fPKhiPhi6CvSize>:
  41c850:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
  41c854:	e1a05000 	mov	r5, r0
  41c858:	e1a07001 	mov	r7, r1
  41c85c:	e1a04002 	mov	r4, r2
  41c860:	e1a06003 	mov	r6, r3
  41c864:	ea000005 	b	41c880 <_ZL16icvCopy_8u_C1R_fPKhiPhi6CvSize+0x30>
  41c868:	e1a00004 	mov	r0, r4
  41c86c:	e1a01005 	mov	r1, r5
  41c870:	e59d2018 	ldr	r2, [sp, #24]
  41c874:	fa006197 	blx	434ed8 <memcpy>
  41c878:	e0855007 	add	r5, r5, r7
  41c87c:	e0844006 	add	r4, r4, r6
  41c880:	e59d301c 	ldr	r3, [sp, #28]
  41c884:	e2432001 	sub	r2, r3, #1
  41c888:	e58d201c 	str	r2, [sp, #28]
  41c88c:	e3530000 	cmp	r3, #0
  41c890:	1afffff4 	bne	41c868 <_ZL16icvCopy_8u_C1R_fPKhiPhi6CvSize+0x18>
  41c894:	e3a00000 	mov	r0, #0
  41c898:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
  41c89c:	e12fff1e 	bx	lr

0041c8a0 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi>:
  41c8a0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  41c8a4:	e24dd00c 	sub	sp, sp, #12
  41c8a8:	e1a0c000 	mov	ip, r0
  41c8ac:	e1a04001 	mov	r4, r1
  41c8b0:	e28d1008 	add	r1, sp, #8
  41c8b4:	e901000c 	stmdb	r1, {r2, r3}
  41c8b8:	e59d602c 	ldr	r6, [sp, #44]	; 0x2c
  41c8bc:	e0866086 	add	r6, r6, r6, lsl #1
  41c8c0:	e1a06106 	lsl	r6, r6, #2
  41c8c4:	e59d8000 	ldr	r8, [sp]
  41c8c8:	e0805008 	add	r5, r0, r8
  41c8cc:	e59d3004 	ldr	r3, [sp, #4]
  41c8d0:	e2439001 	sub	r9, r3, #1
  41c8d4:	e58d9004 	str	r9, [sp, #4]
  41c8d8:	e3530000 	cmp	r3, #0
  41c8dc:	1a000005 	bne	41c8f8 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi+0x58>
  41c8e0:	ea00000b 	b	41c914 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi+0x74>
  41c8e4:	e1a0000c 	mov	r0, ip
  41c8e8:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  41c8ec:	e1a02006 	mov	r2, r6
  41c8f0:	fa006178 	blx	434ed8 <memcpy>
  41c8f4:	e1a0c007 	mov	ip, r7
  41c8f8:	e08c7006 	add	r7, ip, r6
  41c8fc:	e1570005 	cmp	r7, r5
  41c900:	9afffff7 	bls	41c8e4 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi+0x44>
  41c904:	e1a0000c 	mov	r0, ip
  41c908:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  41c90c:	e06c2005 	rsb	r2, ip, r5
  41c910:	fa006170 	blx	434ed8 <memcpy>
  41c914:	e3590000 	cmp	r9, #0
  41c918:	0a00000d 	beq	41c954 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi+0xb4>
  41c91c:	e1a06004 	mov	r6, r4
  41c920:	e0684004 	rsb	r4, r8, r4
  41c924:	e0854004 	add	r4, r5, r4
  41c928:	ea000004 	b	41c940 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi+0xa0>
  41c92c:	e1a00004 	mov	r0, r4
  41c930:	e0661004 	rsb	r1, r6, r4
  41c934:	e1a02008 	mov	r2, r8
  41c938:	fa006166 	blx	434ed8 <memcpy>
  41c93c:	e0844006 	add	r4, r4, r6
  41c940:	e59d3004 	ldr	r3, [sp, #4]
  41c944:	e2432001 	sub	r2, r3, #1
  41c948:	e58d2004 	str	r2, [sp, #4]
  41c94c:	e3530000 	cmp	r3, #0
  41c950:	1afffff5 	bne	41c92c <_ZL13icvSet_8u_C1RPhi6CvSizePKvi+0x8c>
  41c954:	e3a00000 	mov	r0, #0
  41c958:	e28dd00c 	add	sp, sp, #12
  41c95c:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  41c960:	e12fff1e 	bx	lr

0041c964 <_Z14icvCopy_8u_C1RPKhiPhi6CvSize>:
  41c964:	e92d4010 	push	{r4, lr}
  41c968:	e24dd008 	sub	sp, sp, #8
  41c96c:	e1a04000 	mov	r4, r0
  41c970:	e1a0e001 	mov	lr, r1
  41c974:	e59f1034 	ldr	r1, [pc, #52]	; 41c9b0 <_Z14icvCopy_8u_C1RPKhiPhi6CvSize+0x4c>
  41c978:	e08f1001 	add	r1, pc, r1
  41c97c:	e59f0030 	ldr	r0, [pc, #48]	; 41c9b4 <_Z14icvCopy_8u_C1RPKhiPhi6CvSize+0x50>
  41c980:	e791c000 	ldr	ip, [r1, r0]
  41c984:	e28d100c 	add	r1, sp, #12
  41c988:	e9910003 	ldmib	r1, {r0, r1}
  41c98c:	e88d0003 	stm	sp, {r0, r1}
  41c990:	e1a00004 	mov	r0, r4
  41c994:	e1a0100e 	mov	r1, lr
  41c998:	e59cc000 	ldr	ip, [ip]
  41c99c:	e1a0e00f 	mov	lr, pc
  41c9a0:	e12fff1c 	bx	ip
  41c9a4:	e28dd008 	add	sp, sp, #8
  41c9a8:	e8bd4010 	pop	{r4, lr}
  41c9ac:	e12fff1e 	bx	lr
  41c9b0:	000246bc 	.word	0x000246bc
  41c9b4:	0000004c 	.word	0x0000004c

0041c9b8 <_Z18icvGetCopyMaskFunci>:
  41c9b8:	e92d4038 	push	{r3, r4, r5, lr}
  41c9bc:	e1a04000 	mov	r4, r0
  41c9c0:	e59f303c 	ldr	r3, [pc, #60]	; 41ca04 <_Z18icvGetCopyMaskFunci+0x4c>
  41c9c4:	e08f3003 	add	r3, pc, r3
  41c9c8:	e5933000 	ldr	r3, [r3]
  41c9cc:	e3530000 	cmp	r3, #0
  41c9d0:	1a000005 	bne	41c9ec <_Z18icvGetCopyMaskFunci+0x34>
  41c9d4:	e59f502c 	ldr	r5, [pc, #44]	; 41ca08 <_Z18icvGetCopyMaskFunci+0x50>
  41c9d8:	e08f5005 	add	r5, pc, r5
  41c9dc:	e2850004 	add	r0, r5, #4
  41c9e0:	ebffff7a 	bl	41c7d0 <_ZL18icvInitCopyMRTableP13CvBtFuncTable>
  41c9e4:	e3a03001 	mov	r3, #1
  41c9e8:	e5853000 	str	r3, [r5]
  41c9ec:	e59f0018 	ldr	r0, [pc, #24]	; 41ca0c <_Z18icvGetCopyMaskFunci+0x54>
  41c9f0:	e08f0000 	add	r0, pc, r0
  41c9f4:	e0800104 	add	r0, r0, r4, lsl #2
  41c9f8:	e5900004 	ldr	r0, [r0, #4]
  41c9fc:	e8bd4038 	pop	{r3, r4, r5, lr}
  41ca00:	e12fff1e 	bx	lr
  41ca04:	1fbe5328 	.word	0x1fbe5328
  41ca08:	1fbe5314 	.word	0x1fbe5314
  41ca0c:	1fbe52fc 	.word	0x1fbe52fc

0041ca10 <cvCopy>:
  41ca10:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41ca14:	e24dde46 	sub	sp, sp, #1120	; 0x460
  41ca18:	e24dd004 	sub	sp, sp, #4
  41ca1c:	e1a05001 	mov	r5, r1
  41ca20:	e1a06002 	mov	r6, r2
  41ca24:	e2504000 	subs	r4, r0, #0
  41ca28:	0a00001b 	beq	41ca9c <cvCopy+0x8c>
  41ca2c:	e1d420b2 	ldrh	r2, [r4, #2]
  41ca30:	e59f3a1c 	ldr	r3, [pc, #2588]	; 41d454 <cvCopy+0xa44>
  41ca34:	e1530802 	cmp	r3, r2, lsl #16
  41ca38:	1a000017 	bne	41ca9c <cvCopy+0x8c>
  41ca3c:	e5943018 	ldr	r3, [r4, #24]
  41ca40:	e3530000 	cmp	r3, #0
  41ca44:	da000014 	ble	41ca9c <cvCopy+0x8c>
  41ca48:	e5943014 	ldr	r3, [r4, #20]
  41ca4c:	e3530000 	cmp	r3, #0
  41ca50:	da000011 	ble	41ca9c <cvCopy+0x8c>
  41ca54:	e5943010 	ldr	r3, [r4, #16]
  41ca58:	e3530000 	cmp	r3, #0
  41ca5c:	0a00000e 	beq	41ca9c <cvCopy+0x8c>
  41ca60:	e3510000 	cmp	r1, #0
  41ca64:	0a00000c 	beq	41ca9c <cvCopy+0x8c>
  41ca68:	e1d120b2 	ldrh	r2, [r1, #2]
  41ca6c:	e59f39e0 	ldr	r3, [pc, #2528]	; 41d454 <cvCopy+0xa44>
  41ca70:	e1530802 	cmp	r3, r2, lsl #16
  41ca74:	1a000008 	bne	41ca9c <cvCopy+0x8c>
  41ca78:	e5913018 	ldr	r3, [r1, #24]
  41ca7c:	e3530000 	cmp	r3, #0
  41ca80:	da000005 	ble	41ca9c <cvCopy+0x8c>
  41ca84:	e5913014 	ldr	r3, [r1, #20]
  41ca88:	e3530000 	cmp	r3, #0
  41ca8c:	da000002 	ble	41ca9c <cvCopy+0x8c>
  41ca90:	e5913010 	ldr	r3, [r1, #16]
  41ca94:	e3530000 	cmp	r3, #0
  41ca98:	1a000195 	bne	41d0f4 <cvCopy+0x6e4>
  41ca9c:	e3540000 	cmp	r4, #0
  41caa0:	0a00009c 	beq	41cd18 <cvCopy+0x308>
  41caa4:	e1d420b2 	ldrh	r2, [r4, #2]
  41caa8:	e59f39a8 	ldr	r3, [pc, #2472]	; 41d458 <cvCopy+0xa48>
  41caac:	e1530802 	cmp	r3, r2, lsl #16
  41cab0:	1a000098 	bne	41cd18 <cvCopy+0x308>
  41cab4:	e3550000 	cmp	r5, #0
  41cab8:	0a000096 	beq	41cd18 <cvCopy+0x308>
  41cabc:	e1d520b2 	ldrh	r2, [r5, #2]
  41cac0:	e1530802 	cmp	r3, r2, lsl #16
  41cac4:	1a000093 	bne	41cd18 <cvCopy+0x308>
  41cac8:	e5943004 	ldr	r3, [r4, #4]
  41cacc:	e5853004 	str	r3, [r5, #4]
  41cad0:	e5942004 	ldr	r2, [r4, #4]
  41cad4:	e2850024 	add	r0, r5, #36	; 0x24
  41cad8:	e2841024 	add	r1, r4, #36	; 0x24
  41cadc:	e1a02102 	lsl	r2, r2, #2
  41cae0:	fa0060fc 	blx	434ed8 <memcpy>
  41cae4:	e594301c 	ldr	r3, [r4, #28]
  41cae8:	e585301c 	str	r3, [r5, #28]
  41caec:	e5943020 	ldr	r3, [r4, #32]
  41caf0:	e5853020 	str	r3, [r5, #32]
  41caf4:	e5950010 	ldr	r0, [r5, #16]
  41caf8:	ebfff23e 	bl	4193f8 <cvClearSet>
  41cafc:	e5943010 	ldr	r3, [r4, #16]
  41cb00:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
  41cb04:	e5953018 	ldr	r3, [r5, #24]
  41cb08:	e0833083 	add	r3, r3, r3, lsl #1
  41cb0c:	e1520003 	cmp	r2, r3
  41cb10:	ba000024 	blt	41cba8 <cvCopy+0x198>
  41cb14:	e5950014 	ldr	r0, [r5, #20]
  41cb18:	ebfffb99 	bl	41b984 <cvFree_>
  41cb1c:	e3a03000 	mov	r3, #0
  41cb20:	e5853014 	str	r3, [r5, #20]
  41cb24:	ebffd7ae 	bl	4129e4 <cvGetErrStatus>
  41cb28:	e3500000 	cmp	r0, #0
  41cb2c:	aa00000a 	bge	41cb5c <cvCopy+0x14c>
  41cb30:	e3a03d05 	mov	r3, #320	; 0x140
  41cb34:	e58d3000 	str	r3, [sp]
  41cb38:	e3e00000 	mvn	r0, #0
  41cb3c:	e59f1918 	ldr	r1, [pc, #2328]	; 41d45c <cvCopy+0xa4c>
  41cb40:	e08f1001 	add	r1, pc, r1
  41cb44:	e59f2914 	ldr	r2, [pc, #2324]	; 41d460 <cvCopy+0xa50>
  41cb48:	e08f2002 	add	r2, pc, r2
  41cb4c:	e59f3910 	ldr	r3, [pc, #2320]	; 41d464 <cvCopy+0xa54>
  41cb50:	e08f3003 	add	r3, pc, r3
  41cb54:	ebffd7d3 	bl	412aa8 <cvError>
  41cb58:	ea000239 	b	41d444 <cvCopy+0xa34>
  41cb5c:	e5940018 	ldr	r0, [r4, #24]
  41cb60:	e5850018 	str	r0, [r5, #24]
  41cb64:	e1a00100 	lsl	r0, r0, #2
  41cb68:	ebfffb53 	bl	41b8bc <cvAlloc>
  41cb6c:	e5850014 	str	r0, [r5, #20]
  41cb70:	ebffd79b 	bl	4129e4 <cvGetErrStatus>
  41cb74:	e3500000 	cmp	r0, #0
  41cb78:	aa00000a 	bge	41cba8 <cvCopy+0x198>
  41cb7c:	e59f38e4 	ldr	r3, [pc, #2276]	; 41d468 <cvCopy+0xa58>
  41cb80:	e58d3000 	str	r3, [sp]
  41cb84:	e3e00000 	mvn	r0, #0
  41cb88:	e59f18dc 	ldr	r1, [pc, #2268]	; 41d46c <cvCopy+0xa5c>
  41cb8c:	e08f1001 	add	r1, pc, r1
  41cb90:	e59f28d8 	ldr	r2, [pc, #2264]	; 41d470 <cvCopy+0xa60>
  41cb94:	e08f2002 	add	r2, pc, r2
  41cb98:	e59f38d4 	ldr	r3, [pc, #2260]	; 41d474 <cvCopy+0xa64>
  41cb9c:	e08f3003 	add	r3, pc, r3
  41cba0:	ebffd7c0 	bl	412aa8 <cvError>
  41cba4:	ea000226 	b	41d444 <cvCopy+0xa34>
  41cba8:	e5952018 	ldr	r2, [r5, #24]
  41cbac:	e5950014 	ldr	r0, [r5, #20]
  41cbb0:	e3a01000 	mov	r1, #0
  41cbb4:	e1a02102 	lsl	r2, r2, #2
  41cbb8:	fa006145 	blx	4350d4 <memset>
  41cbbc:	e1a00004 	mov	r0, r4
  41cbc0:	e28d1f47 	add	r1, sp, #284	; 0x11c
  41cbc4:	ebffb754 	bl	40a91c <cvInitSparseMatIterator>
  41cbc8:	e1a04000 	mov	r4, r0
  41cbcc:	ea00004e 	b	41cd0c <cvCopy+0x2fc>
  41cbd0:	e5950010 	ldr	r0, [r5, #16]
  41cbd4:	e5903038 	ldr	r3, [r0, #56]	; 0x38
  41cbd8:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  41cbdc:	e3530000 	cmp	r3, #0
  41cbe0:	0a000008 	beq	41cc08 <cvCopy+0x1f8>
  41cbe4:	e5932004 	ldr	r2, [r3, #4]
  41cbe8:	e5802038 	str	r2, [r0, #56]	; 0x38
  41cbec:	e5932000 	ldr	r2, [r3]
  41cbf0:	e3c2233f 	bic	r2, r2, #-67108864	; 0xfc000000
  41cbf4:	e5832000 	str	r2, [r3]
  41cbf8:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
  41cbfc:	e2833001 	add	r3, r3, #1
  41cc00:	e580303c 	str	r3, [r0, #60]	; 0x3c
  41cc04:	ea000002 	b	41cc14 <cvCopy+0x204>
  41cc08:	e3a01000 	mov	r1, #0
  41cc0c:	e28d203c 	add	r2, sp, #60	; 0x3c
  41cc10:	ebfff138 	bl	4190f8 <cvSetAdd>
  41cc14:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  41cc18:	e595c018 	ldr	ip, [r5, #24]
  41cc1c:	e24cc001 	sub	ip, ip, #1
  41cc20:	e5943000 	ldr	r3, [r4]
  41cc24:	e00cc003 	and	ip, ip, r3
  41cc28:	e5953010 	ldr	r3, [r5, #16]
  41cc2c:	e593101c 	ldr	r1, [r3, #28]
  41cc30:	e3110003 	tst	r1, #3
  41cc34:	1a000017 	bne	41cc98 <cvCopy+0x288>
  41cc38:	e3140003 	tst	r4, #3
  41cc3c:	1a000001 	bne	41cc48 <cvCopy+0x238>
  41cc40:	e3120003 	tst	r2, #3
  41cc44:	0a00000b 	beq	41cc78 <cvCopy+0x268>
  41cc48:	e59f0828 	ldr	r0, [pc, #2088]	; 41d478 <cvCopy+0xa68>
  41cc4c:	e08f0000 	add	r0, pc, r0
  41cc50:	e59f1824 	ldr	r1, [pc, #2084]	; 41d47c <cvCopy+0xa6c>
  41cc54:	e59f2824 	ldr	r2, [pc, #2084]	; 41d480 <cvCopy+0xa70>
  41cc58:	e08f2002 	add	r2, pc, r2
  41cc5c:	e59f3820 	ldr	r3, [pc, #2080]	; 41d484 <cvCopy+0xa74>
  41cc60:	e08f3003 	add	r3, pc, r3
  41cc64:	fa005c3a 	blx	433d54 <__assert_func>
  41cc68:	e7940003 	ldr	r0, [r4, r3]
  41cc6c:	e7820003 	str	r0, [r2, r3]
  41cc70:	e2833004 	add	r3, r3, #4
  41cc74:	ea000000 	b	41cc7c <cvCopy+0x26c>
  41cc78:	e3a03000 	mov	r3, #0
  41cc7c:	e1530001 	cmp	r3, r1
  41cc80:	3afffff8 	bcc	41cc68 <cvCopy+0x258>
  41cc84:	ea000006 	b	41cca4 <cvCopy+0x294>
  41cc88:	e7d40003 	ldrb	r0, [r4, r3]
  41cc8c:	e7c20003 	strb	r0, [r2, r3]
  41cc90:	e2833001 	add	r3, r3, #1
  41cc94:	ea000000 	b	41cc9c <cvCopy+0x28c>
  41cc98:	e3a03000 	mov	r3, #0
  41cc9c:	e1530001 	cmp	r3, r1
  41cca0:	3afffff8 	bcc	41cc88 <cvCopy+0x278>
  41cca4:	e5953014 	ldr	r3, [r5, #20]
  41cca8:	e793310c 	ldr	r3, [r3, ip, lsl #2]
  41ccac:	e5823004 	str	r3, [r2, #4]
  41ccb0:	e5953014 	ldr	r3, [r5, #20]
  41ccb4:	e783210c 	str	r2, [r3, ip, lsl #2]
  41ccb8:	e59d3120 	ldr	r3, [sp, #288]	; 0x120
  41ccbc:	e5934004 	ldr	r4, [r3, #4]
  41ccc0:	e3540000 	cmp	r4, #0
  41ccc4:	158d4120 	strne	r4, [sp, #288]	; 0x120
  41ccc8:	1a00000f 	bne	41cd0c <cvCopy+0x2fc>
  41cccc:	e59d3124 	ldr	r3, [sp, #292]	; 0x124
  41ccd0:	e2833001 	add	r3, r3, #1
  41ccd4:	e58d3124 	str	r3, [sp, #292]	; 0x124
  41ccd8:	ea000006 	b	41ccf8 <cvCopy+0x2e8>
  41ccdc:	e5922014 	ldr	r2, [r2, #20]
  41cce0:	e7924103 	ldr	r4, [r2, r3, lsl #2]
  41cce4:	e3540000 	cmp	r4, #0
  41cce8:	158d3124 	strne	r3, [sp, #292]	; 0x124
  41ccec:	158d4120 	strne	r4, [sp, #288]	; 0x120
  41ccf0:	1a000005 	bne	41cd0c <cvCopy+0x2fc>
  41ccf4:	e2833001 	add	r3, r3, #1
  41ccf8:	e59d211c 	ldr	r2, [sp, #284]	; 0x11c
  41ccfc:	e5921018 	ldr	r1, [r2, #24]
  41cd00:	e1530001 	cmp	r3, r1
  41cd04:	bafffff4 	blt	41ccdc <cvCopy+0x2cc>
  41cd08:	e3a04000 	mov	r4, #0
  41cd0c:	e3540000 	cmp	r4, #0
  41cd10:	1affffae 	bne	41cbd0 <cvCopy+0x1c0>
  41cd14:	ea0001ca 	b	41d444 <cvCopy+0xa34>
  41cd18:	e3540000 	cmp	r4, #0
  41cd1c:	0a000006 	beq	41cd3c <cvCopy+0x32c>
  41cd20:	e1d420b2 	ldrh	r2, [r4, #2]
  41cd24:	e59f375c 	ldr	r3, [pc, #1884]	; 41d488 <cvCopy+0xa78>
  41cd28:	e1530802 	cmp	r3, r2, lsl #16
  41cd2c:	1a000002 	bne	41cd3c <cvCopy+0x32c>
  41cd30:	e5943010 	ldr	r3, [r4, #16]
  41cd34:	e3530000 	cmp	r3, #0
  41cd38:	1a000008 	bne	41cd60 <cvCopy+0x350>
  41cd3c:	e3550000 	cmp	r5, #0
  41cd40:	0a000067 	beq	41cee4 <cvCopy+0x4d4>
  41cd44:	e1d520b2 	ldrh	r2, [r5, #2]
  41cd48:	e59f3738 	ldr	r3, [pc, #1848]	; 41d488 <cvCopy+0xa78>
  41cd4c:	e1530802 	cmp	r3, r2, lsl #16
  41cd50:	1a000063 	bne	41cee4 <cvCopy+0x4d4>
  41cd54:	e5953010 	ldr	r3, [r5, #16]
  41cd58:	e3530000 	cmp	r3, #0
  41cd5c:	0a000060 	beq	41cee4 <cvCopy+0x4d4>
  41cd60:	e58d4020 	str	r4, [sp, #32]
  41cd64:	e58d5024 	str	r5, [sp, #36]	; 0x24
  41cd68:	e28d303c 	add	r3, sp, #60	; 0x3c
  41cd6c:	e58d3000 	str	r3, [sp]
  41cd70:	e3a03000 	mov	r3, #0
  41cd74:	e58d3004 	str	r3, [sp, #4]
  41cd78:	e3a00002 	mov	r0, #2
  41cd7c:	e28d1020 	add	r1, sp, #32
  41cd80:	e1a02006 	mov	r2, r6
  41cd84:	e28d3f47 	add	r3, sp, #284	; 0x11c
  41cd88:	ebffc9c0 	bl	40f490 <cvInitNArrayIterator>
  41cd8c:	ebffd714 	bl	4129e4 <cvGetErrStatus>
  41cd90:	e3500000 	cmp	r0, #0
  41cd94:	aa00000a 	bge	41cdc4 <cvCopy+0x3b4>
  41cd98:	e59f36ec 	ldr	r3, [pc, #1772]	; 41d48c <cvCopy+0xa7c>
  41cd9c:	e58d3000 	str	r3, [sp]
  41cda0:	e3e00000 	mvn	r0, #0
  41cda4:	e59f16e4 	ldr	r1, [pc, #1764]	; 41d490 <cvCopy+0xa80>
  41cda8:	e08f1001 	add	r1, pc, r1
  41cdac:	e59f26e0 	ldr	r2, [pc, #1760]	; 41d494 <cvCopy+0xa84>
  41cdb0:	e08f2002 	add	r2, pc, r2
  41cdb4:	e59f36dc 	ldr	r3, [pc, #1756]	; 41d498 <cvCopy+0xa88>
  41cdb8:	e08f3003 	add	r3, pc, r3
  41cdbc:	ebffd739 	bl	412aa8 <cvError>
  41cdc0:	ea00019f 	b	41d444 <cvCopy+0xa34>
  41cdc4:	e59d30f4 	ldr	r3, [sp, #244]	; 0xf4
  41cdc8:	e5932000 	ldr	r2, [r3]
  41cdcc:	e2020f7e 	and	r0, r2, #504	; 0x1f8
  41cdd0:	e1a001c0 	asr	r0, r0, #3
  41cdd4:	e2803001 	add	r3, r0, #1
  41cdd8:	e2022007 	and	r2, r2, #7
  41cddc:	e1a02082 	lsl	r2, r2, #1
  41cde0:	e59f06b4 	ldr	r0, [pc, #1716]	; 41d49c <cvCopy+0xa8c>
  41cde4:	e1a00230 	lsr	r0, r0, r2
  41cde8:	e2000003 	and	r0, r0, #3
  41cdec:	e1a00013 	lsl	r0, r3, r0
  41cdf0:	e3560000 	cmp	r6, #0
  41cdf4:	1a00001b 	bne	41ce68 <cvCopy+0x458>
  41cdf8:	e59d3044 	ldr	r3, [sp, #68]	; 0x44
  41cdfc:	e0000093 	mul	r0, r3, r0
  41ce00:	e58d0044 	str	r0, [sp, #68]	; 0x44
  41ce04:	e3500050 	cmp	r0, #80	; 0x50
  41ce08:	ca000008 	bgt	41ce30 <cvCopy+0x420>
  41ce0c:	e59d0050 	ldr	r0, [sp, #80]	; 0x50
  41ce10:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
  41ce14:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  41ce18:	fa00602e 	blx	434ed8 <memcpy>
  41ce1c:	e28d003c 	add	r0, sp, #60	; 0x3c
  41ce20:	ebffb4dc 	bl	40a198 <cvNextNArraySlice>
  41ce24:	e3500000 	cmp	r0, #0
  41ce28:	1afffff7 	bne	41ce0c <cvCopy+0x3fc>
  41ce2c:	ea000184 	b	41d444 <cvCopy+0xa34>
  41ce30:	e28d3e46 	add	r3, sp, #1120	; 0x460
  41ce34:	e5332410 	ldr	r2, [r3, #-1040]!	; 0x410
  41ce38:	e243300c 	sub	r3, r3, #12
  41ce3c:	e8930003 	ldm	r3, {r0, r1}
  41ce40:	e88d0003 	stm	sp, {r0, r1}
  41ce44:	e59d004c 	ldr	r0, [sp, #76]	; 0x4c
  41ce48:	e3a01101 	mov	r1, #1073741824	; 0x40000000
  41ce4c:	e1a03001 	mov	r3, r1
  41ce50:	ebfffec3 	bl	41c964 <_Z14icvCopy_8u_C1RPKhiPhi6CvSize>
  41ce54:	e28d003c 	add	r0, sp, #60	; 0x3c
  41ce58:	ebffb4ce 	bl	40a198 <cvNextNArraySlice>
  41ce5c:	e3500000 	cmp	r0, #0
  41ce60:	1afffff2 	bne	41ce30 <cvCopy+0x420>
  41ce64:	ea000176 	b	41d444 <cvCopy+0xa34>
  41ce68:	ebfffed2 	bl	41c9b8 <_Z18icvGetCopyMaskFunci>
  41ce6c:	e2504000 	subs	r4, r0, #0
  41ce70:	1a00000a 	bne	41cea0 <cvCopy+0x490>
  41ce74:	e59f3624 	ldr	r3, [pc, #1572]	; 41d4a0 <cvCopy+0xa90>
  41ce78:	e58d3000 	str	r3, [sp]
  41ce7c:	e3e000d1 	mvn	r0, #209	; 0xd1
  41ce80:	e59f161c 	ldr	r1, [pc, #1564]	; 41d4a4 <cvCopy+0xa94>
  41ce84:	e08f1001 	add	r1, pc, r1
  41ce88:	e59f2618 	ldr	r2, [pc, #1560]	; 41d4a8 <cvCopy+0xa98>
  41ce8c:	e08f2002 	add	r2, pc, r2
  41ce90:	e59f3614 	ldr	r3, [pc, #1556]	; 41d4ac <cvCopy+0xa9c>
  41ce94:	e08f3003 	add	r3, pc, r3
  41ce98:	ebffd702 	bl	412aa8 <cvError>
  41ce9c:	ea000168 	b	41d444 <cvCopy+0xa34>
  41cea0:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
  41cea4:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
  41cea8:	e88d0003 	stm	sp, {r0, r1}
  41ceac:	e59d3054 	ldr	r3, [sp, #84]	; 0x54
  41ceb0:	e58d3008 	str	r3, [sp, #8]
  41ceb4:	e3a03101 	mov	r3, #1073741824	; 0x40000000
  41ceb8:	e58d300c 	str	r3, [sp, #12]
  41cebc:	e59d004c 	ldr	r0, [sp, #76]	; 0x4c
  41cec0:	e1a01003 	mov	r1, r3
  41cec4:	e59d2050 	ldr	r2, [sp, #80]	; 0x50
  41cec8:	e1a0e00f 	mov	lr, pc
  41cecc:	e12fff14 	bx	r4
  41ced0:	e28d003c 	add	r0, sp, #60	; 0x3c
  41ced4:	ebffb4af 	bl	40a198 <cvNextNArraySlice>
  41ced8:	e3500000 	cmp	r0, #0
  41cedc:	1affffef 	bne	41cea0 <cvCopy+0x490>
  41cee0:	ea000157 	b	41d444 <cvCopy+0xa34>
  41cee4:	e3a03000 	mov	r3, #0
  41cee8:	e58d3014 	str	r3, [sp, #20]
  41ceec:	e58d3018 	str	r3, [sp, #24]
  41cef0:	e1a00004 	mov	r0, r4
  41cef4:	e28d2020 	add	r2, sp, #32
  41cef8:	e1a01002 	mov	r1, r2
  41cefc:	e28d2014 	add	r2, sp, #20
  41cf00:	ebffc709 	bl	40eb2c <cvGetMat>
  41cf04:	e1a04000 	mov	r4, r0
  41cf08:	ebffd6b5 	bl	4129e4 <cvGetErrStatus>
  41cf0c:	e3500000 	cmp	r0, #0
  41cf10:	aa00000a 	bge	41cf40 <cvCopy+0x530>
  41cf14:	e59f3594 	ldr	r3, [pc, #1428]	; 41d4b0 <cvCopy+0xaa0>
  41cf18:	e58d3000 	str	r3, [sp]
  41cf1c:	e3e00000 	mvn	r0, #0
  41cf20:	e59f158c 	ldr	r1, [pc, #1420]	; 41d4b4 <cvCopy+0xaa4>
  41cf24:	e08f1001 	add	r1, pc, r1
  41cf28:	e59f2588 	ldr	r2, [pc, #1416]	; 41d4b8 <cvCopy+0xaa8>
  41cf2c:	e08f2002 	add	r2, pc, r2
  41cf30:	e59f3584 	ldr	r3, [pc, #1412]	; 41d4bc <cvCopy+0xaac>
  41cf34:	e08f3003 	add	r3, pc, r3
  41cf38:	ebffd6da 	bl	412aa8 <cvError>
  41cf3c:	ea000140 	b	41d444 <cvCopy+0xa34>
  41cf40:	e1a00005 	mov	r0, r5
  41cf44:	e28d103c 	add	r1, sp, #60	; 0x3c
  41cf48:	e28d2018 	add	r2, sp, #24
  41cf4c:	e3a03000 	mov	r3, #0
  41cf50:	ebffc6f5 	bl	40eb2c <cvGetMat>
  41cf54:	e1a05000 	mov	r5, r0
  41cf58:	ebffd6a1 	bl	4129e4 <cvGetErrStatus>
  41cf5c:	e3500000 	cmp	r0, #0
  41cf60:	aa00000a 	bge	41cf90 <cvCopy+0x580>
  41cf64:	e59f3554 	ldr	r3, [pc, #1364]	; 41d4c0 <cvCopy+0xab0>
  41cf68:	e58d3000 	str	r3, [sp]
  41cf6c:	e3e00000 	mvn	r0, #0
  41cf70:	e59f154c 	ldr	r1, [pc, #1356]	; 41d4c4 <cvCopy+0xab4>
  41cf74:	e08f1001 	add	r1, pc, r1
  41cf78:	e59f2548 	ldr	r2, [pc, #1352]	; 41d4c8 <cvCopy+0xab8>
  41cf7c:	e08f2002 	add	r2, pc, r2
  41cf80:	e59f3544 	ldr	r3, [pc, #1348]	; 41d4cc <cvCopy+0xabc>
  41cf84:	e08f3003 	add	r3, pc, r3
  41cf88:	ebffd6c6 	bl	412aa8 <cvError>
  41cf8c:	ea00012c 	b	41d444 <cvCopy+0xa34>
  41cf90:	e59d2014 	ldr	r2, [sp, #20]
  41cf94:	e3520000 	cmp	r2, #0
  41cf98:	0a000029 	beq	41d044 <cvCopy+0x634>
  41cf9c:	e3a03000 	mov	r3, #0
  41cfa0:	e58d311c 	str	r3, [sp, #284]	; 0x11c
  41cfa4:	e58d3120 	str	r3, [sp, #288]	; 0x120
  41cfa8:	e58d3124 	str	r3, [sp, #292]	; 0x124
  41cfac:	e58d3128 	str	r3, [sp, #296]	; 0x128
  41cfb0:	e1560003 	cmp	r6, r3
  41cfb4:	0a00000a 	beq	41cfe4 <cvCopy+0x5d4>
  41cfb8:	e59f3510 	ldr	r3, [pc, #1296]	; 41d4d0 <cvCopy+0xac0>
  41cfbc:	e58d3000 	str	r3, [sp]
  41cfc0:	e3e00004 	mvn	r0, #4
  41cfc4:	e59f1508 	ldr	r1, [pc, #1288]	; 41d4d4 <cvCopy+0xac4>
  41cfc8:	e08f1001 	add	r1, pc, r1
  41cfcc:	e59f2504 	ldr	r2, [pc, #1284]	; 41d4d8 <cvCopy+0xac8>
  41cfd0:	e08f2002 	add	r2, pc, r2
  41cfd4:	e59f3500 	ldr	r3, [pc, #1280]	; 41d4dc <cvCopy+0xacc>
  41cfd8:	e08f3003 	add	r3, pc, r3
  41cfdc:	ebffd6b1 	bl	412aa8 <cvError>
  41cfe0:	ea000117 	b	41d444 <cvCopy+0xa34>
  41cfe4:	e28d3e46 	add	r3, sp, #1120	; 0x460
  41cfe8:	e0832102 	add	r2, r3, r2, lsl #2
  41cfec:	e5025348 	str	r5, [r2, #-840]	; 0x348
  41cff0:	e59d3128 	ldr	r3, [sp, #296]	; 0x128
  41cff4:	e58d3000 	str	r3, [sp]
  41cff8:	e1a00004 	mov	r0, r4
  41cffc:	e59d111c 	ldr	r1, [sp, #284]	; 0x11c
  41d000:	e59d2120 	ldr	r2, [sp, #288]	; 0x120
  41d004:	e59d3124 	ldr	r3, [sp, #292]	; 0x124
  41d008:	eb00445a 	bl	42e178 <cvSplit>
  41d00c:	ebffd674 	bl	4129e4 <cvGetErrStatus>
  41d010:	e3500000 	cmp	r0, #0
  41d014:	aa00010a 	bge	41d444 <cvCopy+0xa34>
  41d018:	e3a03e19 	mov	r3, #400	; 0x190
  41d01c:	e58d3000 	str	r3, [sp]
  41d020:	e3e00000 	mvn	r0, #0
  41d024:	e59f14b4 	ldr	r1, [pc, #1204]	; 41d4e0 <cvCopy+0xad0>
  41d028:	e08f1001 	add	r1, pc, r1
  41d02c:	e59f24b0 	ldr	r2, [pc, #1200]	; 41d4e4 <cvCopy+0xad4>
  41d030:	e08f2002 	add	r2, pc, r2
  41d034:	e59f34ac 	ldr	r3, [pc, #1196]	; 41d4e8 <cvCopy+0xad8>
  41d038:	e08f3003 	add	r3, pc, r3
  41d03c:	ebffd699 	bl	412aa8 <cvError>
  41d040:	ea0000ff 	b	41d444 <cvCopy+0xa34>
  41d044:	e59d2018 	ldr	r2, [sp, #24]
  41d048:	e3520000 	cmp	r2, #0
  41d04c:	0a000028 	beq	41d0f4 <cvCopy+0x6e4>
  41d050:	e3a03000 	mov	r3, #0
  41d054:	e58d311c 	str	r3, [sp, #284]	; 0x11c
  41d058:	e58d3120 	str	r3, [sp, #288]	; 0x120
  41d05c:	e58d3124 	str	r3, [sp, #292]	; 0x124
  41d060:	e58d3128 	str	r3, [sp, #296]	; 0x128
  41d064:	e1560003 	cmp	r6, r3
  41d068:	0a00000a 	beq	41d098 <cvCopy+0x688>
  41d06c:	e3a03f66 	mov	r3, #408	; 0x198
  41d070:	e58d3000 	str	r3, [sp]
  41d074:	e3e00004 	mvn	r0, #4
  41d078:	e59f146c 	ldr	r1, [pc, #1132]	; 41d4ec <cvCopy+0xadc>
  41d07c:	e08f1001 	add	r1, pc, r1
  41d080:	e59f2468 	ldr	r2, [pc, #1128]	; 41d4f0 <cvCopy+0xae0>
  41d084:	e08f2002 	add	r2, pc, r2
  41d088:	e59f3464 	ldr	r3, [pc, #1124]	; 41d4f4 <cvCopy+0xae4>
  41d08c:	e08f3003 	add	r3, pc, r3
  41d090:	ebffd684 	bl	412aa8 <cvError>
  41d094:	ea0000ea 	b	41d444 <cvCopy+0xa34>
  41d098:	e28d3e46 	add	r3, sp, #1120	; 0x460
  41d09c:	e0832102 	add	r2, r3, r2, lsl #2
  41d0a0:	e5024348 	str	r4, [r2, #-840]	; 0x348
  41d0a4:	e58d5000 	str	r5, [sp]
  41d0a8:	e59d011c 	ldr	r0, [sp, #284]	; 0x11c
  41d0ac:	e59d1120 	ldr	r1, [sp, #288]	; 0x120
  41d0b0:	e59d2124 	ldr	r2, [sp, #292]	; 0x124
  41d0b4:	e59d3128 	ldr	r3, [sp, #296]	; 0x128
  41d0b8:	eb004594 	bl	42e710 <cvMerge>
  41d0bc:	ebffd648 	bl	4129e4 <cvGetErrStatus>
  41d0c0:	e3500000 	cmp	r0, #0
  41d0c4:	aa0000de 	bge	41d444 <cvCopy+0xa34>
  41d0c8:	e59f3428 	ldr	r3, [pc, #1064]	; 41d4f8 <cvCopy+0xae8>
  41d0cc:	e58d3000 	str	r3, [sp]
  41d0d0:	e3e00000 	mvn	r0, #0
  41d0d4:	e59f1420 	ldr	r1, [pc, #1056]	; 41d4fc <cvCopy+0xaec>
  41d0d8:	e08f1001 	add	r1, pc, r1
  41d0dc:	e59f241c 	ldr	r2, [pc, #1052]	; 41d500 <cvCopy+0xaf0>
  41d0e0:	e08f2002 	add	r2, pc, r2
  41d0e4:	e59f3418 	ldr	r3, [pc, #1048]	; 41d504 <cvCopy+0xaf4>
  41d0e8:	e08f3003 	add	r3, pc, r3
  41d0ec:	ebffd66d 	bl	412aa8 <cvError>
  41d0f0:	ea0000d3 	b	41d444 <cvCopy+0xa34>
  41d0f4:	e5942000 	ldr	r2, [r4]
  41d0f8:	e595c000 	ldr	ip, [r5]
  41d0fc:	e022300c 	eor	r3, r2, ip
  41d100:	e1b03b83 	lsls	r3, r3, #23
  41d104:	0a00000a 	beq	41d134 <cvCopy+0x724>
  41d108:	e59f33f8 	ldr	r3, [pc, #1016]	; 41d508 <cvCopy+0xaf8>
  41d10c:	e58d3000 	str	r3, [sp]
  41d110:	e3e000cc 	mvn	r0, #204	; 0xcc
  41d114:	e59f13f0 	ldr	r1, [pc, #1008]	; 41d50c <cvCopy+0xafc>
  41d118:	e08f1001 	add	r1, pc, r1
  41d11c:	e59f23ec 	ldr	r2, [pc, #1004]	; 41d510 <cvCopy+0xb00>
  41d120:	e08f2002 	add	r2, pc, r2
  41d124:	e59f33e8 	ldr	r3, [pc, #1000]	; 41d514 <cvCopy+0xb04>
  41d128:	e08f3003 	add	r3, pc, r3
  41d12c:	ebffd65d 	bl	412aa8 <cvError>
  41d130:	ea0000c3 	b	41d444 <cvCopy+0xa34>
  41d134:	e5947014 	ldr	r7, [r4, #20]
  41d138:	e5953014 	ldr	r3, [r5, #20]
  41d13c:	e1570003 	cmp	r7, r3
  41d140:	1a000003 	bne	41d154 <cvCopy+0x744>
  41d144:	e5948018 	ldr	r8, [r4, #24]
  41d148:	e5953018 	ldr	r3, [r5, #24]
  41d14c:	e1580003 	cmp	r8, r3
  41d150:	0a00000a 	beq	41d180 <cvCopy+0x770>
  41d154:	e59f33bc 	ldr	r3, [pc, #956]	; 41d518 <cvCopy+0xb08>
  41d158:	e58d3000 	str	r3, [sp]
  41d15c:	e3e000d0 	mvn	r0, #208	; 0xd0
  41d160:	e59f13b4 	ldr	r1, [pc, #948]	; 41d51c <cvCopy+0xb0c>
  41d164:	e08f1001 	add	r1, pc, r1
  41d168:	e59f23b0 	ldr	r2, [pc, #944]	; 41d520 <cvCopy+0xb10>
  41d16c:	e08f2002 	add	r2, pc, r2
  41d170:	e59f33ac 	ldr	r3, [pc, #940]	; 41d524 <cvCopy+0xb14>
  41d174:	e08f3003 	add	r3, pc, r3
  41d178:	ebffd64a 	bl	412aa8 <cvError>
  41d17c:	ea0000b0 	b	41d444 <cvCopy+0xa34>
  41d180:	e58d8458 	str	r8, [sp, #1112]	; 0x458
  41d184:	e58d745c 	str	r7, [sp, #1116]	; 0x45c
  41d188:	e28d3e46 	add	r3, sp, #1120	; 0x460
  41d18c:	e9130003 	ldmdb	r3, {r0, r1}
  41d190:	e28d3020 	add	r3, sp, #32
  41d194:	e9030003 	stmdb	r3, {r0, r1}
  41d198:	e2023f7e 	and	r3, r2, #504	; 0x1f8
  41d19c:	e1a031c3 	asr	r3, r3, #3
  41d1a0:	e2833001 	add	r3, r3, #1
  41d1a4:	e2020007 	and	r0, r2, #7
  41d1a8:	e1a00080 	lsl	r0, r0, #1
  41d1ac:	e59f12e8 	ldr	r1, [pc, #744]	; 41d49c <cvCopy+0xa8c>
  41d1b0:	e1a00031 	lsr	r0, r1, r0
  41d1b4:	e2000003 	and	r0, r0, #3
  41d1b8:	e1a00013 	lsl	r0, r3, r0
  41d1bc:	e3560000 	cmp	r6, #0
  41d1c0:	1a000021 	bne	41d24c <cvCopy+0x83c>
  41d1c4:	e594e004 	ldr	lr, [r4, #4]
  41d1c8:	e5953004 	ldr	r3, [r5, #4]
  41d1cc:	e0000098 	mul	r0, r8, r0
  41d1d0:	e58d0018 	str	r0, [sp, #24]
  41d1d4:	e002200c 	and	r2, r2, ip
  41d1d8:	e3120901 	tst	r2, #16384	; 0x4000
  41d1dc:	0a00000f 	beq	41d220 <cvCopy+0x810>
  41d1e0:	e15e0003 	cmp	lr, r3
  41d1e4:	1a00000d 	bne	41d220 <cvCopy+0x810>
  41d1e8:	e15e0000 	cmp	lr, r0
  41d1ec:	1a00000b 	bne	41d220 <cvCopy+0x810>
  41d1f0:	e0020790 	mul	r2, r0, r7
  41d1f4:	e58d2018 	str	r2, [sp, #24]
  41d1f8:	e3520e32 	cmp	r2, #800	; 0x320
  41d1fc:	ca000003 	bgt	41d210 <cvCopy+0x800>
  41d200:	e5950010 	ldr	r0, [r5, #16]
  41d204:	e5941010 	ldr	r1, [r4, #16]
  41d208:	fa005f32 	blx	434ed8 <memcpy>
  41d20c:	ea00008c 	b	41d444 <cvCopy+0xa34>
  41d210:	e3a03001 	mov	r3, #1
  41d214:	e58d301c 	str	r3, [sp, #28]
  41d218:	e3a03101 	mov	r3, #1073741824	; 0x40000000
  41d21c:	e1a0e003 	mov	lr, r3
  41d220:	e594c010 	ldr	ip, [r4, #16]
  41d224:	e5952010 	ldr	r2, [r5, #16]
  41d228:	e15c0002 	cmp	ip, r2
  41d22c:	0a000084 	beq	41d444 <cvCopy+0xa34>
  41d230:	e28d1020 	add	r1, sp, #32
  41d234:	e9110003 	ldmdb	r1, {r0, r1}
  41d238:	e88d0003 	stm	sp, {r0, r1}
  41d23c:	e1a0000c 	mov	r0, ip
  41d240:	e1a0100e 	mov	r1, lr
  41d244:	ebfffdc6 	bl	41c964 <_Z14icvCopy_8u_C1RPKhiPhi6CvSize>
  41d248:	ea00007d 	b	41d444 <cvCopy+0xa34>
  41d24c:	ebfffdd9 	bl	41c9b8 <_Z18icvGetCopyMaskFunci>
  41d250:	e1a09000 	mov	r9, r0
  41d254:	e594b004 	ldr	fp, [r4, #4]
  41d258:	e595a004 	ldr	sl, [r5, #4]
  41d25c:	e3560000 	cmp	r6, #0
  41d260:	0a00000c 	beq	41d298 <cvCopy+0x888>
  41d264:	e1d620b2 	ldrh	r2, [r6, #2]
  41d268:	e59f31e4 	ldr	r3, [pc, #484]	; 41d454 <cvCopy+0xa44>
  41d26c:	e1530802 	cmp	r3, r2, lsl #16
  41d270:	1a000008 	bne	41d298 <cvCopy+0x888>
  41d274:	e5963018 	ldr	r3, [r6, #24]
  41d278:	e3530000 	cmp	r3, #0
  41d27c:	da000005 	ble	41d298 <cvCopy+0x888>
  41d280:	e5963014 	ldr	r3, [r6, #20]
  41d284:	e3530000 	cmp	r3, #0
  41d288:	da000002 	ble	41d298 <cvCopy+0x888>
  41d28c:	e5963010 	ldr	r3, [r6, #16]
  41d290:	e3530000 	cmp	r3, #0
  41d294:	1a000013 	bne	41d2e8 <cvCopy+0x8d8>
  41d298:	e1a00006 	mov	r0, r6
  41d29c:	e28d1f47 	add	r1, sp, #284	; 0x11c
  41d2a0:	e3a02000 	mov	r2, #0
  41d2a4:	e1a03002 	mov	r3, r2
  41d2a8:	ebffc61f 	bl	40eb2c <cvGetMat>
  41d2ac:	e1a06000 	mov	r6, r0
  41d2b0:	ebffd5cb 	bl	4129e4 <cvGetErrStatus>
  41d2b4:	e3500000 	cmp	r0, #0
  41d2b8:	aa00000a 	bge	41d2e8 <cvCopy+0x8d8>
  41d2bc:	e59f3264 	ldr	r3, [pc, #612]	; 41d528 <cvCopy+0xb18>
  41d2c0:	e58d3000 	str	r3, [sp]
  41d2c4:	e3e00000 	mvn	r0, #0
  41d2c8:	e59f125c 	ldr	r1, [pc, #604]	; 41d52c <cvCopy+0xb1c>
  41d2cc:	e08f1001 	add	r1, pc, r1
  41d2d0:	e59f2258 	ldr	r2, [pc, #600]	; 41d530 <cvCopy+0xb20>
  41d2d4:	e08f2002 	add	r2, pc, r2
  41d2d8:	e59f3254 	ldr	r3, [pc, #596]	; 41d534 <cvCopy+0xb24>
  41d2dc:	e08f3003 	add	r3, pc, r3
  41d2e0:	ebffd5f0 	bl	412aa8 <cvError>
  41d2e4:	ea000056 	b	41d444 <cvCopy+0xa34>
  41d2e8:	e5962000 	ldr	r2, [r6]
  41d2ec:	e59f3244 	ldr	r3, [pc, #580]	; 41d538 <cvCopy+0xb28>
  41d2f0:	e0033002 	and	r3, r3, r2
  41d2f4:	e3530000 	cmp	r3, #0
  41d2f8:	0a00000a 	beq	41d328 <cvCopy+0x918>
  41d2fc:	e3a03f73 	mov	r3, #460	; 0x1cc
  41d300:	e58d3000 	str	r3, [sp]
  41d304:	e3e000cf 	mvn	r0, #207	; 0xcf
  41d308:	e59f122c 	ldr	r1, [pc, #556]	; 41d53c <cvCopy+0xb2c>
  41d30c:	e08f1001 	add	r1, pc, r1
  41d310:	e59f2228 	ldr	r2, [pc, #552]	; 41d540 <cvCopy+0xb30>
  41d314:	e08f2002 	add	r2, pc, r2
  41d318:	e59f3224 	ldr	r3, [pc, #548]	; 41d544 <cvCopy+0xb34>
  41d31c:	e08f3003 	add	r3, pc, r3
  41d320:	ebffd5e0 	bl	412aa8 <cvError>
  41d324:	ea000046 	b	41d444 <cvCopy+0xa34>
  41d328:	e5941014 	ldr	r1, [r4, #20]
  41d32c:	e5963014 	ldr	r3, [r6, #20]
  41d330:	e1510003 	cmp	r1, r3
  41d334:	1a000003 	bne	41d348 <cvCopy+0x938>
  41d338:	e5941018 	ldr	r1, [r4, #24]
  41d33c:	e5963018 	ldr	r3, [r6, #24]
  41d340:	e1510003 	cmp	r1, r3
  41d344:	0a00000a 	beq	41d374 <cvCopy+0x964>
  41d348:	e59f31f8 	ldr	r3, [pc, #504]	; 41d548 <cvCopy+0xb38>
  41d34c:	e58d3000 	str	r3, [sp]
  41d350:	e3e000d0 	mvn	r0, #208	; 0xd0
  41d354:	e59f11f0 	ldr	r1, [pc, #496]	; 41d54c <cvCopy+0xb3c>
  41d358:	e08f1001 	add	r1, pc, r1
  41d35c:	e59f21ec 	ldr	r2, [pc, #492]	; 41d550 <cvCopy+0xb40>
  41d360:	e08f2002 	add	r2, pc, r2
  41d364:	e59f31e8 	ldr	r3, [pc, #488]	; 41d554 <cvCopy+0xb44>
  41d368:	e08f3003 	add	r3, pc, r3
  41d36c:	ebffd5cd 	bl	412aa8 <cvError>
  41d370:	ea000033 	b	41d444 <cvCopy+0xa34>
  41d374:	e596c004 	ldr	ip, [r6, #4]
  41d378:	e5941000 	ldr	r1, [r4]
  41d37c:	e5953000 	ldr	r3, [r5]
  41d380:	e0033001 	and	r3, r3, r1
  41d384:	e0022003 	and	r2, r2, r3
  41d388:	e3120901 	tst	r2, #16384	; 0x4000
  41d38c:	0a000006 	beq	41d3ac <cvCopy+0x99c>
  41d390:	e0070798 	mul	r7, r8, r7
  41d394:	e58d7018 	str	r7, [sp, #24]
  41d398:	e3a03001 	mov	r3, #1
  41d39c:	e58d301c 	str	r3, [sp, #28]
  41d3a0:	e3a0c101 	mov	ip, #1073741824	; 0x40000000
  41d3a4:	e1a0a00c 	mov	sl, ip
  41d3a8:	e1a0b00c 	mov	fp, ip
  41d3ac:	e3590000 	cmp	r9, #0
  41d3b0:	1a00000a 	bne	41d3e0 <cvCopy+0x9d0>
  41d3b4:	e59f319c 	ldr	r3, [pc, #412]	; 41d558 <cvCopy+0xb48>
  41d3b8:	e58d3000 	str	r3, [sp]
  41d3bc:	e3e000d1 	mvn	r0, #209	; 0xd1
  41d3c0:	e59f1194 	ldr	r1, [pc, #404]	; 41d55c <cvCopy+0xb4c>
  41d3c4:	e08f1001 	add	r1, pc, r1
  41d3c8:	e59f2190 	ldr	r2, [pc, #400]	; 41d560 <cvCopy+0xb50>
  41d3cc:	e08f2002 	add	r2, pc, r2
  41d3d0:	e59f318c 	ldr	r3, [pc, #396]	; 41d564 <cvCopy+0xb54>
  41d3d4:	e08f3003 	add	r3, pc, r3
  41d3d8:	ebffd5b2 	bl	412aa8 <cvError>
  41d3dc:	ea000018 	b	41d444 <cvCopy+0xa34>
  41d3e0:	e594e010 	ldr	lr, [r4, #16]
  41d3e4:	e5952010 	ldr	r2, [r5, #16]
  41d3e8:	e5964010 	ldr	r4, [r6, #16]
  41d3ec:	e28d3020 	add	r3, sp, #32
  41d3f0:	e9130003 	ldmdb	r3, {r0, r1}
  41d3f4:	e88d0003 	stm	sp, {r0, r1}
  41d3f8:	e58d4008 	str	r4, [sp, #8]
  41d3fc:	e58dc00c 	str	ip, [sp, #12]
  41d400:	e1a0000e 	mov	r0, lr
  41d404:	e1a0100b 	mov	r1, fp
  41d408:	e1a0300a 	mov	r3, sl
  41d40c:	e1a0e00f 	mov	lr, pc
  41d410:	e12fff19 	bx	r9
  41d414:	e3500000 	cmp	r0, #0
  41d418:	aa000009 	bge	41d444 <cvCopy+0xa34>
  41d41c:	ebffd5da 	bl	412b8c <cvErrorFromIppStatus>
  41d420:	e59f3140 	ldr	r3, [pc, #320]	; 41d568 <cvCopy+0xb58>
  41d424:	e58d3000 	str	r3, [sp]
  41d428:	e59f113c 	ldr	r1, [pc, #316]	; 41d56c <cvCopy+0xb5c>
  41d42c:	e08f1001 	add	r1, pc, r1
  41d430:	e59f2138 	ldr	r2, [pc, #312]	; 41d570 <cvCopy+0xb60>
  41d434:	e08f2002 	add	r2, pc, r2
  41d438:	e59f3134 	ldr	r3, [pc, #308]	; 41d574 <cvCopy+0xb64>
  41d43c:	e08f3003 	add	r3, pc, r3
  41d440:	ebffd598 	bl	412aa8 <cvError>
  41d444:	e28dde46 	add	sp, sp, #1120	; 0x460
  41d448:	e28dd004 	add	sp, sp, #4
  41d44c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41d450:	e12fff1e 	bx	lr
  41d454:	42420000 	.word	0x42420000
  41d458:	42440000 	.word	0x42440000
  41d45c:	1fbe4254 	.word	0x1fbe4254
  41d460:	00020488 	.word	0x00020488
  41d464:	000231b8 	.word	0x000231b8
  41d468:	00000143 	.word	0x00000143
  41d46c:	1fbe4208 	.word	0x1fbe4208
  41d470:	0002043c 	.word	0x0002043c
  41d474:	0002316c 	.word	0x0002316c
  41d478:	000230bc 	.word	0x000230bc
  41d47c:	0000014d 	.word	0x0000014d
  41d480:	00023080 	.word	0x00023080
  41d484:	00020628 	.word	0x00020628
  41d488:	42430000 	.word	0x42430000
  41d48c:	00000159 	.word	0x00000159
  41d490:	1fbe3fec 	.word	0x1fbe3fec
  41d494:	00020220 	.word	0x00020220
  41d498:	00022f50 	.word	0x00022f50
  41d49c:	0000ba50 	.word	0x0000ba50
  41d4a0:	00000175 	.word	0x00000175
  41d4a4:	1fbe3f10 	.word	0x1fbe3f10
  41d4a8:	00023584 	.word	0x00023584
  41d4ac:	00022e74 	.word	0x00022e74
  41d4b0:	00000185 	.word	0x00000185
  41d4b4:	1fbe3e70 	.word	0x1fbe3e70
  41d4b8:	000200a4 	.word	0x000200a4
  41d4bc:	00022dd4 	.word	0x00022dd4
  41d4c0:	00000186 	.word	0x00000186
  41d4c4:	1fbe3e20 	.word	0x1fbe3e20
  41d4c8:	00020054 	.word	0x00020054
  41d4cc:	00022d84 	.word	0x00022d84
  41d4d0:	0000018d 	.word	0x0000018d
  41d4d4:	1fbe3dcc 	.word	0x1fbe3dcc
  41d4d8:	00022d54 	.word	0x00022d54
  41d4dc:	00022d30 	.word	0x00022d30
  41d4e0:	1fbe3d6c 	.word	0x1fbe3d6c
  41d4e4:	0001ffa0 	.word	0x0001ffa0
  41d4e8:	00022cd0 	.word	0x00022cd0
  41d4ec:	1fbe3d18 	.word	0x1fbe3d18
  41d4f0:	00022ca0 	.word	0x00022ca0
  41d4f4:	00022c7c 	.word	0x00022c7c
  41d4f8:	0000019b 	.word	0x0000019b
  41d4fc:	1fbe3cbc 	.word	0x1fbe3cbc
  41d500:	0001fef0 	.word	0x0001fef0
  41d504:	00022c20 	.word	0x00022c20
  41d508:	000001a2 	.word	0x000001a2
  41d50c:	1fbe3c7c 	.word	0x1fbe3c7c
  41d510:	000232f0 	.word	0x000232f0
  41d514:	00022be0 	.word	0x00022be0
  41d518:	000001a5 	.word	0x000001a5
  41d51c:	1fbe3c30 	.word	0x1fbe3c30
  41d520:	000232a4 	.word	0x000232a4
  41d524:	00022b94 	.word	0x00022b94
  41d528:	000001ca 	.word	0x000001ca
  41d52c:	1fbe3ac8 	.word	0x1fbe3ac8
  41d530:	0001fcfc 	.word	0x0001fcfc
  41d534:	00022a2c 	.word	0x00022a2c
  41d538:	000001fe 	.word	0x000001fe
  41d53c:	1fbe3a88 	.word	0x1fbe3a88
  41d540:	000230fc 	.word	0x000230fc
  41d544:	000229ec 	.word	0x000229ec
  41d548:	000001cf 	.word	0x000001cf
  41d54c:	1fbe3a3c 	.word	0x1fbe3a3c
  41d550:	000230b0 	.word	0x000230b0
  41d554:	000229a0 	.word	0x000229a0
  41d558:	000001db 	.word	0x000001db
  41d55c:	1fbe39d0 	.word	0x1fbe39d0
  41d560:	00023044 	.word	0x00023044
  41d564:	00022934 	.word	0x00022934
  41d568:	000001de 	.word	0x000001de
  41d56c:	1fbe3968 	.word	0x1fbe3968
  41d570:	00022910 	.word	0x00022910
  41d574:	000228cc 	.word	0x000228cc

0041d578 <_Z17icvSetZero_8u_C1RPhi6CvSize>:
  41d578:	e92d4070 	push	{r4, r5, r6, lr}
  41d57c:	e24dd010 	sub	sp, sp, #16
  41d580:	e1a04000 	mov	r4, r0
  41d584:	e1a06001 	mov	r6, r1
  41d588:	e28d1010 	add	r1, sp, #16
  41d58c:	e901000c 	stmdb	r1, {r2, r3}
  41d590:	e59f208c 	ldr	r2, [pc, #140]	; 41d624 <_Z17icvSetZero_8u_C1RPhi6CvSize+0xac>
  41d594:	e08f2002 	add	r2, pc, r2
  41d598:	e59d5008 	ldr	r5, [sp, #8]
  41d59c:	e59d300c 	ldr	r3, [sp, #12]
  41d5a0:	e0853003 	add	r3, r5, r3
  41d5a4:	e3530c01 	cmp	r3, #256	; 0x100
  41d5a8:	da000012 	ble	41d5f8 <_Z17icvSetZero_8u_C1RPhi6CvSize+0x80>
  41d5ac:	e59f3074 	ldr	r3, [pc, #116]	; 41d628 <_Z17icvSetZero_8u_C1RPhi6CvSize+0xb0>
  41d5b0:	e7923003 	ldr	r3, [r2, r3]
  41d5b4:	e593c000 	ldr	ip, [r3]
  41d5b8:	e35c0000 	cmp	ip, #0
  41d5bc:	0a00000d 	beq	41d5f8 <_Z17icvSetZero_8u_C1RPhi6CvSize+0x80>
  41d5c0:	e59d300c 	ldr	r3, [sp, #12]
  41d5c4:	e58d3000 	str	r3, [sp]
  41d5c8:	e1a03005 	mov	r3, r5
  41d5cc:	e3a00000 	mov	r0, #0
  41d5d0:	e1a01004 	mov	r1, r4
  41d5d4:	e1a02006 	mov	r2, r6
  41d5d8:	e1a0e00f 	mov	lr, pc
  41d5dc:	e12fff1c 	bx	ip
  41d5e0:	ea00000a 	b	41d610 <_Z17icvSetZero_8u_C1RPhi6CvSize+0x98>
  41d5e4:	e1a00004 	mov	r0, r4
  41d5e8:	e3a01000 	mov	r1, #0
  41d5ec:	e1a02005 	mov	r2, r5
  41d5f0:	fa005eb7 	blx	4350d4 <memset>
  41d5f4:	e0844006 	add	r4, r4, r6
  41d5f8:	e59d300c 	ldr	r3, [sp, #12]
  41d5fc:	e2432001 	sub	r2, r3, #1
  41d600:	e58d200c 	str	r2, [sp, #12]
  41d604:	e3530000 	cmp	r3, #0
  41d608:	1afffff5 	bne	41d5e4 <_Z17icvSetZero_8u_C1RPhi6CvSize+0x6c>
  41d60c:	e3a00000 	mov	r0, #0
  41d610:	e1a00c00 	lsl	r0, r0, #24
  41d614:	e1a00c40 	asr	r0, r0, #24
  41d618:	e28dd010 	add	sp, sp, #16
  41d61c:	e8bd4070 	pop	{r4, r5, r6, lr}
  41d620:	e12fff1e 	bx	lr
  41d624:	00023aa0 	.word	0x00023aa0
  41d628:	0000002c 	.word	0x0000002c

0041d62c <cvSetZero>:
  41d62c:	e92d4010 	push	{r4, lr}
  41d630:	e24dde21 	sub	sp, sp, #528	; 0x210
  41d634:	e58d000c 	str	r0, [sp, #12]
  41d638:	e2504000 	subs	r4, r0, #0
  41d63c:	0a00000c 	beq	41d674 <cvSetZero+0x48>
  41d640:	e1d420b2 	ldrh	r2, [r4, #2]
  41d644:	e59f32e0 	ldr	r3, [pc, #736]	; 41d92c <cvSetZero+0x300>
  41d648:	e1530802 	cmp	r3, r2, lsl #16
  41d64c:	1a000008 	bne	41d674 <cvSetZero+0x48>
  41d650:	e5943018 	ldr	r3, [r4, #24]
  41d654:	e3530000 	cmp	r3, #0
  41d658:	da000005 	ble	41d674 <cvSetZero+0x48>
  41d65c:	e5943014 	ldr	r3, [r4, #20]
  41d660:	e3530000 	cmp	r3, #0
  41d664:	da000002 	ble	41d674 <cvSetZero+0x48>
  41d668:	e5943010 	ldr	r3, [r4, #16]
  41d66c:	e3530000 	cmp	r3, #0
  41d670:	1a000077 	bne	41d854 <cvSetZero+0x228>
  41d674:	e3540000 	cmp	r4, #0
  41d678:	0a000040 	beq	41d780 <cvSetZero+0x154>
  41d67c:	e1d420b2 	ldrh	r2, [r4, #2]
  41d680:	e59f32a8 	ldr	r3, [pc, #680]	; 41d930 <cvSetZero+0x304>
  41d684:	e1530802 	cmp	r3, r2, lsl #16
  41d688:	1a00003c 	bne	41d780 <cvSetZero+0x154>
  41d68c:	e5943010 	ldr	r3, [r4, #16]
  41d690:	e3530000 	cmp	r3, #0
  41d694:	0a000039 	beq	41d780 <cvSetZero+0x154>
  41d698:	e28d3014 	add	r3, sp, #20
  41d69c:	e58d3000 	str	r3, [sp]
  41d6a0:	e3a02000 	mov	r2, #0
  41d6a4:	e58d2004 	str	r2, [sp, #4]
  41d6a8:	e3a00001 	mov	r0, #1
  41d6ac:	e28d100c 	add	r1, sp, #12
  41d6b0:	e28d30f4 	add	r3, sp, #244	; 0xf4
  41d6b4:	ebffc775 	bl	40f490 <cvInitNArrayIterator>
  41d6b8:	ebffd4c9 	bl	4129e4 <cvGetErrStatus>
  41d6bc:	e3500000 	cmp	r0, #0
  41d6c0:	aa00000b 	bge	41d6f4 <cvSetZero+0xc8>
  41d6c4:	e59f3268 	ldr	r3, [pc, #616]	; 41d934 <cvSetZero+0x308>
  41d6c8:	e58d3000 	str	r3, [sp]
  41d6cc:	e3e00000 	mvn	r0, #0
  41d6d0:	e59f1260 	ldr	r1, [pc, #608]	; 41d938 <cvSetZero+0x30c>
  41d6d4:	e08f1001 	add	r1, pc, r1
  41d6d8:	e2811008 	add	r1, r1, #8
  41d6dc:	e59f2258 	ldr	r2, [pc, #600]	; 41d93c <cvSetZero+0x310>
  41d6e0:	e08f2002 	add	r2, pc, r2
  41d6e4:	e59f3254 	ldr	r3, [pc, #596]	; 41d940 <cvSetZero+0x314>
  41d6e8:	e08f3003 	add	r3, pc, r3
  41d6ec:	ebffd4ed 	bl	412aa8 <cvError>
  41d6f0:	ea00008a 	b	41d920 <cvSetZero+0x2f4>
  41d6f4:	e59d30cc 	ldr	r3, [sp, #204]	; 0xcc
  41d6f8:	e5931000 	ldr	r1, [r3]
  41d6fc:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  41d700:	e1a031c3 	asr	r3, r3, #3
  41d704:	e2832001 	add	r2, r3, #1
  41d708:	e2011007 	and	r1, r1, #7
  41d70c:	e1a01081 	lsl	r1, r1, #1
  41d710:	e59f322c 	ldr	r3, [pc, #556]	; 41d944 <cvSetZero+0x318>
  41d714:	e1a03133 	lsr	r3, r3, r1
  41d718:	e2033003 	and	r3, r3, #3
  41d71c:	e1a03312 	lsl	r3, r2, r3
  41d720:	e59d201c 	ldr	r2, [sp, #28]
  41d724:	e0030392 	mul	r3, r2, r3
  41d728:	e58d301c 	str	r3, [sp, #28]
  41d72c:	e3530050 	cmp	r3, #80	; 0x50
  41d730:	ca000008 	bgt	41d758 <cvSetZero+0x12c>
  41d734:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
  41d738:	e3a01000 	mov	r1, #0
  41d73c:	e59d201c 	ldr	r2, [sp, #28]
  41d740:	fa005e63 	blx	4350d4 <memset>
  41d744:	e28d0014 	add	r0, sp, #20
  41d748:	ebffb292 	bl	40a198 <cvNextNArraySlice>
  41d74c:	e3500000 	cmp	r0, #0
  41d750:	1afffff7 	bne	41d734 <cvSetZero+0x108>
  41d754:	ea000071 	b	41d920 <cvSetZero+0x2f4>
  41d758:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
  41d75c:	e3a01101 	mov	r1, #1073741824	; 0x40000000
  41d760:	e28d301c 	add	r3, sp, #28
  41d764:	e893000c 	ldm	r3, {r2, r3}
  41d768:	ebffff82 	bl	41d578 <_Z17icvSetZero_8u_C1RPhi6CvSize>
  41d76c:	e28d0014 	add	r0, sp, #20
  41d770:	ebffb288 	bl	40a198 <cvNextNArraySlice>
  41d774:	e3500000 	cmp	r0, #0
  41d778:	1afffff6 	bne	41d758 <cvSetZero+0x12c>
  41d77c:	ea000067 	b	41d920 <cvSetZero+0x2f4>
  41d780:	e3540000 	cmp	r4, #0
  41d784:	0a00000d 	beq	41d7c0 <cvSetZero+0x194>
  41d788:	e1d420b2 	ldrh	r2, [r4, #2]
  41d78c:	e59f31b4 	ldr	r3, [pc, #436]	; 41d948 <cvSetZero+0x31c>
  41d790:	e1530802 	cmp	r3, r2, lsl #16
  41d794:	1a000009 	bne	41d7c0 <cvSetZero+0x194>
  41d798:	e5940010 	ldr	r0, [r4, #16]
  41d79c:	ebffef15 	bl	4193f8 <cvClearSet>
  41d7a0:	e5940014 	ldr	r0, [r4, #20]
  41d7a4:	e3500000 	cmp	r0, #0
  41d7a8:	0a00005c 	beq	41d920 <cvSetZero+0x2f4>
  41d7ac:	e5942018 	ldr	r2, [r4, #24]
  41d7b0:	e3a01000 	mov	r1, #0
  41d7b4:	e1a02102 	lsl	r2, r2, #2
  41d7b8:	fa005e45 	blx	4350d4 <memset>
  41d7bc:	ea000057 	b	41d920 <cvSetZero+0x2f4>
  41d7c0:	e3a03000 	mov	r3, #0
  41d7c4:	e58d3014 	str	r3, [sp, #20]
  41d7c8:	e1a00004 	mov	r0, r4
  41d7cc:	e28d10f4 	add	r1, sp, #244	; 0xf4
  41d7d0:	e28d2014 	add	r2, sp, #20
  41d7d4:	ebffc4d4 	bl	40eb2c <cvGetMat>
  41d7d8:	e1a04000 	mov	r4, r0
  41d7dc:	ebffd480 	bl	4129e4 <cvGetErrStatus>
  41d7e0:	e3500000 	cmp	r0, #0
  41d7e4:	aa00000b 	bge	41d818 <cvSetZero+0x1ec>
  41d7e8:	e59f315c 	ldr	r3, [pc, #348]	; 41d94c <cvSetZero+0x320>
  41d7ec:	e58d3000 	str	r3, [sp]
  41d7f0:	e3e00000 	mvn	r0, #0
  41d7f4:	e59f1154 	ldr	r1, [pc, #340]	; 41d950 <cvSetZero+0x324>
  41d7f8:	e08f1001 	add	r1, pc, r1
  41d7fc:	e2811008 	add	r1, r1, #8
  41d800:	e59f214c 	ldr	r2, [pc, #332]	; 41d954 <cvSetZero+0x328>
  41d804:	e08f2002 	add	r2, pc, r2
  41d808:	e59f3148 	ldr	r3, [pc, #328]	; 41d958 <cvSetZero+0x32c>
  41d80c:	e08f3003 	add	r3, pc, r3
  41d810:	ebffd4a4 	bl	412aa8 <cvError>
  41d814:	ea000041 	b	41d920 <cvSetZero+0x2f4>
  41d818:	e59d3014 	ldr	r3, [sp, #20]
  41d81c:	e3530000 	cmp	r3, #0
  41d820:	0a00000b 	beq	41d854 <cvSetZero+0x228>
  41d824:	e3a03fb5 	mov	r3, #724	; 0x2d4
  41d828:	e58d3000 	str	r3, [sp]
  41d82c:	e3e00017 	mvn	r0, #23
  41d830:	e59f1124 	ldr	r1, [pc, #292]	; 41d95c <cvSetZero+0x330>
  41d834:	e08f1001 	add	r1, pc, r1
  41d838:	e2811008 	add	r1, r1, #8
  41d83c:	e59f211c 	ldr	r2, [pc, #284]	; 41d960 <cvSetZero+0x334>
  41d840:	e08f2002 	add	r2, pc, r2
  41d844:	e59f3118 	ldr	r3, [pc, #280]	; 41d964 <cvSetZero+0x338>
  41d848:	e08f3003 	add	r3, pc, r3
  41d84c:	ebffd495 	bl	412aa8 <cvError>
  41d850:	ea000032 	b	41d920 <cvSetZero+0x2f4>
  41d854:	e594c018 	ldr	ip, [r4, #24]
  41d858:	e58dc208 	str	ip, [sp, #520]	; 0x208
  41d85c:	e5942014 	ldr	r2, [r4, #20]
  41d860:	e58d220c 	str	r2, [sp, #524]	; 0x20c
  41d864:	e28d3e21 	add	r3, sp, #528	; 0x210
  41d868:	e9130003 	ldmdb	r3, {r0, r1}
  41d86c:	e28de014 	add	lr, sp, #20
  41d870:	e88e0003 	stm	lr, {r0, r1}
  41d874:	e594e000 	ldr	lr, [r4]
  41d878:	e20e1f7e 	and	r1, lr, #504	; 0x1f8
  41d87c:	e1a011c1 	asr	r1, r1, #3
  41d880:	e2811001 	add	r1, r1, #1
  41d884:	e20e3007 	and	r3, lr, #7
  41d888:	e1a03083 	lsl	r3, r3, #1
  41d88c:	e59f00b0 	ldr	r0, [pc, #176]	; 41d944 <cvSetZero+0x318>
  41d890:	e1a03330 	lsr	r3, r0, r3
  41d894:	e2033003 	and	r3, r3, #3
  41d898:	e1a03311 	lsl	r3, r1, r3
  41d89c:	e003039c 	mul	r3, ip, r3
  41d8a0:	e58d3014 	str	r3, [sp, #20]
  41d8a4:	e5941004 	ldr	r1, [r4, #4]
  41d8a8:	e31e0901 	tst	lr, #16384	; 0x4000
  41d8ac:	0a00000a 	beq	41d8dc <cvSetZero+0x2b0>
  41d8b0:	e0020293 	mul	r2, r3, r2
  41d8b4:	e58d2014 	str	r2, [sp, #20]
  41d8b8:	e3520050 	cmp	r2, #80	; 0x50
  41d8bc:	ca000003 	bgt	41d8d0 <cvSetZero+0x2a4>
  41d8c0:	e5940010 	ldr	r0, [r4, #16]
  41d8c4:	e3a01000 	mov	r1, #0
  41d8c8:	fa005e01 	blx	4350d4 <memset>
  41d8cc:	ea000013 	b	41d920 <cvSetZero+0x2f4>
  41d8d0:	e3a03001 	mov	r3, #1
  41d8d4:	e58d3018 	str	r3, [sp, #24]
  41d8d8:	e3a01101 	mov	r1, #1073741824	; 0x40000000
  41d8dc:	e5940010 	ldr	r0, [r4, #16]
  41d8e0:	e28d3014 	add	r3, sp, #20
  41d8e4:	e893000c 	ldm	r3, {r2, r3}
  41d8e8:	ebffff22 	bl	41d578 <_Z17icvSetZero_8u_C1RPhi6CvSize>
  41d8ec:	e3500000 	cmp	r0, #0
  41d8f0:	aa00000a 	bge	41d920 <cvSetZero+0x2f4>
  41d8f4:	ebffd4a4 	bl	412b8c <cvErrorFromIppStatus>
  41d8f8:	e59f3068 	ldr	r3, [pc, #104]	; 41d968 <cvSetZero+0x33c>
  41d8fc:	e58d3000 	str	r3, [sp]
  41d900:	e59f1064 	ldr	r1, [pc, #100]	; 41d96c <cvSetZero+0x340>
  41d904:	e08f1001 	add	r1, pc, r1
  41d908:	e2811008 	add	r1, r1, #8
  41d90c:	e59f205c 	ldr	r2, [pc, #92]	; 41d970 <cvSetZero+0x344>
  41d910:	e08f2002 	add	r2, pc, r2
  41d914:	e59f3058 	ldr	r3, [pc, #88]	; 41d974 <cvSetZero+0x348>
  41d918:	e08f3003 	add	r3, pc, r3
  41d91c:	ebffd461 	bl	412aa8 <cvError>
  41d920:	e28dde21 	add	sp, sp, #528	; 0x210
  41d924:	e8bd4010 	pop	{r4, lr}
  41d928:	e12fff1e 	bx	lr
  41d92c:	42420000 	.word	0x42420000
  41d930:	42430000 	.word	0x42430000
  41d934:	000002b2 	.word	0x000002b2
  41d938:	1fbe36c0 	.word	0x1fbe36c0
  41d93c:	0001f8f0 	.word	0x0001f8f0
  41d940:	00022620 	.word	0x00022620
  41d944:	0000ba50 	.word	0x0000ba50
  41d948:	42440000 	.word	0x42440000
  41d94c:	000002d2 	.word	0x000002d2
  41d950:	1fbe359c 	.word	0x1fbe359c
  41d954:	0001f7cc 	.word	0x0001f7cc
  41d958:	000224fc 	.word	0x000224fc
  41d95c:	1fbe3560 	.word	0x1fbe3560
  41d960:	0002251c 	.word	0x0002251c
  41d964:	000224c0 	.word	0x000224c0
  41d968:	000002ea 	.word	0x000002ea
  41d96c:	1fbe3490 	.word	0x1fbe3490
  41d970:	00022434 	.word	0x00022434
  41d974:	000223f0 	.word	0x000223f0

0041d978 <cvSet>:
  41d978:	e24dd008 	sub	sp, sp, #8
  41d97c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41d980:	e24ddfa1 	sub	sp, sp, #644	; 0x284
  41d984:	e58d0014 	str	r0, [sp, #20]
  41d988:	e28d1fa9 	add	r1, sp, #676	; 0x2a4
  41d98c:	e981000c 	stmib	r1, {r2, r3}
  41d990:	e1a04000 	mov	r4, r0
  41d994:	e28d1faa 	add	r1, sp, #680	; 0x2a8
  41d998:	e8910003 	ldm	r1, {r0, r1}
  41d99c:	e3a02000 	mov	r2, #0
  41d9a0:	e3a03000 	mov	r3, #0
  41d9a4:	fa00521e 	blx	432224 <__aeabi_dcmpeq>
  41d9a8:	e3500000 	cmp	r0, #0
  41d9ac:	0a00001a 	beq	41da1c <cvSet+0xa4>
  41d9b0:	e28d1e2b 	add	r1, sp, #688	; 0x2b0
  41d9b4:	e8910003 	ldm	r1, {r0, r1}
  41d9b8:	e3a02000 	mov	r2, #0
  41d9bc:	e3a03000 	mov	r3, #0
  41d9c0:	fa005217 	blx	432224 <__aeabi_dcmpeq>
  41d9c4:	e3500000 	cmp	r0, #0
  41d9c8:	0a000013 	beq	41da1c <cvSet+0xa4>
  41d9cc:	e28d1fae 	add	r1, sp, #696	; 0x2b8
  41d9d0:	e8910003 	ldm	r1, {r0, r1}
  41d9d4:	e3a02000 	mov	r2, #0
  41d9d8:	e3a03000 	mov	r3, #0
  41d9dc:	fa005210 	blx	432224 <__aeabi_dcmpeq>
  41d9e0:	e3500000 	cmp	r0, #0
  41d9e4:	0a00000c 	beq	41da1c <cvSet+0xa4>
  41d9e8:	e28d1d0b 	add	r1, sp, #704	; 0x2c0
  41d9ec:	e8910003 	ldm	r1, {r0, r1}
  41d9f0:	e3a02000 	mov	r2, #0
  41d9f4:	e3a03000 	mov	r3, #0
  41d9f8:	fa005209 	blx	432224 <__aeabi_dcmpeq>
  41d9fc:	e3500000 	cmp	r0, #0
  41da00:	0a000005 	beq	41da1c <cvSet+0xa4>
  41da04:	e59d32c8 	ldr	r3, [sp, #712]	; 0x2c8
  41da08:	e3530000 	cmp	r3, #0
  41da0c:	1a000002 	bne	41da1c <cvSet+0xa4>
  41da10:	e1a00004 	mov	r0, r4
  41da14:	ebffff04 	bl	41d62c <cvSetZero>
  41da18:	ea0001a7 	b	41e0bc <cvSet+0x744>
  41da1c:	e3540000 	cmp	r4, #0
  41da20:	0a00000c 	beq	41da58 <cvSet+0xe0>
  41da24:	e1d420b2 	ldrh	r2, [r4, #2]
  41da28:	e59f369c 	ldr	r3, [pc, #1692]	; 41e0cc <cvSet+0x754>
  41da2c:	e1530802 	cmp	r3, r2, lsl #16
  41da30:	1a000008 	bne	41da58 <cvSet+0xe0>
  41da34:	e5943018 	ldr	r3, [r4, #24]
  41da38:	e3530000 	cmp	r3, #0
  41da3c:	da000005 	ble	41da58 <cvSet+0xe0>
  41da40:	e5943014 	ldr	r3, [r4, #20]
  41da44:	e3530000 	cmp	r3, #0
  41da48:	da000002 	ble	41da58 <cvSet+0xe0>
  41da4c:	e5943010 	ldr	r3, [r4, #16]
  41da50:	e3530000 	cmp	r3, #0
  41da54:	1a00009b 	bne	41dcc8 <cvSet+0x350>
  41da58:	e3540000 	cmp	r4, #0
  41da5c:	0a000074 	beq	41dc34 <cvSet+0x2bc>
  41da60:	e1d420b2 	ldrh	r2, [r4, #2]
  41da64:	e59f3664 	ldr	r3, [pc, #1636]	; 41e0d0 <cvSet+0x758>
  41da68:	e1530802 	cmp	r3, r2, lsl #16
  41da6c:	1a000070 	bne	41dc34 <cvSet+0x2bc>
  41da70:	e5943010 	ldr	r3, [r4, #16]
  41da74:	e3530000 	cmp	r3, #0
  41da78:	0a00006d 	beq	41dc34 <cvSet+0x2bc>
  41da7c:	e28d3084 	add	r3, sp, #132	; 0x84
  41da80:	e58d3000 	str	r3, [sp]
  41da84:	e3a03000 	mov	r3, #0
  41da88:	e58d3004 	str	r3, [sp, #4]
  41da8c:	e3a00001 	mov	r0, #1
  41da90:	e28d1014 	add	r1, sp, #20
  41da94:	e59d22c8 	ldr	r2, [sp, #712]	; 0x2c8
  41da98:	e28d3f59 	add	r3, sp, #356	; 0x164
  41da9c:	ebffc67b 	bl	40f490 <cvInitNArrayIterator>
  41daa0:	ebffd3cf 	bl	4129e4 <cvGetErrStatus>
  41daa4:	e3500000 	cmp	r0, #0
  41daa8:	aa00000b 	bge	41dadc <cvSet+0x164>
  41daac:	e3a03f81 	mov	r3, #516	; 0x204
  41dab0:	e58d3000 	str	r3, [sp]
  41dab4:	e3e00000 	mvn	r0, #0
  41dab8:	e59f1614 	ldr	r1, [pc, #1556]	; 41e0d4 <cvSet+0x75c>
  41dabc:	e08f1001 	add	r1, pc, r1
  41dac0:	e2811014 	add	r1, r1, #20
  41dac4:	e59f260c 	ldr	r2, [pc, #1548]	; 41e0d8 <cvSet+0x760>
  41dac8:	e08f2002 	add	r2, pc, r2
  41dacc:	e59f3608 	ldr	r3, [pc, #1544]	; 41e0dc <cvSet+0x764>
  41dad0:	e08f3003 	add	r3, pc, r3
  41dad4:	ebffd3f3 	bl	412aa8 <cvError>
  41dad8:	ea000177 	b	41e0bc <cvSet+0x744>
  41dadc:	e59d313c 	ldr	r3, [sp, #316]	; 0x13c
  41dae0:	e5933000 	ldr	r3, [r3]
  41dae4:	e1a02b83 	lsl	r2, r3, #23
  41dae8:	e2035007 	and	r5, r3, #7
  41daec:	e1a05105 	lsl	r5, r5, #2
  41daf0:	e59f15e8 	ldr	r1, [pc, #1512]	; 41e0e0 <cvSet+0x768>
  41daf4:	e1a05531 	lsr	r5, r1, r5
  41daf8:	e205500f 	and	r5, r5, #15
  41dafc:	e2033f7e 	and	r3, r3, #504	; 0x1f8
  41db00:	e1a031c3 	asr	r3, r3, #3
  41db04:	e0245593 	mla	r4, r3, r5, r5
  41db08:	e28d0faa 	add	r0, sp, #680	; 0x2a8
  41db0c:	e28d1020 	add	r1, sp, #32
  41db10:	e1a02ba2 	lsr	r2, r2, #23
  41db14:	e59d32c8 	ldr	r3, [sp, #712]	; 0x2c8
  41db18:	e2733001 	rsbs	r3, r3, #1
  41db1c:	33a03000 	movcc	r3, #0
  41db20:	ebffba09 	bl	40c34c <cvScalarToRawData>
  41db24:	ebffd3ae 	bl	4129e4 <cvGetErrStatus>
  41db28:	e3500000 	cmp	r0, #0
  41db2c:	aa00000b 	bge	41db60 <cvSet+0x1e8>
  41db30:	e59f35ac 	ldr	r3, [pc, #1452]	; 41e0e4 <cvSet+0x76c>
  41db34:	e58d3000 	str	r3, [sp]
  41db38:	e3e00000 	mvn	r0, #0
  41db3c:	e59f15a4 	ldr	r1, [pc, #1444]	; 41e0e8 <cvSet+0x770>
  41db40:	e08f1001 	add	r1, pc, r1
  41db44:	e2811014 	add	r1, r1, #20
  41db48:	e59f259c 	ldr	r2, [pc, #1436]	; 41e0ec <cvSet+0x774>
  41db4c:	e08f2002 	add	r2, pc, r2
  41db50:	e59f3598 	ldr	r3, [pc, #1432]	; 41e0f0 <cvSet+0x778>
  41db54:	e08f3003 	add	r3, pc, r3
  41db58:	ebffd3d2 	bl	412aa8 <cvError>
  41db5c:	ea000156 	b	41e0bc <cvSet+0x744>
  41db60:	e59d32c8 	ldr	r3, [sp, #712]	; 0x2c8
  41db64:	e3530000 	cmp	r3, #0
  41db68:	1a00000f 	bne	41dbac <cvSet+0x234>
  41db6c:	e59d308c 	ldr	r3, [sp, #140]	; 0x8c
  41db70:	e0030394 	mul	r3, r4, r3
  41db74:	e58d308c 	str	r3, [sp, #140]	; 0x8c
  41db78:	e28d3020 	add	r3, sp, #32
  41db7c:	e58d3000 	str	r3, [sp]
  41db80:	e58d5004 	str	r5, [sp, #4]
  41db84:	e59d0094 	ldr	r0, [sp, #148]	; 0x94
  41db88:	e3a01101 	mov	r1, #1073741824	; 0x40000000
  41db8c:	e28d308c 	add	r3, sp, #140	; 0x8c
  41db90:	e893000c 	ldm	r3, {r2, r3}
  41db94:	ebfffb41 	bl	41c8a0 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi>
  41db98:	e28d0084 	add	r0, sp, #132	; 0x84
  41db9c:	ebffb17d 	bl	40a198 <cvNextNArraySlice>
  41dba0:	e3500000 	cmp	r0, #0
  41dba4:	1afffff3 	bne	41db78 <cvSet+0x200>
  41dba8:	ea000143 	b	41e0bc <cvSet+0x744>
  41dbac:	e59f3540 	ldr	r3, [pc, #1344]	; 41e0f4 <cvSet+0x77c>
  41dbb0:	e08f3003 	add	r3, pc, r3
  41dbb4:	e0833104 	add	r3, r3, r4, lsl #2
  41dbb8:	e5934088 	ldr	r4, [r3, #136]	; 0x88
  41dbbc:	e3540000 	cmp	r4, #0
  41dbc0:	1a00000b 	bne	41dbf4 <cvSet+0x27c>
  41dbc4:	e59f352c 	ldr	r3, [pc, #1324]	; 41e0f8 <cvSet+0x780>
  41dbc8:	e58d3000 	str	r3, [sp]
  41dbcc:	e3e000d1 	mvn	r0, #209	; 0xd1
  41dbd0:	e59f1524 	ldr	r1, [pc, #1316]	; 41e0fc <cvSet+0x784>
  41dbd4:	e08f1001 	add	r1, pc, r1
  41dbd8:	e2811014 	add	r1, r1, #20
  41dbdc:	e59f251c 	ldr	r2, [pc, #1308]	; 41e100 <cvSet+0x788>
  41dbe0:	e08f2002 	add	r2, pc, r2
  41dbe4:	e59f3518 	ldr	r3, [pc, #1304]	; 41e104 <cvSet+0x78c>
  41dbe8:	e08f3003 	add	r3, pc, r3
  41dbec:	ebffd3ad 	bl	412aa8 <cvError>
  41dbf0:	ea000131 	b	41e0bc <cvSet+0x744>
  41dbf4:	e28d308c 	add	r3, sp, #140	; 0x8c
  41dbf8:	e8930003 	ldm	r3, {r0, r1}
  41dbfc:	e88d0003 	stm	sp, {r0, r1}
  41dc00:	e28d3020 	add	r3, sp, #32
  41dc04:	e58d3008 	str	r3, [sp, #8]
  41dc08:	e59d0094 	ldr	r0, [sp, #148]	; 0x94
  41dc0c:	e3a01101 	mov	r1, #1073741824	; 0x40000000
  41dc10:	e59d2098 	ldr	r2, [sp, #152]	; 0x98
  41dc14:	e1a03001 	mov	r3, r1
  41dc18:	e1a0e00f 	mov	lr, pc
  41dc1c:	e12fff14 	bx	r4
  41dc20:	e28d0084 	add	r0, sp, #132	; 0x84
  41dc24:	ebffb15b 	bl	40a198 <cvNextNArraySlice>
  41dc28:	e3500000 	cmp	r0, #0
  41dc2c:	1afffff0 	bne	41dbf4 <cvSet+0x27c>
  41dc30:	ea000121 	b	41e0bc <cvSet+0x744>
  41dc34:	e3a03000 	mov	r3, #0
  41dc38:	e58d3164 	str	r3, [sp, #356]	; 0x164
  41dc3c:	e1a00004 	mov	r0, r4
  41dc40:	e28d1084 	add	r1, sp, #132	; 0x84
  41dc44:	e28d2f59 	add	r2, sp, #356	; 0x164
  41dc48:	ebffc3b7 	bl	40eb2c <cvGetMat>
  41dc4c:	e1a04000 	mov	r4, r0
  41dc50:	ebffd363 	bl	4129e4 <cvGetErrStatus>
  41dc54:	e3500000 	cmp	r0, #0
  41dc58:	aa00000b 	bge	41dc8c <cvSet+0x314>
  41dc5c:	e59f34a4 	ldr	r3, [pc, #1188]	; 41e108 <cvSet+0x790>
  41dc60:	e58d3000 	str	r3, [sp]
  41dc64:	e3e00000 	mvn	r0, #0
  41dc68:	e59f149c 	ldr	r1, [pc, #1180]	; 41e10c <cvSet+0x794>
  41dc6c:	e08f1001 	add	r1, pc, r1
  41dc70:	e2811014 	add	r1, r1, #20
  41dc74:	e59f2494 	ldr	r2, [pc, #1172]	; 41e110 <cvSet+0x798>
  41dc78:	e08f2002 	add	r2, pc, r2
  41dc7c:	e59f3490 	ldr	r3, [pc, #1168]	; 41e114 <cvSet+0x79c>
  41dc80:	e08f3003 	add	r3, pc, r3
  41dc84:	ebffd387 	bl	412aa8 <cvError>
  41dc88:	ea00010b 	b	41e0bc <cvSet+0x744>
  41dc8c:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  41dc90:	e3530000 	cmp	r3, #0
  41dc94:	0a00000b 	beq	41dcc8 <cvSet+0x350>
  41dc98:	e3a03f8b 	mov	r3, #556	; 0x22c
  41dc9c:	e58d3000 	str	r3, [sp]
  41dca0:	e3e00017 	mvn	r0, #23
  41dca4:	e59f146c 	ldr	r1, [pc, #1132]	; 41e118 <cvSet+0x7a0>
  41dca8:	e08f1001 	add	r1, pc, r1
  41dcac:	e2811014 	add	r1, r1, #20
  41dcb0:	e59f2464 	ldr	r2, [pc, #1124]	; 41e11c <cvSet+0x7a4>
  41dcb4:	e08f2002 	add	r2, pc, r2
  41dcb8:	e59f3460 	ldr	r3, [pc, #1120]	; 41e120 <cvSet+0x7a8>
  41dcbc:	e08f3003 	add	r3, pc, r3
  41dcc0:	ebffd378 	bl	412aa8 <cvError>
  41dcc4:	ea0000fc 	b	41e0bc <cvSet+0x744>
  41dcc8:	e594c000 	ldr	ip, [r4]
  41dccc:	e1a05b8c 	lsl	r5, ip, #23
  41dcd0:	e1a05ba5 	lsr	r5, r5, #23
  41dcd4:	e20c1f7e 	and	r1, ip, #504	; 0x1f8
  41dcd8:	e1a011c1 	asr	r1, r1, #3
  41dcdc:	e2811001 	add	r1, r1, #1
  41dce0:	e20c7007 	and	r7, ip, #7
  41dce4:	e1a03087 	lsl	r3, r7, #1
  41dce8:	e59f2434 	ldr	r2, [pc, #1076]	; 41e124 <cvSet+0x7ac>
  41dcec:	e1a03332 	lsr	r3, r2, r3
  41dcf0:	e2033003 	and	r3, r3, #3
  41dcf4:	e1a06311 	lsl	r6, r1, r3
  41dcf8:	e5948018 	ldr	r8, [r4, #24]
  41dcfc:	e58d8278 	str	r8, [sp, #632]	; 0x278
  41dd00:	e5949014 	ldr	r9, [r4, #20]
  41dd04:	e58d927c 	str	r9, [sp, #636]	; 0x27c
  41dd08:	e28d3d0a 	add	r3, sp, #640	; 0x280
  41dd0c:	e9130003 	ldmdb	r3, {r0, r1}
  41dd10:	e28d3018 	add	r3, sp, #24
  41dd14:	e8830003 	stm	r3, {r0, r1}
  41dd18:	e594a004 	ldr	sl, [r4, #4]
  41dd1c:	e59d32c8 	ldr	r3, [sp, #712]	; 0x2c8
  41dd20:	e3530000 	cmp	r3, #0
  41dd24:	1a000054 	bne	41de7c <cvSet+0x504>
  41dd28:	e31c0901 	tst	ip, #16384	; 0x4000
  41dd2c:	0a000021 	beq	41ddb8 <cvSet+0x440>
  41dd30:	e0080899 	mul	r8, r9, r8
  41dd34:	e58d8018 	str	r8, [sp, #24]
  41dd38:	e3580050 	cmp	r8, #80	; 0x50
  41dd3c:	ca00001a 	bgt	41ddac <cvSet+0x434>
  41dd40:	e3550005 	cmp	r5, #5
  41dd44:	1a00000b 	bne	41dd78 <cvSet+0x400>
  41dd48:	e5944010 	ldr	r4, [r4, #16]
  41dd4c:	e28d1faa 	add	r1, sp, #680	; 0x2a8
  41dd50:	e8910003 	ldm	r1, {r0, r1}
  41dd54:	fa00515f 	blx	4322d8 <__aeabi_d2f>
  41dd58:	e59d3018 	ldr	r3, [sp, #24]
  41dd5c:	e2432107 	sub	r2, r3, #-1073741823	; 0xc0000001
  41dd60:	e7840102 	str	r0, [r4, r2, lsl #2]
  41dd64:	e2433001 	sub	r3, r3, #1
  41dd68:	e58d3018 	str	r3, [sp, #24]
  41dd6c:	e3530000 	cmp	r3, #0
  41dd70:	1afffff8 	bne	41dd58 <cvSet+0x3e0>
  41dd74:	ea0000d0 	b	41e0bc <cvSet+0x744>
  41dd78:	e3550006 	cmp	r5, #6
  41dd7c:	1a00000a 	bne	41ddac <cvSet+0x434>
  41dd80:	e594c010 	ldr	ip, [r4, #16]
  41dd84:	e28d1faa 	add	r1, sp, #680	; 0x2a8
  41dd88:	e8910003 	ldm	r1, {r0, r1}
  41dd8c:	e59d3018 	ldr	r3, [sp, #24]
  41dd90:	e08c2183 	add	r2, ip, r3, lsl #3
  41dd94:	e9020003 	stmdb	r2, {r0, r1}
  41dd98:	e2433001 	sub	r3, r3, #1
  41dd9c:	e58d3018 	str	r3, [sp, #24]
  41dda0:	e3530000 	cmp	r3, #0
  41dda4:	1afffff8 	bne	41dd8c <cvSet+0x414>
  41dda8:	ea0000c3 	b	41e0bc <cvSet+0x744>
  41ddac:	e3a03001 	mov	r3, #1
  41ddb0:	e58d301c 	str	r3, [sp, #28]
  41ddb4:	e3a0a101 	mov	sl, #1073741824	; 0x40000000
  41ddb8:	e59d3018 	ldr	r3, [sp, #24]
  41ddbc:	e0030396 	mul	r3, r6, r3
  41ddc0:	e58d3018 	str	r3, [sp, #24]
  41ddc4:	e28d0faa 	add	r0, sp, #680	; 0x2a8
  41ddc8:	e28d1020 	add	r1, sp, #32
  41ddcc:	e1a02005 	mov	r2, r5
  41ddd0:	e3a03001 	mov	r3, #1
  41ddd4:	ebffb95c 	bl	40c34c <cvScalarToRawData>
  41ddd8:	ebffd301 	bl	4129e4 <cvGetErrStatus>
  41dddc:	e3500000 	cmp	r0, #0
  41dde0:	aa00000b 	bge	41de14 <cvSet+0x49c>
  41dde4:	e59f333c 	ldr	r3, [pc, #828]	; 41e128 <cvSet+0x7b0>
  41dde8:	e58d3000 	str	r3, [sp]
  41ddec:	e3e00000 	mvn	r0, #0
  41ddf0:	e59f1334 	ldr	r1, [pc, #820]	; 41e12c <cvSet+0x7b4>
  41ddf4:	e08f1001 	add	r1, pc, r1
  41ddf8:	e2811014 	add	r1, r1, #20
  41ddfc:	e59f232c 	ldr	r2, [pc, #812]	; 41e130 <cvSet+0x7b8>
  41de00:	e08f2002 	add	r2, pc, r2
  41de04:	e59f3328 	ldr	r3, [pc, #808]	; 41e134 <cvSet+0x7bc>
  41de08:	e08f3003 	add	r3, pc, r3
  41de0c:	ebffd325 	bl	412aa8 <cvError>
  41de10:	ea0000a9 	b	41e0bc <cvSet+0x744>
  41de14:	e5940010 	ldr	r0, [r4, #16]
  41de18:	e1a07107 	lsl	r7, r7, #2
  41de1c:	e59f32bc 	ldr	r3, [pc, #700]	; 41e0e0 <cvSet+0x768>
  41de20:	e1a07733 	lsr	r7, r3, r7
  41de24:	e207700f 	and	r7, r7, #15
  41de28:	e28d3020 	add	r3, sp, #32
  41de2c:	e58d3000 	str	r3, [sp]
  41de30:	e58d7004 	str	r7, [sp, #4]
  41de34:	e1a0100a 	mov	r1, sl
  41de38:	e28d3018 	add	r3, sp, #24
  41de3c:	e893000c 	ldm	r3, {r2, r3}
  41de40:	ebfffa96 	bl	41c8a0 <_ZL13icvSet_8u_C1RPhi6CvSizePKvi>
  41de44:	e3500000 	cmp	r0, #0
  41de48:	aa00009b 	bge	41e0bc <cvSet+0x744>
  41de4c:	ebffd34e 	bl	412b8c <cvErrorFromIppStatus>
  41de50:	e59f32e0 	ldr	r3, [pc, #736]	; 41e138 <cvSet+0x7c0>
  41de54:	e58d3000 	str	r3, [sp]
  41de58:	e59f12dc 	ldr	r1, [pc, #732]	; 41e13c <cvSet+0x7c4>
  41de5c:	e08f1001 	add	r1, pc, r1
  41de60:	e2811014 	add	r1, r1, #20
  41de64:	e59f22d4 	ldr	r2, [pc, #724]	; 41e140 <cvSet+0x7c8>
  41de68:	e08f2002 	add	r2, pc, r2
  41de6c:	e59f32d0 	ldr	r3, [pc, #720]	; 41e144 <cvSet+0x7cc>
  41de70:	e08f3003 	add	r3, pc, r3
  41de74:	ebffd30b 	bl	412aa8 <cvError>
  41de78:	ea00008f 	b	41e0bc <cvSet+0x744>
  41de7c:	e59d02c8 	ldr	r0, [sp, #712]	; 0x2c8
  41de80:	e28d1f59 	add	r1, sp, #356	; 0x164
  41de84:	e3a02000 	mov	r2, #0
  41de88:	e1a03002 	mov	r3, r2
  41de8c:	ebffc326 	bl	40eb2c <cvGetMat>
  41de90:	e1a07000 	mov	r7, r0
  41de94:	ebffd2d2 	bl	4129e4 <cvGetErrStatus>
  41de98:	e3500000 	cmp	r0, #0
  41de9c:	aa00000b 	bge	41ded0 <cvSet+0x558>
  41dea0:	e59f32a0 	ldr	r3, [pc, #672]	; 41e148 <cvSet+0x7d0>
  41dea4:	e58d3000 	str	r3, [sp]
  41dea8:	e3e00000 	mvn	r0, #0
  41deac:	e59f1298 	ldr	r1, [pc, #664]	; 41e14c <cvSet+0x7d4>
  41deb0:	e08f1001 	add	r1, pc, r1
  41deb4:	e2811014 	add	r1, r1, #20
  41deb8:	e59f2290 	ldr	r2, [pc, #656]	; 41e150 <cvSet+0x7d8>
  41debc:	e08f2002 	add	r2, pc, r2
  41dec0:	e59f328c 	ldr	r3, [pc, #652]	; 41e154 <cvSet+0x7dc>
  41dec4:	e08f3003 	add	r3, pc, r3
  41dec8:	ebffd2f6 	bl	412aa8 <cvError>
  41decc:	ea00007a 	b	41e0bc <cvSet+0x744>
  41ded0:	e5972000 	ldr	r2, [r7]
  41ded4:	e59f327c 	ldr	r3, [pc, #636]	; 41e158 <cvSet+0x7e0>
  41ded8:	e0033002 	and	r3, r3, r2
  41dedc:	e3530000 	cmp	r3, #0
  41dee0:	0a00000b 	beq	41df14 <cvSet+0x59c>
  41dee4:	e59f3270 	ldr	r3, [pc, #624]	; 41e15c <cvSet+0x7e4>
  41dee8:	e58d3000 	str	r3, [sp]
  41deec:	e3e000cf 	mvn	r0, #207	; 0xcf
  41def0:	e59f1268 	ldr	r1, [pc, #616]	; 41e160 <cvSet+0x7e8>
  41def4:	e08f1001 	add	r1, pc, r1
  41def8:	e2811014 	add	r1, r1, #20
  41defc:	e59f2260 	ldr	r2, [pc, #608]	; 41e164 <cvSet+0x7ec>
  41df00:	e08f2002 	add	r2, pc, r2
  41df04:	e59f325c 	ldr	r3, [pc, #604]	; 41e168 <cvSet+0x7f0>
  41df08:	e08f3003 	add	r3, pc, r3
  41df0c:	ebffd2e5 	bl	412aa8 <cvError>
  41df10:	ea000069 	b	41e0bc <cvSet+0x744>
  41df14:	e59f3250 	ldr	r3, [pc, #592]	; 41e16c <cvSet+0x7f4>
  41df18:	e08f3003 	add	r3, pc, r3
  41df1c:	e593310c 	ldr	r3, [r3, #268]	; 0x10c
  41df20:	e3530000 	cmp	r3, #0
  41df24:	1a000005 	bne	41df40 <cvSet+0x5c8>
  41df28:	e59fb240 	ldr	fp, [pc, #576]	; 41e170 <cvSet+0x7f8>
  41df2c:	e08fb00b 	add	fp, pc, fp
  41df30:	e28b0088 	add	r0, fp, #136	; 0x88
  41df34:	ebfffa05 	bl	41c750 <_ZL17icvInitSetMRTableP13CvBtFuncTable>
  41df38:	e3a03001 	mov	r3, #1
  41df3c:	e58b310c 	str	r3, [fp, #268]	; 0x10c
  41df40:	e5942014 	ldr	r2, [r4, #20]
  41df44:	e5973014 	ldr	r3, [r7, #20]
  41df48:	e1520003 	cmp	r2, r3
  41df4c:	1a000003 	bne	41df60 <cvSet+0x5e8>
  41df50:	e5942018 	ldr	r2, [r4, #24]
  41df54:	e5973018 	ldr	r3, [r7, #24]
  41df58:	e1520003 	cmp	r2, r3
  41df5c:	0a00000b 	beq	41df90 <cvSet+0x618>
  41df60:	e59f320c 	ldr	r3, [pc, #524]	; 41e174 <cvSet+0x7fc>
  41df64:	e58d3000 	str	r3, [sp]
  41df68:	e3e000d0 	mvn	r0, #208	; 0xd0
  41df6c:	e59f1204 	ldr	r1, [pc, #516]	; 41e178 <cvSet+0x800>
  41df70:	e08f1001 	add	r1, pc, r1
  41df74:	e2811014 	add	r1, r1, #20
  41df78:	e59f21fc 	ldr	r2, [pc, #508]	; 41e17c <cvSet+0x804>
  41df7c:	e08f2002 	add	r2, pc, r2
  41df80:	e59f31f8 	ldr	r3, [pc, #504]	; 41e180 <cvSet+0x808>
  41df84:	e08f3003 	add	r3, pc, r3
  41df88:	ebffd2c6 	bl	412aa8 <cvError>
  41df8c:	ea00004a 	b	41e0bc <cvSet+0x744>
  41df90:	e597b004 	ldr	fp, [r7, #4]
  41df94:	e5942000 	ldr	r2, [r4]
  41df98:	e5973000 	ldr	r3, [r7]
  41df9c:	e0033002 	and	r3, r3, r2
  41dfa0:	e3130901 	tst	r3, #16384	; 0x4000
  41dfa4:	0a000005 	beq	41dfc0 <cvSet+0x648>
  41dfa8:	e0080899 	mul	r8, r9, r8
  41dfac:	e58d8018 	str	r8, [sp, #24]
  41dfb0:	e3a03001 	mov	r3, #1
  41dfb4:	e58d301c 	str	r3, [sp, #28]
  41dfb8:	e3a0b101 	mov	fp, #1073741824	; 0x40000000
  41dfbc:	e1a0a00b 	mov	sl, fp
  41dfc0:	e59f31bc 	ldr	r3, [pc, #444]	; 41e184 <cvSet+0x80c>
  41dfc4:	e08f3003 	add	r3, pc, r3
  41dfc8:	e0833106 	add	r3, r3, r6, lsl #2
  41dfcc:	e5936088 	ldr	r6, [r3, #136]	; 0x88
  41dfd0:	e3560000 	cmp	r6, #0
  41dfd4:	1a00000b 	bne	41e008 <cvSet+0x690>
  41dfd8:	e59f31a8 	ldr	r3, [pc, #424]	; 41e188 <cvSet+0x810>
  41dfdc:	e58d3000 	str	r3, [sp]
  41dfe0:	e3e000d1 	mvn	r0, #209	; 0xd1
  41dfe4:	e59f11a0 	ldr	r1, [pc, #416]	; 41e18c <cvSet+0x814>
  41dfe8:	e08f1001 	add	r1, pc, r1
  41dfec:	e2811014 	add	r1, r1, #20
  41dff0:	e59f2198 	ldr	r2, [pc, #408]	; 41e190 <cvSet+0x818>
  41dff4:	e08f2002 	add	r2, pc, r2
  41dff8:	e59f3194 	ldr	r3, [pc, #404]	; 41e194 <cvSet+0x81c>
  41dffc:	e08f3003 	add	r3, pc, r3
  41e000:	ebffd2a8 	bl	412aa8 <cvError>
  41e004:	ea00002c 	b	41e0bc <cvSet+0x744>
  41e008:	e28d0faa 	add	r0, sp, #680	; 0x2a8
  41e00c:	e28d1020 	add	r1, sp, #32
  41e010:	e1a02005 	mov	r2, r5
  41e014:	e3a03000 	mov	r3, #0
  41e018:	ebffb8cb 	bl	40c34c <cvScalarToRawData>
  41e01c:	ebffd270 	bl	4129e4 <cvGetErrStatus>
  41e020:	e3500000 	cmp	r0, #0
  41e024:	aa00000b 	bge	41e058 <cvSet+0x6e0>
  41e028:	e59f3168 	ldr	r3, [pc, #360]	; 41e198 <cvSet+0x820>
  41e02c:	e58d3000 	str	r3, [sp]
  41e030:	e3e00000 	mvn	r0, #0
  41e034:	e59f1160 	ldr	r1, [pc, #352]	; 41e19c <cvSet+0x824>
  41e038:	e08f1001 	add	r1, pc, r1
  41e03c:	e2811014 	add	r1, r1, #20
  41e040:	e59f2158 	ldr	r2, [pc, #344]	; 41e1a0 <cvSet+0x828>
  41e044:	e08f2002 	add	r2, pc, r2
  41e048:	e59f3154 	ldr	r3, [pc, #340]	; 41e1a4 <cvSet+0x82c>
  41e04c:	e08f3003 	add	r3, pc, r3
  41e050:	ebffd294 	bl	412aa8 <cvError>
  41e054:	ea000018 	b	41e0bc <cvSet+0x744>
  41e058:	e594c010 	ldr	ip, [r4, #16]
  41e05c:	e5972010 	ldr	r2, [r7, #16]
  41e060:	e28d3018 	add	r3, sp, #24
  41e064:	e8930003 	ldm	r3, {r0, r1}
  41e068:	e88d0003 	stm	sp, {r0, r1}
  41e06c:	e28d3020 	add	r3, sp, #32
  41e070:	e58d3008 	str	r3, [sp, #8]
  41e074:	e1a0000c 	mov	r0, ip
  41e078:	e1a0100a 	mov	r1, sl
  41e07c:	e1a0300b 	mov	r3, fp
  41e080:	e1a0e00f 	mov	lr, pc
  41e084:	e12fff16 	bx	r6
  41e088:	e3500000 	cmp	r0, #0
  41e08c:	aa00000a 	bge	41e0bc <cvSet+0x744>
  41e090:	ebffd2bd 	bl	412b8c <cvErrorFromIppStatus>
  41e094:	e3a03fa2 	mov	r3, #648	; 0x288
  41e098:	e58d3000 	str	r3, [sp]
  41e09c:	e59f1104 	ldr	r1, [pc, #260]	; 41e1a8 <cvSet+0x830>
  41e0a0:	e08f1001 	add	r1, pc, r1
  41e0a4:	e2811014 	add	r1, r1, #20
  41e0a8:	e59f20fc 	ldr	r2, [pc, #252]	; 41e1ac <cvSet+0x834>
  41e0ac:	e08f2002 	add	r2, pc, r2
  41e0b0:	e59f30f8 	ldr	r3, [pc, #248]	; 41e1b0 <cvSet+0x838>
  41e0b4:	e08f3003 	add	r3, pc, r3
  41e0b8:	ebffd27a 	bl	412aa8 <cvError>
  41e0bc:	e28ddfa1 	add	sp, sp, #644	; 0x284
  41e0c0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41e0c4:	e28dd008 	add	sp, sp, #8
  41e0c8:	e12fff1e 	bx	lr
  41e0cc:	42420000 	.word	0x42420000
  41e0d0:	42430000 	.word	0x42430000
  41e0d4:	1fbe32d8 	.word	0x1fbe32d8
  41e0d8:	0001f508 	.word	0x0001f508
  41e0dc:	00022238 	.word	0x00022238
  41e0e0:	48442211 	.word	0x48442211
  41e0e4:	0000020a 	.word	0x0000020a
  41e0e8:	1fbe3254 	.word	0x1fbe3254
  41e0ec:	0001f484 	.word	0x0001f484
  41e0f0:	000221b4 	.word	0x000221b4
  41e0f4:	1fbe413c 	.word	0x1fbe413c
  41e0f8:	0000021a 	.word	0x0000021a
  41e0fc:	1fbe31c0 	.word	0x1fbe31c0
  41e100:	00022830 	.word	0x00022830
  41e104:	00022120 	.word	0x00022120
  41e108:	00000229 	.word	0x00000229
  41e10c:	1fbe3128 	.word	0x1fbe3128
  41e110:	0001f358 	.word	0x0001f358
  41e114:	00022088 	.word	0x00022088
  41e118:	1fbe30ec 	.word	0x1fbe30ec
  41e11c:	0002275c 	.word	0x0002275c
  41e120:	0002204c 	.word	0x0002204c
  41e124:	0000ba50 	.word	0x0000ba50
  41e128:	0000025f 	.word	0x0000025f
  41e12c:	1fbe2fa0 	.word	0x1fbe2fa0
  41e130:	0001f1d0 	.word	0x0001f1d0
  41e134:	00021f00 	.word	0x00021f00
  41e138:	00000262 	.word	0x00000262
  41e13c:	1fbe2f38 	.word	0x1fbe2f38
  41e140:	00021edc 	.word	0x00021edc
  41e144:	00021e98 	.word	0x00021e98
  41e148:	0000026a 	.word	0x0000026a
  41e14c:	1fbe2ee4 	.word	0x1fbe2ee4
  41e150:	0001f114 	.word	0x0001f114
  41e154:	00021e44 	.word	0x00021e44
  41e158:	000001fe 	.word	0x000001fe
  41e15c:	0000026d 	.word	0x0000026d
  41e160:	1fbe2ea0 	.word	0x1fbe2ea0
  41e164:	00022510 	.word	0x00022510
  41e168:	00021e00 	.word	0x00021e00
  41e16c:	1fbe3dd4 	.word	0x1fbe3dd4
  41e170:	1fbe3dc0 	.word	0x1fbe3dc0
  41e174:	00000276 	.word	0x00000276
  41e178:	1fbe2e24 	.word	0x1fbe2e24
  41e17c:	00022494 	.word	0x00022494
  41e180:	00021d84 	.word	0x00021d84
  41e184:	1fbe3d28 	.word	0x1fbe3d28
  41e188:	00000283 	.word	0x00000283
  41e18c:	1fbe2dac 	.word	0x1fbe2dac
  41e190:	0002241c 	.word	0x0002241c
  41e194:	00021d0c 	.word	0x00021d0c
  41e198:	00000285 	.word	0x00000285
  41e19c:	1fbe2d5c 	.word	0x1fbe2d5c
  41e1a0:	0001ef8c 	.word	0x0001ef8c
  41e1a4:	00021cbc 	.word	0x00021cbc
  41e1a8:	1fbe2cf4 	.word	0x1fbe2cf4
  41e1ac:	00021c98 	.word	0x00021c98
  41e1b0:	00021c54 	.word	0x00021c54

0041e1b4 <_Z16icvCopy_8u_C2P2RPKhiPPhi6CvSize>:
  41e1b4:	e92d4010 	push	{r4, lr}
  41e1b8:	e24dd008 	sub	sp, sp, #8
  41e1bc:	e1a04000 	mov	r4, r0
  41e1c0:	e1a0e001 	mov	lr, r1
  41e1c4:	e59f1034 	ldr	r1, [pc, #52]	; 41e200 <_Z16icvCopy_8u_C2P2RPKhiPPhi6CvSize+0x4c>
  41e1c8:	e08f1001 	add	r1, pc, r1
  41e1cc:	e59f0030 	ldr	r0, [pc, #48]	; 41e204 <_Z16icvCopy_8u_C2P2RPKhiPPhi6CvSize+0x50>
  41e1d0:	e791c000 	ldr	ip, [r1, r0]
  41e1d4:	e28d100c 	add	r1, sp, #12
  41e1d8:	e9910003 	ldmib	r1, {r0, r1}
  41e1dc:	e88d0003 	stm	sp, {r0, r1}
  41e1e0:	e1a00004 	mov	r0, r4
  41e1e4:	e1a0100e 	mov	r1, lr
  41e1e8:	e59cc000 	ldr	ip, [ip]
  41e1ec:	e1a0e00f 	mov	lr, pc
  41e1f0:	e12fff1c 	bx	ip
  41e1f4:	e28dd008 	add	sp, sp, #8
  41e1f8:	e8bd4010 	pop	{r4, lr}
  41e1fc:	e12fff1e 	bx	lr
  41e200:	00022e6c 	.word	0x00022e6c
  41e204:	000000a0 	.word	0x000000a0

0041e208 <_ZL18icvCopy_8u_C2P2R_fPKhiPPhi6CvSize>:
  41e208:	e92d4030 	push	{r4, r5, lr}
  41e20c:	e5925000 	ldr	r5, [r2]
  41e210:	e5924004 	ldr	r4, [r2, #4]
  41e214:	ea00000e 	b	41e254 <_ZL18icvCopy_8u_C2P2R_fPKhiPPhi6CvSize+0x4c>
  41e218:	e5d0e000 	ldrb	lr, [r0]
  41e21c:	e5d0c001 	ldrb	ip, [r0, #1]
  41e220:	e7c5e002 	strb	lr, [r5, r2]
  41e224:	e7c4c002 	strb	ip, [r4, r2]
  41e228:	e2822001 	add	r2, r2, #1
  41e22c:	e2800002 	add	r0, r0, #2
  41e230:	ea000000 	b	41e238 <_ZL18icvCopy_8u_C2P2R_fPKhiPPhi6CvSize+0x30>
  41e234:	e3a02000 	mov	r2, #0
  41e238:	e59dc00c 	ldr	ip, [sp, #12]
  41e23c:	e15c0002 	cmp	ip, r2
  41e240:	cafffff4 	bgt	41e218 <_ZL18icvCopy_8u_C2P2R_fPKhiPPhi6CvSize+0x10>
  41e244:	e0855003 	add	r5, r5, r3
  41e248:	e0844003 	add	r4, r4, r3
  41e24c:	e041c08c 	sub	ip, r1, ip, lsl #1
  41e250:	e080000c 	add	r0, r0, ip
  41e254:	e59d2010 	ldr	r2, [sp, #16]
  41e258:	e242c001 	sub	ip, r2, #1
  41e25c:	e58dc010 	str	ip, [sp, #16]
  41e260:	e3520000 	cmp	r2, #0
  41e264:	1afffff2 	bne	41e234 <_ZL18icvCopy_8u_C2P2R_fPKhiPPhi6CvSize+0x2c>
  41e268:	e3a00000 	mov	r0, #0
  41e26c:	e8bd4030 	pop	{r4, r5, lr}
  41e270:	e12fff1e 	bx	lr

0041e274 <_Z16icvCopy_8u_C3P3RPKhiPPhi6CvSize>:
  41e274:	e92d4010 	push	{r4, lr}
  41e278:	e24dd008 	sub	sp, sp, #8
  41e27c:	e1a04000 	mov	r4, r0
  41e280:	e1a0e001 	mov	lr, r1
  41e284:	e59f1034 	ldr	r1, [pc, #52]	; 41e2c0 <_Z16icvCopy_8u_C3P3RPKhiPPhi6CvSize+0x4c>
  41e288:	e08f1001 	add	r1, pc, r1
  41e28c:	e59f0030 	ldr	r0, [pc, #48]	; 41e2c4 <_Z16icvCopy_8u_C3P3RPKhiPPhi6CvSize+0x50>
  41e290:	e791c000 	ldr	ip, [r1, r0]
  41e294:	e28d100c 	add	r1, sp, #12
  41e298:	e9910003 	ldmib	r1, {r0, r1}
  41e29c:	e88d0003 	stm	sp, {r0, r1}
  41e2a0:	e1a00004 	mov	r0, r4
  41e2a4:	e1a0100e 	mov	r1, lr
  41e2a8:	e59cc000 	ldr	ip, [ip]
  41e2ac:	e1a0e00f 	mov	lr, pc
  41e2b0:	e12fff1c 	bx	ip
  41e2b4:	e28dd008 	add	sp, sp, #8
  41e2b8:	e8bd4010 	pop	{r4, lr}
  41e2bc:	e12fff1e 	bx	lr
  41e2c0:	00022dac 	.word	0x00022dac
  41e2c4:	0000007c 	.word	0x0000007c

0041e2c8 <_ZL18icvCopy_8u_C3P3R_fPKhiPPhi6CvSize>:
  41e2c8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41e2cc:	e5927000 	ldr	r7, [r2]
  41e2d0:	e5926004 	ldr	r6, [r2, #4]
  41e2d4:	e5925008 	ldr	r5, [r2, #8]
  41e2d8:	ea000012 	b	41e328 <_ZL18icvCopy_8u_C3P3R_fPKhiPPhi6CvSize+0x60>
  41e2dc:	e5d04000 	ldrb	r4, [r0]
  41e2e0:	e5d0e001 	ldrb	lr, [r0, #1]
  41e2e4:	e5d0c002 	ldrb	ip, [r0, #2]
  41e2e8:	e7c74002 	strb	r4, [r7, r2]
  41e2ec:	e7c6e002 	strb	lr, [r6, r2]
  41e2f0:	e7c5c002 	strb	ip, [r5, r2]
  41e2f4:	e2822001 	add	r2, r2, #1
  41e2f8:	e2800003 	add	r0, r0, #3
  41e2fc:	ea000000 	b	41e304 <_ZL18icvCopy_8u_C3P3R_fPKhiPPhi6CvSize+0x3c>
  41e300:	e3a02000 	mov	r2, #0
  41e304:	e59dc014 	ldr	ip, [sp, #20]
  41e308:	e15c0002 	cmp	ip, r2
  41e30c:	cafffff2 	bgt	41e2dc <_ZL18icvCopy_8u_C3P3R_fPKhiPPhi6CvSize+0x14>
  41e310:	e0877003 	add	r7, r7, r3
  41e314:	e0866003 	add	r6, r6, r3
  41e318:	e0855003 	add	r5, r5, r3
  41e31c:	e08cc08c 	add	ip, ip, ip, lsl #1
  41e320:	e06cc001 	rsb	ip, ip, r1
  41e324:	e080000c 	add	r0, r0, ip
  41e328:	e59d2018 	ldr	r2, [sp, #24]
  41e32c:	e242c001 	sub	ip, r2, #1
  41e330:	e58dc018 	str	ip, [sp, #24]
  41e334:	e3520000 	cmp	r2, #0
  41e338:	1afffff0 	bne	41e300 <_ZL18icvCopy_8u_C3P3R_fPKhiPPhi6CvSize+0x38>
  41e33c:	e3a00000 	mov	r0, #0
  41e340:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41e344:	e12fff1e 	bx	lr

0041e348 <_Z16icvCopy_8u_C4P4RPKhiPPhi6CvSize>:
  41e348:	e92d4010 	push	{r4, lr}
  41e34c:	e24dd008 	sub	sp, sp, #8
  41e350:	e1a04000 	mov	r4, r0
  41e354:	e1a0e001 	mov	lr, r1
  41e358:	e59f1034 	ldr	r1, [pc, #52]	; 41e394 <_Z16icvCopy_8u_C4P4RPKhiPPhi6CvSize+0x4c>
  41e35c:	e08f1001 	add	r1, pc, r1
  41e360:	e59f0030 	ldr	r0, [pc, #48]	; 41e398 <_Z16icvCopy_8u_C4P4RPKhiPPhi6CvSize+0x50>
  41e364:	e791c000 	ldr	ip, [r1, r0]
  41e368:	e28d100c 	add	r1, sp, #12
  41e36c:	e9910003 	ldmib	r1, {r0, r1}
  41e370:	e88d0003 	stm	sp, {r0, r1}
  41e374:	e1a00004 	mov	r0, r4
  41e378:	e1a0100e 	mov	r1, lr
  41e37c:	e59cc000 	ldr	ip, [ip]
  41e380:	e1a0e00f 	mov	lr, pc
  41e384:	e12fff1c 	bx	ip
  41e388:	e28dd008 	add	sp, sp, #8
  41e38c:	e8bd4010 	pop	{r4, lr}
  41e390:	e12fff1e 	bx	lr
  41e394:	00022cd8 	.word	0x00022cd8
  41e398:	000000f0 	.word	0x000000f0

0041e39c <_ZL18icvCopy_8u_C4P4R_fPKhiPPhi6CvSize>:
  41e39c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41e3a0:	e5927000 	ldr	r7, [r2]
  41e3a4:	e5926004 	ldr	r6, [r2, #4]
  41e3a8:	e5925008 	ldr	r5, [r2, #8]
  41e3ac:	e592400c 	ldr	r4, [r2, #12]
  41e3b0:	ea000014 	b	41e408 <_ZL18icvCopy_8u_C4P4R_fPKhiPPhi6CvSize+0x6c>
  41e3b4:	e5d0e000 	ldrb	lr, [r0]
  41e3b8:	e5d0c001 	ldrb	ip, [r0, #1]
  41e3bc:	e7c7e002 	strb	lr, [r7, r2]
  41e3c0:	e7c6c002 	strb	ip, [r6, r2]
  41e3c4:	e5d0e002 	ldrb	lr, [r0, #2]
  41e3c8:	e5d0c003 	ldrb	ip, [r0, #3]
  41e3cc:	e7c5e002 	strb	lr, [r5, r2]
  41e3d0:	e7c4c002 	strb	ip, [r4, r2]
  41e3d4:	e2822001 	add	r2, r2, #1
  41e3d8:	e2800004 	add	r0, r0, #4
  41e3dc:	ea000000 	b	41e3e4 <_ZL18icvCopy_8u_C4P4R_fPKhiPPhi6CvSize+0x48>
  41e3e0:	e3a02000 	mov	r2, #0
  41e3e4:	e59dc014 	ldr	ip, [sp, #20]
  41e3e8:	e15c0002 	cmp	ip, r2
  41e3ec:	cafffff0 	bgt	41e3b4 <_ZL18icvCopy_8u_C4P4R_fPKhiPPhi6CvSize+0x18>
  41e3f0:	e0877003 	add	r7, r7, r3
  41e3f4:	e0866003 	add	r6, r6, r3
  41e3f8:	e0855003 	add	r5, r5, r3
  41e3fc:	e0844003 	add	r4, r4, r3
  41e400:	e041c10c 	sub	ip, r1, ip, lsl #2
  41e404:	e080000c 	add	r0, r0, ip
  41e408:	e59d2018 	ldr	r2, [sp, #24]
  41e40c:	e242c001 	sub	ip, r2, #1
  41e410:	e58dc018 	str	ip, [sp, #24]
  41e414:	e3520000 	cmp	r2, #0
  41e418:	1afffff0 	bne	41e3e0 <_ZL18icvCopy_8u_C4P4R_fPKhiPPhi6CvSize+0x44>
  41e41c:	e3a00000 	mov	r0, #0
  41e420:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41e424:	e12fff1e 	bx	lr

0041e428 <_Z17icvCopy_16s_C2P2RPKtiPPti6CvSize>:
  41e428:	e92d4010 	push	{r4, lr}
  41e42c:	e24dd008 	sub	sp, sp, #8
  41e430:	e1a04000 	mov	r4, r0
  41e434:	e1a0e001 	mov	lr, r1
  41e438:	e59f1034 	ldr	r1, [pc, #52]	; 41e474 <_Z17icvCopy_16s_C2P2RPKtiPPti6CvSize+0x4c>
  41e43c:	e08f1001 	add	r1, pc, r1
  41e440:	e59f0030 	ldr	r0, [pc, #48]	; 41e478 <_Z17icvCopy_16s_C2P2RPKtiPPti6CvSize+0x50>
  41e444:	e791c000 	ldr	ip, [r1, r0]
  41e448:	e28d100c 	add	r1, sp, #12
  41e44c:	e9910003 	ldmib	r1, {r0, r1}
  41e450:	e88d0003 	stm	sp, {r0, r1}
  41e454:	e1a00004 	mov	r0, r4
  41e458:	e1a0100e 	mov	r1, lr
  41e45c:	e59cc000 	ldr	ip, [ip]
  41e460:	e1a0e00f 	mov	lr, pc
  41e464:	e12fff1c 	bx	ip
  41e468:	e28dd008 	add	sp, sp, #8
  41e46c:	e8bd4010 	pop	{r4, lr}
  41e470:	e12fff1e 	bx	lr
  41e474:	00022bf8 	.word	0x00022bf8
  41e478:	0000003c 	.word	0x0000003c

0041e47c <_ZL19icvCopy_16s_C2P2R_fPKtiPPti6CvSize>:
  41e47c:	e92d4070 	push	{r4, r5, r6, lr}
  41e480:	e5926000 	ldr	r6, [r2]
  41e484:	e5925004 	ldr	r5, [r2, #4]
  41e488:	e1a010a1 	lsr	r1, r1, #1
  41e48c:	e1a030a3 	lsr	r3, r3, #1
  41e490:	ea000011 	b	41e4dc <_ZL19icvCopy_16s_C2P2R_fPKtiPPti6CvSize+0x60>
  41e494:	e1d040b0 	ldrh	r4, [r0]
  41e498:	e1d0e0b2 	ldrh	lr, [r0, #2]
  41e49c:	e1a0c082 	lsl	ip, r2, #1
  41e4a0:	e18640bc 	strh	r4, [r6, ip]
  41e4a4:	e185e0bc 	strh	lr, [r5, ip]
  41e4a8:	e2822001 	add	r2, r2, #1
  41e4ac:	e2800004 	add	r0, r0, #4
  41e4b0:	ea000000 	b	41e4b8 <_ZL19icvCopy_16s_C2P2R_fPKtiPPti6CvSize+0x3c>
  41e4b4:	e3a02000 	mov	r2, #0
  41e4b8:	e59dc010 	ldr	ip, [sp, #16]
  41e4bc:	e15c0002 	cmp	ip, r2
  41e4c0:	cafffff3 	bgt	41e494 <_ZL19icvCopy_16s_C2P2R_fPKtiPPti6CvSize+0x18>
  41e4c4:	e1a02083 	lsl	r2, r3, #1
  41e4c8:	e0866002 	add	r6, r6, r2
  41e4cc:	e0855002 	add	r5, r5, r2
  41e4d0:	e1a02081 	lsl	r2, r1, #1
  41e4d4:	e042c10c 	sub	ip, r2, ip, lsl #2
  41e4d8:	e080000c 	add	r0, r0, ip
  41e4dc:	e59d2014 	ldr	r2, [sp, #20]
  41e4e0:	e242c001 	sub	ip, r2, #1
  41e4e4:	e58dc014 	str	ip, [sp, #20]
  41e4e8:	e3520000 	cmp	r2, #0
  41e4ec:	1afffff0 	bne	41e4b4 <_ZL19icvCopy_16s_C2P2R_fPKtiPPti6CvSize+0x38>
  41e4f0:	e3a00000 	mov	r0, #0
  41e4f4:	e8bd4070 	pop	{r4, r5, r6, lr}
  41e4f8:	e12fff1e 	bx	lr

0041e4fc <_Z17icvCopy_16s_C3P3RPKtiPPti6CvSize>:
  41e4fc:	e92d4010 	push	{r4, lr}
  41e500:	e24dd008 	sub	sp, sp, #8
  41e504:	e1a04000 	mov	r4, r0
  41e508:	e1a0e001 	mov	lr, r1
  41e50c:	e59f1034 	ldr	r1, [pc, #52]	; 41e548 <_Z17icvCopy_16s_C3P3RPKtiPPti6CvSize+0x4c>
  41e510:	e08f1001 	add	r1, pc, r1
  41e514:	e59f0030 	ldr	r0, [pc, #48]	; 41e54c <_Z17icvCopy_16s_C3P3RPKtiPPti6CvSize+0x50>
  41e518:	e791c000 	ldr	ip, [r1, r0]
  41e51c:	e28d100c 	add	r1, sp, #12
  41e520:	e9910003 	ldmib	r1, {r0, r1}
  41e524:	e88d0003 	stm	sp, {r0, r1}
  41e528:	e1a00004 	mov	r0, r4
  41e52c:	e1a0100e 	mov	r1, lr
  41e530:	e59cc000 	ldr	ip, [ip]
  41e534:	e1a0e00f 	mov	lr, pc
  41e538:	e12fff1c 	bx	ip
  41e53c:	e28dd008 	add	sp, sp, #8
  41e540:	e8bd4010 	pop	{r4, lr}
  41e544:	e12fff1e 	bx	lr
  41e548:	00022b24 	.word	0x00022b24
  41e54c:	0000000c 	.word	0x0000000c

0041e550 <_ZL19icvCopy_16s_C3P3R_fPKtiPPti6CvSize>:
  41e550:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  41e554:	e5928000 	ldr	r8, [r2]
  41e558:	e5927004 	ldr	r7, [r2, #4]
  41e55c:	e5926008 	ldr	r6, [r2, #8]
  41e560:	e1a010a1 	lsr	r1, r1, #1
  41e564:	e1a030a3 	lsr	r3, r3, #1
  41e568:	ea000015 	b	41e5c4 <_ZL19icvCopy_16s_C3P3R_fPKtiPPti6CvSize+0x74>
  41e56c:	e1d050b0 	ldrh	r5, [r0]
  41e570:	e1d040b2 	ldrh	r4, [r0, #2]
  41e574:	e1d0e0b4 	ldrh	lr, [r0, #4]
  41e578:	e1a0c082 	lsl	ip, r2, #1
  41e57c:	e18850bc 	strh	r5, [r8, ip]
  41e580:	e18740bc 	strh	r4, [r7, ip]
  41e584:	e186e0bc 	strh	lr, [r6, ip]
  41e588:	e2822001 	add	r2, r2, #1
  41e58c:	e2800006 	add	r0, r0, #6
  41e590:	ea000000 	b	41e598 <_ZL19icvCopy_16s_C3P3R_fPKtiPPti6CvSize+0x48>
  41e594:	e3a02000 	mov	r2, #0
  41e598:	e59dc018 	ldr	ip, [sp, #24]
  41e59c:	e15c0002 	cmp	ip, r2
  41e5a0:	cafffff1 	bgt	41e56c <_ZL19icvCopy_16s_C3P3R_fPKtiPPti6CvSize+0x1c>
  41e5a4:	e1a02083 	lsl	r2, r3, #1
  41e5a8:	e0888002 	add	r8, r8, r2
  41e5ac:	e0877002 	add	r7, r7, r2
  41e5b0:	e0866002 	add	r6, r6, r2
  41e5b4:	e08cc08c 	add	ip, ip, ip, lsl #1
  41e5b8:	e1a0c08c 	lsl	ip, ip, #1
  41e5bc:	e06cc081 	rsb	ip, ip, r1, lsl #1
  41e5c0:	e080000c 	add	r0, r0, ip
  41e5c4:	e59d201c 	ldr	r2, [sp, #28]
  41e5c8:	e242c001 	sub	ip, r2, #1
  41e5cc:	e58dc01c 	str	ip, [sp, #28]
  41e5d0:	e3520000 	cmp	r2, #0
  41e5d4:	1affffee 	bne	41e594 <_ZL19icvCopy_16s_C3P3R_fPKtiPPti6CvSize+0x44>
  41e5d8:	e3a00000 	mov	r0, #0
  41e5dc:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  41e5e0:	e12fff1e 	bx	lr

0041e5e4 <_Z17icvCopy_16s_C4P4RPKtiPPti6CvSize>:
  41e5e4:	e92d4010 	push	{r4, lr}
  41e5e8:	e24dd008 	sub	sp, sp, #8
  41e5ec:	e1a04000 	mov	r4, r0
  41e5f0:	e1a0e001 	mov	lr, r1
  41e5f4:	e59f1034 	ldr	r1, [pc, #52]	; 41e630 <_Z17icvCopy_16s_C4P4RPKtiPPti6CvSize+0x4c>
  41e5f8:	e08f1001 	add	r1, pc, r1
  41e5fc:	e59f0030 	ldr	r0, [pc, #48]	; 41e634 <_Z17icvCopy_16s_C4P4RPKtiPPti6CvSize+0x50>
  41e600:	e791c000 	ldr	ip, [r1, r0]
  41e604:	e28d100c 	add	r1, sp, #12
  41e608:	e9910003 	ldmib	r1, {r0, r1}
  41e60c:	e88d0003 	stm	sp, {r0, r1}
  41e610:	e1a00004 	mov	r0, r4
  41e614:	e1a0100e 	mov	r1, lr
  41e618:	e59cc000 	ldr	ip, [ip]
  41e61c:	e1a0e00f 	mov	lr, pc
  41e620:	e12fff1c 	bx	ip
  41e624:	e28dd008 	add	sp, sp, #8
  41e628:	e8bd4010 	pop	{r4, lr}
  41e62c:	e12fff1e 	bx	lr
  41e630:	00022a3c 	.word	0x00022a3c
  41e634:	00000040 	.word	0x00000040

0041e638 <_ZL19icvCopy_16s_C4P4R_fPKtiPPti6CvSize>:
  41e638:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  41e63c:	e5928000 	ldr	r8, [r2]
  41e640:	e5927004 	ldr	r7, [r2, #4]
  41e644:	e5926008 	ldr	r6, [r2, #8]
  41e648:	e592500c 	ldr	r5, [r2, #12]
  41e64c:	e1a010a1 	lsr	r1, r1, #1
  41e650:	e1a030a3 	lsr	r3, r3, #1
  41e654:	ea000017 	b	41e6b8 <_ZL19icvCopy_16s_C4P4R_fPKtiPPti6CvSize+0x80>
  41e658:	e1d040b0 	ldrh	r4, [r0]
  41e65c:	e1d0e0b2 	ldrh	lr, [r0, #2]
  41e660:	e1a0208c 	lsl	r2, ip, #1
  41e664:	e18840b2 	strh	r4, [r8, r2]
  41e668:	e187e0b2 	strh	lr, [r7, r2]
  41e66c:	e1d040b4 	ldrh	r4, [r0, #4]
  41e670:	e1d0e0b6 	ldrh	lr, [r0, #6]
  41e674:	e18640b2 	strh	r4, [r6, r2]
  41e678:	e185e0b2 	strh	lr, [r5, r2]
  41e67c:	e28cc001 	add	ip, ip, #1
  41e680:	e2800008 	add	r0, r0, #8
  41e684:	ea000000 	b	41e68c <_ZL19icvCopy_16s_C4P4R_fPKtiPPti6CvSize+0x54>
  41e688:	e3a0c000 	mov	ip, #0
  41e68c:	e59d2018 	ldr	r2, [sp, #24]
  41e690:	e152000c 	cmp	r2, ip
  41e694:	caffffef 	bgt	41e658 <_ZL19icvCopy_16s_C4P4R_fPKtiPPti6CvSize+0x20>
  41e698:	e1a0c083 	lsl	ip, r3, #1
  41e69c:	e088800c 	add	r8, r8, ip
  41e6a0:	e087700c 	add	r7, r7, ip
  41e6a4:	e086600c 	add	r6, r6, ip
  41e6a8:	e085500c 	add	r5, r5, ip
  41e6ac:	e1a0c081 	lsl	ip, r1, #1
  41e6b0:	e04c2182 	sub	r2, ip, r2, lsl #3
  41e6b4:	e0800002 	add	r0, r0, r2
  41e6b8:	e59d201c 	ldr	r2, [sp, #28]
  41e6bc:	e242c001 	sub	ip, r2, #1
  41e6c0:	e58dc01c 	str	ip, [sp, #28]
  41e6c4:	e3520000 	cmp	r2, #0
  41e6c8:	1affffee 	bne	41e688 <_ZL19icvCopy_16s_C4P4R_fPKtiPPti6CvSize+0x50>
  41e6cc:	e3a00000 	mov	r0, #0
  41e6d0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  41e6d4:	e12fff1e 	bx	lr

0041e6d8 <_Z17icvCopy_32f_C2P2RPKiiPPii6CvSize>:
  41e6d8:	e92d4010 	push	{r4, lr}
  41e6dc:	e24dd008 	sub	sp, sp, #8
  41e6e0:	e1a04000 	mov	r4, r0
  41e6e4:	e1a0e001 	mov	lr, r1
  41e6e8:	e59f1034 	ldr	r1, [pc, #52]	; 41e724 <_Z17icvCopy_32f_C2P2RPKiiPPii6CvSize+0x4c>
  41e6ec:	e08f1001 	add	r1, pc, r1
  41e6f0:	e59f0030 	ldr	r0, [pc, #48]	; 41e728 <_Z17icvCopy_32f_C2P2RPKiiPPii6CvSize+0x50>
  41e6f4:	e791c000 	ldr	ip, [r1, r0]
  41e6f8:	e28d100c 	add	r1, sp, #12
  41e6fc:	e9910003 	ldmib	r1, {r0, r1}
  41e700:	e88d0003 	stm	sp, {r0, r1}
  41e704:	e1a00004 	mov	r0, r4
  41e708:	e1a0100e 	mov	r1, lr
  41e70c:	e59cc000 	ldr	ip, [ip]
  41e710:	e1a0e00f 	mov	lr, pc
  41e714:	e12fff1c 	bx	ip
  41e718:	e28dd008 	add	sp, sp, #8
  41e71c:	e8bd4010 	pop	{r4, lr}
  41e720:	e12fff1e 	bx	lr
  41e724:	00022948 	.word	0x00022948
  41e728:	00000128 	.word	0x00000128

0041e72c <_ZL19icvCopy_32f_C2P2R_fPKiiPPii6CvSize>:
  41e72c:	e92d4030 	push	{r4, r5, lr}
  41e730:	e5925000 	ldr	r5, [r2]
  41e734:	e5924004 	ldr	r4, [r2, #4]
  41e738:	e1a01121 	lsr	r1, r1, #2
  41e73c:	e1a03123 	lsr	r3, r3, #2
  41e740:	ea000010 	b	41e788 <_ZL19icvCopy_32f_C2P2R_fPKiiPPii6CvSize+0x5c>
  41e744:	e590e000 	ldr	lr, [r0]
  41e748:	e590c004 	ldr	ip, [r0, #4]
  41e74c:	e785e102 	str	lr, [r5, r2, lsl #2]
  41e750:	e784c102 	str	ip, [r4, r2, lsl #2]
  41e754:	e2822001 	add	r2, r2, #1
  41e758:	e2800008 	add	r0, r0, #8
  41e75c:	ea000000 	b	41e764 <_ZL19icvCopy_32f_C2P2R_fPKiiPPii6CvSize+0x38>
  41e760:	e3a02000 	mov	r2, #0
  41e764:	e59dc00c 	ldr	ip, [sp, #12]
  41e768:	e15c0002 	cmp	ip, r2
  41e76c:	cafffff4 	bgt	41e744 <_ZL19icvCopy_32f_C2P2R_fPKiiPPii6CvSize+0x18>
  41e770:	e1a02103 	lsl	r2, r3, #2
  41e774:	e0855002 	add	r5, r5, r2
  41e778:	e0844002 	add	r4, r4, r2
  41e77c:	e1a02101 	lsl	r2, r1, #2
  41e780:	e042c18c 	sub	ip, r2, ip, lsl #3
  41e784:	e080000c 	add	r0, r0, ip
  41e788:	e59d2010 	ldr	r2, [sp, #16]
  41e78c:	e242c001 	sub	ip, r2, #1
  41e790:	e58dc010 	str	ip, [sp, #16]
  41e794:	e3520000 	cmp	r2, #0
  41e798:	1afffff0 	bne	41e760 <_ZL19icvCopy_32f_C2P2R_fPKiiPPii6CvSize+0x34>
  41e79c:	e3a00000 	mov	r0, #0
  41e7a0:	e8bd4030 	pop	{r4, r5, lr}
  41e7a4:	e12fff1e 	bx	lr

0041e7a8 <_Z17icvCopy_32f_C3P3RPKiiPPii6CvSize>:
  41e7a8:	e92d4010 	push	{r4, lr}
  41e7ac:	e24dd008 	sub	sp, sp, #8
  41e7b0:	e1a04000 	mov	r4, r0
  41e7b4:	e1a0e001 	mov	lr, r1
  41e7b8:	e59f1034 	ldr	r1, [pc, #52]	; 41e7f4 <_Z17icvCopy_32f_C3P3RPKiiPPii6CvSize+0x4c>
  41e7bc:	e08f1001 	add	r1, pc, r1
  41e7c0:	e59f0030 	ldr	r0, [pc, #48]	; 41e7f8 <_Z17icvCopy_32f_C3P3RPKiiPPii6CvSize+0x50>
  41e7c4:	e791c000 	ldr	ip, [r1, r0]
  41e7c8:	e28d100c 	add	r1, sp, #12
  41e7cc:	e9910003 	ldmib	r1, {r0, r1}
  41e7d0:	e88d0003 	stm	sp, {r0, r1}
  41e7d4:	e1a00004 	mov	r0, r4
  41e7d8:	e1a0100e 	mov	r1, lr
  41e7dc:	e59cc000 	ldr	ip, [ip]
  41e7e0:	e1a0e00f 	mov	lr, pc
  41e7e4:	e12fff1c 	bx	ip
  41e7e8:	e28dd008 	add	sp, sp, #8
  41e7ec:	e8bd4010 	pop	{r4, lr}
  41e7f0:	e12fff1e 	bx	lr
  41e7f4:	00022878 	.word	0x00022878
  41e7f8:	00000104 	.word	0x00000104

0041e7fc <_ZL19icvCopy_32f_C3P3R_fPKiiPPii6CvSize>:
  41e7fc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41e800:	e5927000 	ldr	r7, [r2]
  41e804:	e5926004 	ldr	r6, [r2, #4]
  41e808:	e5925008 	ldr	r5, [r2, #8]
  41e80c:	e1a01121 	lsr	r1, r1, #2
  41e810:	e1a03123 	lsr	r3, r3, #2
  41e814:	ea000014 	b	41e86c <_ZL19icvCopy_32f_C3P3R_fPKiiPPii6CvSize+0x70>
  41e818:	e5904000 	ldr	r4, [r0]
  41e81c:	e590e004 	ldr	lr, [r0, #4]
  41e820:	e590c008 	ldr	ip, [r0, #8]
  41e824:	e7874102 	str	r4, [r7, r2, lsl #2]
  41e828:	e786e102 	str	lr, [r6, r2, lsl #2]
  41e82c:	e785c102 	str	ip, [r5, r2, lsl #2]
  41e830:	e2822001 	add	r2, r2, #1
  41e834:	e280000c 	add	r0, r0, #12
  41e838:	ea000000 	b	41e840 <_ZL19icvCopy_32f_C3P3R_fPKiiPPii6CvSize+0x44>
  41e83c:	e3a02000 	mov	r2, #0
  41e840:	e59dc014 	ldr	ip, [sp, #20]
  41e844:	e15c0002 	cmp	ip, r2
  41e848:	cafffff2 	bgt	41e818 <_ZL19icvCopy_32f_C3P3R_fPKiiPPii6CvSize+0x1c>
  41e84c:	e1a02103 	lsl	r2, r3, #2
  41e850:	e0877002 	add	r7, r7, r2
  41e854:	e0866002 	add	r6, r6, r2
  41e858:	e0855002 	add	r5, r5, r2
  41e85c:	e08cc08c 	add	ip, ip, ip, lsl #1
  41e860:	e1a0c10c 	lsl	ip, ip, #2
  41e864:	e06cc101 	rsb	ip, ip, r1, lsl #2
  41e868:	e080000c 	add	r0, r0, ip
  41e86c:	e59d2018 	ldr	r2, [sp, #24]
  41e870:	e242c001 	sub	ip, r2, #1
  41e874:	e58dc018 	str	ip, [sp, #24]
  41e878:	e3520000 	cmp	r2, #0
  41e87c:	1affffee 	bne	41e83c <_ZL19icvCopy_32f_C3P3R_fPKiiPPii6CvSize+0x40>
  41e880:	e3a00000 	mov	r0, #0
  41e884:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41e888:	e12fff1e 	bx	lr

0041e88c <_Z17icvCopy_32f_C4P4RPKiiPPii6CvSize>:
  41e88c:	e92d4010 	push	{r4, lr}
  41e890:	e24dd008 	sub	sp, sp, #8
  41e894:	e1a04000 	mov	r4, r0
  41e898:	e1a0e001 	mov	lr, r1
  41e89c:	e59f1034 	ldr	r1, [pc, #52]	; 41e8d8 <_Z17icvCopy_32f_C4P4RPKiiPPii6CvSize+0x4c>
  41e8a0:	e08f1001 	add	r1, pc, r1
  41e8a4:	e59f0030 	ldr	r0, [pc, #48]	; 41e8dc <_Z17icvCopy_32f_C4P4RPKiiPPii6CvSize+0x50>
  41e8a8:	e791c000 	ldr	ip, [r1, r0]
  41e8ac:	e28d100c 	add	r1, sp, #12
  41e8b0:	e9910003 	ldmib	r1, {r0, r1}
  41e8b4:	e88d0003 	stm	sp, {r0, r1}
  41e8b8:	e1a00004 	mov	r0, r4
  41e8bc:	e1a0100e 	mov	r1, lr
  41e8c0:	e59cc000 	ldr	ip, [ip]
  41e8c4:	e1a0e00f 	mov	lr, pc
  41e8c8:	e12fff1c 	bx	ip
  41e8cc:	e28dd008 	add	sp, sp, #8
  41e8d0:	e8bd4010 	pop	{r4, lr}
  41e8d4:	e12fff1e 	bx	lr
  41e8d8:	00022794 	.word	0x00022794
  41e8dc:	00000110 	.word	0x00000110

0041e8e0 <_ZL19icvCopy_32f_C4P4R_fPKiiPPii6CvSize>:
  41e8e0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41e8e4:	e5927000 	ldr	r7, [r2]
  41e8e8:	e5926004 	ldr	r6, [r2, #4]
  41e8ec:	e5925008 	ldr	r5, [r2, #8]
  41e8f0:	e592400c 	ldr	r4, [r2, #12]
  41e8f4:	e1a01121 	lsr	r1, r1, #2
  41e8f8:	e1a03123 	lsr	r3, r3, #2
  41e8fc:	ea000016 	b	41e95c <_ZL19icvCopy_32f_C4P4R_fPKiiPPii6CvSize+0x7c>
  41e900:	e590e000 	ldr	lr, [r0]
  41e904:	e590c004 	ldr	ip, [r0, #4]
  41e908:	e787e102 	str	lr, [r7, r2, lsl #2]
  41e90c:	e786c102 	str	ip, [r6, r2, lsl #2]
  41e910:	e590e008 	ldr	lr, [r0, #8]
  41e914:	e590c00c 	ldr	ip, [r0, #12]
  41e918:	e785e102 	str	lr, [r5, r2, lsl #2]
  41e91c:	e784c102 	str	ip, [r4, r2, lsl #2]
  41e920:	e2822001 	add	r2, r2, #1
  41e924:	e2800010 	add	r0, r0, #16
  41e928:	ea000000 	b	41e930 <_ZL19icvCopy_32f_C4P4R_fPKiiPPii6CvSize+0x50>
  41e92c:	e3a02000 	mov	r2, #0
  41e930:	e59dc014 	ldr	ip, [sp, #20]
  41e934:	e15c0002 	cmp	ip, r2
  41e938:	cafffff0 	bgt	41e900 <_ZL19icvCopy_32f_C4P4R_fPKiiPPii6CvSize+0x20>
  41e93c:	e1a02103 	lsl	r2, r3, #2
  41e940:	e0877002 	add	r7, r7, r2
  41e944:	e0866002 	add	r6, r6, r2
  41e948:	e0855002 	add	r5, r5, r2
  41e94c:	e0844002 	add	r4, r4, r2
  41e950:	e1a02101 	lsl	r2, r1, #2
  41e954:	e042c20c 	sub	ip, r2, ip, lsl #4
  41e958:	e080000c 	add	r0, r0, ip
  41e95c:	e59d2018 	ldr	r2, [sp, #24]
  41e960:	e242c001 	sub	ip, r2, #1
  41e964:	e58dc018 	str	ip, [sp, #24]
  41e968:	e3520000 	cmp	r2, #0
  41e96c:	1affffee 	bne	41e92c <_ZL19icvCopy_32f_C4P4R_fPKiiPPii6CvSize+0x4c>
  41e970:	e3a00000 	mov	r0, #0
  41e974:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41e978:	e12fff1e 	bx	lr

0041e97c <_Z17icvCopy_8u_CnC1CRPKhiPhi6CvSizeii>:
  41e97c:	e92d4010 	push	{r4, lr}
  41e980:	e24dd010 	sub	sp, sp, #16
  41e984:	e1a04000 	mov	r4, r0
  41e988:	e1a0e001 	mov	lr, r1
  41e98c:	e59f1044 	ldr	r1, [pc, #68]	; 41e9d8 <_Z17icvCopy_8u_CnC1CRPKhiPhi6CvSizeii+0x5c>
  41e990:	e08f1001 	add	r1, pc, r1
  41e994:	e59f0040 	ldr	r0, [pc, #64]	; 41e9dc <_Z17icvCopy_8u_CnC1CRPKhiPhi6CvSizeii+0x60>
  41e998:	e791c000 	ldr	ip, [r1, r0]
  41e99c:	e28d1014 	add	r1, sp, #20
  41e9a0:	e9910003 	ldmib	r1, {r0, r1}
  41e9a4:	e88d0003 	stm	sp, {r0, r1}
  41e9a8:	e59d1020 	ldr	r1, [sp, #32]
  41e9ac:	e58d1008 	str	r1, [sp, #8]
  41e9b0:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41e9b4:	e58d100c 	str	r1, [sp, #12]
  41e9b8:	e1a00004 	mov	r0, r4
  41e9bc:	e1a0100e 	mov	r1, lr
  41e9c0:	e59cc000 	ldr	ip, [ip]
  41e9c4:	e1a0e00f 	mov	lr, pc
  41e9c8:	e12fff1c 	bx	ip
  41e9cc:	e28dd010 	add	sp, sp, #16
  41e9d0:	e8bd4010 	pop	{r4, lr}
  41e9d4:	e12fff1e 	bx	lr
  41e9d8:	000226a4 	.word	0x000226a4
  41e9dc:	0000009c 	.word	0x0000009c

0041e9e0 <_ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii>:
  41e9e0:	e92d4070 	push	{r4, r5, r6, lr}
  41e9e4:	e59de018 	ldr	lr, [sp, #24]
  41e9e8:	e59dc01c 	ldr	ip, [sp, #28]
  41e9ec:	e24cc001 	sub	ip, ip, #1
  41e9f0:	e080000c 	add	r0, r0, ip
  41e9f4:	ea00001d 	b	41ea70 <_ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii+0x90>
  41e9f8:	e5d04000 	ldrb	r4, [r0]
  41e9fc:	e7d0500e 	ldrb	r5, [r0, lr]
  41ea00:	e7c2400c 	strb	r4, [r2, ip]
  41ea04:	e28c4001 	add	r4, ip, #1
  41ea08:	e7c25004 	strb	r5, [r2, r4]
  41ea0c:	e7d0608e 	ldrb	r6, [r0, lr, lsl #1]
  41ea10:	e08e408e 	add	r4, lr, lr, lsl #1
  41ea14:	e7d05004 	ldrb	r5, [r0, r4]
  41ea18:	e28c4002 	add	r4, ip, #2
  41ea1c:	e7c26004 	strb	r6, [r2, r4]
  41ea20:	e28c4003 	add	r4, ip, #3
  41ea24:	e7c25004 	strb	r5, [r2, r4]
  41ea28:	e28cc004 	add	ip, ip, #4
  41ea2c:	e080010e 	add	r0, r0, lr, lsl #2
  41ea30:	ea000000 	b	41ea38 <_ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii+0x58>
  41ea34:	e3a0c000 	mov	ip, #0
  41ea38:	e59d4010 	ldr	r4, [sp, #16]
  41ea3c:	e2445004 	sub	r5, r4, #4
  41ea40:	e155000c 	cmp	r5, ip
  41ea44:	aaffffeb 	bge	41e9f8 <_ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii+0x18>
  41ea48:	ea000002 	b	41ea58 <_ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii+0x78>
  41ea4c:	e6d0500e 	ldrb	r5, [r0], lr
  41ea50:	e7c2500c 	strb	r5, [r2, ip]
  41ea54:	e28cc001 	add	ip, ip, #1
  41ea58:	e15c0004 	cmp	ip, r4
  41ea5c:	bafffffa 	blt	41ea4c <_ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii+0x6c>
  41ea60:	e004049e 	mul	r4, lr, r4
  41ea64:	e0644001 	rsb	r4, r4, r1
  41ea68:	e0800004 	add	r0, r0, r4
  41ea6c:	e0822003 	add	r2, r2, r3
  41ea70:	e59dc014 	ldr	ip, [sp, #20]
  41ea74:	e24c4001 	sub	r4, ip, #1
  41ea78:	e58d4014 	str	r4, [sp, #20]
  41ea7c:	e35c0000 	cmp	ip, #0
  41ea80:	1affffeb 	bne	41ea34 <_ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii+0x54>
  41ea84:	e3a00000 	mov	r0, #0
  41ea88:	e8bd4070 	pop	{r4, r5, r6, lr}
  41ea8c:	e12fff1e 	bx	lr

0041ea90 <_Z18icvCopy_16s_CnC1CRPKtiPti6CvSizeii>:
  41ea90:	e92d4010 	push	{r4, lr}
  41ea94:	e24dd010 	sub	sp, sp, #16
  41ea98:	e1a04000 	mov	r4, r0
  41ea9c:	e1a0e001 	mov	lr, r1
  41eaa0:	e59f1044 	ldr	r1, [pc, #68]	; 41eaec <_Z18icvCopy_16s_CnC1CRPKtiPti6CvSizeii+0x5c>
  41eaa4:	e08f1001 	add	r1, pc, r1
  41eaa8:	e59f0040 	ldr	r0, [pc, #64]	; 41eaf0 <_Z18icvCopy_16s_CnC1CRPKtiPti6CvSizeii+0x60>
  41eaac:	e791c000 	ldr	ip, [r1, r0]
  41eab0:	e28d1014 	add	r1, sp, #20
  41eab4:	e9910003 	ldmib	r1, {r0, r1}
  41eab8:	e88d0003 	stm	sp, {r0, r1}
  41eabc:	e59d1020 	ldr	r1, [sp, #32]
  41eac0:	e58d1008 	str	r1, [sp, #8]
  41eac4:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41eac8:	e58d100c 	str	r1, [sp, #12]
  41eacc:	e1a00004 	mov	r0, r4
  41ead0:	e1a0100e 	mov	r1, lr
  41ead4:	e59cc000 	ldr	ip, [ip]
  41ead8:	e1a0e00f 	mov	lr, pc
  41eadc:	e12fff1c 	bx	ip
  41eae0:	e28dd010 	add	sp, sp, #16
  41eae4:	e8bd4010 	pop	{r4, lr}
  41eae8:	e12fff1e 	bx	lr
  41eaec:	00022590 	.word	0x00022590
  41eaf0:	0000014c 	.word	0x0000014c

0041eaf4 <_ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii>:
  41eaf4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41eaf8:	e59d401c 	ldr	r4, [sp, #28]
  41eafc:	e59dc020 	ldr	ip, [sp, #32]
  41eb00:	e24cc106 	sub	ip, ip, #-2147483647	; 0x80000001
  41eb04:	e080008c 	add	r0, r0, ip, lsl #1
  41eb08:	e1a010a1 	lsr	r1, r1, #1
  41eb0c:	e1a030a3 	lsr	r3, r3, #1
  41eb10:	ea000023 	b	41eba4 <_ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii+0xb0>
  41eb14:	e1d070b0 	ldrh	r7, [r0]
  41eb18:	e1a0e084 	lsl	lr, r4, #1
  41eb1c:	e19060be 	ldrh	r6, [r0, lr]
  41eb20:	e1a0508c 	lsl	r5, ip, #1
  41eb24:	e18270b5 	strh	r7, [r2, r5]
  41eb28:	e082508c 	add	r5, r2, ip, lsl #1
  41eb2c:	e1c560b2 	strh	r6, [r5, #2]
  41eb30:	e1a05104 	lsl	r5, r4, #2
  41eb34:	e19060b5 	ldrh	r6, [r0, r5]
  41eb38:	e08ee004 	add	lr, lr, r4
  41eb3c:	e1a0e08e 	lsl	lr, lr, #1
  41eb40:	e19050be 	ldrh	r5, [r0, lr]
  41eb44:	e082e08c 	add	lr, r2, ip, lsl #1
  41eb48:	e1ce60b4 	strh	r6, [lr, #4]
  41eb4c:	e1ce50b6 	strh	r5, [lr, #6]
  41eb50:	e28cc004 	add	ip, ip, #4
  41eb54:	e0800184 	add	r0, r0, r4, lsl #3
  41eb58:	ea000000 	b	41eb60 <_ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii+0x6c>
  41eb5c:	e3a0c000 	mov	ip, #0
  41eb60:	e59de014 	ldr	lr, [sp, #20]
  41eb64:	e24e5004 	sub	r5, lr, #4
  41eb68:	e155000c 	cmp	r5, ip
  41eb6c:	aaffffe8 	bge	41eb14 <_ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii+0x20>
  41eb70:	ea000004 	b	41eb88 <_ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii+0x94>
  41eb74:	e1a0508c 	lsl	r5, ip, #1
  41eb78:	e1d060b0 	ldrh	r6, [r0]
  41eb7c:	e18260b5 	strh	r6, [r2, r5]
  41eb80:	e28cc001 	add	ip, ip, #1
  41eb84:	e0800084 	add	r0, r0, r4, lsl #1
  41eb88:	e15c000e 	cmp	ip, lr
  41eb8c:	bafffff8 	blt	41eb74 <_ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii+0x80>
  41eb90:	e00e0e94 	mul	lr, r4, lr
  41eb94:	e1a0c081 	lsl	ip, r1, #1
  41eb98:	e04ce08e 	sub	lr, ip, lr, lsl #1
  41eb9c:	e080000e 	add	r0, r0, lr
  41eba0:	e0822083 	add	r2, r2, r3, lsl #1
  41eba4:	e59dc018 	ldr	ip, [sp, #24]
  41eba8:	e24ce001 	sub	lr, ip, #1
  41ebac:	e58de018 	str	lr, [sp, #24]
  41ebb0:	e35c0000 	cmp	ip, #0
  41ebb4:	1affffe8 	bne	41eb5c <_ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii+0x68>
  41ebb8:	e3a00000 	mov	r0, #0
  41ebbc:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41ebc0:	e12fff1e 	bx	lr

0041ebc4 <_Z18icvCopy_32f_CnC1CRPKiiPii6CvSizeii>:
  41ebc4:	e92d4010 	push	{r4, lr}
  41ebc8:	e24dd010 	sub	sp, sp, #16
  41ebcc:	e1a04000 	mov	r4, r0
  41ebd0:	e1a0e001 	mov	lr, r1
  41ebd4:	e59f1044 	ldr	r1, [pc, #68]	; 41ec20 <_Z18icvCopy_32f_CnC1CRPKiiPii6CvSizeii+0x5c>
  41ebd8:	e08f1001 	add	r1, pc, r1
  41ebdc:	e59f0040 	ldr	r0, [pc, #64]	; 41ec24 <_Z18icvCopy_32f_CnC1CRPKiiPii6CvSizeii+0x60>
  41ebe0:	e791c000 	ldr	ip, [r1, r0]
  41ebe4:	e28d1014 	add	r1, sp, #20
  41ebe8:	e9910003 	ldmib	r1, {r0, r1}
  41ebec:	e88d0003 	stm	sp, {r0, r1}
  41ebf0:	e59d1020 	ldr	r1, [sp, #32]
  41ebf4:	e58d1008 	str	r1, [sp, #8]
  41ebf8:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41ebfc:	e58d100c 	str	r1, [sp, #12]
  41ec00:	e1a00004 	mov	r0, r4
  41ec04:	e1a0100e 	mov	r1, lr
  41ec08:	e59cc000 	ldr	ip, [ip]
  41ec0c:	e1a0e00f 	mov	lr, pc
  41ec10:	e12fff1c 	bx	ip
  41ec14:	e28dd010 	add	sp, sp, #16
  41ec18:	e8bd4010 	pop	{r4, lr}
  41ec1c:	e12fff1e 	bx	lr
  41ec20:	0002245c 	.word	0x0002245c
  41ec24:	00000140 	.word	0x00000140

0041ec28 <_ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii>:
  41ec28:	e92d4070 	push	{r4, r5, r6, lr}
  41ec2c:	e59de018 	ldr	lr, [sp, #24]
  41ec30:	e59dc01c 	ldr	ip, [sp, #28]
  41ec34:	e24cc107 	sub	ip, ip, #-1073741823	; 0xc0000001
  41ec38:	e080010c 	add	r0, r0, ip, lsl #2
  41ec3c:	e1a01121 	lsr	r1, r1, #2
  41ec40:	e1a03123 	lsr	r3, r3, #2
  41ec44:	ea000020 	b	41eccc <_ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii+0xa4>
  41ec48:	e5904000 	ldr	r4, [r0]
  41ec4c:	e790510e 	ldr	r5, [r0, lr, lsl #2]
  41ec50:	e782410c 	str	r4, [r2, ip, lsl #2]
  41ec54:	e28c4001 	add	r4, ip, #1
  41ec58:	e7825104 	str	r5, [r2, r4, lsl #2]
  41ec5c:	e790618e 	ldr	r6, [r0, lr, lsl #3]
  41ec60:	e08e408e 	add	r4, lr, lr, lsl #1
  41ec64:	e1a04104 	lsl	r4, r4, #2
  41ec68:	e7905004 	ldr	r5, [r0, r4]
  41ec6c:	e28c4002 	add	r4, ip, #2
  41ec70:	e7826104 	str	r6, [r2, r4, lsl #2]
  41ec74:	e28c4003 	add	r4, ip, #3
  41ec78:	e7825104 	str	r5, [r2, r4, lsl #2]
  41ec7c:	e28cc004 	add	ip, ip, #4
  41ec80:	e080020e 	add	r0, r0, lr, lsl #4
  41ec84:	ea000000 	b	41ec8c <_ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii+0x64>
  41ec88:	e3a0c000 	mov	ip, #0
  41ec8c:	e59d4010 	ldr	r4, [sp, #16]
  41ec90:	e2445004 	sub	r5, r4, #4
  41ec94:	e155000c 	cmp	r5, ip
  41ec98:	aaffffea 	bge	41ec48 <_ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii+0x20>
  41ec9c:	ea000003 	b	41ecb0 <_ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii+0x88>
  41eca0:	e5905000 	ldr	r5, [r0]
  41eca4:	e782510c 	str	r5, [r2, ip, lsl #2]
  41eca8:	e28cc001 	add	ip, ip, #1
  41ecac:	e080010e 	add	r0, r0, lr, lsl #2
  41ecb0:	e15c0004 	cmp	ip, r4
  41ecb4:	bafffff9 	blt	41eca0 <_ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii+0x78>
  41ecb8:	e004049e 	mul	r4, lr, r4
  41ecbc:	e1a0c101 	lsl	ip, r1, #2
  41ecc0:	e04c4104 	sub	r4, ip, r4, lsl #2
  41ecc4:	e0800004 	add	r0, r0, r4
  41ecc8:	e0822103 	add	r2, r2, r3, lsl #2
  41eccc:	e59dc014 	ldr	ip, [sp, #20]
  41ecd0:	e24c4001 	sub	r4, ip, #1
  41ecd4:	e58d4014 	str	r4, [sp, #20]
  41ecd8:	e35c0000 	cmp	ip, #0
  41ecdc:	1affffe9 	bne	41ec88 <_ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii+0x60>
  41ece0:	e3a00000 	mov	r0, #0
  41ece4:	e8bd4070 	pop	{r4, r5, r6, lr}
  41ece8:	e12fff1e 	bx	lr

0041ecec <_Z16icvCopy_8u_P2C2RPPKhiPhi6CvSize>:
  41ecec:	e92d4010 	push	{r4, lr}
  41ecf0:	e24dd008 	sub	sp, sp, #8
  41ecf4:	e1a04000 	mov	r4, r0
  41ecf8:	e1a0e001 	mov	lr, r1
  41ecfc:	e59f1034 	ldr	r1, [pc, #52]	; 41ed38 <_Z16icvCopy_8u_P2C2RPPKhiPhi6CvSize+0x4c>
  41ed00:	e08f1001 	add	r1, pc, r1
  41ed04:	e59f0030 	ldr	r0, [pc, #48]	; 41ed3c <_Z16icvCopy_8u_P2C2RPPKhiPhi6CvSize+0x50>
  41ed08:	e791c000 	ldr	ip, [r1, r0]
  41ed0c:	e28d100c 	add	r1, sp, #12
  41ed10:	e9910003 	ldmib	r1, {r0, r1}
  41ed14:	e88d0003 	stm	sp, {r0, r1}
  41ed18:	e1a00004 	mov	r0, r4
  41ed1c:	e1a0100e 	mov	r1, lr
  41ed20:	e59cc000 	ldr	ip, [ip]
  41ed24:	e1a0e00f 	mov	lr, pc
  41ed28:	e12fff1c 	bx	ip
  41ed2c:	e28dd008 	add	sp, sp, #8
  41ed30:	e8bd4010 	pop	{r4, lr}
  41ed34:	e12fff1e 	bx	lr
  41ed38:	00022334 	.word	0x00022334
  41ed3c:	00000120 	.word	0x00000120

0041ed40 <_ZL18icvCopy_8u_P2C2R_fPPKhiPhi6CvSize>:
  41ed40:	e92d4030 	push	{r4, r5, lr}
  41ed44:	e5905000 	ldr	r5, [r0]
  41ed48:	e5904004 	ldr	r4, [r0, #4]
  41ed4c:	ea00000e 	b	41ed8c <_ZL18icvCopy_8u_P2C2R_fPPKhiPhi6CvSize+0x4c>
  41ed50:	e7d5e000 	ldrb	lr, [r5, r0]
  41ed54:	e7d4c000 	ldrb	ip, [r4, r0]
  41ed58:	e5c2e000 	strb	lr, [r2]
  41ed5c:	e5c2c001 	strb	ip, [r2, #1]
  41ed60:	e2800001 	add	r0, r0, #1
  41ed64:	e2822002 	add	r2, r2, #2
  41ed68:	ea000000 	b	41ed70 <_ZL18icvCopy_8u_P2C2R_fPPKhiPhi6CvSize+0x30>
  41ed6c:	e3a00000 	mov	r0, #0
  41ed70:	e59dc00c 	ldr	ip, [sp, #12]
  41ed74:	e15c0000 	cmp	ip, r0
  41ed78:	cafffff4 	bgt	41ed50 <_ZL18icvCopy_8u_P2C2R_fPPKhiPhi6CvSize+0x10>
  41ed7c:	e0855001 	add	r5, r5, r1
  41ed80:	e0844001 	add	r4, r4, r1
  41ed84:	e043c08c 	sub	ip, r3, ip, lsl #1
  41ed88:	e082200c 	add	r2, r2, ip
  41ed8c:	e59d0010 	ldr	r0, [sp, #16]
  41ed90:	e240c001 	sub	ip, r0, #1
  41ed94:	e58dc010 	str	ip, [sp, #16]
  41ed98:	e3500000 	cmp	r0, #0
  41ed9c:	1afffff2 	bne	41ed6c <_ZL18icvCopy_8u_P2C2R_fPPKhiPhi6CvSize+0x2c>
  41eda0:	e8bd4030 	pop	{r4, r5, lr}
  41eda4:	e12fff1e 	bx	lr

0041eda8 <_Z16icvCopy_8u_P3C3RPPKhiPhi6CvSize>:
  41eda8:	e92d4010 	push	{r4, lr}
  41edac:	e24dd008 	sub	sp, sp, #8
  41edb0:	e1a04000 	mov	r4, r0
  41edb4:	e1a0e001 	mov	lr, r1
  41edb8:	e59f1034 	ldr	r1, [pc, #52]	; 41edf4 <_Z16icvCopy_8u_P3C3RPPKhiPhi6CvSize+0x4c>
  41edbc:	e08f1001 	add	r1, pc, r1
  41edc0:	e59f0030 	ldr	r0, [pc, #48]	; 41edf8 <_Z16icvCopy_8u_P3C3RPPKhiPhi6CvSize+0x50>
  41edc4:	e791c000 	ldr	ip, [r1, r0]
  41edc8:	e28d100c 	add	r1, sp, #12
  41edcc:	e9910003 	ldmib	r1, {r0, r1}
  41edd0:	e88d0003 	stm	sp, {r0, r1}
  41edd4:	e1a00004 	mov	r0, r4
  41edd8:	e1a0100e 	mov	r1, lr
  41eddc:	e59cc000 	ldr	ip, [ip]
  41ede0:	e1a0e00f 	mov	lr, pc
  41ede4:	e12fff1c 	bx	ip
  41ede8:	e28dd008 	add	sp, sp, #8
  41edec:	e8bd4010 	pop	{r4, lr}
  41edf0:	e12fff1e 	bx	lr
  41edf4:	00022278 	.word	0x00022278
  41edf8:	00000088 	.word	0x00000088

0041edfc <_ZL18icvCopy_8u_P3C3R_fPPKhiPhi6CvSize>:
  41edfc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41ee00:	e5907000 	ldr	r7, [r0]
  41ee04:	e5906004 	ldr	r6, [r0, #4]
  41ee08:	e5905008 	ldr	r5, [r0, #8]
  41ee0c:	ea000012 	b	41ee5c <_ZL18icvCopy_8u_P3C3R_fPPKhiPhi6CvSize+0x60>
  41ee10:	e7d74000 	ldrb	r4, [r7, r0]
  41ee14:	e7d6e000 	ldrb	lr, [r6, r0]
  41ee18:	e7d5c000 	ldrb	ip, [r5, r0]
  41ee1c:	e5c24000 	strb	r4, [r2]
  41ee20:	e5c2e001 	strb	lr, [r2, #1]
  41ee24:	e5c2c002 	strb	ip, [r2, #2]
  41ee28:	e2800001 	add	r0, r0, #1
  41ee2c:	e2822003 	add	r2, r2, #3
  41ee30:	ea000000 	b	41ee38 <_ZL18icvCopy_8u_P3C3R_fPPKhiPhi6CvSize+0x3c>
  41ee34:	e3a00000 	mov	r0, #0
  41ee38:	e59dc014 	ldr	ip, [sp, #20]
  41ee3c:	e15c0000 	cmp	ip, r0
  41ee40:	cafffff2 	bgt	41ee10 <_ZL18icvCopy_8u_P3C3R_fPPKhiPhi6CvSize+0x14>
  41ee44:	e0877001 	add	r7, r7, r1
  41ee48:	e0866001 	add	r6, r6, r1
  41ee4c:	e0855001 	add	r5, r5, r1
  41ee50:	e08cc08c 	add	ip, ip, ip, lsl #1
  41ee54:	e06cc003 	rsb	ip, ip, r3
  41ee58:	e082200c 	add	r2, r2, ip
  41ee5c:	e59d0018 	ldr	r0, [sp, #24]
  41ee60:	e240c001 	sub	ip, r0, #1
  41ee64:	e58dc018 	str	ip, [sp, #24]
  41ee68:	e3500000 	cmp	r0, #0
  41ee6c:	1afffff0 	bne	41ee34 <_ZL18icvCopy_8u_P3C3R_fPPKhiPhi6CvSize+0x38>
  41ee70:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41ee74:	e12fff1e 	bx	lr

0041ee78 <_Z16icvCopy_8u_P4C4RPPKhiPhi6CvSize>:
  41ee78:	e92d4010 	push	{r4, lr}
  41ee7c:	e24dd008 	sub	sp, sp, #8
  41ee80:	e1a04000 	mov	r4, r0
  41ee84:	e1a0e001 	mov	lr, r1
  41ee88:	e59f1034 	ldr	r1, [pc, #52]	; 41eec4 <_Z16icvCopy_8u_P4C4RPPKhiPhi6CvSize+0x4c>
  41ee8c:	e08f1001 	add	r1, pc, r1
  41ee90:	e59f0030 	ldr	r0, [pc, #48]	; 41eec8 <_Z16icvCopy_8u_P4C4RPPKhiPhi6CvSize+0x50>
  41ee94:	e791c000 	ldr	ip, [r1, r0]
  41ee98:	e28d100c 	add	r1, sp, #12
  41ee9c:	e9910003 	ldmib	r1, {r0, r1}
  41eea0:	e88d0003 	stm	sp, {r0, r1}
  41eea4:	e1a00004 	mov	r0, r4
  41eea8:	e1a0100e 	mov	r1, lr
  41eeac:	e59cc000 	ldr	ip, [ip]
  41eeb0:	e1a0e00f 	mov	lr, pc
  41eeb4:	e12fff1c 	bx	ip
  41eeb8:	e28dd008 	add	sp, sp, #8
  41eebc:	e8bd4010 	pop	{r4, lr}
  41eec0:	e12fff1e 	bx	lr
  41eec4:	000221a8 	.word	0x000221a8
  41eec8:	000000c8 	.word	0x000000c8

0041eecc <_ZL18icvCopy_8u_P4C4R_fPPKhiPhi6CvSize>:
  41eecc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41eed0:	e5907000 	ldr	r7, [r0]
  41eed4:	e5906004 	ldr	r6, [r0, #4]
  41eed8:	e5905008 	ldr	r5, [r0, #8]
  41eedc:	e590400c 	ldr	r4, [r0, #12]
  41eee0:	ea000014 	b	41ef38 <_ZL18icvCopy_8u_P4C4R_fPPKhiPhi6CvSize+0x6c>
  41eee4:	e7d7e000 	ldrb	lr, [r7, r0]
  41eee8:	e7d6c000 	ldrb	ip, [r6, r0]
  41eeec:	e5c2e000 	strb	lr, [r2]
  41eef0:	e5c2c001 	strb	ip, [r2, #1]
  41eef4:	e7d5e000 	ldrb	lr, [r5, r0]
  41eef8:	e7d4c000 	ldrb	ip, [r4, r0]
  41eefc:	e5c2e002 	strb	lr, [r2, #2]
  41ef00:	e5c2c003 	strb	ip, [r2, #3]
  41ef04:	e2800001 	add	r0, r0, #1
  41ef08:	e2822004 	add	r2, r2, #4
  41ef0c:	ea000000 	b	41ef14 <_ZL18icvCopy_8u_P4C4R_fPPKhiPhi6CvSize+0x48>
  41ef10:	e3a00000 	mov	r0, #0
  41ef14:	e59dc014 	ldr	ip, [sp, #20]
  41ef18:	e15c0000 	cmp	ip, r0
  41ef1c:	cafffff0 	bgt	41eee4 <_ZL18icvCopy_8u_P4C4R_fPPKhiPhi6CvSize+0x18>
  41ef20:	e0877001 	add	r7, r7, r1
  41ef24:	e0866001 	add	r6, r6, r1
  41ef28:	e0855001 	add	r5, r5, r1
  41ef2c:	e0844001 	add	r4, r4, r1
  41ef30:	e043c10c 	sub	ip, r3, ip, lsl #2
  41ef34:	e082200c 	add	r2, r2, ip
  41ef38:	e59d0018 	ldr	r0, [sp, #24]
  41ef3c:	e240c001 	sub	ip, r0, #1
  41ef40:	e58dc018 	str	ip, [sp, #24]
  41ef44:	e3500000 	cmp	r0, #0
  41ef48:	1afffff0 	bne	41ef10 <_ZL18icvCopy_8u_P4C4R_fPPKhiPhi6CvSize+0x44>
  41ef4c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41ef50:	e12fff1e 	bx	lr

0041ef54 <_Z17icvCopy_16s_P2C2RPPKtiPti6CvSize>:
  41ef54:	e92d4010 	push	{r4, lr}
  41ef58:	e24dd008 	sub	sp, sp, #8
  41ef5c:	e1a04000 	mov	r4, r0
  41ef60:	e1a0e001 	mov	lr, r1
  41ef64:	e59f1034 	ldr	r1, [pc, #52]	; 41efa0 <_Z17icvCopy_16s_P2C2RPPKtiPti6CvSize+0x4c>
  41ef68:	e08f1001 	add	r1, pc, r1
  41ef6c:	e59f0030 	ldr	r0, [pc, #48]	; 41efa4 <_Z17icvCopy_16s_P2C2RPPKtiPti6CvSize+0x50>
  41ef70:	e791c000 	ldr	ip, [r1, r0]
  41ef74:	e28d100c 	add	r1, sp, #12
  41ef78:	e9910003 	ldmib	r1, {r0, r1}
  41ef7c:	e88d0003 	stm	sp, {r0, r1}
  41ef80:	e1a00004 	mov	r0, r4
  41ef84:	e1a0100e 	mov	r1, lr
  41ef88:	e59cc000 	ldr	ip, [ip]
  41ef8c:	e1a0e00f 	mov	lr, pc
  41ef90:	e12fff1c 	bx	ip
  41ef94:	e28dd008 	add	sp, sp, #8
  41ef98:	e8bd4010 	pop	{r4, lr}
  41ef9c:	e12fff1e 	bx	lr
  41efa0:	000220cc 	.word	0x000220cc
  41efa4:	00000118 	.word	0x00000118

0041efa8 <_ZL19icvCopy_16s_P2C2R_fPPKtiPti6CvSize>:
  41efa8:	e92d4030 	push	{r4, r5, lr}
  41efac:	e5905000 	ldr	r5, [r0]
  41efb0:	e5904004 	ldr	r4, [r0, #4]
  41efb4:	e1a010a1 	lsr	r1, r1, #1
  41efb8:	e1a030a3 	lsr	r3, r3, #1
  41efbc:	ea000011 	b	41f008 <_ZL19icvCopy_16s_P2C2R_fPPKtiPti6CvSize+0x60>
  41efc0:	e1a0c080 	lsl	ip, r0, #1
  41efc4:	e195e0bc 	ldrh	lr, [r5, ip]
  41efc8:	e194c0bc 	ldrh	ip, [r4, ip]
  41efcc:	e1c2e0b0 	strh	lr, [r2]
  41efd0:	e1c2c0b2 	strh	ip, [r2, #2]
  41efd4:	e2800001 	add	r0, r0, #1
  41efd8:	e2822004 	add	r2, r2, #4
  41efdc:	ea000000 	b	41efe4 <_ZL19icvCopy_16s_P2C2R_fPPKtiPti6CvSize+0x3c>
  41efe0:	e3a00000 	mov	r0, #0
  41efe4:	e59dc00c 	ldr	ip, [sp, #12]
  41efe8:	e15c0000 	cmp	ip, r0
  41efec:	cafffff3 	bgt	41efc0 <_ZL19icvCopy_16s_P2C2R_fPPKtiPti6CvSize+0x18>
  41eff0:	e1a00081 	lsl	r0, r1, #1
  41eff4:	e0855000 	add	r5, r5, r0
  41eff8:	e0844000 	add	r4, r4, r0
  41effc:	e1a00083 	lsl	r0, r3, #1
  41f000:	e040c10c 	sub	ip, r0, ip, lsl #2
  41f004:	e082200c 	add	r2, r2, ip
  41f008:	e59d0010 	ldr	r0, [sp, #16]
  41f00c:	e240c001 	sub	ip, r0, #1
  41f010:	e58dc010 	str	ip, [sp, #16]
  41f014:	e3500000 	cmp	r0, #0
  41f018:	1afffff0 	bne	41efe0 <_ZL19icvCopy_16s_P2C2R_fPPKtiPti6CvSize+0x38>
  41f01c:	e8bd4030 	pop	{r4, r5, lr}
  41f020:	e12fff1e 	bx	lr

0041f024 <_Z17icvCopy_16s_P3C3RPPKtiPti6CvSize>:
  41f024:	e92d4010 	push	{r4, lr}
  41f028:	e24dd008 	sub	sp, sp, #8
  41f02c:	e1a04000 	mov	r4, r0
  41f030:	e1a0e001 	mov	lr, r1
  41f034:	e59f1034 	ldr	r1, [pc, #52]	; 41f070 <_Z17icvCopy_16s_P3C3RPPKtiPti6CvSize+0x4c>
  41f038:	e08f1001 	add	r1, pc, r1
  41f03c:	e59f0030 	ldr	r0, [pc, #48]	; 41f074 <_Z17icvCopy_16s_P3C3RPPKtiPti6CvSize+0x50>
  41f040:	e791c000 	ldr	ip, [r1, r0]
  41f044:	e28d100c 	add	r1, sp, #12
  41f048:	e9910003 	ldmib	r1, {r0, r1}
  41f04c:	e88d0003 	stm	sp, {r0, r1}
  41f050:	e1a00004 	mov	r0, r4
  41f054:	e1a0100e 	mov	r1, lr
  41f058:	e59cc000 	ldr	ip, [ip]
  41f05c:	e1a0e00f 	mov	lr, pc
  41f060:	e12fff1c 	bx	ip
  41f064:	e28dd008 	add	sp, sp, #8
  41f068:	e8bd4010 	pop	{r4, lr}
  41f06c:	e12fff1e 	bx	lr
  41f070:	00021ffc 	.word	0x00021ffc
  41f074:	000000b4 	.word	0x000000b4

0041f078 <_ZL19icvCopy_16s_P3C3R_fPPKtiPti6CvSize>:
  41f078:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41f07c:	e5907000 	ldr	r7, [r0]
  41f080:	e5906004 	ldr	r6, [r0, #4]
  41f084:	e5905008 	ldr	r5, [r0, #8]
  41f088:	e1a010a1 	lsr	r1, r1, #1
  41f08c:	e1a030a3 	lsr	r3, r3, #1
  41f090:	ea000015 	b	41f0ec <_ZL19icvCopy_16s_P3C3R_fPPKtiPti6CvSize+0x74>
  41f094:	e1a0c080 	lsl	ip, r0, #1
  41f098:	e19740bc 	ldrh	r4, [r7, ip]
  41f09c:	e196e0bc 	ldrh	lr, [r6, ip]
  41f0a0:	e195c0bc 	ldrh	ip, [r5, ip]
  41f0a4:	e1c240b0 	strh	r4, [r2]
  41f0a8:	e1c2e0b2 	strh	lr, [r2, #2]
  41f0ac:	e1c2c0b4 	strh	ip, [r2, #4]
  41f0b0:	e2800001 	add	r0, r0, #1
  41f0b4:	e2822006 	add	r2, r2, #6
  41f0b8:	ea000000 	b	41f0c0 <_ZL19icvCopy_16s_P3C3R_fPPKtiPti6CvSize+0x48>
  41f0bc:	e3a00000 	mov	r0, #0
  41f0c0:	e59dc014 	ldr	ip, [sp, #20]
  41f0c4:	e15c0000 	cmp	ip, r0
  41f0c8:	cafffff1 	bgt	41f094 <_ZL19icvCopy_16s_P3C3R_fPPKtiPti6CvSize+0x1c>
  41f0cc:	e1a00081 	lsl	r0, r1, #1
  41f0d0:	e0877000 	add	r7, r7, r0
  41f0d4:	e0866000 	add	r6, r6, r0
  41f0d8:	e0855000 	add	r5, r5, r0
  41f0dc:	e08cc08c 	add	ip, ip, ip, lsl #1
  41f0e0:	e1a0c08c 	lsl	ip, ip, #1
  41f0e4:	e06cc083 	rsb	ip, ip, r3, lsl #1
  41f0e8:	e082200c 	add	r2, r2, ip
  41f0ec:	e59d0018 	ldr	r0, [sp, #24]
  41f0f0:	e240c001 	sub	ip, r0, #1
  41f0f4:	e58dc018 	str	ip, [sp, #24]
  41f0f8:	e3500000 	cmp	r0, #0
  41f0fc:	1affffee 	bne	41f0bc <_ZL19icvCopy_16s_P3C3R_fPPKtiPti6CvSize+0x44>
  41f100:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41f104:	e12fff1e 	bx	lr

0041f108 <_Z17icvCopy_16s_P4C4RPPKtiPti6CvSize>:
  41f108:	e92d4010 	push	{r4, lr}
  41f10c:	e24dd008 	sub	sp, sp, #8
  41f110:	e1a04000 	mov	r4, r0
  41f114:	e1a0e001 	mov	lr, r1
  41f118:	e59f1034 	ldr	r1, [pc, #52]	; 41f154 <_Z17icvCopy_16s_P4C4RPPKtiPti6CvSize+0x4c>
  41f11c:	e08f1001 	add	r1, pc, r1
  41f120:	e59f0030 	ldr	r0, [pc, #48]	; 41f158 <_Z17icvCopy_16s_P4C4RPPKtiPti6CvSize+0x50>
  41f124:	e791c000 	ldr	ip, [r1, r0]
  41f128:	e28d100c 	add	r1, sp, #12
  41f12c:	e9910003 	ldmib	r1, {r0, r1}
  41f130:	e88d0003 	stm	sp, {r0, r1}
  41f134:	e1a00004 	mov	r0, r4
  41f138:	e1a0100e 	mov	r1, lr
  41f13c:	e59cc000 	ldr	ip, [ip]
  41f140:	e1a0e00f 	mov	lr, pc
  41f144:	e12fff1c 	bx	ip
  41f148:	e28dd008 	add	sp, sp, #8
  41f14c:	e8bd4010 	pop	{r4, lr}
  41f150:	e12fff1e 	bx	lr
  41f154:	00021f18 	.word	0x00021f18
  41f158:	00000138 	.word	0x00000138

0041f15c <_ZL19icvCopy_16s_P4C4R_fPPKtiPti6CvSize>:
  41f15c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  41f160:	e5908000 	ldr	r8, [r0]
  41f164:	e5907004 	ldr	r7, [r0, #4]
  41f168:	e5906008 	ldr	r6, [r0, #8]
  41f16c:	e590500c 	ldr	r5, [r0, #12]
  41f170:	e1a010a1 	lsr	r1, r1, #1
  41f174:	e1a030a3 	lsr	r3, r3, #1
  41f178:	ea000017 	b	41f1dc <_ZL19icvCopy_16s_P4C4R_fPPKtiPti6CvSize+0x80>
  41f17c:	e1a0008c 	lsl	r0, ip, #1
  41f180:	e19840b0 	ldrh	r4, [r8, r0]
  41f184:	e197e0b0 	ldrh	lr, [r7, r0]
  41f188:	e1c240b0 	strh	r4, [r2]
  41f18c:	e1c2e0b2 	strh	lr, [r2, #2]
  41f190:	e196e0b0 	ldrh	lr, [r6, r0]
  41f194:	e19500b0 	ldrh	r0, [r5, r0]
  41f198:	e1c2e0b4 	strh	lr, [r2, #4]
  41f19c:	e1c200b6 	strh	r0, [r2, #6]
  41f1a0:	e28cc001 	add	ip, ip, #1
  41f1a4:	e2822008 	add	r2, r2, #8
  41f1a8:	ea000000 	b	41f1b0 <_ZL19icvCopy_16s_P4C4R_fPPKtiPti6CvSize+0x54>
  41f1ac:	e3a0c000 	mov	ip, #0
  41f1b0:	e59d0018 	ldr	r0, [sp, #24]
  41f1b4:	e150000c 	cmp	r0, ip
  41f1b8:	caffffef 	bgt	41f17c <_ZL19icvCopy_16s_P4C4R_fPPKtiPti6CvSize+0x20>
  41f1bc:	e1a0c081 	lsl	ip, r1, #1
  41f1c0:	e088800c 	add	r8, r8, ip
  41f1c4:	e087700c 	add	r7, r7, ip
  41f1c8:	e086600c 	add	r6, r6, ip
  41f1cc:	e085500c 	add	r5, r5, ip
  41f1d0:	e1a0c083 	lsl	ip, r3, #1
  41f1d4:	e04c0180 	sub	r0, ip, r0, lsl #3
  41f1d8:	e0822000 	add	r2, r2, r0
  41f1dc:	e59d001c 	ldr	r0, [sp, #28]
  41f1e0:	e240c001 	sub	ip, r0, #1
  41f1e4:	e58dc01c 	str	ip, [sp, #28]
  41f1e8:	e3500000 	cmp	r0, #0
  41f1ec:	1affffee 	bne	41f1ac <_ZL19icvCopy_16s_P4C4R_fPPKtiPti6CvSize+0x50>
  41f1f0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  41f1f4:	e12fff1e 	bx	lr

0041f1f8 <_Z17icvCopy_32f_P2C2RPPKiiPii6CvSize>:
  41f1f8:	e92d4010 	push	{r4, lr}
  41f1fc:	e24dd008 	sub	sp, sp, #8
  41f200:	e1a04000 	mov	r4, r0
  41f204:	e1a0e001 	mov	lr, r1
  41f208:	e59f1034 	ldr	r1, [pc, #52]	; 41f244 <_Z17icvCopy_32f_P2C2RPPKiiPii6CvSize+0x4c>
  41f20c:	e08f1001 	add	r1, pc, r1
  41f210:	e59f0030 	ldr	r0, [pc, #48]	; 41f248 <_Z17icvCopy_32f_P2C2RPPKiiPii6CvSize+0x50>
  41f214:	e791c000 	ldr	ip, [r1, r0]
  41f218:	e28d100c 	add	r1, sp, #12
  41f21c:	e9910003 	ldmib	r1, {r0, r1}
  41f220:	e88d0003 	stm	sp, {r0, r1}
  41f224:	e1a00004 	mov	r0, r4
  41f228:	e1a0100e 	mov	r1, lr
  41f22c:	e59cc000 	ldr	ip, [ip]
  41f230:	e1a0e00f 	mov	lr, pc
  41f234:	e12fff1c 	bx	ip
  41f238:	e28dd008 	add	sp, sp, #8
  41f23c:	e8bd4010 	pop	{r4, lr}
  41f240:	e12fff1e 	bx	lr
  41f244:	00021e28 	.word	0x00021e28
  41f248:	00000078 	.word	0x00000078

0041f24c <_ZL19icvCopy_32f_P2C2R_fPPKiiPii6CvSize>:
  41f24c:	e92d4030 	push	{r4, r5, lr}
  41f250:	e5905000 	ldr	r5, [r0]
  41f254:	e5904004 	ldr	r4, [r0, #4]
  41f258:	e1a01121 	lsr	r1, r1, #2
  41f25c:	e1a03123 	lsr	r3, r3, #2
  41f260:	ea000010 	b	41f2a8 <_ZL19icvCopy_32f_P2C2R_fPPKiiPii6CvSize+0x5c>
  41f264:	e795e100 	ldr	lr, [r5, r0, lsl #2]
  41f268:	e794c100 	ldr	ip, [r4, r0, lsl #2]
  41f26c:	e582e000 	str	lr, [r2]
  41f270:	e582c004 	str	ip, [r2, #4]
  41f274:	e2800001 	add	r0, r0, #1
  41f278:	e2822008 	add	r2, r2, #8
  41f27c:	ea000000 	b	41f284 <_ZL19icvCopy_32f_P2C2R_fPPKiiPii6CvSize+0x38>
  41f280:	e3a00000 	mov	r0, #0
  41f284:	e59dc00c 	ldr	ip, [sp, #12]
  41f288:	e15c0000 	cmp	ip, r0
  41f28c:	cafffff4 	bgt	41f264 <_ZL19icvCopy_32f_P2C2R_fPPKiiPii6CvSize+0x18>
  41f290:	e1a00101 	lsl	r0, r1, #2
  41f294:	e0855000 	add	r5, r5, r0
  41f298:	e0844000 	add	r4, r4, r0
  41f29c:	e1a00103 	lsl	r0, r3, #2
  41f2a0:	e040c18c 	sub	ip, r0, ip, lsl #3
  41f2a4:	e082200c 	add	r2, r2, ip
  41f2a8:	e59d0010 	ldr	r0, [sp, #16]
  41f2ac:	e240c001 	sub	ip, r0, #1
  41f2b0:	e58dc010 	str	ip, [sp, #16]
  41f2b4:	e3500000 	cmp	r0, #0
  41f2b8:	1afffff0 	bne	41f280 <_ZL19icvCopy_32f_P2C2R_fPPKiiPii6CvSize+0x34>
  41f2bc:	e8bd4030 	pop	{r4, r5, lr}
  41f2c0:	e12fff1e 	bx	lr

0041f2c4 <_Z17icvCopy_32f_P3C3RPPKiiPii6CvSize>:
  41f2c4:	e92d4010 	push	{r4, lr}
  41f2c8:	e24dd008 	sub	sp, sp, #8
  41f2cc:	e1a04000 	mov	r4, r0
  41f2d0:	e1a0e001 	mov	lr, r1
  41f2d4:	e59f1034 	ldr	r1, [pc, #52]	; 41f310 <_Z17icvCopy_32f_P3C3RPPKiiPii6CvSize+0x4c>
  41f2d8:	e08f1001 	add	r1, pc, r1
  41f2dc:	e59f0030 	ldr	r0, [pc, #48]	; 41f314 <_Z17icvCopy_32f_P3C3RPPKiiPii6CvSize+0x50>
  41f2e0:	e791c000 	ldr	ip, [r1, r0]
  41f2e4:	e28d100c 	add	r1, sp, #12
  41f2e8:	e9910003 	ldmib	r1, {r0, r1}
  41f2ec:	e88d0003 	stm	sp, {r0, r1}
  41f2f0:	e1a00004 	mov	r0, r4
  41f2f4:	e1a0100e 	mov	r1, lr
  41f2f8:	e59cc000 	ldr	ip, [ip]
  41f2fc:	e1a0e00f 	mov	lr, pc
  41f300:	e12fff1c 	bx	ip
  41f304:	e28dd008 	add	sp, sp, #8
  41f308:	e8bd4010 	pop	{r4, lr}
  41f30c:	e12fff1e 	bx	lr
  41f310:	00021d5c 	.word	0x00021d5c
  41f314:	00000018 	.word	0x00000018

0041f318 <_ZL19icvCopy_32f_P3C3R_fPPKiiPii6CvSize>:
  41f318:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41f31c:	e5907000 	ldr	r7, [r0]
  41f320:	e5906004 	ldr	r6, [r0, #4]
  41f324:	e5905008 	ldr	r5, [r0, #8]
  41f328:	e1a01121 	lsr	r1, r1, #2
  41f32c:	e1a03123 	lsr	r3, r3, #2
  41f330:	ea000014 	b	41f388 <_ZL19icvCopy_32f_P3C3R_fPPKiiPii6CvSize+0x70>
  41f334:	e7974100 	ldr	r4, [r7, r0, lsl #2]
  41f338:	e796e100 	ldr	lr, [r6, r0, lsl #2]
  41f33c:	e795c100 	ldr	ip, [r5, r0, lsl #2]
  41f340:	e5824000 	str	r4, [r2]
  41f344:	e582e004 	str	lr, [r2, #4]
  41f348:	e582c008 	str	ip, [r2, #8]
  41f34c:	e2800001 	add	r0, r0, #1
  41f350:	e282200c 	add	r2, r2, #12
  41f354:	ea000000 	b	41f35c <_ZL19icvCopy_32f_P3C3R_fPPKiiPii6CvSize+0x44>
  41f358:	e3a00000 	mov	r0, #0
  41f35c:	e59dc014 	ldr	ip, [sp, #20]
  41f360:	e15c0000 	cmp	ip, r0
  41f364:	cafffff2 	bgt	41f334 <_ZL19icvCopy_32f_P3C3R_fPPKiiPii6CvSize+0x1c>
  41f368:	e1a00101 	lsl	r0, r1, #2
  41f36c:	e0877000 	add	r7, r7, r0
  41f370:	e0866000 	add	r6, r6, r0
  41f374:	e0855000 	add	r5, r5, r0
  41f378:	e08cc08c 	add	ip, ip, ip, lsl #1
  41f37c:	e1a0c10c 	lsl	ip, ip, #2
  41f380:	e06cc103 	rsb	ip, ip, r3, lsl #2
  41f384:	e082200c 	add	r2, r2, ip
  41f388:	e59d0018 	ldr	r0, [sp, #24]
  41f38c:	e240c001 	sub	ip, r0, #1
  41f390:	e58dc018 	str	ip, [sp, #24]
  41f394:	e3500000 	cmp	r0, #0
  41f398:	1affffee 	bne	41f358 <_ZL19icvCopy_32f_P3C3R_fPPKiiPii6CvSize+0x40>
  41f39c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41f3a0:	e12fff1e 	bx	lr

0041f3a4 <_Z17icvCopy_32f_P4C4RPPKiiPii6CvSize>:
  41f3a4:	e92d4010 	push	{r4, lr}
  41f3a8:	e24dd008 	sub	sp, sp, #8
  41f3ac:	e1a04000 	mov	r4, r0
  41f3b0:	e1a0e001 	mov	lr, r1
  41f3b4:	e59f1034 	ldr	r1, [pc, #52]	; 41f3f0 <_Z17icvCopy_32f_P4C4RPPKiiPii6CvSize+0x4c>
  41f3b8:	e08f1001 	add	r1, pc, r1
  41f3bc:	e59f0030 	ldr	r0, [pc, #48]	; 41f3f4 <_Z17icvCopy_32f_P4C4RPPKiiPii6CvSize+0x50>
  41f3c0:	e791c000 	ldr	ip, [r1, r0]
  41f3c4:	e28d100c 	add	r1, sp, #12
  41f3c8:	e9910003 	ldmib	r1, {r0, r1}
  41f3cc:	e88d0003 	stm	sp, {r0, r1}
  41f3d0:	e1a00004 	mov	r0, r4
  41f3d4:	e1a0100e 	mov	r1, lr
  41f3d8:	e59cc000 	ldr	ip, [ip]
  41f3dc:	e1a0e00f 	mov	lr, pc
  41f3e0:	e12fff1c 	bx	ip
  41f3e4:	e28dd008 	add	sp, sp, #8
  41f3e8:	e8bd4010 	pop	{r4, lr}
  41f3ec:	e12fff1e 	bx	lr
  41f3f0:	00021c7c 	.word	0x00021c7c
  41f3f4:	00000148 	.word	0x00000148

0041f3f8 <_ZL19icvCopy_32f_P4C4R_fPPKiiPii6CvSize>:
  41f3f8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41f3fc:	e5907000 	ldr	r7, [r0]
  41f400:	e5906004 	ldr	r6, [r0, #4]
  41f404:	e5905008 	ldr	r5, [r0, #8]
  41f408:	e590400c 	ldr	r4, [r0, #12]
  41f40c:	e1a01121 	lsr	r1, r1, #2
  41f410:	e1a03123 	lsr	r3, r3, #2
  41f414:	ea000016 	b	41f474 <_ZL19icvCopy_32f_P4C4R_fPPKiiPii6CvSize+0x7c>
  41f418:	e797e100 	ldr	lr, [r7, r0, lsl #2]
  41f41c:	e796c100 	ldr	ip, [r6, r0, lsl #2]
  41f420:	e582e000 	str	lr, [r2]
  41f424:	e582c004 	str	ip, [r2, #4]
  41f428:	e795e100 	ldr	lr, [r5, r0, lsl #2]
  41f42c:	e794c100 	ldr	ip, [r4, r0, lsl #2]
  41f430:	e582e008 	str	lr, [r2, #8]
  41f434:	e582c00c 	str	ip, [r2, #12]
  41f438:	e2800001 	add	r0, r0, #1
  41f43c:	e2822010 	add	r2, r2, #16
  41f440:	ea000000 	b	41f448 <_ZL19icvCopy_32f_P4C4R_fPPKiiPii6CvSize+0x50>
  41f444:	e3a00000 	mov	r0, #0
  41f448:	e59dc014 	ldr	ip, [sp, #20]
  41f44c:	e15c0000 	cmp	ip, r0
  41f450:	cafffff0 	bgt	41f418 <_ZL19icvCopy_32f_P4C4R_fPPKiiPii6CvSize+0x20>
  41f454:	e1a00101 	lsl	r0, r1, #2
  41f458:	e0877000 	add	r7, r7, r0
  41f45c:	e0866000 	add	r6, r6, r0
  41f460:	e0855000 	add	r5, r5, r0
  41f464:	e0844000 	add	r4, r4, r0
  41f468:	e1a00103 	lsl	r0, r3, #2
  41f46c:	e040c20c 	sub	ip, r0, ip, lsl #4
  41f470:	e082200c 	add	r2, r2, ip
  41f474:	e59d0018 	ldr	r0, [sp, #24]
  41f478:	e240c001 	sub	ip, r0, #1
  41f47c:	e58dc018 	str	ip, [sp, #24]
  41f480:	e3500000 	cmp	r0, #0
  41f484:	1affffee 	bne	41f444 <_ZL19icvCopy_32f_P4C4R_fPPKiiPii6CvSize+0x4c>
  41f488:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41f48c:	e12fff1e 	bx	lr

0041f490 <_Z17icvCopy_8u_C1CnCRPKhiPhi6CvSizeii>:
  41f490:	e92d4010 	push	{r4, lr}
  41f494:	e24dd010 	sub	sp, sp, #16
  41f498:	e1a04000 	mov	r4, r0
  41f49c:	e1a0e001 	mov	lr, r1
  41f4a0:	e59f1044 	ldr	r1, [pc, #68]	; 41f4ec <_Z17icvCopy_8u_C1CnCRPKhiPhi6CvSizeii+0x5c>
  41f4a4:	e08f1001 	add	r1, pc, r1
  41f4a8:	e59f0040 	ldr	r0, [pc, #64]	; 41f4f0 <_Z17icvCopy_8u_C1CnCRPKhiPhi6CvSizeii+0x60>
  41f4ac:	e791c000 	ldr	ip, [r1, r0]
  41f4b0:	e28d1014 	add	r1, sp, #20
  41f4b4:	e9910003 	ldmib	r1, {r0, r1}
  41f4b8:	e88d0003 	stm	sp, {r0, r1}
  41f4bc:	e59d1020 	ldr	r1, [sp, #32]
  41f4c0:	e58d1008 	str	r1, [sp, #8]
  41f4c4:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41f4c8:	e58d100c 	str	r1, [sp, #12]
  41f4cc:	e1a00004 	mov	r0, r4
  41f4d0:	e1a0100e 	mov	r1, lr
  41f4d4:	e59cc000 	ldr	ip, [ip]
  41f4d8:	e1a0e00f 	mov	lr, pc
  41f4dc:	e12fff1c 	bx	ip
  41f4e0:	e28dd010 	add	sp, sp, #16
  41f4e4:	e8bd4010 	pop	{r4, lr}
  41f4e8:	e12fff1e 	bx	lr
  41f4ec:	00021b90 	.word	0x00021b90
  41f4f0:	00000070 	.word	0x00000070

0041f4f4 <_ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii>:
  41f4f4:	e92d4030 	push	{r4, r5, lr}
  41f4f8:	e59de014 	ldr	lr, [sp, #20]
  41f4fc:	e59dc018 	ldr	ip, [sp, #24]
  41f500:	e24cc001 	sub	ip, ip, #1
  41f504:	e082200c 	add	r2, r2, ip
  41f508:	ea00001d 	b	41f584 <_ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii+0x90>
  41f50c:	e1a04000 	mov	r4, r0
  41f510:	e7f4500c 	ldrb	r5, [r4, ip]!
  41f514:	e5d44001 	ldrb	r4, [r4, #1]
  41f518:	e5c25000 	strb	r5, [r2]
  41f51c:	e7c2400e 	strb	r4, [r2, lr]
  41f520:	e28c4002 	add	r4, ip, #2
  41f524:	e7d04004 	ldrb	r4, [r0, r4]
  41f528:	e28c5003 	add	r5, ip, #3
  41f52c:	e7d05005 	ldrb	r5, [r0, r5]
  41f530:	e7c2408e 	strb	r4, [r2, lr, lsl #1]
  41f534:	e08e408e 	add	r4, lr, lr, lsl #1
  41f538:	e7c25004 	strb	r5, [r2, r4]
  41f53c:	e28cc004 	add	ip, ip, #4
  41f540:	e082210e 	add	r2, r2, lr, lsl #2
  41f544:	ea000000 	b	41f54c <_ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii+0x58>
  41f548:	e3a0c000 	mov	ip, #0
  41f54c:	e59d400c 	ldr	r4, [sp, #12]
  41f550:	e2445004 	sub	r5, r4, #4
  41f554:	e155000c 	cmp	r5, ip
  41f558:	aaffffeb 	bge	41f50c <_ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii+0x18>
  41f55c:	ea000002 	b	41f56c <_ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii+0x78>
  41f560:	e7d0500c 	ldrb	r5, [r0, ip]
  41f564:	e6c2500e 	strb	r5, [r2], lr
  41f568:	e28cc001 	add	ip, ip, #1
  41f56c:	e15c0004 	cmp	ip, r4
  41f570:	bafffffa 	blt	41f560 <_ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii+0x6c>
  41f574:	e004049e 	mul	r4, lr, r4
  41f578:	e0800001 	add	r0, r0, r1
  41f57c:	e0644003 	rsb	r4, r4, r3
  41f580:	e0822004 	add	r2, r2, r4
  41f584:	e59dc010 	ldr	ip, [sp, #16]
  41f588:	e24c4001 	sub	r4, ip, #1
  41f58c:	e58d4010 	str	r4, [sp, #16]
  41f590:	e35c0000 	cmp	ip, #0
  41f594:	1affffeb 	bne	41f548 <_ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii+0x54>
  41f598:	e3a00000 	mov	r0, #0
  41f59c:	e8bd4030 	pop	{r4, r5, lr}
  41f5a0:	e12fff1e 	bx	lr

0041f5a4 <_Z18icvCopy_16s_C1CnCRPKtiPti6CvSizeii>:
  41f5a4:	e92d4010 	push	{r4, lr}
  41f5a8:	e24dd010 	sub	sp, sp, #16
  41f5ac:	e1a04000 	mov	r4, r0
  41f5b0:	e1a0e001 	mov	lr, r1
  41f5b4:	e59f1044 	ldr	r1, [pc, #68]	; 41f600 <_Z18icvCopy_16s_C1CnCRPKtiPti6CvSizeii+0x5c>
  41f5b8:	e08f1001 	add	r1, pc, r1
  41f5bc:	e59f0040 	ldr	r0, [pc, #64]	; 41f604 <_Z18icvCopy_16s_C1CnCRPKtiPti6CvSizeii+0x60>
  41f5c0:	e791c000 	ldr	ip, [r1, r0]
  41f5c4:	e28d1014 	add	r1, sp, #20
  41f5c8:	e9910003 	ldmib	r1, {r0, r1}
  41f5cc:	e88d0003 	stm	sp, {r0, r1}
  41f5d0:	e59d1020 	ldr	r1, [sp, #32]
  41f5d4:	e58d1008 	str	r1, [sp, #8]
  41f5d8:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41f5dc:	e58d100c 	str	r1, [sp, #12]
  41f5e0:	e1a00004 	mov	r0, r4
  41f5e4:	e1a0100e 	mov	r1, lr
  41f5e8:	e59cc000 	ldr	ip, [ip]
  41f5ec:	e1a0e00f 	mov	lr, pc
  41f5f0:	e12fff1c 	bx	ip
  41f5f4:	e28dd010 	add	sp, sp, #16
  41f5f8:	e8bd4010 	pop	{r4, lr}
  41f5fc:	e12fff1e 	bx	lr
  41f600:	00021a7c 	.word	0x00021a7c
  41f604:	000000e8 	.word	0x000000e8

0041f608 <_ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii>:
  41f608:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  41f60c:	e59d401c 	ldr	r4, [sp, #28]
  41f610:	e59dc020 	ldr	ip, [sp, #32]
  41f614:	e24cc106 	sub	ip, ip, #-2147483647	; 0x80000001
  41f618:	e082208c 	add	r2, r2, ip, lsl #1
  41f61c:	e1a010a1 	lsr	r1, r1, #1
  41f620:	e1a030a3 	lsr	r3, r3, #1
  41f624:	ea000023 	b	41f6b8 <_ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii+0xb0>
  41f628:	e1a0e08c 	lsl	lr, ip, #1
  41f62c:	e190e0be 	ldrh	lr, [r0, lr]
  41f630:	e080508c 	add	r5, r0, ip, lsl #1
  41f634:	e1d550b2 	ldrh	r5, [r5, #2]
  41f638:	e1c2e0b0 	strh	lr, [r2]
  41f63c:	e1a0e084 	lsl	lr, r4, #1
  41f640:	e18250be 	strh	r5, [r2, lr]
  41f644:	e080508c 	add	r5, r0, ip, lsl #1
  41f648:	e1d570b4 	ldrh	r7, [r5, #4]
  41f64c:	e1d550b6 	ldrh	r5, [r5, #6]
  41f650:	e1a06104 	lsl	r6, r4, #2
  41f654:	e18270b6 	strh	r7, [r2, r6]
  41f658:	e08ee004 	add	lr, lr, r4
  41f65c:	e1a0e08e 	lsl	lr, lr, #1
  41f660:	e18250be 	strh	r5, [r2, lr]
  41f664:	e28cc004 	add	ip, ip, #4
  41f668:	e0822184 	add	r2, r2, r4, lsl #3
  41f66c:	ea000000 	b	41f674 <_ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii+0x6c>
  41f670:	e3a0c000 	mov	ip, #0
  41f674:	e59de014 	ldr	lr, [sp, #20]
  41f678:	e24e5004 	sub	r5, lr, #4
  41f67c:	e155000c 	cmp	r5, ip
  41f680:	aaffffe8 	bge	41f628 <_ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii+0x20>
  41f684:	ea000004 	b	41f69c <_ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii+0x94>
  41f688:	e1a0508c 	lsl	r5, ip, #1
  41f68c:	e19050b5 	ldrh	r5, [r0, r5]
  41f690:	e1c250b0 	strh	r5, [r2]
  41f694:	e28cc001 	add	ip, ip, #1
  41f698:	e0822084 	add	r2, r2, r4, lsl #1
  41f69c:	e15c000e 	cmp	ip, lr
  41f6a0:	bafffff8 	blt	41f688 <_ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii+0x80>
  41f6a4:	e00e0e94 	mul	lr, r4, lr
  41f6a8:	e0800081 	add	r0, r0, r1, lsl #1
  41f6ac:	e1a0c083 	lsl	ip, r3, #1
  41f6b0:	e04ce08e 	sub	lr, ip, lr, lsl #1
  41f6b4:	e082200e 	add	r2, r2, lr
  41f6b8:	e59dc018 	ldr	ip, [sp, #24]
  41f6bc:	e24ce001 	sub	lr, ip, #1
  41f6c0:	e58de018 	str	lr, [sp, #24]
  41f6c4:	e35c0000 	cmp	ip, #0
  41f6c8:	1affffe8 	bne	41f670 <_ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii+0x68>
  41f6cc:	e3a00000 	mov	r0, #0
  41f6d0:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  41f6d4:	e12fff1e 	bx	lr

0041f6d8 <_Z18icvCopy_32f_C1CnCRPKiiPii6CvSizeii>:
  41f6d8:	e92d4010 	push	{r4, lr}
  41f6dc:	e24dd010 	sub	sp, sp, #16
  41f6e0:	e1a04000 	mov	r4, r0
  41f6e4:	e1a0e001 	mov	lr, r1
  41f6e8:	e59f1044 	ldr	r1, [pc, #68]	; 41f734 <_Z18icvCopy_32f_C1CnCRPKiiPii6CvSizeii+0x5c>
  41f6ec:	e08f1001 	add	r1, pc, r1
  41f6f0:	e59f0040 	ldr	r0, [pc, #64]	; 41f738 <_Z18icvCopy_32f_C1CnCRPKiiPii6CvSizeii+0x60>
  41f6f4:	e791c000 	ldr	ip, [r1, r0]
  41f6f8:	e28d1014 	add	r1, sp, #20
  41f6fc:	e9910003 	ldmib	r1, {r0, r1}
  41f700:	e88d0003 	stm	sp, {r0, r1}
  41f704:	e59d1020 	ldr	r1, [sp, #32]
  41f708:	e58d1008 	str	r1, [sp, #8]
  41f70c:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  41f710:	e58d100c 	str	r1, [sp, #12]
  41f714:	e1a00004 	mov	r0, r4
  41f718:	e1a0100e 	mov	r1, lr
  41f71c:	e59cc000 	ldr	ip, [ip]
  41f720:	e1a0e00f 	mov	lr, pc
  41f724:	e12fff1c 	bx	ip
  41f728:	e28dd010 	add	sp, sp, #16
  41f72c:	e8bd4010 	pop	{r4, lr}
  41f730:	e12fff1e 	bx	lr
  41f734:	00021948 	.word	0x00021948
  41f738:	00000054 	.word	0x00000054

0041f73c <_ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii>:
  41f73c:	e92d4030 	push	{r4, r5, lr}
  41f740:	e59de014 	ldr	lr, [sp, #20]
  41f744:	e59dc018 	ldr	ip, [sp, #24]
  41f748:	e24cc107 	sub	ip, ip, #-1073741823	; 0xc0000001
  41f74c:	e082210c 	add	r2, r2, ip, lsl #2
  41f750:	e1a01121 	lsr	r1, r1, #2
  41f754:	e1a03123 	lsr	r3, r3, #2
  41f758:	ea000020 	b	41f7e0 <_ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii+0xa4>
  41f75c:	e790510c 	ldr	r5, [r0, ip, lsl #2]
  41f760:	e28c4001 	add	r4, ip, #1
  41f764:	e7904104 	ldr	r4, [r0, r4, lsl #2]
  41f768:	e5825000 	str	r5, [r2]
  41f76c:	e782410e 	str	r4, [r2, lr, lsl #2]
  41f770:	e28c4002 	add	r4, ip, #2
  41f774:	e7904104 	ldr	r4, [r0, r4, lsl #2]
  41f778:	e28c5003 	add	r5, ip, #3
  41f77c:	e7905105 	ldr	r5, [r0, r5, lsl #2]
  41f780:	e782418e 	str	r4, [r2, lr, lsl #3]
  41f784:	e08e408e 	add	r4, lr, lr, lsl #1
  41f788:	e1a04104 	lsl	r4, r4, #2
  41f78c:	e7825004 	str	r5, [r2, r4]
  41f790:	e28cc004 	add	ip, ip, #4
  41f794:	e082220e 	add	r2, r2, lr, lsl #4
  41f798:	ea000000 	b	41f7a0 <_ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii+0x64>
  41f79c:	e3a0c000 	mov	ip, #0
  41f7a0:	e59d400c 	ldr	r4, [sp, #12]
  41f7a4:	e2445004 	sub	r5, r4, #4
  41f7a8:	e155000c 	cmp	r5, ip
  41f7ac:	aaffffea 	bge	41f75c <_ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii+0x20>
  41f7b0:	ea000003 	b	41f7c4 <_ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii+0x88>
  41f7b4:	e790510c 	ldr	r5, [r0, ip, lsl #2]
  41f7b8:	e5825000 	str	r5, [r2]
  41f7bc:	e28cc001 	add	ip, ip, #1
  41f7c0:	e082210e 	add	r2, r2, lr, lsl #2
  41f7c4:	e15c0004 	cmp	ip, r4
  41f7c8:	bafffff9 	blt	41f7b4 <_ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii+0x78>
  41f7cc:	e004049e 	mul	r4, lr, r4
  41f7d0:	e0800101 	add	r0, r0, r1, lsl #2
  41f7d4:	e1a0c103 	lsl	ip, r3, #2
  41f7d8:	e04c4104 	sub	r4, ip, r4, lsl #2
  41f7dc:	e0822004 	add	r2, r2, r4
  41f7e0:	e59dc010 	ldr	ip, [sp, #16]
  41f7e4:	e24c4001 	sub	r4, ip, #1
  41f7e8:	e58d4010 	str	r4, [sp, #16]
  41f7ec:	e35c0000 	cmp	ip, #0
  41f7f0:	1affffe9 	bne	41f79c <_ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii+0x60>
  41f7f4:	e3a00000 	mov	r0, #0
  41f7f8:	e8bd4030 	pop	{r4, r5, lr}
  41f7fc:	e12fff1e 	bx	lr

0041f800 <_ZL18icvInitSplitRTableP14CvBigFuncTable>:
  41f800:	e59f3094 	ldr	r3, [pc, #148]	; 41f89c <_ZL18icvInitSplitRTableP14CvBigFuncTable+0x9c>
  41f804:	e08f3003 	add	r3, pc, r3
  41f808:	e59f2090 	ldr	r2, [pc, #144]	; 41f8a0 <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xa0>
  41f80c:	e793c002 	ldr	ip, [r3, r2]
  41f810:	e580c020 	str	ip, [r0, #32]
  41f814:	e59f2088 	ldr	r2, [pc, #136]	; 41f8a4 <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xa4>
  41f818:	e7931002 	ldr	r1, [r3, r2]
  41f81c:	e5801040 	str	r1, [r0, #64]	; 0x40
  41f820:	e59f2080 	ldr	r2, [pc, #128]	; 41f8a8 <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xa8>
  41f824:	e7932002 	ldr	r2, [r3, r2]
  41f828:	e5802060 	str	r2, [r0, #96]	; 0x60
  41f82c:	e580c024 	str	ip, [r0, #36]	; 0x24
  41f830:	e5801044 	str	r1, [r0, #68]	; 0x44
  41f834:	e5802064 	str	r2, [r0, #100]	; 0x64
  41f838:	e59f206c 	ldr	r2, [pc, #108]	; 41f8ac <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xac>
  41f83c:	e793c002 	ldr	ip, [r3, r2]
  41f840:	e580c028 	str	ip, [r0, #40]	; 0x28
  41f844:	e59f2064 	ldr	r2, [pc, #100]	; 41f8b0 <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xb0>
  41f848:	e7931002 	ldr	r1, [r3, r2]
  41f84c:	e5801048 	str	r1, [r0, #72]	; 0x48
  41f850:	e59f205c 	ldr	r2, [pc, #92]	; 41f8b4 <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xb4>
  41f854:	e7932002 	ldr	r2, [r3, r2]
  41f858:	e5802068 	str	r2, [r0, #104]	; 0x68
  41f85c:	e580c02c 	str	ip, [r0, #44]	; 0x2c
  41f860:	e580104c 	str	r1, [r0, #76]	; 0x4c
  41f864:	e580206c 	str	r2, [r0, #108]	; 0x6c
  41f868:	e59f2048 	ldr	r2, [pc, #72]	; 41f8b8 <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xb8>
  41f86c:	e7931002 	ldr	r1, [r3, r2]
  41f870:	e5801030 	str	r1, [r0, #48]	; 0x30
  41f874:	e59f2040 	ldr	r2, [pc, #64]	; 41f8bc <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xbc>
  41f878:	e7932002 	ldr	r2, [r3, r2]
  41f87c:	e5802050 	str	r2, [r0, #80]	; 0x50
  41f880:	e59fc038 	ldr	ip, [pc, #56]	; 41f8c0 <_ZL18icvInitSplitRTableP14CvBigFuncTable+0xc0>
  41f884:	e793300c 	ldr	r3, [r3, ip]
  41f888:	e5803070 	str	r3, [r0, #112]	; 0x70
  41f88c:	e5801034 	str	r1, [r0, #52]	; 0x34
  41f890:	e5802054 	str	r2, [r0, #84]	; 0x54
  41f894:	e5803074 	str	r3, [r0, #116]	; 0x74
  41f898:	e12fff1e 	bx	lr
  41f89c:	00021830 	.word	0x00021830
  41f8a0:	00000080 	.word	0x00000080
  41f8a4:	0000006c 	.word	0x0000006c
  41f8a8:	00000100 	.word	0x00000100
  41f8ac:	0000008c 	.word	0x0000008c
  41f8b0:	0000001c 	.word	0x0000001c
  41f8b4:	00000144 	.word	0x00000144
  41f8b8:	00000064 	.word	0x00000064
  41f8bc:	000000e4 	.word	0x000000e4
  41f8c0:	00000008 	.word	0x00000008

0041f8c4 <_ZL21icvInitSplitRCoiTableP11CvFuncTable>:
  41f8c4:	e59f3034 	ldr	r3, [pc, #52]	; 41f900 <_ZL21icvInitSplitRCoiTableP11CvFuncTable+0x3c>
  41f8c8:	e08f3003 	add	r3, pc, r3
  41f8cc:	e59f2030 	ldr	r2, [pc, #48]	; 41f904 <_ZL21icvInitSplitRCoiTableP11CvFuncTable+0x40>
  41f8d0:	e7932002 	ldr	r2, [r3, r2]
  41f8d4:	e5802000 	str	r2, [r0]
  41f8d8:	e5802004 	str	r2, [r0, #4]
  41f8dc:	e59f2024 	ldr	r2, [pc, #36]	; 41f908 <_ZL21icvInitSplitRCoiTableP11CvFuncTable+0x44>
  41f8e0:	e7932002 	ldr	r2, [r3, r2]
  41f8e4:	e5802008 	str	r2, [r0, #8]
  41f8e8:	e580200c 	str	r2, [r0, #12]
  41f8ec:	e59f2018 	ldr	r2, [pc, #24]	; 41f90c <_ZL21icvInitSplitRCoiTableP11CvFuncTable+0x48>
  41f8f0:	e7933002 	ldr	r3, [r3, r2]
  41f8f4:	e5803010 	str	r3, [r0, #16]
  41f8f8:	e5803014 	str	r3, [r0, #20]
  41f8fc:	e12fff1e 	bx	lr
  41f900:	0002176c 	.word	0x0002176c
  41f904:	00000030 	.word	0x00000030
  41f908:	000000c4 	.word	0x000000c4
  41f90c:	00000158 	.word	0x00000158

0041f910 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable>:
  41f910:	e59f3094 	ldr	r3, [pc, #148]	; 41f9ac <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0x9c>
  41f914:	e08f3003 	add	r3, pc, r3
  41f918:	e59f2090 	ldr	r2, [pc, #144]	; 41f9b0 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xa0>
  41f91c:	e793c002 	ldr	ip, [r3, r2]
  41f920:	e580c020 	str	ip, [r0, #32]
  41f924:	e59f2088 	ldr	r2, [pc, #136]	; 41f9b4 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xa4>
  41f928:	e7931002 	ldr	r1, [r3, r2]
  41f92c:	e5801040 	str	r1, [r0, #64]	; 0x40
  41f930:	e59f2080 	ldr	r2, [pc, #128]	; 41f9b8 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xa8>
  41f934:	e7932002 	ldr	r2, [r3, r2]
  41f938:	e5802060 	str	r2, [r0, #96]	; 0x60
  41f93c:	e580c024 	str	ip, [r0, #36]	; 0x24
  41f940:	e5801044 	str	r1, [r0, #68]	; 0x44
  41f944:	e5802064 	str	r2, [r0, #100]	; 0x64
  41f948:	e59f206c 	ldr	r2, [pc, #108]	; 41f9bc <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xac>
  41f94c:	e793c002 	ldr	ip, [r3, r2]
  41f950:	e580c028 	str	ip, [r0, #40]	; 0x28
  41f954:	e59f2064 	ldr	r2, [pc, #100]	; 41f9c0 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xb0>
  41f958:	e7931002 	ldr	r1, [r3, r2]
  41f95c:	e5801048 	str	r1, [r0, #72]	; 0x48
  41f960:	e59f205c 	ldr	r2, [pc, #92]	; 41f9c4 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xb4>
  41f964:	e7932002 	ldr	r2, [r3, r2]
  41f968:	e5802068 	str	r2, [r0, #104]	; 0x68
  41f96c:	e580c02c 	str	ip, [r0, #44]	; 0x2c
  41f970:	e580104c 	str	r1, [r0, #76]	; 0x4c
  41f974:	e580206c 	str	r2, [r0, #108]	; 0x6c
  41f978:	e59f2048 	ldr	r2, [pc, #72]	; 41f9c8 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xb8>
  41f97c:	e7931002 	ldr	r1, [r3, r2]
  41f980:	e5801030 	str	r1, [r0, #48]	; 0x30
  41f984:	e59f2040 	ldr	r2, [pc, #64]	; 41f9cc <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xbc>
  41f988:	e7932002 	ldr	r2, [r3, r2]
  41f98c:	e5802050 	str	r2, [r0, #80]	; 0x50
  41f990:	e59fc038 	ldr	ip, [pc, #56]	; 41f9d0 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable+0xc0>
  41f994:	e793300c 	ldr	r3, [r3, ip]
  41f998:	e5803070 	str	r3, [r0, #112]	; 0x70
  41f99c:	e5801034 	str	r1, [r0, #52]	; 0x34
  41f9a0:	e5802054 	str	r2, [r0, #84]	; 0x54
  41f9a4:	e5803074 	str	r3, [r0, #116]	; 0x74
  41f9a8:	e12fff1e 	bx	lr
  41f9ac:	00021720 	.word	0x00021720
  41f9b0:	000000b8 	.word	0x000000b8
  41f9b4:	00000014 	.word	0x00000014
  41f9b8:	00000164 	.word	0x00000164
  41f9bc:	00000024 	.word	0x00000024
  41f9c0:	0000010c 	.word	0x0000010c
  41f9c4:	00000010 	.word	0x00000010
  41f9c8:	000000d4 	.word	0x000000d4
  41f9cc:	00000134 	.word	0x00000134
  41f9d0:	000000b0 	.word	0x000000b0

0041f9d4 <_ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable>:
  41f9d4:	e59f3034 	ldr	r3, [pc, #52]	; 41fa10 <_ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable+0x3c>
  41f9d8:	e08f3003 	add	r3, pc, r3
  41f9dc:	e59f2030 	ldr	r2, [pc, #48]	; 41fa14 <_ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable+0x40>
  41f9e0:	e7932002 	ldr	r2, [r3, r2]
  41f9e4:	e5802000 	str	r2, [r0]
  41f9e8:	e5802004 	str	r2, [r0, #4]
  41f9ec:	e59f2024 	ldr	r2, [pc, #36]	; 41fa18 <_ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable+0x44>
  41f9f0:	e7932002 	ldr	r2, [r3, r2]
  41f9f4:	e5802008 	str	r2, [r0, #8]
  41f9f8:	e580200c 	str	r2, [r0, #12]
  41f9fc:	e59f2018 	ldr	r2, [pc, #24]	; 41fa1c <_ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable+0x48>
  41fa00:	e7933002 	ldr	r3, [r3, r2]
  41fa04:	e5803010 	str	r3, [r0, #16]
  41fa08:	e5803014 	str	r3, [r0, #20]
  41fa0c:	e12fff1e 	bx	lr
  41fa10:	0002165c 	.word	0x0002165c
  41fa14:	000000ac 	.word	0x000000ac
  41fa18:	000000e0 	.word	0x000000e0
  41fa1c:	000000f8 	.word	0x000000f8

0041fa20 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize>:
  41fa20:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41fa24:	e24dd014 	sub	sp, sp, #20
  41fa28:	e58d100c 	str	r1, [sp, #12]
  41fa2c:	e1a0b002 	mov	fp, r2
  41fa30:	e59da040 	ldr	sl, [sp, #64]	; 0x40
  41fa34:	e35a0001 	cmp	sl, #1
  41fa38:	059d2044 	ldreq	r2, [sp, #68]	; 0x44
  41fa3c:	058d2008 	streq	r2, [sp, #8]
  41fa40:	0a00004a 	beq	41fb70 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x150>
  41fa44:	e3a02b01 	mov	r2, #1024	; 0x400
  41fa48:	e58d2008 	str	r2, [sp, #8]
  41fa4c:	ea000047 	b	41fb70 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x150>
  41fa50:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  41fa54:	e58d2004 	str	r2, [sp, #4]
  41fa58:	ea000032 	b	41fb28 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x108>
  41fa5c:	e59d2004 	ldr	r2, [sp, #4]
  41fa60:	e59d1008 	ldr	r1, [sp, #8]
  41fa64:	e1520001 	cmp	r2, r1
  41fa68:	c1a07001 	movgt	r7, r1
  41fa6c:	d59d7004 	ldrle	r7, [sp, #4]
  41fa70:	e3a08000 	mov	r8, #0
  41fa74:	ea000026 	b	41fb14 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0xf4>
  41fa78:	e1a09108 	lsl	r9, r8, #2
  41fa7c:	e7901108 	ldr	r1, [r0, r8, lsl #2]
  41fa80:	e7932108 	ldr	r2, [r3, r8, lsl #2]
  41fa84:	e79b4108 	ldr	r4, [fp, r8, lsl #2]
  41fa88:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
  41fa8c:	e79ce108 	ldr	lr, [ip, r8, lsl #2]
  41fa90:	e3510000 	cmp	r1, #0
  41fa94:	1a000008 	bne	41fabc <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x9c>
  41fa98:	ea000015 	b	41faf4 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0xd4>
  41fa9c:	e5d16000 	ldrb	r6, [r1]
  41faa0:	e7d15004 	ldrb	r5, [r1, r4]
  41faa4:	e5c26000 	strb	r6, [r2]
  41faa8:	e7c2500e 	strb	r5, [r2, lr]
  41faac:	e28cc002 	add	ip, ip, #2
  41fab0:	e0811084 	add	r1, r1, r4, lsl #1
  41fab4:	e082208e 	add	r2, r2, lr, lsl #1
  41fab8:	ea000000 	b	41fac0 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0xa0>
  41fabc:	e3a0c000 	mov	ip, #0
  41fac0:	e2475002 	sub	r5, r7, #2
  41fac4:	e155000c 	cmp	r5, ip
  41fac8:	aafffff3 	bge	41fa9c <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x7c>
  41facc:	e15c0007 	cmp	ip, r7
  41fad0:	b6d1c004 	ldrblt	ip, [r1], r4
  41fad4:	b6c2c00e 	strblt	ip, [r2], lr
  41fad8:	e7801009 	str	r1, [r0, r9]
  41fadc:	ea00000a 	b	41fb0c <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0xec>
  41fae0:	e3a0c000 	mov	ip, #0
  41fae4:	e7c2c00e 	strb	ip, [r2, lr]
  41fae8:	e5c2c000 	strb	ip, [r2]
  41faec:	e2811002 	add	r1, r1, #2
  41faf0:	e082208e 	add	r2, r2, lr, lsl #1
  41faf4:	e247c002 	sub	ip, r7, #2
  41faf8:	e15c0001 	cmp	ip, r1
  41fafc:	aafffff7 	bge	41fae0 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0xc0>
  41fb00:	e1510007 	cmp	r1, r7
  41fb04:	b3a01000 	movlt	r1, #0
  41fb08:	b6c2100e 	strblt	r1, [r2], lr
  41fb0c:	e7832009 	str	r2, [r3, r9]
  41fb10:	e2888001 	add	r8, r8, #1
  41fb14:	e158000a 	cmp	r8, sl
  41fb18:	baffffd6 	blt	41fa78 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x58>
  41fb1c:	e59d2004 	ldr	r2, [sp, #4]
  41fb20:	e0672002 	rsb	r2, r7, r2
  41fb24:	e58d2004 	str	r2, [sp, #4]
  41fb28:	e59d2004 	ldr	r2, [sp, #4]
  41fb2c:	e3520000 	cmp	r2, #0
  41fb30:	caffffc9 	bgt	41fa5c <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x3c>
  41fb34:	e3a02000 	mov	r2, #0
  41fb38:	e59de00c 	ldr	lr, [sp, #12]
  41fb3c:	e59d4038 	ldr	r4, [sp, #56]	; 0x38
  41fb40:	ea000008 	b	41fb68 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x148>
  41fb44:	e79ec102 	ldr	ip, [lr, r2, lsl #2]
  41fb48:	e7901102 	ldr	r1, [r0, r2, lsl #2]
  41fb4c:	e081100c 	add	r1, r1, ip
  41fb50:	e7801102 	str	r1, [r0, r2, lsl #2]
  41fb54:	e794c102 	ldr	ip, [r4, r2, lsl #2]
  41fb58:	e7931102 	ldr	r1, [r3, r2, lsl #2]
  41fb5c:	e081100c 	add	r1, r1, ip
  41fb60:	e7831102 	str	r1, [r3, r2, lsl #2]
  41fb64:	e2822001 	add	r2, r2, #1
  41fb68:	e152000a 	cmp	r2, sl
  41fb6c:	bafffff4 	blt	41fb44 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x124>
  41fb70:	e59d2048 	ldr	r2, [sp, #72]	; 0x48
  41fb74:	e2421001 	sub	r1, r2, #1
  41fb78:	e58d1048 	str	r1, [sp, #72]	; 0x48
  41fb7c:	e3520000 	cmp	r2, #0
  41fb80:	1affffb2 	bne	41fa50 <_ZL17icvMixChannels_8uPPKhPiS2_PPhS2_S2_i6CvSize+0x30>
  41fb84:	e3a00000 	mov	r0, #0
  41fb88:	e28dd014 	add	sp, sp, #20
  41fb8c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41fb90:	e12fff1e 	bx	lr

0041fb94 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize>:
  41fb94:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41fb98:	e24dd014 	sub	sp, sp, #20
  41fb9c:	e58d100c 	str	r1, [sp, #12]
  41fba0:	e1a0b002 	mov	fp, r2
  41fba4:	e59da040 	ldr	sl, [sp, #64]	; 0x40
  41fba8:	e35a0001 	cmp	sl, #1
  41fbac:	059d2044 	ldreq	r2, [sp, #68]	; 0x44
  41fbb0:	058d2008 	streq	r2, [sp, #8]
  41fbb4:	0a000051 	beq	41fd00 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x16c>
  41fbb8:	e3a02b01 	mov	r2, #1024	; 0x400
  41fbbc:	e58d2008 	str	r2, [sp, #8]
  41fbc0:	ea00004e 	b	41fd00 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x16c>
  41fbc4:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
  41fbc8:	e58d2004 	str	r2, [sp, #4]
  41fbcc:	ea000039 	b	41fcb8 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x124>
  41fbd0:	e59d2004 	ldr	r2, [sp, #4]
  41fbd4:	e59d1008 	ldr	r1, [sp, #8]
  41fbd8:	e1520001 	cmp	r2, r1
  41fbdc:	c1a07001 	movgt	r7, r1
  41fbe0:	d59d7004 	ldrle	r7, [sp, #4]
  41fbe4:	e3a08000 	mov	r8, #0
  41fbe8:	ea00002d 	b	41fca4 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x110>
  41fbec:	e1a09108 	lsl	r9, r8, #2
  41fbf0:	e7901108 	ldr	r1, [r0, r8, lsl #2]
  41fbf4:	e7932108 	ldr	r2, [r3, r8, lsl #2]
  41fbf8:	e79b4108 	ldr	r4, [fp, r8, lsl #2]
  41fbfc:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
  41fc00:	e79ce108 	ldr	lr, [ip, r8, lsl #2]
  41fc04:	e3510000 	cmp	r1, #0
  41fc08:	1a00000b 	bne	41fc3c <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0xa8>
  41fc0c:	e3a0c000 	mov	ip, #0
  41fc10:	ea00001a 	b	41fc80 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0xec>
  41fc14:	e1d150b0 	ldrh	r5, [r1]
  41fc18:	e1a06084 	lsl	r6, r4, #1
  41fc1c:	e19160b6 	ldrh	r6, [r1, r6]
  41fc20:	e1c250b0 	strh	r5, [r2]
  41fc24:	e1a0508e 	lsl	r5, lr, #1
  41fc28:	e18260b5 	strh	r6, [r2, r5]
  41fc2c:	e28cc002 	add	ip, ip, #2
  41fc30:	e0811104 	add	r1, r1, r4, lsl #2
  41fc34:	e082210e 	add	r2, r2, lr, lsl #2
  41fc38:	ea000000 	b	41fc40 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0xac>
  41fc3c:	e3a0c000 	mov	ip, #0
  41fc40:	e2475002 	sub	r5, r7, #2
  41fc44:	e155000c 	cmp	r5, ip
  41fc48:	aafffff1 	bge	41fc14 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x80>
  41fc4c:	e15c0007 	cmp	ip, r7
  41fc50:	b1d1c0b0 	ldrhlt	ip, [r1]
  41fc54:	b1c2c0b0 	strhlt	ip, [r2]
  41fc58:	b0811084 	addlt	r1, r1, r4, lsl #1
  41fc5c:	b082208e 	addlt	r2, r2, lr, lsl #1
  41fc60:	e7801009 	str	r1, [r0, r9]
  41fc64:	ea00000c 	b	41fc9c <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x108>
  41fc68:	e1a0108e 	lsl	r1, lr, #1
  41fc6c:	e3a04000 	mov	r4, #0
  41fc70:	e18240b1 	strh	r4, [r2, r1]
  41fc74:	e1c240b0 	strh	r4, [r2]
  41fc78:	e28cc002 	add	ip, ip, #2
  41fc7c:	e082210e 	add	r2, r2, lr, lsl #2
  41fc80:	e2471002 	sub	r1, r7, #2
  41fc84:	e151000c 	cmp	r1, ip
  41fc88:	aafffff6 	bge	41fc68 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0xd4>
  41fc8c:	e15c0007 	cmp	ip, r7
  41fc90:	b3a01000 	movlt	r1, #0
  41fc94:	b1c210b0 	strhlt	r1, [r2]
  41fc98:	b082208e 	addlt	r2, r2, lr, lsl #1
  41fc9c:	e7832009 	str	r2, [r3, r9]
  41fca0:	e2888001 	add	r8, r8, #1
  41fca4:	e158000a 	cmp	r8, sl
  41fca8:	baffffcf 	blt	41fbec <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x58>
  41fcac:	e59d2004 	ldr	r2, [sp, #4]
  41fcb0:	e0672002 	rsb	r2, r7, r2
  41fcb4:	e58d2004 	str	r2, [sp, #4]
  41fcb8:	e59d2004 	ldr	r2, [sp, #4]
  41fcbc:	e3520000 	cmp	r2, #0
  41fcc0:	caffffc2 	bgt	41fbd0 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x3c>
  41fcc4:	e3a02000 	mov	r2, #0
  41fcc8:	e59de00c 	ldr	lr, [sp, #12]
  41fccc:	e59d4038 	ldr	r4, [sp, #56]	; 0x38
  41fcd0:	ea000008 	b	41fcf8 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x164>
  41fcd4:	e79ec102 	ldr	ip, [lr, r2, lsl #2]
  41fcd8:	e7901102 	ldr	r1, [r0, r2, lsl #2]
  41fcdc:	e081108c 	add	r1, r1, ip, lsl #1
  41fce0:	e7801102 	str	r1, [r0, r2, lsl #2]
  41fce4:	e794c102 	ldr	ip, [r4, r2, lsl #2]
  41fce8:	e7931102 	ldr	r1, [r3, r2, lsl #2]
  41fcec:	e081108c 	add	r1, r1, ip, lsl #1
  41fcf0:	e7831102 	str	r1, [r3, r2, lsl #2]
  41fcf4:	e2822001 	add	r2, r2, #1
  41fcf8:	e152000a 	cmp	r2, sl
  41fcfc:	bafffff4 	blt	41fcd4 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x140>
  41fd00:	e59d2048 	ldr	r2, [sp, #72]	; 0x48
  41fd04:	e2421001 	sub	r1, r2, #1
  41fd08:	e58d1048 	str	r1, [sp, #72]	; 0x48
  41fd0c:	e3520000 	cmp	r2, #0
  41fd10:	1affffab 	bne	41fbc4 <_ZL18icvMixChannels_16uPPKtPiS2_PPtS2_S2_i6CvSize+0x30>
  41fd14:	e3a00000 	mov	r0, #0
  41fd18:	e28dd014 	add	sp, sp, #20
  41fd1c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41fd20:	e12fff1e 	bx	lr

0041fd24 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize>:
  41fd24:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41fd28:	e24dd014 	sub	sp, sp, #20
  41fd2c:	e58d100c 	str	r1, [sp, #12]
  41fd30:	e59db03c 	ldr	fp, [sp, #60]	; 0x3c
  41fd34:	e59da040 	ldr	sl, [sp, #64]	; 0x40
  41fd38:	e35a0001 	cmp	sl, #1
  41fd3c:	059d1044 	ldreq	r1, [sp, #68]	; 0x44
  41fd40:	058d1008 	streq	r1, [sp, #8]
  41fd44:	0a00004e 	beq	41fe84 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x160>
  41fd48:	e3a01b01 	mov	r1, #1024	; 0x400
  41fd4c:	e58d1008 	str	r1, [sp, #8]
  41fd50:	ea00004b 	b	41fe84 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x160>
  41fd54:	e59d1044 	ldr	r1, [sp, #68]	; 0x44
  41fd58:	e58d1004 	str	r1, [sp, #4]
  41fd5c:	ea000036 	b	41fe3c <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x118>
  41fd60:	e59d1004 	ldr	r1, [sp, #4]
  41fd64:	e59dc008 	ldr	ip, [sp, #8]
  41fd68:	e151000c 	cmp	r1, ip
  41fd6c:	c1a0700c 	movgt	r7, ip
  41fd70:	d59d7004 	ldrle	r7, [sp, #4]
  41fd74:	e3a08000 	mov	r8, #0
  41fd78:	ea00002a 	b	41fe28 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x104>
  41fd7c:	e1a09108 	lsl	r9, r8, #2
  41fd80:	e790c108 	ldr	ip, [r0, r8, lsl #2]
  41fd84:	e7931108 	ldr	r1, [r3, r8, lsl #2]
  41fd88:	e7925108 	ldr	r5, [r2, r8, lsl #2]
  41fd8c:	e79b4108 	ldr	r4, [fp, r8, lsl #2]
  41fd90:	e35c0000 	cmp	ip, #0
  41fd94:	1a000008 	bne	41fdbc <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x98>
  41fd98:	ea000019 	b	41fe04 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0xe0>
  41fd9c:	e79c6105 	ldr	r6, [ip, r5, lsl #2]
  41fda0:	e59c3000 	ldr	r3, [ip]
  41fda4:	e5813000 	str	r3, [r1]
  41fda8:	e7816104 	str	r6, [r1, r4, lsl #2]
  41fdac:	e28ee002 	add	lr, lr, #2
  41fdb0:	e08cc185 	add	ip, ip, r5, lsl #3
  41fdb4:	e0811184 	add	r1, r1, r4, lsl #3
  41fdb8:	ea000001 	b	41fdc4 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0xa0>
  41fdbc:	e3a0e000 	mov	lr, #0
  41fdc0:	e58d3000 	str	r3, [sp]
  41fdc4:	e2476002 	sub	r6, r7, #2
  41fdc8:	e156000e 	cmp	r6, lr
  41fdcc:	aafffff2 	bge	41fd9c <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x78>
  41fdd0:	e59d3000 	ldr	r3, [sp]
  41fdd4:	e15e0007 	cmp	lr, r7
  41fdd8:	b59ce000 	ldrlt	lr, [ip]
  41fddc:	b581e000 	strlt	lr, [r1]
  41fde0:	b08cc105 	addlt	ip, ip, r5, lsl #2
  41fde4:	b0811104 	addlt	r1, r1, r4, lsl #2
  41fde8:	e780c009 	str	ip, [r0, r9]
  41fdec:	ea00000b 	b	41fe20 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0xfc>
  41fdf0:	e3a0e000 	mov	lr, #0
  41fdf4:	e781e104 	str	lr, [r1, r4, lsl #2]
  41fdf8:	e581e000 	str	lr, [r1]
  41fdfc:	e28cc002 	add	ip, ip, #2
  41fe00:	e0811184 	add	r1, r1, r4, lsl #3
  41fe04:	e247e002 	sub	lr, r7, #2
  41fe08:	e15e000c 	cmp	lr, ip
  41fe0c:	aafffff7 	bge	41fdf0 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0xcc>
  41fe10:	e15c0007 	cmp	ip, r7
  41fe14:	b3a0c000 	movlt	ip, #0
  41fe18:	b581c000 	strlt	ip, [r1]
  41fe1c:	b0811104 	addlt	r1, r1, r4, lsl #2
  41fe20:	e7831009 	str	r1, [r3, r9]
  41fe24:	e2888001 	add	r8, r8, #1
  41fe28:	e158000a 	cmp	r8, sl
  41fe2c:	baffffd2 	blt	41fd7c <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x58>
  41fe30:	e59d1004 	ldr	r1, [sp, #4]
  41fe34:	e0671001 	rsb	r1, r7, r1
  41fe38:	e58d1004 	str	r1, [sp, #4]
  41fe3c:	e59d1004 	ldr	r1, [sp, #4]
  41fe40:	e3510000 	cmp	r1, #0
  41fe44:	caffffc5 	bgt	41fd60 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x3c>
  41fe48:	e3a01000 	mov	r1, #0
  41fe4c:	e59d400c 	ldr	r4, [sp, #12]
  41fe50:	e59d5038 	ldr	r5, [sp, #56]	; 0x38
  41fe54:	ea000008 	b	41fe7c <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x158>
  41fe58:	e794e101 	ldr	lr, [r4, r1, lsl #2]
  41fe5c:	e790c101 	ldr	ip, [r0, r1, lsl #2]
  41fe60:	e08cc10e 	add	ip, ip, lr, lsl #2
  41fe64:	e780c101 	str	ip, [r0, r1, lsl #2]
  41fe68:	e795e101 	ldr	lr, [r5, r1, lsl #2]
  41fe6c:	e793c101 	ldr	ip, [r3, r1, lsl #2]
  41fe70:	e08cc10e 	add	ip, ip, lr, lsl #2
  41fe74:	e783c101 	str	ip, [r3, r1, lsl #2]
  41fe78:	e2811001 	add	r1, r1, #1
  41fe7c:	e151000a 	cmp	r1, sl
  41fe80:	bafffff4 	blt	41fe58 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x134>
  41fe84:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
  41fe88:	e241c001 	sub	ip, r1, #1
  41fe8c:	e58dc048 	str	ip, [sp, #72]	; 0x48
  41fe90:	e3510000 	cmp	r1, #0
  41fe94:	1affffae 	bne	41fd54 <_ZL18icvMixChannels_32sPPKiPiS2_PS2_S2_S2_i6CvSize+0x30>
  41fe98:	e3a00000 	mov	r0, #0
  41fe9c:	e28dd014 	add	sp, sp, #20
  41fea0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41fea4:	e12fff1e 	bx	lr

0041fea8 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize>:
  41fea8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  41feac:	e24dd014 	sub	sp, sp, #20
  41feb0:	e58d100c 	str	r1, [sp, #12]
  41feb4:	e59db03c 	ldr	fp, [sp, #60]	; 0x3c
  41feb8:	e59da040 	ldr	sl, [sp, #64]	; 0x40
  41febc:	e35a0001 	cmp	sl, #1
  41fec0:	059d1044 	ldreq	r1, [sp, #68]	; 0x44
  41fec4:	058d1008 	streq	r1, [sp, #8]
  41fec8:	0a00004e 	beq	420008 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x160>
  41fecc:	e3a01b01 	mov	r1, #1024	; 0x400
  41fed0:	e58d1008 	str	r1, [sp, #8]
  41fed4:	ea00004b 	b	420008 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x160>
  41fed8:	e59d1044 	ldr	r1, [sp, #68]	; 0x44
  41fedc:	e58d1004 	str	r1, [sp, #4]
  41fee0:	ea000036 	b	41ffc0 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x118>
  41fee4:	e59d1004 	ldr	r1, [sp, #4]
  41fee8:	e59dc008 	ldr	ip, [sp, #8]
  41feec:	e151000c 	cmp	r1, ip
  41fef0:	c1a0700c 	movgt	r7, ip
  41fef4:	d59d7004 	ldrle	r7, [sp, #4]
  41fef8:	e3a08000 	mov	r8, #0
  41fefc:	ea00002a 	b	41ffac <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x104>
  41ff00:	e1a09108 	lsl	r9, r8, #2
  41ff04:	e790c108 	ldr	ip, [r0, r8, lsl #2]
  41ff08:	e7931108 	ldr	r1, [r3, r8, lsl #2]
  41ff0c:	e7925108 	ldr	r5, [r2, r8, lsl #2]
  41ff10:	e79b4108 	ldr	r4, [fp, r8, lsl #2]
  41ff14:	e35c0000 	cmp	ip, #0
  41ff18:	1a000008 	bne	41ff40 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x98>
  41ff1c:	ea000019 	b	41ff88 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0xe0>
  41ff20:	e79c6105 	ldr	r6, [ip, r5, lsl #2]
  41ff24:	e59c3000 	ldr	r3, [ip]
  41ff28:	e5813000 	str	r3, [r1]
  41ff2c:	e7816104 	str	r6, [r1, r4, lsl #2]
  41ff30:	e28ee002 	add	lr, lr, #2
  41ff34:	e08cc185 	add	ip, ip, r5, lsl #3
  41ff38:	e0811184 	add	r1, r1, r4, lsl #3
  41ff3c:	ea000001 	b	41ff48 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0xa0>
  41ff40:	e3a0e000 	mov	lr, #0
  41ff44:	e58d3000 	str	r3, [sp]
  41ff48:	e2476002 	sub	r6, r7, #2
  41ff4c:	e156000e 	cmp	r6, lr
  41ff50:	aafffff2 	bge	41ff20 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x78>
  41ff54:	e59d3000 	ldr	r3, [sp]
  41ff58:	e15e0007 	cmp	lr, r7
  41ff5c:	b59ce000 	ldrlt	lr, [ip]
  41ff60:	b581e000 	strlt	lr, [r1]
  41ff64:	b08cc105 	addlt	ip, ip, r5, lsl #2
  41ff68:	b0811104 	addlt	r1, r1, r4, lsl #2
  41ff6c:	e780c009 	str	ip, [r0, r9]
  41ff70:	ea00000b 	b	41ffa4 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0xfc>
  41ff74:	e3a0e000 	mov	lr, #0
  41ff78:	e781e104 	str	lr, [r1, r4, lsl #2]
  41ff7c:	e581e000 	str	lr, [r1]
  41ff80:	e28cc002 	add	ip, ip, #2
  41ff84:	e0811184 	add	r1, r1, r4, lsl #3
  41ff88:	e247e002 	sub	lr, r7, #2
  41ff8c:	e15e000c 	cmp	lr, ip
  41ff90:	aafffff7 	bge	41ff74 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0xcc>
  41ff94:	e15c0007 	cmp	ip, r7
  41ff98:	b3a0c000 	movlt	ip, #0
  41ff9c:	b581c000 	strlt	ip, [r1]
  41ffa0:	b0811104 	addlt	r1, r1, r4, lsl #2
  41ffa4:	e7831009 	str	r1, [r3, r9]
  41ffa8:	e2888001 	add	r8, r8, #1
  41ffac:	e158000a 	cmp	r8, sl
  41ffb0:	baffffd2 	blt	41ff00 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x58>
  41ffb4:	e59d1004 	ldr	r1, [sp, #4]
  41ffb8:	e0671001 	rsb	r1, r7, r1
  41ffbc:	e58d1004 	str	r1, [sp, #4]
  41ffc0:	e59d1004 	ldr	r1, [sp, #4]
  41ffc4:	e3510000 	cmp	r1, #0
  41ffc8:	caffffc5 	bgt	41fee4 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x3c>
  41ffcc:	e3a01000 	mov	r1, #0
  41ffd0:	e59d400c 	ldr	r4, [sp, #12]
  41ffd4:	e59d5038 	ldr	r5, [sp, #56]	; 0x38
  41ffd8:	ea000008 	b	420000 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x158>
  41ffdc:	e794e101 	ldr	lr, [r4, r1, lsl #2]
  41ffe0:	e790c101 	ldr	ip, [r0, r1, lsl #2]
  41ffe4:	e08cc10e 	add	ip, ip, lr, lsl #2
  41ffe8:	e780c101 	str	ip, [r0, r1, lsl #2]
  41ffec:	e795e101 	ldr	lr, [r5, r1, lsl #2]
  41fff0:	e793c101 	ldr	ip, [r3, r1, lsl #2]
  41fff4:	e08cc10e 	add	ip, ip, lr, lsl #2
  41fff8:	e783c101 	str	ip, [r3, r1, lsl #2]
  41fffc:	e2811001 	add	r1, r1, #1
  420000:	e151000a 	cmp	r1, sl
  420004:	bafffff4 	blt	41ffdc <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x134>
  420008:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
  42000c:	e241c001 	sub	ip, r1, #1
  420010:	e58dc048 	str	ip, [sp, #72]	; 0x48
  420014:	e3510000 	cmp	r1, #0
  420018:	1affffae 	bne	41fed8 <_ZL18icvMixChannels_64sPPKlPiS2_PPlS2_S2_i6CvSize+0x30>
  42001c:	e3a00000 	mov	r0, #0
  420020:	e28dd014 	add	sp, sp, #20
  420024:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420028:	e12fff1e 	bx	lr

0042002c <_ZL21icvInitMixChannelsTabP11CvFuncTable>:
  42002c:	e59f3038 	ldr	r3, [pc, #56]	; 42006c <_ZL21icvInitMixChannelsTabP11CvFuncTable+0x40>
  420030:	e08f3003 	add	r3, pc, r3
  420034:	e5803000 	str	r3, [r0]
  420038:	e5803004 	str	r3, [r0, #4]
  42003c:	e59f302c 	ldr	r3, [pc, #44]	; 420070 <_ZL21icvInitMixChannelsTabP11CvFuncTable+0x44>
  420040:	e08f3003 	add	r3, pc, r3
  420044:	e5803008 	str	r3, [r0, #8]
  420048:	e580300c 	str	r3, [r0, #12]
  42004c:	e59f3020 	ldr	r3, [pc, #32]	; 420074 <_ZL21icvInitMixChannelsTabP11CvFuncTable+0x48>
  420050:	e08f3003 	add	r3, pc, r3
  420054:	e5803010 	str	r3, [r0, #16]
  420058:	e5803014 	str	r3, [r0, #20]
  42005c:	e59f3014 	ldr	r3, [pc, #20]	; 420078 <_ZL21icvInitMixChannelsTabP11CvFuncTable+0x4c>
  420060:	e08f3003 	add	r3, pc, r3
  420064:	e5803018 	str	r3, [r0, #24]
  420068:	e12fff1e 	bx	lr
  42006c:	fffff9e8 	.word	0xfffff9e8
  420070:	fffffb4c 	.word	0xfffffb4c
  420074:	fffffccc 	.word	0xfffffccc
  420078:	fffffe40 	.word	0xfffffe40

0042007c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei>:
  42007c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420080:	e1a04000 	mov	r4, r0
  420084:	e1a05002 	mov	r5, r2
  420088:	e59f0478 	ldr	r0, [pc, #1144]	; 420508 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x48c>
  42008c:	e08f0000 	add	r0, pc, r0
  420090:	e1a07123 	lsr	r7, r3, #2
  420094:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  420098:	e2033007 	and	r3, r3, #7
  42009c:	e3530006 	cmp	r3, #6
  4200a0:	908ff103 	addls	pc, pc, r3, lsl #2
  4200a4:	ea000114 	b	4204fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x480>
  4200a8:	ea00002d 	b	420164 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0xe8>
  4200ac:	ea00005a 	b	42021c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x1a0>
  4200b0:	ea00005f 	b	420234 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x1b8>
  4200b4:	ea00008c 	b	4202ec <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x270>
  4200b8:	ea0000b9 	b	4203a4 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x328>
  4200bc:	ea00010e 	b	4204fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x480>
  4200c0:	ea0000e0 	b	420448 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x3cc>
  4200c4:	e7d4c003 	ldrb	ip, [r4, r3]
  4200c8:	e28cc080 	add	ip, ip, #128	; 0x80
  4200cc:	e59f2438 	ldr	r2, [pc, #1080]	; 42050c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x490>
  4200d0:	e7902002 	ldr	r2, [r0, r2]
  4200d4:	e792610c 	ldr	r6, [r2, ip, lsl #2]
  4200d8:	e283e001 	add	lr, r3, #1
  4200dc:	e7d4c00e 	ldrb	ip, [r4, lr]
  4200e0:	e28cc080 	add	ip, ip, #128	; 0x80
  4200e4:	e792c10c 	ldr	ip, [r2, ip, lsl #2]
  4200e8:	e7856103 	str	r6, [r5, r3, lsl #2]
  4200ec:	e785c10e 	str	ip, [r5, lr, lsl #2]
  4200f0:	e2836002 	add	r6, r3, #2
  4200f4:	e7d4c006 	ldrb	ip, [r4, r6]
  4200f8:	e28cc080 	add	ip, ip, #128	; 0x80
  4200fc:	e792810c 	ldr	r8, [r2, ip, lsl #2]
  420100:	e283e003 	add	lr, r3, #3
  420104:	e7d4c00e 	ldrb	ip, [r4, lr]
  420108:	e28cc080 	add	ip, ip, #128	; 0x80
  42010c:	e792210c 	ldr	r2, [r2, ip, lsl #2]
  420110:	e7858106 	str	r8, [r5, r6, lsl #2]
  420114:	e785210e 	str	r2, [r5, lr, lsl #2]
  420118:	e2833004 	add	r3, r3, #4
  42011c:	ea000000 	b	420124 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0xa8>
  420120:	e3a03000 	mov	r3, #0
  420124:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
  420128:	e24c2004 	sub	r2, ip, #4
  42012c:	e1520003 	cmp	r2, r3
  420130:	aaffffe3 	bge	4200c4 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x48>
  420134:	ea000006 	b	420154 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0xd8>
  420138:	e7d42003 	ldrb	r2, [r4, r3]
  42013c:	e2822080 	add	r2, r2, #128	; 0x80
  420140:	e59fe3c4 	ldr	lr, [pc, #964]	; 42050c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x490>
  420144:	e790e00e 	ldr	lr, [r0, lr]
  420148:	e79e2102 	ldr	r2, [lr, r2, lsl #2]
  42014c:	e7852103 	str	r2, [r5, r3, lsl #2]
  420150:	e2833001 	add	r3, r3, #1
  420154:	e153000c 	cmp	r3, ip
  420158:	bafffff6 	blt	420138 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0xbc>
  42015c:	e0844001 	add	r4, r4, r1
  420160:	e0855107 	add	r5, r5, r7, lsl #2
  420164:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  420168:	e2432001 	sub	r2, r3, #1
  42016c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  420170:	e3530000 	cmp	r3, #0
  420174:	1affffe9 	bne	420120 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0xa4>
  420178:	ea0000df 	b	4204fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x480>
  42017c:	e7d4c003 	ldrb	ip, [r4, r3]
  420180:	e28cc080 	add	ip, ip, #128	; 0x80
  420184:	e59f2380 	ldr	r2, [pc, #896]	; 42050c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x490>
  420188:	e7902002 	ldr	r2, [r0, r2]
  42018c:	e792610c 	ldr	r6, [r2, ip, lsl #2]
  420190:	e283e001 	add	lr, r3, #1
  420194:	e7d4c00e 	ldrb	ip, [r4, lr]
  420198:	e28cc080 	add	ip, ip, #128	; 0x80
  42019c:	e792c10c 	ldr	ip, [r2, ip, lsl #2]
  4201a0:	e7856103 	str	r6, [r5, r3, lsl #2]
  4201a4:	e785c10e 	str	ip, [r5, lr, lsl #2]
  4201a8:	e2836002 	add	r6, r3, #2
  4201ac:	e7d4c006 	ldrb	ip, [r4, r6]
  4201b0:	e28cc080 	add	ip, ip, #128	; 0x80
  4201b4:	e792810c 	ldr	r8, [r2, ip, lsl #2]
  4201b8:	e283e003 	add	lr, r3, #3
  4201bc:	e7d4c00e 	ldrb	ip, [r4, lr]
  4201c0:	e28cc080 	add	ip, ip, #128	; 0x80
  4201c4:	e792210c 	ldr	r2, [r2, ip, lsl #2]
  4201c8:	e7858106 	str	r8, [r5, r6, lsl #2]
  4201cc:	e785210e 	str	r2, [r5, lr, lsl #2]
  4201d0:	e2833004 	add	r3, r3, #4
  4201d4:	ea000000 	b	4201dc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x160>
  4201d8:	e3a03000 	mov	r3, #0
  4201dc:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
  4201e0:	e24c2004 	sub	r2, ip, #4
  4201e4:	e1520003 	cmp	r2, r3
  4201e8:	aaffffe3 	bge	42017c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x100>
  4201ec:	ea000006 	b	42020c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x190>
  4201f0:	e7d42003 	ldrb	r2, [r4, r3]
  4201f4:	e2822080 	add	r2, r2, #128	; 0x80
  4201f8:	e59fe30c 	ldr	lr, [pc, #780]	; 42050c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x490>
  4201fc:	e790e00e 	ldr	lr, [r0, lr]
  420200:	e79e2102 	ldr	r2, [lr, r2, lsl #2]
  420204:	e7852103 	str	r2, [r5, r3, lsl #2]
  420208:	e2833001 	add	r3, r3, #1
  42020c:	e153000c 	cmp	r3, ip
  420210:	bafffff6 	blt	4201f0 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x174>
  420214:	e0844001 	add	r4, r4, r1
  420218:	e0855107 	add	r5, r5, r7, lsl #2
  42021c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  420220:	e2432001 	sub	r2, r3, #1
  420224:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  420228:	e3530000 	cmp	r3, #0
  42022c:	1affffe9 	bne	4201d8 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x15c>
  420230:	ea0000b1 	b	4204fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x480>
  420234:	e1a0a0a1 	lsr	sl, r1, #1
  420238:	ea000025 	b	4202d4 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x258>
  42023c:	e1a03086 	lsl	r3, r6, #1
  420240:	e19400b3 	ldrh	r0, [r4, r3]
  420244:	fa0048a6 	blx	4324e4 <__aeabi_ui2f>
  420248:	e1a09000 	mov	r9, r0
  42024c:	e2868001 	add	r8, r6, #1
  420250:	e1a03088 	lsl	r3, r8, #1
  420254:	e19400b3 	ldrh	r0, [r4, r3]
  420258:	fa0048a1 	blx	4324e4 <__aeabi_ui2f>
  42025c:	e7859106 	str	r9, [r5, r6, lsl #2]
  420260:	e7850108 	str	r0, [r5, r8, lsl #2]
  420264:	e2869002 	add	r9, r6, #2
  420268:	e1a03089 	lsl	r3, r9, #1
  42026c:	e19400b3 	ldrh	r0, [r4, r3]
  420270:	fa00489b 	blx	4324e4 <__aeabi_ui2f>
  420274:	e1a0b000 	mov	fp, r0
  420278:	e2868003 	add	r8, r6, #3
  42027c:	e1a03088 	lsl	r3, r8, #1
  420280:	e19400b3 	ldrh	r0, [r4, r3]
  420284:	fa004896 	blx	4324e4 <__aeabi_ui2f>
  420288:	e785b109 	str	fp, [r5, r9, lsl #2]
  42028c:	e7850108 	str	r0, [r5, r8, lsl #2]
  420290:	e2866004 	add	r6, r6, #4
  420294:	ea000000 	b	42029c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x220>
  420298:	e3a06000 	mov	r6, #0
  42029c:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  4202a0:	e2483004 	sub	r3, r8, #4
  4202a4:	e1530006 	cmp	r3, r6
  4202a8:	aaffffe3 	bge	42023c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x1c0>
  4202ac:	ea000004 	b	4202c4 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x248>
  4202b0:	e1a03086 	lsl	r3, r6, #1
  4202b4:	e19400b3 	ldrh	r0, [r4, r3]
  4202b8:	fa004889 	blx	4324e4 <__aeabi_ui2f>
  4202bc:	e7850106 	str	r0, [r5, r6, lsl #2]
  4202c0:	e2866001 	add	r6, r6, #1
  4202c4:	e1560008 	cmp	r6, r8
  4202c8:	bafffff8 	blt	4202b0 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x234>
  4202cc:	e084408a 	add	r4, r4, sl, lsl #1
  4202d0:	e0855107 	add	r5, r5, r7, lsl #2
  4202d4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  4202d8:	e2432001 	sub	r2, r3, #1
  4202dc:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4202e0:	e3530000 	cmp	r3, #0
  4202e4:	1affffeb 	bne	420298 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x21c>
  4202e8:	ea000083 	b	4204fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x480>
  4202ec:	e1a0a0a1 	lsr	sl, r1, #1
  4202f0:	ea000025 	b	42038c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x310>
  4202f4:	e1a03086 	lsl	r3, r6, #1
  4202f8:	e19400f3 	ldrsh	r0, [r4, r3]
  4202fc:	fa00487a 	blx	4324ec <__aeabi_i2f>
  420300:	e1a09000 	mov	r9, r0
  420304:	e2868001 	add	r8, r6, #1
  420308:	e1a03088 	lsl	r3, r8, #1
  42030c:	e19400f3 	ldrsh	r0, [r4, r3]
  420310:	fa004875 	blx	4324ec <__aeabi_i2f>
  420314:	e7859106 	str	r9, [r5, r6, lsl #2]
  420318:	e7850108 	str	r0, [r5, r8, lsl #2]
  42031c:	e2869002 	add	r9, r6, #2
  420320:	e1a03089 	lsl	r3, r9, #1
  420324:	e19400f3 	ldrsh	r0, [r4, r3]
  420328:	fa00486f 	blx	4324ec <__aeabi_i2f>
  42032c:	e1a0b000 	mov	fp, r0
  420330:	e2868003 	add	r8, r6, #3
  420334:	e1a03088 	lsl	r3, r8, #1
  420338:	e19400f3 	ldrsh	r0, [r4, r3]
  42033c:	fa00486a 	blx	4324ec <__aeabi_i2f>
  420340:	e785b109 	str	fp, [r5, r9, lsl #2]
  420344:	e7850108 	str	r0, [r5, r8, lsl #2]
  420348:	e2866004 	add	r6, r6, #4
  42034c:	ea000000 	b	420354 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x2d8>
  420350:	e3a06000 	mov	r6, #0
  420354:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  420358:	e2483004 	sub	r3, r8, #4
  42035c:	e1530006 	cmp	r3, r6
  420360:	aaffffe3 	bge	4202f4 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x278>
  420364:	ea000004 	b	42037c <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x300>
  420368:	e1a03086 	lsl	r3, r6, #1
  42036c:	e19400f3 	ldrsh	r0, [r4, r3]
  420370:	fa00485d 	blx	4324ec <__aeabi_i2f>
  420374:	e7850106 	str	r0, [r5, r6, lsl #2]
  420378:	e2866001 	add	r6, r6, #1
  42037c:	e1560008 	cmp	r6, r8
  420380:	bafffff8 	blt	420368 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x2ec>
  420384:	e084408a 	add	r4, r4, sl, lsl #1
  420388:	e0855107 	add	r5, r5, r7, lsl #2
  42038c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  420390:	e2432001 	sub	r2, r3, #1
  420394:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  420398:	e3530000 	cmp	r3, #0
  42039c:	1affffeb 	bne	420350 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x2d4>
  4203a0:	ea000055 	b	4204fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x480>
  4203a4:	e1a0a121 	lsr	sl, r1, #2
  4203a8:	ea000020 	b	420430 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x3b4>
  4203ac:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  4203b0:	fa00484d 	blx	4324ec <__aeabi_i2f>
  4203b4:	e1a09000 	mov	r9, r0
  4203b8:	e2868001 	add	r8, r6, #1
  4203bc:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  4203c0:	fa004849 	blx	4324ec <__aeabi_i2f>
  4203c4:	e7859106 	str	r9, [r5, r6, lsl #2]
  4203c8:	e7850108 	str	r0, [r5, r8, lsl #2]
  4203cc:	e2869002 	add	r9, r6, #2
  4203d0:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  4203d4:	fa004844 	blx	4324ec <__aeabi_i2f>
  4203d8:	e1a0b000 	mov	fp, r0
  4203dc:	e2868003 	add	r8, r6, #3
  4203e0:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  4203e4:	fa004840 	blx	4324ec <__aeabi_i2f>
  4203e8:	e785b109 	str	fp, [r5, r9, lsl #2]
  4203ec:	e7850108 	str	r0, [r5, r8, lsl #2]
  4203f0:	e2866004 	add	r6, r6, #4
  4203f4:	ea000000 	b	4203fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x380>
  4203f8:	e3a06000 	mov	r6, #0
  4203fc:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  420400:	e2483004 	sub	r3, r8, #4
  420404:	e1530006 	cmp	r3, r6
  420408:	aaffffe7 	bge	4203ac <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x330>
  42040c:	ea000003 	b	420420 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x3a4>
  420410:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  420414:	fa004834 	blx	4324ec <__aeabi_i2f>
  420418:	e7850106 	str	r0, [r5, r6, lsl #2]
  42041c:	e2866001 	add	r6, r6, #1
  420420:	e1560008 	cmp	r6, r8
  420424:	bafffff9 	blt	420410 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x394>
  420428:	e084410a 	add	r4, r4, sl, lsl #2
  42042c:	e0855107 	add	r5, r5, r7, lsl #2
  420430:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  420434:	e2432001 	sub	r2, r3, #1
  420438:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  42043c:	e3530000 	cmp	r3, #0
  420440:	1affffec 	bne	4203f8 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x37c>
  420444:	ea00002c 	b	4204fc <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x480>
  420448:	e1a0a1a1 	lsr	sl, r1, #3
  42044c:	ea000025 	b	4204e8 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x46c>
  420450:	e0843186 	add	r3, r4, r6, lsl #3
  420454:	e8930003 	ldm	r3, {r0, r1}
  420458:	fa00479e 	blx	4322d8 <__aeabi_d2f>
  42045c:	e1a09000 	mov	r9, r0
  420460:	e2868001 	add	r8, r6, #1
  420464:	e0843188 	add	r3, r4, r8, lsl #3
  420468:	e8930003 	ldm	r3, {r0, r1}
  42046c:	fa004799 	blx	4322d8 <__aeabi_d2f>
  420470:	e7859106 	str	r9, [r5, r6, lsl #2]
  420474:	e7850108 	str	r0, [r5, r8, lsl #2]
  420478:	e2869002 	add	r9, r6, #2
  42047c:	e0843189 	add	r3, r4, r9, lsl #3
  420480:	e8930003 	ldm	r3, {r0, r1}
  420484:	fa004793 	blx	4322d8 <__aeabi_d2f>
  420488:	e1a0b000 	mov	fp, r0
  42048c:	e2868003 	add	r8, r6, #3
  420490:	e0843188 	add	r3, r4, r8, lsl #3
  420494:	e8930003 	ldm	r3, {r0, r1}
  420498:	fa00478e 	blx	4322d8 <__aeabi_d2f>
  42049c:	e785b109 	str	fp, [r5, r9, lsl #2]
  4204a0:	e7850108 	str	r0, [r5, r8, lsl #2]
  4204a4:	e2866004 	add	r6, r6, #4
  4204a8:	ea000000 	b	4204b0 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x434>
  4204ac:	e3a06000 	mov	r6, #0
  4204b0:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  4204b4:	e2483004 	sub	r3, r8, #4
  4204b8:	e1530006 	cmp	r3, r6
  4204bc:	aaffffe3 	bge	420450 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x3d4>
  4204c0:	ea000004 	b	4204d8 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x45c>
  4204c4:	e0843186 	add	r3, r4, r6, lsl #3
  4204c8:	e8930003 	ldm	r3, {r0, r1}
  4204cc:	fa004781 	blx	4322d8 <__aeabi_d2f>
  4204d0:	e7850106 	str	r0, [r5, r6, lsl #2]
  4204d4:	e2866001 	add	r6, r6, #1
  4204d8:	e1560008 	cmp	r6, r8
  4204dc:	bafffff8 	blt	4204c4 <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x448>
  4204e0:	e084418a 	add	r4, r4, sl, lsl #3
  4204e4:	e0855107 	add	r5, r5, r7, lsl #2
  4204e8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  4204ec:	e2432001 	sub	r2, r3, #1
  4204f0:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4204f4:	e3530000 	cmp	r3, #0
  4204f8:	1affffeb 	bne	4204ac <_ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei+0x430>
  4204fc:	e3a00000 	mov	r0, #0
  420500:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420504:	e12fff1e 	bx	lr
  420508:	00020fa8 	.word	0x00020fa8
  42050c:	000000d0 	.word	0x000000d0

00420510 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei>:
  420510:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420514:	e24dd014 	sub	sp, sp, #20
  420518:	e1a04000 	mov	r4, r0
  42051c:	e1a05002 	mov	r5, r2
  420520:	e59fa578 	ldr	sl, [pc, #1400]	; 420aa0 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x590>
  420524:	e08fa00a 	add	sl, pc, sl
  420528:	e1a031a3 	lsr	r3, r3, #3
  42052c:	e58d3008 	str	r3, [sp, #8]
  420530:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
  420534:	e2033007 	and	r3, r3, #7
  420538:	e3530005 	cmp	r3, #5
  42053c:	908ff103 	addls	pc, pc, r3, lsl #2
  420540:	ea000152 	b	420a90 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x580>
  420544:	ea000004 	b	42055c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x4c>
  420548:	ea000043 	b	42065c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x14c>
  42054c:	ea000082 	b	42075c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x24c>
  420550:	ea0000b7 	b	420834 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x324>
  420554:	ea0000ec 	b	42090c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x3fc>
  420558:	ea00011c 	b	4209d0 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x4c0>
  42055c:	e58d100c 	str	r1, [sp, #12]
  420560:	ea000037 	b	420644 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x134>
  420564:	e7d43008 	ldrb	r3, [r4, r8]
  420568:	e2833080 	add	r3, r3, #128	; 0x80
  42056c:	e59f2530 	ldr	r2, [pc, #1328]	; 420aa4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x594>
  420570:	e79a9002 	ldr	r9, [sl, r2]
  420574:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  420578:	fa0045cb 	blx	431cac <__aeabi_f2d>
  42057c:	e1a06000 	mov	r6, r0
  420580:	e1a07001 	mov	r7, r1
  420584:	e288b001 	add	fp, r8, #1
  420588:	e7d4300b 	ldrb	r3, [r4, fp]
  42058c:	e2833080 	add	r3, r3, #128	; 0x80
  420590:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  420594:	fa0045c4 	blx	431cac <__aeabi_f2d>
  420598:	e0853188 	add	r3, r5, r8, lsl #3
  42059c:	e88300c0 	stm	r3, {r6, r7}
  4205a0:	e085b18b 	add	fp, r5, fp, lsl #3
  4205a4:	e88b0003 	stm	fp, {r0, r1}
  4205a8:	e2887002 	add	r7, r8, #2
  4205ac:	e7d43007 	ldrb	r3, [r4, r7]
  4205b0:	e2833080 	add	r3, r3, #128	; 0x80
  4205b4:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  4205b8:	fa0045bb 	blx	431cac <__aeabi_f2d>
  4205bc:	e88d0003 	stm	sp, {r0, r1}
  4205c0:	e2886003 	add	r6, r8, #3
  4205c4:	e7d43006 	ldrb	r3, [r4, r6]
  4205c8:	e2833080 	add	r3, r3, #128	; 0x80
  4205cc:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  4205d0:	fa0045b5 	blx	431cac <__aeabi_f2d>
  4205d4:	e0857187 	add	r7, r5, r7, lsl #3
  4205d8:	e89d000c 	ldm	sp, {r2, r3}
  4205dc:	e887000c 	stm	r7, {r2, r3}
  4205e0:	e0856186 	add	r6, r5, r6, lsl #3
  4205e4:	e8860003 	stm	r6, {r0, r1}
  4205e8:	e2888004 	add	r8, r8, #4
  4205ec:	ea000000 	b	4205f4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0xe4>
  4205f0:	e3a08000 	mov	r8, #0
  4205f4:	e59d6038 	ldr	r6, [sp, #56]	; 0x38
  4205f8:	e2463004 	sub	r3, r6, #4
  4205fc:	e1530008 	cmp	r3, r8
  420600:	aaffffd7 	bge	420564 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x54>
  420604:	ea000008 	b	42062c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x11c>
  420608:	e7d43008 	ldrb	r3, [r4, r8]
  42060c:	e2833080 	add	r3, r3, #128	; 0x80
  420610:	e59f248c 	ldr	r2, [pc, #1164]	; 420aa4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x594>
  420614:	e79a2002 	ldr	r2, [sl, r2]
  420618:	e7920103 	ldr	r0, [r2, r3, lsl #2]
  42061c:	fa0045a2 	blx	431cac <__aeabi_f2d>
  420620:	e0853188 	add	r3, r5, r8, lsl #3
  420624:	e8830003 	stm	r3, {r0, r1}
  420628:	e2888001 	add	r8, r8, #1
  42062c:	e1580006 	cmp	r8, r6
  420630:	bafffff4 	blt	420608 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0xf8>
  420634:	e59d300c 	ldr	r3, [sp, #12]
  420638:	e0844003 	add	r4, r4, r3
  42063c:	e59d3008 	ldr	r3, [sp, #8]
  420640:	e0855183 	add	r5, r5, r3, lsl #3
  420644:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  420648:	e2432001 	sub	r2, r3, #1
  42064c:	e58d203c 	str	r2, [sp, #60]	; 0x3c
  420650:	e3530000 	cmp	r3, #0
  420654:	1affffe5 	bne	4205f0 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0xe0>
  420658:	ea00010c 	b	420a90 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x580>
  42065c:	e58d100c 	str	r1, [sp, #12]
  420660:	ea000037 	b	420744 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x234>
  420664:	e7d43008 	ldrb	r3, [r4, r8]
  420668:	e2833080 	add	r3, r3, #128	; 0x80
  42066c:	e59f2430 	ldr	r2, [pc, #1072]	; 420aa4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x594>
  420670:	e79a9002 	ldr	r9, [sl, r2]
  420674:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  420678:	fa00458b 	blx	431cac <__aeabi_f2d>
  42067c:	e1a06000 	mov	r6, r0
  420680:	e1a07001 	mov	r7, r1
  420684:	e288b001 	add	fp, r8, #1
  420688:	e7d4300b 	ldrb	r3, [r4, fp]
  42068c:	e2833080 	add	r3, r3, #128	; 0x80
  420690:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  420694:	fa004584 	blx	431cac <__aeabi_f2d>
  420698:	e0853188 	add	r3, r5, r8, lsl #3
  42069c:	e88300c0 	stm	r3, {r6, r7}
  4206a0:	e085b18b 	add	fp, r5, fp, lsl #3
  4206a4:	e88b0003 	stm	fp, {r0, r1}
  4206a8:	e2887002 	add	r7, r8, #2
  4206ac:	e7d43007 	ldrb	r3, [r4, r7]
  4206b0:	e2833080 	add	r3, r3, #128	; 0x80
  4206b4:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  4206b8:	fa00457b 	blx	431cac <__aeabi_f2d>
  4206bc:	e88d0003 	stm	sp, {r0, r1}
  4206c0:	e2886003 	add	r6, r8, #3
  4206c4:	e7d43006 	ldrb	r3, [r4, r6]
  4206c8:	e2833080 	add	r3, r3, #128	; 0x80
  4206cc:	e7990103 	ldr	r0, [r9, r3, lsl #2]
  4206d0:	fa004575 	blx	431cac <__aeabi_f2d>
  4206d4:	e0857187 	add	r7, r5, r7, lsl #3
  4206d8:	e89d000c 	ldm	sp, {r2, r3}
  4206dc:	e887000c 	stm	r7, {r2, r3}
  4206e0:	e0856186 	add	r6, r5, r6, lsl #3
  4206e4:	e8860003 	stm	r6, {r0, r1}
  4206e8:	e2888004 	add	r8, r8, #4
  4206ec:	ea000000 	b	4206f4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x1e4>
  4206f0:	e3a08000 	mov	r8, #0
  4206f4:	e59d6038 	ldr	r6, [sp, #56]	; 0x38
  4206f8:	e2463004 	sub	r3, r6, #4
  4206fc:	e1530008 	cmp	r3, r8
  420700:	aaffffd7 	bge	420664 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x154>
  420704:	ea000008 	b	42072c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x21c>
  420708:	e7d43008 	ldrb	r3, [r4, r8]
  42070c:	e2833080 	add	r3, r3, #128	; 0x80
  420710:	e59f238c 	ldr	r2, [pc, #908]	; 420aa4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x594>
  420714:	e79a2002 	ldr	r2, [sl, r2]
  420718:	e7920103 	ldr	r0, [r2, r3, lsl #2]
  42071c:	fa004562 	blx	431cac <__aeabi_f2d>
  420720:	e0853188 	add	r3, r5, r8, lsl #3
  420724:	e8830003 	stm	r3, {r0, r1}
  420728:	e2888001 	add	r8, r8, #1
  42072c:	e1580006 	cmp	r8, r6
  420730:	bafffff4 	blt	420708 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x1f8>
  420734:	e59d300c 	ldr	r3, [sp, #12]
  420738:	e0844003 	add	r4, r4, r3
  42073c:	e59d3008 	ldr	r3, [sp, #8]
  420740:	e0855183 	add	r5, r5, r3, lsl #3
  420744:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  420748:	e2432001 	sub	r2, r3, #1
  42074c:	e58d203c 	str	r2, [sp, #60]	; 0x3c
  420750:	e3530000 	cmp	r3, #0
  420754:	1affffe5 	bne	4206f0 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x1e0>
  420758:	ea0000cc 	b	420a90 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x580>
  42075c:	e1a0b0a1 	lsr	fp, r1, #1
  420760:	ea00002d 	b	42081c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x30c>
  420764:	e1a03088 	lsl	r3, r8, #1
  420768:	e19400b3 	ldrh	r0, [r4, r3]
  42076c:	fa00453d 	blx	431c68 <__aeabi_ui2d>
  420770:	e1a06000 	mov	r6, r0
  420774:	e1a07001 	mov	r7, r1
  420778:	e2889001 	add	r9, r8, #1
  42077c:	e1a03089 	lsl	r3, r9, #1
  420780:	e19400b3 	ldrh	r0, [r4, r3]
  420784:	fa004537 	blx	431c68 <__aeabi_ui2d>
  420788:	e0853188 	add	r3, r5, r8, lsl #3
  42078c:	e88300c0 	stm	r3, {r6, r7}
  420790:	e0859189 	add	r9, r5, r9, lsl #3
  420794:	e8890003 	stm	r9, {r0, r1}
  420798:	e288a002 	add	sl, r8, #2
  42079c:	e1a0308a 	lsl	r3, sl, #1
  4207a0:	e19400b3 	ldrh	r0, [r4, r3]
  4207a4:	fa00452f 	blx	431c68 <__aeabi_ui2d>
  4207a8:	e1a06000 	mov	r6, r0
  4207ac:	e1a07001 	mov	r7, r1
  4207b0:	e2889003 	add	r9, r8, #3
  4207b4:	e1a03089 	lsl	r3, r9, #1
  4207b8:	e19400b3 	ldrh	r0, [r4, r3]
  4207bc:	fa004529 	blx	431c68 <__aeabi_ui2d>
  4207c0:	e085a18a 	add	sl, r5, sl, lsl #3
  4207c4:	e88a00c0 	stm	sl, {r6, r7}
  4207c8:	e0859189 	add	r9, r5, r9, lsl #3
  4207cc:	e8890003 	stm	r9, {r0, r1}
  4207d0:	e2888004 	add	r8, r8, #4
  4207d4:	ea000000 	b	4207dc <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x2cc>
  4207d8:	e3a08000 	mov	r8, #0
  4207dc:	e59d6038 	ldr	r6, [sp, #56]	; 0x38
  4207e0:	e2463004 	sub	r3, r6, #4
  4207e4:	e1530008 	cmp	r3, r8
  4207e8:	aaffffdd 	bge	420764 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x254>
  4207ec:	ea000005 	b	420808 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x2f8>
  4207f0:	e1a03088 	lsl	r3, r8, #1
  4207f4:	e19400b3 	ldrh	r0, [r4, r3]
  4207f8:	fa00451a 	blx	431c68 <__aeabi_ui2d>
  4207fc:	e0853188 	add	r3, r5, r8, lsl #3
  420800:	e8830003 	stm	r3, {r0, r1}
  420804:	e2888001 	add	r8, r8, #1
  420808:	e1580006 	cmp	r8, r6
  42080c:	bafffff7 	blt	4207f0 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x2e0>
  420810:	e084408b 	add	r4, r4, fp, lsl #1
  420814:	e59d3008 	ldr	r3, [sp, #8]
  420818:	e0855183 	add	r5, r5, r3, lsl #3
  42081c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  420820:	e2432001 	sub	r2, r3, #1
  420824:	e58d203c 	str	r2, [sp, #60]	; 0x3c
  420828:	e3530000 	cmp	r3, #0
  42082c:	1affffe9 	bne	4207d8 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x2c8>
  420830:	ea000096 	b	420a90 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x580>
  420834:	e1a0b0a1 	lsr	fp, r1, #1
  420838:	ea00002d 	b	4208f4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x3e4>
  42083c:	e1a03088 	lsl	r3, r8, #1
  420840:	e19400f3 	ldrsh	r0, [r4, r3]
  420844:	fa00450f 	blx	431c88 <__aeabi_i2d>
  420848:	e1a06000 	mov	r6, r0
  42084c:	e1a07001 	mov	r7, r1
  420850:	e2889001 	add	r9, r8, #1
  420854:	e1a03089 	lsl	r3, r9, #1
  420858:	e19400f3 	ldrsh	r0, [r4, r3]
  42085c:	fa004509 	blx	431c88 <__aeabi_i2d>
  420860:	e0853188 	add	r3, r5, r8, lsl #3
  420864:	e88300c0 	stm	r3, {r6, r7}
  420868:	e0859189 	add	r9, r5, r9, lsl #3
  42086c:	e8890003 	stm	r9, {r0, r1}
  420870:	e288a002 	add	sl, r8, #2
  420874:	e1a0308a 	lsl	r3, sl, #1
  420878:	e19400f3 	ldrsh	r0, [r4, r3]
  42087c:	fa004501 	blx	431c88 <__aeabi_i2d>
  420880:	e1a06000 	mov	r6, r0
  420884:	e1a07001 	mov	r7, r1
  420888:	e2889003 	add	r9, r8, #3
  42088c:	e1a03089 	lsl	r3, r9, #1
  420890:	e19400f3 	ldrsh	r0, [r4, r3]
  420894:	fa0044fb 	blx	431c88 <__aeabi_i2d>
  420898:	e085a18a 	add	sl, r5, sl, lsl #3
  42089c:	e88a00c0 	stm	sl, {r6, r7}
  4208a0:	e0859189 	add	r9, r5, r9, lsl #3
  4208a4:	e8890003 	stm	r9, {r0, r1}
  4208a8:	e2888004 	add	r8, r8, #4
  4208ac:	ea000000 	b	4208b4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x3a4>
  4208b0:	e3a08000 	mov	r8, #0
  4208b4:	e59d6038 	ldr	r6, [sp, #56]	; 0x38
  4208b8:	e2463004 	sub	r3, r6, #4
  4208bc:	e1530008 	cmp	r3, r8
  4208c0:	aaffffdd 	bge	42083c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x32c>
  4208c4:	ea000005 	b	4208e0 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x3d0>
  4208c8:	e1a03088 	lsl	r3, r8, #1
  4208cc:	e19400f3 	ldrsh	r0, [r4, r3]
  4208d0:	fa0044ec 	blx	431c88 <__aeabi_i2d>
  4208d4:	e0853188 	add	r3, r5, r8, lsl #3
  4208d8:	e8830003 	stm	r3, {r0, r1}
  4208dc:	e2888001 	add	r8, r8, #1
  4208e0:	e1580006 	cmp	r8, r6
  4208e4:	bafffff7 	blt	4208c8 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x3b8>
  4208e8:	e084408b 	add	r4, r4, fp, lsl #1
  4208ec:	e59d3008 	ldr	r3, [sp, #8]
  4208f0:	e0855183 	add	r5, r5, r3, lsl #3
  4208f4:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  4208f8:	e2432001 	sub	r2, r3, #1
  4208fc:	e58d203c 	str	r2, [sp, #60]	; 0x3c
  420900:	e3530000 	cmp	r3, #0
  420904:	1affffe9 	bne	4208b0 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x3a0>
  420908:	ea000060 	b	420a90 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x580>
  42090c:	e1a0b121 	lsr	fp, r1, #2
  420910:	ea000028 	b	4209b8 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x4a8>
  420914:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  420918:	fa0044da 	blx	431c88 <__aeabi_i2d>
  42091c:	e1a06000 	mov	r6, r0
  420920:	e1a07001 	mov	r7, r1
  420924:	e2889001 	add	r9, r8, #1
  420928:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  42092c:	fa0044d5 	blx	431c88 <__aeabi_i2d>
  420930:	e0853188 	add	r3, r5, r8, lsl #3
  420934:	e88300c0 	stm	r3, {r6, r7}
  420938:	e0859189 	add	r9, r5, r9, lsl #3
  42093c:	e8890003 	stm	r9, {r0, r1}
  420940:	e288a002 	add	sl, r8, #2
  420944:	e794010a 	ldr	r0, [r4, sl, lsl #2]
  420948:	fa0044ce 	blx	431c88 <__aeabi_i2d>
  42094c:	e1a06000 	mov	r6, r0
  420950:	e1a07001 	mov	r7, r1
  420954:	e2889003 	add	r9, r8, #3
  420958:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  42095c:	fa0044c9 	blx	431c88 <__aeabi_i2d>
  420960:	e085a18a 	add	sl, r5, sl, lsl #3
  420964:	e88a00c0 	stm	sl, {r6, r7}
  420968:	e0859189 	add	r9, r5, r9, lsl #3
  42096c:	e8890003 	stm	r9, {r0, r1}
  420970:	e2888004 	add	r8, r8, #4
  420974:	ea000000 	b	42097c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x46c>
  420978:	e3a08000 	mov	r8, #0
  42097c:	e59d6038 	ldr	r6, [sp, #56]	; 0x38
  420980:	e2463004 	sub	r3, r6, #4
  420984:	e1530008 	cmp	r3, r8
  420988:	aaffffe1 	bge	420914 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x404>
  42098c:	ea000004 	b	4209a4 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x494>
  420990:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  420994:	fa0044bb 	blx	431c88 <__aeabi_i2d>
  420998:	e0853188 	add	r3, r5, r8, lsl #3
  42099c:	e8830003 	stm	r3, {r0, r1}
  4209a0:	e2888001 	add	r8, r8, #1
  4209a4:	e1580006 	cmp	r8, r6
  4209a8:	bafffff8 	blt	420990 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x480>
  4209ac:	e084410b 	add	r4, r4, fp, lsl #2
  4209b0:	e59d3008 	ldr	r3, [sp, #8]
  4209b4:	e0855183 	add	r5, r5, r3, lsl #3
  4209b8:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  4209bc:	e2432001 	sub	r2, r3, #1
  4209c0:	e58d203c 	str	r2, [sp, #60]	; 0x3c
  4209c4:	e3530000 	cmp	r3, #0
  4209c8:	1affffea 	bne	420978 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x468>
  4209cc:	ea00002f 	b	420a90 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x580>
  4209d0:	e1a0b121 	lsr	fp, r1, #2
  4209d4:	ea000028 	b	420a7c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x56c>
  4209d8:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  4209dc:	fa0044b2 	blx	431cac <__aeabi_f2d>
  4209e0:	e1a06000 	mov	r6, r0
  4209e4:	e1a07001 	mov	r7, r1
  4209e8:	e2889001 	add	r9, r8, #1
  4209ec:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  4209f0:	fa0044ad 	blx	431cac <__aeabi_f2d>
  4209f4:	e0853188 	add	r3, r5, r8, lsl #3
  4209f8:	e88300c0 	stm	r3, {r6, r7}
  4209fc:	e0859189 	add	r9, r5, r9, lsl #3
  420a00:	e8890003 	stm	r9, {r0, r1}
  420a04:	e288a002 	add	sl, r8, #2
  420a08:	e794010a 	ldr	r0, [r4, sl, lsl #2]
  420a0c:	fa0044a6 	blx	431cac <__aeabi_f2d>
  420a10:	e1a06000 	mov	r6, r0
  420a14:	e1a07001 	mov	r7, r1
  420a18:	e2889003 	add	r9, r8, #3
  420a1c:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  420a20:	fa0044a1 	blx	431cac <__aeabi_f2d>
  420a24:	e085a18a 	add	sl, r5, sl, lsl #3
  420a28:	e88a00c0 	stm	sl, {r6, r7}
  420a2c:	e0859189 	add	r9, r5, r9, lsl #3
  420a30:	e8890003 	stm	r9, {r0, r1}
  420a34:	e2888004 	add	r8, r8, #4
  420a38:	ea000000 	b	420a40 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x530>
  420a3c:	e3a08000 	mov	r8, #0
  420a40:	e59d6038 	ldr	r6, [sp, #56]	; 0x38
  420a44:	e2463004 	sub	r3, r6, #4
  420a48:	e1530008 	cmp	r3, r8
  420a4c:	aaffffe1 	bge	4209d8 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x4c8>
  420a50:	ea000004 	b	420a68 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x558>
  420a54:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  420a58:	fa004493 	blx	431cac <__aeabi_f2d>
  420a5c:	e0853188 	add	r3, r5, r8, lsl #3
  420a60:	e8830003 	stm	r3, {r0, r1}
  420a64:	e2888001 	add	r8, r8, #1
  420a68:	e1580006 	cmp	r8, r6
  420a6c:	bafffff8 	blt	420a54 <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x544>
  420a70:	e084410b 	add	r4, r4, fp, lsl #2
  420a74:	e59d3008 	ldr	r3, [sp, #8]
  420a78:	e0855183 	add	r5, r5, r3, lsl #3
  420a7c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  420a80:	e2432001 	sub	r2, r3, #1
  420a84:	e58d203c 	str	r2, [sp, #60]	; 0x3c
  420a88:	e3530000 	cmp	r3, #0
  420a8c:	1affffea 	bne	420a3c <_ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei+0x52c>
  420a90:	e3a00000 	mov	r0, #0
  420a94:	e28dd014 	add	sp, sp, #20
  420a98:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420a9c:	e12fff1e 	bx	lr
  420aa0:	00020b10 	.word	0x00020b10
  420aa4:	000000d0 	.word	0x000000d0

00420aa8 <_ZL15icvCvt_32f64f_fPKfPdi>:
  420aa8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420aac:	e1a05000 	mov	r5, r0
  420ab0:	e1a08001 	mov	r8, r1
  420ab4:	e1a09002 	mov	r9, r2
  420ab8:	e3a04000 	mov	r4, #0
  420abc:	ea000017 	b	420b20 <_ZL15icvCvt_32f64f_fPKfPdi+0x78>
  420ac0:	e7950104 	ldr	r0, [r5, r4, lsl #2]
  420ac4:	fa004478 	blx	431cac <__aeabi_f2d>
  420ac8:	e1a06000 	mov	r6, r0
  420acc:	e1a07001 	mov	r7, r1
  420ad0:	e284a001 	add	sl, r4, #1
  420ad4:	e795010a 	ldr	r0, [r5, sl, lsl #2]
  420ad8:	fa004473 	blx	431cac <__aeabi_f2d>
  420adc:	e0883184 	add	r3, r8, r4, lsl #3
  420ae0:	e88300c0 	stm	r3, {r6, r7}
  420ae4:	e088a18a 	add	sl, r8, sl, lsl #3
  420ae8:	e88a0003 	stm	sl, {r0, r1}
  420aec:	e284b002 	add	fp, r4, #2
  420af0:	e795010b 	ldr	r0, [r5, fp, lsl #2]
  420af4:	fa00446c 	blx	431cac <__aeabi_f2d>
  420af8:	e1a06000 	mov	r6, r0
  420afc:	e1a07001 	mov	r7, r1
  420b00:	e284a003 	add	sl, r4, #3
  420b04:	e795010a 	ldr	r0, [r5, sl, lsl #2]
  420b08:	fa004467 	blx	431cac <__aeabi_f2d>
  420b0c:	e088b18b 	add	fp, r8, fp, lsl #3
  420b10:	e88b00c0 	stm	fp, {r6, r7}
  420b14:	e088a18a 	add	sl, r8, sl, lsl #3
  420b18:	e88a0003 	stm	sl, {r0, r1}
  420b1c:	e2844004 	add	r4, r4, #4
  420b20:	e2493004 	sub	r3, r9, #4
  420b24:	e1530004 	cmp	r3, r4
  420b28:	aaffffe4 	bge	420ac0 <_ZL15icvCvt_32f64f_fPKfPdi+0x18>
  420b2c:	ea000004 	b	420b44 <_ZL15icvCvt_32f64f_fPKfPdi+0x9c>
  420b30:	e0886184 	add	r6, r8, r4, lsl #3
  420b34:	e7950104 	ldr	r0, [r5, r4, lsl #2]
  420b38:	fa00445b 	blx	431cac <__aeabi_f2d>
  420b3c:	e8860003 	stm	r6, {r0, r1}
  420b40:	e2844001 	add	r4, r4, #1
  420b44:	e1540009 	cmp	r4, r9
  420b48:	bafffff8 	blt	420b30 <_ZL15icvCvt_32f64f_fPKfPdi+0x88>
  420b4c:	e3a00000 	mov	r0, #0
  420b50:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420b54:	e12fff1e 	bx	lr

00420b58 <_ZL15icvCvt_64f32f_fPKdPfi>:
  420b58:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420b5c:	e1a05000 	mov	r5, r0
  420b60:	e1a08001 	mov	r8, r1
  420b64:	e1a09002 	mov	r9, r2
  420b68:	e3a04000 	mov	r4, #0
  420b6c:	ea000017 	b	420bd0 <_ZL15icvCvt_64f32f_fPKdPfi+0x78>
  420b70:	e0853184 	add	r3, r5, r4, lsl #3
  420b74:	e284a001 	add	sl, r4, #1
  420b78:	e085218a 	add	r2, r5, sl, lsl #3
  420b7c:	e89200c0 	ldm	r2, {r6, r7}
  420b80:	e8930003 	ldm	r3, {r0, r1}
  420b84:	fa0045d3 	blx	4322d8 <__aeabi_d2f>
  420b88:	e7880104 	str	r0, [r8, r4, lsl #2]
  420b8c:	e1a00006 	mov	r0, r6
  420b90:	e1a01007 	mov	r1, r7
  420b94:	fa0045cf 	blx	4322d8 <__aeabi_d2f>
  420b98:	e788010a 	str	r0, [r8, sl, lsl #2]
  420b9c:	e284b002 	add	fp, r4, #2
  420ba0:	e085318b 	add	r3, r5, fp, lsl #3
  420ba4:	e284a003 	add	sl, r4, #3
  420ba8:	e085218a 	add	r2, r5, sl, lsl #3
  420bac:	e89200c0 	ldm	r2, {r6, r7}
  420bb0:	e8930003 	ldm	r3, {r0, r1}
  420bb4:	fa0045c7 	blx	4322d8 <__aeabi_d2f>
  420bb8:	e788010b 	str	r0, [r8, fp, lsl #2]
  420bbc:	e1a00006 	mov	r0, r6
  420bc0:	e1a01007 	mov	r1, r7
  420bc4:	fa0045c3 	blx	4322d8 <__aeabi_d2f>
  420bc8:	e788010a 	str	r0, [r8, sl, lsl #2]
  420bcc:	e2844004 	add	r4, r4, #4
  420bd0:	e2493004 	sub	r3, r9, #4
  420bd4:	e1530004 	cmp	r3, r4
  420bd8:	aaffffe4 	bge	420b70 <_ZL15icvCvt_64f32f_fPKdPfi+0x18>
  420bdc:	ea000004 	b	420bf4 <_ZL15icvCvt_64f32f_fPKdPfi+0x9c>
  420be0:	e0853184 	add	r3, r5, r4, lsl #3
  420be4:	e8930003 	ldm	r3, {r0, r1}
  420be8:	fa0045ba 	blx	4322d8 <__aeabi_d2f>
  420bec:	e7880104 	str	r0, [r8, r4, lsl #2]
  420bf0:	e2844001 	add	r4, r4, #1
  420bf4:	e1540009 	cmp	r4, r9
  420bf8:	bafffff8 	blt	420be0 <_ZL15icvCvt_64f32f_fPKdPfi+0x88>
  420bfc:	e3a00000 	mov	r0, #0
  420c00:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420c04:	e12fff1e 	bx	lr

00420c08 <_ZL20icvInitCvtToC1RTableP11CvFuncTable>:
  420c08:	e92d4008 	push	{r3, lr}
  420c0c:	e3500000 	cmp	r0, #0
  420c10:	1a000007 	bne	420c34 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0x2c>
  420c14:	e59f0074 	ldr	r0, [pc, #116]	; 420c90 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0x88>
  420c18:	e08f0000 	add	r0, pc, r0
  420c1c:	e59f1070 	ldr	r1, [pc, #112]	; 420c94 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0x8c>
  420c20:	e59f2070 	ldr	r2, [pc, #112]	; 420c98 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0x90>
  420c24:	e08f2002 	add	r2, pc, r2
  420c28:	e59f306c 	ldr	r3, [pc, #108]	; 420c9c <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0x94>
  420c2c:	e08f3003 	add	r3, pc, r3
  420c30:	fa004c47 	blx	433d54 <__assert_func>
  420c34:	e59f3064 	ldr	r3, [pc, #100]	; 420ca0 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0x98>
  420c38:	e08f3003 	add	r3, pc, r3
  420c3c:	e5803000 	str	r3, [r0]
  420c40:	e59f305c 	ldr	r3, [pc, #92]	; 420ca4 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0x9c>
  420c44:	e08f3003 	add	r3, pc, r3
  420c48:	e5803004 	str	r3, [r0, #4]
  420c4c:	e59f3054 	ldr	r3, [pc, #84]	; 420ca8 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0xa0>
  420c50:	e08f3003 	add	r3, pc, r3
  420c54:	e5803008 	str	r3, [r0, #8]
  420c58:	e59f304c 	ldr	r3, [pc, #76]	; 420cac <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0xa4>
  420c5c:	e08f3003 	add	r3, pc, r3
  420c60:	e580300c 	str	r3, [r0, #12]
  420c64:	e59f3044 	ldr	r3, [pc, #68]	; 420cb0 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0xa8>
  420c68:	e08f3003 	add	r3, pc, r3
  420c6c:	e5803010 	str	r3, [r0, #16]
  420c70:	e59f303c 	ldr	r3, [pc, #60]	; 420cb4 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0xac>
  420c74:	e08f3003 	add	r3, pc, r3
  420c78:	e5803014 	str	r3, [r0, #20]
  420c7c:	e59f3034 	ldr	r3, [pc, #52]	; 420cb8 <_ZL20icvInitCvtToC1RTableP11CvFuncTable+0xb0>
  420c80:	e08f3003 	add	r3, pc, r3
  420c84:	e5803018 	str	r3, [r0, #24]
  420c88:	e8bd4008 	pop	{r3, lr}
  420c8c:	e12fff1e 	bx	lr
  420c90:	0001f4a4 	.word	0x0001f4a4
  420c94:	000005ca 	.word	0x000005ca
  420c98:	0001f150 	.word	0x0001f150
  420c9c:	0001f4ac 	.word	0x0001f4ac
  420ca0:	00003454 	.word	0x00003454
  420ca4:	00002af8 	.word	0x00002af8
  420ca8:	00002338 	.word	0x00002338
  420cac:	00001b50 	.word	0x00001b50
  420cb0:	000016b0 	.word	0x000016b0
  420cb4:	fffff400 	.word	0xfffff400
  420cb8:	fffff888 	.word	0xfffff888

00420cbc <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable>:
  420cbc:	e92d4008 	push	{r3, lr}
  420cc0:	e3500000 	cmp	r0, #0
  420cc4:	1a000008 	bne	420cec <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0x30>
  420cc8:	e59f0078 	ldr	r0, [pc, #120]	; 420d48 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0x8c>
  420ccc:	e08f0000 	add	r0, pc, r0
  420cd0:	e59f1074 	ldr	r1, [pc, #116]	; 420d4c <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0x90>
  420cd4:	e59f2074 	ldr	r2, [pc, #116]	; 420d50 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0x94>
  420cd8:	e08f2002 	add	r2, pc, r2
  420cdc:	e2822028 	add	r2, r2, #40	; 0x28
  420ce0:	e59f306c 	ldr	r3, [pc, #108]	; 420d54 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0x98>
  420ce4:	e08f3003 	add	r3, pc, r3
  420ce8:	fa004c19 	blx	433d54 <__assert_func>
  420cec:	e59f3064 	ldr	r3, [pc, #100]	; 420d58 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0x9c>
  420cf0:	e08f3003 	add	r3, pc, r3
  420cf4:	e5803000 	str	r3, [r0]
  420cf8:	e59f305c 	ldr	r3, [pc, #92]	; 420d5c <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0xa0>
  420cfc:	e08f3003 	add	r3, pc, r3
  420d00:	e5803004 	str	r3, [r0, #4]
  420d04:	e59f3054 	ldr	r3, [pc, #84]	; 420d60 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0xa4>
  420d08:	e08f3003 	add	r3, pc, r3
  420d0c:	e5803008 	str	r3, [r0, #8]
  420d10:	e59f304c 	ldr	r3, [pc, #76]	; 420d64 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0xa8>
  420d14:	e08f3003 	add	r3, pc, r3
  420d18:	e580300c 	str	r3, [r0, #12]
  420d1c:	e59f3044 	ldr	r3, [pc, #68]	; 420d68 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0xac>
  420d20:	e08f3003 	add	r3, pc, r3
  420d24:	e5803010 	str	r3, [r0, #16]
  420d28:	e59f303c 	ldr	r3, [pc, #60]	; 420d6c <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0xb0>
  420d2c:	e08f3003 	add	r3, pc, r3
  420d30:	e5803014 	str	r3, [r0, #20]
  420d34:	e59f3034 	ldr	r3, [pc, #52]	; 420d70 <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable+0xb4>
  420d38:	e08f3003 	add	r3, pc, r3
  420d3c:	e5803018 	str	r3, [r0, #24]
  420d40:	e8bd4008 	pop	{r3, lr}
  420d44:	e12fff1e 	bx	lr
  420d48:	0001f3f0 	.word	0x0001f3f0
  420d4c:	0000053a 	.word	0x0000053a
  420d50:	0001f09c 	.word	0x0001f09c
  420d54:	0001f3f4 	.word	0x0001f3f4
  420d58:	00003c40 	.word	0x00003c40
  420d5c:	000056dc 	.word	0x000056dc
  420d60:	00009c80 	.word	0x00009c80
  420d64:	0000b7f0 	.word	0x0000b7f0
  420d68:	00007d04 	.word	0x00007d04
  420d6c:	00008f98 	.word	0x00008f98
  420d70:	00007234 	.word	0x00007234

00420d74 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi>:
  420d74:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  420d78:	e24ddf4b 	sub	sp, sp, #300	; 0x12c
  420d7c:	e1a05000 	mov	r5, r0
  420d80:	e1a09001 	mov	r9, r1
  420d84:	e1a06002 	mov	r6, r2
  420d88:	e58d3020 	str	r3, [sp, #32]
  420d8c:	e59d3158 	ldr	r3, [sp, #344]	; 0x158
  420d90:	e58d3014 	str	r3, [sp, #20]
  420d94:	e59d315c 	ldr	r3, [sp, #348]	; 0x15c
  420d98:	e58d3018 	str	r3, [sp, #24]
  420d9c:	e59d3160 	ldr	r3, [sp, #352]	; 0x160
  420da0:	e58d301c 	str	r3, [sp, #28]
  420da4:	e59d4164 	ldr	r4, [sp, #356]	; 0x164
  420da8:	e59d3168 	ldr	r3, [sp, #360]	; 0x168
  420dac:	e2037007 	and	r7, r3, #7
  420db0:	e2033f7e 	and	r3, r3, #504	; 0x1f8
  420db4:	e1a031c3 	asr	r3, r3, #3
  420db8:	e59d8150 	ldr	r8, [sp, #336]	; 0x150
  420dbc:	e0288893 	mla	r8, r3, r8, r8
  420dc0:	e58d8150 	str	r8, [sp, #336]	; 0x150
  420dc4:	e3570006 	cmp	r7, #6
  420dc8:	908ff107 	addls	pc, pc, r7, lsl #2
  420dcc:	ea000546 	b	4222ec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1578>
  420dd0:	ea000020 	b	420e58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xe4>
  420dd4:	ea00001f 	b	420e58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xe4>
  420dd8:	ea000059 	b	420f44 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1d0>
  420ddc:	ea0001d5 	b	421538 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x7c4>
  420de0:	ea000368 	b	421b88 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xe14>
  420de4:	ea00040c 	b	421e1c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x10a8>
  420de8:	ea0004a5 	b	422084 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1310>
  420dec:	e1a00007 	mov	r0, r7
  420df0:	e3c41102 	bic	r1, r4, #-2147483648	; 0x80000000
  420df4:	e3a02000 	mov	r2, #0
  420df8:	e59f3f58 	ldr	r3, [pc, #3928]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  420dfc:	fa0042fb 	blx	4319f0 <__adddf3>
  420e00:	fa00429c 	blx	431878 <floor>
  420e04:	fa00451f 	blx	432288 <__aeabi_d2iz>
  420e08:	e3d030ff 	bics	r3, r0, #255	; 0xff
  420e0c:	0a000004 	beq	420e24 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb0>
  420e10:	e3500000 	cmp	r0, #0
  420e14:	c3a000ff 	movgt	r0, #255	; 0xff
  420e18:	ca000002 	bgt	420e28 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb4>
  420e1c:	e3a00000 	mov	r0, #0
  420e20:	ea000000 	b	420e28 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb4>
  420e24:	e20000ff 	and	r0, r0, #255	; 0xff
  420e28:	e28d3f4a 	add	r3, sp, #296	; 0x128
  420e2c:	e0833008 	add	r3, r3, r8
  420e30:	e5430100 	strb	r0, [r3, #-256]	; 0x100
  420e34:	e2888001 	add	r8, r8, #1
  420e38:	e1a00007 	mov	r0, r7
  420e3c:	e1a01004 	mov	r1, r4
  420e40:	e1a0200a 	mov	r2, sl
  420e44:	e1a0300b 	mov	r3, fp
  420e48:	fa0042e8 	blx	4319f0 <__adddf3>
  420e4c:	e1a07000 	mov	r7, r0
  420e50:	e1a04001 	mov	r4, r1
  420e54:	ea000004 	b	420e6c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xf8>
  420e58:	e3a08000 	mov	r8, #0
  420e5c:	e58d7024 	str	r7, [sp, #36]	; 0x24
  420e60:	e59da014 	ldr	sl, [sp, #20]
  420e64:	e59db018 	ldr	fp, [sp, #24]
  420e68:	e59d701c 	ldr	r7, [sp, #28]
  420e6c:	e358007f 	cmp	r8, #127	; 0x7f
  420e70:	daffffdd 	ble	420dec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x78>
  420e74:	e58d701c 	str	r7, [sp, #28]
  420e78:	e59d7024 	ldr	r7, [sp, #36]	; 0x24
  420e7c:	e3570001 	cmp	r7, #1
  420e80:	1a00001f 	bne	420f04 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x190>
  420e84:	e2844102 	add	r4, r4, #-2147483648	; 0x80000000
  420e88:	e59da014 	ldr	sl, [sp, #20]
  420e8c:	e59db018 	ldr	fp, [sp, #24]
  420e90:	e59d701c 	ldr	r7, [sp, #28]
  420e94:	ea00001d 	b	420f10 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x19c>
  420e98:	e1a00007 	mov	r0, r7
  420e9c:	e3c41102 	bic	r1, r4, #-2147483648	; 0x80000000
  420ea0:	e3a02000 	mov	r2, #0
  420ea4:	e59f3eac 	ldr	r3, [pc, #3756]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  420ea8:	fa0042d0 	blx	4319f0 <__adddf3>
  420eac:	fa004271 	blx	431878 <floor>
  420eb0:	fa0044f4 	blx	432288 <__aeabi_d2iz>
  420eb4:	e3d030ff 	bics	r3, r0, #255	; 0xff
  420eb8:	0a000004 	beq	420ed0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x15c>
  420ebc:	e3500000 	cmp	r0, #0
  420ec0:	c3a000ff 	movgt	r0, #255	; 0xff
  420ec4:	ca000002 	bgt	420ed4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x160>
  420ec8:	e3a00000 	mov	r0, #0
  420ecc:	ea000000 	b	420ed4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x160>
  420ed0:	e20000ff 	and	r0, r0, #255	; 0xff
  420ed4:	e28d3f4a 	add	r3, sp, #296	; 0x128
  420ed8:	e0833008 	add	r3, r3, r8
  420edc:	e5430100 	strb	r0, [r3, #-256]	; 0x100
  420ee0:	e2888001 	add	r8, r8, #1
  420ee4:	e1a00007 	mov	r0, r7
  420ee8:	e1a01004 	mov	r1, r4
  420eec:	e1a0200a 	mov	r2, sl
  420ef0:	e1a0300b 	mov	r3, fp
  420ef4:	fa0042bd 	blx	4319f0 <__adddf3>
  420ef8:	e1a07000 	mov	r7, r0
  420efc:	e1a04001 	mov	r4, r1
  420f00:	ea000002 	b	420f10 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x19c>
  420f04:	e59da014 	ldr	sl, [sp, #20]
  420f08:	e59db018 	ldr	fp, [sp, #24]
  420f0c:	e59d701c 	ldr	r7, [sp, #28]
  420f10:	e35800ff 	cmp	r8, #255	; 0xff
  420f14:	daffffdf 	ble	420e98 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x124>
  420f18:	e28d3f53 	add	r3, sp, #332	; 0x14c
  420f1c:	e9930003 	ldmib	r3, {r0, r1}
  420f20:	e88d0003 	stm	sp, {r0, r1}
  420f24:	e28d3028 	add	r3, sp, #40	; 0x28
  420f28:	e58d3008 	str	r3, [sp, #8]
  420f2c:	e1a00005 	mov	r0, r5
  420f30:	e1a01009 	mov	r1, r9
  420f34:	e1a02006 	mov	r2, r6
  420f38:	e59d3020 	ldr	r3, [sp, #32]
  420f3c:	eb003d37 	bl	430420 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_>
  420f40:	ea0004f2 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  420f44:	e59d0014 	ldr	r0, [sp, #20]
  420f48:	e59d3018 	ldr	r3, [sp, #24]
  420f4c:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  420f50:	e3a02000 	mov	r2, #0
  420f54:	e59f3e00 	ldr	r3, [pc, #3584]	; 421d5c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe8>
  420f58:	fa0044bb 	blx	43224c <__aeabi_dcmple>
  420f5c:	e3500000 	cmp	r0, #0
  420f60:	0a0000d5 	beq	4212bc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x548>
  420f64:	e59d001c 	ldr	r0, [sp, #28]
  420f68:	e3c41102 	bic	r1, r4, #-2147483648	; 0x80000000
  420f6c:	e3a02000 	mov	r2, #0
  420f70:	e59f3de8 	ldr	r3, [pc, #3560]	; 421d60 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfec>
  420f74:	fa0044af 	blx	432238 <__aeabi_dcmplt>
  420f78:	e3500000 	cmp	r0, #0
  420f7c:	0a0000ce 	beq	4212bc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x548>
  420f80:	e59d0014 	ldr	r0, [sp, #20]
  420f84:	e59d1018 	ldr	r1, [sp, #24]
  420f88:	e3a02000 	mov	r2, #0
  420f8c:	e59f3dd0 	ldr	r3, [pc, #3536]	; 421d64 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xff0>
  420f90:	fa00436f 	blx	431d54 <__aeabi_dmul>
  420f94:	e3a02000 	mov	r2, #0
  420f98:	e59f3db8 	ldr	r3, [pc, #3512]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  420f9c:	fa004293 	blx	4319f0 <__adddf3>
  420fa0:	fa004234 	blx	431878 <floor>
  420fa4:	fa0044b7 	blx	432288 <__aeabi_d2iz>
  420fa8:	e350000f 	cmp	r0, #15
  420fac:	1a000054 	bne	421104 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x390>
  420fb0:	e1a090a9 	lsr	r9, r9, #1
  420fb4:	e59d0020 	ldr	r0, [sp, #32]
  420fb8:	ea00004b 	b	4210ec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x378>
  420fbc:	e1a02003 	mov	r2, r3
  420fc0:	e1a0c083 	lsl	ip, r3, #1
  420fc4:	e2831001 	add	r1, r3, #1
  420fc8:	e1a04081 	lsl	r4, r1, #1
  420fcc:	e195e0bc 	ldrh	lr, [r5, ip]
  420fd0:	e195c0b4 	ldrh	ip, [r5, r4]
  420fd4:	e0864003 	add	r4, r6, r3
  420fd8:	e3de70ff 	bics	r7, lr, #255	; 0xff
  420fdc:	0a000004 	beq	420ff4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x280>
  420fe0:	e35e0000 	cmp	lr, #0
  420fe4:	c3a0e0ff 	movgt	lr, #255	; 0xff
  420fe8:	ca000002 	bgt	420ff8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x284>
  420fec:	e3a0e000 	mov	lr, #0
  420ff0:	ea000000 	b	420ff8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x284>
  420ff4:	e20ee0ff 	and	lr, lr, #255	; 0xff
  420ff8:	e5c4e000 	strb	lr, [r4]
  420ffc:	e0861001 	add	r1, r6, r1
  421000:	e3dce0ff 	bics	lr, ip, #255	; 0xff
  421004:	0a000004 	beq	42101c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x2a8>
  421008:	e35c0000 	cmp	ip, #0
  42100c:	c3a0c0ff 	movgt	ip, #255	; 0xff
  421010:	ca000002 	bgt	421020 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x2ac>
  421014:	e3a0c000 	mov	ip, #0
  421018:	ea000000 	b	421020 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x2ac>
  42101c:	e20cc0ff 	and	ip, ip, #255	; 0xff
  421020:	e5c1c000 	strb	ip, [r1]
  421024:	e2821002 	add	r1, r2, #2
  421028:	e1a0e081 	lsl	lr, r1, #1
  42102c:	e2822003 	add	r2, r2, #3
  421030:	e1a0c082 	lsl	ip, r2, #1
  421034:	e195e0be 	ldrh	lr, [r5, lr]
  421038:	e195c0bc 	ldrh	ip, [r5, ip]
  42103c:	e0861001 	add	r1, r6, r1
  421040:	e3de40ff 	bics	r4, lr, #255	; 0xff
  421044:	0a000004 	beq	42105c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x2e8>
  421048:	e35e0000 	cmp	lr, #0
  42104c:	c3a0e0ff 	movgt	lr, #255	; 0xff
  421050:	ca000002 	bgt	421060 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x2ec>
  421054:	e3a0e000 	mov	lr, #0
  421058:	ea000000 	b	421060 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x2ec>
  42105c:	e20ee0ff 	and	lr, lr, #255	; 0xff
  421060:	e5c1e000 	strb	lr, [r1]
  421064:	e0862002 	add	r2, r6, r2
  421068:	e3dc10ff 	bics	r1, ip, #255	; 0xff
  42106c:	0a000004 	beq	421084 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x310>
  421070:	e35c0000 	cmp	ip, #0
  421074:	c3a0c0ff 	movgt	ip, #255	; 0xff
  421078:	ca000002 	bgt	421088 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x314>
  42107c:	e3a0c000 	mov	ip, #0
  421080:	ea000000 	b	421088 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x314>
  421084:	e20cc0ff 	and	ip, ip, #255	; 0xff
  421088:	e5c2c000 	strb	ip, [r2]
  42108c:	e2833004 	add	r3, r3, #4
  421090:	ea000000 	b	421098 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x324>
  421094:	e3a03000 	mov	r3, #0
  421098:	e2482004 	sub	r2, r8, #4
  42109c:	e1520003 	cmp	r2, r3
  4210a0:	aaffffc5 	bge	420fbc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x248>
  4210a4:	ea00000c 	b	4210dc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x368>
  4210a8:	e1a02083 	lsl	r2, r3, #1
  4210ac:	e19520b2 	ldrh	r2, [r5, r2]
  4210b0:	e0861003 	add	r1, r6, r3
  4210b4:	e3d2c0ff 	bics	ip, r2, #255	; 0xff
  4210b8:	0a000004 	beq	4210d0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x35c>
  4210bc:	e3520000 	cmp	r2, #0
  4210c0:	c3a020ff 	movgt	r2, #255	; 0xff
  4210c4:	ca000002 	bgt	4210d4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x360>
  4210c8:	e3a02000 	mov	r2, #0
  4210cc:	ea000000 	b	4210d4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x360>
  4210d0:	e20220ff 	and	r2, r2, #255	; 0xff
  4210d4:	e5c12000 	strb	r2, [r1]
  4210d8:	e2833001 	add	r3, r3, #1
  4210dc:	e1530008 	cmp	r3, r8
  4210e0:	bafffff0 	blt	4210a8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x334>
  4210e4:	e0855089 	add	r5, r5, r9, lsl #1
  4210e8:	e0866000 	add	r6, r6, r0
  4210ec:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  4210f0:	e2432001 	sub	r2, r3, #1
  4210f4:	e58d2154 	str	r2, [sp, #340]	; 0x154
  4210f8:	e3530000 	cmp	r3, #0
  4210fc:	1affffe4 	bne	421094 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x320>
  421100:	ea000482 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  421104:	e1a090a9 	lsr	r9, r9, #1
  421108:	e59d1020 	ldr	r1, [sp, #32]
  42110c:	ea000064 	b	4212a4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x530>
  421110:	e1a0c002 	mov	ip, r2
  421114:	e1a03082 	lsl	r3, r2, #1
  421118:	e19540b3 	ldrh	r4, [r5, r3]
  42111c:	e0040490 	mul	r4, r0, r4
  421120:	e2844901 	add	r4, r4, #16384	; 0x4000
  421124:	e1a047c4 	asr	r4, r4, #15
  421128:	e282e001 	add	lr, r2, #1
  42112c:	e1a0308e 	lsl	r3, lr, #1
  421130:	e19530b3 	ldrh	r3, [r5, r3]
  421134:	e0030390 	mul	r3, r0, r3
  421138:	e2833901 	add	r3, r3, #16384	; 0x4000
  42113c:	e1a037c3 	asr	r3, r3, #15
  421140:	e3540000 	cmp	r4, #0
  421144:	b2644000 	rsblt	r4, r4, #0
  421148:	e3530000 	cmp	r3, #0
  42114c:	b2633000 	rsblt	r3, r3, #0
  421150:	e0867002 	add	r7, r6, r2
  421154:	e3d4a0ff 	bics	sl, r4, #255	; 0xff
  421158:	0a000004 	beq	421170 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x3fc>
  42115c:	e3540000 	cmp	r4, #0
  421160:	c3a040ff 	movgt	r4, #255	; 0xff
  421164:	ca000002 	bgt	421174 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x400>
  421168:	e3a04000 	mov	r4, #0
  42116c:	ea000000 	b	421174 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x400>
  421170:	e20440ff 	and	r4, r4, #255	; 0xff
  421174:	e5c74000 	strb	r4, [r7]
  421178:	e086e00e 	add	lr, r6, lr
  42117c:	e3d340ff 	bics	r4, r3, #255	; 0xff
  421180:	0a000004 	beq	421198 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x424>
  421184:	e3530000 	cmp	r3, #0
  421188:	c3a030ff 	movgt	r3, #255	; 0xff
  42118c:	ca000002 	bgt	42119c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x428>
  421190:	e3a03000 	mov	r3, #0
  421194:	ea000000 	b	42119c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x428>
  421198:	e20330ff 	and	r3, r3, #255	; 0xff
  42119c:	e5ce3000 	strb	r3, [lr]
  4211a0:	e28ce002 	add	lr, ip, #2
  4211a4:	e1a0308e 	lsl	r3, lr, #1
  4211a8:	e19540b3 	ldrh	r4, [r5, r3]
  4211ac:	e0040490 	mul	r4, r0, r4
  4211b0:	e2844901 	add	r4, r4, #16384	; 0x4000
  4211b4:	e1a047c4 	asr	r4, r4, #15
  4211b8:	e28cc003 	add	ip, ip, #3
  4211bc:	e1a0308c 	lsl	r3, ip, #1
  4211c0:	e19530b3 	ldrh	r3, [r5, r3]
  4211c4:	e0030390 	mul	r3, r0, r3
  4211c8:	e2833901 	add	r3, r3, #16384	; 0x4000
  4211cc:	e1a037c3 	asr	r3, r3, #15
  4211d0:	e3540000 	cmp	r4, #0
  4211d4:	b2644000 	rsblt	r4, r4, #0
  4211d8:	e3530000 	cmp	r3, #0
  4211dc:	b2633000 	rsblt	r3, r3, #0
  4211e0:	e086e00e 	add	lr, r6, lr
  4211e4:	e3d470ff 	bics	r7, r4, #255	; 0xff
  4211e8:	0a000004 	beq	421200 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x48c>
  4211ec:	e3540000 	cmp	r4, #0
  4211f0:	c3a040ff 	movgt	r4, #255	; 0xff
  4211f4:	ca000002 	bgt	421204 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x490>
  4211f8:	e3a04000 	mov	r4, #0
  4211fc:	ea000000 	b	421204 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x490>
  421200:	e20440ff 	and	r4, r4, #255	; 0xff
  421204:	e5ce4000 	strb	r4, [lr]
  421208:	e086c00c 	add	ip, r6, ip
  42120c:	e3d3e0ff 	bics	lr, r3, #255	; 0xff
  421210:	0a000004 	beq	421228 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x4b4>
  421214:	e3530000 	cmp	r3, #0
  421218:	c3a030ff 	movgt	r3, #255	; 0xff
  42121c:	ca000002 	bgt	42122c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x4b8>
  421220:	e3a03000 	mov	r3, #0
  421224:	ea000000 	b	42122c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x4b8>
  421228:	e20330ff 	and	r3, r3, #255	; 0xff
  42122c:	e5cc3000 	strb	r3, [ip]
  421230:	e2822004 	add	r2, r2, #4
  421234:	ea000000 	b	42123c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x4c8>
  421238:	e3a02000 	mov	r2, #0
  42123c:	e2483004 	sub	r3, r8, #4
  421240:	e1530002 	cmp	r3, r2
  421244:	aaffffb1 	bge	421110 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x39c>
  421248:	ea000011 	b	421294 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x520>
  42124c:	e1a03082 	lsl	r3, r2, #1
  421250:	e19530b3 	ldrh	r3, [r5, r3]
  421254:	e0030390 	mul	r3, r0, r3
  421258:	e2833901 	add	r3, r3, #16384	; 0x4000
  42125c:	e1a037c3 	asr	r3, r3, #15
  421260:	e3530000 	cmp	r3, #0
  421264:	b2633000 	rsblt	r3, r3, #0
  421268:	e086c002 	add	ip, r6, r2
  42126c:	e3d3e0ff 	bics	lr, r3, #255	; 0xff
  421270:	0a000004 	beq	421288 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x514>
  421274:	e3530000 	cmp	r3, #0
  421278:	c3a030ff 	movgt	r3, #255	; 0xff
  42127c:	ca000002 	bgt	42128c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x518>
  421280:	e3a03000 	mov	r3, #0
  421284:	ea000000 	b	42128c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x518>
  421288:	e20330ff 	and	r3, r3, #255	; 0xff
  42128c:	e5cc3000 	strb	r3, [ip]
  421290:	e2822001 	add	r2, r2, #1
  421294:	e1520008 	cmp	r2, r8
  421298:	baffffeb 	blt	42124c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x4d8>
  42129c:	e0855089 	add	r5, r5, r9, lsl #1
  4212a0:	e0866001 	add	r6, r6, r1
  4212a4:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  4212a8:	e2432001 	sub	r2, r3, #1
  4212ac:	e58d2154 	str	r2, [sp, #340]	; 0x154
  4212b0:	e3530000 	cmp	r3, #0
  4212b4:	1affffdf 	bne	421238 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x4c4>
  4212b8:	ea000414 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  4212bc:	e1a030a9 	lsr	r3, r9, #1
  4212c0:	e58d3024 	str	r3, [sp, #36]	; 0x24
  4212c4:	ea000095 	b	421520 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x7ac>
  4212c8:	e1a09007 	mov	r9, r7
  4212cc:	e1a03087 	lsl	r3, r7, #1
  4212d0:	e19500b3 	ldrh	r0, [r5, r3]
  4212d4:	fa00426b 	blx	431c88 <__aeabi_i2d>
  4212d8:	e59d2014 	ldr	r2, [sp, #20]
  4212dc:	e59d3018 	ldr	r3, [sp, #24]
  4212e0:	fa00429b 	blx	431d54 <__aeabi_dmul>
  4212e4:	e59d201c 	ldr	r2, [sp, #28]
  4212e8:	e1a03004 	mov	r3, r4
  4212ec:	fa0041bf 	blx	4319f0 <__adddf3>
  4212f0:	e3a02000 	mov	r2, #0
  4212f4:	e59f3a5c 	ldr	r3, [pc, #2652]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  4212f8:	fa0041bc 	blx	4319f0 <__adddf3>
  4212fc:	fa00415d 	blx	431878 <floor>
  421300:	fa0043e0 	blx	432288 <__aeabi_d2iz>
  421304:	e1a0a000 	mov	sl, r0
  421308:	e287b001 	add	fp, r7, #1
  42130c:	e1a0308b 	lsl	r3, fp, #1
  421310:	e19500b3 	ldrh	r0, [r5, r3]
  421314:	fa00425b 	blx	431c88 <__aeabi_i2d>
  421318:	e59d2014 	ldr	r2, [sp, #20]
  42131c:	e59d3018 	ldr	r3, [sp, #24]
  421320:	fa00428b 	blx	431d54 <__aeabi_dmul>
  421324:	e59d201c 	ldr	r2, [sp, #28]
  421328:	e1a03004 	mov	r3, r4
  42132c:	fa0041af 	blx	4319f0 <__adddf3>
  421330:	e3a02000 	mov	r2, #0
  421334:	e59f3a1c 	ldr	r3, [pc, #2588]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421338:	fa0041ac 	blx	4319f0 <__adddf3>
  42133c:	fa00414d 	blx	431878 <floor>
  421340:	fa0043d0 	blx	432288 <__aeabi_d2iz>
  421344:	e35a0000 	cmp	sl, #0
  421348:	b26aa000 	rsblt	sl, sl, #0
  42134c:	e3500000 	cmp	r0, #0
  421350:	b2600000 	rsblt	r0, r0, #0
  421354:	e0863007 	add	r3, r6, r7
  421358:	e3da20ff 	bics	r2, sl, #255	; 0xff
  42135c:	0a000004 	beq	421374 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x600>
  421360:	e35a0000 	cmp	sl, #0
  421364:	c3a0a0ff 	movgt	sl, #255	; 0xff
  421368:	ca000002 	bgt	421378 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x604>
  42136c:	e3a0a000 	mov	sl, #0
  421370:	ea000000 	b	421378 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x604>
  421374:	e20aa0ff 	and	sl, sl, #255	; 0xff
  421378:	e5c3a000 	strb	sl, [r3]
  42137c:	e086b00b 	add	fp, r6, fp
  421380:	e3d030ff 	bics	r3, r0, #255	; 0xff
  421384:	0a000004 	beq	42139c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x628>
  421388:	e3500000 	cmp	r0, #0
  42138c:	c3a000ff 	movgt	r0, #255	; 0xff
  421390:	ca000002 	bgt	4213a0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x62c>
  421394:	e3a00000 	mov	r0, #0
  421398:	ea000000 	b	4213a0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x62c>
  42139c:	e20000ff 	and	r0, r0, #255	; 0xff
  4213a0:	e5cb0000 	strb	r0, [fp]
  4213a4:	e289b002 	add	fp, r9, #2
  4213a8:	e1a0308b 	lsl	r3, fp, #1
  4213ac:	e19500b3 	ldrh	r0, [r5, r3]
  4213b0:	fa004234 	blx	431c88 <__aeabi_i2d>
  4213b4:	e59d2014 	ldr	r2, [sp, #20]
  4213b8:	e59d3018 	ldr	r3, [sp, #24]
  4213bc:	fa004264 	blx	431d54 <__aeabi_dmul>
  4213c0:	e59d201c 	ldr	r2, [sp, #28]
  4213c4:	e1a03004 	mov	r3, r4
  4213c8:	fa004188 	blx	4319f0 <__adddf3>
  4213cc:	e3a02000 	mov	r2, #0
  4213d0:	e59f3980 	ldr	r3, [pc, #2432]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  4213d4:	fa004185 	blx	4319f0 <__adddf3>
  4213d8:	fa004126 	blx	431878 <floor>
  4213dc:	fa0043a9 	blx	432288 <__aeabi_d2iz>
  4213e0:	e1a0a000 	mov	sl, r0
  4213e4:	e2899003 	add	r9, r9, #3
  4213e8:	e1a03089 	lsl	r3, r9, #1
  4213ec:	e19500b3 	ldrh	r0, [r5, r3]
  4213f0:	fa004224 	blx	431c88 <__aeabi_i2d>
  4213f4:	e59d2014 	ldr	r2, [sp, #20]
  4213f8:	e59d3018 	ldr	r3, [sp, #24]
  4213fc:	fa004254 	blx	431d54 <__aeabi_dmul>
  421400:	e59d201c 	ldr	r2, [sp, #28]
  421404:	e1a03004 	mov	r3, r4
  421408:	fa004178 	blx	4319f0 <__adddf3>
  42140c:	e3a02000 	mov	r2, #0
  421410:	e59f3940 	ldr	r3, [pc, #2368]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421414:	fa004175 	blx	4319f0 <__adddf3>
  421418:	fa004116 	blx	431878 <floor>
  42141c:	fa004399 	blx	432288 <__aeabi_d2iz>
  421420:	e35a0000 	cmp	sl, #0
  421424:	b26aa000 	rsblt	sl, sl, #0
  421428:	e3500000 	cmp	r0, #0
  42142c:	b2600000 	rsblt	r0, r0, #0
  421430:	e086b00b 	add	fp, r6, fp
  421434:	e3da30ff 	bics	r3, sl, #255	; 0xff
  421438:	0a000004 	beq	421450 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x6dc>
  42143c:	e35a0000 	cmp	sl, #0
  421440:	c3a0a0ff 	movgt	sl, #255	; 0xff
  421444:	ca000002 	bgt	421454 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x6e0>
  421448:	e3a0a000 	mov	sl, #0
  42144c:	ea000000 	b	421454 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x6e0>
  421450:	e20aa0ff 	and	sl, sl, #255	; 0xff
  421454:	e5cba000 	strb	sl, [fp]
  421458:	e0869009 	add	r9, r6, r9
  42145c:	e3d030ff 	bics	r3, r0, #255	; 0xff
  421460:	0a000004 	beq	421478 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x704>
  421464:	e3500000 	cmp	r0, #0
  421468:	c3a000ff 	movgt	r0, #255	; 0xff
  42146c:	ca000002 	bgt	42147c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x708>
  421470:	e3a00000 	mov	r0, #0
  421474:	ea000000 	b	42147c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x708>
  421478:	e20000ff 	and	r0, r0, #255	; 0xff
  42147c:	e5c90000 	strb	r0, [r9]
  421480:	e2877004 	add	r7, r7, #4
  421484:	ea000000 	b	42148c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x718>
  421488:	e3a07000 	mov	r7, #0
  42148c:	e2483004 	sub	r3, r8, #4
  421490:	e1530007 	cmp	r3, r7
  421494:	aaffff8b 	bge	4212c8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x554>
  421498:	ea00001a 	b	421508 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x794>
  42149c:	e1a03087 	lsl	r3, r7, #1
  4214a0:	e19500b3 	ldrh	r0, [r5, r3]
  4214a4:	fa0041f7 	blx	431c88 <__aeabi_i2d>
  4214a8:	e59d2014 	ldr	r2, [sp, #20]
  4214ac:	e59d3018 	ldr	r3, [sp, #24]
  4214b0:	fa004227 	blx	431d54 <__aeabi_dmul>
  4214b4:	e59d201c 	ldr	r2, [sp, #28]
  4214b8:	e1a03004 	mov	r3, r4
  4214bc:	fa00414b 	blx	4319f0 <__adddf3>
  4214c0:	e3a02000 	mov	r2, #0
  4214c4:	e59f388c 	ldr	r3, [pc, #2188]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  4214c8:	fa004148 	blx	4319f0 <__adddf3>
  4214cc:	fa0040e9 	blx	431878 <floor>
  4214d0:	fa00436c 	blx	432288 <__aeabi_d2iz>
  4214d4:	e3500000 	cmp	r0, #0
  4214d8:	b2600000 	rsblt	r0, r0, #0
  4214dc:	e0863007 	add	r3, r6, r7
  4214e0:	e3d020ff 	bics	r2, r0, #255	; 0xff
  4214e4:	0a000004 	beq	4214fc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x788>
  4214e8:	e3500000 	cmp	r0, #0
  4214ec:	c3a000ff 	movgt	r0, #255	; 0xff
  4214f0:	ca000002 	bgt	421500 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x78c>
  4214f4:	e3a00000 	mov	r0, #0
  4214f8:	ea000000 	b	421500 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x78c>
  4214fc:	e20000ff 	and	r0, r0, #255	; 0xff
  421500:	e5c30000 	strb	r0, [r3]
  421504:	e2877001 	add	r7, r7, #1
  421508:	e1570008 	cmp	r7, r8
  42150c:	baffffe2 	blt	42149c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x728>
  421510:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  421514:	e0855083 	add	r5, r5, r3, lsl #1
  421518:	e59d3020 	ldr	r3, [sp, #32]
  42151c:	e0866003 	add	r6, r6, r3
  421520:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  421524:	e2432001 	sub	r2, r3, #1
  421528:	e58d2154 	str	r2, [sp, #340]	; 0x154
  42152c:	e3530000 	cmp	r3, #0
  421530:	1affffd4 	bne	421488 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x714>
  421534:	ea000375 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  421538:	e59d0014 	ldr	r0, [sp, #20]
  42153c:	e59d3018 	ldr	r3, [sp, #24]
  421540:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  421544:	e3a02000 	mov	r2, #0
  421548:	e59f380c 	ldr	r3, [pc, #2060]	; 421d5c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe8>
  42154c:	fa00433e 	blx	43224c <__aeabi_dcmple>
  421550:	e3500000 	cmp	r0, #0
  421554:	0a0000ec 	beq	42190c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb98>
  421558:	e59d001c 	ldr	r0, [sp, #28]
  42155c:	e3c41102 	bic	r1, r4, #-2147483648	; 0x80000000
  421560:	e59f2800 	ldr	r2, [pc, #2048]	; 421d68 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xff4>
  421564:	e59f3800 	ldr	r3, [pc, #2048]	; 421d6c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xff8>
  421568:	fa004337 	blx	43224c <__aeabi_dcmple>
  42156c:	e3500000 	cmp	r0, #0
  421570:	0a0000e5 	beq	42190c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb98>
  421574:	e59d0014 	ldr	r0, [sp, #20]
  421578:	e59d1018 	ldr	r1, [sp, #24]
  42157c:	e3a02000 	mov	r2, #0
  421580:	e59f37dc 	ldr	r3, [pc, #2012]	; 421d64 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xff0>
  421584:	fa0041f2 	blx	431d54 <__aeabi_dmul>
  421588:	e3a02000 	mov	r2, #0
  42158c:	e59f37c4 	ldr	r3, [pc, #1988]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421590:	fa004116 	blx	4319f0 <__adddf3>
  421594:	fa0040b7 	blx	431878 <floor>
  421598:	fa00433a 	blx	432288 <__aeabi_d2iz>
  42159c:	e1a07000 	mov	r7, r0
  4215a0:	e59d001c 	ldr	r0, [sp, #28]
  4215a4:	e1a01004 	mov	r1, r4
  4215a8:	e3a02000 	mov	r2, #0
  4215ac:	e59f37b0 	ldr	r3, [pc, #1968]	; 421d64 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xff0>
  4215b0:	fa0041e7 	blx	431d54 <__aeabi_dmul>
  4215b4:	e3a02000 	mov	r2, #0
  4215b8:	e59f3798 	ldr	r3, [pc, #1944]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  4215bc:	fa00410b 	blx	4319f0 <__adddf3>
  4215c0:	fa0040ac 	blx	431878 <floor>
  4215c4:	fa00432f 	blx	432288 <__aeabi_d2iz>
  4215c8:	e1a02000 	mov	r2, r0
  4215cc:	e357000f 	cmp	r7, #15
  4215d0:	03500000 	cmpeq	r0, #0
  4215d4:	1a00005e 	bne	421754 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x9e0>
  4215d8:	e1a090a9 	lsr	r9, r9, #1
  4215dc:	e59d0020 	ldr	r0, [sp, #32]
  4215e0:	ea000055 	b	42173c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x9c8>
  4215e4:	e1a0c003 	mov	ip, r3
  4215e8:	e1a02083 	lsl	r2, r3, #1
  4215ec:	e19510f2 	ldrsh	r1, [r5, r2]
  4215f0:	e283e001 	add	lr, r3, #1
  4215f4:	e1a0208e 	lsl	r2, lr, #1
  4215f8:	e19520f2 	ldrsh	r2, [r5, r2]
  4215fc:	e3510000 	cmp	r1, #0
  421600:	b2611000 	rsblt	r1, r1, #0
  421604:	e3520000 	cmp	r2, #0
  421608:	b2622000 	rsblt	r2, r2, #0
  42160c:	e0864003 	add	r4, r6, r3
  421610:	e3d170ff 	bics	r7, r1, #255	; 0xff
  421614:	0a000004 	beq	42162c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x8b8>
  421618:	e3510000 	cmp	r1, #0
  42161c:	c3a010ff 	movgt	r1, #255	; 0xff
  421620:	ca000002 	bgt	421630 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x8bc>
  421624:	e3a01000 	mov	r1, #0
  421628:	ea000000 	b	421630 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x8bc>
  42162c:	e20110ff 	and	r1, r1, #255	; 0xff
  421630:	e5c41000 	strb	r1, [r4]
  421634:	e086e00e 	add	lr, r6, lr
  421638:	e3d210ff 	bics	r1, r2, #255	; 0xff
  42163c:	0a000004 	beq	421654 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x8e0>
  421640:	e3520000 	cmp	r2, #0
  421644:	c3a020ff 	movgt	r2, #255	; 0xff
  421648:	ca000002 	bgt	421658 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x8e4>
  42164c:	e3a02000 	mov	r2, #0
  421650:	ea000000 	b	421658 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x8e4>
  421654:	e20220ff 	and	r2, r2, #255	; 0xff
  421658:	e5ce2000 	strb	r2, [lr]
  42165c:	e28ce002 	add	lr, ip, #2
  421660:	e1a0208e 	lsl	r2, lr, #1
  421664:	e19510f2 	ldrsh	r1, [r5, r2]
  421668:	e28cc003 	add	ip, ip, #3
  42166c:	e1a0208c 	lsl	r2, ip, #1
  421670:	e19520f2 	ldrsh	r2, [r5, r2]
  421674:	e3510000 	cmp	r1, #0
  421678:	b2611000 	rsblt	r1, r1, #0
  42167c:	e3520000 	cmp	r2, #0
  421680:	b2622000 	rsblt	r2, r2, #0
  421684:	e086e00e 	add	lr, r6, lr
  421688:	e3d140ff 	bics	r4, r1, #255	; 0xff
  42168c:	0a000004 	beq	4216a4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x930>
  421690:	e3510000 	cmp	r1, #0
  421694:	c3a010ff 	movgt	r1, #255	; 0xff
  421698:	ca000002 	bgt	4216a8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x934>
  42169c:	e3a01000 	mov	r1, #0
  4216a0:	ea000000 	b	4216a8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x934>
  4216a4:	e20110ff 	and	r1, r1, #255	; 0xff
  4216a8:	e5ce1000 	strb	r1, [lr]
  4216ac:	e086c00c 	add	ip, r6, ip
  4216b0:	e3d210ff 	bics	r1, r2, #255	; 0xff
  4216b4:	0a000004 	beq	4216cc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x958>
  4216b8:	e3520000 	cmp	r2, #0
  4216bc:	c3a020ff 	movgt	r2, #255	; 0xff
  4216c0:	ca000002 	bgt	4216d0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x95c>
  4216c4:	e3a02000 	mov	r2, #0
  4216c8:	ea000000 	b	4216d0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x95c>
  4216cc:	e20220ff 	and	r2, r2, #255	; 0xff
  4216d0:	e5cc2000 	strb	r2, [ip]
  4216d4:	e2833004 	add	r3, r3, #4
  4216d8:	ea000000 	b	4216e0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x96c>
  4216dc:	e3a03000 	mov	r3, #0
  4216e0:	e2482004 	sub	r2, r8, #4
  4216e4:	e1520003 	cmp	r2, r3
  4216e8:	aaffffbd 	bge	4215e4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x870>
  4216ec:	ea00000e 	b	42172c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x9b8>
  4216f0:	e1a02083 	lsl	r2, r3, #1
  4216f4:	e19520f2 	ldrsh	r2, [r5, r2]
  4216f8:	e3520000 	cmp	r2, #0
  4216fc:	b2622000 	rsblt	r2, r2, #0
  421700:	e0861003 	add	r1, r6, r3
  421704:	e3d2c0ff 	bics	ip, r2, #255	; 0xff
  421708:	0a000004 	beq	421720 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x9ac>
  42170c:	e3520000 	cmp	r2, #0
  421710:	c3a020ff 	movgt	r2, #255	; 0xff
  421714:	ca000002 	bgt	421724 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x9b0>
  421718:	e3a02000 	mov	r2, #0
  42171c:	ea000000 	b	421724 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x9b0>
  421720:	e20220ff 	and	r2, r2, #255	; 0xff
  421724:	e5c12000 	strb	r2, [r1]
  421728:	e2833001 	add	r3, r3, #1
  42172c:	e1530008 	cmp	r3, r8
  421730:	baffffee 	blt	4216f0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x97c>
  421734:	e0855089 	add	r5, r5, r9, lsl #1
  421738:	e0866000 	add	r6, r6, r0
  42173c:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  421740:	e2432001 	sub	r2, r3, #1
  421744:	e58d2154 	str	r2, [sp, #340]	; 0x154
  421748:	e3530000 	cmp	r3, #0
  42174c:	1affffe2 	bne	4216dc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x968>
  421750:	ea0002ee 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  421754:	e1a090a9 	lsr	r9, r9, #1
  421758:	e59d0020 	ldr	r0, [sp, #32]
  42175c:	ea000064 	b	4218f4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb80>
  421760:	e1a0c001 	mov	ip, r1
  421764:	e1a03081 	lsl	r3, r1, #1
  421768:	e19540f3 	ldrsh	r4, [r5, r3]
  42176c:	e0242497 	mla	r4, r7, r4, r2
  421770:	e2844901 	add	r4, r4, #16384	; 0x4000
  421774:	e1a047c4 	asr	r4, r4, #15
  421778:	e281e001 	add	lr, r1, #1
  42177c:	e1a0308e 	lsl	r3, lr, #1
  421780:	e19530f3 	ldrsh	r3, [r5, r3]
  421784:	e0232397 	mla	r3, r7, r3, r2
  421788:	e2833901 	add	r3, r3, #16384	; 0x4000
  42178c:	e1a037c3 	asr	r3, r3, #15
  421790:	e3540000 	cmp	r4, #0
  421794:	b2644000 	rsblt	r4, r4, #0
  421798:	e3530000 	cmp	r3, #0
  42179c:	b2633000 	rsblt	r3, r3, #0
  4217a0:	e086a001 	add	sl, r6, r1
  4217a4:	e3d4b0ff 	bics	fp, r4, #255	; 0xff
  4217a8:	0a000004 	beq	4217c0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xa4c>
  4217ac:	e3540000 	cmp	r4, #0
  4217b0:	c3a040ff 	movgt	r4, #255	; 0xff
  4217b4:	ca000002 	bgt	4217c4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xa50>
  4217b8:	e3a04000 	mov	r4, #0
  4217bc:	ea000000 	b	4217c4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xa50>
  4217c0:	e20440ff 	and	r4, r4, #255	; 0xff
  4217c4:	e5ca4000 	strb	r4, [sl]
  4217c8:	e086e00e 	add	lr, r6, lr
  4217cc:	e3d340ff 	bics	r4, r3, #255	; 0xff
  4217d0:	0a000004 	beq	4217e8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xa74>
  4217d4:	e3530000 	cmp	r3, #0
  4217d8:	c3a030ff 	movgt	r3, #255	; 0xff
  4217dc:	ca000002 	bgt	4217ec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xa78>
  4217e0:	e3a03000 	mov	r3, #0
  4217e4:	ea000000 	b	4217ec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xa78>
  4217e8:	e20330ff 	and	r3, r3, #255	; 0xff
  4217ec:	e5ce3000 	strb	r3, [lr]
  4217f0:	e28ce002 	add	lr, ip, #2
  4217f4:	e1a0308e 	lsl	r3, lr, #1
  4217f8:	e19540f3 	ldrsh	r4, [r5, r3]
  4217fc:	e0242497 	mla	r4, r7, r4, r2
  421800:	e2844901 	add	r4, r4, #16384	; 0x4000
  421804:	e1a047c4 	asr	r4, r4, #15
  421808:	e28cc003 	add	ip, ip, #3
  42180c:	e1a0308c 	lsl	r3, ip, #1
  421810:	e19530f3 	ldrsh	r3, [r5, r3]
  421814:	e0232397 	mla	r3, r7, r3, r2
  421818:	e2833901 	add	r3, r3, #16384	; 0x4000
  42181c:	e1a037c3 	asr	r3, r3, #15
  421820:	e3540000 	cmp	r4, #0
  421824:	b2644000 	rsblt	r4, r4, #0
  421828:	e3530000 	cmp	r3, #0
  42182c:	b2633000 	rsblt	r3, r3, #0
  421830:	e086e00e 	add	lr, r6, lr
  421834:	e3d4a0ff 	bics	sl, r4, #255	; 0xff
  421838:	0a000004 	beq	421850 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xadc>
  42183c:	e3540000 	cmp	r4, #0
  421840:	c3a040ff 	movgt	r4, #255	; 0xff
  421844:	ca000002 	bgt	421854 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xae0>
  421848:	e3a04000 	mov	r4, #0
  42184c:	ea000000 	b	421854 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xae0>
  421850:	e20440ff 	and	r4, r4, #255	; 0xff
  421854:	e5ce4000 	strb	r4, [lr]
  421858:	e086c00c 	add	ip, r6, ip
  42185c:	e3d3e0ff 	bics	lr, r3, #255	; 0xff
  421860:	0a000004 	beq	421878 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb04>
  421864:	e3530000 	cmp	r3, #0
  421868:	c3a030ff 	movgt	r3, #255	; 0xff
  42186c:	ca000002 	bgt	42187c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb08>
  421870:	e3a03000 	mov	r3, #0
  421874:	ea000000 	b	42187c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb08>
  421878:	e20330ff 	and	r3, r3, #255	; 0xff
  42187c:	e5cc3000 	strb	r3, [ip]
  421880:	e2811004 	add	r1, r1, #4
  421884:	ea000000 	b	42188c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb18>
  421888:	e3a01000 	mov	r1, #0
  42188c:	e2483004 	sub	r3, r8, #4
  421890:	e1530001 	cmp	r3, r1
  421894:	aaffffb1 	bge	421760 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x9ec>
  421898:	ea000011 	b	4218e4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb70>
  42189c:	e1a03081 	lsl	r3, r1, #1
  4218a0:	e19530f3 	ldrsh	r3, [r5, r3]
  4218a4:	e0232397 	mla	r3, r7, r3, r2
  4218a8:	e2833901 	add	r3, r3, #16384	; 0x4000
  4218ac:	e1a037c3 	asr	r3, r3, #15
  4218b0:	e3530000 	cmp	r3, #0
  4218b4:	b2633000 	rsblt	r3, r3, #0
  4218b8:	e086c001 	add	ip, r6, r1
  4218bc:	e3d3e0ff 	bics	lr, r3, #255	; 0xff
  4218c0:	0a000004 	beq	4218d8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb64>
  4218c4:	e3530000 	cmp	r3, #0
  4218c8:	c3a030ff 	movgt	r3, #255	; 0xff
  4218cc:	ca000002 	bgt	4218dc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb68>
  4218d0:	e3a03000 	mov	r3, #0
  4218d4:	ea000000 	b	4218dc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb68>
  4218d8:	e20330ff 	and	r3, r3, #255	; 0xff
  4218dc:	e5cc3000 	strb	r3, [ip]
  4218e0:	e2811001 	add	r1, r1, #1
  4218e4:	e1510008 	cmp	r1, r8
  4218e8:	baffffeb 	blt	42189c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb28>
  4218ec:	e0855089 	add	r5, r5, r9, lsl #1
  4218f0:	e0866000 	add	r6, r6, r0
  4218f4:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  4218f8:	e2431001 	sub	r1, r3, #1
  4218fc:	e58d1154 	str	r1, [sp, #340]	; 0x154
  421900:	e3530000 	cmp	r3, #0
  421904:	1affffdf 	bne	421888 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xb14>
  421908:	ea000280 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  42190c:	e1a030a9 	lsr	r3, r9, #1
  421910:	e58d3024 	str	r3, [sp, #36]	; 0x24
  421914:	ea000095 	b	421b70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xdfc>
  421918:	e1a09007 	mov	r9, r7
  42191c:	e1a03087 	lsl	r3, r7, #1
  421920:	e19500f3 	ldrsh	r0, [r5, r3]
  421924:	fa0040d7 	blx	431c88 <__aeabi_i2d>
  421928:	e59d2014 	ldr	r2, [sp, #20]
  42192c:	e59d3018 	ldr	r3, [sp, #24]
  421930:	fa004107 	blx	431d54 <__aeabi_dmul>
  421934:	e59d201c 	ldr	r2, [sp, #28]
  421938:	e1a03004 	mov	r3, r4
  42193c:	fa00402b 	blx	4319f0 <__adddf3>
  421940:	e3a02000 	mov	r2, #0
  421944:	e59f340c 	ldr	r3, [pc, #1036]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421948:	fa004028 	blx	4319f0 <__adddf3>
  42194c:	fa003fc9 	blx	431878 <floor>
  421950:	fa00424c 	blx	432288 <__aeabi_d2iz>
  421954:	e1a0a000 	mov	sl, r0
  421958:	e287b001 	add	fp, r7, #1
  42195c:	e1a0308b 	lsl	r3, fp, #1
  421960:	e19500f3 	ldrsh	r0, [r5, r3]
  421964:	fa0040c7 	blx	431c88 <__aeabi_i2d>
  421968:	e59d2014 	ldr	r2, [sp, #20]
  42196c:	e59d3018 	ldr	r3, [sp, #24]
  421970:	fa0040f7 	blx	431d54 <__aeabi_dmul>
  421974:	e59d201c 	ldr	r2, [sp, #28]
  421978:	e1a03004 	mov	r3, r4
  42197c:	fa00401b 	blx	4319f0 <__adddf3>
  421980:	e3a02000 	mov	r2, #0
  421984:	e59f33cc 	ldr	r3, [pc, #972]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421988:	fa004018 	blx	4319f0 <__adddf3>
  42198c:	fa003fb9 	blx	431878 <floor>
  421990:	fa00423c 	blx	432288 <__aeabi_d2iz>
  421994:	e35a0000 	cmp	sl, #0
  421998:	b26aa000 	rsblt	sl, sl, #0
  42199c:	e3500000 	cmp	r0, #0
  4219a0:	b2600000 	rsblt	r0, r0, #0
  4219a4:	e0863007 	add	r3, r6, r7
  4219a8:	e3da20ff 	bics	r2, sl, #255	; 0xff
  4219ac:	0a000004 	beq	4219c4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xc50>
  4219b0:	e35a0000 	cmp	sl, #0
  4219b4:	c3a0a0ff 	movgt	sl, #255	; 0xff
  4219b8:	ca000002 	bgt	4219c8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xc54>
  4219bc:	e3a0a000 	mov	sl, #0
  4219c0:	ea000000 	b	4219c8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xc54>
  4219c4:	e20aa0ff 	and	sl, sl, #255	; 0xff
  4219c8:	e5c3a000 	strb	sl, [r3]
  4219cc:	e086b00b 	add	fp, r6, fp
  4219d0:	e3d030ff 	bics	r3, r0, #255	; 0xff
  4219d4:	0a000004 	beq	4219ec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xc78>
  4219d8:	e3500000 	cmp	r0, #0
  4219dc:	c3a000ff 	movgt	r0, #255	; 0xff
  4219e0:	ca000002 	bgt	4219f0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xc7c>
  4219e4:	e3a00000 	mov	r0, #0
  4219e8:	ea000000 	b	4219f0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xc7c>
  4219ec:	e20000ff 	and	r0, r0, #255	; 0xff
  4219f0:	e5cb0000 	strb	r0, [fp]
  4219f4:	e289b002 	add	fp, r9, #2
  4219f8:	e1a0308b 	lsl	r3, fp, #1
  4219fc:	e19500f3 	ldrsh	r0, [r5, r3]
  421a00:	fa0040a0 	blx	431c88 <__aeabi_i2d>
  421a04:	e59d2014 	ldr	r2, [sp, #20]
  421a08:	e59d3018 	ldr	r3, [sp, #24]
  421a0c:	fa0040d0 	blx	431d54 <__aeabi_dmul>
  421a10:	e59d201c 	ldr	r2, [sp, #28]
  421a14:	e1a03004 	mov	r3, r4
  421a18:	fa003ff4 	blx	4319f0 <__adddf3>
  421a1c:	e3a02000 	mov	r2, #0
  421a20:	e59f3330 	ldr	r3, [pc, #816]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421a24:	fa003ff1 	blx	4319f0 <__adddf3>
  421a28:	fa003f92 	blx	431878 <floor>
  421a2c:	fa004215 	blx	432288 <__aeabi_d2iz>
  421a30:	e1a0a000 	mov	sl, r0
  421a34:	e2899003 	add	r9, r9, #3
  421a38:	e1a03089 	lsl	r3, r9, #1
  421a3c:	e19500f3 	ldrsh	r0, [r5, r3]
  421a40:	fa004090 	blx	431c88 <__aeabi_i2d>
  421a44:	e59d2014 	ldr	r2, [sp, #20]
  421a48:	e59d3018 	ldr	r3, [sp, #24]
  421a4c:	fa0040c0 	blx	431d54 <__aeabi_dmul>
  421a50:	e59d201c 	ldr	r2, [sp, #28]
  421a54:	e1a03004 	mov	r3, r4
  421a58:	fa003fe4 	blx	4319f0 <__adddf3>
  421a5c:	e3a02000 	mov	r2, #0
  421a60:	e59f32f0 	ldr	r3, [pc, #752]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421a64:	fa003fe1 	blx	4319f0 <__adddf3>
  421a68:	fa003f82 	blx	431878 <floor>
  421a6c:	fa004205 	blx	432288 <__aeabi_d2iz>
  421a70:	e35a0000 	cmp	sl, #0
  421a74:	b26aa000 	rsblt	sl, sl, #0
  421a78:	e3500000 	cmp	r0, #0
  421a7c:	b2600000 	rsblt	r0, r0, #0
  421a80:	e086b00b 	add	fp, r6, fp
  421a84:	e3da30ff 	bics	r3, sl, #255	; 0xff
  421a88:	0a000004 	beq	421aa0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd2c>
  421a8c:	e35a0000 	cmp	sl, #0
  421a90:	c3a0a0ff 	movgt	sl, #255	; 0xff
  421a94:	ca000002 	bgt	421aa4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd30>
  421a98:	e3a0a000 	mov	sl, #0
  421a9c:	ea000000 	b	421aa4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd30>
  421aa0:	e20aa0ff 	and	sl, sl, #255	; 0xff
  421aa4:	e5cba000 	strb	sl, [fp]
  421aa8:	e0869009 	add	r9, r6, r9
  421aac:	e3d030ff 	bics	r3, r0, #255	; 0xff
  421ab0:	0a000004 	beq	421ac8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd54>
  421ab4:	e3500000 	cmp	r0, #0
  421ab8:	c3a000ff 	movgt	r0, #255	; 0xff
  421abc:	ca000002 	bgt	421acc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd58>
  421ac0:	e3a00000 	mov	r0, #0
  421ac4:	ea000000 	b	421acc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd58>
  421ac8:	e20000ff 	and	r0, r0, #255	; 0xff
  421acc:	e5c90000 	strb	r0, [r9]
  421ad0:	e2877004 	add	r7, r7, #4
  421ad4:	ea000000 	b	421adc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd68>
  421ad8:	e3a07000 	mov	r7, #0
  421adc:	e2483004 	sub	r3, r8, #4
  421ae0:	e1530007 	cmp	r3, r7
  421ae4:	aaffff8b 	bge	421918 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xba4>
  421ae8:	ea00001a 	b	421b58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xde4>
  421aec:	e1a03087 	lsl	r3, r7, #1
  421af0:	e19500f3 	ldrsh	r0, [r5, r3]
  421af4:	fa004063 	blx	431c88 <__aeabi_i2d>
  421af8:	e59d2014 	ldr	r2, [sp, #20]
  421afc:	e59d3018 	ldr	r3, [sp, #24]
  421b00:	fa004093 	blx	431d54 <__aeabi_dmul>
  421b04:	e59d201c 	ldr	r2, [sp, #28]
  421b08:	e1a03004 	mov	r3, r4
  421b0c:	fa003fb7 	blx	4319f0 <__adddf3>
  421b10:	e3a02000 	mov	r2, #0
  421b14:	e59f323c 	ldr	r3, [pc, #572]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421b18:	fa003fb4 	blx	4319f0 <__adddf3>
  421b1c:	fa003f55 	blx	431878 <floor>
  421b20:	fa0041d8 	blx	432288 <__aeabi_d2iz>
  421b24:	e3500000 	cmp	r0, #0
  421b28:	b2600000 	rsblt	r0, r0, #0
  421b2c:	e0863007 	add	r3, r6, r7
  421b30:	e3d020ff 	bics	r2, r0, #255	; 0xff
  421b34:	0a000004 	beq	421b4c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xdd8>
  421b38:	e3500000 	cmp	r0, #0
  421b3c:	c3a000ff 	movgt	r0, #255	; 0xff
  421b40:	ca000002 	bgt	421b50 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xddc>
  421b44:	e3a00000 	mov	r0, #0
  421b48:	ea000000 	b	421b50 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xddc>
  421b4c:	e20000ff 	and	r0, r0, #255	; 0xff
  421b50:	e5c30000 	strb	r0, [r3]
  421b54:	e2877001 	add	r7, r7, #1
  421b58:	e1570008 	cmp	r7, r8
  421b5c:	baffffe2 	blt	421aec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd78>
  421b60:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  421b64:	e0855083 	add	r5, r5, r3, lsl #1
  421b68:	e59d3020 	ldr	r3, [sp, #32]
  421b6c:	e0866003 	add	r6, r6, r3
  421b70:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  421b74:	e2432001 	sub	r2, r3, #1
  421b78:	e58d2154 	str	r2, [sp, #340]	; 0x154
  421b7c:	e3530000 	cmp	r3, #0
  421b80:	1affffd4 	bne	421ad8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xd64>
  421b84:	ea0001e1 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  421b88:	e1a03121 	lsr	r3, r1, #2
  421b8c:	e58d3024 	str	r3, [sp, #36]	; 0x24
  421b90:	ea00009b 	b	421e04 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1090>
  421b94:	e1a09007 	mov	r9, r7
  421b98:	e7950107 	ldr	r0, [r5, r7, lsl #2]
  421b9c:	fa004039 	blx	431c88 <__aeabi_i2d>
  421ba0:	e59d2014 	ldr	r2, [sp, #20]
  421ba4:	e59d3018 	ldr	r3, [sp, #24]
  421ba8:	fa004069 	blx	431d54 <__aeabi_dmul>
  421bac:	e59d201c 	ldr	r2, [sp, #28]
  421bb0:	e1a03004 	mov	r3, r4
  421bb4:	fa003f8d 	blx	4319f0 <__adddf3>
  421bb8:	e3a02000 	mov	r2, #0
  421bbc:	e59f3194 	ldr	r3, [pc, #404]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421bc0:	fa003f8a 	blx	4319f0 <__adddf3>
  421bc4:	fa003f2b 	blx	431878 <floor>
  421bc8:	fa0041ae 	blx	432288 <__aeabi_d2iz>
  421bcc:	e1a0a000 	mov	sl, r0
  421bd0:	e287b001 	add	fp, r7, #1
  421bd4:	e795010b 	ldr	r0, [r5, fp, lsl #2]
  421bd8:	fa00402a 	blx	431c88 <__aeabi_i2d>
  421bdc:	e59d2014 	ldr	r2, [sp, #20]
  421be0:	e59d3018 	ldr	r3, [sp, #24]
  421be4:	fa00405a 	blx	431d54 <__aeabi_dmul>
  421be8:	e59d201c 	ldr	r2, [sp, #28]
  421bec:	e1a03004 	mov	r3, r4
  421bf0:	fa003f7e 	blx	4319f0 <__adddf3>
  421bf4:	e3a02000 	mov	r2, #0
  421bf8:	e59f3158 	ldr	r3, [pc, #344]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421bfc:	fa003f7b 	blx	4319f0 <__adddf3>
  421c00:	fa003f1c 	blx	431878 <floor>
  421c04:	fa00419f 	blx	432288 <__aeabi_d2iz>
  421c08:	e35a0000 	cmp	sl, #0
  421c0c:	b26aa000 	rsblt	sl, sl, #0
  421c10:	e3500000 	cmp	r0, #0
  421c14:	b2600000 	rsblt	r0, r0, #0
  421c18:	e0863007 	add	r3, r6, r7
  421c1c:	e3da20ff 	bics	r2, sl, #255	; 0xff
  421c20:	0a000004 	beq	421c38 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xec4>
  421c24:	e35a0000 	cmp	sl, #0
  421c28:	c3a0a0ff 	movgt	sl, #255	; 0xff
  421c2c:	ca000002 	bgt	421c3c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xec8>
  421c30:	e3a0a000 	mov	sl, #0
  421c34:	ea000000 	b	421c3c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xec8>
  421c38:	e20aa0ff 	and	sl, sl, #255	; 0xff
  421c3c:	e5c3a000 	strb	sl, [r3]
  421c40:	e086b00b 	add	fp, r6, fp
  421c44:	e3d030ff 	bics	r3, r0, #255	; 0xff
  421c48:	0a000004 	beq	421c60 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xeec>
  421c4c:	e3500000 	cmp	r0, #0
  421c50:	c3a000ff 	movgt	r0, #255	; 0xff
  421c54:	ca000002 	bgt	421c64 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xef0>
  421c58:	e3a00000 	mov	r0, #0
  421c5c:	ea000000 	b	421c64 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xef0>
  421c60:	e20000ff 	and	r0, r0, #255	; 0xff
  421c64:	e5cb0000 	strb	r0, [fp]
  421c68:	e289b002 	add	fp, r9, #2
  421c6c:	e795010b 	ldr	r0, [r5, fp, lsl #2]
  421c70:	fa004004 	blx	431c88 <__aeabi_i2d>
  421c74:	e59d2014 	ldr	r2, [sp, #20]
  421c78:	e59d3018 	ldr	r3, [sp, #24]
  421c7c:	fa004034 	blx	431d54 <__aeabi_dmul>
  421c80:	e59d201c 	ldr	r2, [sp, #28]
  421c84:	e1a03004 	mov	r3, r4
  421c88:	fa003f58 	blx	4319f0 <__adddf3>
  421c8c:	e3a02000 	mov	r2, #0
  421c90:	e59f30c0 	ldr	r3, [pc, #192]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421c94:	fa003f55 	blx	4319f0 <__adddf3>
  421c98:	fa003ef6 	blx	431878 <floor>
  421c9c:	fa004179 	blx	432288 <__aeabi_d2iz>
  421ca0:	e1a0a000 	mov	sl, r0
  421ca4:	e2899003 	add	r9, r9, #3
  421ca8:	e7950109 	ldr	r0, [r5, r9, lsl #2]
  421cac:	fa003ff5 	blx	431c88 <__aeabi_i2d>
  421cb0:	e59d2014 	ldr	r2, [sp, #20]
  421cb4:	e59d3018 	ldr	r3, [sp, #24]
  421cb8:	fa004025 	blx	431d54 <__aeabi_dmul>
  421cbc:	e59d201c 	ldr	r2, [sp, #28]
  421cc0:	e1a03004 	mov	r3, r4
  421cc4:	fa003f49 	blx	4319f0 <__adddf3>
  421cc8:	e3a02000 	mov	r2, #0
  421ccc:	e59f3084 	ldr	r3, [pc, #132]	; 421d58 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  421cd0:	fa003f46 	blx	4319f0 <__adddf3>
  421cd4:	fa003ee7 	blx	431878 <floor>
  421cd8:	fa00416a 	blx	432288 <__aeabi_d2iz>
  421cdc:	e35a0000 	cmp	sl, #0
  421ce0:	b26aa000 	rsblt	sl, sl, #0
  421ce4:	e3500000 	cmp	r0, #0
  421ce8:	b2600000 	rsblt	r0, r0, #0
  421cec:	e086b00b 	add	fp, r6, fp
  421cf0:	e3da30ff 	bics	r3, sl, #255	; 0xff
  421cf4:	0a000004 	beq	421d0c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xf98>
  421cf8:	e35a0000 	cmp	sl, #0
  421cfc:	c3a0a0ff 	movgt	sl, #255	; 0xff
  421d00:	ca000002 	bgt	421d10 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xf9c>
  421d04:	e3a0a000 	mov	sl, #0
  421d08:	ea000000 	b	421d10 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xf9c>
  421d0c:	e20aa0ff 	and	sl, sl, #255	; 0xff
  421d10:	e5cba000 	strb	sl, [fp]
  421d14:	e0869009 	add	r9, r6, r9
  421d18:	e3d030ff 	bics	r3, r0, #255	; 0xff
  421d1c:	0a000004 	beq	421d34 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfc0>
  421d20:	e3500000 	cmp	r0, #0
  421d24:	c3a000ff 	movgt	r0, #255	; 0xff
  421d28:	ca000002 	bgt	421d38 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfc4>
  421d2c:	e3a00000 	mov	r0, #0
  421d30:	ea000000 	b	421d38 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfc4>
  421d34:	e20000ff 	and	r0, r0, #255	; 0xff
  421d38:	e5c90000 	strb	r0, [r9]
  421d3c:	e2877004 	add	r7, r7, #4
  421d40:	ea000000 	b	421d48 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfd4>
  421d44:	e3a07000 	mov	r7, #0
  421d48:	e2483004 	sub	r3, r8, #4
  421d4c:	e1530007 	cmp	r3, r7
  421d50:	aaffff8f 	bge	421b94 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xe20>
  421d54:	ea000024 	b	421dec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1078>
  421d58:	3fe00000 	.word	0x3fe00000
  421d5c:	3ff00000 	.word	0x3ff00000
  421d60:	3cb00000 	.word	0x3cb00000
  421d64:	40e00000 	.word	0x40e00000
  421d68:	ffc00000 	.word	0xffc00000
  421d6c:	40dfffff 	.word	0x40dfffff
  421d70:	3fe00000 	.word	0x3fe00000
  421d74:	0001ddcc 	.word	0x0001ddcc
  421d78:	00000418 	.word	0x00000418
  421d7c:	0001da78 	.word	0x0001da78
  421d80:	0001d794 	.word	0x0001d794
  421d84:	e7950107 	ldr	r0, [r5, r7, lsl #2]
  421d88:	fa003fbe 	blx	431c88 <__aeabi_i2d>
  421d8c:	e59d2014 	ldr	r2, [sp, #20]
  421d90:	e59d3018 	ldr	r3, [sp, #24]
  421d94:	fa003fee 	blx	431d54 <__aeabi_dmul>
  421d98:	e59d201c 	ldr	r2, [sp, #28]
  421d9c:	e1a03004 	mov	r3, r4
  421da0:	fa003f12 	blx	4319f0 <__adddf3>
  421da4:	e3a02000 	mov	r2, #0
  421da8:	e51f3040 	ldr	r3, [pc, #-64]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  421dac:	fa003f0f 	blx	4319f0 <__adddf3>
  421db0:	fa003eb0 	blx	431878 <floor>
  421db4:	fa004133 	blx	432288 <__aeabi_d2iz>
  421db8:	e3500000 	cmp	r0, #0
  421dbc:	b2600000 	rsblt	r0, r0, #0
  421dc0:	e0863007 	add	r3, r6, r7
  421dc4:	e3d020ff 	bics	r2, r0, #255	; 0xff
  421dc8:	0a000004 	beq	421de0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x106c>
  421dcc:	e3500000 	cmp	r0, #0
  421dd0:	c3a000ff 	movgt	r0, #255	; 0xff
  421dd4:	ca000002 	bgt	421de4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1070>
  421dd8:	e3a00000 	mov	r0, #0
  421ddc:	ea000000 	b	421de4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1070>
  421de0:	e20000ff 	and	r0, r0, #255	; 0xff
  421de4:	e5c30000 	strb	r0, [r3]
  421de8:	e2877001 	add	r7, r7, #1
  421dec:	e1570008 	cmp	r7, r8
  421df0:	baffffe3 	blt	421d84 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1010>
  421df4:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  421df8:	e0855103 	add	r5, r5, r3, lsl #2
  421dfc:	e59d3020 	ldr	r3, [sp, #32]
  421e00:	e0866003 	add	r6, r6, r3
  421e04:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  421e08:	e2432001 	sub	r2, r3, #1
  421e0c:	e58d2154 	str	r2, [sp, #340]	; 0x154
  421e10:	e3530000 	cmp	r3, #0
  421e14:	1affffca 	bne	421d44 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xfd0>
  421e18:	ea00013c 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  421e1c:	e1a03121 	lsr	r3, r1, #2
  421e20:	e58d3024 	str	r3, [sp, #36]	; 0x24
  421e24:	ea000090 	b	42206c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x12f8>
  421e28:	e1a09007 	mov	r9, r7
  421e2c:	e7950107 	ldr	r0, [r5, r7, lsl #2]
  421e30:	fa003f9d 	blx	431cac <__aeabi_f2d>
  421e34:	e59d2014 	ldr	r2, [sp, #20]
  421e38:	e59d3018 	ldr	r3, [sp, #24]
  421e3c:	fa003fc4 	blx	431d54 <__aeabi_dmul>
  421e40:	e59d201c 	ldr	r2, [sp, #28]
  421e44:	e1a03004 	mov	r3, r4
  421e48:	fa003ee8 	blx	4319f0 <__adddf3>
  421e4c:	e3a02000 	mov	r2, #0
  421e50:	e51f30e8 	ldr	r3, [pc, #-232]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  421e54:	fa003ee5 	blx	4319f0 <__adddf3>
  421e58:	fa003e86 	blx	431878 <floor>
  421e5c:	fa004109 	blx	432288 <__aeabi_d2iz>
  421e60:	e1a0a000 	mov	sl, r0
  421e64:	e287b001 	add	fp, r7, #1
  421e68:	e795010b 	ldr	r0, [r5, fp, lsl #2]
  421e6c:	fa003f8e 	blx	431cac <__aeabi_f2d>
  421e70:	e59d2014 	ldr	r2, [sp, #20]
  421e74:	e59d3018 	ldr	r3, [sp, #24]
  421e78:	fa003fb5 	blx	431d54 <__aeabi_dmul>
  421e7c:	e59d201c 	ldr	r2, [sp, #28]
  421e80:	e1a03004 	mov	r3, r4
  421e84:	fa003ed9 	blx	4319f0 <__adddf3>
  421e88:	e3a02000 	mov	r2, #0
  421e8c:	e51f3124 	ldr	r3, [pc, #-292]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  421e90:	fa003ed6 	blx	4319f0 <__adddf3>
  421e94:	fa003e77 	blx	431878 <floor>
  421e98:	fa0040fa 	blx	432288 <__aeabi_d2iz>
  421e9c:	e35a0000 	cmp	sl, #0
  421ea0:	b26aa000 	rsblt	sl, sl, #0
  421ea4:	e3500000 	cmp	r0, #0
  421ea8:	b2600000 	rsblt	r0, r0, #0
  421eac:	e0863007 	add	r3, r6, r7
  421eb0:	e3da20ff 	bics	r2, sl, #255	; 0xff
  421eb4:	0a000004 	beq	421ecc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1158>
  421eb8:	e35a0000 	cmp	sl, #0
  421ebc:	c3a0a0ff 	movgt	sl, #255	; 0xff
  421ec0:	ca000002 	bgt	421ed0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x115c>
  421ec4:	e3a0a000 	mov	sl, #0
  421ec8:	ea000000 	b	421ed0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x115c>
  421ecc:	e20aa0ff 	and	sl, sl, #255	; 0xff
  421ed0:	e5c3a000 	strb	sl, [r3]
  421ed4:	e086b00b 	add	fp, r6, fp
  421ed8:	e3d030ff 	bics	r3, r0, #255	; 0xff
  421edc:	0a000004 	beq	421ef4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1180>
  421ee0:	e3500000 	cmp	r0, #0
  421ee4:	c3a000ff 	movgt	r0, #255	; 0xff
  421ee8:	ca000002 	bgt	421ef8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1184>
  421eec:	e3a00000 	mov	r0, #0
  421ef0:	ea000000 	b	421ef8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1184>
  421ef4:	e20000ff 	and	r0, r0, #255	; 0xff
  421ef8:	e5cb0000 	strb	r0, [fp]
  421efc:	e289b002 	add	fp, r9, #2
  421f00:	e795010b 	ldr	r0, [r5, fp, lsl #2]
  421f04:	fa003f68 	blx	431cac <__aeabi_f2d>
  421f08:	e59d2014 	ldr	r2, [sp, #20]
  421f0c:	e59d3018 	ldr	r3, [sp, #24]
  421f10:	fa003f8f 	blx	431d54 <__aeabi_dmul>
  421f14:	e59d201c 	ldr	r2, [sp, #28]
  421f18:	e1a03004 	mov	r3, r4
  421f1c:	fa003eb3 	blx	4319f0 <__adddf3>
  421f20:	e3a02000 	mov	r2, #0
  421f24:	e51f31bc 	ldr	r3, [pc, #-444]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  421f28:	fa003eb0 	blx	4319f0 <__adddf3>
  421f2c:	fa003e51 	blx	431878 <floor>
  421f30:	fa0040d4 	blx	432288 <__aeabi_d2iz>
  421f34:	e1a0a000 	mov	sl, r0
  421f38:	e2899003 	add	r9, r9, #3
  421f3c:	e7950109 	ldr	r0, [r5, r9, lsl #2]
  421f40:	fa003f59 	blx	431cac <__aeabi_f2d>
  421f44:	e59d2014 	ldr	r2, [sp, #20]
  421f48:	e59d3018 	ldr	r3, [sp, #24]
  421f4c:	fa003f80 	blx	431d54 <__aeabi_dmul>
  421f50:	e59d201c 	ldr	r2, [sp, #28]
  421f54:	e1a03004 	mov	r3, r4
  421f58:	fa003ea4 	blx	4319f0 <__adddf3>
  421f5c:	e3a02000 	mov	r2, #0
  421f60:	e51f31f8 	ldr	r3, [pc, #-504]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  421f64:	fa003ea1 	blx	4319f0 <__adddf3>
  421f68:	fa003e42 	blx	431878 <floor>
  421f6c:	fa0040c5 	blx	432288 <__aeabi_d2iz>
  421f70:	e35a0000 	cmp	sl, #0
  421f74:	b26aa000 	rsblt	sl, sl, #0
  421f78:	e3500000 	cmp	r0, #0
  421f7c:	b2600000 	rsblt	r0, r0, #0
  421f80:	e086b00b 	add	fp, r6, fp
  421f84:	e3da30ff 	bics	r3, sl, #255	; 0xff
  421f88:	0a000004 	beq	421fa0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x122c>
  421f8c:	e35a0000 	cmp	sl, #0
  421f90:	c3a0a0ff 	movgt	sl, #255	; 0xff
  421f94:	ca000002 	bgt	421fa4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1230>
  421f98:	e3a0a000 	mov	sl, #0
  421f9c:	ea000000 	b	421fa4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1230>
  421fa0:	e20aa0ff 	and	sl, sl, #255	; 0xff
  421fa4:	e5cba000 	strb	sl, [fp]
  421fa8:	e0869009 	add	r9, r6, r9
  421fac:	e3d030ff 	bics	r3, r0, #255	; 0xff
  421fb0:	0a000004 	beq	421fc8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1254>
  421fb4:	e3500000 	cmp	r0, #0
  421fb8:	c3a000ff 	movgt	r0, #255	; 0xff
  421fbc:	ca000002 	bgt	421fcc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1258>
  421fc0:	e3a00000 	mov	r0, #0
  421fc4:	ea000000 	b	421fcc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1258>
  421fc8:	e20000ff 	and	r0, r0, #255	; 0xff
  421fcc:	e5c90000 	strb	r0, [r9]
  421fd0:	e2877004 	add	r7, r7, #4
  421fd4:	ea000000 	b	421fdc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1268>
  421fd8:	e3a07000 	mov	r7, #0
  421fdc:	e2483004 	sub	r3, r8, #4
  421fe0:	e1530007 	cmp	r3, r7
  421fe4:	aaffff8f 	bge	421e28 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x10b4>
  421fe8:	ea000019 	b	422054 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x12e0>
  421fec:	e7950107 	ldr	r0, [r5, r7, lsl #2]
  421ff0:	fa003f2d 	blx	431cac <__aeabi_f2d>
  421ff4:	e59d2014 	ldr	r2, [sp, #20]
  421ff8:	e59d3018 	ldr	r3, [sp, #24]
  421ffc:	fa003f54 	blx	431d54 <__aeabi_dmul>
  422000:	e59d201c 	ldr	r2, [sp, #28]
  422004:	e1a03004 	mov	r3, r4
  422008:	fa003e78 	blx	4319f0 <__adddf3>
  42200c:	e3a02000 	mov	r2, #0
  422010:	e51f32a8 	ldr	r3, [pc, #-680]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  422014:	fa003e75 	blx	4319f0 <__adddf3>
  422018:	fa003e16 	blx	431878 <floor>
  42201c:	fa004099 	blx	432288 <__aeabi_d2iz>
  422020:	e3500000 	cmp	r0, #0
  422024:	b2600000 	rsblt	r0, r0, #0
  422028:	e0863007 	add	r3, r6, r7
  42202c:	e3d020ff 	bics	r2, r0, #255	; 0xff
  422030:	0a000004 	beq	422048 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x12d4>
  422034:	e3500000 	cmp	r0, #0
  422038:	c3a000ff 	movgt	r0, #255	; 0xff
  42203c:	ca000002 	bgt	42204c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x12d8>
  422040:	e3a00000 	mov	r0, #0
  422044:	ea000000 	b	42204c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x12d8>
  422048:	e20000ff 	and	r0, r0, #255	; 0xff
  42204c:	e5c30000 	strb	r0, [r3]
  422050:	e2877001 	add	r7, r7, #1
  422054:	e1570008 	cmp	r7, r8
  422058:	baffffe3 	blt	421fec <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1278>
  42205c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  422060:	e0855103 	add	r5, r5, r3, lsl #2
  422064:	e59d3020 	ldr	r3, [sp, #32]
  422068:	e0866003 	add	r6, r6, r3
  42206c:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  422070:	e2432001 	sub	r2, r3, #1
  422074:	e58d2154 	str	r2, [sp, #340]	; 0x154
  422078:	e3530000 	cmp	r3, #0
  42207c:	1affffd5 	bne	421fd8 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1264>
  422080:	ea0000a2 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  422084:	e1a031a1 	lsr	r3, r1, #3
  422088:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42208c:	ea000090 	b	4222d4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1560>
  422090:	e1a09007 	mov	r9, r7
  422094:	e0853187 	add	r3, r5, r7, lsl #3
  422098:	e59d0014 	ldr	r0, [sp, #20]
  42209c:	e59d1018 	ldr	r1, [sp, #24]
  4220a0:	e893000c 	ldm	r3, {r2, r3}
  4220a4:	fa003f2a 	blx	431d54 <__aeabi_dmul>
  4220a8:	e59d201c 	ldr	r2, [sp, #28]
  4220ac:	e1a03004 	mov	r3, r4
  4220b0:	fa003e4e 	blx	4319f0 <__adddf3>
  4220b4:	e3a02000 	mov	r2, #0
  4220b8:	e51f3350 	ldr	r3, [pc, #-848]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  4220bc:	fa003e4b 	blx	4319f0 <__adddf3>
  4220c0:	fa003dec 	blx	431878 <floor>
  4220c4:	fa00406f 	blx	432288 <__aeabi_d2iz>
  4220c8:	e1a0a000 	mov	sl, r0
  4220cc:	e287b001 	add	fp, r7, #1
  4220d0:	e085318b 	add	r3, r5, fp, lsl #3
  4220d4:	e59d0014 	ldr	r0, [sp, #20]
  4220d8:	e59d1018 	ldr	r1, [sp, #24]
  4220dc:	e893000c 	ldm	r3, {r2, r3}
  4220e0:	fa003f1b 	blx	431d54 <__aeabi_dmul>
  4220e4:	e59d201c 	ldr	r2, [sp, #28]
  4220e8:	e1a03004 	mov	r3, r4
  4220ec:	fa003e3f 	blx	4319f0 <__adddf3>
  4220f0:	e3a02000 	mov	r2, #0
  4220f4:	e51f338c 	ldr	r3, [pc, #-908]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  4220f8:	fa003e3c 	blx	4319f0 <__adddf3>
  4220fc:	fa003ddd 	blx	431878 <floor>
  422100:	fa004060 	blx	432288 <__aeabi_d2iz>
  422104:	e35a0000 	cmp	sl, #0
  422108:	b26aa000 	rsblt	sl, sl, #0
  42210c:	e3500000 	cmp	r0, #0
  422110:	b2600000 	rsblt	r0, r0, #0
  422114:	e0863007 	add	r3, r6, r7
  422118:	e3da20ff 	bics	r2, sl, #255	; 0xff
  42211c:	0a000004 	beq	422134 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x13c0>
  422120:	e35a0000 	cmp	sl, #0
  422124:	c3a0a0ff 	movgt	sl, #255	; 0xff
  422128:	ca000002 	bgt	422138 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x13c4>
  42212c:	e3a0a000 	mov	sl, #0
  422130:	ea000000 	b	422138 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x13c4>
  422134:	e20aa0ff 	and	sl, sl, #255	; 0xff
  422138:	e5c3a000 	strb	sl, [r3]
  42213c:	e086b00b 	add	fp, r6, fp
  422140:	e3d030ff 	bics	r3, r0, #255	; 0xff
  422144:	0a000004 	beq	42215c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x13e8>
  422148:	e3500000 	cmp	r0, #0
  42214c:	c3a000ff 	movgt	r0, #255	; 0xff
  422150:	ca000002 	bgt	422160 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x13ec>
  422154:	e3a00000 	mov	r0, #0
  422158:	ea000000 	b	422160 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x13ec>
  42215c:	e20000ff 	and	r0, r0, #255	; 0xff
  422160:	e5cb0000 	strb	r0, [fp]
  422164:	e289b002 	add	fp, r9, #2
  422168:	e085318b 	add	r3, r5, fp, lsl #3
  42216c:	e59d0014 	ldr	r0, [sp, #20]
  422170:	e59d1018 	ldr	r1, [sp, #24]
  422174:	e893000c 	ldm	r3, {r2, r3}
  422178:	fa003ef5 	blx	431d54 <__aeabi_dmul>
  42217c:	e59d201c 	ldr	r2, [sp, #28]
  422180:	e1a03004 	mov	r3, r4
  422184:	fa003e19 	blx	4319f0 <__adddf3>
  422188:	e3a02000 	mov	r2, #0
  42218c:	e51f3424 	ldr	r3, [pc, #-1060]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  422190:	fa003e16 	blx	4319f0 <__adddf3>
  422194:	fa003db7 	blx	431878 <floor>
  422198:	fa00403a 	blx	432288 <__aeabi_d2iz>
  42219c:	e1a0a000 	mov	sl, r0
  4221a0:	e2899003 	add	r9, r9, #3
  4221a4:	e0853189 	add	r3, r5, r9, lsl #3
  4221a8:	e59d0014 	ldr	r0, [sp, #20]
  4221ac:	e59d1018 	ldr	r1, [sp, #24]
  4221b0:	e893000c 	ldm	r3, {r2, r3}
  4221b4:	fa003ee6 	blx	431d54 <__aeabi_dmul>
  4221b8:	e59d201c 	ldr	r2, [sp, #28]
  4221bc:	e1a03004 	mov	r3, r4
  4221c0:	fa003e0a 	blx	4319f0 <__adddf3>
  4221c4:	e3a02000 	mov	r2, #0
  4221c8:	e51f3460 	ldr	r3, [pc, #-1120]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  4221cc:	fa003e07 	blx	4319f0 <__adddf3>
  4221d0:	fa003da8 	blx	431878 <floor>
  4221d4:	fa00402b 	blx	432288 <__aeabi_d2iz>
  4221d8:	e35a0000 	cmp	sl, #0
  4221dc:	b26aa000 	rsblt	sl, sl, #0
  4221e0:	e3500000 	cmp	r0, #0
  4221e4:	b2600000 	rsblt	r0, r0, #0
  4221e8:	e086b00b 	add	fp, r6, fp
  4221ec:	e3da30ff 	bics	r3, sl, #255	; 0xff
  4221f0:	0a000004 	beq	422208 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1494>
  4221f4:	e35a0000 	cmp	sl, #0
  4221f8:	c3a0a0ff 	movgt	sl, #255	; 0xff
  4221fc:	ca000002 	bgt	42220c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1498>
  422200:	e3a0a000 	mov	sl, #0
  422204:	ea000000 	b	42220c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1498>
  422208:	e20aa0ff 	and	sl, sl, #255	; 0xff
  42220c:	e5cba000 	strb	sl, [fp]
  422210:	e0869009 	add	r9, r6, r9
  422214:	e3d030ff 	bics	r3, r0, #255	; 0xff
  422218:	0a000004 	beq	422230 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x14bc>
  42221c:	e3500000 	cmp	r0, #0
  422220:	c3a000ff 	movgt	r0, #255	; 0xff
  422224:	ca000002 	bgt	422234 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x14c0>
  422228:	e3a00000 	mov	r0, #0
  42222c:	ea000000 	b	422234 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x14c0>
  422230:	e20000ff 	and	r0, r0, #255	; 0xff
  422234:	e5c90000 	strb	r0, [r9]
  422238:	e2877004 	add	r7, r7, #4
  42223c:	ea000000 	b	422244 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x14d0>
  422240:	e3a07000 	mov	r7, #0
  422244:	e2483004 	sub	r3, r8, #4
  422248:	e1530007 	cmp	r3, r7
  42224c:	aaffff8f 	bge	422090 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x131c>
  422250:	ea000019 	b	4222bc <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1548>
  422254:	e0853187 	add	r3, r5, r7, lsl #3
  422258:	e59d0014 	ldr	r0, [sp, #20]
  42225c:	e59d1018 	ldr	r1, [sp, #24]
  422260:	e893000c 	ldm	r3, {r2, r3}
  422264:	fa003eba 	blx	431d54 <__aeabi_dmul>
  422268:	e59d201c 	ldr	r2, [sp, #28]
  42226c:	e1a03004 	mov	r3, r4
  422270:	fa003dde 	blx	4319f0 <__adddf3>
  422274:	e3a02000 	mov	r2, #0
  422278:	e51f3510 	ldr	r3, [pc, #-1296]	; 421d70 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0xffc>
  42227c:	fa003ddb 	blx	4319f0 <__adddf3>
  422280:	fa003d7c 	blx	431878 <floor>
  422284:	fa003fff 	blx	432288 <__aeabi_d2iz>
  422288:	e3500000 	cmp	r0, #0
  42228c:	b2600000 	rsblt	r0, r0, #0
  422290:	e0863007 	add	r3, r6, r7
  422294:	e3d020ff 	bics	r2, r0, #255	; 0xff
  422298:	0a000004 	beq	4222b0 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x153c>
  42229c:	e3500000 	cmp	r0, #0
  4222a0:	c3a000ff 	movgt	r0, #255	; 0xff
  4222a4:	ca000002 	bgt	4222b4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1540>
  4222a8:	e3a00000 	mov	r0, #0
  4222ac:	ea000000 	b	4222b4 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1540>
  4222b0:	e20000ff 	and	r0, r0, #255	; 0xff
  4222b4:	e5c30000 	strb	r0, [r3]
  4222b8:	e2877001 	add	r7, r7, #1
  4222bc:	e1570008 	cmp	r7, r8
  4222c0:	baffffe3 	blt	422254 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x14e0>
  4222c4:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  4222c8:	e0855183 	add	r5, r5, r3, lsl #3
  4222cc:	e59d3020 	ldr	r3, [sp, #32]
  4222d0:	e0866003 	add	r6, r6, r3
  4222d4:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  4222d8:	e2432001 	sub	r2, r3, #1
  4222dc:	e58d2154 	str	r2, [sp, #340]	; 0x154
  4222e0:	e3530000 	cmp	r3, #0
  4222e4:	1affffd5 	bne	422240 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x14cc>
  4222e8:	ea000008 	b	422310 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x159c>
  4222ec:	e51f0580 	ldr	r0, [pc, #-1408]	; 421d74 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1000>
  4222f0:	e08f0000 	add	r0, pc, r0
  4222f4:	e51f1584 	ldr	r1, [pc, #-1412]	; 421d78 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1004>
  4222f8:	e51f2584 	ldr	r2, [pc, #-1412]	; 421d7c <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  4222fc:	e08f2002 	add	r2, pc, r2
  422300:	e2822058 	add	r2, r2, #88	; 0x58
  422304:	e51f358c 	ldr	r3, [pc, #-1420]	; 421d80 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi+0x100c>
  422308:	e08f3003 	add	r3, pc, r3
  42230c:	fa004690 	blx	433d54 <__assert_func>
  422310:	e3a00000 	mov	r0, #0
  422314:	e28ddf4b 	add	sp, sp, #300	; 0x12c
  422318:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42231c:	e12fff1e 	bx	lr

00422320 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei>:
  422320:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  422324:	e1a04000 	mov	r4, r0
  422328:	e1a05002 	mov	r5, r2
  42232c:	e1a07123 	lsr	r7, r3, #2
  422330:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  422334:	e2033007 	and	r3, r3, #7
  422338:	e3530006 	cmp	r3, #6
  42233c:	908ff103 	addls	pc, pc, r3, lsl #2
  422340:	ea000117 	b	4227a4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x484>
  422344:	ea00001f 	b	4223c8 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0xa8>
  422348:	ea00003e 	b	422448 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x128>
  42234c:	ea000043 	b	422460 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x140>
  422350:	ea000069 	b	4224fc <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x1dc>
  422354:	ea000112 	b	4227a4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x484>
  422358:	ea00008e 	b	422598 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x278>
  42235c:	ea0000cf 	b	4226a0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x380>
  422360:	e7d4c003 	ldrb	ip, [r4, r3]
  422364:	e2832001 	add	r2, r3, #1
  422368:	e7d40002 	ldrb	r0, [r4, r2]
  42236c:	e785c103 	str	ip, [r5, r3, lsl #2]
  422370:	e7850102 	str	r0, [r5, r2, lsl #2]
  422374:	e2830002 	add	r0, r3, #2
  422378:	e7d46000 	ldrb	r6, [r4, r0]
  42237c:	e2832003 	add	r2, r3, #3
  422380:	e7d4c002 	ldrb	ip, [r4, r2]
  422384:	e7856100 	str	r6, [r5, r0, lsl #2]
  422388:	e785c102 	str	ip, [r5, r2, lsl #2]
  42238c:	e2833004 	add	r3, r3, #4
  422390:	ea000000 	b	422398 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x78>
  422394:	e3a03000 	mov	r3, #0
  422398:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
  42239c:	e2420004 	sub	r0, r2, #4
  4223a0:	e1500003 	cmp	r0, r3
  4223a4:	aaffffed 	bge	422360 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x40>
  4223a8:	ea000002 	b	4223b8 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x98>
  4223ac:	e7d40003 	ldrb	r0, [r4, r3]
  4223b0:	e7850103 	str	r0, [r5, r3, lsl #2]
  4223b4:	e2833001 	add	r3, r3, #1
  4223b8:	e1530002 	cmp	r3, r2
  4223bc:	bafffffa 	blt	4223ac <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x8c>
  4223c0:	e0844001 	add	r4, r4, r1
  4223c4:	e0855107 	add	r5, r5, r7, lsl #2
  4223c8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  4223cc:	e2432001 	sub	r2, r3, #1
  4223d0:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4223d4:	e3530000 	cmp	r3, #0
  4223d8:	1affffed 	bne	422394 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x74>
  4223dc:	ea0000f0 	b	4227a4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x484>
  4223e0:	e7d4c003 	ldrb	ip, [r4, r3]
  4223e4:	e2832001 	add	r2, r3, #1
  4223e8:	e7d40002 	ldrb	r0, [r4, r2]
  4223ec:	e785c103 	str	ip, [r5, r3, lsl #2]
  4223f0:	e7850102 	str	r0, [r5, r2, lsl #2]
  4223f4:	e2830002 	add	r0, r3, #2
  4223f8:	e7d46000 	ldrb	r6, [r4, r0]
  4223fc:	e2832003 	add	r2, r3, #3
  422400:	e7d4c002 	ldrb	ip, [r4, r2]
  422404:	e7856100 	str	r6, [r5, r0, lsl #2]
  422408:	e785c102 	str	ip, [r5, r2, lsl #2]
  42240c:	e2833004 	add	r3, r3, #4
  422410:	ea000000 	b	422418 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0xf8>
  422414:	e3a03000 	mov	r3, #0
  422418:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
  42241c:	e2420004 	sub	r0, r2, #4
  422420:	e1500003 	cmp	r0, r3
  422424:	aaffffed 	bge	4223e0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0xc0>
  422428:	ea000002 	b	422438 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x118>
  42242c:	e7d40003 	ldrb	r0, [r4, r3]
  422430:	e7850103 	str	r0, [r5, r3, lsl #2]
  422434:	e2833001 	add	r3, r3, #1
  422438:	e1530002 	cmp	r3, r2
  42243c:	bafffffa 	blt	42242c <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x10c>
  422440:	e0844001 	add	r4, r4, r1
  422444:	e0855107 	add	r5, r5, r7, lsl #2
  422448:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  42244c:	e2432001 	sub	r2, r3, #1
  422450:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  422454:	e3530000 	cmp	r3, #0
  422458:	1affffed 	bne	422414 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0xf4>
  42245c:	ea0000d0 	b	4227a4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x484>
  422460:	e1a0e0a1 	lsr	lr, r1, #1
  422464:	ea00001e 	b	4224e4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x1c4>
  422468:	e1a02083 	lsl	r2, r3, #1
  42246c:	e19400b2 	ldrh	r0, [r4, r2]
  422470:	e2832001 	add	r2, r3, #1
  422474:	e1a01082 	lsl	r1, r2, #1
  422478:	e19410b1 	ldrh	r1, [r4, r1]
  42247c:	e7850103 	str	r0, [r5, r3, lsl #2]
  422480:	e7851102 	str	r1, [r5, r2, lsl #2]
  422484:	e2831002 	add	r1, r3, #2
  422488:	e1a02081 	lsl	r2, r1, #1
  42248c:	e194c0b2 	ldrh	ip, [r4, r2]
  422490:	e2832003 	add	r2, r3, #3
  422494:	e1a00082 	lsl	r0, r2, #1
  422498:	e19400b0 	ldrh	r0, [r4, r0]
  42249c:	e785c101 	str	ip, [r5, r1, lsl #2]
  4224a0:	e7850102 	str	r0, [r5, r2, lsl #2]
  4224a4:	e2833004 	add	r3, r3, #4
  4224a8:	ea000000 	b	4224b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x190>
  4224ac:	e3a03000 	mov	r3, #0
  4224b0:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
  4224b4:	e2421004 	sub	r1, r2, #4
  4224b8:	e1510003 	cmp	r1, r3
  4224bc:	aaffffe9 	bge	422468 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x148>
  4224c0:	ea000003 	b	4224d4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x1b4>
  4224c4:	e1a01083 	lsl	r1, r3, #1
  4224c8:	e19410b1 	ldrh	r1, [r4, r1]
  4224cc:	e7851103 	str	r1, [r5, r3, lsl #2]
  4224d0:	e2833001 	add	r3, r3, #1
  4224d4:	e1530002 	cmp	r3, r2
  4224d8:	bafffff9 	blt	4224c4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x1a4>
  4224dc:	e084408e 	add	r4, r4, lr, lsl #1
  4224e0:	e0855107 	add	r5, r5, r7, lsl #2
  4224e4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  4224e8:	e2432001 	sub	r2, r3, #1
  4224ec:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4224f0:	e3530000 	cmp	r3, #0
  4224f4:	1affffec 	bne	4224ac <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x18c>
  4224f8:	ea0000a9 	b	4227a4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x484>
  4224fc:	e1a0e0a1 	lsr	lr, r1, #1
  422500:	ea00001e 	b	422580 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x260>
  422504:	e1a02083 	lsl	r2, r3, #1
  422508:	e19400f2 	ldrsh	r0, [r4, r2]
  42250c:	e2832001 	add	r2, r3, #1
  422510:	e1a01082 	lsl	r1, r2, #1
  422514:	e19410f1 	ldrsh	r1, [r4, r1]
  422518:	e7850103 	str	r0, [r5, r3, lsl #2]
  42251c:	e7851102 	str	r1, [r5, r2, lsl #2]
  422520:	e2831002 	add	r1, r3, #2
  422524:	e1a02081 	lsl	r2, r1, #1
  422528:	e194c0f2 	ldrsh	ip, [r4, r2]
  42252c:	e2832003 	add	r2, r3, #3
  422530:	e1a00082 	lsl	r0, r2, #1
  422534:	e19400f0 	ldrsh	r0, [r4, r0]
  422538:	e785c101 	str	ip, [r5, r1, lsl #2]
  42253c:	e7850102 	str	r0, [r5, r2, lsl #2]
  422540:	e2833004 	add	r3, r3, #4
  422544:	ea000000 	b	42254c <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x22c>
  422548:	e3a03000 	mov	r3, #0
  42254c:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
  422550:	e2421004 	sub	r1, r2, #4
  422554:	e1510003 	cmp	r1, r3
  422558:	aaffffe9 	bge	422504 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x1e4>
  42255c:	ea000003 	b	422570 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x250>
  422560:	e1a01083 	lsl	r1, r3, #1
  422564:	e19410f1 	ldrsh	r1, [r4, r1]
  422568:	e7851103 	str	r1, [r5, r3, lsl #2]
  42256c:	e2833001 	add	r3, r3, #1
  422570:	e1530002 	cmp	r3, r2
  422574:	bafffff9 	blt	422560 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x240>
  422578:	e084408e 	add	r4, r4, lr, lsl #1
  42257c:	e0855107 	add	r5, r5, r7, lsl #2
  422580:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422584:	e2432001 	sub	r2, r3, #1
  422588:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  42258c:	e3530000 	cmp	r3, #0
  422590:	1affffec 	bne	422548 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x228>
  422594:	ea000082 	b	4227a4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x484>
  422598:	e1a0a121 	lsr	sl, r1, #2
  42259c:	ea000039 	b	422688 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x368>
  4225a0:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  4225a4:	fa003dc0 	blx	431cac <__aeabi_f2d>
  4225a8:	e3a02000 	mov	r2, #0
  4225ac:	e59f31fc 	ldr	r3, [pc, #508]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  4225b0:	fa003d0e 	blx	4319f0 <__adddf3>
  4225b4:	fa003caf 	blx	431878 <floor>
  4225b8:	fa003f32 	blx	432288 <__aeabi_d2iz>
  4225bc:	e1a09000 	mov	r9, r0
  4225c0:	e2868001 	add	r8, r6, #1
  4225c4:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  4225c8:	fa003db7 	blx	431cac <__aeabi_f2d>
  4225cc:	e3a02000 	mov	r2, #0
  4225d0:	e59f31d8 	ldr	r3, [pc, #472]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  4225d4:	fa003d05 	blx	4319f0 <__adddf3>
  4225d8:	fa003ca6 	blx	431878 <floor>
  4225dc:	fa003f29 	blx	432288 <__aeabi_d2iz>
  4225e0:	e7859106 	str	r9, [r5, r6, lsl #2]
  4225e4:	e7850108 	str	r0, [r5, r8, lsl #2]
  4225e8:	e2869002 	add	r9, r6, #2
  4225ec:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  4225f0:	fa003dad 	blx	431cac <__aeabi_f2d>
  4225f4:	e3a02000 	mov	r2, #0
  4225f8:	e59f31b0 	ldr	r3, [pc, #432]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  4225fc:	fa003cfb 	blx	4319f0 <__adddf3>
  422600:	fa003c9c 	blx	431878 <floor>
  422604:	fa003f1f 	blx	432288 <__aeabi_d2iz>
  422608:	e1a0b000 	mov	fp, r0
  42260c:	e2868003 	add	r8, r6, #3
  422610:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  422614:	fa003da4 	blx	431cac <__aeabi_f2d>
  422618:	e3a02000 	mov	r2, #0
  42261c:	e59f318c 	ldr	r3, [pc, #396]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  422620:	fa003cf2 	blx	4319f0 <__adddf3>
  422624:	fa003c93 	blx	431878 <floor>
  422628:	fa003f16 	blx	432288 <__aeabi_d2iz>
  42262c:	e785b109 	str	fp, [r5, r9, lsl #2]
  422630:	e7850108 	str	r0, [r5, r8, lsl #2]
  422634:	e2866004 	add	r6, r6, #4
  422638:	ea000000 	b	422640 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x320>
  42263c:	e3a06000 	mov	r6, #0
  422640:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  422644:	e2483004 	sub	r3, r8, #4
  422648:	e1530006 	cmp	r3, r6
  42264c:	aaffffd3 	bge	4225a0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x280>
  422650:	ea000008 	b	422678 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x358>
  422654:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  422658:	fa003d93 	blx	431cac <__aeabi_f2d>
  42265c:	e3a02000 	mov	r2, #0
  422660:	e59f3148 	ldr	r3, [pc, #328]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  422664:	fa003ce1 	blx	4319f0 <__adddf3>
  422668:	fa003c82 	blx	431878 <floor>
  42266c:	fa003f05 	blx	432288 <__aeabi_d2iz>
  422670:	e7850106 	str	r0, [r5, r6, lsl #2]
  422674:	e2866001 	add	r6, r6, #1
  422678:	e1560008 	cmp	r6, r8
  42267c:	bafffff4 	blt	422654 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x334>
  422680:	e084410a 	add	r4, r4, sl, lsl #2
  422684:	e0855107 	add	r5, r5, r7, lsl #2
  422688:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  42268c:	e2432001 	sub	r2, r3, #1
  422690:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  422694:	e3530000 	cmp	r3, #0
  422698:	1affffe7 	bne	42263c <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x31c>
  42269c:	ea000040 	b	4227a4 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x484>
  4226a0:	e1a0a1a1 	lsr	sl, r1, #3
  4226a4:	ea000039 	b	422790 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x470>
  4226a8:	e0843186 	add	r3, r4, r6, lsl #3
  4226ac:	e8930003 	ldm	r3, {r0, r1}
  4226b0:	e3a02000 	mov	r2, #0
  4226b4:	e59f30f4 	ldr	r3, [pc, #244]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  4226b8:	fa003ccc 	blx	4319f0 <__adddf3>
  4226bc:	fa003c6d 	blx	431878 <floor>
  4226c0:	fa003ef0 	blx	432288 <__aeabi_d2iz>
  4226c4:	e1a09000 	mov	r9, r0
  4226c8:	e2868001 	add	r8, r6, #1
  4226cc:	e0843188 	add	r3, r4, r8, lsl #3
  4226d0:	e8930003 	ldm	r3, {r0, r1}
  4226d4:	e3a02000 	mov	r2, #0
  4226d8:	e59f30d0 	ldr	r3, [pc, #208]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  4226dc:	fa003cc3 	blx	4319f0 <__adddf3>
  4226e0:	fa003c64 	blx	431878 <floor>
  4226e4:	fa003ee7 	blx	432288 <__aeabi_d2iz>
  4226e8:	e7859106 	str	r9, [r5, r6, lsl #2]
  4226ec:	e7850108 	str	r0, [r5, r8, lsl #2]
  4226f0:	e2869002 	add	r9, r6, #2
  4226f4:	e0843189 	add	r3, r4, r9, lsl #3
  4226f8:	e8930003 	ldm	r3, {r0, r1}
  4226fc:	e3a02000 	mov	r2, #0
  422700:	e59f30a8 	ldr	r3, [pc, #168]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  422704:	fa003cb9 	blx	4319f0 <__adddf3>
  422708:	fa003c5a 	blx	431878 <floor>
  42270c:	fa003edd 	blx	432288 <__aeabi_d2iz>
  422710:	e1a0b000 	mov	fp, r0
  422714:	e2868003 	add	r8, r6, #3
  422718:	e0843188 	add	r3, r4, r8, lsl #3
  42271c:	e8930003 	ldm	r3, {r0, r1}
  422720:	e3a02000 	mov	r2, #0
  422724:	e59f3084 	ldr	r3, [pc, #132]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  422728:	fa003cb0 	blx	4319f0 <__adddf3>
  42272c:	fa003c51 	blx	431878 <floor>
  422730:	fa003ed4 	blx	432288 <__aeabi_d2iz>
  422734:	e785b109 	str	fp, [r5, r9, lsl #2]
  422738:	e7850108 	str	r0, [r5, r8, lsl #2]
  42273c:	e2866004 	add	r6, r6, #4
  422740:	ea000000 	b	422748 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x428>
  422744:	e3a06000 	mov	r6, #0
  422748:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  42274c:	e2483004 	sub	r3, r8, #4
  422750:	e1530006 	cmp	r3, r6
  422754:	aaffffd3 	bge	4226a8 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x388>
  422758:	ea000008 	b	422780 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x460>
  42275c:	e0843186 	add	r3, r4, r6, lsl #3
  422760:	e8930003 	ldm	r3, {r0, r1}
  422764:	e3a02000 	mov	r2, #0
  422768:	e59f3040 	ldr	r3, [pc, #64]	; 4227b0 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x490>
  42276c:	fa003c9f 	blx	4319f0 <__adddf3>
  422770:	fa003c40 	blx	431878 <floor>
  422774:	fa003ec3 	blx	432288 <__aeabi_d2iz>
  422778:	e7850106 	str	r0, [r5, r6, lsl #2]
  42277c:	e2866001 	add	r6, r6, #1
  422780:	e1560008 	cmp	r6, r8
  422784:	bafffff4 	blt	42275c <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x43c>
  422788:	e084418a 	add	r4, r4, sl, lsl #3
  42278c:	e0855107 	add	r5, r5, r7, lsl #2
  422790:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422794:	e2432001 	sub	r2, r3, #1
  422798:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  42279c:	e3530000 	cmp	r3, #0
  4227a0:	1affffe7 	bne	422744 <_ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei+0x424>
  4227a4:	e3a00000 	mov	r0, #0
  4227a8:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4227ac:	e12fff1e 	bx	lr
  4227b0:	3fe00000 	.word	0x3fe00000

004227b4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei>:
  4227b4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4227b8:	e1a04000 	mov	r4, r0
  4227bc:	e1a05002 	mov	r5, r2
  4227c0:	e1a070a3 	lsr	r7, r3, #1
  4227c4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  4227c8:	e2033007 	and	r3, r3, #7
  4227cc:	e3530006 	cmp	r3, #6
  4227d0:	908ff103 	addls	pc, pc, r3, lsl #2
  4227d4:	ea0001e8 	b	422f7c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7c8>
  4227d8:	ea000024 	b	422870 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0xbc>
  4227dc:	ea000048 	b	422904 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x150>
  4227e0:	ea00004d 	b	42291c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x168>
  4227e4:	ea0001e4 	b	422f7c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7c8>
  4227e8:	ea000096 	b	422a48 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x294>
  4227ec:	ea0000ef 	b	422bb0 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x3fc>
  4227f0:	ea000168 	b	422d98 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x5e4>
  4227f4:	e7d4e003 	ldrb	lr, [r4, r3]
  4227f8:	e283c001 	add	ip, r3, #1
  4227fc:	e7d4000c 	ldrb	r0, [r4, ip]
  422800:	e0856083 	add	r6, r5, r3, lsl #1
  422804:	e1c6e0b0 	strh	lr, [r6]
  422808:	e085c08c 	add	ip, r5, ip, lsl #1
  42280c:	e1cc00b0 	strh	r0, [ip]
  422810:	e283c002 	add	ip, r3, #2
  422814:	e7d4e00c 	ldrb	lr, [r4, ip]
  422818:	e2832003 	add	r2, r3, #3
  42281c:	e7d40002 	ldrb	r0, [r4, r2]
  422820:	e085c08c 	add	ip, r5, ip, lsl #1
  422824:	e1cce0b0 	strh	lr, [ip]
  422828:	e0852082 	add	r2, r5, r2, lsl #1
  42282c:	e1c200b0 	strh	r0, [r2]
  422830:	e2833004 	add	r3, r3, #4
  422834:	ea000000 	b	42283c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x88>
  422838:	e3a03000 	mov	r3, #0
  42283c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
  422840:	e2402004 	sub	r2, r0, #4
  422844:	e1520003 	cmp	r2, r3
  422848:	aaffffe9 	bge	4227f4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x40>
  42284c:	ea000003 	b	422860 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0xac>
  422850:	e7d42003 	ldrb	r2, [r4, r3]
  422854:	e085c083 	add	ip, r5, r3, lsl #1
  422858:	e1cc20b0 	strh	r2, [ip]
  42285c:	e2833001 	add	r3, r3, #1
  422860:	e1530000 	cmp	r3, r0
  422864:	bafffff9 	blt	422850 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x9c>
  422868:	e0844001 	add	r4, r4, r1
  42286c:	e0855087 	add	r5, r5, r7, lsl #1
  422870:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422874:	e2432001 	sub	r2, r3, #1
  422878:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  42287c:	e3530000 	cmp	r3, #0
  422880:	1affffec 	bne	422838 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x84>
  422884:	ea0001bc 	b	422f7c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7c8>
  422888:	e7d4e003 	ldrb	lr, [r4, r3]
  42288c:	e283c001 	add	ip, r3, #1
  422890:	e7d4000c 	ldrb	r0, [r4, ip]
  422894:	e0856083 	add	r6, r5, r3, lsl #1
  422898:	e1c6e0b0 	strh	lr, [r6]
  42289c:	e085c08c 	add	ip, r5, ip, lsl #1
  4228a0:	e1cc00b0 	strh	r0, [ip]
  4228a4:	e283c002 	add	ip, r3, #2
  4228a8:	e7d4e00c 	ldrb	lr, [r4, ip]
  4228ac:	e2832003 	add	r2, r3, #3
  4228b0:	e7d40002 	ldrb	r0, [r4, r2]
  4228b4:	e085c08c 	add	ip, r5, ip, lsl #1
  4228b8:	e1cce0b0 	strh	lr, [ip]
  4228bc:	e0852082 	add	r2, r5, r2, lsl #1
  4228c0:	e1c200b0 	strh	r0, [r2]
  4228c4:	e2833004 	add	r3, r3, #4
  4228c8:	ea000000 	b	4228d0 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x11c>
  4228cc:	e3a03000 	mov	r3, #0
  4228d0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
  4228d4:	e2402004 	sub	r2, r0, #4
  4228d8:	e1520003 	cmp	r2, r3
  4228dc:	aaffffe9 	bge	422888 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0xd4>
  4228e0:	ea000003 	b	4228f4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x140>
  4228e4:	e7d42003 	ldrb	r2, [r4, r3]
  4228e8:	e085c083 	add	ip, r5, r3, lsl #1
  4228ec:	e1cc20b0 	strh	r2, [ip]
  4228f0:	e2833001 	add	r3, r3, #1
  4228f4:	e1530000 	cmp	r3, r0
  4228f8:	bafffff9 	blt	4228e4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x130>
  4228fc:	e0844001 	add	r4, r4, r1
  422900:	e0855087 	add	r5, r5, r7, lsl #1
  422904:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422908:	e2432001 	sub	r2, r3, #1
  42290c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  422910:	e3530000 	cmp	r3, #0
  422914:	1affffec 	bne	4228cc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x118>
  422918:	ea000197 	b	422f7c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7c8>
  42291c:	e1a000a1 	lsr	r0, r1, #1
  422920:	ea000042 	b	422a30 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x27c>
  422924:	e1a02003 	mov	r2, r3
  422928:	e1a0c083 	lsl	ip, r3, #1
  42292c:	e19460bc 	ldrh	r6, [r4, ip]
  422930:	e2831001 	add	r1, r3, #1
  422934:	e1a01081 	lsl	r1, r1, #1
  422938:	e194e0b1 	ldrh	lr, [r4, r1]
  42293c:	e085c00c 	add	ip, r5, ip
  422940:	e2868902 	add	r8, r6, #32768	; 0x8000
  422944:	e3180801 	tst	r8, #65536	; 0x10000
  422948:	0a000002 	beq	422958 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x1a4>
  42294c:	e3560000 	cmp	r6, #0
  422950:	c59f6630 	ldrgt	r6, [pc, #1584]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422954:	d3a06902 	movle	r6, #32768	; 0x8000
  422958:	e1cc60b0 	strh	r6, [ip]
  42295c:	e0851001 	add	r1, r5, r1
  422960:	e28ec902 	add	ip, lr, #32768	; 0x8000
  422964:	e31c0801 	tst	ip, #65536	; 0x10000
  422968:	0a000002 	beq	422978 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x1c4>
  42296c:	e35e0000 	cmp	lr, #0
  422970:	c59fe610 	ldrgt	lr, [pc, #1552]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422974:	d3a0e902 	movle	lr, #32768	; 0x8000
  422978:	e1c1e0b0 	strh	lr, [r1]
  42297c:	e2821002 	add	r1, r2, #2
  422980:	e1a01081 	lsl	r1, r1, #1
  422984:	e194e0b1 	ldrh	lr, [r4, r1]
  422988:	e2822003 	add	r2, r2, #3
  42298c:	e1a02082 	lsl	r2, r2, #1
  422990:	e194c0b2 	ldrh	ip, [r4, r2]
  422994:	e0851001 	add	r1, r5, r1
  422998:	e28e6902 	add	r6, lr, #32768	; 0x8000
  42299c:	e3160801 	tst	r6, #65536	; 0x10000
  4229a0:	0a000002 	beq	4229b0 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x1fc>
  4229a4:	e35e0000 	cmp	lr, #0
  4229a8:	c59fe5d8 	ldrgt	lr, [pc, #1496]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  4229ac:	d3a0e902 	movle	lr, #32768	; 0x8000
  4229b0:	e1c1e0b0 	strh	lr, [r1]
  4229b4:	e0852002 	add	r2, r5, r2
  4229b8:	e28c1902 	add	r1, ip, #32768	; 0x8000
  4229bc:	e3110801 	tst	r1, #65536	; 0x10000
  4229c0:	0a000002 	beq	4229d0 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x21c>
  4229c4:	e35c0000 	cmp	ip, #0
  4229c8:	c59fc5b8 	ldrgt	ip, [pc, #1464]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  4229cc:	d3a0c902 	movle	ip, #32768	; 0x8000
  4229d0:	e1c2c0b0 	strh	ip, [r2]
  4229d4:	e2833004 	add	r3, r3, #4
  4229d8:	ea000000 	b	4229e0 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x22c>
  4229dc:	e3a03000 	mov	r3, #0
  4229e0:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
  4229e4:	e24c2004 	sub	r2, ip, #4
  4229e8:	e1520003 	cmp	r2, r3
  4229ec:	aaffffcc 	bge	422924 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x170>
  4229f0:	ea00000a 	b	422a20 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x26c>
  4229f4:	e1a02083 	lsl	r2, r3, #1
  4229f8:	e19410b2 	ldrh	r1, [r4, r2]
  4229fc:	e0852002 	add	r2, r5, r2
  422a00:	e281e902 	add	lr, r1, #32768	; 0x8000
  422a04:	e31e0801 	tst	lr, #65536	; 0x10000
  422a08:	0a000002 	beq	422a18 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x264>
  422a0c:	e3510000 	cmp	r1, #0
  422a10:	c59f1570 	ldrgt	r1, [pc, #1392]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422a14:	d3a01902 	movle	r1, #32768	; 0x8000
  422a18:	e1c210b0 	strh	r1, [r2]
  422a1c:	e2833001 	add	r3, r3, #1
  422a20:	e153000c 	cmp	r3, ip
  422a24:	bafffff2 	blt	4229f4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x240>
  422a28:	e0844080 	add	r4, r4, r0, lsl #1
  422a2c:	e0855087 	add	r5, r5, r7, lsl #1
  422a30:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422a34:	e2432001 	sub	r2, r3, #1
  422a38:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  422a3c:	e3530000 	cmp	r3, #0
  422a40:	1affffe5 	bne	4229dc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x228>
  422a44:	ea00014c 	b	422f7c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7c8>
  422a48:	e1a00121 	lsr	r0, r1, #2
  422a4c:	ea000051 	b	422b98 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x3e4>
  422a50:	e1a02003 	mov	r2, r3
  422a54:	e794c103 	ldr	ip, [r4, r3, lsl #2]
  422a58:	e283e001 	add	lr, r3, #1
  422a5c:	e794110e 	ldr	r1, [r4, lr, lsl #2]
  422a60:	e0856083 	add	r6, r5, r3, lsl #1
  422a64:	e28c8902 	add	r8, ip, #32768	; 0x8000
  422a68:	e1b08828 	lsrs	r8, r8, #16
  422a6c:	0a000004 	beq	422a84 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x2d0>
  422a70:	e35c0000 	cmp	ip, #0
  422a74:	c59fc50c 	ldrgt	ip, [pc, #1292]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422a78:	ca000003 	bgt	422a8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x2d8>
  422a7c:	e3a0c902 	mov	ip, #32768	; 0x8000
  422a80:	ea000001 	b	422a8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x2d8>
  422a84:	e1a0c80c 	lsl	ip, ip, #16
  422a88:	e1a0c82c 	lsr	ip, ip, #16
  422a8c:	e1c6c0b0 	strh	ip, [r6]
  422a90:	e085e08e 	add	lr, r5, lr, lsl #1
  422a94:	e281c902 	add	ip, r1, #32768	; 0x8000
  422a98:	e1b0c82c 	lsrs	ip, ip, #16
  422a9c:	0a000004 	beq	422ab4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x300>
  422aa0:	e3510000 	cmp	r1, #0
  422aa4:	c59f14dc 	ldrgt	r1, [pc, #1244]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422aa8:	ca000003 	bgt	422abc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x308>
  422aac:	e3a01902 	mov	r1, #32768	; 0x8000
  422ab0:	ea000001 	b	422abc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x308>
  422ab4:	e1a01801 	lsl	r1, r1, #16
  422ab8:	e1a01821 	lsr	r1, r1, #16
  422abc:	e1ce10b0 	strh	r1, [lr]
  422ac0:	e282e002 	add	lr, r2, #2
  422ac4:	e794c10e 	ldr	ip, [r4, lr, lsl #2]
  422ac8:	e2822003 	add	r2, r2, #3
  422acc:	e7941102 	ldr	r1, [r4, r2, lsl #2]
  422ad0:	e085e08e 	add	lr, r5, lr, lsl #1
  422ad4:	e28c6902 	add	r6, ip, #32768	; 0x8000
  422ad8:	e1b06826 	lsrs	r6, r6, #16
  422adc:	0a000004 	beq	422af4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x340>
  422ae0:	e35c0000 	cmp	ip, #0
  422ae4:	c59fc49c 	ldrgt	ip, [pc, #1180]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422ae8:	ca000003 	bgt	422afc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x348>
  422aec:	e3a0c902 	mov	ip, #32768	; 0x8000
  422af0:	ea000001 	b	422afc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x348>
  422af4:	e1a0c80c 	lsl	ip, ip, #16
  422af8:	e1a0c82c 	lsr	ip, ip, #16
  422afc:	e1cec0b0 	strh	ip, [lr]
  422b00:	e0852082 	add	r2, r5, r2, lsl #1
  422b04:	e281c902 	add	ip, r1, #32768	; 0x8000
  422b08:	e1b0c82c 	lsrs	ip, ip, #16
  422b0c:	0a000004 	beq	422b24 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x370>
  422b10:	e3510000 	cmp	r1, #0
  422b14:	c59f146c 	ldrgt	r1, [pc, #1132]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422b18:	ca000003 	bgt	422b2c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x378>
  422b1c:	e3a01902 	mov	r1, #32768	; 0x8000
  422b20:	ea000001 	b	422b2c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x378>
  422b24:	e1a01801 	lsl	r1, r1, #16
  422b28:	e1a01821 	lsr	r1, r1, #16
  422b2c:	e1c210b0 	strh	r1, [r2]
  422b30:	e2833004 	add	r3, r3, #4
  422b34:	ea000000 	b	422b3c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x388>
  422b38:	e3a03000 	mov	r3, #0
  422b3c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  422b40:	e2412004 	sub	r2, r1, #4
  422b44:	e1520003 	cmp	r2, r3
  422b48:	aaffffc0 	bge	422a50 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x29c>
  422b4c:	ea00000d 	b	422b88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x3d4>
  422b50:	e7942103 	ldr	r2, [r4, r3, lsl #2]
  422b54:	e085c083 	add	ip, r5, r3, lsl #1
  422b58:	e282e902 	add	lr, r2, #32768	; 0x8000
  422b5c:	e1b0e82e 	lsrs	lr, lr, #16
  422b60:	0a000004 	beq	422b78 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x3c4>
  422b64:	e3520000 	cmp	r2, #0
  422b68:	c59f2418 	ldrgt	r2, [pc, #1048]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422b6c:	ca000003 	bgt	422b80 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x3cc>
  422b70:	e3a02902 	mov	r2, #32768	; 0x8000
  422b74:	ea000001 	b	422b80 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x3cc>
  422b78:	e1a02802 	lsl	r2, r2, #16
  422b7c:	e1a02822 	lsr	r2, r2, #16
  422b80:	e1cc20b0 	strh	r2, [ip]
  422b84:	e2833001 	add	r3, r3, #1
  422b88:	e1530001 	cmp	r3, r1
  422b8c:	baffffef 	blt	422b50 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x39c>
  422b90:	e0844100 	add	r4, r4, r0, lsl #2
  422b94:	e0855087 	add	r5, r5, r7, lsl #1
  422b98:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422b9c:	e2432001 	sub	r2, r3, #1
  422ba0:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  422ba4:	e3530000 	cmp	r3, #0
  422ba8:	1affffe2 	bne	422b38 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x384>
  422bac:	ea0000f2 	b	422f7c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7c8>
  422bb0:	e1a09121 	lsr	r9, r1, #2
  422bb4:	ea000071 	b	422d80 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x5cc>
  422bb8:	e1a08006 	mov	r8, r6
  422bbc:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  422bc0:	fa003c39 	blx	431cac <__aeabi_f2d>
  422bc4:	e3a02000 	mov	r2, #0
  422bc8:	e59f33bc 	ldr	r3, [pc, #956]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422bcc:	fa003b87 	blx	4319f0 <__adddf3>
  422bd0:	fa003b28 	blx	431878 <floor>
  422bd4:	fa003dab 	blx	432288 <__aeabi_d2iz>
  422bd8:	e1a0a000 	mov	sl, r0
  422bdc:	e286b001 	add	fp, r6, #1
  422be0:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  422be4:	fa003c30 	blx	431cac <__aeabi_f2d>
  422be8:	e3a02000 	mov	r2, #0
  422bec:	e59f3398 	ldr	r3, [pc, #920]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422bf0:	fa003b7e 	blx	4319f0 <__adddf3>
  422bf4:	fa003b1f 	blx	431878 <floor>
  422bf8:	fa003da2 	blx	432288 <__aeabi_d2iz>
  422bfc:	e0853086 	add	r3, r5, r6, lsl #1
  422c00:	e28a2902 	add	r2, sl, #32768	; 0x8000
  422c04:	e1b02822 	lsrs	r2, r2, #16
  422c08:	0a000004 	beq	422c20 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x46c>
  422c0c:	e35a0000 	cmp	sl, #0
  422c10:	c59fa370 	ldrgt	sl, [pc, #880]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422c14:	ca000003 	bgt	422c28 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x474>
  422c18:	e3a0a902 	mov	sl, #32768	; 0x8000
  422c1c:	ea000001 	b	422c28 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x474>
  422c20:	e1a0a80a 	lsl	sl, sl, #16
  422c24:	e1a0a82a 	lsr	sl, sl, #16
  422c28:	e1c3a0b0 	strh	sl, [r3]
  422c2c:	e085b08b 	add	fp, r5, fp, lsl #1
  422c30:	e2803902 	add	r3, r0, #32768	; 0x8000
  422c34:	e1b03823 	lsrs	r3, r3, #16
  422c38:	0a000004 	beq	422c50 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x49c>
  422c3c:	e3500000 	cmp	r0, #0
  422c40:	c59f0340 	ldrgt	r0, [pc, #832]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422c44:	ca000003 	bgt	422c58 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x4a4>
  422c48:	e3a00902 	mov	r0, #32768	; 0x8000
  422c4c:	ea000001 	b	422c58 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x4a4>
  422c50:	e1a00800 	lsl	r0, r0, #16
  422c54:	e1a00820 	lsr	r0, r0, #16
  422c58:	e1cb00b0 	strh	r0, [fp]
  422c5c:	e288b002 	add	fp, r8, #2
  422c60:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  422c64:	fa003c10 	blx	431cac <__aeabi_f2d>
  422c68:	e3a02000 	mov	r2, #0
  422c6c:	e59f3318 	ldr	r3, [pc, #792]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422c70:	fa003b5e 	blx	4319f0 <__adddf3>
  422c74:	fa003aff 	blx	431878 <floor>
  422c78:	fa003d82 	blx	432288 <__aeabi_d2iz>
  422c7c:	e1a0a000 	mov	sl, r0
  422c80:	e2888003 	add	r8, r8, #3
  422c84:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  422c88:	fa003c07 	blx	431cac <__aeabi_f2d>
  422c8c:	e3a02000 	mov	r2, #0
  422c90:	e59f32f4 	ldr	r3, [pc, #756]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422c94:	fa003b55 	blx	4319f0 <__adddf3>
  422c98:	fa003af6 	blx	431878 <floor>
  422c9c:	fa003d79 	blx	432288 <__aeabi_d2iz>
  422ca0:	e085b08b 	add	fp, r5, fp, lsl #1
  422ca4:	e28a3902 	add	r3, sl, #32768	; 0x8000
  422ca8:	e1b03823 	lsrs	r3, r3, #16
  422cac:	0a000004 	beq	422cc4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x510>
  422cb0:	e35a0000 	cmp	sl, #0
  422cb4:	c59fa2cc 	ldrgt	sl, [pc, #716]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422cb8:	ca000003 	bgt	422ccc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x518>
  422cbc:	e3a0a902 	mov	sl, #32768	; 0x8000
  422cc0:	ea000001 	b	422ccc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x518>
  422cc4:	e1a0a80a 	lsl	sl, sl, #16
  422cc8:	e1a0a82a 	lsr	sl, sl, #16
  422ccc:	e1cba0b0 	strh	sl, [fp]
  422cd0:	e0858088 	add	r8, r5, r8, lsl #1
  422cd4:	e2803902 	add	r3, r0, #32768	; 0x8000
  422cd8:	e1b03823 	lsrs	r3, r3, #16
  422cdc:	0a000004 	beq	422cf4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x540>
  422ce0:	e3500000 	cmp	r0, #0
  422ce4:	c59f029c 	ldrgt	r0, [pc, #668]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422ce8:	ca000003 	bgt	422cfc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x548>
  422cec:	e3a00902 	mov	r0, #32768	; 0x8000
  422cf0:	ea000001 	b	422cfc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x548>
  422cf4:	e1a00800 	lsl	r0, r0, #16
  422cf8:	e1a00820 	lsr	r0, r0, #16
  422cfc:	e1c800b0 	strh	r0, [r8]
  422d00:	e2866004 	add	r6, r6, #4
  422d04:	ea000000 	b	422d0c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x558>
  422d08:	e3a06000 	mov	r6, #0
  422d0c:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  422d10:	e2483004 	sub	r3, r8, #4
  422d14:	e1530006 	cmp	r3, r6
  422d18:	aaffffa6 	bge	422bb8 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x404>
  422d1c:	ea000013 	b	422d70 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x5bc>
  422d20:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  422d24:	fa003be0 	blx	431cac <__aeabi_f2d>
  422d28:	e3a02000 	mov	r2, #0
  422d2c:	e59f3258 	ldr	r3, [pc, #600]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422d30:	fa003b2e 	blx	4319f0 <__adddf3>
  422d34:	fa003acf 	blx	431878 <floor>
  422d38:	fa003d52 	blx	432288 <__aeabi_d2iz>
  422d3c:	e0853086 	add	r3, r5, r6, lsl #1
  422d40:	e2802902 	add	r2, r0, #32768	; 0x8000
  422d44:	e1b02822 	lsrs	r2, r2, #16
  422d48:	0a000004 	beq	422d60 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x5ac>
  422d4c:	e3500000 	cmp	r0, #0
  422d50:	c59f0230 	ldrgt	r0, [pc, #560]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422d54:	ca000003 	bgt	422d68 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x5b4>
  422d58:	e3a00902 	mov	r0, #32768	; 0x8000
  422d5c:	ea000001 	b	422d68 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x5b4>
  422d60:	e1a00800 	lsl	r0, r0, #16
  422d64:	e1a00820 	lsr	r0, r0, #16
  422d68:	e1c300b0 	strh	r0, [r3]
  422d6c:	e2866001 	add	r6, r6, #1
  422d70:	e1560008 	cmp	r6, r8
  422d74:	baffffe9 	blt	422d20 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x56c>
  422d78:	e0844109 	add	r4, r4, r9, lsl #2
  422d7c:	e0855087 	add	r5, r5, r7, lsl #1
  422d80:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422d84:	e2432001 	sub	r2, r3, #1
  422d88:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  422d8c:	e3530000 	cmp	r3, #0
  422d90:	1affffdc 	bne	422d08 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x554>
  422d94:	ea000078 	b	422f7c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7c8>
  422d98:	e1a091a1 	lsr	r9, r1, #3
  422d9c:	ea000071 	b	422f68 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7b4>
  422da0:	e1a08006 	mov	r8, r6
  422da4:	e0843186 	add	r3, r4, r6, lsl #3
  422da8:	e8930003 	ldm	r3, {r0, r1}
  422dac:	e3a02000 	mov	r2, #0
  422db0:	e59f31d4 	ldr	r3, [pc, #468]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422db4:	fa003b0d 	blx	4319f0 <__adddf3>
  422db8:	fa003aae 	blx	431878 <floor>
  422dbc:	fa003d31 	blx	432288 <__aeabi_d2iz>
  422dc0:	e1a0a000 	mov	sl, r0
  422dc4:	e286b001 	add	fp, r6, #1
  422dc8:	e084318b 	add	r3, r4, fp, lsl #3
  422dcc:	e8930003 	ldm	r3, {r0, r1}
  422dd0:	e3a02000 	mov	r2, #0
  422dd4:	e59f31b0 	ldr	r3, [pc, #432]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422dd8:	fa003b04 	blx	4319f0 <__adddf3>
  422ddc:	fa003aa5 	blx	431878 <floor>
  422de0:	fa003d28 	blx	432288 <__aeabi_d2iz>
  422de4:	e0853086 	add	r3, r5, r6, lsl #1
  422de8:	e28a2902 	add	r2, sl, #32768	; 0x8000
  422dec:	e1b02822 	lsrs	r2, r2, #16
  422df0:	0a000004 	beq	422e08 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x654>
  422df4:	e35a0000 	cmp	sl, #0
  422df8:	c59fa188 	ldrgt	sl, [pc, #392]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422dfc:	ca000003 	bgt	422e10 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x65c>
  422e00:	e3a0a902 	mov	sl, #32768	; 0x8000
  422e04:	ea000001 	b	422e10 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x65c>
  422e08:	e1a0a80a 	lsl	sl, sl, #16
  422e0c:	e1a0a82a 	lsr	sl, sl, #16
  422e10:	e1c3a0b0 	strh	sl, [r3]
  422e14:	e085b08b 	add	fp, r5, fp, lsl #1
  422e18:	e2803902 	add	r3, r0, #32768	; 0x8000
  422e1c:	e1b03823 	lsrs	r3, r3, #16
  422e20:	0a000004 	beq	422e38 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x684>
  422e24:	e3500000 	cmp	r0, #0
  422e28:	c59f0158 	ldrgt	r0, [pc, #344]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422e2c:	ca000003 	bgt	422e40 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x68c>
  422e30:	e3a00902 	mov	r0, #32768	; 0x8000
  422e34:	ea000001 	b	422e40 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x68c>
  422e38:	e1a00800 	lsl	r0, r0, #16
  422e3c:	e1a00820 	lsr	r0, r0, #16
  422e40:	e1cb00b0 	strh	r0, [fp]
  422e44:	e288b002 	add	fp, r8, #2
  422e48:	e084318b 	add	r3, r4, fp, lsl #3
  422e4c:	e8930003 	ldm	r3, {r0, r1}
  422e50:	e3a02000 	mov	r2, #0
  422e54:	e59f3130 	ldr	r3, [pc, #304]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422e58:	fa003ae4 	blx	4319f0 <__adddf3>
  422e5c:	fa003a85 	blx	431878 <floor>
  422e60:	fa003d08 	blx	432288 <__aeabi_d2iz>
  422e64:	e1a0a000 	mov	sl, r0
  422e68:	e2888003 	add	r8, r8, #3
  422e6c:	e0843188 	add	r3, r4, r8, lsl #3
  422e70:	e8930003 	ldm	r3, {r0, r1}
  422e74:	e3a02000 	mov	r2, #0
  422e78:	e59f310c 	ldr	r3, [pc, #268]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422e7c:	fa003adb 	blx	4319f0 <__adddf3>
  422e80:	fa003a7c 	blx	431878 <floor>
  422e84:	fa003cff 	blx	432288 <__aeabi_d2iz>
  422e88:	e085b08b 	add	fp, r5, fp, lsl #1
  422e8c:	e28a3902 	add	r3, sl, #32768	; 0x8000
  422e90:	e1b03823 	lsrs	r3, r3, #16
  422e94:	0a000004 	beq	422eac <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x6f8>
  422e98:	e35a0000 	cmp	sl, #0
  422e9c:	c59fa0e4 	ldrgt	sl, [pc, #228]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422ea0:	ca000003 	bgt	422eb4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x700>
  422ea4:	e3a0a902 	mov	sl, #32768	; 0x8000
  422ea8:	ea000001 	b	422eb4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x700>
  422eac:	e1a0a80a 	lsl	sl, sl, #16
  422eb0:	e1a0a82a 	lsr	sl, sl, #16
  422eb4:	e1cba0b0 	strh	sl, [fp]
  422eb8:	e0858088 	add	r8, r5, r8, lsl #1
  422ebc:	e2803902 	add	r3, r0, #32768	; 0x8000
  422ec0:	e1b03823 	lsrs	r3, r3, #16
  422ec4:	0a000004 	beq	422edc <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x728>
  422ec8:	e3500000 	cmp	r0, #0
  422ecc:	c59f00b4 	ldrgt	r0, [pc, #180]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422ed0:	ca000003 	bgt	422ee4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x730>
  422ed4:	e3a00902 	mov	r0, #32768	; 0x8000
  422ed8:	ea000001 	b	422ee4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x730>
  422edc:	e1a00800 	lsl	r0, r0, #16
  422ee0:	e1a00820 	lsr	r0, r0, #16
  422ee4:	e1c800b0 	strh	r0, [r8]
  422ee8:	e2866004 	add	r6, r6, #4
  422eec:	ea000000 	b	422ef4 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x740>
  422ef0:	e3a06000 	mov	r6, #0
  422ef4:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  422ef8:	e2483004 	sub	r3, r8, #4
  422efc:	e1530006 	cmp	r3, r6
  422f00:	aaffffa6 	bge	422da0 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x5ec>
  422f04:	ea000013 	b	422f58 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7a4>
  422f08:	e0843186 	add	r3, r4, r6, lsl #3
  422f0c:	e8930003 	ldm	r3, {r0, r1}
  422f10:	e3a02000 	mov	r2, #0
  422f14:	e59f3070 	ldr	r3, [pc, #112]	; 422f8c <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d8>
  422f18:	fa003ab4 	blx	4319f0 <__adddf3>
  422f1c:	fa003a55 	blx	431878 <floor>
  422f20:	fa003cd8 	blx	432288 <__aeabi_d2iz>
  422f24:	e0853086 	add	r3, r5, r6, lsl #1
  422f28:	e2802902 	add	r2, r0, #32768	; 0x8000
  422f2c:	e1b02822 	lsrs	r2, r2, #16
  422f30:	0a000004 	beq	422f48 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x794>
  422f34:	e3500000 	cmp	r0, #0
  422f38:	c59f0048 	ldrgt	r0, [pc, #72]	; 422f88 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x7d4>
  422f3c:	ca000003 	bgt	422f50 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x79c>
  422f40:	e3a00902 	mov	r0, #32768	; 0x8000
  422f44:	ea000001 	b	422f50 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x79c>
  422f48:	e1a00800 	lsl	r0, r0, #16
  422f4c:	e1a00820 	lsr	r0, r0, #16
  422f50:	e1c300b0 	strh	r0, [r3]
  422f54:	e2866001 	add	r6, r6, #1
  422f58:	e1560008 	cmp	r6, r8
  422f5c:	baffffe9 	blt	422f08 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x754>
  422f60:	e0844189 	add	r4, r4, r9, lsl #3
  422f64:	e0855087 	add	r5, r5, r7, lsl #1
  422f68:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  422f6c:	e2432001 	sub	r2, r3, #1
  422f70:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  422f74:	e3530000 	cmp	r3, #0
  422f78:	1affffdc 	bne	422ef0 <_ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei+0x73c>
  422f7c:	e3a00000 	mov	r0, #0
  422f80:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  422f84:	e12fff1e 	bx	lr
  422f88:	00007fff 	.word	0x00007fff
  422f8c:	3fe00000 	.word	0x3fe00000

00422f90 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei>:
  422f90:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  422f94:	e1a04000 	mov	r4, r0
  422f98:	e1a05002 	mov	r5, r2
  422f9c:	e1a070a3 	lsr	r7, r3, #1
  422fa0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  422fa4:	e2033007 	and	r3, r3, #7
  422fa8:	e3530006 	cmp	r3, #6
  422fac:	908ff103 	addls	pc, pc, r3, lsl #2
  422fb0:	ea0001de 	b	423730 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7a0>
  422fb4:	ea000024 	b	42304c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0xbc>
  422fb8:	ea000048 	b	4230e0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x150>
  422fbc:	ea0001db 	b	423730 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7a0>
  422fc0:	ea00004c 	b	4230f8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x168>
  422fc4:	ea00009b 	b	423238 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x2a8>
  422fc8:	ea0000ef 	b	42338c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x3fc>
  422fcc:	ea000163 	b	423560 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x5d0>
  422fd0:	e7d4e003 	ldrb	lr, [r4, r3]
  422fd4:	e283c001 	add	ip, r3, #1
  422fd8:	e7d4000c 	ldrb	r0, [r4, ip]
  422fdc:	e0856083 	add	r6, r5, r3, lsl #1
  422fe0:	e1c6e0b0 	strh	lr, [r6]
  422fe4:	e085c08c 	add	ip, r5, ip, lsl #1
  422fe8:	e1cc00b0 	strh	r0, [ip]
  422fec:	e283c002 	add	ip, r3, #2
  422ff0:	e7d4e00c 	ldrb	lr, [r4, ip]
  422ff4:	e2832003 	add	r2, r3, #3
  422ff8:	e7d40002 	ldrb	r0, [r4, r2]
  422ffc:	e085c08c 	add	ip, r5, ip, lsl #1
  423000:	e1cce0b0 	strh	lr, [ip]
  423004:	e0852082 	add	r2, r5, r2, lsl #1
  423008:	e1c200b0 	strh	r0, [r2]
  42300c:	e2833004 	add	r3, r3, #4
  423010:	ea000000 	b	423018 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x88>
  423014:	e3a03000 	mov	r3, #0
  423018:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
  42301c:	e2402004 	sub	r2, r0, #4
  423020:	e1520003 	cmp	r2, r3
  423024:	aaffffe9 	bge	422fd0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x40>
  423028:	ea000003 	b	42303c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0xac>
  42302c:	e7d42003 	ldrb	r2, [r4, r3]
  423030:	e085c083 	add	ip, r5, r3, lsl #1
  423034:	e1cc20b0 	strh	r2, [ip]
  423038:	e2833001 	add	r3, r3, #1
  42303c:	e1530000 	cmp	r3, r0
  423040:	bafffff9 	blt	42302c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x9c>
  423044:	e0844001 	add	r4, r4, r1
  423048:	e0855087 	add	r5, r5, r7, lsl #1
  42304c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423050:	e2432001 	sub	r2, r3, #1
  423054:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423058:	e3530000 	cmp	r3, #0
  42305c:	1affffec 	bne	423014 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x84>
  423060:	ea0001b2 	b	423730 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7a0>
  423064:	e7d4e003 	ldrb	lr, [r4, r3]
  423068:	e283c001 	add	ip, r3, #1
  42306c:	e7d4000c 	ldrb	r0, [r4, ip]
  423070:	e0856083 	add	r6, r5, r3, lsl #1
  423074:	e1c6e0b0 	strh	lr, [r6]
  423078:	e085c08c 	add	ip, r5, ip, lsl #1
  42307c:	e1cc00b0 	strh	r0, [ip]
  423080:	e283c002 	add	ip, r3, #2
  423084:	e7d4e00c 	ldrb	lr, [r4, ip]
  423088:	e2832003 	add	r2, r3, #3
  42308c:	e7d40002 	ldrb	r0, [r4, r2]
  423090:	e085c08c 	add	ip, r5, ip, lsl #1
  423094:	e1cce0b0 	strh	lr, [ip]
  423098:	e0852082 	add	r2, r5, r2, lsl #1
  42309c:	e1c200b0 	strh	r0, [r2]
  4230a0:	e2833004 	add	r3, r3, #4
  4230a4:	ea000000 	b	4230ac <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x11c>
  4230a8:	e3a03000 	mov	r3, #0
  4230ac:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
  4230b0:	e2402004 	sub	r2, r0, #4
  4230b4:	e1520003 	cmp	r2, r3
  4230b8:	aaffffe9 	bge	423064 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0xd4>
  4230bc:	ea000003 	b	4230d0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x140>
  4230c0:	e7d42003 	ldrb	r2, [r4, r3]
  4230c4:	e085c083 	add	ip, r5, r3, lsl #1
  4230c8:	e1cc20b0 	strh	r2, [ip]
  4230cc:	e2833001 	add	r3, r3, #1
  4230d0:	e1530000 	cmp	r3, r0
  4230d4:	bafffff9 	blt	4230c0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x130>
  4230d8:	e0844001 	add	r4, r4, r1
  4230dc:	e0855087 	add	r5, r5, r7, lsl #1
  4230e0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  4230e4:	e2432001 	sub	r2, r3, #1
  4230e8:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4230ec:	e3530000 	cmp	r3, #0
  4230f0:	1affffec 	bne	4230a8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x118>
  4230f4:	ea00018d 	b	423730 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7a0>
  4230f8:	e1a000a1 	lsr	r0, r1, #1
  4230fc:	ea000047 	b	423220 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x290>
  423100:	e1a02003 	mov	r2, r3
  423104:	e1a0c083 	lsl	ip, r3, #1
  423108:	e19490bc 	ldrh	r9, [r4, ip]
  42310c:	e1a06809 	lsl	r6, r9, #16
  423110:	e1a06846 	asr	r6, r6, #16
  423114:	e2831001 	add	r1, r3, #1
  423118:	e1a01081 	lsl	r1, r1, #1
  42311c:	e19480b1 	ldrh	r8, [r4, r1]
  423120:	e1a0e808 	lsl	lr, r8, #16
  423124:	e1a0e84e 	asr	lr, lr, #16
  423128:	e085c00c 	add	ip, r5, ip
  42312c:	e1b0a826 	lsrs	sl, r6, #16
  423130:	0a000002 	beq	423140 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x1b0>
  423134:	e3560000 	cmp	r6, #0
  423138:	c59f95fc 	ldrgt	r9, [pc, #1532]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  42313c:	d3a09000 	movle	r9, #0
  423140:	e1cc90b0 	strh	r9, [ip]
  423144:	e0851001 	add	r1, r5, r1
  423148:	e1b0c82e 	lsrs	ip, lr, #16
  42314c:	0a000002 	beq	42315c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x1cc>
  423150:	e35e0000 	cmp	lr, #0
  423154:	c59f85e0 	ldrgt	r8, [pc, #1504]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423158:	d3a08000 	movle	r8, #0
  42315c:	e1c180b0 	strh	r8, [r1]
  423160:	e2821002 	add	r1, r2, #2
  423164:	e1a01081 	lsl	r1, r1, #1
  423168:	e19460b1 	ldrh	r6, [r4, r1]
  42316c:	e1a0e806 	lsl	lr, r6, #16
  423170:	e1a0e84e 	asr	lr, lr, #16
  423174:	e2822003 	add	r2, r2, #3
  423178:	e1a02082 	lsl	r2, r2, #1
  42317c:	e19480b2 	ldrh	r8, [r4, r2]
  423180:	e1a0c808 	lsl	ip, r8, #16
  423184:	e1a0c84c 	asr	ip, ip, #16
  423188:	e0851001 	add	r1, r5, r1
  42318c:	e1b0982e 	lsrs	r9, lr, #16
  423190:	0a000002 	beq	4231a0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x210>
  423194:	e35e0000 	cmp	lr, #0
  423198:	c59f659c 	ldrgt	r6, [pc, #1436]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  42319c:	d3a06000 	movle	r6, #0
  4231a0:	e1c160b0 	strh	r6, [r1]
  4231a4:	e0852002 	add	r2, r5, r2
  4231a8:	e1b0182c 	lsrs	r1, ip, #16
  4231ac:	0a000002 	beq	4231bc <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x22c>
  4231b0:	e35c0000 	cmp	ip, #0
  4231b4:	c59f8580 	ldrgt	r8, [pc, #1408]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4231b8:	d3a08000 	movle	r8, #0
  4231bc:	e1c280b0 	strh	r8, [r2]
  4231c0:	e2833004 	add	r3, r3, #4
  4231c4:	ea000000 	b	4231cc <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x23c>
  4231c8:	e3a03000 	mov	r3, #0
  4231cc:	e59de028 	ldr	lr, [sp, #40]	; 0x28
  4231d0:	e24e2004 	sub	r2, lr, #4
  4231d4:	e1520003 	cmp	r2, r3
  4231d8:	aaffffc8 	bge	423100 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x170>
  4231dc:	ea00000b 	b	423210 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x280>
  4231e0:	e1a02083 	lsl	r2, r3, #1
  4231e4:	e194c0b2 	ldrh	ip, [r4, r2]
  4231e8:	e1a0180c 	lsl	r1, ip, #16
  4231ec:	e1a01841 	asr	r1, r1, #16
  4231f0:	e0852002 	add	r2, r5, r2
  4231f4:	e1b06821 	lsrs	r6, r1, #16
  4231f8:	0a000002 	beq	423208 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x278>
  4231fc:	e3510000 	cmp	r1, #0
  423200:	c59fc534 	ldrgt	ip, [pc, #1332]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423204:	d3a0c000 	movle	ip, #0
  423208:	e1c2c0b0 	strh	ip, [r2]
  42320c:	e2833001 	add	r3, r3, #1
  423210:	e153000e 	cmp	r3, lr
  423214:	bafffff1 	blt	4231e0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x250>
  423218:	e0844080 	add	r4, r4, r0, lsl #1
  42321c:	e0855087 	add	r5, r5, r7, lsl #1
  423220:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423224:	e2432001 	sub	r2, r3, #1
  423228:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  42322c:	e3530000 	cmp	r3, #0
  423230:	1affffe4 	bne	4231c8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x238>
  423234:	ea00013d 	b	423730 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7a0>
  423238:	e1a00121 	lsr	r0, r1, #2
  42323c:	ea00004c 	b	423374 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x3e4>
  423240:	e1a02003 	mov	r2, r3
  423244:	e794c103 	ldr	ip, [r4, r3, lsl #2]
  423248:	e283e001 	add	lr, r3, #1
  42324c:	e794110e 	ldr	r1, [r4, lr, lsl #2]
  423250:	e0856083 	add	r6, r5, r3, lsl #1
  423254:	e1b0882c 	lsrs	r8, ip, #16
  423258:	0a000004 	beq	423270 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x2e0>
  42325c:	e35c0000 	cmp	ip, #0
  423260:	c59fc4d4 	ldrgt	ip, [pc, #1236]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423264:	ca000003 	bgt	423278 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x2e8>
  423268:	e3a0c000 	mov	ip, #0
  42326c:	ea000001 	b	423278 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x2e8>
  423270:	e1a0c80c 	lsl	ip, ip, #16
  423274:	e1a0c82c 	lsr	ip, ip, #16
  423278:	e1c6c0b0 	strh	ip, [r6]
  42327c:	e085e08e 	add	lr, r5, lr, lsl #1
  423280:	e1b0c821 	lsrs	ip, r1, #16
  423284:	0a000004 	beq	42329c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x30c>
  423288:	e3510000 	cmp	r1, #0
  42328c:	c59f14a8 	ldrgt	r1, [pc, #1192]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423290:	ca000003 	bgt	4232a4 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x314>
  423294:	e3a01000 	mov	r1, #0
  423298:	ea000001 	b	4232a4 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x314>
  42329c:	e1a01801 	lsl	r1, r1, #16
  4232a0:	e1a01821 	lsr	r1, r1, #16
  4232a4:	e1ce10b0 	strh	r1, [lr]
  4232a8:	e282e002 	add	lr, r2, #2
  4232ac:	e794c10e 	ldr	ip, [r4, lr, lsl #2]
  4232b0:	e2822003 	add	r2, r2, #3
  4232b4:	e7941102 	ldr	r1, [r4, r2, lsl #2]
  4232b8:	e085e08e 	add	lr, r5, lr, lsl #1
  4232bc:	e1b0682c 	lsrs	r6, ip, #16
  4232c0:	0a000004 	beq	4232d8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x348>
  4232c4:	e35c0000 	cmp	ip, #0
  4232c8:	c59fc46c 	ldrgt	ip, [pc, #1132]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4232cc:	ca000003 	bgt	4232e0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x350>
  4232d0:	e3a0c000 	mov	ip, #0
  4232d4:	ea000001 	b	4232e0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x350>
  4232d8:	e1a0c80c 	lsl	ip, ip, #16
  4232dc:	e1a0c82c 	lsr	ip, ip, #16
  4232e0:	e1cec0b0 	strh	ip, [lr]
  4232e4:	e0852082 	add	r2, r5, r2, lsl #1
  4232e8:	e1b0c821 	lsrs	ip, r1, #16
  4232ec:	0a000004 	beq	423304 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x374>
  4232f0:	e3510000 	cmp	r1, #0
  4232f4:	c59f1440 	ldrgt	r1, [pc, #1088]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4232f8:	ca000003 	bgt	42330c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x37c>
  4232fc:	e3a01000 	mov	r1, #0
  423300:	ea000001 	b	42330c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x37c>
  423304:	e1a01801 	lsl	r1, r1, #16
  423308:	e1a01821 	lsr	r1, r1, #16
  42330c:	e1c210b0 	strh	r1, [r2]
  423310:	e2833004 	add	r3, r3, #4
  423314:	ea000000 	b	42331c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x38c>
  423318:	e3a03000 	mov	r3, #0
  42331c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  423320:	e2412004 	sub	r2, r1, #4
  423324:	e1520003 	cmp	r2, r3
  423328:	aaffffc4 	bge	423240 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x2b0>
  42332c:	ea00000c 	b	423364 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x3d4>
  423330:	e7942103 	ldr	r2, [r4, r3, lsl #2]
  423334:	e085c083 	add	ip, r5, r3, lsl #1
  423338:	e1b0e822 	lsrs	lr, r2, #16
  42333c:	0a000004 	beq	423354 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x3c4>
  423340:	e3520000 	cmp	r2, #0
  423344:	c59f23f0 	ldrgt	r2, [pc, #1008]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423348:	ca000003 	bgt	42335c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x3cc>
  42334c:	e3a02000 	mov	r2, #0
  423350:	ea000001 	b	42335c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x3cc>
  423354:	e1a02802 	lsl	r2, r2, #16
  423358:	e1a02822 	lsr	r2, r2, #16
  42335c:	e1cc20b0 	strh	r2, [ip]
  423360:	e2833001 	add	r3, r3, #1
  423364:	e1530001 	cmp	r3, r1
  423368:	bafffff0 	blt	423330 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x3a0>
  42336c:	e0844100 	add	r4, r4, r0, lsl #2
  423370:	e0855087 	add	r5, r5, r7, lsl #1
  423374:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423378:	e2432001 	sub	r2, r3, #1
  42337c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423380:	e3530000 	cmp	r3, #0
  423384:	1affffe3 	bne	423318 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x388>
  423388:	ea0000e8 	b	423730 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7a0>
  42338c:	e1a09121 	lsr	r9, r1, #2
  423390:	ea00006c 	b	423548 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x5b8>
  423394:	e1a08006 	mov	r8, r6
  423398:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  42339c:	fa003a42 	blx	431cac <__aeabi_f2d>
  4233a0:	e3a02000 	mov	r2, #0
  4233a4:	e59f3394 	ldr	r3, [pc, #916]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  4233a8:	fa003990 	blx	4319f0 <__adddf3>
  4233ac:	fa003931 	blx	431878 <floor>
  4233b0:	fa003bb4 	blx	432288 <__aeabi_d2iz>
  4233b4:	e1a0a000 	mov	sl, r0
  4233b8:	e286b001 	add	fp, r6, #1
  4233bc:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  4233c0:	fa003a39 	blx	431cac <__aeabi_f2d>
  4233c4:	e3a02000 	mov	r2, #0
  4233c8:	e59f3370 	ldr	r3, [pc, #880]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  4233cc:	fa003987 	blx	4319f0 <__adddf3>
  4233d0:	fa003928 	blx	431878 <floor>
  4233d4:	fa003bab 	blx	432288 <__aeabi_d2iz>
  4233d8:	e0853086 	add	r3, r5, r6, lsl #1
  4233dc:	e1b0282a 	lsrs	r2, sl, #16
  4233e0:	0a000004 	beq	4233f8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x468>
  4233e4:	e35a0000 	cmp	sl, #0
  4233e8:	c59fa34c 	ldrgt	sl, [pc, #844]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4233ec:	ca000003 	bgt	423400 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x470>
  4233f0:	e3a0a000 	mov	sl, #0
  4233f4:	ea000001 	b	423400 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x470>
  4233f8:	e1a0a80a 	lsl	sl, sl, #16
  4233fc:	e1a0a82a 	lsr	sl, sl, #16
  423400:	e1c3a0b0 	strh	sl, [r3]
  423404:	e085b08b 	add	fp, r5, fp, lsl #1
  423408:	e1b03820 	lsrs	r3, r0, #16
  42340c:	0a000004 	beq	423424 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x494>
  423410:	e3500000 	cmp	r0, #0
  423414:	c59f0320 	ldrgt	r0, [pc, #800]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423418:	ca000003 	bgt	42342c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x49c>
  42341c:	e3a00000 	mov	r0, #0
  423420:	ea000001 	b	42342c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x49c>
  423424:	e1a00800 	lsl	r0, r0, #16
  423428:	e1a00820 	lsr	r0, r0, #16
  42342c:	e1cb00b0 	strh	r0, [fp]
  423430:	e288b002 	add	fp, r8, #2
  423434:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  423438:	fa003a1b 	blx	431cac <__aeabi_f2d>
  42343c:	e3a02000 	mov	r2, #0
  423440:	e59f32f8 	ldr	r3, [pc, #760]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  423444:	fa003969 	blx	4319f0 <__adddf3>
  423448:	fa00390a 	blx	431878 <floor>
  42344c:	fa003b8d 	blx	432288 <__aeabi_d2iz>
  423450:	e1a0a000 	mov	sl, r0
  423454:	e2888003 	add	r8, r8, #3
  423458:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  42345c:	fa003a12 	blx	431cac <__aeabi_f2d>
  423460:	e3a02000 	mov	r2, #0
  423464:	e59f32d4 	ldr	r3, [pc, #724]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  423468:	fa003960 	blx	4319f0 <__adddf3>
  42346c:	fa003901 	blx	431878 <floor>
  423470:	fa003b84 	blx	432288 <__aeabi_d2iz>
  423474:	e085b08b 	add	fp, r5, fp, lsl #1
  423478:	e1b0382a 	lsrs	r3, sl, #16
  42347c:	0a000004 	beq	423494 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x504>
  423480:	e35a0000 	cmp	sl, #0
  423484:	c59fa2b0 	ldrgt	sl, [pc, #688]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423488:	ca000003 	bgt	42349c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x50c>
  42348c:	e3a0a000 	mov	sl, #0
  423490:	ea000001 	b	42349c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x50c>
  423494:	e1a0a80a 	lsl	sl, sl, #16
  423498:	e1a0a82a 	lsr	sl, sl, #16
  42349c:	e1cba0b0 	strh	sl, [fp]
  4234a0:	e0858088 	add	r8, r5, r8, lsl #1
  4234a4:	e1b03820 	lsrs	r3, r0, #16
  4234a8:	0a000004 	beq	4234c0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x530>
  4234ac:	e3500000 	cmp	r0, #0
  4234b0:	c59f0284 	ldrgt	r0, [pc, #644]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4234b4:	ca000003 	bgt	4234c8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x538>
  4234b8:	e3a00000 	mov	r0, #0
  4234bc:	ea000001 	b	4234c8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x538>
  4234c0:	e1a00800 	lsl	r0, r0, #16
  4234c4:	e1a00820 	lsr	r0, r0, #16
  4234c8:	e1c800b0 	strh	r0, [r8]
  4234cc:	e2866004 	add	r6, r6, #4
  4234d0:	ea000000 	b	4234d8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x548>
  4234d4:	e3a06000 	mov	r6, #0
  4234d8:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  4234dc:	e2483004 	sub	r3, r8, #4
  4234e0:	e1530006 	cmp	r3, r6
  4234e4:	aaffffaa 	bge	423394 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x404>
  4234e8:	ea000012 	b	423538 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x5a8>
  4234ec:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  4234f0:	fa0039ed 	blx	431cac <__aeabi_f2d>
  4234f4:	e3a02000 	mov	r2, #0
  4234f8:	e59f3240 	ldr	r3, [pc, #576]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  4234fc:	fa00393b 	blx	4319f0 <__adddf3>
  423500:	fa0038dc 	blx	431878 <floor>
  423504:	fa003b5f 	blx	432288 <__aeabi_d2iz>
  423508:	e0853086 	add	r3, r5, r6, lsl #1
  42350c:	e1b02820 	lsrs	r2, r0, #16
  423510:	0a000004 	beq	423528 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x598>
  423514:	e3500000 	cmp	r0, #0
  423518:	c59f021c 	ldrgt	r0, [pc, #540]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  42351c:	ca000003 	bgt	423530 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x5a0>
  423520:	e3a00000 	mov	r0, #0
  423524:	ea000001 	b	423530 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x5a0>
  423528:	e1a00800 	lsl	r0, r0, #16
  42352c:	e1a00820 	lsr	r0, r0, #16
  423530:	e1c300b0 	strh	r0, [r3]
  423534:	e2866001 	add	r6, r6, #1
  423538:	e1560008 	cmp	r6, r8
  42353c:	baffffea 	blt	4234ec <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x55c>
  423540:	e0844109 	add	r4, r4, r9, lsl #2
  423544:	e0855087 	add	r5, r5, r7, lsl #1
  423548:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  42354c:	e2432001 	sub	r2, r3, #1
  423550:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423554:	e3530000 	cmp	r3, #0
  423558:	1affffdd 	bne	4234d4 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x544>
  42355c:	ea000073 	b	423730 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7a0>
  423560:	e1a091a1 	lsr	r9, r1, #3
  423564:	ea00006c 	b	42371c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x78c>
  423568:	e1a08006 	mov	r8, r6
  42356c:	e0843186 	add	r3, r4, r6, lsl #3
  423570:	e8930003 	ldm	r3, {r0, r1}
  423574:	e3a02000 	mov	r2, #0
  423578:	e59f31c0 	ldr	r3, [pc, #448]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  42357c:	fa00391b 	blx	4319f0 <__adddf3>
  423580:	fa0038bc 	blx	431878 <floor>
  423584:	fa003b3f 	blx	432288 <__aeabi_d2iz>
  423588:	e1a0a000 	mov	sl, r0
  42358c:	e286b001 	add	fp, r6, #1
  423590:	e084318b 	add	r3, r4, fp, lsl #3
  423594:	e8930003 	ldm	r3, {r0, r1}
  423598:	e3a02000 	mov	r2, #0
  42359c:	e59f319c 	ldr	r3, [pc, #412]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  4235a0:	fa003912 	blx	4319f0 <__adddf3>
  4235a4:	fa0038b3 	blx	431878 <floor>
  4235a8:	fa003b36 	blx	432288 <__aeabi_d2iz>
  4235ac:	e0853086 	add	r3, r5, r6, lsl #1
  4235b0:	e1b0282a 	lsrs	r2, sl, #16
  4235b4:	0a000004 	beq	4235cc <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x63c>
  4235b8:	e35a0000 	cmp	sl, #0
  4235bc:	c59fa178 	ldrgt	sl, [pc, #376]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4235c0:	ca000003 	bgt	4235d4 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x644>
  4235c4:	e3a0a000 	mov	sl, #0
  4235c8:	ea000001 	b	4235d4 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x644>
  4235cc:	e1a0a80a 	lsl	sl, sl, #16
  4235d0:	e1a0a82a 	lsr	sl, sl, #16
  4235d4:	e1c3a0b0 	strh	sl, [r3]
  4235d8:	e085b08b 	add	fp, r5, fp, lsl #1
  4235dc:	e1b03820 	lsrs	r3, r0, #16
  4235e0:	0a000004 	beq	4235f8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x668>
  4235e4:	e3500000 	cmp	r0, #0
  4235e8:	c59f014c 	ldrgt	r0, [pc, #332]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4235ec:	ca000003 	bgt	423600 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x670>
  4235f0:	e3a00000 	mov	r0, #0
  4235f4:	ea000001 	b	423600 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x670>
  4235f8:	e1a00800 	lsl	r0, r0, #16
  4235fc:	e1a00820 	lsr	r0, r0, #16
  423600:	e1cb00b0 	strh	r0, [fp]
  423604:	e288b002 	add	fp, r8, #2
  423608:	e084318b 	add	r3, r4, fp, lsl #3
  42360c:	e8930003 	ldm	r3, {r0, r1}
  423610:	e3a02000 	mov	r2, #0
  423614:	e59f3124 	ldr	r3, [pc, #292]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  423618:	fa0038f4 	blx	4319f0 <__adddf3>
  42361c:	fa003895 	blx	431878 <floor>
  423620:	fa003b18 	blx	432288 <__aeabi_d2iz>
  423624:	e1a0a000 	mov	sl, r0
  423628:	e2888003 	add	r8, r8, #3
  42362c:	e0843188 	add	r3, r4, r8, lsl #3
  423630:	e8930003 	ldm	r3, {r0, r1}
  423634:	e3a02000 	mov	r2, #0
  423638:	e59f3100 	ldr	r3, [pc, #256]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  42363c:	fa0038eb 	blx	4319f0 <__adddf3>
  423640:	fa00388c 	blx	431878 <floor>
  423644:	fa003b0f 	blx	432288 <__aeabi_d2iz>
  423648:	e085b08b 	add	fp, r5, fp, lsl #1
  42364c:	e1b0382a 	lsrs	r3, sl, #16
  423650:	0a000004 	beq	423668 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x6d8>
  423654:	e35a0000 	cmp	sl, #0
  423658:	c59fa0dc 	ldrgt	sl, [pc, #220]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  42365c:	ca000003 	bgt	423670 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x6e0>
  423660:	e3a0a000 	mov	sl, #0
  423664:	ea000001 	b	423670 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x6e0>
  423668:	e1a0a80a 	lsl	sl, sl, #16
  42366c:	e1a0a82a 	lsr	sl, sl, #16
  423670:	e1cba0b0 	strh	sl, [fp]
  423674:	e0858088 	add	r8, r5, r8, lsl #1
  423678:	e1b03820 	lsrs	r3, r0, #16
  42367c:	0a000004 	beq	423694 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x704>
  423680:	e3500000 	cmp	r0, #0
  423684:	c59f00b0 	ldrgt	r0, [pc, #176]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  423688:	ca000003 	bgt	42369c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x70c>
  42368c:	e3a00000 	mov	r0, #0
  423690:	ea000001 	b	42369c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x70c>
  423694:	e1a00800 	lsl	r0, r0, #16
  423698:	e1a00820 	lsr	r0, r0, #16
  42369c:	e1c800b0 	strh	r0, [r8]
  4236a0:	e2866004 	add	r6, r6, #4
  4236a4:	ea000000 	b	4236ac <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x71c>
  4236a8:	e3a06000 	mov	r6, #0
  4236ac:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  4236b0:	e2483004 	sub	r3, r8, #4
  4236b4:	e1530006 	cmp	r3, r6
  4236b8:	aaffffaa 	bge	423568 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x5d8>
  4236bc:	ea000012 	b	42370c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x77c>
  4236c0:	e0843186 	add	r3, r4, r6, lsl #3
  4236c4:	e8930003 	ldm	r3, {r0, r1}
  4236c8:	e3a02000 	mov	r2, #0
  4236cc:	e59f306c 	ldr	r3, [pc, #108]	; 423740 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7b0>
  4236d0:	fa0038c6 	blx	4319f0 <__adddf3>
  4236d4:	fa003867 	blx	431878 <floor>
  4236d8:	fa003aea 	blx	432288 <__aeabi_d2iz>
  4236dc:	e0853086 	add	r3, r5, r6, lsl #1
  4236e0:	e1b02820 	lsrs	r2, r0, #16
  4236e4:	0a000004 	beq	4236fc <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x76c>
  4236e8:	e3500000 	cmp	r0, #0
  4236ec:	c59f0048 	ldrgt	r0, [pc, #72]	; 42373c <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x7ac>
  4236f0:	ca000003 	bgt	423704 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x774>
  4236f4:	e3a00000 	mov	r0, #0
  4236f8:	ea000001 	b	423704 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x774>
  4236fc:	e1a00800 	lsl	r0, r0, #16
  423700:	e1a00820 	lsr	r0, r0, #16
  423704:	e1c300b0 	strh	r0, [r3]
  423708:	e2866001 	add	r6, r6, #1
  42370c:	e1560008 	cmp	r6, r8
  423710:	baffffea 	blt	4236c0 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x730>
  423714:	e0844189 	add	r4, r4, r9, lsl #3
  423718:	e0855087 	add	r5, r5, r7, lsl #1
  42371c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423720:	e2432001 	sub	r2, r3, #1
  423724:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423728:	e3530000 	cmp	r3, #0
  42372c:	1affffdd 	bne	4236a8 <_ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei+0x718>
  423730:	e3a00000 	mov	r0, #0
  423734:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  423738:	e12fff1e 	bx	lr
  42373c:	0000ffff 	.word	0x0000ffff
  423740:	3fe00000 	.word	0x3fe00000

00423744 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei>:
  423744:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  423748:	e1a04000 	mov	r4, r0
  42374c:	e1a05002 	mov	r5, r2
  423750:	e1a07003 	mov	r7, r3
  423754:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  423758:	e2033007 	and	r3, r3, #7
  42375c:	e3530006 	cmp	r3, #6
  423760:	908ff103 	addls	pc, pc, r3, lsl #2
  423764:	ea000246 	b	424084 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x940>
  423768:	ea000043 	b	42387c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x138>
  42376c:	ea000244 	b	424084 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x940>
  423770:	ea000047 	b	423894 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x150>
  423774:	ea0000a0 	b	4239fc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x2b8>
  423778:	ea000103 	b	423b8c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x448>
  42377c:	ea000157 	b	423ce0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x59c>
  423780:	ea0001cb 	b	423eb4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x770>
  423784:	e1a02003 	mov	r2, r3
  423788:	e7d4e003 	ldrb	lr, [r4, r3]
  42378c:	e2830001 	add	r0, r3, #1
  423790:	e7d4c000 	ldrb	ip, [r4, r0]
  423794:	e0856003 	add	r6, r5, r3
  423798:	e28e8080 	add	r8, lr, #128	; 0x80
  42379c:	e3d880ff 	bics	r8, r8, #255	; 0xff
  4237a0:	0a000002 	beq	4237b0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6c>
  4237a4:	e35e0000 	cmp	lr, #0
  4237a8:	c3a0e07f 	movgt	lr, #127	; 0x7f
  4237ac:	d3a0e080 	movle	lr, #128	; 0x80
  4237b0:	e5c6e000 	strb	lr, [r6]
  4237b4:	e0850000 	add	r0, r5, r0
  4237b8:	e28ce080 	add	lr, ip, #128	; 0x80
  4237bc:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  4237c0:	0a000002 	beq	4237d0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x8c>
  4237c4:	e35c0000 	cmp	ip, #0
  4237c8:	c3a0c07f 	movgt	ip, #127	; 0x7f
  4237cc:	d3a0c080 	movle	ip, #128	; 0x80
  4237d0:	e5c0c000 	strb	ip, [r0]
  4237d4:	e2820002 	add	r0, r2, #2
  4237d8:	e7d4e000 	ldrb	lr, [r4, r0]
  4237dc:	e2822003 	add	r2, r2, #3
  4237e0:	e7d4c002 	ldrb	ip, [r4, r2]
  4237e4:	e0850000 	add	r0, r5, r0
  4237e8:	e28e6080 	add	r6, lr, #128	; 0x80
  4237ec:	e3d660ff 	bics	r6, r6, #255	; 0xff
  4237f0:	0a000002 	beq	423800 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0xbc>
  4237f4:	e35e0000 	cmp	lr, #0
  4237f8:	c3a0e07f 	movgt	lr, #127	; 0x7f
  4237fc:	d3a0e080 	movle	lr, #128	; 0x80
  423800:	e5c0e000 	strb	lr, [r0]
  423804:	e0852002 	add	r2, r5, r2
  423808:	e28c0080 	add	r0, ip, #128	; 0x80
  42380c:	e3d000ff 	bics	r0, r0, #255	; 0xff
  423810:	0a000002 	beq	423820 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0xdc>
  423814:	e35c0000 	cmp	ip, #0
  423818:	c3a0c07f 	movgt	ip, #127	; 0x7f
  42381c:	d3a0c080 	movle	ip, #128	; 0x80
  423820:	e5c2c000 	strb	ip, [r2]
  423824:	e2833004 	add	r3, r3, #4
  423828:	ea000000 	b	423830 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0xec>
  42382c:	e3a03000 	mov	r3, #0
  423830:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
  423834:	e2402004 	sub	r2, r0, #4
  423838:	e1520003 	cmp	r2, r3
  42383c:	aaffffd0 	bge	423784 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x40>
  423840:	ea000009 	b	42386c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x128>
  423844:	e7d42003 	ldrb	r2, [r4, r3]
  423848:	e085c003 	add	ip, r5, r3
  42384c:	e282e080 	add	lr, r2, #128	; 0x80
  423850:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  423854:	0a000002 	beq	423864 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x120>
  423858:	e3520000 	cmp	r2, #0
  42385c:	c3a0207f 	movgt	r2, #127	; 0x7f
  423860:	d3a02080 	movle	r2, #128	; 0x80
  423864:	e5cc2000 	strb	r2, [ip]
  423868:	e2833001 	add	r3, r3, #1
  42386c:	e1530000 	cmp	r3, r0
  423870:	bafffff3 	blt	423844 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x100>
  423874:	e0844001 	add	r4, r4, r1
  423878:	e0855007 	add	r5, r5, r7
  42387c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423880:	e2432001 	sub	r2, r3, #1
  423884:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423888:	e3530000 	cmp	r3, #0
  42388c:	1affffe6 	bne	42382c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0xe8>
  423890:	ea0001fb 	b	424084 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x940>
  423894:	e1a000a1 	lsr	r0, r1, #1
  423898:	ea000051 	b	4239e4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x2a0>
  42389c:	e1a02003 	mov	r2, r3
  4238a0:	e1a01083 	lsl	r1, r3, #1
  4238a4:	e194e0b1 	ldrh	lr, [r4, r1]
  4238a8:	e2831001 	add	r1, r3, #1
  4238ac:	e1a0c081 	lsl	ip, r1, #1
  4238b0:	e194c0bc 	ldrh	ip, [r4, ip]
  4238b4:	e0856003 	add	r6, r5, r3
  4238b8:	e28e8080 	add	r8, lr, #128	; 0x80
  4238bc:	e3d880ff 	bics	r8, r8, #255	; 0xff
  4238c0:	0a000004 	beq	4238d8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x194>
  4238c4:	e35e0000 	cmp	lr, #0
  4238c8:	c3a0e07f 	movgt	lr, #127	; 0x7f
  4238cc:	ca000002 	bgt	4238dc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x198>
  4238d0:	e3a0e080 	mov	lr, #128	; 0x80
  4238d4:	ea000000 	b	4238dc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x198>
  4238d8:	e20ee0ff 	and	lr, lr, #255	; 0xff
  4238dc:	e5c6e000 	strb	lr, [r6]
  4238e0:	e0851001 	add	r1, r5, r1
  4238e4:	e28ce080 	add	lr, ip, #128	; 0x80
  4238e8:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  4238ec:	0a000004 	beq	423904 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x1c0>
  4238f0:	e35c0000 	cmp	ip, #0
  4238f4:	c3a0c07f 	movgt	ip, #127	; 0x7f
  4238f8:	ca000002 	bgt	423908 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x1c4>
  4238fc:	e3a0c080 	mov	ip, #128	; 0x80
  423900:	ea000000 	b	423908 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x1c4>
  423904:	e20cc0ff 	and	ip, ip, #255	; 0xff
  423908:	e5c1c000 	strb	ip, [r1]
  42390c:	e2821002 	add	r1, r2, #2
  423910:	e1a0c081 	lsl	ip, r1, #1
  423914:	e194e0bc 	ldrh	lr, [r4, ip]
  423918:	e2822003 	add	r2, r2, #3
  42391c:	e1a0c082 	lsl	ip, r2, #1
  423920:	e194c0bc 	ldrh	ip, [r4, ip]
  423924:	e0851001 	add	r1, r5, r1
  423928:	e28e6080 	add	r6, lr, #128	; 0x80
  42392c:	e3d660ff 	bics	r6, r6, #255	; 0xff
  423930:	0a000004 	beq	423948 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x204>
  423934:	e35e0000 	cmp	lr, #0
  423938:	c3a0e07f 	movgt	lr, #127	; 0x7f
  42393c:	ca000002 	bgt	42394c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x208>
  423940:	e3a0e080 	mov	lr, #128	; 0x80
  423944:	ea000000 	b	42394c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x208>
  423948:	e20ee0ff 	and	lr, lr, #255	; 0xff
  42394c:	e5c1e000 	strb	lr, [r1]
  423950:	e0852002 	add	r2, r5, r2
  423954:	e28c1080 	add	r1, ip, #128	; 0x80
  423958:	e3d110ff 	bics	r1, r1, #255	; 0xff
  42395c:	0a000004 	beq	423974 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x230>
  423960:	e35c0000 	cmp	ip, #0
  423964:	c3a0c07f 	movgt	ip, #127	; 0x7f
  423968:	ca000002 	bgt	423978 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x234>
  42396c:	e3a0c080 	mov	ip, #128	; 0x80
  423970:	ea000000 	b	423978 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x234>
  423974:	e20cc0ff 	and	ip, ip, #255	; 0xff
  423978:	e5c2c000 	strb	ip, [r2]
  42397c:	e2833004 	add	r3, r3, #4
  423980:	ea000000 	b	423988 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x244>
  423984:	e3a03000 	mov	r3, #0
  423988:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  42398c:	e2412004 	sub	r2, r1, #4
  423990:	e1520003 	cmp	r2, r3
  423994:	aaffffc0 	bge	42389c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x158>
  423998:	ea00000d 	b	4239d4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x290>
  42399c:	e1a02083 	lsl	r2, r3, #1
  4239a0:	e19420b2 	ldrh	r2, [r4, r2]
  4239a4:	e085c003 	add	ip, r5, r3
  4239a8:	e282e080 	add	lr, r2, #128	; 0x80
  4239ac:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  4239b0:	0a000004 	beq	4239c8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x284>
  4239b4:	e3520000 	cmp	r2, #0
  4239b8:	c3a0207f 	movgt	r2, #127	; 0x7f
  4239bc:	ca000002 	bgt	4239cc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x288>
  4239c0:	e3a02080 	mov	r2, #128	; 0x80
  4239c4:	ea000000 	b	4239cc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x288>
  4239c8:	e20220ff 	and	r2, r2, #255	; 0xff
  4239cc:	e5cc2000 	strb	r2, [ip]
  4239d0:	e2833001 	add	r3, r3, #1
  4239d4:	e1530001 	cmp	r3, r1
  4239d8:	baffffef 	blt	42399c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x258>
  4239dc:	e0844080 	add	r4, r4, r0, lsl #1
  4239e0:	e0855007 	add	r5, r5, r7
  4239e4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  4239e8:	e2432001 	sub	r2, r3, #1
  4239ec:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4239f0:	e3530000 	cmp	r3, #0
  4239f4:	1affffe2 	bne	423984 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x240>
  4239f8:	ea0001a1 	b	424084 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x940>
  4239fc:	e1a000a1 	lsr	r0, r1, #1
  423a00:	ea00005b 	b	423b74 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x430>
  423a04:	e1a02003 	mov	r2, r3
  423a08:	e1a01083 	lsl	r1, r3, #1
  423a0c:	e19480b1 	ldrh	r8, [r4, r1]
  423a10:	e1a0e808 	lsl	lr, r8, #16
  423a14:	e1a0e84e 	asr	lr, lr, #16
  423a18:	e2831001 	add	r1, r3, #1
  423a1c:	e1a0c081 	lsl	ip, r1, #1
  423a20:	e19460bc 	ldrh	r6, [r4, ip]
  423a24:	e1a0c806 	lsl	ip, r6, #16
  423a28:	e1a0c84c 	asr	ip, ip, #16
  423a2c:	e0859003 	add	r9, r5, r3
  423a30:	e28ea080 	add	sl, lr, #128	; 0x80
  423a34:	e3daa0ff 	bics	sl, sl, #255	; 0xff
  423a38:	0a000004 	beq	423a50 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x30c>
  423a3c:	e35e0000 	cmp	lr, #0
  423a40:	c3a0807f 	movgt	r8, #127	; 0x7f
  423a44:	ca000002 	bgt	423a54 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x310>
  423a48:	e3a08080 	mov	r8, #128	; 0x80
  423a4c:	ea000000 	b	423a54 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x310>
  423a50:	e20880ff 	and	r8, r8, #255	; 0xff
  423a54:	e5c98000 	strb	r8, [r9]
  423a58:	e0851001 	add	r1, r5, r1
  423a5c:	e28ce080 	add	lr, ip, #128	; 0x80
  423a60:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  423a64:	0a000004 	beq	423a7c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x338>
  423a68:	e35c0000 	cmp	ip, #0
  423a6c:	c3a0607f 	movgt	r6, #127	; 0x7f
  423a70:	ca000002 	bgt	423a80 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x33c>
  423a74:	e3a06080 	mov	r6, #128	; 0x80
  423a78:	ea000000 	b	423a80 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x33c>
  423a7c:	e20660ff 	and	r6, r6, #255	; 0xff
  423a80:	e5c16000 	strb	r6, [r1]
  423a84:	e2821002 	add	r1, r2, #2
  423a88:	e1a0c081 	lsl	ip, r1, #1
  423a8c:	e19480bc 	ldrh	r8, [r4, ip]
  423a90:	e1a0e808 	lsl	lr, r8, #16
  423a94:	e1a0e84e 	asr	lr, lr, #16
  423a98:	e2822003 	add	r2, r2, #3
  423a9c:	e1a0c082 	lsl	ip, r2, #1
  423aa0:	e19460bc 	ldrh	r6, [r4, ip]
  423aa4:	e1a0c806 	lsl	ip, r6, #16
  423aa8:	e1a0c84c 	asr	ip, ip, #16
  423aac:	e0851001 	add	r1, r5, r1
  423ab0:	e28e9080 	add	r9, lr, #128	; 0x80
  423ab4:	e3d990ff 	bics	r9, r9, #255	; 0xff
  423ab8:	0a000004 	beq	423ad0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x38c>
  423abc:	e35e0000 	cmp	lr, #0
  423ac0:	c3a0807f 	movgt	r8, #127	; 0x7f
  423ac4:	ca000002 	bgt	423ad4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x390>
  423ac8:	e3a08080 	mov	r8, #128	; 0x80
  423acc:	ea000000 	b	423ad4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x390>
  423ad0:	e20880ff 	and	r8, r8, #255	; 0xff
  423ad4:	e5c18000 	strb	r8, [r1]
  423ad8:	e0852002 	add	r2, r5, r2
  423adc:	e28c1080 	add	r1, ip, #128	; 0x80
  423ae0:	e3d110ff 	bics	r1, r1, #255	; 0xff
  423ae4:	0a000004 	beq	423afc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x3b8>
  423ae8:	e35c0000 	cmp	ip, #0
  423aec:	c3a0607f 	movgt	r6, #127	; 0x7f
  423af0:	ca000002 	bgt	423b00 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x3bc>
  423af4:	e3a06080 	mov	r6, #128	; 0x80
  423af8:	ea000000 	b	423b00 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x3bc>
  423afc:	e20660ff 	and	r6, r6, #255	; 0xff
  423b00:	e5c26000 	strb	r6, [r2]
  423b04:	e2833004 	add	r3, r3, #4
  423b08:	ea000000 	b	423b10 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x3cc>
  423b0c:	e3a03000 	mov	r3, #0
  423b10:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
  423b14:	e24c2004 	sub	r2, ip, #4
  423b18:	e1520003 	cmp	r2, r3
  423b1c:	aaffffb8 	bge	423a04 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x2c0>
  423b20:	ea00000f 	b	423b64 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x420>
  423b24:	e1a02083 	lsl	r2, r3, #1
  423b28:	e19410b2 	ldrh	r1, [r4, r2]
  423b2c:	e1a02801 	lsl	r2, r1, #16
  423b30:	e1a02842 	asr	r2, r2, #16
  423b34:	e085e003 	add	lr, r5, r3
  423b38:	e2826080 	add	r6, r2, #128	; 0x80
  423b3c:	e3d660ff 	bics	r6, r6, #255	; 0xff
  423b40:	0a000004 	beq	423b58 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x414>
  423b44:	e3520000 	cmp	r2, #0
  423b48:	c3a0107f 	movgt	r1, #127	; 0x7f
  423b4c:	ca000002 	bgt	423b5c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x418>
  423b50:	e3a01080 	mov	r1, #128	; 0x80
  423b54:	ea000000 	b	423b5c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x418>
  423b58:	e20110ff 	and	r1, r1, #255	; 0xff
  423b5c:	e5ce1000 	strb	r1, [lr]
  423b60:	e2833001 	add	r3, r3, #1
  423b64:	e153000c 	cmp	r3, ip
  423b68:	baffffed 	blt	423b24 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x3e0>
  423b6c:	e0844080 	add	r4, r4, r0, lsl #1
  423b70:	e0855007 	add	r5, r5, r7
  423b74:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423b78:	e2432001 	sub	r2, r3, #1
  423b7c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423b80:	e3530000 	cmp	r3, #0
  423b84:	1affffe0 	bne	423b0c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x3c8>
  423b88:	ea00013d 	b	424084 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x940>
  423b8c:	e1a00121 	lsr	r0, r1, #2
  423b90:	ea00004c 	b	423cc8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x584>
  423b94:	e1a02003 	mov	r2, r3
  423b98:	e794e103 	ldr	lr, [r4, r3, lsl #2]
  423b9c:	e2831001 	add	r1, r3, #1
  423ba0:	e794c101 	ldr	ip, [r4, r1, lsl #2]
  423ba4:	e0856003 	add	r6, r5, r3
  423ba8:	e28e8080 	add	r8, lr, #128	; 0x80
  423bac:	e3d880ff 	bics	r8, r8, #255	; 0xff
  423bb0:	0a000004 	beq	423bc8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x484>
  423bb4:	e35e0000 	cmp	lr, #0
  423bb8:	c3a0e07f 	movgt	lr, #127	; 0x7f
  423bbc:	ca000002 	bgt	423bcc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x488>
  423bc0:	e3a0e080 	mov	lr, #128	; 0x80
  423bc4:	ea000000 	b	423bcc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x488>
  423bc8:	e20ee0ff 	and	lr, lr, #255	; 0xff
  423bcc:	e5c6e000 	strb	lr, [r6]
  423bd0:	e0851001 	add	r1, r5, r1
  423bd4:	e28ce080 	add	lr, ip, #128	; 0x80
  423bd8:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  423bdc:	0a000004 	beq	423bf4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x4b0>
  423be0:	e35c0000 	cmp	ip, #0
  423be4:	c3a0c07f 	movgt	ip, #127	; 0x7f
  423be8:	ca000002 	bgt	423bf8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x4b4>
  423bec:	e3a0c080 	mov	ip, #128	; 0x80
  423bf0:	ea000000 	b	423bf8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x4b4>
  423bf4:	e20cc0ff 	and	ip, ip, #255	; 0xff
  423bf8:	e5c1c000 	strb	ip, [r1]
  423bfc:	e2821002 	add	r1, r2, #2
  423c00:	e794e101 	ldr	lr, [r4, r1, lsl #2]
  423c04:	e2822003 	add	r2, r2, #3
  423c08:	e794c102 	ldr	ip, [r4, r2, lsl #2]
  423c0c:	e0851001 	add	r1, r5, r1
  423c10:	e28e6080 	add	r6, lr, #128	; 0x80
  423c14:	e3d660ff 	bics	r6, r6, #255	; 0xff
  423c18:	0a000004 	beq	423c30 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x4ec>
  423c1c:	e35e0000 	cmp	lr, #0
  423c20:	c3a0e07f 	movgt	lr, #127	; 0x7f
  423c24:	ca000002 	bgt	423c34 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x4f0>
  423c28:	e3a0e080 	mov	lr, #128	; 0x80
  423c2c:	ea000000 	b	423c34 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x4f0>
  423c30:	e20ee0ff 	and	lr, lr, #255	; 0xff
  423c34:	e5c1e000 	strb	lr, [r1]
  423c38:	e0852002 	add	r2, r5, r2
  423c3c:	e28c1080 	add	r1, ip, #128	; 0x80
  423c40:	e3d110ff 	bics	r1, r1, #255	; 0xff
  423c44:	0a000004 	beq	423c5c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x518>
  423c48:	e35c0000 	cmp	ip, #0
  423c4c:	c3a0c07f 	movgt	ip, #127	; 0x7f
  423c50:	ca000002 	bgt	423c60 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x51c>
  423c54:	e3a0c080 	mov	ip, #128	; 0x80
  423c58:	ea000000 	b	423c60 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x51c>
  423c5c:	e20cc0ff 	and	ip, ip, #255	; 0xff
  423c60:	e5c2c000 	strb	ip, [r2]
  423c64:	e2833004 	add	r3, r3, #4
  423c68:	ea000000 	b	423c70 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x52c>
  423c6c:	e3a03000 	mov	r3, #0
  423c70:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  423c74:	e2412004 	sub	r2, r1, #4
  423c78:	e1520003 	cmp	r2, r3
  423c7c:	aaffffc4 	bge	423b94 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x450>
  423c80:	ea00000c 	b	423cb8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x574>
  423c84:	e7942103 	ldr	r2, [r4, r3, lsl #2]
  423c88:	e085c003 	add	ip, r5, r3
  423c8c:	e282e080 	add	lr, r2, #128	; 0x80
  423c90:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  423c94:	0a000004 	beq	423cac <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x568>
  423c98:	e3520000 	cmp	r2, #0
  423c9c:	c3a0207f 	movgt	r2, #127	; 0x7f
  423ca0:	ca000002 	bgt	423cb0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x56c>
  423ca4:	e3a02080 	mov	r2, #128	; 0x80
  423ca8:	ea000000 	b	423cb0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x56c>
  423cac:	e20220ff 	and	r2, r2, #255	; 0xff
  423cb0:	e5cc2000 	strb	r2, [ip]
  423cb4:	e2833001 	add	r3, r3, #1
  423cb8:	e1530001 	cmp	r3, r1
  423cbc:	bafffff0 	blt	423c84 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x540>
  423cc0:	e0844100 	add	r4, r4, r0, lsl #2
  423cc4:	e0855007 	add	r5, r5, r7
  423cc8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423ccc:	e2432001 	sub	r2, r3, #1
  423cd0:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423cd4:	e3530000 	cmp	r3, #0
  423cd8:	1affffe3 	bne	423c6c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x528>
  423cdc:	ea0000e8 	b	424084 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x940>
  423ce0:	e1a0a121 	lsr	sl, r1, #2
  423ce4:	ea00006c 	b	423e9c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x758>
  423ce8:	e1a08006 	mov	r8, r6
  423cec:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  423cf0:	fa0037ed 	blx	431cac <__aeabi_f2d>
  423cf4:	e3a02000 	mov	r2, #0
  423cf8:	e59f3390 	ldr	r3, [pc, #912]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423cfc:	fa00373b 	blx	4319f0 <__adddf3>
  423d00:	fa0036dc 	blx	431878 <floor>
  423d04:	fa00395f 	blx	432288 <__aeabi_d2iz>
  423d08:	e1a0b000 	mov	fp, r0
  423d0c:	e2869001 	add	r9, r6, #1
  423d10:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  423d14:	fa0037e4 	blx	431cac <__aeabi_f2d>
  423d18:	e3a02000 	mov	r2, #0
  423d1c:	e59f336c 	ldr	r3, [pc, #876]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423d20:	fa003732 	blx	4319f0 <__adddf3>
  423d24:	fa0036d3 	blx	431878 <floor>
  423d28:	fa003956 	blx	432288 <__aeabi_d2iz>
  423d2c:	e0853006 	add	r3, r5, r6
  423d30:	e28b2080 	add	r2, fp, #128	; 0x80
  423d34:	e3d220ff 	bics	r2, r2, #255	; 0xff
  423d38:	0a000004 	beq	423d50 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x60c>
  423d3c:	e35b0000 	cmp	fp, #0
  423d40:	c3a0b07f 	movgt	fp, #127	; 0x7f
  423d44:	ca000002 	bgt	423d54 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x610>
  423d48:	e3a0b080 	mov	fp, #128	; 0x80
  423d4c:	ea000000 	b	423d54 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x610>
  423d50:	e20bb0ff 	and	fp, fp, #255	; 0xff
  423d54:	e5c3b000 	strb	fp, [r3]
  423d58:	e0853009 	add	r3, r5, r9
  423d5c:	e2802080 	add	r2, r0, #128	; 0x80
  423d60:	e3d220ff 	bics	r2, r2, #255	; 0xff
  423d64:	0a000004 	beq	423d7c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x638>
  423d68:	e3500000 	cmp	r0, #0
  423d6c:	c3a0007f 	movgt	r0, #127	; 0x7f
  423d70:	ca000002 	bgt	423d80 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x63c>
  423d74:	e3a00080 	mov	r0, #128	; 0x80
  423d78:	ea000000 	b	423d80 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x63c>
  423d7c:	e20000ff 	and	r0, r0, #255	; 0xff
  423d80:	e5c30000 	strb	r0, [r3]
  423d84:	e2889002 	add	r9, r8, #2
  423d88:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  423d8c:	fa0037c6 	blx	431cac <__aeabi_f2d>
  423d90:	e3a02000 	mov	r2, #0
  423d94:	e59f32f4 	ldr	r3, [pc, #756]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423d98:	fa003714 	blx	4319f0 <__adddf3>
  423d9c:	fa0036b5 	blx	431878 <floor>
  423da0:	fa003938 	blx	432288 <__aeabi_d2iz>
  423da4:	e1a0b000 	mov	fp, r0
  423da8:	e2888003 	add	r8, r8, #3
  423dac:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  423db0:	fa0037bd 	blx	431cac <__aeabi_f2d>
  423db4:	e3a02000 	mov	r2, #0
  423db8:	e59f32d0 	ldr	r3, [pc, #720]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423dbc:	fa00370b 	blx	4319f0 <__adddf3>
  423dc0:	fa0036ac 	blx	431878 <floor>
  423dc4:	fa00392f 	blx	432288 <__aeabi_d2iz>
  423dc8:	e0859009 	add	r9, r5, r9
  423dcc:	e28b3080 	add	r3, fp, #128	; 0x80
  423dd0:	e3d330ff 	bics	r3, r3, #255	; 0xff
  423dd4:	0a000004 	beq	423dec <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6a8>
  423dd8:	e35b0000 	cmp	fp, #0
  423ddc:	c3a0b07f 	movgt	fp, #127	; 0x7f
  423de0:	ca000002 	bgt	423df0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6ac>
  423de4:	e3a0b080 	mov	fp, #128	; 0x80
  423de8:	ea000000 	b	423df0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6ac>
  423dec:	e20bb0ff 	and	fp, fp, #255	; 0xff
  423df0:	e5c9b000 	strb	fp, [r9]
  423df4:	e0858008 	add	r8, r5, r8
  423df8:	e2803080 	add	r3, r0, #128	; 0x80
  423dfc:	e3d330ff 	bics	r3, r3, #255	; 0xff
  423e00:	0a000004 	beq	423e18 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6d4>
  423e04:	e3500000 	cmp	r0, #0
  423e08:	c3a0007f 	movgt	r0, #127	; 0x7f
  423e0c:	ca000002 	bgt	423e1c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6d8>
  423e10:	e3a00080 	mov	r0, #128	; 0x80
  423e14:	ea000000 	b	423e1c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6d8>
  423e18:	e20000ff 	and	r0, r0, #255	; 0xff
  423e1c:	e5c80000 	strb	r0, [r8]
  423e20:	e2866004 	add	r6, r6, #4
  423e24:	ea000000 	b	423e2c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6e8>
  423e28:	e3a06000 	mov	r6, #0
  423e2c:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  423e30:	e2483004 	sub	r3, r8, #4
  423e34:	e1530006 	cmp	r3, r6
  423e38:	aaffffaa 	bge	423ce8 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x5a4>
  423e3c:	ea000012 	b	423e8c <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x748>
  423e40:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  423e44:	fa003798 	blx	431cac <__aeabi_f2d>
  423e48:	e3a02000 	mov	r2, #0
  423e4c:	e59f323c 	ldr	r3, [pc, #572]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423e50:	fa0036e6 	blx	4319f0 <__adddf3>
  423e54:	fa003687 	blx	431878 <floor>
  423e58:	fa00390a 	blx	432288 <__aeabi_d2iz>
  423e5c:	e0853006 	add	r3, r5, r6
  423e60:	e2802080 	add	r2, r0, #128	; 0x80
  423e64:	e3d220ff 	bics	r2, r2, #255	; 0xff
  423e68:	0a000004 	beq	423e80 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x73c>
  423e6c:	e3500000 	cmp	r0, #0
  423e70:	c3a0007f 	movgt	r0, #127	; 0x7f
  423e74:	ca000002 	bgt	423e84 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x740>
  423e78:	e3a00080 	mov	r0, #128	; 0x80
  423e7c:	ea000000 	b	423e84 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x740>
  423e80:	e20000ff 	and	r0, r0, #255	; 0xff
  423e84:	e5c30000 	strb	r0, [r3]
  423e88:	e2866001 	add	r6, r6, #1
  423e8c:	e1560008 	cmp	r6, r8
  423e90:	baffffea 	blt	423e40 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6fc>
  423e94:	e084410a 	add	r4, r4, sl, lsl #2
  423e98:	e0855007 	add	r5, r5, r7
  423e9c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  423ea0:	e2432001 	sub	r2, r3, #1
  423ea4:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  423ea8:	e3530000 	cmp	r3, #0
  423eac:	1affffdd 	bne	423e28 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x6e4>
  423eb0:	ea000073 	b	424084 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x940>
  423eb4:	e1a0a1a1 	lsr	sl, r1, #3
  423eb8:	ea00006c 	b	424070 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x92c>
  423ebc:	e1a08006 	mov	r8, r6
  423ec0:	e0843186 	add	r3, r4, r6, lsl #3
  423ec4:	e8930003 	ldm	r3, {r0, r1}
  423ec8:	e3a02000 	mov	r2, #0
  423ecc:	e59f31bc 	ldr	r3, [pc, #444]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423ed0:	fa0036c6 	blx	4319f0 <__adddf3>
  423ed4:	fa003667 	blx	431878 <floor>
  423ed8:	fa0038ea 	blx	432288 <__aeabi_d2iz>
  423edc:	e1a0b000 	mov	fp, r0
  423ee0:	e2869001 	add	r9, r6, #1
  423ee4:	e0843189 	add	r3, r4, r9, lsl #3
  423ee8:	e8930003 	ldm	r3, {r0, r1}
  423eec:	e3a02000 	mov	r2, #0
  423ef0:	e59f3198 	ldr	r3, [pc, #408]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423ef4:	fa0036bd 	blx	4319f0 <__adddf3>
  423ef8:	fa00365e 	blx	431878 <floor>
  423efc:	fa0038e1 	blx	432288 <__aeabi_d2iz>
  423f00:	e0853006 	add	r3, r5, r6
  423f04:	e28b2080 	add	r2, fp, #128	; 0x80
  423f08:	e3d220ff 	bics	r2, r2, #255	; 0xff
  423f0c:	0a000004 	beq	423f24 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x7e0>
  423f10:	e35b0000 	cmp	fp, #0
  423f14:	c3a0b07f 	movgt	fp, #127	; 0x7f
  423f18:	ca000002 	bgt	423f28 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x7e4>
  423f1c:	e3a0b080 	mov	fp, #128	; 0x80
  423f20:	ea000000 	b	423f28 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x7e4>
  423f24:	e20bb0ff 	and	fp, fp, #255	; 0xff
  423f28:	e5c3b000 	strb	fp, [r3]
  423f2c:	e0853009 	add	r3, r5, r9
  423f30:	e2802080 	add	r2, r0, #128	; 0x80
  423f34:	e3d220ff 	bics	r2, r2, #255	; 0xff
  423f38:	0a000004 	beq	423f50 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x80c>
  423f3c:	e3500000 	cmp	r0, #0
  423f40:	c3a0007f 	movgt	r0, #127	; 0x7f
  423f44:	ca000002 	bgt	423f54 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x810>
  423f48:	e3a00080 	mov	r0, #128	; 0x80
  423f4c:	ea000000 	b	423f54 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x810>
  423f50:	e20000ff 	and	r0, r0, #255	; 0xff
  423f54:	e5c30000 	strb	r0, [r3]
  423f58:	e2889002 	add	r9, r8, #2
  423f5c:	e0843189 	add	r3, r4, r9, lsl #3
  423f60:	e8930003 	ldm	r3, {r0, r1}
  423f64:	e3a02000 	mov	r2, #0
  423f68:	e59f3120 	ldr	r3, [pc, #288]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423f6c:	fa00369f 	blx	4319f0 <__adddf3>
  423f70:	fa003640 	blx	431878 <floor>
  423f74:	fa0038c3 	blx	432288 <__aeabi_d2iz>
  423f78:	e1a0b000 	mov	fp, r0
  423f7c:	e2888003 	add	r8, r8, #3
  423f80:	e0843188 	add	r3, r4, r8, lsl #3
  423f84:	e8930003 	ldm	r3, {r0, r1}
  423f88:	e3a02000 	mov	r2, #0
  423f8c:	e59f30fc 	ldr	r3, [pc, #252]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  423f90:	fa003696 	blx	4319f0 <__adddf3>
  423f94:	fa003637 	blx	431878 <floor>
  423f98:	fa0038ba 	blx	432288 <__aeabi_d2iz>
  423f9c:	e0859009 	add	r9, r5, r9
  423fa0:	e28b3080 	add	r3, fp, #128	; 0x80
  423fa4:	e3d330ff 	bics	r3, r3, #255	; 0xff
  423fa8:	0a000004 	beq	423fc0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x87c>
  423fac:	e35b0000 	cmp	fp, #0
  423fb0:	c3a0b07f 	movgt	fp, #127	; 0x7f
  423fb4:	ca000002 	bgt	423fc4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x880>
  423fb8:	e3a0b080 	mov	fp, #128	; 0x80
  423fbc:	ea000000 	b	423fc4 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x880>
  423fc0:	e20bb0ff 	and	fp, fp, #255	; 0xff
  423fc4:	e5c9b000 	strb	fp, [r9]
  423fc8:	e0858008 	add	r8, r5, r8
  423fcc:	e2803080 	add	r3, r0, #128	; 0x80
  423fd0:	e3d330ff 	bics	r3, r3, #255	; 0xff
  423fd4:	0a000004 	beq	423fec <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x8a8>
  423fd8:	e3500000 	cmp	r0, #0
  423fdc:	c3a0007f 	movgt	r0, #127	; 0x7f
  423fe0:	ca000002 	bgt	423ff0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x8ac>
  423fe4:	e3a00080 	mov	r0, #128	; 0x80
  423fe8:	ea000000 	b	423ff0 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x8ac>
  423fec:	e20000ff 	and	r0, r0, #255	; 0xff
  423ff0:	e5c80000 	strb	r0, [r8]
  423ff4:	e2866004 	add	r6, r6, #4
  423ff8:	ea000000 	b	424000 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x8bc>
  423ffc:	e3a06000 	mov	r6, #0
  424000:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  424004:	e2483004 	sub	r3, r8, #4
  424008:	e1530006 	cmp	r3, r6
  42400c:	aaffffaa 	bge	423ebc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x778>
  424010:	ea000012 	b	424060 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x91c>
  424014:	e0843186 	add	r3, r4, r6, lsl #3
  424018:	e8930003 	ldm	r3, {r0, r1}
  42401c:	e3a02000 	mov	r2, #0
  424020:	e59f3068 	ldr	r3, [pc, #104]	; 424090 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x94c>
  424024:	fa003671 	blx	4319f0 <__adddf3>
  424028:	fa003612 	blx	431878 <floor>
  42402c:	fa003895 	blx	432288 <__aeabi_d2iz>
  424030:	e0853006 	add	r3, r5, r6
  424034:	e2802080 	add	r2, r0, #128	; 0x80
  424038:	e3d220ff 	bics	r2, r2, #255	; 0xff
  42403c:	0a000004 	beq	424054 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x910>
  424040:	e3500000 	cmp	r0, #0
  424044:	c3a0007f 	movgt	r0, #127	; 0x7f
  424048:	ca000002 	bgt	424058 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x914>
  42404c:	e3a00080 	mov	r0, #128	; 0x80
  424050:	ea000000 	b	424058 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x914>
  424054:	e20000ff 	and	r0, r0, #255	; 0xff
  424058:	e5c30000 	strb	r0, [r3]
  42405c:	e2866001 	add	r6, r6, #1
  424060:	e1560008 	cmp	r6, r8
  424064:	baffffea 	blt	424014 <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x8d0>
  424068:	e084418a 	add	r4, r4, sl, lsl #3
  42406c:	e0855007 	add	r5, r5, r7
  424070:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  424074:	e2432001 	sub	r2, r3, #1
  424078:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  42407c:	e3530000 	cmp	r3, #0
  424080:	1affffdd 	bne	423ffc <_ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei+0x8b8>
  424084:	e3a00000 	mov	r0, #0
  424088:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42408c:	e12fff1e 	bx	lr
  424090:	3fe00000 	.word	0x3fe00000

00424094 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei>:
  424094:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  424098:	e1a04000 	mov	r4, r0
  42409c:	e1a05002 	mov	r5, r2
  4240a0:	e1a07003 	mov	r7, r3
  4240a4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  4240a8:	e2033007 	and	r3, r3, #7
  4240ac:	e2433001 	sub	r3, r3, #1
  4240b0:	e3530005 	cmp	r3, #5
  4240b4:	908ff103 	addls	pc, pc, r3, lsl #2
  4240b8:	ea00021a 	b	424928 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x894>
  4240bc:	ea000004 	b	4240d4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x40>
  4240c0:	ea000035 	b	42419c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x108>
  4240c4:	ea000089 	b	4242f0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x25c>
  4240c8:	ea0000e7 	b	42446c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x3d8>
  4240cc:	ea000136 	b	4245ac <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x518>
  4240d0:	ea0001a5 	b	42476c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x6d8>
  4240d4:	e1a00001 	mov	r0, r1
  4240d8:	ea000029 	b	424184 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0xf0>
  4240dc:	e1a02003 	mov	r2, r3
  4240e0:	e7d46003 	ldrb	r6, [r4, r3]
  4240e4:	e283c001 	add	ip, r3, #1
  4240e8:	e7d4100c 	ldrb	r1, [r4, ip]
  4240ec:	e085e003 	add	lr, r5, r3
  4240f0:	e5ce6000 	strb	r6, [lr]
  4240f4:	e085c00c 	add	ip, r5, ip
  4240f8:	e3d1e0ff 	bics	lr, r1, #255	; 0xff
  4240fc:	0a000002 	beq	42410c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x78>
  424100:	e3510000 	cmp	r1, #0
  424104:	c3a010ff 	movgt	r1, #255	; 0xff
  424108:	d3a01000 	movle	r1, #0
  42410c:	e5cc1000 	strb	r1, [ip]
  424110:	e282c002 	add	ip, r2, #2
  424114:	e7d4100c 	ldrb	r1, [r4, ip]
  424118:	e2822003 	add	r2, r2, #3
  42411c:	e7d4e002 	ldrb	lr, [r4, r2]
  424120:	e085c00c 	add	ip, r5, ip
  424124:	e5cc1000 	strb	r1, [ip]
  424128:	e0852002 	add	r2, r5, r2
  42412c:	e3de10ff 	bics	r1, lr, #255	; 0xff
  424130:	0a000002 	beq	424140 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0xac>
  424134:	e35e0000 	cmp	lr, #0
  424138:	c3a0e0ff 	movgt	lr, #255	; 0xff
  42413c:	d3a0e000 	movle	lr, #0
  424140:	e5c2e000 	strb	lr, [r2]
  424144:	e2833004 	add	r3, r3, #4
  424148:	ea000000 	b	424150 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0xbc>
  42414c:	e3a03000 	mov	r3, #0
  424150:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  424154:	e2412004 	sub	r2, r1, #4
  424158:	e1520003 	cmp	r2, r3
  42415c:	aaffffde 	bge	4240dc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x48>
  424160:	ea000003 	b	424174 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0xe0>
  424164:	e7d42003 	ldrb	r2, [r4, r3]
  424168:	e085c003 	add	ip, r5, r3
  42416c:	e5cc2000 	strb	r2, [ip]
  424170:	e2833001 	add	r3, r3, #1
  424174:	e1530001 	cmp	r3, r1
  424178:	bafffff9 	blt	424164 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0xd0>
  42417c:	e0844000 	add	r4, r4, r0
  424180:	e0855007 	add	r5, r5, r7
  424184:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  424188:	e2432001 	sub	r2, r3, #1
  42418c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  424190:	e3530000 	cmp	r3, #0
  424194:	1affffec 	bne	42414c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0xb8>
  424198:	ea0001e2 	b	424928 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x894>
  42419c:	e1a000a1 	lsr	r0, r1, #1
  4241a0:	ea00004c 	b	4242d8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x244>
  4241a4:	e1a02003 	mov	r2, r3
  4241a8:	e1a01083 	lsl	r1, r3, #1
  4241ac:	e194e0b1 	ldrh	lr, [r4, r1]
  4241b0:	e2831001 	add	r1, r3, #1
  4241b4:	e1a0c081 	lsl	ip, r1, #1
  4241b8:	e194c0bc 	ldrh	ip, [r4, ip]
  4241bc:	e0856003 	add	r6, r5, r3
  4241c0:	e3de80ff 	bics	r8, lr, #255	; 0xff
  4241c4:	0a000004 	beq	4241dc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x148>
  4241c8:	e35e0000 	cmp	lr, #0
  4241cc:	c3a0e0ff 	movgt	lr, #255	; 0xff
  4241d0:	ca000002 	bgt	4241e0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x14c>
  4241d4:	e3a0e000 	mov	lr, #0
  4241d8:	ea000000 	b	4241e0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x14c>
  4241dc:	e20ee0ff 	and	lr, lr, #255	; 0xff
  4241e0:	e5c6e000 	strb	lr, [r6]
  4241e4:	e0851001 	add	r1, r5, r1
  4241e8:	e3dce0ff 	bics	lr, ip, #255	; 0xff
  4241ec:	0a000004 	beq	424204 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x170>
  4241f0:	e35c0000 	cmp	ip, #0
  4241f4:	c3a0c0ff 	movgt	ip, #255	; 0xff
  4241f8:	ca000002 	bgt	424208 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x174>
  4241fc:	e3a0c000 	mov	ip, #0
  424200:	ea000000 	b	424208 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x174>
  424204:	e20cc0ff 	and	ip, ip, #255	; 0xff
  424208:	e5c1c000 	strb	ip, [r1]
  42420c:	e2821002 	add	r1, r2, #2
  424210:	e1a0c081 	lsl	ip, r1, #1
  424214:	e194e0bc 	ldrh	lr, [r4, ip]
  424218:	e2822003 	add	r2, r2, #3
  42421c:	e1a0c082 	lsl	ip, r2, #1
  424220:	e194c0bc 	ldrh	ip, [r4, ip]
  424224:	e0851001 	add	r1, r5, r1
  424228:	e3de60ff 	bics	r6, lr, #255	; 0xff
  42422c:	0a000004 	beq	424244 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1b0>
  424230:	e35e0000 	cmp	lr, #0
  424234:	c3a0e0ff 	movgt	lr, #255	; 0xff
  424238:	ca000002 	bgt	424248 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1b4>
  42423c:	e3a0e000 	mov	lr, #0
  424240:	ea000000 	b	424248 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1b4>
  424244:	e20ee0ff 	and	lr, lr, #255	; 0xff
  424248:	e5c1e000 	strb	lr, [r1]
  42424c:	e0852002 	add	r2, r5, r2
  424250:	e3dc10ff 	bics	r1, ip, #255	; 0xff
  424254:	0a000004 	beq	42426c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1d8>
  424258:	e35c0000 	cmp	ip, #0
  42425c:	c3a0c0ff 	movgt	ip, #255	; 0xff
  424260:	ca000002 	bgt	424270 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1dc>
  424264:	e3a0c000 	mov	ip, #0
  424268:	ea000000 	b	424270 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1dc>
  42426c:	e20cc0ff 	and	ip, ip, #255	; 0xff
  424270:	e5c2c000 	strb	ip, [r2]
  424274:	e2833004 	add	r3, r3, #4
  424278:	ea000000 	b	424280 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1ec>
  42427c:	e3a03000 	mov	r3, #0
  424280:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  424284:	e2412004 	sub	r2, r1, #4
  424288:	e1520003 	cmp	r2, r3
  42428c:	aaffffc4 	bge	4241a4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x110>
  424290:	ea00000c 	b	4242c8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x234>
  424294:	e1a02083 	lsl	r2, r3, #1
  424298:	e19420b2 	ldrh	r2, [r4, r2]
  42429c:	e085c003 	add	ip, r5, r3
  4242a0:	e3d2e0ff 	bics	lr, r2, #255	; 0xff
  4242a4:	0a000004 	beq	4242bc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x228>
  4242a8:	e3520000 	cmp	r2, #0
  4242ac:	c3a020ff 	movgt	r2, #255	; 0xff
  4242b0:	ca000002 	bgt	4242c0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x22c>
  4242b4:	e3a02000 	mov	r2, #0
  4242b8:	ea000000 	b	4242c0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x22c>
  4242bc:	e20220ff 	and	r2, r2, #255	; 0xff
  4242c0:	e5cc2000 	strb	r2, [ip]
  4242c4:	e2833001 	add	r3, r3, #1
  4242c8:	e1530001 	cmp	r3, r1
  4242cc:	bafffff0 	blt	424294 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x200>
  4242d0:	e0844080 	add	r4, r4, r0, lsl #1
  4242d4:	e0855007 	add	r5, r5, r7
  4242d8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  4242dc:	e2432001 	sub	r2, r3, #1
  4242e0:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4242e4:	e3530000 	cmp	r3, #0
  4242e8:	1affffe3 	bne	42427c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x1e8>
  4242ec:	ea00018d 	b	424928 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x894>
  4242f0:	e1a000a1 	lsr	r0, r1, #1
  4242f4:	ea000056 	b	424454 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x3c0>
  4242f8:	e1a0c003 	mov	ip, r3
  4242fc:	e1a02083 	lsl	r2, r3, #1
  424300:	e19410b2 	ldrh	r1, [r4, r2]
  424304:	e1a02801 	lsl	r2, r1, #16
  424308:	e1a08842 	asr	r8, r2, #16
  42430c:	e283e001 	add	lr, r3, #1
  424310:	e1a0208e 	lsl	r2, lr, #1
  424314:	e19420b2 	ldrh	r2, [r4, r2]
  424318:	e1a06802 	lsl	r6, r2, #16
  42431c:	e1a06846 	asr	r6, r6, #16
  424320:	e0859003 	add	r9, r5, r3
  424324:	e3110cff 	tst	r1, #65280	; 0xff00
  424328:	0a000004 	beq	424340 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x2ac>
  42432c:	e3580000 	cmp	r8, #0
  424330:	c3a010ff 	movgt	r1, #255	; 0xff
  424334:	ca000002 	bgt	424344 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x2b0>
  424338:	e3a01000 	mov	r1, #0
  42433c:	ea000000 	b	424344 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x2b0>
  424340:	e20110ff 	and	r1, r1, #255	; 0xff
  424344:	e5c91000 	strb	r1, [r9]
  424348:	e085e00e 	add	lr, r5, lr
  42434c:	e3120cff 	tst	r2, #65280	; 0xff00
  424350:	0a000004 	beq	424368 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x2d4>
  424354:	e3560000 	cmp	r6, #0
  424358:	c3a020ff 	movgt	r2, #255	; 0xff
  42435c:	ca000002 	bgt	42436c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x2d8>
  424360:	e3a02000 	mov	r2, #0
  424364:	ea000000 	b	42436c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x2d8>
  424368:	e20220ff 	and	r2, r2, #255	; 0xff
  42436c:	e5ce2000 	strb	r2, [lr]
  424370:	e28ce002 	add	lr, ip, #2
  424374:	e1a0208e 	lsl	r2, lr, #1
  424378:	e19410b2 	ldrh	r1, [r4, r2]
  42437c:	e1a08801 	lsl	r8, r1, #16
  424380:	e1a08848 	asr	r8, r8, #16
  424384:	e28cc003 	add	ip, ip, #3
  424388:	e1a0208c 	lsl	r2, ip, #1
  42438c:	e19420b2 	ldrh	r2, [r4, r2]
  424390:	e1a06802 	lsl	r6, r2, #16
  424394:	e1a06846 	asr	r6, r6, #16
  424398:	e085e00e 	add	lr, r5, lr
  42439c:	e3110cff 	tst	r1, #65280	; 0xff00
  4243a0:	0a000004 	beq	4243b8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x324>
  4243a4:	e3580000 	cmp	r8, #0
  4243a8:	c3a010ff 	movgt	r1, #255	; 0xff
  4243ac:	ca000002 	bgt	4243bc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x328>
  4243b0:	e3a01000 	mov	r1, #0
  4243b4:	ea000000 	b	4243bc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x328>
  4243b8:	e20110ff 	and	r1, r1, #255	; 0xff
  4243bc:	e5ce1000 	strb	r1, [lr]
  4243c0:	e085c00c 	add	ip, r5, ip
  4243c4:	e3120cff 	tst	r2, #65280	; 0xff00
  4243c8:	0a000004 	beq	4243e0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x34c>
  4243cc:	e3560000 	cmp	r6, #0
  4243d0:	c3a020ff 	movgt	r2, #255	; 0xff
  4243d4:	ca000002 	bgt	4243e4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x350>
  4243d8:	e3a02000 	mov	r2, #0
  4243dc:	ea000000 	b	4243e4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x350>
  4243e0:	e20220ff 	and	r2, r2, #255	; 0xff
  4243e4:	e5cc2000 	strb	r2, [ip]
  4243e8:	e2833004 	add	r3, r3, #4
  4243ec:	ea000000 	b	4243f4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x360>
  4243f0:	e3a03000 	mov	r3, #0
  4243f4:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
  4243f8:	e24c2004 	sub	r2, ip, #4
  4243fc:	e1520003 	cmp	r2, r3
  424400:	aaffffbc 	bge	4242f8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x264>
  424404:	ea00000e 	b	424444 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x3b0>
  424408:	e1a02083 	lsl	r2, r3, #1
  42440c:	e19420b2 	ldrh	r2, [r4, r2]
  424410:	e1a01802 	lsl	r1, r2, #16
  424414:	e1a01841 	asr	r1, r1, #16
  424418:	e085e003 	add	lr, r5, r3
  42441c:	e3120cff 	tst	r2, #65280	; 0xff00
  424420:	0a000004 	beq	424438 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x3a4>
  424424:	e3510000 	cmp	r1, #0
  424428:	c3a020ff 	movgt	r2, #255	; 0xff
  42442c:	ca000002 	bgt	42443c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x3a8>
  424430:	e3a02000 	mov	r2, #0
  424434:	ea000000 	b	42443c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x3a8>
  424438:	e20220ff 	and	r2, r2, #255	; 0xff
  42443c:	e5ce2000 	strb	r2, [lr]
  424440:	e2833001 	add	r3, r3, #1
  424444:	e153000c 	cmp	r3, ip
  424448:	baffffee 	blt	424408 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x374>
  42444c:	e0844080 	add	r4, r4, r0, lsl #1
  424450:	e0855007 	add	r5, r5, r7
  424454:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  424458:	e2432001 	sub	r2, r3, #1
  42445c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  424460:	e3530000 	cmp	r3, #0
  424464:	1affffe1 	bne	4243f0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x35c>
  424468:	ea00012e 	b	424928 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x894>
  42446c:	e1a00121 	lsr	r0, r1, #2
  424470:	ea000047 	b	424594 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x500>
  424474:	e1a02003 	mov	r2, r3
  424478:	e794e103 	ldr	lr, [r4, r3, lsl #2]
  42447c:	e2831001 	add	r1, r3, #1
  424480:	e794c101 	ldr	ip, [r4, r1, lsl #2]
  424484:	e0856003 	add	r6, r5, r3
  424488:	e3de80ff 	bics	r8, lr, #255	; 0xff
  42448c:	0a000004 	beq	4244a4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x410>
  424490:	e35e0000 	cmp	lr, #0
  424494:	c3a0e0ff 	movgt	lr, #255	; 0xff
  424498:	ca000002 	bgt	4244a8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x414>
  42449c:	e3a0e000 	mov	lr, #0
  4244a0:	ea000000 	b	4244a8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x414>
  4244a4:	e20ee0ff 	and	lr, lr, #255	; 0xff
  4244a8:	e5c6e000 	strb	lr, [r6]
  4244ac:	e0851001 	add	r1, r5, r1
  4244b0:	e3dce0ff 	bics	lr, ip, #255	; 0xff
  4244b4:	0a000004 	beq	4244cc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x438>
  4244b8:	e35c0000 	cmp	ip, #0
  4244bc:	c3a0c0ff 	movgt	ip, #255	; 0xff
  4244c0:	ca000002 	bgt	4244d0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x43c>
  4244c4:	e3a0c000 	mov	ip, #0
  4244c8:	ea000000 	b	4244d0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x43c>
  4244cc:	e20cc0ff 	and	ip, ip, #255	; 0xff
  4244d0:	e5c1c000 	strb	ip, [r1]
  4244d4:	e2821002 	add	r1, r2, #2
  4244d8:	e794e101 	ldr	lr, [r4, r1, lsl #2]
  4244dc:	e2822003 	add	r2, r2, #3
  4244e0:	e794c102 	ldr	ip, [r4, r2, lsl #2]
  4244e4:	e0851001 	add	r1, r5, r1
  4244e8:	e3de60ff 	bics	r6, lr, #255	; 0xff
  4244ec:	0a000004 	beq	424504 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x470>
  4244f0:	e35e0000 	cmp	lr, #0
  4244f4:	c3a0e0ff 	movgt	lr, #255	; 0xff
  4244f8:	ca000002 	bgt	424508 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x474>
  4244fc:	e3a0e000 	mov	lr, #0
  424500:	ea000000 	b	424508 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x474>
  424504:	e20ee0ff 	and	lr, lr, #255	; 0xff
  424508:	e5c1e000 	strb	lr, [r1]
  42450c:	e0852002 	add	r2, r5, r2
  424510:	e3dc10ff 	bics	r1, ip, #255	; 0xff
  424514:	0a000004 	beq	42452c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x498>
  424518:	e35c0000 	cmp	ip, #0
  42451c:	c3a0c0ff 	movgt	ip, #255	; 0xff
  424520:	ca000002 	bgt	424530 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x49c>
  424524:	e3a0c000 	mov	ip, #0
  424528:	ea000000 	b	424530 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x49c>
  42452c:	e20cc0ff 	and	ip, ip, #255	; 0xff
  424530:	e5c2c000 	strb	ip, [r2]
  424534:	e2833004 	add	r3, r3, #4
  424538:	ea000000 	b	424540 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x4ac>
  42453c:	e3a03000 	mov	r3, #0
  424540:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  424544:	e2412004 	sub	r2, r1, #4
  424548:	e1520003 	cmp	r2, r3
  42454c:	aaffffc8 	bge	424474 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x3e0>
  424550:	ea00000b 	b	424584 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x4f0>
  424554:	e7942103 	ldr	r2, [r4, r3, lsl #2]
  424558:	e085c003 	add	ip, r5, r3
  42455c:	e3d2e0ff 	bics	lr, r2, #255	; 0xff
  424560:	0a000004 	beq	424578 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x4e4>
  424564:	e3520000 	cmp	r2, #0
  424568:	c3a020ff 	movgt	r2, #255	; 0xff
  42456c:	ca000002 	bgt	42457c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x4e8>
  424570:	e3a02000 	mov	r2, #0
  424574:	ea000000 	b	42457c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x4e8>
  424578:	e20220ff 	and	r2, r2, #255	; 0xff
  42457c:	e5cc2000 	strb	r2, [ip]
  424580:	e2833001 	add	r3, r3, #1
  424584:	e1530001 	cmp	r3, r1
  424588:	bafffff1 	blt	424554 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x4c0>
  42458c:	e0844100 	add	r4, r4, r0, lsl #2
  424590:	e0855007 	add	r5, r5, r7
  424594:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  424598:	e2432001 	sub	r2, r3, #1
  42459c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  4245a0:	e3530000 	cmp	r3, #0
  4245a4:	1affffe4 	bne	42453c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x4a8>
  4245a8:	ea0000de 	b	424928 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x894>
  4245ac:	e1a0a121 	lsr	sl, r1, #2
  4245b0:	ea000067 	b	424754 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x6c0>
  4245b4:	e1a08006 	mov	r8, r6
  4245b8:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  4245bc:	fa0035ba 	blx	431cac <__aeabi_f2d>
  4245c0:	e3a02000 	mov	r2, #0
  4245c4:	e59f3368 	ldr	r3, [pc, #872]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  4245c8:	fa003508 	blx	4319f0 <__adddf3>
  4245cc:	fa0034a9 	blx	431878 <floor>
  4245d0:	fa00372c 	blx	432288 <__aeabi_d2iz>
  4245d4:	e1a0b000 	mov	fp, r0
  4245d8:	e2869001 	add	r9, r6, #1
  4245dc:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  4245e0:	fa0035b1 	blx	431cac <__aeabi_f2d>
  4245e4:	e3a02000 	mov	r2, #0
  4245e8:	e59f3344 	ldr	r3, [pc, #836]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  4245ec:	fa0034ff 	blx	4319f0 <__adddf3>
  4245f0:	fa0034a0 	blx	431878 <floor>
  4245f4:	fa003723 	blx	432288 <__aeabi_d2iz>
  4245f8:	e0853006 	add	r3, r5, r6
  4245fc:	e3db20ff 	bics	r2, fp, #255	; 0xff
  424600:	0a000004 	beq	424618 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x584>
  424604:	e35b0000 	cmp	fp, #0
  424608:	c3a0b0ff 	movgt	fp, #255	; 0xff
  42460c:	ca000002 	bgt	42461c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x588>
  424610:	e3a0b000 	mov	fp, #0
  424614:	ea000000 	b	42461c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x588>
  424618:	e20bb0ff 	and	fp, fp, #255	; 0xff
  42461c:	e5c3b000 	strb	fp, [r3]
  424620:	e0853009 	add	r3, r5, r9
  424624:	e3d020ff 	bics	r2, r0, #255	; 0xff
  424628:	0a000004 	beq	424640 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x5ac>
  42462c:	e3500000 	cmp	r0, #0
  424630:	c3a000ff 	movgt	r0, #255	; 0xff
  424634:	ca000002 	bgt	424644 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x5b0>
  424638:	e3a00000 	mov	r0, #0
  42463c:	ea000000 	b	424644 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x5b0>
  424640:	e20000ff 	and	r0, r0, #255	; 0xff
  424644:	e5c30000 	strb	r0, [r3]
  424648:	e2889002 	add	r9, r8, #2
  42464c:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  424650:	fa003595 	blx	431cac <__aeabi_f2d>
  424654:	e3a02000 	mov	r2, #0
  424658:	e59f32d4 	ldr	r3, [pc, #724]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  42465c:	fa0034e3 	blx	4319f0 <__adddf3>
  424660:	fa003484 	blx	431878 <floor>
  424664:	fa003707 	blx	432288 <__aeabi_d2iz>
  424668:	e1a0b000 	mov	fp, r0
  42466c:	e2888003 	add	r8, r8, #3
  424670:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  424674:	fa00358c 	blx	431cac <__aeabi_f2d>
  424678:	e3a02000 	mov	r2, #0
  42467c:	e59f32b0 	ldr	r3, [pc, #688]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  424680:	fa0034da 	blx	4319f0 <__adddf3>
  424684:	fa00347b 	blx	431878 <floor>
  424688:	fa0036fe 	blx	432288 <__aeabi_d2iz>
  42468c:	e0859009 	add	r9, r5, r9
  424690:	e3db30ff 	bics	r3, fp, #255	; 0xff
  424694:	0a000004 	beq	4246ac <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x618>
  424698:	e35b0000 	cmp	fp, #0
  42469c:	c3a0b0ff 	movgt	fp, #255	; 0xff
  4246a0:	ca000002 	bgt	4246b0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x61c>
  4246a4:	e3a0b000 	mov	fp, #0
  4246a8:	ea000000 	b	4246b0 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x61c>
  4246ac:	e20bb0ff 	and	fp, fp, #255	; 0xff
  4246b0:	e5c9b000 	strb	fp, [r9]
  4246b4:	e0858008 	add	r8, r5, r8
  4246b8:	e3d030ff 	bics	r3, r0, #255	; 0xff
  4246bc:	0a000004 	beq	4246d4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x640>
  4246c0:	e3500000 	cmp	r0, #0
  4246c4:	c3a000ff 	movgt	r0, #255	; 0xff
  4246c8:	ca000002 	bgt	4246d8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x644>
  4246cc:	e3a00000 	mov	r0, #0
  4246d0:	ea000000 	b	4246d8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x644>
  4246d4:	e20000ff 	and	r0, r0, #255	; 0xff
  4246d8:	e5c80000 	strb	r0, [r8]
  4246dc:	e2866004 	add	r6, r6, #4
  4246e0:	ea000000 	b	4246e8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x654>
  4246e4:	e3a06000 	mov	r6, #0
  4246e8:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  4246ec:	e2483004 	sub	r3, r8, #4
  4246f0:	e1530006 	cmp	r3, r6
  4246f4:	aaffffae 	bge	4245b4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x520>
  4246f8:	ea000011 	b	424744 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x6b0>
  4246fc:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  424700:	fa003569 	blx	431cac <__aeabi_f2d>
  424704:	e3a02000 	mov	r2, #0
  424708:	e59f3224 	ldr	r3, [pc, #548]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  42470c:	fa0034b7 	blx	4319f0 <__adddf3>
  424710:	fa003458 	blx	431878 <floor>
  424714:	fa0036db 	blx	432288 <__aeabi_d2iz>
  424718:	e0853006 	add	r3, r5, r6
  42471c:	e3d020ff 	bics	r2, r0, #255	; 0xff
  424720:	0a000004 	beq	424738 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x6a4>
  424724:	e3500000 	cmp	r0, #0
  424728:	c3a000ff 	movgt	r0, #255	; 0xff
  42472c:	ca000002 	bgt	42473c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x6a8>
  424730:	e3a00000 	mov	r0, #0
  424734:	ea000000 	b	42473c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x6a8>
  424738:	e20000ff 	and	r0, r0, #255	; 0xff
  42473c:	e5c30000 	strb	r0, [r3]
  424740:	e2866001 	add	r6, r6, #1
  424744:	e1560008 	cmp	r6, r8
  424748:	baffffeb 	blt	4246fc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x668>
  42474c:	e084410a 	add	r4, r4, sl, lsl #2
  424750:	e0855007 	add	r5, r5, r7
  424754:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  424758:	e2432001 	sub	r2, r3, #1
  42475c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  424760:	e3530000 	cmp	r3, #0
  424764:	1affffde 	bne	4246e4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x650>
  424768:	ea00006e 	b	424928 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x894>
  42476c:	e1a0a1a1 	lsr	sl, r1, #3
  424770:	ea000067 	b	424914 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x880>
  424774:	e1a08006 	mov	r8, r6
  424778:	e0843186 	add	r3, r4, r6, lsl #3
  42477c:	e8930003 	ldm	r3, {r0, r1}
  424780:	e3a02000 	mov	r2, #0
  424784:	e59f31a8 	ldr	r3, [pc, #424]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  424788:	fa003498 	blx	4319f0 <__adddf3>
  42478c:	fa003439 	blx	431878 <floor>
  424790:	fa0036bc 	blx	432288 <__aeabi_d2iz>
  424794:	e1a0b000 	mov	fp, r0
  424798:	e2869001 	add	r9, r6, #1
  42479c:	e0843189 	add	r3, r4, r9, lsl #3
  4247a0:	e8930003 	ldm	r3, {r0, r1}
  4247a4:	e3a02000 	mov	r2, #0
  4247a8:	e59f3184 	ldr	r3, [pc, #388]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  4247ac:	fa00348f 	blx	4319f0 <__adddf3>
  4247b0:	fa003430 	blx	431878 <floor>
  4247b4:	fa0036b3 	blx	432288 <__aeabi_d2iz>
  4247b8:	e0853006 	add	r3, r5, r6
  4247bc:	e3db20ff 	bics	r2, fp, #255	; 0xff
  4247c0:	0a000004 	beq	4247d8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x744>
  4247c4:	e35b0000 	cmp	fp, #0
  4247c8:	c3a0b0ff 	movgt	fp, #255	; 0xff
  4247cc:	ca000002 	bgt	4247dc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x748>
  4247d0:	e3a0b000 	mov	fp, #0
  4247d4:	ea000000 	b	4247dc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x748>
  4247d8:	e20bb0ff 	and	fp, fp, #255	; 0xff
  4247dc:	e5c3b000 	strb	fp, [r3]
  4247e0:	e0853009 	add	r3, r5, r9
  4247e4:	e3d020ff 	bics	r2, r0, #255	; 0xff
  4247e8:	0a000004 	beq	424800 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x76c>
  4247ec:	e3500000 	cmp	r0, #0
  4247f0:	c3a000ff 	movgt	r0, #255	; 0xff
  4247f4:	ca000002 	bgt	424804 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x770>
  4247f8:	e3a00000 	mov	r0, #0
  4247fc:	ea000000 	b	424804 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x770>
  424800:	e20000ff 	and	r0, r0, #255	; 0xff
  424804:	e5c30000 	strb	r0, [r3]
  424808:	e2889002 	add	r9, r8, #2
  42480c:	e0843189 	add	r3, r4, r9, lsl #3
  424810:	e8930003 	ldm	r3, {r0, r1}
  424814:	e3a02000 	mov	r2, #0
  424818:	e59f3114 	ldr	r3, [pc, #276]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  42481c:	fa003473 	blx	4319f0 <__adddf3>
  424820:	fa003414 	blx	431878 <floor>
  424824:	fa003697 	blx	432288 <__aeabi_d2iz>
  424828:	e1a0b000 	mov	fp, r0
  42482c:	e2888003 	add	r8, r8, #3
  424830:	e0843188 	add	r3, r4, r8, lsl #3
  424834:	e8930003 	ldm	r3, {r0, r1}
  424838:	e3a02000 	mov	r2, #0
  42483c:	e59f30f0 	ldr	r3, [pc, #240]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  424840:	fa00346a 	blx	4319f0 <__adddf3>
  424844:	fa00340b 	blx	431878 <floor>
  424848:	fa00368e 	blx	432288 <__aeabi_d2iz>
  42484c:	e0859009 	add	r9, r5, r9
  424850:	e3db30ff 	bics	r3, fp, #255	; 0xff
  424854:	0a000004 	beq	42486c <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x7d8>
  424858:	e35b0000 	cmp	fp, #0
  42485c:	c3a0b0ff 	movgt	fp, #255	; 0xff
  424860:	ca000002 	bgt	424870 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x7dc>
  424864:	e3a0b000 	mov	fp, #0
  424868:	ea000000 	b	424870 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x7dc>
  42486c:	e20bb0ff 	and	fp, fp, #255	; 0xff
  424870:	e5c9b000 	strb	fp, [r9]
  424874:	e0858008 	add	r8, r5, r8
  424878:	e3d030ff 	bics	r3, r0, #255	; 0xff
  42487c:	0a000004 	beq	424894 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x800>
  424880:	e3500000 	cmp	r0, #0
  424884:	c3a000ff 	movgt	r0, #255	; 0xff
  424888:	ca000002 	bgt	424898 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x804>
  42488c:	e3a00000 	mov	r0, #0
  424890:	ea000000 	b	424898 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x804>
  424894:	e20000ff 	and	r0, r0, #255	; 0xff
  424898:	e5c80000 	strb	r0, [r8]
  42489c:	e2866004 	add	r6, r6, #4
  4248a0:	ea000000 	b	4248a8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x814>
  4248a4:	e3a06000 	mov	r6, #0
  4248a8:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
  4248ac:	e2483004 	sub	r3, r8, #4
  4248b0:	e1530006 	cmp	r3, r6
  4248b4:	aaffffae 	bge	424774 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x6e0>
  4248b8:	ea000011 	b	424904 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x870>
  4248bc:	e0843186 	add	r3, r4, r6, lsl #3
  4248c0:	e8930003 	ldm	r3, {r0, r1}
  4248c4:	e3a02000 	mov	r2, #0
  4248c8:	e59f3064 	ldr	r3, [pc, #100]	; 424934 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x8a0>
  4248cc:	fa003447 	blx	4319f0 <__adddf3>
  4248d0:	fa0033e8 	blx	431878 <floor>
  4248d4:	fa00366b 	blx	432288 <__aeabi_d2iz>
  4248d8:	e0853006 	add	r3, r5, r6
  4248dc:	e3d020ff 	bics	r2, r0, #255	; 0xff
  4248e0:	0a000004 	beq	4248f8 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x864>
  4248e4:	e3500000 	cmp	r0, #0
  4248e8:	c3a000ff 	movgt	r0, #255	; 0xff
  4248ec:	ca000002 	bgt	4248fc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x868>
  4248f0:	e3a00000 	mov	r0, #0
  4248f4:	ea000000 	b	4248fc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x868>
  4248f8:	e20000ff 	and	r0, r0, #255	; 0xff
  4248fc:	e5c30000 	strb	r0, [r3]
  424900:	e2866001 	add	r6, r6, #1
  424904:	e1560008 	cmp	r6, r8
  424908:	baffffeb 	blt	4248bc <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x828>
  42490c:	e084418a 	add	r4, r4, sl, lsl #3
  424910:	e0855007 	add	r5, r5, r7
  424914:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  424918:	e2432001 	sub	r2, r3, #1
  42491c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  424920:	e3530000 	cmp	r3, #0
  424924:	1affffde 	bne	4248a4 <_ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei+0x810>
  424928:	e3a00000 	mov	r0, #0
  42492c:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  424930:	e12fff1e 	bx	lr
  424934:	3fe00000 	.word	0x3fe00000

00424938 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi>:
  424938:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42493c:	e24ddf4b 	sub	sp, sp, #300	; 0x12c
  424940:	e1a04000 	mov	r4, r0
  424944:	e1a07001 	mov	r7, r1
  424948:	e1a05002 	mov	r5, r2
  42494c:	e1a08003 	mov	r8, r3
  424950:	e59d3158 	ldr	r3, [sp, #344]	; 0x158
  424954:	e58d3014 	str	r3, [sp, #20]
  424958:	e59d315c 	ldr	r3, [sp, #348]	; 0x15c
  42495c:	e58d3018 	str	r3, [sp, #24]
  424960:	e59db160 	ldr	fp, [sp, #352]	; 0x160
  424964:	e59d6164 	ldr	r6, [sp, #356]	; 0x164
  424968:	e58d8020 	str	r8, [sp, #32]
  42496c:	e59d3168 	ldr	r3, [sp, #360]	; 0x168
  424970:	e2033007 	and	r3, r3, #7
  424974:	e3530006 	cmp	r3, #6
  424978:	908ff103 	addls	pc, pc, r3, lsl #2
  42497c:	ea00068a 	b	4263ac <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a74>
  424980:	ea000005 	b	42499c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x64>
  424984:	ea00014d 	b	424ec0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x588>
  424988:	ea000294 	b	4253e0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xaa8>
  42498c:	ea0003a7 	b	425830 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xef8>
  424990:	ea0004d2 	b	425ce0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x13a8>
  424994:	ea000562 	b	425f24 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x15ec>
  424998:	ea0005f2 	b	426168 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1830>
  42499c:	e59d3150 	ldr	r3, [sp, #336]	; 0x150
  4249a0:	e1a02003 	mov	r2, r3
  4249a4:	e1a09003 	mov	r9, r3
  4249a8:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  4249ac:	e0020293 	mul	r2, r3, r2
  4249b0:	e35200ff 	cmp	r2, #255	; 0xff
  4249b4:	ca00001b 	bgt	424a28 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xf0>
  4249b8:	ea00002c 	b	424a70 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x138>
  4249bc:	e1a0000b 	mov	r0, fp
  4249c0:	e1a01006 	mov	r1, r6
  4249c4:	e3a02000 	mov	r2, #0
  4249c8:	e59f3f70 	ldr	r3, [pc, #3952]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  4249cc:	fa003407 	blx	4319f0 <__adddf3>
  4249d0:	fa0033a8 	blx	431878 <floor>
  4249d4:	fa00362b 	blx	432288 <__aeabi_d2iz>
  4249d8:	e3d030ff 	bics	r3, r0, #255	; 0xff
  4249dc:	0a000004 	beq	4249f4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xbc>
  4249e0:	e3500000 	cmp	r0, #0
  4249e4:	c3a000ff 	movgt	r0, #255	; 0xff
  4249e8:	ca000002 	bgt	4249f8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc0>
  4249ec:	e3a00000 	mov	r0, #0
  4249f0:	ea000000 	b	4249f8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc0>
  4249f4:	e20000ff 	and	r0, r0, #255	; 0xff
  4249f8:	e28d3f4a 	add	r3, sp, #296	; 0x128
  4249fc:	e0833009 	add	r3, r3, r9
  424a00:	e5430100 	strb	r0, [r3, #-256]	; 0x100
  424a04:	e2899001 	add	r9, r9, #1
  424a08:	e1a0000b 	mov	r0, fp
  424a0c:	e1a01006 	mov	r1, r6
  424a10:	e1a02004 	mov	r2, r4
  424a14:	e1a0300a 	mov	r3, sl
  424a18:	fa0033f4 	blx	4319f0 <__adddf3>
  424a1c:	e1a0b000 	mov	fp, r0
  424a20:	e1a06001 	mov	r6, r1
  424a24:	ea000003 	b	424a38 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x100>
  424a28:	e3a09000 	mov	r9, #0
  424a2c:	e58d001c 	str	r0, [sp, #28]
  424a30:	e59d4014 	ldr	r4, [sp, #20]
  424a34:	e59da018 	ldr	sl, [sp, #24]
  424a38:	e35900ff 	cmp	r9, #255	; 0xff
  424a3c:	daffffde 	ble	4249bc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x84>
  424a40:	e59d401c 	ldr	r4, [sp, #28]
  424a44:	e28d3f53 	add	r3, sp, #332	; 0x14c
  424a48:	e9930003 	ldmib	r3, {r0, r1}
  424a4c:	e88d0003 	stm	sp, {r0, r1}
  424a50:	e28d3028 	add	r3, sp, #40	; 0x28
  424a54:	e58d3008 	str	r3, [sp, #8]
  424a58:	e1a00004 	mov	r0, r4
  424a5c:	e1a01007 	mov	r1, r7
  424a60:	e1a02005 	mov	r2, r5
  424a64:	e1a03008 	mov	r3, r8
  424a68:	eb002e6c 	bl	430420 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_>
  424a6c:	ea000657 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  424a70:	e59d0014 	ldr	r0, [sp, #20]
  424a74:	e59d3018 	ldr	r3, [sp, #24]
  424a78:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  424a7c:	e3a02000 	mov	r2, #0
  424a80:	e59f3ebc 	ldr	r3, [pc, #3772]	; 425944 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x100c>
  424a84:	fa0035f0 	blx	43224c <__aeabi_dcmple>
  424a88:	e3500000 	cmp	r0, #0
  424a8c:	0a00007a 	beq	424c7c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x344>
  424a90:	e1a0000b 	mov	r0, fp
  424a94:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  424a98:	e59f2ea8 	ldr	r2, [pc, #3752]	; 425948 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1010>
  424a9c:	e59f3ea8 	ldr	r3, [pc, #3752]	; 42594c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1014>
  424aa0:	fa0035e9 	blx	43224c <__aeabi_dcmple>
  424aa4:	e3500000 	cmp	r0, #0
  424aa8:	0a000073 	beq	424c7c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x344>
  424aac:	e59d0014 	ldr	r0, [sp, #20]
  424ab0:	e59d1018 	ldr	r1, [sp, #24]
  424ab4:	e3a02000 	mov	r2, #0
  424ab8:	e59f3e90 	ldr	r3, [pc, #3728]	; 425950 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1018>
  424abc:	fa0034a4 	blx	431d54 <__aeabi_dmul>
  424ac0:	e3a02000 	mov	r2, #0
  424ac4:	e59f3e74 	ldr	r3, [pc, #3700]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424ac8:	fa0033c8 	blx	4319f0 <__adddf3>
  424acc:	fa003369 	blx	431878 <floor>
  424ad0:	fa0035ec 	blx	432288 <__aeabi_d2iz>
  424ad4:	e1a08000 	mov	r8, r0
  424ad8:	e1a0000b 	mov	r0, fp
  424adc:	e1a01006 	mov	r1, r6
  424ae0:	e3a02000 	mov	r2, #0
  424ae4:	e59f3e64 	ldr	r3, [pc, #3684]	; 425950 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1018>
  424ae8:	fa003499 	blx	431d54 <__aeabi_dmul>
  424aec:	e3a02000 	mov	r2, #0
  424af0:	e59f3e48 	ldr	r3, [pc, #3656]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424af4:	fa0033bd 	blx	4319f0 <__adddf3>
  424af8:	fa00335e 	blx	431878 <floor>
  424afc:	fa0035e1 	blx	432288 <__aeabi_d2iz>
  424b00:	e59dc020 	ldr	ip, [sp, #32]
  424b04:	e1a01009 	mov	r1, r9
  424b08:	ea000055 	b	424c64 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x32c>
  424b0c:	e1a06003 	mov	r6, r3
  424b10:	e7d4e003 	ldrb	lr, [r4, r3]
  424b14:	e02e0e98 	mla	lr, r8, lr, r0
  424b18:	e28ee901 	add	lr, lr, #16384	; 0x4000
  424b1c:	e1a0e7ce 	asr	lr, lr, #15
  424b20:	e2839001 	add	r9, r3, #1
  424b24:	e7d42009 	ldrb	r2, [r4, r9]
  424b28:	e0220298 	mla	r2, r8, r2, r0
  424b2c:	e2822901 	add	r2, r2, #16384	; 0x4000
  424b30:	e1a027c2 	asr	r2, r2, #15
  424b34:	e085a003 	add	sl, r5, r3
  424b38:	e3deb0ff 	bics	fp, lr, #255	; 0xff
  424b3c:	0a000004 	beq	424b54 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x21c>
  424b40:	e35e0000 	cmp	lr, #0
  424b44:	c3a0e0ff 	movgt	lr, #255	; 0xff
  424b48:	ca000002 	bgt	424b58 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x220>
  424b4c:	e3a0e000 	mov	lr, #0
  424b50:	ea000000 	b	424b58 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x220>
  424b54:	e20ee0ff 	and	lr, lr, #255	; 0xff
  424b58:	e5cae000 	strb	lr, [sl]
  424b5c:	e0859009 	add	r9, r5, r9
  424b60:	e3d2e0ff 	bics	lr, r2, #255	; 0xff
  424b64:	0a000004 	beq	424b7c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x244>
  424b68:	e3520000 	cmp	r2, #0
  424b6c:	c3a020ff 	movgt	r2, #255	; 0xff
  424b70:	ca000002 	bgt	424b80 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x248>
  424b74:	e3a02000 	mov	r2, #0
  424b78:	ea000000 	b	424b80 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x248>
  424b7c:	e20220ff 	and	r2, r2, #255	; 0xff
  424b80:	e5c92000 	strb	r2, [r9]
  424b84:	e2869002 	add	r9, r6, #2
  424b88:	e7d4e009 	ldrb	lr, [r4, r9]
  424b8c:	e02e0e98 	mla	lr, r8, lr, r0
  424b90:	e28ee901 	add	lr, lr, #16384	; 0x4000
  424b94:	e1a0e7ce 	asr	lr, lr, #15
  424b98:	e2866003 	add	r6, r6, #3
  424b9c:	e7d42006 	ldrb	r2, [r4, r6]
  424ba0:	e0220298 	mla	r2, r8, r2, r0
  424ba4:	e2822901 	add	r2, r2, #16384	; 0x4000
  424ba8:	e1a027c2 	asr	r2, r2, #15
  424bac:	e0859009 	add	r9, r5, r9
  424bb0:	e3dea0ff 	bics	sl, lr, #255	; 0xff
  424bb4:	0a000004 	beq	424bcc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x294>
  424bb8:	e35e0000 	cmp	lr, #0
  424bbc:	c3a0e0ff 	movgt	lr, #255	; 0xff
  424bc0:	ca000002 	bgt	424bd0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x298>
  424bc4:	e3a0e000 	mov	lr, #0
  424bc8:	ea000000 	b	424bd0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x298>
  424bcc:	e20ee0ff 	and	lr, lr, #255	; 0xff
  424bd0:	e5c9e000 	strb	lr, [r9]
  424bd4:	e0856006 	add	r6, r5, r6
  424bd8:	e3d2e0ff 	bics	lr, r2, #255	; 0xff
  424bdc:	0a000004 	beq	424bf4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x2bc>
  424be0:	e3520000 	cmp	r2, #0
  424be4:	c3a020ff 	movgt	r2, #255	; 0xff
  424be8:	ca000002 	bgt	424bf8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x2c0>
  424bec:	e3a02000 	mov	r2, #0
  424bf0:	ea000000 	b	424bf8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x2c0>
  424bf4:	e20220ff 	and	r2, r2, #255	; 0xff
  424bf8:	e5c62000 	strb	r2, [r6]
  424bfc:	e2833004 	add	r3, r3, #4
  424c00:	ea000000 	b	424c08 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x2d0>
  424c04:	e3a03000 	mov	r3, #0
  424c08:	e2412004 	sub	r2, r1, #4
  424c0c:	e1520003 	cmp	r2, r3
  424c10:	aaffffbd 	bge	424b0c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1d4>
  424c14:	ea00000e 	b	424c54 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x31c>
  424c18:	e7d42003 	ldrb	r2, [r4, r3]
  424c1c:	e0220298 	mla	r2, r8, r2, r0
  424c20:	e2822901 	add	r2, r2, #16384	; 0x4000
  424c24:	e1a027c2 	asr	r2, r2, #15
  424c28:	e085e003 	add	lr, r5, r3
  424c2c:	e3d260ff 	bics	r6, r2, #255	; 0xff
  424c30:	0a000004 	beq	424c48 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x310>
  424c34:	e3520000 	cmp	r2, #0
  424c38:	c3a020ff 	movgt	r2, #255	; 0xff
  424c3c:	ca000002 	bgt	424c4c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x314>
  424c40:	e3a02000 	mov	r2, #0
  424c44:	ea000000 	b	424c4c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x314>
  424c48:	e20220ff 	and	r2, r2, #255	; 0xff
  424c4c:	e5ce2000 	strb	r2, [lr]
  424c50:	e2833001 	add	r3, r3, #1
  424c54:	e1530001 	cmp	r3, r1
  424c58:	baffffee 	blt	424c18 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x2e0>
  424c5c:	e0844007 	add	r4, r4, r7
  424c60:	e085500c 	add	r5, r5, ip
  424c64:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  424c68:	e2432001 	sub	r2, r3, #1
  424c6c:	e58d2154 	str	r2, [sp, #340]	; 0x154
  424c70:	e3530000 	cmp	r3, #0
  424c74:	1affffe2 	bne	424c04 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x2cc>
  424c78:	ea0005d4 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  424c7c:	e58d7024 	str	r7, [sp, #36]	; 0x24
  424c80:	e58db01c 	str	fp, [sp, #28]
  424c84:	e1a0b009 	mov	fp, r9
  424c88:	ea000086 	b	424ea8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x570>
  424c8c:	e1a08007 	mov	r8, r7
  424c90:	e7d40007 	ldrb	r0, [r4, r7]
  424c94:	fa0033fb 	blx	431c88 <__aeabi_i2d>
  424c98:	e59d2014 	ldr	r2, [sp, #20]
  424c9c:	e59d3018 	ldr	r3, [sp, #24]
  424ca0:	fa00342b 	blx	431d54 <__aeabi_dmul>
  424ca4:	e59d201c 	ldr	r2, [sp, #28]
  424ca8:	e1a03006 	mov	r3, r6
  424cac:	fa00334f 	blx	4319f0 <__adddf3>
  424cb0:	e3a02000 	mov	r2, #0
  424cb4:	e59f3c84 	ldr	r3, [pc, #3204]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424cb8:	fa00334c 	blx	4319f0 <__adddf3>
  424cbc:	fa0032ed 	blx	431878 <floor>
  424cc0:	fa003570 	blx	432288 <__aeabi_d2iz>
  424cc4:	e1a0a000 	mov	sl, r0
  424cc8:	e2879001 	add	r9, r7, #1
  424ccc:	e7d40009 	ldrb	r0, [r4, r9]
  424cd0:	fa0033ec 	blx	431c88 <__aeabi_i2d>
  424cd4:	e59d2014 	ldr	r2, [sp, #20]
  424cd8:	e59d3018 	ldr	r3, [sp, #24]
  424cdc:	fa00341c 	blx	431d54 <__aeabi_dmul>
  424ce0:	e59d201c 	ldr	r2, [sp, #28]
  424ce4:	e1a03006 	mov	r3, r6
  424ce8:	fa003340 	blx	4319f0 <__adddf3>
  424cec:	e3a02000 	mov	r2, #0
  424cf0:	e59f3c48 	ldr	r3, [pc, #3144]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424cf4:	fa00333d 	blx	4319f0 <__adddf3>
  424cf8:	fa0032de 	blx	431878 <floor>
  424cfc:	fa003561 	blx	432288 <__aeabi_d2iz>
  424d00:	e0853007 	add	r3, r5, r7
  424d04:	e3da20ff 	bics	r2, sl, #255	; 0xff
  424d08:	0a000004 	beq	424d20 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x3e8>
  424d0c:	e35a0000 	cmp	sl, #0
  424d10:	c3a0a0ff 	movgt	sl, #255	; 0xff
  424d14:	ca000002 	bgt	424d24 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x3ec>
  424d18:	e3a0a000 	mov	sl, #0
  424d1c:	ea000000 	b	424d24 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x3ec>
  424d20:	e20aa0ff 	and	sl, sl, #255	; 0xff
  424d24:	e5c3a000 	strb	sl, [r3]
  424d28:	e0859009 	add	r9, r5, r9
  424d2c:	e3d030ff 	bics	r3, r0, #255	; 0xff
  424d30:	0a000004 	beq	424d48 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x410>
  424d34:	e3500000 	cmp	r0, #0
  424d38:	c3a000ff 	movgt	r0, #255	; 0xff
  424d3c:	ca000002 	bgt	424d4c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x414>
  424d40:	e3a00000 	mov	r0, #0
  424d44:	ea000000 	b	424d4c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x414>
  424d48:	e20000ff 	and	r0, r0, #255	; 0xff
  424d4c:	e5c90000 	strb	r0, [r9]
  424d50:	e2889002 	add	r9, r8, #2
  424d54:	e7d40009 	ldrb	r0, [r4, r9]
  424d58:	fa0033ca 	blx	431c88 <__aeabi_i2d>
  424d5c:	e59d2014 	ldr	r2, [sp, #20]
  424d60:	e59d3018 	ldr	r3, [sp, #24]
  424d64:	fa0033fa 	blx	431d54 <__aeabi_dmul>
  424d68:	e59d201c 	ldr	r2, [sp, #28]
  424d6c:	e1a03006 	mov	r3, r6
  424d70:	fa00331e 	blx	4319f0 <__adddf3>
  424d74:	e3a02000 	mov	r2, #0
  424d78:	e59f3bc0 	ldr	r3, [pc, #3008]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424d7c:	fa00331b 	blx	4319f0 <__adddf3>
  424d80:	fa0032bc 	blx	431878 <floor>
  424d84:	fa00353f 	blx	432288 <__aeabi_d2iz>
  424d88:	e1a0a000 	mov	sl, r0
  424d8c:	e2888003 	add	r8, r8, #3
  424d90:	e7d40008 	ldrb	r0, [r4, r8]
  424d94:	fa0033bb 	blx	431c88 <__aeabi_i2d>
  424d98:	e59d2014 	ldr	r2, [sp, #20]
  424d9c:	e59d3018 	ldr	r3, [sp, #24]
  424da0:	fa0033eb 	blx	431d54 <__aeabi_dmul>
  424da4:	e59d201c 	ldr	r2, [sp, #28]
  424da8:	e1a03006 	mov	r3, r6
  424dac:	fa00330f 	blx	4319f0 <__adddf3>
  424db0:	e3a02000 	mov	r2, #0
  424db4:	e59f3b84 	ldr	r3, [pc, #2948]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424db8:	fa00330c 	blx	4319f0 <__adddf3>
  424dbc:	fa0032ad 	blx	431878 <floor>
  424dc0:	fa003530 	blx	432288 <__aeabi_d2iz>
  424dc4:	e0859009 	add	r9, r5, r9
  424dc8:	e3da30ff 	bics	r3, sl, #255	; 0xff
  424dcc:	0a000004 	beq	424de4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4ac>
  424dd0:	e35a0000 	cmp	sl, #0
  424dd4:	c3a0a0ff 	movgt	sl, #255	; 0xff
  424dd8:	ca000002 	bgt	424de8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4b0>
  424ddc:	e3a0a000 	mov	sl, #0
  424de0:	ea000000 	b	424de8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4b0>
  424de4:	e20aa0ff 	and	sl, sl, #255	; 0xff
  424de8:	e5c9a000 	strb	sl, [r9]
  424dec:	e0858008 	add	r8, r5, r8
  424df0:	e3d030ff 	bics	r3, r0, #255	; 0xff
  424df4:	0a000004 	beq	424e0c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4d4>
  424df8:	e3500000 	cmp	r0, #0
  424dfc:	c3a000ff 	movgt	r0, #255	; 0xff
  424e00:	ca000002 	bgt	424e10 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4d8>
  424e04:	e3a00000 	mov	r0, #0
  424e08:	ea000000 	b	424e10 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4d8>
  424e0c:	e20000ff 	and	r0, r0, #255	; 0xff
  424e10:	e5c80000 	strb	r0, [r8]
  424e14:	e2877004 	add	r7, r7, #4
  424e18:	ea000000 	b	424e20 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4e8>
  424e1c:	e3a07000 	mov	r7, #0
  424e20:	e24b3004 	sub	r3, fp, #4
  424e24:	e1530007 	cmp	r3, r7
  424e28:	aaffff97 	bge	424c8c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x354>
  424e2c:	ea000017 	b	424e90 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x558>
  424e30:	e7d40007 	ldrb	r0, [r4, r7]
  424e34:	fa003393 	blx	431c88 <__aeabi_i2d>
  424e38:	e59d2014 	ldr	r2, [sp, #20]
  424e3c:	e59d3018 	ldr	r3, [sp, #24]
  424e40:	fa0033c3 	blx	431d54 <__aeabi_dmul>
  424e44:	e59d201c 	ldr	r2, [sp, #28]
  424e48:	e1a03006 	mov	r3, r6
  424e4c:	fa0032e7 	blx	4319f0 <__adddf3>
  424e50:	e3a02000 	mov	r2, #0
  424e54:	e59f3ae4 	ldr	r3, [pc, #2788]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424e58:	fa0032e4 	blx	4319f0 <__adddf3>
  424e5c:	fa003285 	blx	431878 <floor>
  424e60:	fa003508 	blx	432288 <__aeabi_d2iz>
  424e64:	e0853007 	add	r3, r5, r7
  424e68:	e3d020ff 	bics	r2, r0, #255	; 0xff
  424e6c:	0a000004 	beq	424e84 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x54c>
  424e70:	e3500000 	cmp	r0, #0
  424e74:	c3a000ff 	movgt	r0, #255	; 0xff
  424e78:	ca000002 	bgt	424e88 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x550>
  424e7c:	e3a00000 	mov	r0, #0
  424e80:	ea000000 	b	424e88 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x550>
  424e84:	e20000ff 	and	r0, r0, #255	; 0xff
  424e88:	e5c30000 	strb	r0, [r3]
  424e8c:	e2877001 	add	r7, r7, #1
  424e90:	e157000b 	cmp	r7, fp
  424e94:	baffffe5 	blt	424e30 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4f8>
  424e98:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  424e9c:	e0844003 	add	r4, r4, r3
  424ea0:	e59d3020 	ldr	r3, [sp, #32]
  424ea4:	e0855003 	add	r5, r5, r3
  424ea8:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  424eac:	e2432001 	sub	r2, r3, #1
  424eb0:	e58d2154 	str	r2, [sp, #340]	; 0x154
  424eb4:	e3530000 	cmp	r3, #0
  424eb8:	1affffd7 	bne	424e1c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x4e4>
  424ebc:	ea000543 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  424ec0:	e59d3150 	ldr	r3, [sp, #336]	; 0x150
  424ec4:	e1a02003 	mov	r2, r3
  424ec8:	e1a09003 	mov	r9, r3
  424ecc:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  424ed0:	e0020293 	mul	r2, r3, r2
  424ed4:	e35200ff 	cmp	r2, #255	; 0xff
  424ed8:	ca00001a 	bgt	424f48 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x610>
  424edc:	ea00002b 	b	424f90 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x658>
  424ee0:	e20900ff 	and	r0, r9, #255	; 0xff
  424ee4:	fa003367 	blx	431c88 <__aeabi_i2d>
  424ee8:	e1a02004 	mov	r2, r4
  424eec:	e1a0300a 	mov	r3, sl
  424ef0:	fa003397 	blx	431d54 <__aeabi_dmul>
  424ef4:	e1a0200b 	mov	r2, fp
  424ef8:	e1a03006 	mov	r3, r6
  424efc:	fa0032bb 	blx	4319f0 <__adddf3>
  424f00:	e3a02000 	mov	r2, #0
  424f04:	e59f3a34 	ldr	r3, [pc, #2612]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424f08:	fa0032b8 	blx	4319f0 <__adddf3>
  424f0c:	fa003259 	blx	431878 <floor>
  424f10:	fa0034dc 	blx	432288 <__aeabi_d2iz>
  424f14:	e3d030ff 	bics	r3, r0, #255	; 0xff
  424f18:	0a000004 	beq	424f30 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x5f8>
  424f1c:	e3500000 	cmp	r0, #0
  424f20:	c3a000ff 	movgt	r0, #255	; 0xff
  424f24:	ca000002 	bgt	424f34 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x5fc>
  424f28:	e3a00000 	mov	r0, #0
  424f2c:	ea000000 	b	424f34 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x5fc>
  424f30:	e20000ff 	and	r0, r0, #255	; 0xff
  424f34:	e28d3f4a 	add	r3, sp, #296	; 0x128
  424f38:	e0833009 	add	r3, r3, r9
  424f3c:	e5430100 	strb	r0, [r3, #-256]	; 0x100
  424f40:	e2899001 	add	r9, r9, #1
  424f44:	ea000003 	b	424f58 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x620>
  424f48:	e3a09000 	mov	r9, #0
  424f4c:	e58d001c 	str	r0, [sp, #28]
  424f50:	e59d4014 	ldr	r4, [sp, #20]
  424f54:	e59da018 	ldr	sl, [sp, #24]
  424f58:	e35900ff 	cmp	r9, #255	; 0xff
  424f5c:	daffffdf 	ble	424ee0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x5a8>
  424f60:	e59d401c 	ldr	r4, [sp, #28]
  424f64:	e28d3f53 	add	r3, sp, #332	; 0x14c
  424f68:	e9930003 	ldmib	r3, {r0, r1}
  424f6c:	e88d0003 	stm	sp, {r0, r1}
  424f70:	e28d3028 	add	r3, sp, #40	; 0x28
  424f74:	e58d3008 	str	r3, [sp, #8]
  424f78:	e1a00004 	mov	r0, r4
  424f7c:	e1a01007 	mov	r1, r7
  424f80:	e1a02005 	mov	r2, r5
  424f84:	e1a03008 	mov	r3, r8
  424f88:	eb002d24 	bl	430420 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_>
  424f8c:	ea00050f 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  424f90:	e59d0014 	ldr	r0, [sp, #20]
  424f94:	e59d3018 	ldr	r3, [sp, #24]
  424f98:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  424f9c:	e3a02000 	mov	r2, #0
  424fa0:	e59f399c 	ldr	r3, [pc, #2460]	; 425944 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x100c>
  424fa4:	fa0034a8 	blx	43224c <__aeabi_dcmple>
  424fa8:	e3500000 	cmp	r0, #0
  424fac:	0a00007a 	beq	42519c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x864>
  424fb0:	e1a0000b 	mov	r0, fp
  424fb4:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  424fb8:	e59f2988 	ldr	r2, [pc, #2440]	; 425948 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1010>
  424fbc:	e59f3988 	ldr	r3, [pc, #2440]	; 42594c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1014>
  424fc0:	fa0034a1 	blx	43224c <__aeabi_dcmple>
  424fc4:	e3500000 	cmp	r0, #0
  424fc8:	0a000073 	beq	42519c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x864>
  424fcc:	e59d0014 	ldr	r0, [sp, #20]
  424fd0:	e59d1018 	ldr	r1, [sp, #24]
  424fd4:	e3a02000 	mov	r2, #0
  424fd8:	e59f3970 	ldr	r3, [pc, #2416]	; 425950 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1018>
  424fdc:	fa00335c 	blx	431d54 <__aeabi_dmul>
  424fe0:	e3a02000 	mov	r2, #0
  424fe4:	e59f3954 	ldr	r3, [pc, #2388]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  424fe8:	fa003280 	blx	4319f0 <__adddf3>
  424fec:	fa003221 	blx	431878 <floor>
  424ff0:	fa0034a4 	blx	432288 <__aeabi_d2iz>
  424ff4:	e1a08000 	mov	r8, r0
  424ff8:	e1a0000b 	mov	r0, fp
  424ffc:	e1a01006 	mov	r1, r6
  425000:	e3a02000 	mov	r2, #0
  425004:	e59f3944 	ldr	r3, [pc, #2372]	; 425950 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1018>
  425008:	fa003351 	blx	431d54 <__aeabi_dmul>
  42500c:	e3a02000 	mov	r2, #0
  425010:	e59f3928 	ldr	r3, [pc, #2344]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425014:	fa003275 	blx	4319f0 <__adddf3>
  425018:	fa003216 	blx	431878 <floor>
  42501c:	fa003499 	blx	432288 <__aeabi_d2iz>
  425020:	e59dc020 	ldr	ip, [sp, #32]
  425024:	e1a01009 	mov	r1, r9
  425028:	ea000055 	b	425184 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x84c>
  42502c:	e1a06003 	mov	r6, r3
  425030:	e7d4e003 	ldrb	lr, [r4, r3]
  425034:	e02e0e98 	mla	lr, r8, lr, r0
  425038:	e28ee901 	add	lr, lr, #16384	; 0x4000
  42503c:	e1a0e7ce 	asr	lr, lr, #15
  425040:	e2839001 	add	r9, r3, #1
  425044:	e7d42009 	ldrb	r2, [r4, r9]
  425048:	e0220298 	mla	r2, r8, r2, r0
  42504c:	e2822901 	add	r2, r2, #16384	; 0x4000
  425050:	e1a027c2 	asr	r2, r2, #15
  425054:	e085a003 	add	sl, r5, r3
  425058:	e3deb0ff 	bics	fp, lr, #255	; 0xff
  42505c:	0a000004 	beq	425074 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x73c>
  425060:	e35e0000 	cmp	lr, #0
  425064:	c3a0e0ff 	movgt	lr, #255	; 0xff
  425068:	ca000002 	bgt	425078 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x740>
  42506c:	e3a0e000 	mov	lr, #0
  425070:	ea000000 	b	425078 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x740>
  425074:	e20ee0ff 	and	lr, lr, #255	; 0xff
  425078:	e5cae000 	strb	lr, [sl]
  42507c:	e0859009 	add	r9, r5, r9
  425080:	e3d2e0ff 	bics	lr, r2, #255	; 0xff
  425084:	0a000004 	beq	42509c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x764>
  425088:	e3520000 	cmp	r2, #0
  42508c:	c3a020ff 	movgt	r2, #255	; 0xff
  425090:	ca000002 	bgt	4250a0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x768>
  425094:	e3a02000 	mov	r2, #0
  425098:	ea000000 	b	4250a0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x768>
  42509c:	e20220ff 	and	r2, r2, #255	; 0xff
  4250a0:	e5c92000 	strb	r2, [r9]
  4250a4:	e2869002 	add	r9, r6, #2
  4250a8:	e7d4e009 	ldrb	lr, [r4, r9]
  4250ac:	e02e0e98 	mla	lr, r8, lr, r0
  4250b0:	e28ee901 	add	lr, lr, #16384	; 0x4000
  4250b4:	e1a0e7ce 	asr	lr, lr, #15
  4250b8:	e2866003 	add	r6, r6, #3
  4250bc:	e7d42006 	ldrb	r2, [r4, r6]
  4250c0:	e0220298 	mla	r2, r8, r2, r0
  4250c4:	e2822901 	add	r2, r2, #16384	; 0x4000
  4250c8:	e1a027c2 	asr	r2, r2, #15
  4250cc:	e0859009 	add	r9, r5, r9
  4250d0:	e3dea0ff 	bics	sl, lr, #255	; 0xff
  4250d4:	0a000004 	beq	4250ec <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7b4>
  4250d8:	e35e0000 	cmp	lr, #0
  4250dc:	c3a0e0ff 	movgt	lr, #255	; 0xff
  4250e0:	ca000002 	bgt	4250f0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7b8>
  4250e4:	e3a0e000 	mov	lr, #0
  4250e8:	ea000000 	b	4250f0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7b8>
  4250ec:	e20ee0ff 	and	lr, lr, #255	; 0xff
  4250f0:	e5c9e000 	strb	lr, [r9]
  4250f4:	e0856006 	add	r6, r5, r6
  4250f8:	e3d2e0ff 	bics	lr, r2, #255	; 0xff
  4250fc:	0a000004 	beq	425114 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7dc>
  425100:	e3520000 	cmp	r2, #0
  425104:	c3a020ff 	movgt	r2, #255	; 0xff
  425108:	ca000002 	bgt	425118 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7e0>
  42510c:	e3a02000 	mov	r2, #0
  425110:	ea000000 	b	425118 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7e0>
  425114:	e20220ff 	and	r2, r2, #255	; 0xff
  425118:	e5c62000 	strb	r2, [r6]
  42511c:	e2833004 	add	r3, r3, #4
  425120:	ea000000 	b	425128 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7f0>
  425124:	e3a03000 	mov	r3, #0
  425128:	e2412004 	sub	r2, r1, #4
  42512c:	e1520003 	cmp	r2, r3
  425130:	aaffffbd 	bge	42502c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x6f4>
  425134:	ea00000e 	b	425174 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x83c>
  425138:	e7d42003 	ldrb	r2, [r4, r3]
  42513c:	e0220298 	mla	r2, r8, r2, r0
  425140:	e2822901 	add	r2, r2, #16384	; 0x4000
  425144:	e1a027c2 	asr	r2, r2, #15
  425148:	e085e003 	add	lr, r5, r3
  42514c:	e3d260ff 	bics	r6, r2, #255	; 0xff
  425150:	0a000004 	beq	425168 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x830>
  425154:	e3520000 	cmp	r2, #0
  425158:	c3a020ff 	movgt	r2, #255	; 0xff
  42515c:	ca000002 	bgt	42516c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x834>
  425160:	e3a02000 	mov	r2, #0
  425164:	ea000000 	b	42516c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x834>
  425168:	e20220ff 	and	r2, r2, #255	; 0xff
  42516c:	e5ce2000 	strb	r2, [lr]
  425170:	e2833001 	add	r3, r3, #1
  425174:	e1530001 	cmp	r3, r1
  425178:	baffffee 	blt	425138 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x800>
  42517c:	e0844007 	add	r4, r4, r7
  425180:	e085500c 	add	r5, r5, ip
  425184:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  425188:	e2432001 	sub	r2, r3, #1
  42518c:	e58d2154 	str	r2, [sp, #340]	; 0x154
  425190:	e3530000 	cmp	r3, #0
  425194:	1affffe2 	bne	425124 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x7ec>
  425198:	ea00048c 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  42519c:	e58d7024 	str	r7, [sp, #36]	; 0x24
  4251a0:	e58db01c 	str	fp, [sp, #28]
  4251a4:	e1a0b009 	mov	fp, r9
  4251a8:	ea000086 	b	4253c8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa90>
  4251ac:	e1a08007 	mov	r8, r7
  4251b0:	e7d40007 	ldrb	r0, [r4, r7]
  4251b4:	fa0032b3 	blx	431c88 <__aeabi_i2d>
  4251b8:	e59d2014 	ldr	r2, [sp, #20]
  4251bc:	e59d3018 	ldr	r3, [sp, #24]
  4251c0:	fa0032e3 	blx	431d54 <__aeabi_dmul>
  4251c4:	e59d201c 	ldr	r2, [sp, #28]
  4251c8:	e1a03006 	mov	r3, r6
  4251cc:	fa003207 	blx	4319f0 <__adddf3>
  4251d0:	e3a02000 	mov	r2, #0
  4251d4:	e59f3764 	ldr	r3, [pc, #1892]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  4251d8:	fa003204 	blx	4319f0 <__adddf3>
  4251dc:	fa0031a5 	blx	431878 <floor>
  4251e0:	fa003428 	blx	432288 <__aeabi_d2iz>
  4251e4:	e1a0a000 	mov	sl, r0
  4251e8:	e2879001 	add	r9, r7, #1
  4251ec:	e7d40009 	ldrb	r0, [r4, r9]
  4251f0:	fa0032a4 	blx	431c88 <__aeabi_i2d>
  4251f4:	e59d2014 	ldr	r2, [sp, #20]
  4251f8:	e59d3018 	ldr	r3, [sp, #24]
  4251fc:	fa0032d4 	blx	431d54 <__aeabi_dmul>
  425200:	e59d201c 	ldr	r2, [sp, #28]
  425204:	e1a03006 	mov	r3, r6
  425208:	fa0031f8 	blx	4319f0 <__adddf3>
  42520c:	e3a02000 	mov	r2, #0
  425210:	e59f3728 	ldr	r3, [pc, #1832]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425214:	fa0031f5 	blx	4319f0 <__adddf3>
  425218:	fa003196 	blx	431878 <floor>
  42521c:	fa003419 	blx	432288 <__aeabi_d2iz>
  425220:	e0853007 	add	r3, r5, r7
  425224:	e3da20ff 	bics	r2, sl, #255	; 0xff
  425228:	0a000004 	beq	425240 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x908>
  42522c:	e35a0000 	cmp	sl, #0
  425230:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425234:	ca000002 	bgt	425244 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x90c>
  425238:	e3a0a000 	mov	sl, #0
  42523c:	ea000000 	b	425244 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x90c>
  425240:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425244:	e5c3a000 	strb	sl, [r3]
  425248:	e0859009 	add	r9, r5, r9
  42524c:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425250:	0a000004 	beq	425268 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x930>
  425254:	e3500000 	cmp	r0, #0
  425258:	c3a000ff 	movgt	r0, #255	; 0xff
  42525c:	ca000002 	bgt	42526c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x934>
  425260:	e3a00000 	mov	r0, #0
  425264:	ea000000 	b	42526c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x934>
  425268:	e20000ff 	and	r0, r0, #255	; 0xff
  42526c:	e5c90000 	strb	r0, [r9]
  425270:	e2889002 	add	r9, r8, #2
  425274:	e7d40009 	ldrb	r0, [r4, r9]
  425278:	fa003282 	blx	431c88 <__aeabi_i2d>
  42527c:	e59d2014 	ldr	r2, [sp, #20]
  425280:	e59d3018 	ldr	r3, [sp, #24]
  425284:	fa0032b2 	blx	431d54 <__aeabi_dmul>
  425288:	e59d201c 	ldr	r2, [sp, #28]
  42528c:	e1a03006 	mov	r3, r6
  425290:	fa0031d6 	blx	4319f0 <__adddf3>
  425294:	e3a02000 	mov	r2, #0
  425298:	e59f36a0 	ldr	r3, [pc, #1696]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  42529c:	fa0031d3 	blx	4319f0 <__adddf3>
  4252a0:	fa003174 	blx	431878 <floor>
  4252a4:	fa0033f7 	blx	432288 <__aeabi_d2iz>
  4252a8:	e1a0a000 	mov	sl, r0
  4252ac:	e2888003 	add	r8, r8, #3
  4252b0:	e7d40008 	ldrb	r0, [r4, r8]
  4252b4:	fa003273 	blx	431c88 <__aeabi_i2d>
  4252b8:	e59d2014 	ldr	r2, [sp, #20]
  4252bc:	e59d3018 	ldr	r3, [sp, #24]
  4252c0:	fa0032a3 	blx	431d54 <__aeabi_dmul>
  4252c4:	e59d201c 	ldr	r2, [sp, #28]
  4252c8:	e1a03006 	mov	r3, r6
  4252cc:	fa0031c7 	blx	4319f0 <__adddf3>
  4252d0:	e3a02000 	mov	r2, #0
  4252d4:	e59f3664 	ldr	r3, [pc, #1636]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  4252d8:	fa0031c4 	blx	4319f0 <__adddf3>
  4252dc:	fa003165 	blx	431878 <floor>
  4252e0:	fa0033e8 	blx	432288 <__aeabi_d2iz>
  4252e4:	e0859009 	add	r9, r5, r9
  4252e8:	e3da30ff 	bics	r3, sl, #255	; 0xff
  4252ec:	0a000004 	beq	425304 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x9cc>
  4252f0:	e35a0000 	cmp	sl, #0
  4252f4:	c3a0a0ff 	movgt	sl, #255	; 0xff
  4252f8:	ca000002 	bgt	425308 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x9d0>
  4252fc:	e3a0a000 	mov	sl, #0
  425300:	ea000000 	b	425308 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x9d0>
  425304:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425308:	e5c9a000 	strb	sl, [r9]
  42530c:	e0858008 	add	r8, r5, r8
  425310:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425314:	0a000004 	beq	42532c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x9f4>
  425318:	e3500000 	cmp	r0, #0
  42531c:	c3a000ff 	movgt	r0, #255	; 0xff
  425320:	ca000002 	bgt	425330 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x9f8>
  425324:	e3a00000 	mov	r0, #0
  425328:	ea000000 	b	425330 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x9f8>
  42532c:	e20000ff 	and	r0, r0, #255	; 0xff
  425330:	e5c80000 	strb	r0, [r8]
  425334:	e2877004 	add	r7, r7, #4
  425338:	ea000000 	b	425340 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa08>
  42533c:	e3a07000 	mov	r7, #0
  425340:	e24b3004 	sub	r3, fp, #4
  425344:	e1530007 	cmp	r3, r7
  425348:	aaffff97 	bge	4251ac <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x874>
  42534c:	ea000017 	b	4253b0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa78>
  425350:	e7d40007 	ldrb	r0, [r4, r7]
  425354:	fa00324b 	blx	431c88 <__aeabi_i2d>
  425358:	e59d2014 	ldr	r2, [sp, #20]
  42535c:	e59d3018 	ldr	r3, [sp, #24]
  425360:	fa00327b 	blx	431d54 <__aeabi_dmul>
  425364:	e59d201c 	ldr	r2, [sp, #28]
  425368:	e1a03006 	mov	r3, r6
  42536c:	fa00319f 	blx	4319f0 <__adddf3>
  425370:	e3a02000 	mov	r2, #0
  425374:	e59f35c4 	ldr	r3, [pc, #1476]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425378:	fa00319c 	blx	4319f0 <__adddf3>
  42537c:	fa00313d 	blx	431878 <floor>
  425380:	fa0033c0 	blx	432288 <__aeabi_d2iz>
  425384:	e0853007 	add	r3, r5, r7
  425388:	e3d020ff 	bics	r2, r0, #255	; 0xff
  42538c:	0a000004 	beq	4253a4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa6c>
  425390:	e3500000 	cmp	r0, #0
  425394:	c3a000ff 	movgt	r0, #255	; 0xff
  425398:	ca000002 	bgt	4253a8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa70>
  42539c:	e3a00000 	mov	r0, #0
  4253a0:	ea000000 	b	4253a8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa70>
  4253a4:	e20000ff 	and	r0, r0, #255	; 0xff
  4253a8:	e5c30000 	strb	r0, [r3]
  4253ac:	e2877001 	add	r7, r7, #1
  4253b0:	e157000b 	cmp	r7, fp
  4253b4:	baffffe5 	blt	425350 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa18>
  4253b8:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  4253bc:	e0844003 	add	r4, r4, r3
  4253c0:	e59d3020 	ldr	r3, [sp, #32]
  4253c4:	e0855003 	add	r5, r5, r3
  4253c8:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  4253cc:	e2432001 	sub	r2, r3, #1
  4253d0:	e58d2154 	str	r2, [sp, #340]	; 0x154
  4253d4:	e3530000 	cmp	r3, #0
  4253d8:	1affffd7 	bne	42533c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xa04>
  4253dc:	ea0003fb 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  4253e0:	e59d0014 	ldr	r0, [sp, #20]
  4253e4:	e59d3018 	ldr	r3, [sp, #24]
  4253e8:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  4253ec:	e3a02000 	mov	r2, #0
  4253f0:	e59f355c 	ldr	r3, [pc, #1372]	; 425954 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x101c>
  4253f4:	fa003394 	blx	43224c <__aeabi_dcmple>
  4253f8:	e3500000 	cmp	r0, #0
  4253fc:	0a000075 	beq	4255d8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xca0>
  425400:	e1a0000b 	mov	r0, fp
  425404:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  425408:	e3a02000 	mov	r2, #0
  42540c:	e59f3544 	ldr	r3, [pc, #1348]	; 425958 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1020>
  425410:	fa003388 	blx	432238 <__aeabi_dcmplt>
  425414:	e3500000 	cmp	r0, #0
  425418:	0a00006e 	beq	4255d8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xca0>
  42541c:	e59d0014 	ldr	r0, [sp, #20]
  425420:	e59d1018 	ldr	r1, [sp, #24]
  425424:	e3a02000 	mov	r2, #0
  425428:	e59f3520 	ldr	r3, [pc, #1312]	; 425950 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1018>
  42542c:	fa003248 	blx	431d54 <__aeabi_dmul>
  425430:	e3a02000 	mov	r2, #0
  425434:	e59f3504 	ldr	r3, [pc, #1284]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425438:	fa00316c 	blx	4319f0 <__adddf3>
  42543c:	fa00310d 	blx	431878 <floor>
  425440:	fa003390 	blx	432288 <__aeabi_d2iz>
  425444:	e1a070a7 	lsr	r7, r7, #1
  425448:	e59d1020 	ldr	r1, [sp, #32]
  42544c:	ea00005b 	b	4255c0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc88>
  425450:	e1a0e003 	mov	lr, r3
  425454:	e1a02083 	lsl	r2, r3, #1
  425458:	e194c0b2 	ldrh	ip, [r4, r2]
  42545c:	e00c0c90 	mul	ip, r0, ip
  425460:	e28cc901 	add	ip, ip, #16384	; 0x4000
  425464:	e1a0c7cc 	asr	ip, ip, #15
  425468:	e2838001 	add	r8, r3, #1
  42546c:	e1a02088 	lsl	r2, r8, #1
  425470:	e19420b2 	ldrh	r2, [r4, r2]
  425474:	e0020290 	mul	r2, r0, r2
  425478:	e2822901 	add	r2, r2, #16384	; 0x4000
  42547c:	e1a027c2 	asr	r2, r2, #15
  425480:	e0859003 	add	r9, r5, r3
  425484:	e3dc60ff 	bics	r6, ip, #255	; 0xff
  425488:	0a000004 	beq	4254a0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xb68>
  42548c:	e35c0000 	cmp	ip, #0
  425490:	c3a060ff 	movgt	r6, #255	; 0xff
  425494:	ca000002 	bgt	4254a4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xb6c>
  425498:	e3a06000 	mov	r6, #0
  42549c:	ea000000 	b	4254a4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xb6c>
  4254a0:	e20c60ff 	and	r6, ip, #255	; 0xff
  4254a4:	e5c96000 	strb	r6, [r9]
  4254a8:	e085c008 	add	ip, r5, r8
  4254ac:	e3d260ff 	bics	r6, r2, #255	; 0xff
  4254b0:	0a000004 	beq	4254c8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xb90>
  4254b4:	e3520000 	cmp	r2, #0
  4254b8:	c3a020ff 	movgt	r2, #255	; 0xff
  4254bc:	ca000002 	bgt	4254cc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xb94>
  4254c0:	e3a02000 	mov	r2, #0
  4254c4:	ea000000 	b	4254cc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xb94>
  4254c8:	e20220ff 	and	r2, r2, #255	; 0xff
  4254cc:	e5cc2000 	strb	r2, [ip]
  4254d0:	e28e6002 	add	r6, lr, #2
  4254d4:	e1a02086 	lsl	r2, r6, #1
  4254d8:	e194c0b2 	ldrh	ip, [r4, r2]
  4254dc:	e00c0c90 	mul	ip, r0, ip
  4254e0:	e28cc901 	add	ip, ip, #16384	; 0x4000
  4254e4:	e1a0c7cc 	asr	ip, ip, #15
  4254e8:	e28ee003 	add	lr, lr, #3
  4254ec:	e1a0208e 	lsl	r2, lr, #1
  4254f0:	e19420b2 	ldrh	r2, [r4, r2]
  4254f4:	e0020290 	mul	r2, r0, r2
  4254f8:	e2822901 	add	r2, r2, #16384	; 0x4000
  4254fc:	e1a027c2 	asr	r2, r2, #15
  425500:	e0856006 	add	r6, r5, r6
  425504:	e3dc80ff 	bics	r8, ip, #255	; 0xff
  425508:	0a000004 	beq	425520 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xbe8>
  42550c:	e35c0000 	cmp	ip, #0
  425510:	c3a0c0ff 	movgt	ip, #255	; 0xff
  425514:	ca000002 	bgt	425524 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xbec>
  425518:	e3a0c000 	mov	ip, #0
  42551c:	ea000000 	b	425524 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xbec>
  425520:	e20cc0ff 	and	ip, ip, #255	; 0xff
  425524:	e5c6c000 	strb	ip, [r6]
  425528:	e085e00e 	add	lr, r5, lr
  42552c:	e3d2c0ff 	bics	ip, r2, #255	; 0xff
  425530:	0a000004 	beq	425548 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc10>
  425534:	e3520000 	cmp	r2, #0
  425538:	c3a020ff 	movgt	r2, #255	; 0xff
  42553c:	ca000002 	bgt	42554c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc14>
  425540:	e3a02000 	mov	r2, #0
  425544:	ea000000 	b	42554c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc14>
  425548:	e20220ff 	and	r2, r2, #255	; 0xff
  42554c:	e5ce2000 	strb	r2, [lr]
  425550:	e2833004 	add	r3, r3, #4
  425554:	ea000000 	b	42555c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc24>
  425558:	e3a03000 	mov	r3, #0
  42555c:	e59dc150 	ldr	ip, [sp, #336]	; 0x150
  425560:	e24c2004 	sub	r2, ip, #4
  425564:	e1520003 	cmp	r2, r3
  425568:	aaffffb8 	bge	425450 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xb18>
  42556c:	ea00000f 	b	4255b0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc78>
  425570:	e1a02083 	lsl	r2, r3, #1
  425574:	e19420b2 	ldrh	r2, [r4, r2]
  425578:	e0020290 	mul	r2, r0, r2
  42557c:	e2822901 	add	r2, r2, #16384	; 0x4000
  425580:	e1a027c2 	asr	r2, r2, #15
  425584:	e085e003 	add	lr, r5, r3
  425588:	e3d260ff 	bics	r6, r2, #255	; 0xff
  42558c:	0a000004 	beq	4255a4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc6c>
  425590:	e3520000 	cmp	r2, #0
  425594:	c3a020ff 	movgt	r2, #255	; 0xff
  425598:	ca000002 	bgt	4255a8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc70>
  42559c:	e3a02000 	mov	r2, #0
  4255a0:	ea000000 	b	4255a8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc70>
  4255a4:	e20220ff 	and	r2, r2, #255	; 0xff
  4255a8:	e5ce2000 	strb	r2, [lr]
  4255ac:	e2833001 	add	r3, r3, #1
  4255b0:	e153000c 	cmp	r3, ip
  4255b4:	baffffed 	blt	425570 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc38>
  4255b8:	e0844087 	add	r4, r4, r7, lsl #1
  4255bc:	e0855001 	add	r5, r5, r1
  4255c0:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  4255c4:	e2432001 	sub	r2, r3, #1
  4255c8:	e58d2154 	str	r2, [sp, #340]	; 0x154
  4255cc:	e3530000 	cmp	r3, #0
  4255d0:	1affffe0 	bne	425558 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xc20>
  4255d4:	ea00037d 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  4255d8:	e1a030a7 	lsr	r3, r7, #1
  4255dc:	e58d301c 	str	r3, [sp, #28]
  4255e0:	ea00008c 	b	425818 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xee0>
  4255e4:	e1a08007 	mov	r8, r7
  4255e8:	e1a03087 	lsl	r3, r7, #1
  4255ec:	e19400b3 	ldrh	r0, [r4, r3]
  4255f0:	fa0031a4 	blx	431c88 <__aeabi_i2d>
  4255f4:	e59d2014 	ldr	r2, [sp, #20]
  4255f8:	e59d3018 	ldr	r3, [sp, #24]
  4255fc:	fa0031d4 	blx	431d54 <__aeabi_dmul>
  425600:	e1a0200b 	mov	r2, fp
  425604:	e1a03006 	mov	r3, r6
  425608:	fa0030f8 	blx	4319f0 <__adddf3>
  42560c:	e3a02000 	mov	r2, #0
  425610:	e59f3328 	ldr	r3, [pc, #808]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425614:	fa0030f5 	blx	4319f0 <__adddf3>
  425618:	fa003096 	blx	431878 <floor>
  42561c:	fa003319 	blx	432288 <__aeabi_d2iz>
  425620:	e1a0a000 	mov	sl, r0
  425624:	e2879001 	add	r9, r7, #1
  425628:	e1a03089 	lsl	r3, r9, #1
  42562c:	e19400b3 	ldrh	r0, [r4, r3]
  425630:	fa003194 	blx	431c88 <__aeabi_i2d>
  425634:	e59d2014 	ldr	r2, [sp, #20]
  425638:	e59d3018 	ldr	r3, [sp, #24]
  42563c:	fa0031c4 	blx	431d54 <__aeabi_dmul>
  425640:	e1a0200b 	mov	r2, fp
  425644:	e1a03006 	mov	r3, r6
  425648:	fa0030e8 	blx	4319f0 <__adddf3>
  42564c:	e3a02000 	mov	r2, #0
  425650:	e59f32e8 	ldr	r3, [pc, #744]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425654:	fa0030e5 	blx	4319f0 <__adddf3>
  425658:	fa003086 	blx	431878 <floor>
  42565c:	fa003309 	blx	432288 <__aeabi_d2iz>
  425660:	e0853007 	add	r3, r5, r7
  425664:	e3da20ff 	bics	r2, sl, #255	; 0xff
  425668:	0a000004 	beq	425680 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xd48>
  42566c:	e35a0000 	cmp	sl, #0
  425670:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425674:	ca000002 	bgt	425684 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xd4c>
  425678:	e3a0a000 	mov	sl, #0
  42567c:	ea000000 	b	425684 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xd4c>
  425680:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425684:	e5c3a000 	strb	sl, [r3]
  425688:	e0859009 	add	r9, r5, r9
  42568c:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425690:	0a000004 	beq	4256a8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xd70>
  425694:	e3500000 	cmp	r0, #0
  425698:	c3a000ff 	movgt	r0, #255	; 0xff
  42569c:	ca000002 	bgt	4256ac <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xd74>
  4256a0:	e3a00000 	mov	r0, #0
  4256a4:	ea000000 	b	4256ac <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xd74>
  4256a8:	e20000ff 	and	r0, r0, #255	; 0xff
  4256ac:	e5c90000 	strb	r0, [r9]
  4256b0:	e2889002 	add	r9, r8, #2
  4256b4:	e1a03089 	lsl	r3, r9, #1
  4256b8:	e19400b3 	ldrh	r0, [r4, r3]
  4256bc:	fa003171 	blx	431c88 <__aeabi_i2d>
  4256c0:	e59d2014 	ldr	r2, [sp, #20]
  4256c4:	e59d3018 	ldr	r3, [sp, #24]
  4256c8:	fa0031a1 	blx	431d54 <__aeabi_dmul>
  4256cc:	e1a0200b 	mov	r2, fp
  4256d0:	e1a03006 	mov	r3, r6
  4256d4:	fa0030c5 	blx	4319f0 <__adddf3>
  4256d8:	e3a02000 	mov	r2, #0
  4256dc:	e59f325c 	ldr	r3, [pc, #604]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  4256e0:	fa0030c2 	blx	4319f0 <__adddf3>
  4256e4:	fa003063 	blx	431878 <floor>
  4256e8:	fa0032e6 	blx	432288 <__aeabi_d2iz>
  4256ec:	e1a0a000 	mov	sl, r0
  4256f0:	e2888003 	add	r8, r8, #3
  4256f4:	e1a03088 	lsl	r3, r8, #1
  4256f8:	e19400b3 	ldrh	r0, [r4, r3]
  4256fc:	fa003161 	blx	431c88 <__aeabi_i2d>
  425700:	e59d2014 	ldr	r2, [sp, #20]
  425704:	e59d3018 	ldr	r3, [sp, #24]
  425708:	fa003191 	blx	431d54 <__aeabi_dmul>
  42570c:	e1a0200b 	mov	r2, fp
  425710:	e1a03006 	mov	r3, r6
  425714:	fa0030b5 	blx	4319f0 <__adddf3>
  425718:	e3a02000 	mov	r2, #0
  42571c:	e59f321c 	ldr	r3, [pc, #540]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425720:	fa0030b2 	blx	4319f0 <__adddf3>
  425724:	fa003053 	blx	431878 <floor>
  425728:	fa0032d6 	blx	432288 <__aeabi_d2iz>
  42572c:	e0859009 	add	r9, r5, r9
  425730:	e3da30ff 	bics	r3, sl, #255	; 0xff
  425734:	0a000004 	beq	42574c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe14>
  425738:	e35a0000 	cmp	sl, #0
  42573c:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425740:	ca000002 	bgt	425750 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe18>
  425744:	e3a0a000 	mov	sl, #0
  425748:	ea000000 	b	425750 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe18>
  42574c:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425750:	e5c9a000 	strb	sl, [r9]
  425754:	e0858008 	add	r8, r5, r8
  425758:	e3d030ff 	bics	r3, r0, #255	; 0xff
  42575c:	0a000004 	beq	425774 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe3c>
  425760:	e3500000 	cmp	r0, #0
  425764:	c3a000ff 	movgt	r0, #255	; 0xff
  425768:	ca000002 	bgt	425778 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe40>
  42576c:	e3a00000 	mov	r0, #0
  425770:	ea000000 	b	425778 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe40>
  425774:	e20000ff 	and	r0, r0, #255	; 0xff
  425778:	e5c80000 	strb	r0, [r8]
  42577c:	e2877004 	add	r7, r7, #4
  425780:	ea000000 	b	425788 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe50>
  425784:	e3a07000 	mov	r7, #0
  425788:	e59d8150 	ldr	r8, [sp, #336]	; 0x150
  42578c:	e2483004 	sub	r3, r8, #4
  425790:	e1530007 	cmp	r3, r7
  425794:	aaffff92 	bge	4255e4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xcac>
  425798:	ea000018 	b	425800 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xec8>
  42579c:	e1a03087 	lsl	r3, r7, #1
  4257a0:	e19400b3 	ldrh	r0, [r4, r3]
  4257a4:	fa003137 	blx	431c88 <__aeabi_i2d>
  4257a8:	e59d2014 	ldr	r2, [sp, #20]
  4257ac:	e59d3018 	ldr	r3, [sp, #24]
  4257b0:	fa003167 	blx	431d54 <__aeabi_dmul>
  4257b4:	e1a0200b 	mov	r2, fp
  4257b8:	e1a03006 	mov	r3, r6
  4257bc:	fa00308b 	blx	4319f0 <__adddf3>
  4257c0:	e3a02000 	mov	r2, #0
  4257c4:	e59f3174 	ldr	r3, [pc, #372]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  4257c8:	fa003088 	blx	4319f0 <__adddf3>
  4257cc:	fa003029 	blx	431878 <floor>
  4257d0:	fa0032ac 	blx	432288 <__aeabi_d2iz>
  4257d4:	e0853007 	add	r3, r5, r7
  4257d8:	e3d020ff 	bics	r2, r0, #255	; 0xff
  4257dc:	0a000004 	beq	4257f4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xebc>
  4257e0:	e3500000 	cmp	r0, #0
  4257e4:	c3a000ff 	movgt	r0, #255	; 0xff
  4257e8:	ca000002 	bgt	4257f8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xec0>
  4257ec:	e3a00000 	mov	r0, #0
  4257f0:	ea000000 	b	4257f8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xec0>
  4257f4:	e20000ff 	and	r0, r0, #255	; 0xff
  4257f8:	e5c30000 	strb	r0, [r3]
  4257fc:	e2877001 	add	r7, r7, #1
  425800:	e1570008 	cmp	r7, r8
  425804:	baffffe4 	blt	42579c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe64>
  425808:	e59d301c 	ldr	r3, [sp, #28]
  42580c:	e0844083 	add	r4, r4, r3, lsl #1
  425810:	e59d3020 	ldr	r3, [sp, #32]
  425814:	e0855003 	add	r5, r5, r3
  425818:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  42581c:	e2432001 	sub	r2, r3, #1
  425820:	e58d2154 	str	r2, [sp, #340]	; 0x154
  425824:	e3530000 	cmp	r3, #0
  425828:	1affffd5 	bne	425784 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xe4c>
  42582c:	ea0002e7 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  425830:	e59d0014 	ldr	r0, [sp, #20]
  425834:	e59d3018 	ldr	r3, [sp, #24]
  425838:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42583c:	e3a02000 	mov	r2, #0
  425840:	e59f310c 	ldr	r3, [pc, #268]	; 425954 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x101c>
  425844:	fa003280 	blx	43224c <__aeabi_dcmple>
  425848:	e3500000 	cmp	r0, #0
  42584c:	0a00008d 	beq	425a88 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1150>
  425850:	e1a0000b 	mov	r0, fp
  425854:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  425858:	e59f20e8 	ldr	r2, [pc, #232]	; 425948 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1010>
  42585c:	e59f30e8 	ldr	r3, [pc, #232]	; 42594c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1014>
  425860:	fa003279 	blx	43224c <__aeabi_dcmple>
  425864:	e3500000 	cmp	r0, #0
  425868:	0a000086 	beq	425a88 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1150>
  42586c:	e59d0014 	ldr	r0, [sp, #20]
  425870:	e59d1018 	ldr	r1, [sp, #24]
  425874:	e3a02000 	mov	r2, #0
  425878:	e59f30d0 	ldr	r3, [pc, #208]	; 425950 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1018>
  42587c:	fa003134 	blx	431d54 <__aeabi_dmul>
  425880:	e3a02000 	mov	r2, #0
  425884:	e59f30b4 	ldr	r3, [pc, #180]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  425888:	fa003058 	blx	4319f0 <__adddf3>
  42588c:	fa002ff9 	blx	431878 <floor>
  425890:	fa00327c 	blx	432288 <__aeabi_d2iz>
  425894:	e1a08000 	mov	r8, r0
  425898:	e1a0000b 	mov	r0, fp
  42589c:	e1a01006 	mov	r1, r6
  4258a0:	e3a02000 	mov	r2, #0
  4258a4:	e59f30a4 	ldr	r3, [pc, #164]	; 425950 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1018>
  4258a8:	fa003129 	blx	431d54 <__aeabi_dmul>
  4258ac:	e3a02000 	mov	r2, #0
  4258b0:	e59f3088 	ldr	r3, [pc, #136]	; 425940 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1008>
  4258b4:	fa00304d 	blx	4319f0 <__adddf3>
  4258b8:	fa002fee 	blx	431878 <floor>
  4258bc:	fa003271 	blx	432288 <__aeabi_d2iz>
  4258c0:	e1a070a7 	lsr	r7, r7, #1
  4258c4:	e59d1020 	ldr	r1, [sp, #32]
  4258c8:	ea000068 	b	425a70 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1138>
  4258cc:	e1a0e003 	mov	lr, r3
  4258d0:	e1a02083 	lsl	r2, r3, #1
  4258d4:	e194c0f2 	ldrsh	ip, [r4, r2]
  4258d8:	e02c0c98 	mla	ip, r8, ip, r0
  4258dc:	e28cc901 	add	ip, ip, #16384	; 0x4000
  4258e0:	e1a0c7cc 	asr	ip, ip, #15
  4258e4:	e2836001 	add	r6, r3, #1
  4258e8:	e1a02086 	lsl	r2, r6, #1
  4258ec:	e19420f2 	ldrsh	r2, [r4, r2]
  4258f0:	e0220298 	mla	r2, r8, r2, r0
  4258f4:	e2822901 	add	r2, r2, #16384	; 0x4000
  4258f8:	e1a027c2 	asr	r2, r2, #15
  4258fc:	e0859003 	add	r9, r5, r3
  425900:	e3dca0ff 	bics	sl, ip, #255	; 0xff
  425904:	0a000004 	beq	42591c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xfe4>
  425908:	e35c0000 	cmp	ip, #0
  42590c:	c3a0c0ff 	movgt	ip, #255	; 0xff
  425910:	ca000002 	bgt	425920 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xfe8>
  425914:	e3a0c000 	mov	ip, #0
  425918:	ea000000 	b	425920 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xfe8>
  42591c:	e20cc0ff 	and	ip, ip, #255	; 0xff
  425920:	e5c9c000 	strb	ip, [r9]
  425924:	e0856006 	add	r6, r5, r6
  425928:	e3d2c0ff 	bics	ip, r2, #255	; 0xff
  42592c:	0a000011 	beq	425978 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1040>
  425930:	e3520000 	cmp	r2, #0
  425934:	da00000d 	ble	425970 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1038>
  425938:	e3a020ff 	mov	r2, #255	; 0xff
  42593c:	ea00000e 	b	42597c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1044>
  425940:	3fe00000 	.word	0x3fe00000
  425944:	40600000 	.word	0x40600000
  425948:	ffc00000 	.word	0xffc00000
  42594c:	40dfffff 	.word	0x40dfffff
  425950:	40e00000 	.word	0x40e00000
  425954:	3ff00000 	.word	0x3ff00000
  425958:	3cb00000 	.word	0x3cb00000
  42595c:	3fe00000 	.word	0x3fe00000
  425960:	00019d0c 	.word	0x00019d0c
  425964:	00000531 	.word	0x00000531
  425968:	000199b8 	.word	0x000199b8
  42596c:	000196d4 	.word	0x000196d4
  425970:	e3a02000 	mov	r2, #0
  425974:	ea000000 	b	42597c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1044>
  425978:	e20220ff 	and	r2, r2, #255	; 0xff
  42597c:	e5c62000 	strb	r2, [r6]
  425980:	e28e6002 	add	r6, lr, #2
  425984:	e1a02086 	lsl	r2, r6, #1
  425988:	e194c0f2 	ldrsh	ip, [r4, r2]
  42598c:	e02c0c98 	mla	ip, r8, ip, r0
  425990:	e28cc901 	add	ip, ip, #16384	; 0x4000
  425994:	e1a0c7cc 	asr	ip, ip, #15
  425998:	e28ee003 	add	lr, lr, #3
  42599c:	e1a0208e 	lsl	r2, lr, #1
  4259a0:	e19420f2 	ldrsh	r2, [r4, r2]
  4259a4:	e0220298 	mla	r2, r8, r2, r0
  4259a8:	e2822901 	add	r2, r2, #16384	; 0x4000
  4259ac:	e1a027c2 	asr	r2, r2, #15
  4259b0:	e0856006 	add	r6, r5, r6
  4259b4:	e3dc90ff 	bics	r9, ip, #255	; 0xff
  4259b8:	0a000004 	beq	4259d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1098>
  4259bc:	e35c0000 	cmp	ip, #0
  4259c0:	c3a0c0ff 	movgt	ip, #255	; 0xff
  4259c4:	ca000002 	bgt	4259d4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x109c>
  4259c8:	e3a0c000 	mov	ip, #0
  4259cc:	ea000000 	b	4259d4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x109c>
  4259d0:	e20cc0ff 	and	ip, ip, #255	; 0xff
  4259d4:	e5c6c000 	strb	ip, [r6]
  4259d8:	e085e00e 	add	lr, r5, lr
  4259dc:	e3d2c0ff 	bics	ip, r2, #255	; 0xff
  4259e0:	0a000004 	beq	4259f8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x10c0>
  4259e4:	e3520000 	cmp	r2, #0
  4259e8:	c3a020ff 	movgt	r2, #255	; 0xff
  4259ec:	ca000002 	bgt	4259fc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x10c4>
  4259f0:	e3a02000 	mov	r2, #0
  4259f4:	ea000000 	b	4259fc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x10c4>
  4259f8:	e20220ff 	and	r2, r2, #255	; 0xff
  4259fc:	e5ce2000 	strb	r2, [lr]
  425a00:	e2833004 	add	r3, r3, #4
  425a04:	ea000000 	b	425a0c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x10d4>
  425a08:	e3a03000 	mov	r3, #0
  425a0c:	e59dc150 	ldr	ip, [sp, #336]	; 0x150
  425a10:	e24c2004 	sub	r2, ip, #4
  425a14:	e1520003 	cmp	r2, r3
  425a18:	aaffffab 	bge	4258cc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0xf94>
  425a1c:	ea00000f 	b	425a60 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1128>
  425a20:	e1a02083 	lsl	r2, r3, #1
  425a24:	e19420f2 	ldrsh	r2, [r4, r2]
  425a28:	e0220298 	mla	r2, r8, r2, r0
  425a2c:	e2822901 	add	r2, r2, #16384	; 0x4000
  425a30:	e1a027c2 	asr	r2, r2, #15
  425a34:	e085e003 	add	lr, r5, r3
  425a38:	e3d260ff 	bics	r6, r2, #255	; 0xff
  425a3c:	0a000004 	beq	425a54 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x111c>
  425a40:	e3520000 	cmp	r2, #0
  425a44:	c3a020ff 	movgt	r2, #255	; 0xff
  425a48:	ca000002 	bgt	425a58 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1120>
  425a4c:	e3a02000 	mov	r2, #0
  425a50:	ea000000 	b	425a58 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1120>
  425a54:	e20220ff 	and	r2, r2, #255	; 0xff
  425a58:	e5ce2000 	strb	r2, [lr]
  425a5c:	e2833001 	add	r3, r3, #1
  425a60:	e153000c 	cmp	r3, ip
  425a64:	baffffed 	blt	425a20 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x10e8>
  425a68:	e0844087 	add	r4, r4, r7, lsl #1
  425a6c:	e0855001 	add	r5, r5, r1
  425a70:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  425a74:	e2432001 	sub	r2, r3, #1
  425a78:	e58d2154 	str	r2, [sp, #340]	; 0x154
  425a7c:	e3530000 	cmp	r3, #0
  425a80:	1affffe0 	bne	425a08 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x10d0>
  425a84:	ea000251 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  425a88:	e1a030a7 	lsr	r3, r7, #1
  425a8c:	e58d301c 	str	r3, [sp, #28]
  425a90:	ea00008c 	b	425cc8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1390>
  425a94:	e1a08007 	mov	r8, r7
  425a98:	e1a03087 	lsl	r3, r7, #1
  425a9c:	e19400f3 	ldrsh	r0, [r4, r3]
  425aa0:	fa003078 	blx	431c88 <__aeabi_i2d>
  425aa4:	e59d2014 	ldr	r2, [sp, #20]
  425aa8:	e59d3018 	ldr	r3, [sp, #24]
  425aac:	fa0030a8 	blx	431d54 <__aeabi_dmul>
  425ab0:	e1a0200b 	mov	r2, fp
  425ab4:	e1a03006 	mov	r3, r6
  425ab8:	fa002fcc 	blx	4319f0 <__adddf3>
  425abc:	e3a02000 	mov	r2, #0
  425ac0:	e51f316c 	ldr	r3, [pc, #-364]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425ac4:	fa002fc9 	blx	4319f0 <__adddf3>
  425ac8:	fa002f6a 	blx	431878 <floor>
  425acc:	fa0031ed 	blx	432288 <__aeabi_d2iz>
  425ad0:	e1a0a000 	mov	sl, r0
  425ad4:	e2879001 	add	r9, r7, #1
  425ad8:	e1a03089 	lsl	r3, r9, #1
  425adc:	e19400f3 	ldrsh	r0, [r4, r3]
  425ae0:	fa003068 	blx	431c88 <__aeabi_i2d>
  425ae4:	e59d2014 	ldr	r2, [sp, #20]
  425ae8:	e59d3018 	ldr	r3, [sp, #24]
  425aec:	fa003098 	blx	431d54 <__aeabi_dmul>
  425af0:	e1a0200b 	mov	r2, fp
  425af4:	e1a03006 	mov	r3, r6
  425af8:	fa002fbc 	blx	4319f0 <__adddf3>
  425afc:	e3a02000 	mov	r2, #0
  425b00:	e51f31ac 	ldr	r3, [pc, #-428]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425b04:	fa002fb9 	blx	4319f0 <__adddf3>
  425b08:	fa002f5a 	blx	431878 <floor>
  425b0c:	fa0031dd 	blx	432288 <__aeabi_d2iz>
  425b10:	e0853007 	add	r3, r5, r7
  425b14:	e3da20ff 	bics	r2, sl, #255	; 0xff
  425b18:	0a000004 	beq	425b30 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x11f8>
  425b1c:	e35a0000 	cmp	sl, #0
  425b20:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425b24:	ca000002 	bgt	425b34 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x11fc>
  425b28:	e3a0a000 	mov	sl, #0
  425b2c:	ea000000 	b	425b34 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x11fc>
  425b30:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425b34:	e5c3a000 	strb	sl, [r3]
  425b38:	e0859009 	add	r9, r5, r9
  425b3c:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425b40:	0a000004 	beq	425b58 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1220>
  425b44:	e3500000 	cmp	r0, #0
  425b48:	c3a000ff 	movgt	r0, #255	; 0xff
  425b4c:	ca000002 	bgt	425b5c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1224>
  425b50:	e3a00000 	mov	r0, #0
  425b54:	ea000000 	b	425b5c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1224>
  425b58:	e20000ff 	and	r0, r0, #255	; 0xff
  425b5c:	e5c90000 	strb	r0, [r9]
  425b60:	e2889002 	add	r9, r8, #2
  425b64:	e1a03089 	lsl	r3, r9, #1
  425b68:	e19400f3 	ldrsh	r0, [r4, r3]
  425b6c:	fa003045 	blx	431c88 <__aeabi_i2d>
  425b70:	e59d2014 	ldr	r2, [sp, #20]
  425b74:	e59d3018 	ldr	r3, [sp, #24]
  425b78:	fa003075 	blx	431d54 <__aeabi_dmul>
  425b7c:	e1a0200b 	mov	r2, fp
  425b80:	e1a03006 	mov	r3, r6
  425b84:	fa002f99 	blx	4319f0 <__adddf3>
  425b88:	e3a02000 	mov	r2, #0
  425b8c:	e51f3238 	ldr	r3, [pc, #-568]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425b90:	fa002f96 	blx	4319f0 <__adddf3>
  425b94:	fa002f37 	blx	431878 <floor>
  425b98:	fa0031ba 	blx	432288 <__aeabi_d2iz>
  425b9c:	e1a0a000 	mov	sl, r0
  425ba0:	e2888003 	add	r8, r8, #3
  425ba4:	e1a03088 	lsl	r3, r8, #1
  425ba8:	e19400f3 	ldrsh	r0, [r4, r3]
  425bac:	fa003035 	blx	431c88 <__aeabi_i2d>
  425bb0:	e59d2014 	ldr	r2, [sp, #20]
  425bb4:	e59d3018 	ldr	r3, [sp, #24]
  425bb8:	fa003065 	blx	431d54 <__aeabi_dmul>
  425bbc:	e1a0200b 	mov	r2, fp
  425bc0:	e1a03006 	mov	r3, r6
  425bc4:	fa002f89 	blx	4319f0 <__adddf3>
  425bc8:	e3a02000 	mov	r2, #0
  425bcc:	e51f3278 	ldr	r3, [pc, #-632]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425bd0:	fa002f86 	blx	4319f0 <__adddf3>
  425bd4:	fa002f27 	blx	431878 <floor>
  425bd8:	fa0031aa 	blx	432288 <__aeabi_d2iz>
  425bdc:	e0859009 	add	r9, r5, r9
  425be0:	e3da30ff 	bics	r3, sl, #255	; 0xff
  425be4:	0a000004 	beq	425bfc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x12c4>
  425be8:	e35a0000 	cmp	sl, #0
  425bec:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425bf0:	ca000002 	bgt	425c00 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x12c8>
  425bf4:	e3a0a000 	mov	sl, #0
  425bf8:	ea000000 	b	425c00 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x12c8>
  425bfc:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425c00:	e5c9a000 	strb	sl, [r9]
  425c04:	e0858008 	add	r8, r5, r8
  425c08:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425c0c:	0a000004 	beq	425c24 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x12ec>
  425c10:	e3500000 	cmp	r0, #0
  425c14:	c3a000ff 	movgt	r0, #255	; 0xff
  425c18:	ca000002 	bgt	425c28 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x12f0>
  425c1c:	e3a00000 	mov	r0, #0
  425c20:	ea000000 	b	425c28 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x12f0>
  425c24:	e20000ff 	and	r0, r0, #255	; 0xff
  425c28:	e5c80000 	strb	r0, [r8]
  425c2c:	e2877004 	add	r7, r7, #4
  425c30:	ea000000 	b	425c38 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1300>
  425c34:	e3a07000 	mov	r7, #0
  425c38:	e59d8150 	ldr	r8, [sp, #336]	; 0x150
  425c3c:	e2483004 	sub	r3, r8, #4
  425c40:	e1530007 	cmp	r3, r7
  425c44:	aaffff92 	bge	425a94 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x115c>
  425c48:	ea000018 	b	425cb0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1378>
  425c4c:	e1a03087 	lsl	r3, r7, #1
  425c50:	e19400f3 	ldrsh	r0, [r4, r3]
  425c54:	fa00300b 	blx	431c88 <__aeabi_i2d>
  425c58:	e59d2014 	ldr	r2, [sp, #20]
  425c5c:	e59d3018 	ldr	r3, [sp, #24]
  425c60:	fa00303b 	blx	431d54 <__aeabi_dmul>
  425c64:	e1a0200b 	mov	r2, fp
  425c68:	e1a03006 	mov	r3, r6
  425c6c:	fa002f5f 	blx	4319f0 <__adddf3>
  425c70:	e3a02000 	mov	r2, #0
  425c74:	e51f3320 	ldr	r3, [pc, #-800]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425c78:	fa002f5c 	blx	4319f0 <__adddf3>
  425c7c:	fa002efd 	blx	431878 <floor>
  425c80:	fa003180 	blx	432288 <__aeabi_d2iz>
  425c84:	e0853007 	add	r3, r5, r7
  425c88:	e3d020ff 	bics	r2, r0, #255	; 0xff
  425c8c:	0a000004 	beq	425ca4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x136c>
  425c90:	e3500000 	cmp	r0, #0
  425c94:	c3a000ff 	movgt	r0, #255	; 0xff
  425c98:	ca000002 	bgt	425ca8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1370>
  425c9c:	e3a00000 	mov	r0, #0
  425ca0:	ea000000 	b	425ca8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1370>
  425ca4:	e20000ff 	and	r0, r0, #255	; 0xff
  425ca8:	e5c30000 	strb	r0, [r3]
  425cac:	e2877001 	add	r7, r7, #1
  425cb0:	e1570008 	cmp	r7, r8
  425cb4:	baffffe4 	blt	425c4c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1314>
  425cb8:	e59d301c 	ldr	r3, [sp, #28]
  425cbc:	e0844083 	add	r4, r4, r3, lsl #1
  425cc0:	e59d3020 	ldr	r3, [sp, #32]
  425cc4:	e0855003 	add	r5, r5, r3
  425cc8:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  425ccc:	e2432001 	sub	r2, r3, #1
  425cd0:	e58d2154 	str	r2, [sp, #340]	; 0x154
  425cd4:	e3530000 	cmp	r3, #0
  425cd8:	1affffd5 	bne	425c34 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x12fc>
  425cdc:	ea0001bb 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  425ce0:	e1a03121 	lsr	r3, r1, #2
  425ce4:	e58d301c 	str	r3, [sp, #28]
  425ce8:	ea000087 	b	425f0c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x15d4>
  425cec:	e1a08007 	mov	r8, r7
  425cf0:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  425cf4:	fa002fe3 	blx	431c88 <__aeabi_i2d>
  425cf8:	e59d2014 	ldr	r2, [sp, #20]
  425cfc:	e59d3018 	ldr	r3, [sp, #24]
  425d00:	fa003013 	blx	431d54 <__aeabi_dmul>
  425d04:	e1a0200b 	mov	r2, fp
  425d08:	e1a03006 	mov	r3, r6
  425d0c:	fa002f37 	blx	4319f0 <__adddf3>
  425d10:	e3a02000 	mov	r2, #0
  425d14:	e51f33c0 	ldr	r3, [pc, #-960]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425d18:	fa002f34 	blx	4319f0 <__adddf3>
  425d1c:	fa002ed5 	blx	431878 <floor>
  425d20:	fa003158 	blx	432288 <__aeabi_d2iz>
  425d24:	e1a0a000 	mov	sl, r0
  425d28:	e2879001 	add	r9, r7, #1
  425d2c:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  425d30:	fa002fd4 	blx	431c88 <__aeabi_i2d>
  425d34:	e59d2014 	ldr	r2, [sp, #20]
  425d38:	e59d3018 	ldr	r3, [sp, #24]
  425d3c:	fa003004 	blx	431d54 <__aeabi_dmul>
  425d40:	e1a0200b 	mov	r2, fp
  425d44:	e1a03006 	mov	r3, r6
  425d48:	fa002f28 	blx	4319f0 <__adddf3>
  425d4c:	e3a02000 	mov	r2, #0
  425d50:	e51f33fc 	ldr	r3, [pc, #-1020]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425d54:	fa002f25 	blx	4319f0 <__adddf3>
  425d58:	fa002ec6 	blx	431878 <floor>
  425d5c:	fa003149 	blx	432288 <__aeabi_d2iz>
  425d60:	e0853007 	add	r3, r5, r7
  425d64:	e3da20ff 	bics	r2, sl, #255	; 0xff
  425d68:	0a000004 	beq	425d80 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1448>
  425d6c:	e35a0000 	cmp	sl, #0
  425d70:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425d74:	ca000002 	bgt	425d84 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x144c>
  425d78:	e3a0a000 	mov	sl, #0
  425d7c:	ea000000 	b	425d84 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x144c>
  425d80:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425d84:	e5c3a000 	strb	sl, [r3]
  425d88:	e0859009 	add	r9, r5, r9
  425d8c:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425d90:	0a000004 	beq	425da8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1470>
  425d94:	e3500000 	cmp	r0, #0
  425d98:	c3a000ff 	movgt	r0, #255	; 0xff
  425d9c:	ca000002 	bgt	425dac <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1474>
  425da0:	e3a00000 	mov	r0, #0
  425da4:	ea000000 	b	425dac <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1474>
  425da8:	e20000ff 	and	r0, r0, #255	; 0xff
  425dac:	e5c90000 	strb	r0, [r9]
  425db0:	e2889002 	add	r9, r8, #2
  425db4:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  425db8:	fa002fb2 	blx	431c88 <__aeabi_i2d>
  425dbc:	e59d2014 	ldr	r2, [sp, #20]
  425dc0:	e59d3018 	ldr	r3, [sp, #24]
  425dc4:	fa002fe2 	blx	431d54 <__aeabi_dmul>
  425dc8:	e1a0200b 	mov	r2, fp
  425dcc:	e1a03006 	mov	r3, r6
  425dd0:	fa002f06 	blx	4319f0 <__adddf3>
  425dd4:	e3a02000 	mov	r2, #0
  425dd8:	e51f3484 	ldr	r3, [pc, #-1156]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425ddc:	fa002f03 	blx	4319f0 <__adddf3>
  425de0:	fa002ea4 	blx	431878 <floor>
  425de4:	fa003127 	blx	432288 <__aeabi_d2iz>
  425de8:	e1a0a000 	mov	sl, r0
  425dec:	e2888003 	add	r8, r8, #3
  425df0:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  425df4:	fa002fa3 	blx	431c88 <__aeabi_i2d>
  425df8:	e59d2014 	ldr	r2, [sp, #20]
  425dfc:	e59d3018 	ldr	r3, [sp, #24]
  425e00:	fa002fd3 	blx	431d54 <__aeabi_dmul>
  425e04:	e1a0200b 	mov	r2, fp
  425e08:	e1a03006 	mov	r3, r6
  425e0c:	fa002ef7 	blx	4319f0 <__adddf3>
  425e10:	e3a02000 	mov	r2, #0
  425e14:	e51f34c0 	ldr	r3, [pc, #-1216]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425e18:	fa002ef4 	blx	4319f0 <__adddf3>
  425e1c:	fa002e95 	blx	431878 <floor>
  425e20:	fa003118 	blx	432288 <__aeabi_d2iz>
  425e24:	e0859009 	add	r9, r5, r9
  425e28:	e3da30ff 	bics	r3, sl, #255	; 0xff
  425e2c:	0a000004 	beq	425e44 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x150c>
  425e30:	e35a0000 	cmp	sl, #0
  425e34:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425e38:	ca000002 	bgt	425e48 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1510>
  425e3c:	e3a0a000 	mov	sl, #0
  425e40:	ea000000 	b	425e48 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1510>
  425e44:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425e48:	e5c9a000 	strb	sl, [r9]
  425e4c:	e0858008 	add	r8, r5, r8
  425e50:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425e54:	0a000004 	beq	425e6c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1534>
  425e58:	e3500000 	cmp	r0, #0
  425e5c:	c3a000ff 	movgt	r0, #255	; 0xff
  425e60:	ca000002 	bgt	425e70 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1538>
  425e64:	e3a00000 	mov	r0, #0
  425e68:	ea000000 	b	425e70 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1538>
  425e6c:	e20000ff 	and	r0, r0, #255	; 0xff
  425e70:	e5c80000 	strb	r0, [r8]
  425e74:	e2877004 	add	r7, r7, #4
  425e78:	ea000000 	b	425e80 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1548>
  425e7c:	e3a07000 	mov	r7, #0
  425e80:	e59d8150 	ldr	r8, [sp, #336]	; 0x150
  425e84:	e2483004 	sub	r3, r8, #4
  425e88:	e1530007 	cmp	r3, r7
  425e8c:	aaffff96 	bge	425cec <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x13b4>
  425e90:	ea000017 	b	425ef4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x15bc>
  425e94:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  425e98:	fa002f7a 	blx	431c88 <__aeabi_i2d>
  425e9c:	e59d2014 	ldr	r2, [sp, #20]
  425ea0:	e59d3018 	ldr	r3, [sp, #24]
  425ea4:	fa002faa 	blx	431d54 <__aeabi_dmul>
  425ea8:	e1a0200b 	mov	r2, fp
  425eac:	e1a03006 	mov	r3, r6
  425eb0:	fa002ece 	blx	4319f0 <__adddf3>
  425eb4:	e3a02000 	mov	r2, #0
  425eb8:	e51f3564 	ldr	r3, [pc, #-1380]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425ebc:	fa002ecb 	blx	4319f0 <__adddf3>
  425ec0:	fa002e6c 	blx	431878 <floor>
  425ec4:	fa0030ef 	blx	432288 <__aeabi_d2iz>
  425ec8:	e0853007 	add	r3, r5, r7
  425ecc:	e3d020ff 	bics	r2, r0, #255	; 0xff
  425ed0:	0a000004 	beq	425ee8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x15b0>
  425ed4:	e3500000 	cmp	r0, #0
  425ed8:	c3a000ff 	movgt	r0, #255	; 0xff
  425edc:	ca000002 	bgt	425eec <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x15b4>
  425ee0:	e3a00000 	mov	r0, #0
  425ee4:	ea000000 	b	425eec <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x15b4>
  425ee8:	e20000ff 	and	r0, r0, #255	; 0xff
  425eec:	e5c30000 	strb	r0, [r3]
  425ef0:	e2877001 	add	r7, r7, #1
  425ef4:	e1570008 	cmp	r7, r8
  425ef8:	baffffe5 	blt	425e94 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x155c>
  425efc:	e59d301c 	ldr	r3, [sp, #28]
  425f00:	e0844103 	add	r4, r4, r3, lsl #2
  425f04:	e59d3020 	ldr	r3, [sp, #32]
  425f08:	e0855003 	add	r5, r5, r3
  425f0c:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  425f10:	e2432001 	sub	r2, r3, #1
  425f14:	e58d2154 	str	r2, [sp, #340]	; 0x154
  425f18:	e3530000 	cmp	r3, #0
  425f1c:	1affffd6 	bne	425e7c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1544>
  425f20:	ea00012a 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  425f24:	e1a03121 	lsr	r3, r1, #2
  425f28:	e58d301c 	str	r3, [sp, #28]
  425f2c:	ea000087 	b	426150 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1818>
  425f30:	e1a08007 	mov	r8, r7
  425f34:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  425f38:	fa002f5b 	blx	431cac <__aeabi_f2d>
  425f3c:	e59d2014 	ldr	r2, [sp, #20]
  425f40:	e59d3018 	ldr	r3, [sp, #24]
  425f44:	fa002f82 	blx	431d54 <__aeabi_dmul>
  425f48:	e1a0200b 	mov	r2, fp
  425f4c:	e1a03006 	mov	r3, r6
  425f50:	fa002ea6 	blx	4319f0 <__adddf3>
  425f54:	e3a02000 	mov	r2, #0
  425f58:	e51f3604 	ldr	r3, [pc, #-1540]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425f5c:	fa002ea3 	blx	4319f0 <__adddf3>
  425f60:	fa002e44 	blx	431878 <floor>
  425f64:	fa0030c7 	blx	432288 <__aeabi_d2iz>
  425f68:	e1a0a000 	mov	sl, r0
  425f6c:	e2879001 	add	r9, r7, #1
  425f70:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  425f74:	fa002f4c 	blx	431cac <__aeabi_f2d>
  425f78:	e59d2014 	ldr	r2, [sp, #20]
  425f7c:	e59d3018 	ldr	r3, [sp, #24]
  425f80:	fa002f73 	blx	431d54 <__aeabi_dmul>
  425f84:	e1a0200b 	mov	r2, fp
  425f88:	e1a03006 	mov	r3, r6
  425f8c:	fa002e97 	blx	4319f0 <__adddf3>
  425f90:	e3a02000 	mov	r2, #0
  425f94:	e51f3640 	ldr	r3, [pc, #-1600]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  425f98:	fa002e94 	blx	4319f0 <__adddf3>
  425f9c:	fa002e35 	blx	431878 <floor>
  425fa0:	fa0030b8 	blx	432288 <__aeabi_d2iz>
  425fa4:	e0853007 	add	r3, r5, r7
  425fa8:	e3da20ff 	bics	r2, sl, #255	; 0xff
  425fac:	0a000004 	beq	425fc4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x168c>
  425fb0:	e35a0000 	cmp	sl, #0
  425fb4:	c3a0a0ff 	movgt	sl, #255	; 0xff
  425fb8:	ca000002 	bgt	425fc8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1690>
  425fbc:	e3a0a000 	mov	sl, #0
  425fc0:	ea000000 	b	425fc8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1690>
  425fc4:	e20aa0ff 	and	sl, sl, #255	; 0xff
  425fc8:	e5c3a000 	strb	sl, [r3]
  425fcc:	e0859009 	add	r9, r5, r9
  425fd0:	e3d030ff 	bics	r3, r0, #255	; 0xff
  425fd4:	0a000004 	beq	425fec <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x16b4>
  425fd8:	e3500000 	cmp	r0, #0
  425fdc:	c3a000ff 	movgt	r0, #255	; 0xff
  425fe0:	ca000002 	bgt	425ff0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x16b8>
  425fe4:	e3a00000 	mov	r0, #0
  425fe8:	ea000000 	b	425ff0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x16b8>
  425fec:	e20000ff 	and	r0, r0, #255	; 0xff
  425ff0:	e5c90000 	strb	r0, [r9]
  425ff4:	e2889002 	add	r9, r8, #2
  425ff8:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  425ffc:	fa002f2a 	blx	431cac <__aeabi_f2d>
  426000:	e59d2014 	ldr	r2, [sp, #20]
  426004:	e59d3018 	ldr	r3, [sp, #24]
  426008:	fa002f51 	blx	431d54 <__aeabi_dmul>
  42600c:	e1a0200b 	mov	r2, fp
  426010:	e1a03006 	mov	r3, r6
  426014:	fa002e75 	blx	4319f0 <__adddf3>
  426018:	e3a02000 	mov	r2, #0
  42601c:	e51f36c8 	ldr	r3, [pc, #-1736]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  426020:	fa002e72 	blx	4319f0 <__adddf3>
  426024:	fa002e13 	blx	431878 <floor>
  426028:	fa003096 	blx	432288 <__aeabi_d2iz>
  42602c:	e1a0a000 	mov	sl, r0
  426030:	e2888003 	add	r8, r8, #3
  426034:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  426038:	fa002f1b 	blx	431cac <__aeabi_f2d>
  42603c:	e59d2014 	ldr	r2, [sp, #20]
  426040:	e59d3018 	ldr	r3, [sp, #24]
  426044:	fa002f42 	blx	431d54 <__aeabi_dmul>
  426048:	e1a0200b 	mov	r2, fp
  42604c:	e1a03006 	mov	r3, r6
  426050:	fa002e66 	blx	4319f0 <__adddf3>
  426054:	e3a02000 	mov	r2, #0
  426058:	e51f3704 	ldr	r3, [pc, #-1796]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  42605c:	fa002e63 	blx	4319f0 <__adddf3>
  426060:	fa002e04 	blx	431878 <floor>
  426064:	fa003087 	blx	432288 <__aeabi_d2iz>
  426068:	e0859009 	add	r9, r5, r9
  42606c:	e3da30ff 	bics	r3, sl, #255	; 0xff
  426070:	0a000004 	beq	426088 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1750>
  426074:	e35a0000 	cmp	sl, #0
  426078:	c3a0a0ff 	movgt	sl, #255	; 0xff
  42607c:	ca000002 	bgt	42608c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1754>
  426080:	e3a0a000 	mov	sl, #0
  426084:	ea000000 	b	42608c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1754>
  426088:	e20aa0ff 	and	sl, sl, #255	; 0xff
  42608c:	e5c9a000 	strb	sl, [r9]
  426090:	e0858008 	add	r8, r5, r8
  426094:	e3d030ff 	bics	r3, r0, #255	; 0xff
  426098:	0a000004 	beq	4260b0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1778>
  42609c:	e3500000 	cmp	r0, #0
  4260a0:	c3a000ff 	movgt	r0, #255	; 0xff
  4260a4:	ca000002 	bgt	4260b4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x177c>
  4260a8:	e3a00000 	mov	r0, #0
  4260ac:	ea000000 	b	4260b4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x177c>
  4260b0:	e20000ff 	and	r0, r0, #255	; 0xff
  4260b4:	e5c80000 	strb	r0, [r8]
  4260b8:	e2877004 	add	r7, r7, #4
  4260bc:	ea000000 	b	4260c4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x178c>
  4260c0:	e3a07000 	mov	r7, #0
  4260c4:	e59d8150 	ldr	r8, [sp, #336]	; 0x150
  4260c8:	e2483004 	sub	r3, r8, #4
  4260cc:	e1530007 	cmp	r3, r7
  4260d0:	aaffff96 	bge	425f30 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x15f8>
  4260d4:	ea000017 	b	426138 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1800>
  4260d8:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  4260dc:	fa002ef2 	blx	431cac <__aeabi_f2d>
  4260e0:	e59d2014 	ldr	r2, [sp, #20]
  4260e4:	e59d3018 	ldr	r3, [sp, #24]
  4260e8:	fa002f19 	blx	431d54 <__aeabi_dmul>
  4260ec:	e1a0200b 	mov	r2, fp
  4260f0:	e1a03006 	mov	r3, r6
  4260f4:	fa002e3d 	blx	4319f0 <__adddf3>
  4260f8:	e3a02000 	mov	r2, #0
  4260fc:	e51f37a8 	ldr	r3, [pc, #-1960]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  426100:	fa002e3a 	blx	4319f0 <__adddf3>
  426104:	fa002ddb 	blx	431878 <floor>
  426108:	fa00305e 	blx	432288 <__aeabi_d2iz>
  42610c:	e0853007 	add	r3, r5, r7
  426110:	e3d020ff 	bics	r2, r0, #255	; 0xff
  426114:	0a000004 	beq	42612c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x17f4>
  426118:	e3500000 	cmp	r0, #0
  42611c:	c3a000ff 	movgt	r0, #255	; 0xff
  426120:	ca000002 	bgt	426130 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x17f8>
  426124:	e3a00000 	mov	r0, #0
  426128:	ea000000 	b	426130 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x17f8>
  42612c:	e20000ff 	and	r0, r0, #255	; 0xff
  426130:	e5c30000 	strb	r0, [r3]
  426134:	e2877001 	add	r7, r7, #1
  426138:	e1570008 	cmp	r7, r8
  42613c:	baffffe5 	blt	4260d8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x17a0>
  426140:	e59d301c 	ldr	r3, [sp, #28]
  426144:	e0844103 	add	r4, r4, r3, lsl #2
  426148:	e59d3020 	ldr	r3, [sp, #32]
  42614c:	e0855003 	add	r5, r5, r3
  426150:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  426154:	e2432001 	sub	r2, r3, #1
  426158:	e58d2154 	str	r2, [sp, #340]	; 0x154
  42615c:	e3530000 	cmp	r3, #0
  426160:	1affffd6 	bne	4260c0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1788>
  426164:	ea000099 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  426168:	e1a031a1 	lsr	r3, r1, #3
  42616c:	e58d301c 	str	r3, [sp, #28]
  426170:	ea000087 	b	426394 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a5c>
  426174:	e1a08007 	mov	r8, r7
  426178:	e0843187 	add	r3, r4, r7, lsl #3
  42617c:	e59d0014 	ldr	r0, [sp, #20]
  426180:	e59d1018 	ldr	r1, [sp, #24]
  426184:	e893000c 	ldm	r3, {r2, r3}
  426188:	fa002ef1 	blx	431d54 <__aeabi_dmul>
  42618c:	e1a0200b 	mov	r2, fp
  426190:	e1a03006 	mov	r3, r6
  426194:	fa002e15 	blx	4319f0 <__adddf3>
  426198:	e3a02000 	mov	r2, #0
  42619c:	e51f3848 	ldr	r3, [pc, #-2120]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  4261a0:	fa002e12 	blx	4319f0 <__adddf3>
  4261a4:	fa002db3 	blx	431878 <floor>
  4261a8:	fa003036 	blx	432288 <__aeabi_d2iz>
  4261ac:	e1a0a000 	mov	sl, r0
  4261b0:	e2879001 	add	r9, r7, #1
  4261b4:	e0843189 	add	r3, r4, r9, lsl #3
  4261b8:	e59d0014 	ldr	r0, [sp, #20]
  4261bc:	e59d1018 	ldr	r1, [sp, #24]
  4261c0:	e893000c 	ldm	r3, {r2, r3}
  4261c4:	fa002ee2 	blx	431d54 <__aeabi_dmul>
  4261c8:	e1a0200b 	mov	r2, fp
  4261cc:	e1a03006 	mov	r3, r6
  4261d0:	fa002e06 	blx	4319f0 <__adddf3>
  4261d4:	e3a02000 	mov	r2, #0
  4261d8:	e51f3884 	ldr	r3, [pc, #-2180]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  4261dc:	fa002e03 	blx	4319f0 <__adddf3>
  4261e0:	fa002da4 	blx	431878 <floor>
  4261e4:	fa003027 	blx	432288 <__aeabi_d2iz>
  4261e8:	e0853007 	add	r3, r5, r7
  4261ec:	e3da20ff 	bics	r2, sl, #255	; 0xff
  4261f0:	0a000004 	beq	426208 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x18d0>
  4261f4:	e35a0000 	cmp	sl, #0
  4261f8:	c3a0a0ff 	movgt	sl, #255	; 0xff
  4261fc:	ca000002 	bgt	42620c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x18d4>
  426200:	e3a0a000 	mov	sl, #0
  426204:	ea000000 	b	42620c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x18d4>
  426208:	e20aa0ff 	and	sl, sl, #255	; 0xff
  42620c:	e5c3a000 	strb	sl, [r3]
  426210:	e0859009 	add	r9, r5, r9
  426214:	e3d030ff 	bics	r3, r0, #255	; 0xff
  426218:	0a000004 	beq	426230 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x18f8>
  42621c:	e3500000 	cmp	r0, #0
  426220:	c3a000ff 	movgt	r0, #255	; 0xff
  426224:	ca000002 	bgt	426234 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x18fc>
  426228:	e3a00000 	mov	r0, #0
  42622c:	ea000000 	b	426234 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x18fc>
  426230:	e20000ff 	and	r0, r0, #255	; 0xff
  426234:	e5c90000 	strb	r0, [r9]
  426238:	e2889002 	add	r9, r8, #2
  42623c:	e0843189 	add	r3, r4, r9, lsl #3
  426240:	e59d0014 	ldr	r0, [sp, #20]
  426244:	e59d1018 	ldr	r1, [sp, #24]
  426248:	e893000c 	ldm	r3, {r2, r3}
  42624c:	fa002ec0 	blx	431d54 <__aeabi_dmul>
  426250:	e1a0200b 	mov	r2, fp
  426254:	e1a03006 	mov	r3, r6
  426258:	fa002de4 	blx	4319f0 <__adddf3>
  42625c:	e3a02000 	mov	r2, #0
  426260:	e51f390c 	ldr	r3, [pc, #-2316]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  426264:	fa002de1 	blx	4319f0 <__adddf3>
  426268:	fa002d82 	blx	431878 <floor>
  42626c:	fa003005 	blx	432288 <__aeabi_d2iz>
  426270:	e1a0a000 	mov	sl, r0
  426274:	e2888003 	add	r8, r8, #3
  426278:	e0843188 	add	r3, r4, r8, lsl #3
  42627c:	e59d0014 	ldr	r0, [sp, #20]
  426280:	e59d1018 	ldr	r1, [sp, #24]
  426284:	e893000c 	ldm	r3, {r2, r3}
  426288:	fa002eb1 	blx	431d54 <__aeabi_dmul>
  42628c:	e1a0200b 	mov	r2, fp
  426290:	e1a03006 	mov	r3, r6
  426294:	fa002dd5 	blx	4319f0 <__adddf3>
  426298:	e3a02000 	mov	r2, #0
  42629c:	e51f3948 	ldr	r3, [pc, #-2376]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  4262a0:	fa002dd2 	blx	4319f0 <__adddf3>
  4262a4:	fa002d73 	blx	431878 <floor>
  4262a8:	fa002ff6 	blx	432288 <__aeabi_d2iz>
  4262ac:	e0859009 	add	r9, r5, r9
  4262b0:	e3da30ff 	bics	r3, sl, #255	; 0xff
  4262b4:	0a000004 	beq	4262cc <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1994>
  4262b8:	e35a0000 	cmp	sl, #0
  4262bc:	c3a0a0ff 	movgt	sl, #255	; 0xff
  4262c0:	ca000002 	bgt	4262d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1998>
  4262c4:	e3a0a000 	mov	sl, #0
  4262c8:	ea000000 	b	4262d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1998>
  4262cc:	e20aa0ff 	and	sl, sl, #255	; 0xff
  4262d0:	e5c9a000 	strb	sl, [r9]
  4262d4:	e0858008 	add	r8, r5, r8
  4262d8:	e3d030ff 	bics	r3, r0, #255	; 0xff
  4262dc:	0a000004 	beq	4262f4 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x19bc>
  4262e0:	e3500000 	cmp	r0, #0
  4262e4:	c3a000ff 	movgt	r0, #255	; 0xff
  4262e8:	ca000002 	bgt	4262f8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x19c0>
  4262ec:	e3a00000 	mov	r0, #0
  4262f0:	ea000000 	b	4262f8 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x19c0>
  4262f4:	e20000ff 	and	r0, r0, #255	; 0xff
  4262f8:	e5c80000 	strb	r0, [r8]
  4262fc:	e2877004 	add	r7, r7, #4
  426300:	ea000000 	b	426308 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x19d0>
  426304:	e3a07000 	mov	r7, #0
  426308:	e59d8150 	ldr	r8, [sp, #336]	; 0x150
  42630c:	e2483004 	sub	r3, r8, #4
  426310:	e1530007 	cmp	r3, r7
  426314:	aaffff96 	bge	426174 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x183c>
  426318:	ea000017 	b	42637c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a44>
  42631c:	e0843187 	add	r3, r4, r7, lsl #3
  426320:	e59d0014 	ldr	r0, [sp, #20]
  426324:	e59d1018 	ldr	r1, [sp, #24]
  426328:	e893000c 	ldm	r3, {r2, r3}
  42632c:	fa002e88 	blx	431d54 <__aeabi_dmul>
  426330:	e1a0200b 	mov	r2, fp
  426334:	e1a03006 	mov	r3, r6
  426338:	fa002dac 	blx	4319f0 <__adddf3>
  42633c:	e3a02000 	mov	r2, #0
  426340:	e51f39ec 	ldr	r3, [pc, #-2540]	; 42595c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1024>
  426344:	fa002da9 	blx	4319f0 <__adddf3>
  426348:	fa002d4a 	blx	431878 <floor>
  42634c:	fa002fcd 	blx	432288 <__aeabi_d2iz>
  426350:	e0853007 	add	r3, r5, r7
  426354:	e3d020ff 	bics	r2, r0, #255	; 0xff
  426358:	0a000004 	beq	426370 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a38>
  42635c:	e3500000 	cmp	r0, #0
  426360:	c3a000ff 	movgt	r0, #255	; 0xff
  426364:	ca000002 	bgt	426374 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a3c>
  426368:	e3a00000 	mov	r0, #0
  42636c:	ea000000 	b	426374 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a3c>
  426370:	e20000ff 	and	r0, r0, #255	; 0xff
  426374:	e5c30000 	strb	r0, [r3]
  426378:	e2877001 	add	r7, r7, #1
  42637c:	e1570008 	cmp	r7, r8
  426380:	baffffe5 	blt	42631c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x19e4>
  426384:	e59d301c 	ldr	r3, [sp, #28]
  426388:	e0844183 	add	r4, r4, r3, lsl #3
  42638c:	e59d3020 	ldr	r3, [sp, #32]
  426390:	e0855003 	add	r5, r5, r3
  426394:	e59d3154 	ldr	r3, [sp, #340]	; 0x154
  426398:	e2432001 	sub	r2, r3, #1
  42639c:	e58d2154 	str	r2, [sp, #340]	; 0x154
  4263a0:	e3530000 	cmp	r3, #0
  4263a4:	1affffd6 	bne	426304 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x19cc>
  4263a8:	ea000008 	b	4263d0 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1a98>
  4263ac:	e51f0a54 	ldr	r0, [pc, #-2644]	; 425960 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1028>
  4263b0:	e08f0000 	add	r0, pc, r0
  4263b4:	e51f1a58 	ldr	r1, [pc, #-2648]	; 425964 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x102c>
  4263b8:	e51f2a58 	ldr	r2, [pc, #-2648]	; 425968 <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1030>
  4263bc:	e08f2002 	add	r2, pc, r2
  4263c0:	e28220b8 	add	r2, r2, #184	; 0xb8
  4263c4:	e51f3a60 	ldr	r3, [pc, #-2656]	; 42596c <_ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi+0x1034>
  4263c8:	e08f3003 	add	r3, pc, r3
  4263cc:	fa003660 	blx	433d54 <__assert_func>
  4263d0:	e3a00000 	mov	r0, #0
  4263d4:	e28ddf4b 	add	sp, sp, #300	; 0x12c
  4263d8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4263dc:	e12fff1e 	bx	lr

004263e0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi>:
  4263e0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4263e4:	e24ddf4f 	sub	sp, sp, #316	; 0x13c
  4263e8:	e1a04000 	mov	r4, r0
  4263ec:	e1a07001 	mov	r7, r1
  4263f0:	e1a05002 	mov	r5, r2
  4263f4:	e1a08003 	mov	r8, r3
  4263f8:	e59d3168 	ldr	r3, [sp, #360]	; 0x168
  4263fc:	e58d3014 	str	r3, [sp, #20]
  426400:	e59d316c 	ldr	r3, [sp, #364]	; 0x16c
  426404:	e58d3018 	str	r3, [sp, #24]
  426408:	e59db170 	ldr	fp, [sp, #368]	; 0x170
  42640c:	e59d6174 	ldr	r6, [sp, #372]	; 0x174
  426410:	e58d8020 	str	r8, [sp, #32]
  426414:	e59d3178 	ldr	r3, [sp, #376]	; 0x178
  426418:	e2033007 	and	r3, r3, #7
  42641c:	e3530006 	cmp	r3, #6
  426420:	908ff103 	addls	pc, pc, r3, lsl #2
  426424:	ea0006c5 	b	427f40 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b60>
  426428:	ea000005 	b	426444 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x64>
  42642c:	ea00015a 	b	42699c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x5bc>
  426430:	ea0002ae 	b	426ef0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xb10>
  426434:	ea0003d6 	b	427394 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfb4>
  426438:	ea0004fe 	b	427838 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1458>
  42643c:	ea000593 	b	427a90 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x16b0>
  426440:	ea000628 	b	427ce8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1908>
  426444:	e59d3160 	ldr	r3, [sp, #352]	; 0x160
  426448:	e1a02003 	mov	r2, r3
  42644c:	e1a09003 	mov	r9, r3
  426450:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  426454:	e0020293 	mul	r2, r3, r2
  426458:	e35200ff 	cmp	r2, #255	; 0xff
  42645c:	ca00001c 	bgt	4264d4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf4>
  426460:	ea00002f 	b	426524 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x144>
  426464:	e1a0000b 	mov	r0, fp
  426468:	e1a01006 	mov	r1, r6
  42646c:	e3a02000 	mov	r2, #0
  426470:	e59f3f08 	ldr	r3, [pc, #3848]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426474:	fa002d5d 	blx	4319f0 <__adddf3>
  426478:	fa002cfe 	blx	431878 <floor>
  42647c:	fa002f81 	blx	432288 <__aeabi_d2iz>
  426480:	e2803080 	add	r3, r0, #128	; 0x80
  426484:	e3d330ff 	bics	r3, r3, #255	; 0xff
  426488:	0a000004 	beq	4264a0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc0>
  42648c:	e3500000 	cmp	r0, #0
  426490:	c3a0007f 	movgt	r0, #127	; 0x7f
  426494:	ca000002 	bgt	4264a4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc4>
  426498:	e3a00080 	mov	r0, #128	; 0x80
  42649c:	ea000000 	b	4264a4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc4>
  4264a0:	e20000ff 	and	r0, r0, #255	; 0xff
  4264a4:	e28d3f4e 	add	r3, sp, #312	; 0x138
  4264a8:	e0833009 	add	r3, r3, r9
  4264ac:	e5430100 	strb	r0, [r3, #-256]	; 0x100
  4264b0:	e2899001 	add	r9, r9, #1
  4264b4:	e1a0000b 	mov	r0, fp
  4264b8:	e1a01006 	mov	r1, r6
  4264bc:	e1a02004 	mov	r2, r4
  4264c0:	e1a0300a 	mov	r3, sl
  4264c4:	fa002d49 	blx	4319f0 <__adddf3>
  4264c8:	e1a0b000 	mov	fp, r0
  4264cc:	e1a06001 	mov	r6, r1
  4264d0:	ea000003 	b	4264e4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x104>
  4264d4:	e3a09000 	mov	r9, #0
  4264d8:	e58d001c 	str	r0, [sp, #28]
  4264dc:	e59d4014 	ldr	r4, [sp, #20]
  4264e0:	e59da018 	ldr	sl, [sp, #24]
  4264e4:	e35900ff 	cmp	r9, #255	; 0xff
  4264e8:	daffffdd 	ble	426464 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x84>
  4264ec:	e59d401c 	ldr	r4, [sp, #28]
  4264f0:	e28d3f57 	add	r3, sp, #348	; 0x15c
  4264f4:	e9930003 	ldmib	r3, {r0, r1}
  4264f8:	e28d3028 	add	r3, sp, #40	; 0x28
  4264fc:	e8830003 	stm	r3, {r0, r1}
  426500:	e88d0003 	stm	sp, {r0, r1}
  426504:	e28d3038 	add	r3, sp, #56	; 0x38
  426508:	e58d3008 	str	r3, [sp, #8]
  42650c:	e1a00004 	mov	r0, r4
  426510:	e1a01007 	mov	r1, r7
  426514:	e1a02005 	mov	r2, r5
  426518:	e1a03008 	mov	r3, r8
  42651c:	eb0027bf 	bl	430420 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_>
  426520:	ea00068f 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  426524:	e59d0014 	ldr	r0, [sp, #20]
  426528:	e59d3018 	ldr	r3, [sp, #24]
  42652c:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  426530:	e3a02000 	mov	r2, #0
  426534:	e59f3e2c 	ldr	r3, [pc, #3628]	; 427368 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf88>
  426538:	fa002f43 	blx	43224c <__aeabi_dcmple>
  42653c:	e3500000 	cmp	r0, #0
  426540:	0a00007f 	beq	426744 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x364>
  426544:	e1a0000b 	mov	r0, fp
  426548:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42654c:	e59f2e20 	ldr	r2, [pc, #3616]	; 427374 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf94>
  426550:	e59f3e20 	ldr	r3, [pc, #3616]	; 427378 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf98>
  426554:	fa002f3c 	blx	43224c <__aeabi_dcmple>
  426558:	e3500000 	cmp	r0, #0
  42655c:	0a000078 	beq	426744 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x364>
  426560:	e59d0014 	ldr	r0, [sp, #20]
  426564:	e59d1018 	ldr	r1, [sp, #24]
  426568:	e3a02000 	mov	r2, #0
  42656c:	e59f3e08 	ldr	r3, [pc, #3592]	; 42737c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf9c>
  426570:	fa002df7 	blx	431d54 <__aeabi_dmul>
  426574:	e3a02000 	mov	r2, #0
  426578:	e59f3e00 	ldr	r3, [pc, #3584]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  42657c:	fa002d1b 	blx	4319f0 <__adddf3>
  426580:	fa002cbc 	blx	431878 <floor>
  426584:	fa002f3f 	blx	432288 <__aeabi_d2iz>
  426588:	e1a08000 	mov	r8, r0
  42658c:	e1a0000b 	mov	r0, fp
  426590:	e1a01006 	mov	r1, r6
  426594:	e3a02000 	mov	r2, #0
  426598:	e59f3ddc 	ldr	r3, [pc, #3548]	; 42737c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf9c>
  42659c:	fa002dec 	blx	431d54 <__aeabi_dmul>
  4265a0:	e3a02000 	mov	r2, #0
  4265a4:	e59f3dd4 	ldr	r3, [pc, #3540]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4265a8:	fa002d10 	blx	4319f0 <__adddf3>
  4265ac:	fa002cb1 	blx	431878 <floor>
  4265b0:	fa002f34 	blx	432288 <__aeabi_d2iz>
  4265b4:	e59dc020 	ldr	ip, [sp, #32]
  4265b8:	e1a01009 	mov	r1, r9
  4265bc:	ea00005a 	b	42672c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x34c>
  4265c0:	e1a06003 	mov	r6, r3
  4265c4:	e7d4e003 	ldrb	lr, [r4, r3]
  4265c8:	e02e0e98 	mla	lr, r8, lr, r0
  4265cc:	e28ee901 	add	lr, lr, #16384	; 0x4000
  4265d0:	e1a0e7ce 	asr	lr, lr, #15
  4265d4:	e2839001 	add	r9, r3, #1
  4265d8:	e7d42009 	ldrb	r2, [r4, r9]
  4265dc:	e0220298 	mla	r2, r8, r2, r0
  4265e0:	e2822901 	add	r2, r2, #16384	; 0x4000
  4265e4:	e1a027c2 	asr	r2, r2, #15
  4265e8:	e085a003 	add	sl, r5, r3
  4265ec:	e28eb080 	add	fp, lr, #128	; 0x80
  4265f0:	e3dbb0ff 	bics	fp, fp, #255	; 0xff
  4265f4:	0a000004 	beq	42660c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x22c>
  4265f8:	e35e0000 	cmp	lr, #0
  4265fc:	c3a0e07f 	movgt	lr, #127	; 0x7f
  426600:	ca000002 	bgt	426610 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x230>
  426604:	e3a0e080 	mov	lr, #128	; 0x80
  426608:	ea000000 	b	426610 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x230>
  42660c:	e20ee0ff 	and	lr, lr, #255	; 0xff
  426610:	e5cae000 	strb	lr, [sl]
  426614:	e0859009 	add	r9, r5, r9
  426618:	e282e080 	add	lr, r2, #128	; 0x80
  42661c:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  426620:	0a000004 	beq	426638 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x258>
  426624:	e3520000 	cmp	r2, #0
  426628:	c3a0207f 	movgt	r2, #127	; 0x7f
  42662c:	ca000002 	bgt	42663c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x25c>
  426630:	e3a02080 	mov	r2, #128	; 0x80
  426634:	ea000000 	b	42663c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x25c>
  426638:	e20220ff 	and	r2, r2, #255	; 0xff
  42663c:	e5c92000 	strb	r2, [r9]
  426640:	e2869002 	add	r9, r6, #2
  426644:	e7d4e009 	ldrb	lr, [r4, r9]
  426648:	e02e0e98 	mla	lr, r8, lr, r0
  42664c:	e28ee901 	add	lr, lr, #16384	; 0x4000
  426650:	e1a0e7ce 	asr	lr, lr, #15
  426654:	e2866003 	add	r6, r6, #3
  426658:	e7d42006 	ldrb	r2, [r4, r6]
  42665c:	e0220298 	mla	r2, r8, r2, r0
  426660:	e2822901 	add	r2, r2, #16384	; 0x4000
  426664:	e1a027c2 	asr	r2, r2, #15
  426668:	e0859009 	add	r9, r5, r9
  42666c:	e28ea080 	add	sl, lr, #128	; 0x80
  426670:	e3daa0ff 	bics	sl, sl, #255	; 0xff
  426674:	0a000004 	beq	42668c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2ac>
  426678:	e35e0000 	cmp	lr, #0
  42667c:	c3a0e07f 	movgt	lr, #127	; 0x7f
  426680:	ca000002 	bgt	426690 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2b0>
  426684:	e3a0e080 	mov	lr, #128	; 0x80
  426688:	ea000000 	b	426690 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2b0>
  42668c:	e20ee0ff 	and	lr, lr, #255	; 0xff
  426690:	e5c9e000 	strb	lr, [r9]
  426694:	e0856006 	add	r6, r5, r6
  426698:	e282e080 	add	lr, r2, #128	; 0x80
  42669c:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  4266a0:	0a000004 	beq	4266b8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2d8>
  4266a4:	e3520000 	cmp	r2, #0
  4266a8:	c3a0207f 	movgt	r2, #127	; 0x7f
  4266ac:	ca000002 	bgt	4266bc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2dc>
  4266b0:	e3a02080 	mov	r2, #128	; 0x80
  4266b4:	ea000000 	b	4266bc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2dc>
  4266b8:	e20220ff 	and	r2, r2, #255	; 0xff
  4266bc:	e5c62000 	strb	r2, [r6]
  4266c0:	e2833004 	add	r3, r3, #4
  4266c4:	ea000000 	b	4266cc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2ec>
  4266c8:	e3a03000 	mov	r3, #0
  4266cc:	e2412004 	sub	r2, r1, #4
  4266d0:	e1520003 	cmp	r2, r3
  4266d4:	aaffffb9 	bge	4265c0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1e0>
  4266d8:	ea00000f 	b	42671c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x33c>
  4266dc:	e7d42003 	ldrb	r2, [r4, r3]
  4266e0:	e0220298 	mla	r2, r8, r2, r0
  4266e4:	e2822901 	add	r2, r2, #16384	; 0x4000
  4266e8:	e1a027c2 	asr	r2, r2, #15
  4266ec:	e085e003 	add	lr, r5, r3
  4266f0:	e2826080 	add	r6, r2, #128	; 0x80
  4266f4:	e3d660ff 	bics	r6, r6, #255	; 0xff
  4266f8:	0a000004 	beq	426710 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x330>
  4266fc:	e3520000 	cmp	r2, #0
  426700:	c3a0207f 	movgt	r2, #127	; 0x7f
  426704:	ca000002 	bgt	426714 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x334>
  426708:	e3a02080 	mov	r2, #128	; 0x80
  42670c:	ea000000 	b	426714 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x334>
  426710:	e20220ff 	and	r2, r2, #255	; 0xff
  426714:	e5ce2000 	strb	r2, [lr]
  426718:	e2833001 	add	r3, r3, #1
  42671c:	e1530001 	cmp	r3, r1
  426720:	baffffed 	blt	4266dc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2fc>
  426724:	e0844007 	add	r4, r4, r7
  426728:	e085500c 	add	r5, r5, ip
  42672c:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  426730:	e2432001 	sub	r2, r3, #1
  426734:	e58d2164 	str	r2, [sp, #356]	; 0x164
  426738:	e3530000 	cmp	r3, #0
  42673c:	1affffe1 	bne	4266c8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x2e8>
  426740:	ea000607 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  426744:	e58d7024 	str	r7, [sp, #36]	; 0x24
  426748:	e58db01c 	str	fp, [sp, #28]
  42674c:	e1a0b009 	mov	fp, r9
  426750:	ea00008b 	b	426984 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x5a4>
  426754:	e1a08007 	mov	r8, r7
  426758:	e7d40007 	ldrb	r0, [r4, r7]
  42675c:	fa002d49 	blx	431c88 <__aeabi_i2d>
  426760:	e59d2014 	ldr	r2, [sp, #20]
  426764:	e59d3018 	ldr	r3, [sp, #24]
  426768:	fa002d79 	blx	431d54 <__aeabi_dmul>
  42676c:	e59d201c 	ldr	r2, [sp, #28]
  426770:	e1a03006 	mov	r3, r6
  426774:	fa002c9d 	blx	4319f0 <__adddf3>
  426778:	e3a02000 	mov	r2, #0
  42677c:	e59f3bfc 	ldr	r3, [pc, #3068]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426780:	fa002c9a 	blx	4319f0 <__adddf3>
  426784:	fa002c3b 	blx	431878 <floor>
  426788:	fa002ebe 	blx	432288 <__aeabi_d2iz>
  42678c:	e1a0a000 	mov	sl, r0
  426790:	e2879001 	add	r9, r7, #1
  426794:	e7d40009 	ldrb	r0, [r4, r9]
  426798:	fa002d3a 	blx	431c88 <__aeabi_i2d>
  42679c:	e59d2014 	ldr	r2, [sp, #20]
  4267a0:	e59d3018 	ldr	r3, [sp, #24]
  4267a4:	fa002d6a 	blx	431d54 <__aeabi_dmul>
  4267a8:	e59d201c 	ldr	r2, [sp, #28]
  4267ac:	e1a03006 	mov	r3, r6
  4267b0:	fa002c8e 	blx	4319f0 <__adddf3>
  4267b4:	e3a02000 	mov	r2, #0
  4267b8:	e59f3bc0 	ldr	r3, [pc, #3008]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4267bc:	fa002c8b 	blx	4319f0 <__adddf3>
  4267c0:	fa002c2c 	blx	431878 <floor>
  4267c4:	fa002eaf 	blx	432288 <__aeabi_d2iz>
  4267c8:	e0853007 	add	r3, r5, r7
  4267cc:	e28a2080 	add	r2, sl, #128	; 0x80
  4267d0:	e3d220ff 	bics	r2, r2, #255	; 0xff
  4267d4:	0a000004 	beq	4267ec <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x40c>
  4267d8:	e35a0000 	cmp	sl, #0
  4267dc:	c3a0a07f 	movgt	sl, #127	; 0x7f
  4267e0:	ca000002 	bgt	4267f0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x410>
  4267e4:	e3a0a080 	mov	sl, #128	; 0x80
  4267e8:	ea000000 	b	4267f0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x410>
  4267ec:	e20aa0ff 	and	sl, sl, #255	; 0xff
  4267f0:	e5c3a000 	strb	sl, [r3]
  4267f4:	e0859009 	add	r9, r5, r9
  4267f8:	e2803080 	add	r3, r0, #128	; 0x80
  4267fc:	e3d330ff 	bics	r3, r3, #255	; 0xff
  426800:	0a000004 	beq	426818 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x438>
  426804:	e3500000 	cmp	r0, #0
  426808:	c3a0007f 	movgt	r0, #127	; 0x7f
  42680c:	ca000002 	bgt	42681c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x43c>
  426810:	e3a00080 	mov	r0, #128	; 0x80
  426814:	ea000000 	b	42681c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x43c>
  426818:	e20000ff 	and	r0, r0, #255	; 0xff
  42681c:	e5c90000 	strb	r0, [r9]
  426820:	e2889002 	add	r9, r8, #2
  426824:	e7d40009 	ldrb	r0, [r4, r9]
  426828:	fa002d16 	blx	431c88 <__aeabi_i2d>
  42682c:	e59d2014 	ldr	r2, [sp, #20]
  426830:	e59d3018 	ldr	r3, [sp, #24]
  426834:	fa002d46 	blx	431d54 <__aeabi_dmul>
  426838:	e59d201c 	ldr	r2, [sp, #28]
  42683c:	e1a03006 	mov	r3, r6
  426840:	fa002c6a 	blx	4319f0 <__adddf3>
  426844:	e3a02000 	mov	r2, #0
  426848:	e59f3b30 	ldr	r3, [pc, #2864]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  42684c:	fa002c67 	blx	4319f0 <__adddf3>
  426850:	fa002c08 	blx	431878 <floor>
  426854:	fa002e8b 	blx	432288 <__aeabi_d2iz>
  426858:	e1a0a000 	mov	sl, r0
  42685c:	e2888003 	add	r8, r8, #3
  426860:	e7d40008 	ldrb	r0, [r4, r8]
  426864:	fa002d07 	blx	431c88 <__aeabi_i2d>
  426868:	e59d2014 	ldr	r2, [sp, #20]
  42686c:	e59d3018 	ldr	r3, [sp, #24]
  426870:	fa002d37 	blx	431d54 <__aeabi_dmul>
  426874:	e59d201c 	ldr	r2, [sp, #28]
  426878:	e1a03006 	mov	r3, r6
  42687c:	fa002c5b 	blx	4319f0 <__adddf3>
  426880:	e3a02000 	mov	r2, #0
  426884:	e59f3af4 	ldr	r3, [pc, #2804]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426888:	fa002c58 	blx	4319f0 <__adddf3>
  42688c:	fa002bf9 	blx	431878 <floor>
  426890:	fa002e7c 	blx	432288 <__aeabi_d2iz>
  426894:	e0859009 	add	r9, r5, r9
  426898:	e28a3080 	add	r3, sl, #128	; 0x80
  42689c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  4268a0:	0a000004 	beq	4268b8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x4d8>
  4268a4:	e35a0000 	cmp	sl, #0
  4268a8:	c3a0a07f 	movgt	sl, #127	; 0x7f
  4268ac:	ca000002 	bgt	4268bc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x4dc>
  4268b0:	e3a0a080 	mov	sl, #128	; 0x80
  4268b4:	ea000000 	b	4268bc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x4dc>
  4268b8:	e20aa0ff 	and	sl, sl, #255	; 0xff
  4268bc:	e5c9a000 	strb	sl, [r9]
  4268c0:	e0858008 	add	r8, r5, r8
  4268c4:	e2803080 	add	r3, r0, #128	; 0x80
  4268c8:	e3d330ff 	bics	r3, r3, #255	; 0xff
  4268cc:	0a000004 	beq	4268e4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x504>
  4268d0:	e3500000 	cmp	r0, #0
  4268d4:	c3a0007f 	movgt	r0, #127	; 0x7f
  4268d8:	ca000002 	bgt	4268e8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x508>
  4268dc:	e3a00080 	mov	r0, #128	; 0x80
  4268e0:	ea000000 	b	4268e8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x508>
  4268e4:	e20000ff 	and	r0, r0, #255	; 0xff
  4268e8:	e5c80000 	strb	r0, [r8]
  4268ec:	e2877004 	add	r7, r7, #4
  4268f0:	ea000000 	b	4268f8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x518>
  4268f4:	e3a07000 	mov	r7, #0
  4268f8:	e24b3004 	sub	r3, fp, #4
  4268fc:	e1530007 	cmp	r3, r7
  426900:	aaffff93 	bge	426754 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x374>
  426904:	ea000018 	b	42696c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x58c>
  426908:	e7d40007 	ldrb	r0, [r4, r7]
  42690c:	fa002cdd 	blx	431c88 <__aeabi_i2d>
  426910:	e59d2014 	ldr	r2, [sp, #20]
  426914:	e59d3018 	ldr	r3, [sp, #24]
  426918:	fa002d0d 	blx	431d54 <__aeabi_dmul>
  42691c:	e59d201c 	ldr	r2, [sp, #28]
  426920:	e1a03006 	mov	r3, r6
  426924:	fa002c31 	blx	4319f0 <__adddf3>
  426928:	e3a02000 	mov	r2, #0
  42692c:	e59f3a4c 	ldr	r3, [pc, #2636]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426930:	fa002c2e 	blx	4319f0 <__adddf3>
  426934:	fa002bcf 	blx	431878 <floor>
  426938:	fa002e52 	blx	432288 <__aeabi_d2iz>
  42693c:	e0853007 	add	r3, r5, r7
  426940:	e2802080 	add	r2, r0, #128	; 0x80
  426944:	e3d220ff 	bics	r2, r2, #255	; 0xff
  426948:	0a000004 	beq	426960 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x580>
  42694c:	e3500000 	cmp	r0, #0
  426950:	c3a0007f 	movgt	r0, #127	; 0x7f
  426954:	ca000002 	bgt	426964 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x584>
  426958:	e3a00080 	mov	r0, #128	; 0x80
  42695c:	ea000000 	b	426964 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x584>
  426960:	e20000ff 	and	r0, r0, #255	; 0xff
  426964:	e5c30000 	strb	r0, [r3]
  426968:	e2877001 	add	r7, r7, #1
  42696c:	e157000b 	cmp	r7, fp
  426970:	baffffe4 	blt	426908 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x528>
  426974:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  426978:	e0844003 	add	r4, r4, r3
  42697c:	e59d3020 	ldr	r3, [sp, #32]
  426980:	e0855003 	add	r5, r5, r3
  426984:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  426988:	e2432001 	sub	r2, r3, #1
  42698c:	e58d2164 	str	r2, [sp, #356]	; 0x164
  426990:	e3530000 	cmp	r3, #0
  426994:	1affffd6 	bne	4268f4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x514>
  426998:	ea000571 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  42699c:	e59d3160 	ldr	r3, [sp, #352]	; 0x160
  4269a0:	e1a02003 	mov	r2, r3
  4269a4:	e1a09003 	mov	r9, r3
  4269a8:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  4269ac:	e0020293 	mul	r2, r3, r2
  4269b0:	e35200ff 	cmp	r2, #255	; 0xff
  4269b4:	ca00001b 	bgt	426a28 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x648>
  4269b8:	ea00002e 	b	426a78 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x698>
  4269bc:	e20900ff 	and	r0, r9, #255	; 0xff
  4269c0:	fa002cb0 	blx	431c88 <__aeabi_i2d>
  4269c4:	e1a02004 	mov	r2, r4
  4269c8:	e1a0300a 	mov	r3, sl
  4269cc:	fa002ce0 	blx	431d54 <__aeabi_dmul>
  4269d0:	e1a0200b 	mov	r2, fp
  4269d4:	e1a03006 	mov	r3, r6
  4269d8:	fa002c04 	blx	4319f0 <__adddf3>
  4269dc:	e3a02000 	mov	r2, #0
  4269e0:	e59f3998 	ldr	r3, [pc, #2456]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4269e4:	fa002c01 	blx	4319f0 <__adddf3>
  4269e8:	fa002ba2 	blx	431878 <floor>
  4269ec:	fa002e25 	blx	432288 <__aeabi_d2iz>
  4269f0:	e2803080 	add	r3, r0, #128	; 0x80
  4269f4:	e3d330ff 	bics	r3, r3, #255	; 0xff
  4269f8:	0a000004 	beq	426a10 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x630>
  4269fc:	e3500000 	cmp	r0, #0
  426a00:	c3a0007f 	movgt	r0, #127	; 0x7f
  426a04:	ca000002 	bgt	426a14 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x634>
  426a08:	e3a00080 	mov	r0, #128	; 0x80
  426a0c:	ea000000 	b	426a14 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x634>
  426a10:	e20000ff 	and	r0, r0, #255	; 0xff
  426a14:	e28d3f4e 	add	r3, sp, #312	; 0x138
  426a18:	e0833009 	add	r3, r3, r9
  426a1c:	e5430100 	strb	r0, [r3, #-256]	; 0x100
  426a20:	e2899001 	add	r9, r9, #1
  426a24:	ea000003 	b	426a38 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x658>
  426a28:	e3a09000 	mov	r9, #0
  426a2c:	e58d001c 	str	r0, [sp, #28]
  426a30:	e59d4014 	ldr	r4, [sp, #20]
  426a34:	e59da018 	ldr	sl, [sp, #24]
  426a38:	e35900ff 	cmp	r9, #255	; 0xff
  426a3c:	daffffde 	ble	4269bc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x5dc>
  426a40:	e59d401c 	ldr	r4, [sp, #28]
  426a44:	e28d3f57 	add	r3, sp, #348	; 0x15c
  426a48:	e9930003 	ldmib	r3, {r0, r1}
  426a4c:	e28d3030 	add	r3, sp, #48	; 0x30
  426a50:	e8830003 	stm	r3, {r0, r1}
  426a54:	e88d0003 	stm	sp, {r0, r1}
  426a58:	e28d3038 	add	r3, sp, #56	; 0x38
  426a5c:	e58d3008 	str	r3, [sp, #8]
  426a60:	e1a00004 	mov	r0, r4
  426a64:	e1a01007 	mov	r1, r7
  426a68:	e1a02005 	mov	r2, r5
  426a6c:	e1a03008 	mov	r3, r8
  426a70:	eb00266a 	bl	430420 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_>
  426a74:	ea00053a 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  426a78:	e59d0014 	ldr	r0, [sp, #20]
  426a7c:	e59d3018 	ldr	r3, [sp, #24]
  426a80:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  426a84:	e3a02000 	mov	r2, #0
  426a88:	e59f38d8 	ldr	r3, [pc, #2264]	; 427368 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf88>
  426a8c:	fa002dee 	blx	43224c <__aeabi_dcmple>
  426a90:	e3500000 	cmp	r0, #0
  426a94:	0a00007f 	beq	426c98 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x8b8>
  426a98:	e1a0000b 	mov	r0, fp
  426a9c:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  426aa0:	e59f28cc 	ldr	r2, [pc, #2252]	; 427374 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf94>
  426aa4:	e59f38cc 	ldr	r3, [pc, #2252]	; 427378 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf98>
  426aa8:	fa002de7 	blx	43224c <__aeabi_dcmple>
  426aac:	e3500000 	cmp	r0, #0
  426ab0:	0a000078 	beq	426c98 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x8b8>
  426ab4:	e59d0014 	ldr	r0, [sp, #20]
  426ab8:	e59d1018 	ldr	r1, [sp, #24]
  426abc:	e3a02000 	mov	r2, #0
  426ac0:	e59f38b4 	ldr	r3, [pc, #2228]	; 42737c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf9c>
  426ac4:	fa002ca2 	blx	431d54 <__aeabi_dmul>
  426ac8:	e3a02000 	mov	r2, #0
  426acc:	e59f38ac 	ldr	r3, [pc, #2220]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426ad0:	fa002bc6 	blx	4319f0 <__adddf3>
  426ad4:	fa002b67 	blx	431878 <floor>
  426ad8:	fa002dea 	blx	432288 <__aeabi_d2iz>
  426adc:	e1a08000 	mov	r8, r0
  426ae0:	e1a0000b 	mov	r0, fp
  426ae4:	e1a01006 	mov	r1, r6
  426ae8:	e3a02000 	mov	r2, #0
  426aec:	e59f3888 	ldr	r3, [pc, #2184]	; 42737c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf9c>
  426af0:	fa002c97 	blx	431d54 <__aeabi_dmul>
  426af4:	e3a02000 	mov	r2, #0
  426af8:	e59f3880 	ldr	r3, [pc, #2176]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426afc:	fa002bbb 	blx	4319f0 <__adddf3>
  426b00:	fa002b5c 	blx	431878 <floor>
  426b04:	fa002ddf 	blx	432288 <__aeabi_d2iz>
  426b08:	e59dc020 	ldr	ip, [sp, #32]
  426b0c:	e1a01009 	mov	r1, r9
  426b10:	ea00005a 	b	426c80 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x8a0>
  426b14:	e1a06003 	mov	r6, r3
  426b18:	e7d4e003 	ldrb	lr, [r4, r3]
  426b1c:	e02e0e98 	mla	lr, r8, lr, r0
  426b20:	e28ee901 	add	lr, lr, #16384	; 0x4000
  426b24:	e1a0e7ce 	asr	lr, lr, #15
  426b28:	e2839001 	add	r9, r3, #1
  426b2c:	e7d42009 	ldrb	r2, [r4, r9]
  426b30:	e0220298 	mla	r2, r8, r2, r0
  426b34:	e2822901 	add	r2, r2, #16384	; 0x4000
  426b38:	e1a027c2 	asr	r2, r2, #15
  426b3c:	e085a003 	add	sl, r5, r3
  426b40:	e28eb080 	add	fp, lr, #128	; 0x80
  426b44:	e3dbb0ff 	bics	fp, fp, #255	; 0xff
  426b48:	0a000004 	beq	426b60 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x780>
  426b4c:	e35e0000 	cmp	lr, #0
  426b50:	c3a0e07f 	movgt	lr, #127	; 0x7f
  426b54:	ca000002 	bgt	426b64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x784>
  426b58:	e3a0e080 	mov	lr, #128	; 0x80
  426b5c:	ea000000 	b	426b64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x784>
  426b60:	e20ee0ff 	and	lr, lr, #255	; 0xff
  426b64:	e5cae000 	strb	lr, [sl]
  426b68:	e0859009 	add	r9, r5, r9
  426b6c:	e282e080 	add	lr, r2, #128	; 0x80
  426b70:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  426b74:	0a000004 	beq	426b8c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x7ac>
  426b78:	e3520000 	cmp	r2, #0
  426b7c:	c3a0207f 	movgt	r2, #127	; 0x7f
  426b80:	ca000002 	bgt	426b90 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x7b0>
  426b84:	e3a02080 	mov	r2, #128	; 0x80
  426b88:	ea000000 	b	426b90 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x7b0>
  426b8c:	e20220ff 	and	r2, r2, #255	; 0xff
  426b90:	e5c92000 	strb	r2, [r9]
  426b94:	e2869002 	add	r9, r6, #2
  426b98:	e7d4e009 	ldrb	lr, [r4, r9]
  426b9c:	e02e0e98 	mla	lr, r8, lr, r0
  426ba0:	e28ee901 	add	lr, lr, #16384	; 0x4000
  426ba4:	e1a0e7ce 	asr	lr, lr, #15
  426ba8:	e2866003 	add	r6, r6, #3
  426bac:	e7d42006 	ldrb	r2, [r4, r6]
  426bb0:	e0220298 	mla	r2, r8, r2, r0
  426bb4:	e2822901 	add	r2, r2, #16384	; 0x4000
  426bb8:	e1a027c2 	asr	r2, r2, #15
  426bbc:	e0859009 	add	r9, r5, r9
  426bc0:	e28ea080 	add	sl, lr, #128	; 0x80
  426bc4:	e3daa0ff 	bics	sl, sl, #255	; 0xff
  426bc8:	0a000004 	beq	426be0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x800>
  426bcc:	e35e0000 	cmp	lr, #0
  426bd0:	c3a0e07f 	movgt	lr, #127	; 0x7f
  426bd4:	ca000002 	bgt	426be4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x804>
  426bd8:	e3a0e080 	mov	lr, #128	; 0x80
  426bdc:	ea000000 	b	426be4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x804>
  426be0:	e20ee0ff 	and	lr, lr, #255	; 0xff
  426be4:	e5c9e000 	strb	lr, [r9]
  426be8:	e0856006 	add	r6, r5, r6
  426bec:	e282e080 	add	lr, r2, #128	; 0x80
  426bf0:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  426bf4:	0a000004 	beq	426c0c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x82c>
  426bf8:	e3520000 	cmp	r2, #0
  426bfc:	c3a0207f 	movgt	r2, #127	; 0x7f
  426c00:	ca000002 	bgt	426c10 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x830>
  426c04:	e3a02080 	mov	r2, #128	; 0x80
  426c08:	ea000000 	b	426c10 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x830>
  426c0c:	e20220ff 	and	r2, r2, #255	; 0xff
  426c10:	e5c62000 	strb	r2, [r6]
  426c14:	e2833004 	add	r3, r3, #4
  426c18:	ea000000 	b	426c20 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x840>
  426c1c:	e3a03000 	mov	r3, #0
  426c20:	e2412004 	sub	r2, r1, #4
  426c24:	e1520003 	cmp	r2, r3
  426c28:	aaffffb9 	bge	426b14 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x734>
  426c2c:	ea00000f 	b	426c70 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x890>
  426c30:	e7d42003 	ldrb	r2, [r4, r3]
  426c34:	e0220298 	mla	r2, r8, r2, r0
  426c38:	e2822901 	add	r2, r2, #16384	; 0x4000
  426c3c:	e1a027c2 	asr	r2, r2, #15
  426c40:	e085e003 	add	lr, r5, r3
  426c44:	e2826080 	add	r6, r2, #128	; 0x80
  426c48:	e3d660ff 	bics	r6, r6, #255	; 0xff
  426c4c:	0a000004 	beq	426c64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x884>
  426c50:	e3520000 	cmp	r2, #0
  426c54:	c3a0207f 	movgt	r2, #127	; 0x7f
  426c58:	ca000002 	bgt	426c68 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x888>
  426c5c:	e3a02080 	mov	r2, #128	; 0x80
  426c60:	ea000000 	b	426c68 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x888>
  426c64:	e20220ff 	and	r2, r2, #255	; 0xff
  426c68:	e5ce2000 	strb	r2, [lr]
  426c6c:	e2833001 	add	r3, r3, #1
  426c70:	e1530001 	cmp	r3, r1
  426c74:	baffffed 	blt	426c30 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x850>
  426c78:	e0844007 	add	r4, r4, r7
  426c7c:	e085500c 	add	r5, r5, ip
  426c80:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  426c84:	e2432001 	sub	r2, r3, #1
  426c88:	e58d2164 	str	r2, [sp, #356]	; 0x164
  426c8c:	e3530000 	cmp	r3, #0
  426c90:	1affffe1 	bne	426c1c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x83c>
  426c94:	ea0004b2 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  426c98:	e58d7024 	str	r7, [sp, #36]	; 0x24
  426c9c:	e58db01c 	str	fp, [sp, #28]
  426ca0:	e1a0b009 	mov	fp, r9
  426ca4:	ea00008b 	b	426ed8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xaf8>
  426ca8:	e1a08007 	mov	r8, r7
  426cac:	e7d40007 	ldrb	r0, [r4, r7]
  426cb0:	fa002bf4 	blx	431c88 <__aeabi_i2d>
  426cb4:	e59d2014 	ldr	r2, [sp, #20]
  426cb8:	e59d3018 	ldr	r3, [sp, #24]
  426cbc:	fa002c24 	blx	431d54 <__aeabi_dmul>
  426cc0:	e59d201c 	ldr	r2, [sp, #28]
  426cc4:	e1a03006 	mov	r3, r6
  426cc8:	fa002b48 	blx	4319f0 <__adddf3>
  426ccc:	e3a02000 	mov	r2, #0
  426cd0:	e59f36a8 	ldr	r3, [pc, #1704]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426cd4:	fa002b45 	blx	4319f0 <__adddf3>
  426cd8:	fa002ae6 	blx	431878 <floor>
  426cdc:	fa002d69 	blx	432288 <__aeabi_d2iz>
  426ce0:	e1a0a000 	mov	sl, r0
  426ce4:	e2879001 	add	r9, r7, #1
  426ce8:	e7d40009 	ldrb	r0, [r4, r9]
  426cec:	fa002be5 	blx	431c88 <__aeabi_i2d>
  426cf0:	e59d2014 	ldr	r2, [sp, #20]
  426cf4:	e59d3018 	ldr	r3, [sp, #24]
  426cf8:	fa002c15 	blx	431d54 <__aeabi_dmul>
  426cfc:	e59d201c 	ldr	r2, [sp, #28]
  426d00:	e1a03006 	mov	r3, r6
  426d04:	fa002b39 	blx	4319f0 <__adddf3>
  426d08:	e3a02000 	mov	r2, #0
  426d0c:	e59f366c 	ldr	r3, [pc, #1644]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426d10:	fa002b36 	blx	4319f0 <__adddf3>
  426d14:	fa002ad7 	blx	431878 <floor>
  426d18:	fa002d5a 	blx	432288 <__aeabi_d2iz>
  426d1c:	e0853007 	add	r3, r5, r7
  426d20:	e28a2080 	add	r2, sl, #128	; 0x80
  426d24:	e3d220ff 	bics	r2, r2, #255	; 0xff
  426d28:	0a000004 	beq	426d40 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x960>
  426d2c:	e35a0000 	cmp	sl, #0
  426d30:	c3a0a07f 	movgt	sl, #127	; 0x7f
  426d34:	ca000002 	bgt	426d44 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x964>
  426d38:	e3a0a080 	mov	sl, #128	; 0x80
  426d3c:	ea000000 	b	426d44 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x964>
  426d40:	e20aa0ff 	and	sl, sl, #255	; 0xff
  426d44:	e5c3a000 	strb	sl, [r3]
  426d48:	e0859009 	add	r9, r5, r9
  426d4c:	e2803080 	add	r3, r0, #128	; 0x80
  426d50:	e3d330ff 	bics	r3, r3, #255	; 0xff
  426d54:	0a000004 	beq	426d6c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x98c>
  426d58:	e3500000 	cmp	r0, #0
  426d5c:	c3a0007f 	movgt	r0, #127	; 0x7f
  426d60:	ca000002 	bgt	426d70 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x990>
  426d64:	e3a00080 	mov	r0, #128	; 0x80
  426d68:	ea000000 	b	426d70 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x990>
  426d6c:	e20000ff 	and	r0, r0, #255	; 0xff
  426d70:	e5c90000 	strb	r0, [r9]
  426d74:	e2889002 	add	r9, r8, #2
  426d78:	e7d40009 	ldrb	r0, [r4, r9]
  426d7c:	fa002bc1 	blx	431c88 <__aeabi_i2d>
  426d80:	e59d2014 	ldr	r2, [sp, #20]
  426d84:	e59d3018 	ldr	r3, [sp, #24]
  426d88:	fa002bf1 	blx	431d54 <__aeabi_dmul>
  426d8c:	e59d201c 	ldr	r2, [sp, #28]
  426d90:	e1a03006 	mov	r3, r6
  426d94:	fa002b15 	blx	4319f0 <__adddf3>
  426d98:	e3a02000 	mov	r2, #0
  426d9c:	e59f35dc 	ldr	r3, [pc, #1500]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426da0:	fa002b12 	blx	4319f0 <__adddf3>
  426da4:	fa002ab3 	blx	431878 <floor>
  426da8:	fa002d36 	blx	432288 <__aeabi_d2iz>
  426dac:	e1a0a000 	mov	sl, r0
  426db0:	e2888003 	add	r8, r8, #3
  426db4:	e7d40008 	ldrb	r0, [r4, r8]
  426db8:	fa002bb2 	blx	431c88 <__aeabi_i2d>
  426dbc:	e59d2014 	ldr	r2, [sp, #20]
  426dc0:	e59d3018 	ldr	r3, [sp, #24]
  426dc4:	fa002be2 	blx	431d54 <__aeabi_dmul>
  426dc8:	e59d201c 	ldr	r2, [sp, #28]
  426dcc:	e1a03006 	mov	r3, r6
  426dd0:	fa002b06 	blx	4319f0 <__adddf3>
  426dd4:	e3a02000 	mov	r2, #0
  426dd8:	e59f35a0 	ldr	r3, [pc, #1440]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426ddc:	fa002b03 	blx	4319f0 <__adddf3>
  426de0:	fa002aa4 	blx	431878 <floor>
  426de4:	fa002d27 	blx	432288 <__aeabi_d2iz>
  426de8:	e0859009 	add	r9, r5, r9
  426dec:	e28a3080 	add	r3, sl, #128	; 0x80
  426df0:	e3d330ff 	bics	r3, r3, #255	; 0xff
  426df4:	0a000004 	beq	426e0c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa2c>
  426df8:	e35a0000 	cmp	sl, #0
  426dfc:	c3a0a07f 	movgt	sl, #127	; 0x7f
  426e00:	ca000002 	bgt	426e10 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa30>
  426e04:	e3a0a080 	mov	sl, #128	; 0x80
  426e08:	ea000000 	b	426e10 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa30>
  426e0c:	e20aa0ff 	and	sl, sl, #255	; 0xff
  426e10:	e5c9a000 	strb	sl, [r9]
  426e14:	e0858008 	add	r8, r5, r8
  426e18:	e2803080 	add	r3, r0, #128	; 0x80
  426e1c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  426e20:	0a000004 	beq	426e38 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa58>
  426e24:	e3500000 	cmp	r0, #0
  426e28:	c3a0007f 	movgt	r0, #127	; 0x7f
  426e2c:	ca000002 	bgt	426e3c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa5c>
  426e30:	e3a00080 	mov	r0, #128	; 0x80
  426e34:	ea000000 	b	426e3c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa5c>
  426e38:	e20000ff 	and	r0, r0, #255	; 0xff
  426e3c:	e5c80000 	strb	r0, [r8]
  426e40:	e2877004 	add	r7, r7, #4
  426e44:	ea000000 	b	426e4c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa6c>
  426e48:	e3a07000 	mov	r7, #0
  426e4c:	e24b3004 	sub	r3, fp, #4
  426e50:	e1530007 	cmp	r3, r7
  426e54:	aaffff93 	bge	426ca8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x8c8>
  426e58:	ea000018 	b	426ec0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xae0>
  426e5c:	e7d40007 	ldrb	r0, [r4, r7]
  426e60:	fa002b88 	blx	431c88 <__aeabi_i2d>
  426e64:	e59d2014 	ldr	r2, [sp, #20]
  426e68:	e59d3018 	ldr	r3, [sp, #24]
  426e6c:	fa002bb8 	blx	431d54 <__aeabi_dmul>
  426e70:	e59d201c 	ldr	r2, [sp, #28]
  426e74:	e1a03006 	mov	r3, r6
  426e78:	fa002adc 	blx	4319f0 <__adddf3>
  426e7c:	e3a02000 	mov	r2, #0
  426e80:	e59f34f8 	ldr	r3, [pc, #1272]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426e84:	fa002ad9 	blx	4319f0 <__adddf3>
  426e88:	fa002a7a 	blx	431878 <floor>
  426e8c:	fa002cfd 	blx	432288 <__aeabi_d2iz>
  426e90:	e0853007 	add	r3, r5, r7
  426e94:	e2802080 	add	r2, r0, #128	; 0x80
  426e98:	e3d220ff 	bics	r2, r2, #255	; 0xff
  426e9c:	0a000004 	beq	426eb4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xad4>
  426ea0:	e3500000 	cmp	r0, #0
  426ea4:	c3a0007f 	movgt	r0, #127	; 0x7f
  426ea8:	ca000002 	bgt	426eb8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xad8>
  426eac:	e3a00080 	mov	r0, #128	; 0x80
  426eb0:	ea000000 	b	426eb8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xad8>
  426eb4:	e20000ff 	and	r0, r0, #255	; 0xff
  426eb8:	e5c30000 	strb	r0, [r3]
  426ebc:	e2877001 	add	r7, r7, #1
  426ec0:	e157000b 	cmp	r7, fp
  426ec4:	baffffe4 	blt	426e5c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa7c>
  426ec8:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  426ecc:	e0844003 	add	r4, r4, r3
  426ed0:	e59d3020 	ldr	r3, [sp, #32]
  426ed4:	e0855003 	add	r5, r5, r3
  426ed8:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  426edc:	e2432001 	sub	r2, r3, #1
  426ee0:	e58d2164 	str	r2, [sp, #356]	; 0x164
  426ee4:	e3530000 	cmp	r3, #0
  426ee8:	1affffd6 	bne	426e48 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xa68>
  426eec:	ea00041c 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  426ef0:	e59d0014 	ldr	r0, [sp, #20]
  426ef4:	e59d3018 	ldr	r3, [sp, #24]
  426ef8:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  426efc:	e3a02000 	mov	r2, #0
  426f00:	e59f3468 	ldr	r3, [pc, #1128]	; 427370 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf90>
  426f04:	fa002cd0 	blx	43224c <__aeabi_dcmple>
  426f08:	e3500000 	cmp	r0, #0
  426f0c:	0a00007a 	beq	4270fc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xd1c>
  426f10:	e1a0000b 	mov	r0, fp
  426f14:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  426f18:	e3a02000 	mov	r2, #0
  426f1c:	e59f3448 	ldr	r3, [pc, #1096]	; 42736c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf8c>
  426f20:	fa002cc4 	blx	432238 <__aeabi_dcmplt>
  426f24:	e3500000 	cmp	r0, #0
  426f28:	0a000073 	beq	4270fc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xd1c>
  426f2c:	e59d0014 	ldr	r0, [sp, #20]
  426f30:	e59d1018 	ldr	r1, [sp, #24]
  426f34:	e3a02000 	mov	r2, #0
  426f38:	e59f343c 	ldr	r3, [pc, #1084]	; 42737c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf9c>
  426f3c:	fa002b84 	blx	431d54 <__aeabi_dmul>
  426f40:	e3a02000 	mov	r2, #0
  426f44:	e59f3434 	ldr	r3, [pc, #1076]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  426f48:	fa002aa8 	blx	4319f0 <__adddf3>
  426f4c:	fa002a49 	blx	431878 <floor>
  426f50:	fa002ccc 	blx	432288 <__aeabi_d2iz>
  426f54:	e1a070a7 	lsr	r7, r7, #1
  426f58:	e59d1020 	ldr	r1, [sp, #32]
  426f5c:	ea000060 	b	4270e4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xd04>
  426f60:	e1a0e003 	mov	lr, r3
  426f64:	e1a02083 	lsl	r2, r3, #1
  426f68:	e19420b2 	ldrh	r2, [r4, r2]
  426f6c:	e0020290 	mul	r2, r0, r2
  426f70:	e2822901 	add	r2, r2, #16384	; 0x4000
  426f74:	e1a067c2 	asr	r6, r2, #15
  426f78:	e283c001 	add	ip, r3, #1
  426f7c:	e1a0208c 	lsl	r2, ip, #1
  426f80:	e19420b2 	ldrh	r2, [r4, r2]
  426f84:	e0020290 	mul	r2, r0, r2
  426f88:	e2822901 	add	r2, r2, #16384	; 0x4000
  426f8c:	e1a027c2 	asr	r2, r2, #15
  426f90:	e0858003 	add	r8, r5, r3
  426f94:	e2869080 	add	r9, r6, #128	; 0x80
  426f98:	e3d990ff 	bics	r9, r9, #255	; 0xff
  426f9c:	0a000004 	beq	426fb4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xbd4>
  426fa0:	e3560000 	cmp	r6, #0
  426fa4:	c3a0607f 	movgt	r6, #127	; 0x7f
  426fa8:	ca000002 	bgt	426fb8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xbd8>
  426fac:	e3a06080 	mov	r6, #128	; 0x80
  426fb0:	ea000000 	b	426fb8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xbd8>
  426fb4:	e20660ff 	and	r6, r6, #255	; 0xff
  426fb8:	e5c86000 	strb	r6, [r8]
  426fbc:	e085c00c 	add	ip, r5, ip
  426fc0:	e2826080 	add	r6, r2, #128	; 0x80
  426fc4:	e3d660ff 	bics	r6, r6, #255	; 0xff
  426fc8:	0a000004 	beq	426fe0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc00>
  426fcc:	e3520000 	cmp	r2, #0
  426fd0:	c3a0207f 	movgt	r2, #127	; 0x7f
  426fd4:	ca000002 	bgt	426fe4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc04>
  426fd8:	e3a02080 	mov	r2, #128	; 0x80
  426fdc:	ea000000 	b	426fe4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc04>
  426fe0:	e20220ff 	and	r2, r2, #255	; 0xff
  426fe4:	e5cc2000 	strb	r2, [ip]
  426fe8:	e28ec002 	add	ip, lr, #2
  426fec:	e1a0208c 	lsl	r2, ip, #1
  426ff0:	e19420b2 	ldrh	r2, [r4, r2]
  426ff4:	e0020290 	mul	r2, r0, r2
  426ff8:	e2822901 	add	r2, r2, #16384	; 0x4000
  426ffc:	e1a067c2 	asr	r6, r2, #15
  427000:	e28ee003 	add	lr, lr, #3
  427004:	e1a0208e 	lsl	r2, lr, #1
  427008:	e19420b2 	ldrh	r2, [r4, r2]
  42700c:	e0020290 	mul	r2, r0, r2
  427010:	e2822901 	add	r2, r2, #16384	; 0x4000
  427014:	e1a027c2 	asr	r2, r2, #15
  427018:	e085c00c 	add	ip, r5, ip
  42701c:	e2868080 	add	r8, r6, #128	; 0x80
  427020:	e3d880ff 	bics	r8, r8, #255	; 0xff
  427024:	0a000004 	beq	42703c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc5c>
  427028:	e3560000 	cmp	r6, #0
  42702c:	c3a0607f 	movgt	r6, #127	; 0x7f
  427030:	ca000002 	bgt	427040 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc60>
  427034:	e3a06080 	mov	r6, #128	; 0x80
  427038:	ea000000 	b	427040 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc60>
  42703c:	e20660ff 	and	r6, r6, #255	; 0xff
  427040:	e5cc6000 	strb	r6, [ip]
  427044:	e085e00e 	add	lr, r5, lr
  427048:	e282c080 	add	ip, r2, #128	; 0x80
  42704c:	e3dcc0ff 	bics	ip, ip, #255	; 0xff
  427050:	0a000004 	beq	427068 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc88>
  427054:	e3520000 	cmp	r2, #0
  427058:	c3a0207f 	movgt	r2, #127	; 0x7f
  42705c:	ca000002 	bgt	42706c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc8c>
  427060:	e3a02080 	mov	r2, #128	; 0x80
  427064:	ea000000 	b	42706c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc8c>
  427068:	e20220ff 	and	r2, r2, #255	; 0xff
  42706c:	e5ce2000 	strb	r2, [lr]
  427070:	e2833004 	add	r3, r3, #4
  427074:	ea000000 	b	42707c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc9c>
  427078:	e3a03000 	mov	r3, #0
  42707c:	e59dc160 	ldr	ip, [sp, #352]	; 0x160
  427080:	e24c2004 	sub	r2, ip, #4
  427084:	e1520003 	cmp	r2, r3
  427088:	aaffffb4 	bge	426f60 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xb80>
  42708c:	ea000010 	b	4270d4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xcf4>
  427090:	e1a02083 	lsl	r2, r3, #1
  427094:	e19420b2 	ldrh	r2, [r4, r2]
  427098:	e0020290 	mul	r2, r0, r2
  42709c:	e2822901 	add	r2, r2, #16384	; 0x4000
  4270a0:	e1a027c2 	asr	r2, r2, #15
  4270a4:	e085e003 	add	lr, r5, r3
  4270a8:	e2826080 	add	r6, r2, #128	; 0x80
  4270ac:	e3d660ff 	bics	r6, r6, #255	; 0xff
  4270b0:	0a000004 	beq	4270c8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xce8>
  4270b4:	e3520000 	cmp	r2, #0
  4270b8:	c3a0207f 	movgt	r2, #127	; 0x7f
  4270bc:	ca000002 	bgt	4270cc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xcec>
  4270c0:	e3a02080 	mov	r2, #128	; 0x80
  4270c4:	ea000000 	b	4270cc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xcec>
  4270c8:	e20220ff 	and	r2, r2, #255	; 0xff
  4270cc:	e5ce2000 	strb	r2, [lr]
  4270d0:	e2833001 	add	r3, r3, #1
  4270d4:	e153000c 	cmp	r3, ip
  4270d8:	baffffec 	blt	427090 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xcb0>
  4270dc:	e0844087 	add	r4, r4, r7, lsl #1
  4270e0:	e0855001 	add	r5, r5, r1
  4270e4:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  4270e8:	e2432001 	sub	r2, r3, #1
  4270ec:	e58d2164 	str	r2, [sp, #356]	; 0x164
  4270f0:	e3530000 	cmp	r3, #0
  4270f4:	1affffdf 	bne	427078 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xc98>
  4270f8:	ea000399 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  4270fc:	e1a030a7 	lsr	r3, r7, #1
  427100:	e58d301c 	str	r3, [sp, #28]
  427104:	ea000091 	b	427350 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf70>
  427108:	e1a08007 	mov	r8, r7
  42710c:	e1a03087 	lsl	r3, r7, #1
  427110:	e19400b3 	ldrh	r0, [r4, r3]
  427114:	fa002adb 	blx	431c88 <__aeabi_i2d>
  427118:	e59d2014 	ldr	r2, [sp, #20]
  42711c:	e59d3018 	ldr	r3, [sp, #24]
  427120:	fa002b0b 	blx	431d54 <__aeabi_dmul>
  427124:	e1a0200b 	mov	r2, fp
  427128:	e1a03006 	mov	r3, r6
  42712c:	fa002a2f 	blx	4319f0 <__adddf3>
  427130:	e3a02000 	mov	r2, #0
  427134:	e59f3244 	ldr	r3, [pc, #580]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427138:	fa002a2c 	blx	4319f0 <__adddf3>
  42713c:	fa0029cd 	blx	431878 <floor>
  427140:	fa002c50 	blx	432288 <__aeabi_d2iz>
  427144:	e1a0a000 	mov	sl, r0
  427148:	e2879001 	add	r9, r7, #1
  42714c:	e1a03089 	lsl	r3, r9, #1
  427150:	e19400b3 	ldrh	r0, [r4, r3]
  427154:	fa002acb 	blx	431c88 <__aeabi_i2d>
  427158:	e59d2014 	ldr	r2, [sp, #20]
  42715c:	e59d3018 	ldr	r3, [sp, #24]
  427160:	fa002afb 	blx	431d54 <__aeabi_dmul>
  427164:	e1a0200b 	mov	r2, fp
  427168:	e1a03006 	mov	r3, r6
  42716c:	fa002a1f 	blx	4319f0 <__adddf3>
  427170:	e3a02000 	mov	r2, #0
  427174:	e59f3204 	ldr	r3, [pc, #516]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427178:	fa002a1c 	blx	4319f0 <__adddf3>
  42717c:	fa0029bd 	blx	431878 <floor>
  427180:	fa002c40 	blx	432288 <__aeabi_d2iz>
  427184:	e0853007 	add	r3, r5, r7
  427188:	e28a2080 	add	r2, sl, #128	; 0x80
  42718c:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427190:	0a000004 	beq	4271a8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xdc8>
  427194:	e35a0000 	cmp	sl, #0
  427198:	c3a0a07f 	movgt	sl, #127	; 0x7f
  42719c:	ca000002 	bgt	4271ac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xdcc>
  4271a0:	e3a0a080 	mov	sl, #128	; 0x80
  4271a4:	ea000000 	b	4271ac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xdcc>
  4271a8:	e20aa0ff 	and	sl, sl, #255	; 0xff
  4271ac:	e5c3a000 	strb	sl, [r3]
  4271b0:	e0859009 	add	r9, r5, r9
  4271b4:	e2803080 	add	r3, r0, #128	; 0x80
  4271b8:	e3d330ff 	bics	r3, r3, #255	; 0xff
  4271bc:	0a000004 	beq	4271d4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xdf4>
  4271c0:	e3500000 	cmp	r0, #0
  4271c4:	c3a0007f 	movgt	r0, #127	; 0x7f
  4271c8:	ca000002 	bgt	4271d8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xdf8>
  4271cc:	e3a00080 	mov	r0, #128	; 0x80
  4271d0:	ea000000 	b	4271d8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xdf8>
  4271d4:	e20000ff 	and	r0, r0, #255	; 0xff
  4271d8:	e5c90000 	strb	r0, [r9]
  4271dc:	e2889002 	add	r9, r8, #2
  4271e0:	e1a03089 	lsl	r3, r9, #1
  4271e4:	e19400b3 	ldrh	r0, [r4, r3]
  4271e8:	fa002aa6 	blx	431c88 <__aeabi_i2d>
  4271ec:	e59d2014 	ldr	r2, [sp, #20]
  4271f0:	e59d3018 	ldr	r3, [sp, #24]
  4271f4:	fa002ad6 	blx	431d54 <__aeabi_dmul>
  4271f8:	e1a0200b 	mov	r2, fp
  4271fc:	e1a03006 	mov	r3, r6
  427200:	fa0029fa 	blx	4319f0 <__adddf3>
  427204:	e3a02000 	mov	r2, #0
  427208:	e59f3170 	ldr	r3, [pc, #368]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  42720c:	fa0029f7 	blx	4319f0 <__adddf3>
  427210:	fa002998 	blx	431878 <floor>
  427214:	fa002c1b 	blx	432288 <__aeabi_d2iz>
  427218:	e1a0a000 	mov	sl, r0
  42721c:	e2888003 	add	r8, r8, #3
  427220:	e1a03088 	lsl	r3, r8, #1
  427224:	e19400b3 	ldrh	r0, [r4, r3]
  427228:	fa002a96 	blx	431c88 <__aeabi_i2d>
  42722c:	e59d2014 	ldr	r2, [sp, #20]
  427230:	e59d3018 	ldr	r3, [sp, #24]
  427234:	fa002ac6 	blx	431d54 <__aeabi_dmul>
  427238:	e1a0200b 	mov	r2, fp
  42723c:	e1a03006 	mov	r3, r6
  427240:	fa0029ea 	blx	4319f0 <__adddf3>
  427244:	e3a02000 	mov	r2, #0
  427248:	e59f3130 	ldr	r3, [pc, #304]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  42724c:	fa0029e7 	blx	4319f0 <__adddf3>
  427250:	fa002988 	blx	431878 <floor>
  427254:	fa002c0b 	blx	432288 <__aeabi_d2iz>
  427258:	e0859009 	add	r9, r5, r9
  42725c:	e28a3080 	add	r3, sl, #128	; 0x80
  427260:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427264:	0a000004 	beq	42727c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xe9c>
  427268:	e35a0000 	cmp	sl, #0
  42726c:	c3a0a07f 	movgt	sl, #127	; 0x7f
  427270:	ca000002 	bgt	427280 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xea0>
  427274:	e3a0a080 	mov	sl, #128	; 0x80
  427278:	ea000000 	b	427280 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xea0>
  42727c:	e20aa0ff 	and	sl, sl, #255	; 0xff
  427280:	e5c9a000 	strb	sl, [r9]
  427284:	e0858008 	add	r8, r5, r8
  427288:	e2803080 	add	r3, r0, #128	; 0x80
  42728c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427290:	0a000004 	beq	4272a8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xec8>
  427294:	e3500000 	cmp	r0, #0
  427298:	c3a0007f 	movgt	r0, #127	; 0x7f
  42729c:	ca000002 	bgt	4272ac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xecc>
  4272a0:	e3a00080 	mov	r0, #128	; 0x80
  4272a4:	ea000000 	b	4272ac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xecc>
  4272a8:	e20000ff 	and	r0, r0, #255	; 0xff
  4272ac:	e5c80000 	strb	r0, [r8]
  4272b0:	e2877004 	add	r7, r7, #4
  4272b4:	ea000000 	b	4272bc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xedc>
  4272b8:	e3a07000 	mov	r7, #0
  4272bc:	e59d8160 	ldr	r8, [sp, #352]	; 0x160
  4272c0:	e2483004 	sub	r3, r8, #4
  4272c4:	e1530007 	cmp	r3, r7
  4272c8:	aaffff8e 	bge	427108 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xd28>
  4272cc:	ea000019 	b	427338 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf58>
  4272d0:	e1a03087 	lsl	r3, r7, #1
  4272d4:	e19400b3 	ldrh	r0, [r4, r3]
  4272d8:	fa002a6a 	blx	431c88 <__aeabi_i2d>
  4272dc:	e59d2014 	ldr	r2, [sp, #20]
  4272e0:	e59d3018 	ldr	r3, [sp, #24]
  4272e4:	fa002a9a 	blx	431d54 <__aeabi_dmul>
  4272e8:	e1a0200b 	mov	r2, fp
  4272ec:	e1a03006 	mov	r3, r6
  4272f0:	fa0029be 	blx	4319f0 <__adddf3>
  4272f4:	e3a02000 	mov	r2, #0
  4272f8:	e59f3080 	ldr	r3, [pc, #128]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4272fc:	fa0029bb 	blx	4319f0 <__adddf3>
  427300:	fa00295c 	blx	431878 <floor>
  427304:	fa002bdf 	blx	432288 <__aeabi_d2iz>
  427308:	e0853007 	add	r3, r5, r7
  42730c:	e2802080 	add	r2, r0, #128	; 0x80
  427310:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427314:	0a000004 	beq	42732c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf4c>
  427318:	e3500000 	cmp	r0, #0
  42731c:	c3a0007f 	movgt	r0, #127	; 0x7f
  427320:	ca000002 	bgt	427330 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf50>
  427324:	e3a00080 	mov	r0, #128	; 0x80
  427328:	ea000000 	b	427330 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf50>
  42732c:	e20000ff 	and	r0, r0, #255	; 0xff
  427330:	e5c30000 	strb	r0, [r3]
  427334:	e2877001 	add	r7, r7, #1
  427338:	e1570008 	cmp	r7, r8
  42733c:	baffffe3 	blt	4272d0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xef0>
  427340:	e59d301c 	ldr	r3, [sp, #28]
  427344:	e0844083 	add	r4, r4, r3, lsl #1
  427348:	e59d3020 	ldr	r3, [sp, #32]
  42734c:	e0855003 	add	r5, r5, r3
  427350:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  427354:	e2432001 	sub	r2, r3, #1
  427358:	e58d2164 	str	r2, [sp, #356]	; 0x164
  42735c:	e3530000 	cmp	r3, #0
  427360:	1affffd4 	bne	4272b8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xed8>
  427364:	ea0002fe 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  427368:	40600000 	.word	0x40600000
  42736c:	3cb00000 	.word	0x3cb00000
  427370:	3ff00000 	.word	0x3ff00000
  427374:	ffc00000 	.word	0xffc00000
  427378:	40dfffff 	.word	0x40dfffff
  42737c:	40e00000 	.word	0x40e00000
  427380:	3fe00000 	.word	0x3fe00000
  427384:	00018178 	.word	0x00018178
  427388:	00000532 	.word	0x00000532
  42738c:	00017e24 	.word	0x00017e24
  427390:	00017b40 	.word	0x00017b40
  427394:	e59d0014 	ldr	r0, [sp, #20]
  427398:	e59d3018 	ldr	r3, [sp, #24]
  42739c:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  4273a0:	e3a02000 	mov	r2, #0
  4273a4:	e51f303c 	ldr	r3, [pc, #-60]	; 427370 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf90>
  4273a8:	fa002ba7 	blx	43224c <__aeabi_dcmple>
  4273ac:	e3500000 	cmp	r0, #0
  4273b0:	0a000085 	beq	4275cc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11ec>
  4273b4:	e1a0000b 	mov	r0, fp
  4273b8:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  4273bc:	e51f2050 	ldr	r2, [pc, #-80]	; 427374 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf94>
  4273c0:	e51f3050 	ldr	r3, [pc, #-80]	; 427378 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf98>
  4273c4:	fa002ba0 	blx	43224c <__aeabi_dcmple>
  4273c8:	e3500000 	cmp	r0, #0
  4273cc:	0a00007e 	beq	4275cc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11ec>
  4273d0:	e59d0014 	ldr	r0, [sp, #20]
  4273d4:	e59d1018 	ldr	r1, [sp, #24]
  4273d8:	e3a02000 	mov	r2, #0
  4273dc:	e51f3068 	ldr	r3, [pc, #-104]	; 42737c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf9c>
  4273e0:	fa002a5b 	blx	431d54 <__aeabi_dmul>
  4273e4:	e3a02000 	mov	r2, #0
  4273e8:	e51f3070 	ldr	r3, [pc, #-112]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4273ec:	fa00297f 	blx	4319f0 <__adddf3>
  4273f0:	fa002920 	blx	431878 <floor>
  4273f4:	fa002ba3 	blx	432288 <__aeabi_d2iz>
  4273f8:	e1a08000 	mov	r8, r0
  4273fc:	e1a0000b 	mov	r0, fp
  427400:	e1a01006 	mov	r1, r6
  427404:	e3a02000 	mov	r2, #0
  427408:	e51f3094 	ldr	r3, [pc, #-148]	; 42737c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xf9c>
  42740c:	fa002a50 	blx	431d54 <__aeabi_dmul>
  427410:	e3a02000 	mov	r2, #0
  427414:	e51f309c 	ldr	r3, [pc, #-156]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427418:	fa002974 	blx	4319f0 <__adddf3>
  42741c:	fa002915 	blx	431878 <floor>
  427420:	fa002b98 	blx	432288 <__aeabi_d2iz>
  427424:	e1a070a7 	lsr	r7, r7, #1
  427428:	e59d1020 	ldr	r1, [sp, #32]
  42742c:	ea000060 	b	4275b4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11d4>
  427430:	e1a06003 	mov	r6, r3
  427434:	e1a02083 	lsl	r2, r3, #1
  427438:	e19420f2 	ldrsh	r2, [r4, r2]
  42743c:	e0220298 	mla	r2, r8, r2, r0
  427440:	e2822901 	add	r2, r2, #16384	; 0x4000
  427444:	e1a0e7c2 	asr	lr, r2, #15
  427448:	e283c001 	add	ip, r3, #1
  42744c:	e1a0208c 	lsl	r2, ip, #1
  427450:	e19420f2 	ldrsh	r2, [r4, r2]
  427454:	e0220298 	mla	r2, r8, r2, r0
  427458:	e2822901 	add	r2, r2, #16384	; 0x4000
  42745c:	e1a027c2 	asr	r2, r2, #15
  427460:	e0859003 	add	r9, r5, r3
  427464:	e28ea080 	add	sl, lr, #128	; 0x80
  427468:	e3daa0ff 	bics	sl, sl, #255	; 0xff
  42746c:	0a000004 	beq	427484 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x10a4>
  427470:	e35e0000 	cmp	lr, #0
  427474:	c3a0e07f 	movgt	lr, #127	; 0x7f
  427478:	ca000002 	bgt	427488 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x10a8>
  42747c:	e3a0e080 	mov	lr, #128	; 0x80
  427480:	ea000000 	b	427488 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x10a8>
  427484:	e20ee0ff 	and	lr, lr, #255	; 0xff
  427488:	e5c9e000 	strb	lr, [r9]
  42748c:	e085c00c 	add	ip, r5, ip
  427490:	e282e080 	add	lr, r2, #128	; 0x80
  427494:	e3dee0ff 	bics	lr, lr, #255	; 0xff
  427498:	0a000004 	beq	4274b0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x10d0>
  42749c:	e3520000 	cmp	r2, #0
  4274a0:	c3a0207f 	movgt	r2, #127	; 0x7f
  4274a4:	ca000002 	bgt	4274b4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x10d4>
  4274a8:	e3a02080 	mov	r2, #128	; 0x80
  4274ac:	ea000000 	b	4274b4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x10d4>
  4274b0:	e20220ff 	and	r2, r2, #255	; 0xff
  4274b4:	e5cc2000 	strb	r2, [ip]
  4274b8:	e286e002 	add	lr, r6, #2
  4274bc:	e1a0208e 	lsl	r2, lr, #1
  4274c0:	e194c0f2 	ldrsh	ip, [r4, r2]
  4274c4:	e02c0c98 	mla	ip, r8, ip, r0
  4274c8:	e28cc901 	add	ip, ip, #16384	; 0x4000
  4274cc:	e1a0c7cc 	asr	ip, ip, #15
  4274d0:	e2866003 	add	r6, r6, #3
  4274d4:	e1a02086 	lsl	r2, r6, #1
  4274d8:	e19420f2 	ldrsh	r2, [r4, r2]
  4274dc:	e0220298 	mla	r2, r8, r2, r0
  4274e0:	e2822901 	add	r2, r2, #16384	; 0x4000
  4274e4:	e1a027c2 	asr	r2, r2, #15
  4274e8:	e085e00e 	add	lr, r5, lr
  4274ec:	e28c9080 	add	r9, ip, #128	; 0x80
  4274f0:	e3d990ff 	bics	r9, r9, #255	; 0xff
  4274f4:	0a000004 	beq	42750c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x112c>
  4274f8:	e35c0000 	cmp	ip, #0
  4274fc:	c3a0c07f 	movgt	ip, #127	; 0x7f
  427500:	ca000002 	bgt	427510 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1130>
  427504:	e3a0c080 	mov	ip, #128	; 0x80
  427508:	ea000000 	b	427510 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1130>
  42750c:	e20cc0ff 	and	ip, ip, #255	; 0xff
  427510:	e5cec000 	strb	ip, [lr]
  427514:	e0856006 	add	r6, r5, r6
  427518:	e282c080 	add	ip, r2, #128	; 0x80
  42751c:	e3dcc0ff 	bics	ip, ip, #255	; 0xff
  427520:	0a000004 	beq	427538 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1158>
  427524:	e3520000 	cmp	r2, #0
  427528:	c3a0207f 	movgt	r2, #127	; 0x7f
  42752c:	ca000002 	bgt	42753c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x115c>
  427530:	e3a02080 	mov	r2, #128	; 0x80
  427534:	ea000000 	b	42753c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x115c>
  427538:	e20220ff 	and	r2, r2, #255	; 0xff
  42753c:	e5c62000 	strb	r2, [r6]
  427540:	e2833004 	add	r3, r3, #4
  427544:	ea000000 	b	42754c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x116c>
  427548:	e3a03000 	mov	r3, #0
  42754c:	e59dc160 	ldr	ip, [sp, #352]	; 0x160
  427550:	e24c2004 	sub	r2, ip, #4
  427554:	e1520003 	cmp	r2, r3
  427558:	aaffffb4 	bge	427430 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1050>
  42755c:	ea000010 	b	4275a4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11c4>
  427560:	e1a02083 	lsl	r2, r3, #1
  427564:	e19420f2 	ldrsh	r2, [r4, r2]
  427568:	e0220298 	mla	r2, r8, r2, r0
  42756c:	e2822901 	add	r2, r2, #16384	; 0x4000
  427570:	e1a027c2 	asr	r2, r2, #15
  427574:	e085e003 	add	lr, r5, r3
  427578:	e2826080 	add	r6, r2, #128	; 0x80
  42757c:	e3d660ff 	bics	r6, r6, #255	; 0xff
  427580:	0a000004 	beq	427598 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11b8>
  427584:	e3520000 	cmp	r2, #0
  427588:	c3a0207f 	movgt	r2, #127	; 0x7f
  42758c:	ca000002 	bgt	42759c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11bc>
  427590:	e3a02080 	mov	r2, #128	; 0x80
  427594:	ea000000 	b	42759c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11bc>
  427598:	e20220ff 	and	r2, r2, #255	; 0xff
  42759c:	e5ce2000 	strb	r2, [lr]
  4275a0:	e2833001 	add	r3, r3, #1
  4275a4:	e153000c 	cmp	r3, ip
  4275a8:	baffffec 	blt	427560 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1180>
  4275ac:	e0844087 	add	r4, r4, r7, lsl #1
  4275b0:	e0855001 	add	r5, r5, r1
  4275b4:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  4275b8:	e2432001 	sub	r2, r3, #1
  4275bc:	e58d2164 	str	r2, [sp, #356]	; 0x164
  4275c0:	e3530000 	cmp	r3, #0
  4275c4:	1affffdf 	bne	427548 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1168>
  4275c8:	ea000265 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  4275cc:	e1a030a7 	lsr	r3, r7, #1
  4275d0:	e58d301c 	str	r3, [sp, #28]
  4275d4:	ea000091 	b	427820 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1440>
  4275d8:	e1a08007 	mov	r8, r7
  4275dc:	e1a03087 	lsl	r3, r7, #1
  4275e0:	e19400f3 	ldrsh	r0, [r4, r3]
  4275e4:	fa0029a7 	blx	431c88 <__aeabi_i2d>
  4275e8:	e59d2014 	ldr	r2, [sp, #20]
  4275ec:	e59d3018 	ldr	r3, [sp, #24]
  4275f0:	fa0029d7 	blx	431d54 <__aeabi_dmul>
  4275f4:	e1a0200b 	mov	r2, fp
  4275f8:	e1a03006 	mov	r3, r6
  4275fc:	fa0028fb 	blx	4319f0 <__adddf3>
  427600:	e3a02000 	mov	r2, #0
  427604:	e51f328c 	ldr	r3, [pc, #-652]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427608:	fa0028f8 	blx	4319f0 <__adddf3>
  42760c:	fa002899 	blx	431878 <floor>
  427610:	fa002b1c 	blx	432288 <__aeabi_d2iz>
  427614:	e1a0a000 	mov	sl, r0
  427618:	e2879001 	add	r9, r7, #1
  42761c:	e1a03089 	lsl	r3, r9, #1
  427620:	e19400f3 	ldrsh	r0, [r4, r3]
  427624:	fa002997 	blx	431c88 <__aeabi_i2d>
  427628:	e59d2014 	ldr	r2, [sp, #20]
  42762c:	e59d3018 	ldr	r3, [sp, #24]
  427630:	fa0029c7 	blx	431d54 <__aeabi_dmul>
  427634:	e1a0200b 	mov	r2, fp
  427638:	e1a03006 	mov	r3, r6
  42763c:	fa0028eb 	blx	4319f0 <__adddf3>
  427640:	e3a02000 	mov	r2, #0
  427644:	e51f32cc 	ldr	r3, [pc, #-716]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427648:	fa0028e8 	blx	4319f0 <__adddf3>
  42764c:	fa002889 	blx	431878 <floor>
  427650:	fa002b0c 	blx	432288 <__aeabi_d2iz>
  427654:	e0853007 	add	r3, r5, r7
  427658:	e28a2080 	add	r2, sl, #128	; 0x80
  42765c:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427660:	0a000004 	beq	427678 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1298>
  427664:	e35a0000 	cmp	sl, #0
  427668:	c3a0a07f 	movgt	sl, #127	; 0x7f
  42766c:	ca000002 	bgt	42767c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x129c>
  427670:	e3a0a080 	mov	sl, #128	; 0x80
  427674:	ea000000 	b	42767c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x129c>
  427678:	e20aa0ff 	and	sl, sl, #255	; 0xff
  42767c:	e5c3a000 	strb	sl, [r3]
  427680:	e0859009 	add	r9, r5, r9
  427684:	e2803080 	add	r3, r0, #128	; 0x80
  427688:	e3d330ff 	bics	r3, r3, #255	; 0xff
  42768c:	0a000004 	beq	4276a4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x12c4>
  427690:	e3500000 	cmp	r0, #0
  427694:	c3a0007f 	movgt	r0, #127	; 0x7f
  427698:	ca000002 	bgt	4276a8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x12c8>
  42769c:	e3a00080 	mov	r0, #128	; 0x80
  4276a0:	ea000000 	b	4276a8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x12c8>
  4276a4:	e20000ff 	and	r0, r0, #255	; 0xff
  4276a8:	e5c90000 	strb	r0, [r9]
  4276ac:	e2889002 	add	r9, r8, #2
  4276b0:	e1a03089 	lsl	r3, r9, #1
  4276b4:	e19400f3 	ldrsh	r0, [r4, r3]
  4276b8:	fa002972 	blx	431c88 <__aeabi_i2d>
  4276bc:	e59d2014 	ldr	r2, [sp, #20]
  4276c0:	e59d3018 	ldr	r3, [sp, #24]
  4276c4:	fa0029a2 	blx	431d54 <__aeabi_dmul>
  4276c8:	e1a0200b 	mov	r2, fp
  4276cc:	e1a03006 	mov	r3, r6
  4276d0:	fa0028c6 	blx	4319f0 <__adddf3>
  4276d4:	e3a02000 	mov	r2, #0
  4276d8:	e51f3360 	ldr	r3, [pc, #-864]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4276dc:	fa0028c3 	blx	4319f0 <__adddf3>
  4276e0:	fa002864 	blx	431878 <floor>
  4276e4:	fa002ae7 	blx	432288 <__aeabi_d2iz>
  4276e8:	e1a0a000 	mov	sl, r0
  4276ec:	e2888003 	add	r8, r8, #3
  4276f0:	e1a03088 	lsl	r3, r8, #1
  4276f4:	e19400f3 	ldrsh	r0, [r4, r3]
  4276f8:	fa002962 	blx	431c88 <__aeabi_i2d>
  4276fc:	e59d2014 	ldr	r2, [sp, #20]
  427700:	e59d3018 	ldr	r3, [sp, #24]
  427704:	fa002992 	blx	431d54 <__aeabi_dmul>
  427708:	e1a0200b 	mov	r2, fp
  42770c:	e1a03006 	mov	r3, r6
  427710:	fa0028b6 	blx	4319f0 <__adddf3>
  427714:	e3a02000 	mov	r2, #0
  427718:	e51f33a0 	ldr	r3, [pc, #-928]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  42771c:	fa0028b3 	blx	4319f0 <__adddf3>
  427720:	fa002854 	blx	431878 <floor>
  427724:	fa002ad7 	blx	432288 <__aeabi_d2iz>
  427728:	e0859009 	add	r9, r5, r9
  42772c:	e28a3080 	add	r3, sl, #128	; 0x80
  427730:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427734:	0a000004 	beq	42774c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x136c>
  427738:	e35a0000 	cmp	sl, #0
  42773c:	c3a0a07f 	movgt	sl, #127	; 0x7f
  427740:	ca000002 	bgt	427750 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1370>
  427744:	e3a0a080 	mov	sl, #128	; 0x80
  427748:	ea000000 	b	427750 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1370>
  42774c:	e20aa0ff 	and	sl, sl, #255	; 0xff
  427750:	e5c9a000 	strb	sl, [r9]
  427754:	e0858008 	add	r8, r5, r8
  427758:	e2803080 	add	r3, r0, #128	; 0x80
  42775c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427760:	0a000004 	beq	427778 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1398>
  427764:	e3500000 	cmp	r0, #0
  427768:	c3a0007f 	movgt	r0, #127	; 0x7f
  42776c:	ca000002 	bgt	42777c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x139c>
  427770:	e3a00080 	mov	r0, #128	; 0x80
  427774:	ea000000 	b	42777c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x139c>
  427778:	e20000ff 	and	r0, r0, #255	; 0xff
  42777c:	e5c80000 	strb	r0, [r8]
  427780:	e2877004 	add	r7, r7, #4
  427784:	ea000000 	b	42778c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x13ac>
  427788:	e3a07000 	mov	r7, #0
  42778c:	e59d8160 	ldr	r8, [sp, #352]	; 0x160
  427790:	e2483004 	sub	r3, r8, #4
  427794:	e1530007 	cmp	r3, r7
  427798:	aaffff8e 	bge	4275d8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x11f8>
  42779c:	ea000019 	b	427808 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1428>
  4277a0:	e1a03087 	lsl	r3, r7, #1
  4277a4:	e19400f3 	ldrsh	r0, [r4, r3]
  4277a8:	fa002936 	blx	431c88 <__aeabi_i2d>
  4277ac:	e59d2014 	ldr	r2, [sp, #20]
  4277b0:	e59d3018 	ldr	r3, [sp, #24]
  4277b4:	fa002966 	blx	431d54 <__aeabi_dmul>
  4277b8:	e1a0200b 	mov	r2, fp
  4277bc:	e1a03006 	mov	r3, r6
  4277c0:	fa00288a 	blx	4319f0 <__adddf3>
  4277c4:	e3a02000 	mov	r2, #0
  4277c8:	e51f3450 	ldr	r3, [pc, #-1104]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4277cc:	fa002887 	blx	4319f0 <__adddf3>
  4277d0:	fa002828 	blx	431878 <floor>
  4277d4:	fa002aab 	blx	432288 <__aeabi_d2iz>
  4277d8:	e0853007 	add	r3, r5, r7
  4277dc:	e2802080 	add	r2, r0, #128	; 0x80
  4277e0:	e3d220ff 	bics	r2, r2, #255	; 0xff
  4277e4:	0a000004 	beq	4277fc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x141c>
  4277e8:	e3500000 	cmp	r0, #0
  4277ec:	c3a0007f 	movgt	r0, #127	; 0x7f
  4277f0:	ca000002 	bgt	427800 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1420>
  4277f4:	e3a00080 	mov	r0, #128	; 0x80
  4277f8:	ea000000 	b	427800 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1420>
  4277fc:	e20000ff 	and	r0, r0, #255	; 0xff
  427800:	e5c30000 	strb	r0, [r3]
  427804:	e2877001 	add	r7, r7, #1
  427808:	e1570008 	cmp	r7, r8
  42780c:	baffffe3 	blt	4277a0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x13c0>
  427810:	e59d301c 	ldr	r3, [sp, #28]
  427814:	e0844083 	add	r4, r4, r3, lsl #1
  427818:	e59d3020 	ldr	r3, [sp, #32]
  42781c:	e0855003 	add	r5, r5, r3
  427820:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  427824:	e2432001 	sub	r2, r3, #1
  427828:	e58d2164 	str	r2, [sp, #356]	; 0x164
  42782c:	e3530000 	cmp	r3, #0
  427830:	1affffd4 	bne	427788 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x13a8>
  427834:	ea0001ca 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  427838:	e1a03121 	lsr	r3, r1, #2
  42783c:	e58d301c 	str	r3, [sp, #28]
  427840:	ea00008c 	b	427a78 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1698>
  427844:	e1a08007 	mov	r8, r7
  427848:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42784c:	fa00290d 	blx	431c88 <__aeabi_i2d>
  427850:	e59d2014 	ldr	r2, [sp, #20]
  427854:	e59d3018 	ldr	r3, [sp, #24]
  427858:	fa00293d 	blx	431d54 <__aeabi_dmul>
  42785c:	e1a0200b 	mov	r2, fp
  427860:	e1a03006 	mov	r3, r6
  427864:	fa002861 	blx	4319f0 <__adddf3>
  427868:	e3a02000 	mov	r2, #0
  42786c:	e51f34f4 	ldr	r3, [pc, #-1268]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427870:	fa00285e 	blx	4319f0 <__adddf3>
  427874:	fa0027ff 	blx	431878 <floor>
  427878:	fa002a82 	blx	432288 <__aeabi_d2iz>
  42787c:	e1a0a000 	mov	sl, r0
  427880:	e2879001 	add	r9, r7, #1
  427884:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  427888:	fa0028fe 	blx	431c88 <__aeabi_i2d>
  42788c:	e59d2014 	ldr	r2, [sp, #20]
  427890:	e59d3018 	ldr	r3, [sp, #24]
  427894:	fa00292e 	blx	431d54 <__aeabi_dmul>
  427898:	e1a0200b 	mov	r2, fp
  42789c:	e1a03006 	mov	r3, r6
  4278a0:	fa002852 	blx	4319f0 <__adddf3>
  4278a4:	e3a02000 	mov	r2, #0
  4278a8:	e51f3530 	ldr	r3, [pc, #-1328]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  4278ac:	fa00284f 	blx	4319f0 <__adddf3>
  4278b0:	fa0027f0 	blx	431878 <floor>
  4278b4:	fa002a73 	blx	432288 <__aeabi_d2iz>
  4278b8:	e0853007 	add	r3, r5, r7
  4278bc:	e28a2080 	add	r2, sl, #128	; 0x80
  4278c0:	e3d220ff 	bics	r2, r2, #255	; 0xff
  4278c4:	0a000004 	beq	4278dc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x14fc>
  4278c8:	e35a0000 	cmp	sl, #0
  4278cc:	c3a0a07f 	movgt	sl, #127	; 0x7f
  4278d0:	ca000002 	bgt	4278e0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1500>
  4278d4:	e3a0a080 	mov	sl, #128	; 0x80
  4278d8:	ea000000 	b	4278e0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1500>
  4278dc:	e20aa0ff 	and	sl, sl, #255	; 0xff
  4278e0:	e5c3a000 	strb	sl, [r3]
  4278e4:	e0859009 	add	r9, r5, r9
  4278e8:	e2803080 	add	r3, r0, #128	; 0x80
  4278ec:	e3d330ff 	bics	r3, r3, #255	; 0xff
  4278f0:	0a000004 	beq	427908 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1528>
  4278f4:	e3500000 	cmp	r0, #0
  4278f8:	c3a0007f 	movgt	r0, #127	; 0x7f
  4278fc:	ca000002 	bgt	42790c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x152c>
  427900:	e3a00080 	mov	r0, #128	; 0x80
  427904:	ea000000 	b	42790c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x152c>
  427908:	e20000ff 	and	r0, r0, #255	; 0xff
  42790c:	e5c90000 	strb	r0, [r9]
  427910:	e2889002 	add	r9, r8, #2
  427914:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  427918:	fa0028da 	blx	431c88 <__aeabi_i2d>
  42791c:	e59d2014 	ldr	r2, [sp, #20]
  427920:	e59d3018 	ldr	r3, [sp, #24]
  427924:	fa00290a 	blx	431d54 <__aeabi_dmul>
  427928:	e1a0200b 	mov	r2, fp
  42792c:	e1a03006 	mov	r3, r6
  427930:	fa00282e 	blx	4319f0 <__adddf3>
  427934:	e3a02000 	mov	r2, #0
  427938:	e51f35c0 	ldr	r3, [pc, #-1472]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  42793c:	fa00282b 	blx	4319f0 <__adddf3>
  427940:	fa0027cc 	blx	431878 <floor>
  427944:	fa002a4f 	blx	432288 <__aeabi_d2iz>
  427948:	e1a0a000 	mov	sl, r0
  42794c:	e2888003 	add	r8, r8, #3
  427950:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  427954:	fa0028cb 	blx	431c88 <__aeabi_i2d>
  427958:	e59d2014 	ldr	r2, [sp, #20]
  42795c:	e59d3018 	ldr	r3, [sp, #24]
  427960:	fa0028fb 	blx	431d54 <__aeabi_dmul>
  427964:	e1a0200b 	mov	r2, fp
  427968:	e1a03006 	mov	r3, r6
  42796c:	fa00281f 	blx	4319f0 <__adddf3>
  427970:	e3a02000 	mov	r2, #0
  427974:	e51f35fc 	ldr	r3, [pc, #-1532]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427978:	fa00281c 	blx	4319f0 <__adddf3>
  42797c:	fa0027bd 	blx	431878 <floor>
  427980:	fa002a40 	blx	432288 <__aeabi_d2iz>
  427984:	e0859009 	add	r9, r5, r9
  427988:	e28a3080 	add	r3, sl, #128	; 0x80
  42798c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427990:	0a000004 	beq	4279a8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x15c8>
  427994:	e35a0000 	cmp	sl, #0
  427998:	c3a0a07f 	movgt	sl, #127	; 0x7f
  42799c:	ca000002 	bgt	4279ac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x15cc>
  4279a0:	e3a0a080 	mov	sl, #128	; 0x80
  4279a4:	ea000000 	b	4279ac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x15cc>
  4279a8:	e20aa0ff 	and	sl, sl, #255	; 0xff
  4279ac:	e5c9a000 	strb	sl, [r9]
  4279b0:	e0858008 	add	r8, r5, r8
  4279b4:	e2803080 	add	r3, r0, #128	; 0x80
  4279b8:	e3d330ff 	bics	r3, r3, #255	; 0xff
  4279bc:	0a000004 	beq	4279d4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x15f4>
  4279c0:	e3500000 	cmp	r0, #0
  4279c4:	c3a0007f 	movgt	r0, #127	; 0x7f
  4279c8:	ca000002 	bgt	4279d8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x15f8>
  4279cc:	e3a00080 	mov	r0, #128	; 0x80
  4279d0:	ea000000 	b	4279d8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x15f8>
  4279d4:	e20000ff 	and	r0, r0, #255	; 0xff
  4279d8:	e5c80000 	strb	r0, [r8]
  4279dc:	e2877004 	add	r7, r7, #4
  4279e0:	ea000000 	b	4279e8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1608>
  4279e4:	e3a07000 	mov	r7, #0
  4279e8:	e59d8160 	ldr	r8, [sp, #352]	; 0x160
  4279ec:	e2483004 	sub	r3, r8, #4
  4279f0:	e1530007 	cmp	r3, r7
  4279f4:	aaffff92 	bge	427844 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1464>
  4279f8:	ea000018 	b	427a60 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1680>
  4279fc:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  427a00:	fa0028a0 	blx	431c88 <__aeabi_i2d>
  427a04:	e59d2014 	ldr	r2, [sp, #20]
  427a08:	e59d3018 	ldr	r3, [sp, #24]
  427a0c:	fa0028d0 	blx	431d54 <__aeabi_dmul>
  427a10:	e1a0200b 	mov	r2, fp
  427a14:	e1a03006 	mov	r3, r6
  427a18:	fa0027f4 	blx	4319f0 <__adddf3>
  427a1c:	e3a02000 	mov	r2, #0
  427a20:	e51f36a8 	ldr	r3, [pc, #-1704]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427a24:	fa0027f1 	blx	4319f0 <__adddf3>
  427a28:	fa002792 	blx	431878 <floor>
  427a2c:	fa002a15 	blx	432288 <__aeabi_d2iz>
  427a30:	e0853007 	add	r3, r5, r7
  427a34:	e2802080 	add	r2, r0, #128	; 0x80
  427a38:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427a3c:	0a000004 	beq	427a54 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1674>
  427a40:	e3500000 	cmp	r0, #0
  427a44:	c3a0007f 	movgt	r0, #127	; 0x7f
  427a48:	ca000002 	bgt	427a58 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1678>
  427a4c:	e3a00080 	mov	r0, #128	; 0x80
  427a50:	ea000000 	b	427a58 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1678>
  427a54:	e20000ff 	and	r0, r0, #255	; 0xff
  427a58:	e5c30000 	strb	r0, [r3]
  427a5c:	e2877001 	add	r7, r7, #1
  427a60:	e1570008 	cmp	r7, r8
  427a64:	baffffe4 	blt	4279fc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x161c>
  427a68:	e59d301c 	ldr	r3, [sp, #28]
  427a6c:	e0844103 	add	r4, r4, r3, lsl #2
  427a70:	e59d3020 	ldr	r3, [sp, #32]
  427a74:	e0855003 	add	r5, r5, r3
  427a78:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  427a7c:	e2432001 	sub	r2, r3, #1
  427a80:	e58d2164 	str	r2, [sp, #356]	; 0x164
  427a84:	e3530000 	cmp	r3, #0
  427a88:	1affffd5 	bne	4279e4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1604>
  427a8c:	ea000134 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  427a90:	e1a03121 	lsr	r3, r1, #2
  427a94:	e58d301c 	str	r3, [sp, #28]
  427a98:	ea00008c 	b	427cd0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x18f0>
  427a9c:	e1a08007 	mov	r8, r7
  427aa0:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  427aa4:	fa002880 	blx	431cac <__aeabi_f2d>
  427aa8:	e59d2014 	ldr	r2, [sp, #20]
  427aac:	e59d3018 	ldr	r3, [sp, #24]
  427ab0:	fa0028a7 	blx	431d54 <__aeabi_dmul>
  427ab4:	e1a0200b 	mov	r2, fp
  427ab8:	e1a03006 	mov	r3, r6
  427abc:	fa0027cb 	blx	4319f0 <__adddf3>
  427ac0:	e3a02000 	mov	r2, #0
  427ac4:	e51f374c 	ldr	r3, [pc, #-1868]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427ac8:	fa0027c8 	blx	4319f0 <__adddf3>
  427acc:	fa002769 	blx	431878 <floor>
  427ad0:	fa0029ec 	blx	432288 <__aeabi_d2iz>
  427ad4:	e1a0a000 	mov	sl, r0
  427ad8:	e2879001 	add	r9, r7, #1
  427adc:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  427ae0:	fa002871 	blx	431cac <__aeabi_f2d>
  427ae4:	e59d2014 	ldr	r2, [sp, #20]
  427ae8:	e59d3018 	ldr	r3, [sp, #24]
  427aec:	fa002898 	blx	431d54 <__aeabi_dmul>
  427af0:	e1a0200b 	mov	r2, fp
  427af4:	e1a03006 	mov	r3, r6
  427af8:	fa0027bc 	blx	4319f0 <__adddf3>
  427afc:	e3a02000 	mov	r2, #0
  427b00:	e51f3788 	ldr	r3, [pc, #-1928]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427b04:	fa0027b9 	blx	4319f0 <__adddf3>
  427b08:	fa00275a 	blx	431878 <floor>
  427b0c:	fa0029dd 	blx	432288 <__aeabi_d2iz>
  427b10:	e0853007 	add	r3, r5, r7
  427b14:	e28a2080 	add	r2, sl, #128	; 0x80
  427b18:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427b1c:	0a000004 	beq	427b34 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1754>
  427b20:	e35a0000 	cmp	sl, #0
  427b24:	c3a0a07f 	movgt	sl, #127	; 0x7f
  427b28:	ca000002 	bgt	427b38 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1758>
  427b2c:	e3a0a080 	mov	sl, #128	; 0x80
  427b30:	ea000000 	b	427b38 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1758>
  427b34:	e20aa0ff 	and	sl, sl, #255	; 0xff
  427b38:	e5c3a000 	strb	sl, [r3]
  427b3c:	e0859009 	add	r9, r5, r9
  427b40:	e2803080 	add	r3, r0, #128	; 0x80
  427b44:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427b48:	0a000004 	beq	427b60 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1780>
  427b4c:	e3500000 	cmp	r0, #0
  427b50:	c3a0007f 	movgt	r0, #127	; 0x7f
  427b54:	ca000002 	bgt	427b64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1784>
  427b58:	e3a00080 	mov	r0, #128	; 0x80
  427b5c:	ea000000 	b	427b64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1784>
  427b60:	e20000ff 	and	r0, r0, #255	; 0xff
  427b64:	e5c90000 	strb	r0, [r9]
  427b68:	e2889002 	add	r9, r8, #2
  427b6c:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  427b70:	fa00284d 	blx	431cac <__aeabi_f2d>
  427b74:	e59d2014 	ldr	r2, [sp, #20]
  427b78:	e59d3018 	ldr	r3, [sp, #24]
  427b7c:	fa002874 	blx	431d54 <__aeabi_dmul>
  427b80:	e1a0200b 	mov	r2, fp
  427b84:	e1a03006 	mov	r3, r6
  427b88:	fa002798 	blx	4319f0 <__adddf3>
  427b8c:	e3a02000 	mov	r2, #0
  427b90:	e51f3818 	ldr	r3, [pc, #-2072]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427b94:	fa002795 	blx	4319f0 <__adddf3>
  427b98:	fa002736 	blx	431878 <floor>
  427b9c:	fa0029b9 	blx	432288 <__aeabi_d2iz>
  427ba0:	e1a0a000 	mov	sl, r0
  427ba4:	e2888003 	add	r8, r8, #3
  427ba8:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  427bac:	fa00283e 	blx	431cac <__aeabi_f2d>
  427bb0:	e59d2014 	ldr	r2, [sp, #20]
  427bb4:	e59d3018 	ldr	r3, [sp, #24]
  427bb8:	fa002865 	blx	431d54 <__aeabi_dmul>
  427bbc:	e1a0200b 	mov	r2, fp
  427bc0:	e1a03006 	mov	r3, r6
  427bc4:	fa002789 	blx	4319f0 <__adddf3>
  427bc8:	e3a02000 	mov	r2, #0
  427bcc:	e51f3854 	ldr	r3, [pc, #-2132]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427bd0:	fa002786 	blx	4319f0 <__adddf3>
  427bd4:	fa002727 	blx	431878 <floor>
  427bd8:	fa0029aa 	blx	432288 <__aeabi_d2iz>
  427bdc:	e0859009 	add	r9, r5, r9
  427be0:	e28a3080 	add	r3, sl, #128	; 0x80
  427be4:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427be8:	0a000004 	beq	427c00 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1820>
  427bec:	e35a0000 	cmp	sl, #0
  427bf0:	c3a0a07f 	movgt	sl, #127	; 0x7f
  427bf4:	ca000002 	bgt	427c04 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1824>
  427bf8:	e3a0a080 	mov	sl, #128	; 0x80
  427bfc:	ea000000 	b	427c04 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1824>
  427c00:	e20aa0ff 	and	sl, sl, #255	; 0xff
  427c04:	e5c9a000 	strb	sl, [r9]
  427c08:	e0858008 	add	r8, r5, r8
  427c0c:	e2803080 	add	r3, r0, #128	; 0x80
  427c10:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427c14:	0a000004 	beq	427c2c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x184c>
  427c18:	e3500000 	cmp	r0, #0
  427c1c:	c3a0007f 	movgt	r0, #127	; 0x7f
  427c20:	ca000002 	bgt	427c30 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1850>
  427c24:	e3a00080 	mov	r0, #128	; 0x80
  427c28:	ea000000 	b	427c30 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1850>
  427c2c:	e20000ff 	and	r0, r0, #255	; 0xff
  427c30:	e5c80000 	strb	r0, [r8]
  427c34:	e2877004 	add	r7, r7, #4
  427c38:	ea000000 	b	427c40 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1860>
  427c3c:	e3a07000 	mov	r7, #0
  427c40:	e59d8160 	ldr	r8, [sp, #352]	; 0x160
  427c44:	e2483004 	sub	r3, r8, #4
  427c48:	e1530007 	cmp	r3, r7
  427c4c:	aaffff92 	bge	427a9c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x16bc>
  427c50:	ea000018 	b	427cb8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x18d8>
  427c54:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  427c58:	fa002813 	blx	431cac <__aeabi_f2d>
  427c5c:	e59d2014 	ldr	r2, [sp, #20]
  427c60:	e59d3018 	ldr	r3, [sp, #24]
  427c64:	fa00283a 	blx	431d54 <__aeabi_dmul>
  427c68:	e1a0200b 	mov	r2, fp
  427c6c:	e1a03006 	mov	r3, r6
  427c70:	fa00275e 	blx	4319f0 <__adddf3>
  427c74:	e3a02000 	mov	r2, #0
  427c78:	e51f3900 	ldr	r3, [pc, #-2304]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427c7c:	fa00275b 	blx	4319f0 <__adddf3>
  427c80:	fa0026fc 	blx	431878 <floor>
  427c84:	fa00297f 	blx	432288 <__aeabi_d2iz>
  427c88:	e0853007 	add	r3, r5, r7
  427c8c:	e2802080 	add	r2, r0, #128	; 0x80
  427c90:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427c94:	0a000004 	beq	427cac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x18cc>
  427c98:	e3500000 	cmp	r0, #0
  427c9c:	c3a0007f 	movgt	r0, #127	; 0x7f
  427ca0:	ca000002 	bgt	427cb0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x18d0>
  427ca4:	e3a00080 	mov	r0, #128	; 0x80
  427ca8:	ea000000 	b	427cb0 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x18d0>
  427cac:	e20000ff 	and	r0, r0, #255	; 0xff
  427cb0:	e5c30000 	strb	r0, [r3]
  427cb4:	e2877001 	add	r7, r7, #1
  427cb8:	e1570008 	cmp	r7, r8
  427cbc:	baffffe4 	blt	427c54 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1874>
  427cc0:	e59d301c 	ldr	r3, [sp, #28]
  427cc4:	e0844103 	add	r4, r4, r3, lsl #2
  427cc8:	e59d3020 	ldr	r3, [sp, #32]
  427ccc:	e0855003 	add	r5, r5, r3
  427cd0:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  427cd4:	e2432001 	sub	r2, r3, #1
  427cd8:	e58d2164 	str	r2, [sp, #356]	; 0x164
  427cdc:	e3530000 	cmp	r3, #0
  427ce0:	1affffd5 	bne	427c3c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x185c>
  427ce4:	ea00009e 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  427ce8:	e1a031a1 	lsr	r3, r1, #3
  427cec:	e58d301c 	str	r3, [sp, #28]
  427cf0:	ea00008c 	b	427f28 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b48>
  427cf4:	e1a08007 	mov	r8, r7
  427cf8:	e0843187 	add	r3, r4, r7, lsl #3
  427cfc:	e59d0014 	ldr	r0, [sp, #20]
  427d00:	e59d1018 	ldr	r1, [sp, #24]
  427d04:	e893000c 	ldm	r3, {r2, r3}
  427d08:	fa002811 	blx	431d54 <__aeabi_dmul>
  427d0c:	e1a0200b 	mov	r2, fp
  427d10:	e1a03006 	mov	r3, r6
  427d14:	fa002735 	blx	4319f0 <__adddf3>
  427d18:	e3a02000 	mov	r2, #0
  427d1c:	e51f39a4 	ldr	r3, [pc, #-2468]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427d20:	fa002732 	blx	4319f0 <__adddf3>
  427d24:	fa0026d3 	blx	431878 <floor>
  427d28:	fa002956 	blx	432288 <__aeabi_d2iz>
  427d2c:	e1a0a000 	mov	sl, r0
  427d30:	e2879001 	add	r9, r7, #1
  427d34:	e0843189 	add	r3, r4, r9, lsl #3
  427d38:	e59d0014 	ldr	r0, [sp, #20]
  427d3c:	e59d1018 	ldr	r1, [sp, #24]
  427d40:	e893000c 	ldm	r3, {r2, r3}
  427d44:	fa002802 	blx	431d54 <__aeabi_dmul>
  427d48:	e1a0200b 	mov	r2, fp
  427d4c:	e1a03006 	mov	r3, r6
  427d50:	fa002726 	blx	4319f0 <__adddf3>
  427d54:	e3a02000 	mov	r2, #0
  427d58:	e51f39e0 	ldr	r3, [pc, #-2528]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427d5c:	fa002723 	blx	4319f0 <__adddf3>
  427d60:	fa0026c4 	blx	431878 <floor>
  427d64:	fa002947 	blx	432288 <__aeabi_d2iz>
  427d68:	e0853007 	add	r3, r5, r7
  427d6c:	e28a2080 	add	r2, sl, #128	; 0x80
  427d70:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427d74:	0a000004 	beq	427d8c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x19ac>
  427d78:	e35a0000 	cmp	sl, #0
  427d7c:	c3a0a07f 	movgt	sl, #127	; 0x7f
  427d80:	ca000002 	bgt	427d90 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x19b0>
  427d84:	e3a0a080 	mov	sl, #128	; 0x80
  427d88:	ea000000 	b	427d90 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x19b0>
  427d8c:	e20aa0ff 	and	sl, sl, #255	; 0xff
  427d90:	e5c3a000 	strb	sl, [r3]
  427d94:	e0859009 	add	r9, r5, r9
  427d98:	e2803080 	add	r3, r0, #128	; 0x80
  427d9c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427da0:	0a000004 	beq	427db8 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x19d8>
  427da4:	e3500000 	cmp	r0, #0
  427da8:	c3a0007f 	movgt	r0, #127	; 0x7f
  427dac:	ca000002 	bgt	427dbc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x19dc>
  427db0:	e3a00080 	mov	r0, #128	; 0x80
  427db4:	ea000000 	b	427dbc <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x19dc>
  427db8:	e20000ff 	and	r0, r0, #255	; 0xff
  427dbc:	e5c90000 	strb	r0, [r9]
  427dc0:	e2889002 	add	r9, r8, #2
  427dc4:	e0843189 	add	r3, r4, r9, lsl #3
  427dc8:	e59d0014 	ldr	r0, [sp, #20]
  427dcc:	e59d1018 	ldr	r1, [sp, #24]
  427dd0:	e893000c 	ldm	r3, {r2, r3}
  427dd4:	fa0027de 	blx	431d54 <__aeabi_dmul>
  427dd8:	e1a0200b 	mov	r2, fp
  427ddc:	e1a03006 	mov	r3, r6
  427de0:	fa002702 	blx	4319f0 <__adddf3>
  427de4:	e3a02000 	mov	r2, #0
  427de8:	e51f3a70 	ldr	r3, [pc, #-2672]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427dec:	fa0026ff 	blx	4319f0 <__adddf3>
  427df0:	fa0026a0 	blx	431878 <floor>
  427df4:	fa002923 	blx	432288 <__aeabi_d2iz>
  427df8:	e1a0a000 	mov	sl, r0
  427dfc:	e2888003 	add	r8, r8, #3
  427e00:	e0843188 	add	r3, r4, r8, lsl #3
  427e04:	e59d0014 	ldr	r0, [sp, #20]
  427e08:	e59d1018 	ldr	r1, [sp, #24]
  427e0c:	e893000c 	ldm	r3, {r2, r3}
  427e10:	fa0027cf 	blx	431d54 <__aeabi_dmul>
  427e14:	e1a0200b 	mov	r2, fp
  427e18:	e1a03006 	mov	r3, r6
  427e1c:	fa0026f3 	blx	4319f0 <__adddf3>
  427e20:	e3a02000 	mov	r2, #0
  427e24:	e51f3aac 	ldr	r3, [pc, #-2732]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427e28:	fa0026f0 	blx	4319f0 <__adddf3>
  427e2c:	fa002691 	blx	431878 <floor>
  427e30:	fa002914 	blx	432288 <__aeabi_d2iz>
  427e34:	e0859009 	add	r9, r5, r9
  427e38:	e28a3080 	add	r3, sl, #128	; 0x80
  427e3c:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427e40:	0a000004 	beq	427e58 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1a78>
  427e44:	e35a0000 	cmp	sl, #0
  427e48:	c3a0a07f 	movgt	sl, #127	; 0x7f
  427e4c:	ca000002 	bgt	427e5c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1a7c>
  427e50:	e3a0a080 	mov	sl, #128	; 0x80
  427e54:	ea000000 	b	427e5c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1a7c>
  427e58:	e20aa0ff 	and	sl, sl, #255	; 0xff
  427e5c:	e5c9a000 	strb	sl, [r9]
  427e60:	e0858008 	add	r8, r5, r8
  427e64:	e2803080 	add	r3, r0, #128	; 0x80
  427e68:	e3d330ff 	bics	r3, r3, #255	; 0xff
  427e6c:	0a000004 	beq	427e84 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1aa4>
  427e70:	e3500000 	cmp	r0, #0
  427e74:	c3a0007f 	movgt	r0, #127	; 0x7f
  427e78:	ca000002 	bgt	427e88 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1aa8>
  427e7c:	e3a00080 	mov	r0, #128	; 0x80
  427e80:	ea000000 	b	427e88 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1aa8>
  427e84:	e20000ff 	and	r0, r0, #255	; 0xff
  427e88:	e5c80000 	strb	r0, [r8]
  427e8c:	e2877004 	add	r7, r7, #4
  427e90:	ea000000 	b	427e98 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1ab8>
  427e94:	e3a07000 	mov	r7, #0
  427e98:	e59d8160 	ldr	r8, [sp, #352]	; 0x160
  427e9c:	e2483004 	sub	r3, r8, #4
  427ea0:	e1530007 	cmp	r3, r7
  427ea4:	aaffff92 	bge	427cf4 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1914>
  427ea8:	ea000018 	b	427f10 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b30>
  427eac:	e0843187 	add	r3, r4, r7, lsl #3
  427eb0:	e59d0014 	ldr	r0, [sp, #20]
  427eb4:	e59d1018 	ldr	r1, [sp, #24]
  427eb8:	e893000c 	ldm	r3, {r2, r3}
  427ebc:	fa0027a4 	blx	431d54 <__aeabi_dmul>
  427ec0:	e1a0200b 	mov	r2, fp
  427ec4:	e1a03006 	mov	r3, r6
  427ec8:	fa0026c8 	blx	4319f0 <__adddf3>
  427ecc:	e3a02000 	mov	r2, #0
  427ed0:	e51f3b58 	ldr	r3, [pc, #-2904]	; 427380 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa0>
  427ed4:	fa0026c5 	blx	4319f0 <__adddf3>
  427ed8:	fa002666 	blx	431878 <floor>
  427edc:	fa0028e9 	blx	432288 <__aeabi_d2iz>
  427ee0:	e0853007 	add	r3, r5, r7
  427ee4:	e2802080 	add	r2, r0, #128	; 0x80
  427ee8:	e3d220ff 	bics	r2, r2, #255	; 0xff
  427eec:	0a000004 	beq	427f04 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b24>
  427ef0:	e3500000 	cmp	r0, #0
  427ef4:	c3a0007f 	movgt	r0, #127	; 0x7f
  427ef8:	ca000002 	bgt	427f08 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b28>
  427efc:	e3a00080 	mov	r0, #128	; 0x80
  427f00:	ea000000 	b	427f08 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b28>
  427f04:	e20000ff 	and	r0, r0, #255	; 0xff
  427f08:	e5c30000 	strb	r0, [r3]
  427f0c:	e2877001 	add	r7, r7, #1
  427f10:	e1570008 	cmp	r7, r8
  427f14:	baffffe4 	blt	427eac <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1acc>
  427f18:	e59d301c 	ldr	r3, [sp, #28]
  427f1c:	e0844183 	add	r4, r4, r3, lsl #3
  427f20:	e59d3020 	ldr	r3, [sp, #32]
  427f24:	e0855003 	add	r5, r5, r3
  427f28:	e59d3164 	ldr	r3, [sp, #356]	; 0x164
  427f2c:	e2432001 	sub	r2, r3, #1
  427f30:	e58d2164 	str	r2, [sp, #356]	; 0x164
  427f34:	e3530000 	cmp	r3, #0
  427f38:	1affffd5 	bne	427e94 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1ab4>
  427f3c:	ea000008 	b	427f64 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0x1b84>
  427f40:	e51f0bc4 	ldr	r0, [pc, #-3012]	; 427384 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa4>
  427f44:	e08f0000 	add	r0, pc, r0
  427f48:	e51f1bc8 	ldr	r1, [pc, #-3016]	; 427388 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfa8>
  427f4c:	e51f2bc8 	ldr	r2, [pc, #-3016]	; 42738c <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfac>
  427f50:	e08f2002 	add	r2, pc, r2
  427f54:	e2822f45 	add	r2, r2, #276	; 0x114
  427f58:	e51f3bd0 	ldr	r3, [pc, #-3024]	; 427390 <_ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi+0xfb0>
  427f5c:	e08f3003 	add	r3, pc, r3
  427f60:	fa002f7b 	blx	433d54 <__assert_func>
  427f64:	e3a00000 	mov	r0, #0
  427f68:	e28ddf4f 	add	sp, sp, #316	; 0x13c
  427f6c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  427f70:	e12fff1e 	bx	lr

00427f74 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi>:
  427f74:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  427f78:	e24dde81 	sub	sp, sp, #2064	; 0x810
  427f7c:	e24dd00c 	sub	sp, sp, #12
  427f80:	e1a04000 	mov	r4, r0
  427f84:	e1a0b001 	mov	fp, r1
  427f88:	e1a05002 	mov	r5, r2
  427f8c:	e1a031a3 	lsr	r3, r3, #3
  427f90:	e58d3010 	str	r3, [sp, #16]
  427f94:	e59d3858 	ldr	r3, [sp, #2136]	; 0x858
  427f98:	e2033007 	and	r3, r3, #7
  427f9c:	e3530006 	cmp	r3, #6
  427fa0:	908ff103 	addls	pc, pc, r3, lsl #2
  427fa4:	ea00028e 	b	4289e4 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa70>
  427fa8:	ea000005 	b	427fc4 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x50>
  427fac:	ea000078 	b	428194 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x220>
  427fb0:	ea0000f1 	b	42837c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x408>
  427fb4:	ea000144 	b	4284cc <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x558>
  427fb8:	ea000197 	b	42861c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x6a8>
  427fbc:	ea0001e5 	b	428758 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x7e4>
  427fc0:	ea000233 	b	428894 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x920>
  427fc4:	e59d9840 	ldr	r9, [sp, #2112]	; 0x840
  427fc8:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  427fcc:	e0030399 	mul	r3, r9, r3
  427fd0:	e35300ff 	cmp	r3, #255	; 0xff
  427fd4:	ca00000a 	bgt	428004 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x90>
  427fd8:	ea00001d 	b	428054 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xe0>
  427fdc:	e28d3e81 	add	r3, sp, #2064	; 0x810
  427fe0:	e2833008 	add	r3, r3, #8
  427fe4:	e0833186 	add	r3, r3, r6, lsl #3
  427fe8:	e5030800 	str	r0, [r3, #-2048]	; 0x800
  427fec:	e50317fc 	str	r1, [r3, #-2044]	; 0x7fc
  427ff0:	e2866001 	add	r6, r6, #1
  427ff4:	e1a02008 	mov	r2, r8
  427ff8:	e1a03009 	mov	r3, r9
  427ffc:	fa00267b 	blx	4319f0 <__adddf3>
  428000:	ea000004 	b	428018 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa4>
  428004:	e3a06000 	mov	r6, #0
  428008:	e59d8848 	ldr	r8, [sp, #2120]	; 0x848
  42800c:	e59d984c 	ldr	r9, [sp, #2124]	; 0x84c
  428010:	e28d1e85 	add	r1, sp, #2128	; 0x850
  428014:	e8910003 	ldm	r1, {r0, r1}
  428018:	e35600ff 	cmp	r6, #255	; 0xff
  42801c:	daffffee 	ble	427fdc <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x68>
  428020:	e28d3e83 	add	r3, sp, #2096	; 0x830
  428024:	e283300c 	add	r3, r3, #12
  428028:	e9930003 	ldmib	r3, {r0, r1}
  42802c:	e88d0003 	stm	sp, {r0, r1}
  428030:	e28d3018 	add	r3, sp, #24
  428034:	e58d3008 	str	r3, [sp, #8]
  428038:	e1a00004 	mov	r0, r4
  42803c:	e1a0100b 	mov	r1, fp
  428040:	e1a02005 	mov	r2, r5
  428044:	e59d3010 	ldr	r3, [sp, #16]
  428048:	e1a03183 	lsl	r3, r3, #3
  42804c:	eb00217d 	bl	430648 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd>
  428050:	ea00026c 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  428054:	e58d1014 	str	r1, [sp, #20]
  428058:	e1a07009 	mov	r7, r9
  42805c:	ea000046 	b	42817c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x208>
  428060:	e7d40006 	ldrb	r0, [r4, r6]
  428064:	fa002707 	blx	431c88 <__aeabi_i2d>
  428068:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42806c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428070:	fa002737 	blx	431d54 <__aeabi_dmul>
  428074:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428078:	e893000c 	ldm	r3, {r2, r3}
  42807c:	fa00265b 	blx	4319f0 <__adddf3>
  428080:	e1a08000 	mov	r8, r0
  428084:	e1a09001 	mov	r9, r1
  428088:	e286a001 	add	sl, r6, #1
  42808c:	e7d4000a 	ldrb	r0, [r4, sl]
  428090:	fa0026fc 	blx	431c88 <__aeabi_i2d>
  428094:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428098:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  42809c:	fa00272c 	blx	431d54 <__aeabi_dmul>
  4280a0:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4280a4:	e893000c 	ldm	r3, {r2, r3}
  4280a8:	fa002650 	blx	4319f0 <__adddf3>
  4280ac:	e0853186 	add	r3, r5, r6, lsl #3
  4280b0:	e8830300 	stm	r3, {r8, r9}
  4280b4:	e085a18a 	add	sl, r5, sl, lsl #3
  4280b8:	e88a0003 	stm	sl, {r0, r1}
  4280bc:	e286b002 	add	fp, r6, #2
  4280c0:	e7d4000b 	ldrb	r0, [r4, fp]
  4280c4:	fa0026ef 	blx	431c88 <__aeabi_i2d>
  4280c8:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4280cc:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4280d0:	fa00271f 	blx	431d54 <__aeabi_dmul>
  4280d4:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4280d8:	e893000c 	ldm	r3, {r2, r3}
  4280dc:	fa002643 	blx	4319f0 <__adddf3>
  4280e0:	e1a08000 	mov	r8, r0
  4280e4:	e1a09001 	mov	r9, r1
  4280e8:	e286a003 	add	sl, r6, #3
  4280ec:	e7d4000a 	ldrb	r0, [r4, sl]
  4280f0:	fa0026e4 	blx	431c88 <__aeabi_i2d>
  4280f4:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4280f8:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4280fc:	fa002714 	blx	431d54 <__aeabi_dmul>
  428100:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428104:	e893000c 	ldm	r3, {r2, r3}
  428108:	fa002638 	blx	4319f0 <__adddf3>
  42810c:	e085b18b 	add	fp, r5, fp, lsl #3
  428110:	e88b0300 	stm	fp, {r8, r9}
  428114:	e085a18a 	add	sl, r5, sl, lsl #3
  428118:	e88a0003 	stm	sl, {r0, r1}
  42811c:	e2866004 	add	r6, r6, #4
  428120:	ea000000 	b	428128 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x1b4>
  428124:	e3a06000 	mov	r6, #0
  428128:	e2473004 	sub	r3, r7, #4
  42812c:	e1530006 	cmp	r3, r6
  428130:	aaffffca 	bge	428060 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xec>
  428134:	ea00000a 	b	428164 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x1f0>
  428138:	e7d40006 	ldrb	r0, [r4, r6]
  42813c:	fa0026d1 	blx	431c88 <__aeabi_i2d>
  428140:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428144:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428148:	fa002701 	blx	431d54 <__aeabi_dmul>
  42814c:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428150:	e893000c 	ldm	r3, {r2, r3}
  428154:	fa002625 	blx	4319f0 <__adddf3>
  428158:	e0853186 	add	r3, r5, r6, lsl #3
  42815c:	e8830003 	stm	r3, {r0, r1}
  428160:	e2866001 	add	r6, r6, #1
  428164:	e1560007 	cmp	r6, r7
  428168:	bafffff2 	blt	428138 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x1c4>
  42816c:	e59d3014 	ldr	r3, [sp, #20]
  428170:	e0844003 	add	r4, r4, r3
  428174:	e59d3010 	ldr	r3, [sp, #16]
  428178:	e0855183 	add	r5, r5, r3, lsl #3
  42817c:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  428180:	e2432001 	sub	r2, r3, #1
  428184:	e58d2844 	str	r2, [sp, #2116]	; 0x844
  428188:	e3530000 	cmp	r3, #0
  42818c:	1affffe4 	bne	428124 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x1b0>
  428190:	ea00021c 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  428194:	e59d9840 	ldr	r9, [sp, #2112]	; 0x840
  428198:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  42819c:	e0030399 	mul	r3, r9, r3
  4281a0:	e35300ff 	cmp	r3, #255	; 0xff
  4281a4:	ca00000f 	bgt	4281e8 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x274>
  4281a8:	ea000023 	b	42823c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x2c8>
  4281ac:	e20600ff 	and	r0, r6, #255	; 0xff
  4281b0:	fa0026b4 	blx	431c88 <__aeabi_i2d>
  4281b4:	e1a0200a 	mov	r2, sl
  4281b8:	e1a0300b 	mov	r3, fp
  4281bc:	fa0026e4 	blx	431d54 <__aeabi_dmul>
  4281c0:	e1a02008 	mov	r2, r8
  4281c4:	e1a03009 	mov	r3, r9
  4281c8:	fa002608 	blx	4319f0 <__adddf3>
  4281cc:	e28d3e81 	add	r3, sp, #2064	; 0x810
  4281d0:	e2833008 	add	r3, r3, #8
  4281d4:	e0833186 	add	r3, r3, r6, lsl #3
  4281d8:	e5030800 	str	r0, [r3, #-2048]	; 0x800
  4281dc:	e50317fc 	str	r1, [r3, #-2044]	; 0x7fc
  4281e0:	e2866001 	add	r6, r6, #1
  4281e4:	ea000005 	b	428200 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x28c>
  4281e8:	e3a06000 	mov	r6, #0
  4281ec:	e1a07001 	mov	r7, r1
  4281f0:	e59da848 	ldr	sl, [sp, #2120]	; 0x848
  4281f4:	e59db84c 	ldr	fp, [sp, #2124]	; 0x84c
  4281f8:	e28d9e85 	add	r9, sp, #2128	; 0x850
  4281fc:	e8990300 	ldm	r9, {r8, r9}
  428200:	e35600ff 	cmp	r6, #255	; 0xff
  428204:	daffffe8 	ble	4281ac <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x238>
  428208:	e28d3e83 	add	r3, sp, #2096	; 0x830
  42820c:	e283300c 	add	r3, r3, #12
  428210:	e9930003 	ldmib	r3, {r0, r1}
  428214:	e88d0003 	stm	sp, {r0, r1}
  428218:	e28d3018 	add	r3, sp, #24
  42821c:	e58d3008 	str	r3, [sp, #8]
  428220:	e1a00004 	mov	r0, r4
  428224:	e1a01007 	mov	r1, r7
  428228:	e1a02005 	mov	r2, r5
  42822c:	e59d3010 	ldr	r3, [sp, #16]
  428230:	e1a03183 	lsl	r3, r3, #3
  428234:	eb002103 	bl	430648 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd>
  428238:	ea0001f2 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  42823c:	e58d1014 	str	r1, [sp, #20]
  428240:	e1a07009 	mov	r7, r9
  428244:	ea000046 	b	428364 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x3f0>
  428248:	e7d40006 	ldrb	r0, [r4, r6]
  42824c:	fa00268d 	blx	431c88 <__aeabi_i2d>
  428250:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428254:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428258:	fa0026bd 	blx	431d54 <__aeabi_dmul>
  42825c:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428260:	e893000c 	ldm	r3, {r2, r3}
  428264:	fa0025e1 	blx	4319f0 <__adddf3>
  428268:	e1a08000 	mov	r8, r0
  42826c:	e1a09001 	mov	r9, r1
  428270:	e286a001 	add	sl, r6, #1
  428274:	e7d4000a 	ldrb	r0, [r4, sl]
  428278:	fa002682 	blx	431c88 <__aeabi_i2d>
  42827c:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428280:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428284:	fa0026b2 	blx	431d54 <__aeabi_dmul>
  428288:	e28d3e85 	add	r3, sp, #2128	; 0x850
  42828c:	e893000c 	ldm	r3, {r2, r3}
  428290:	fa0025d6 	blx	4319f0 <__adddf3>
  428294:	e0853186 	add	r3, r5, r6, lsl #3
  428298:	e8830300 	stm	r3, {r8, r9}
  42829c:	e085a18a 	add	sl, r5, sl, lsl #3
  4282a0:	e88a0003 	stm	sl, {r0, r1}
  4282a4:	e286b002 	add	fp, r6, #2
  4282a8:	e7d4000b 	ldrb	r0, [r4, fp]
  4282ac:	fa002675 	blx	431c88 <__aeabi_i2d>
  4282b0:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4282b4:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4282b8:	fa0026a5 	blx	431d54 <__aeabi_dmul>
  4282bc:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4282c0:	e893000c 	ldm	r3, {r2, r3}
  4282c4:	fa0025c9 	blx	4319f0 <__adddf3>
  4282c8:	e1a08000 	mov	r8, r0
  4282cc:	e1a09001 	mov	r9, r1
  4282d0:	e286a003 	add	sl, r6, #3
  4282d4:	e7d4000a 	ldrb	r0, [r4, sl]
  4282d8:	fa00266a 	blx	431c88 <__aeabi_i2d>
  4282dc:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4282e0:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4282e4:	fa00269a 	blx	431d54 <__aeabi_dmul>
  4282e8:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4282ec:	e893000c 	ldm	r3, {r2, r3}
  4282f0:	fa0025be 	blx	4319f0 <__adddf3>
  4282f4:	e085b18b 	add	fp, r5, fp, lsl #3
  4282f8:	e88b0300 	stm	fp, {r8, r9}
  4282fc:	e085a18a 	add	sl, r5, sl, lsl #3
  428300:	e88a0003 	stm	sl, {r0, r1}
  428304:	e2866004 	add	r6, r6, #4
  428308:	ea000000 	b	428310 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x39c>
  42830c:	e3a06000 	mov	r6, #0
  428310:	e2473004 	sub	r3, r7, #4
  428314:	e1530006 	cmp	r3, r6
  428318:	aaffffca 	bge	428248 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x2d4>
  42831c:	ea00000a 	b	42834c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x3d8>
  428320:	e7d40006 	ldrb	r0, [r4, r6]
  428324:	fa002657 	blx	431c88 <__aeabi_i2d>
  428328:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42832c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428330:	fa002687 	blx	431d54 <__aeabi_dmul>
  428334:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428338:	e893000c 	ldm	r3, {r2, r3}
  42833c:	fa0025ab 	blx	4319f0 <__adddf3>
  428340:	e0853186 	add	r3, r5, r6, lsl #3
  428344:	e8830003 	stm	r3, {r0, r1}
  428348:	e2866001 	add	r6, r6, #1
  42834c:	e1560007 	cmp	r6, r7
  428350:	bafffff2 	blt	428320 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x3ac>
  428354:	e59d3014 	ldr	r3, [sp, #20]
  428358:	e0844003 	add	r4, r4, r3
  42835c:	e59d3010 	ldr	r3, [sp, #16]
  428360:	e0855183 	add	r5, r5, r3, lsl #3
  428364:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  428368:	e2432001 	sub	r2, r3, #1
  42836c:	e58d2844 	str	r2, [sp, #2116]	; 0x844
  428370:	e3530000 	cmp	r3, #0
  428374:	1affffe4 	bne	42830c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x398>
  428378:	ea0001a2 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  42837c:	e1a0b0a1 	lsr	fp, r1, #1
  428380:	ea00004b 	b	4284b4 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x540>
  428384:	e1a03086 	lsl	r3, r6, #1
  428388:	e19400b3 	ldrh	r0, [r4, r3]
  42838c:	fa00263d 	blx	431c88 <__aeabi_i2d>
  428390:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428394:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428398:	fa00266d 	blx	431d54 <__aeabi_dmul>
  42839c:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4283a0:	e893000c 	ldm	r3, {r2, r3}
  4283a4:	fa002591 	blx	4319f0 <__adddf3>
  4283a8:	e1a08000 	mov	r8, r0
  4283ac:	e1a09001 	mov	r9, r1
  4283b0:	e2867001 	add	r7, r6, #1
  4283b4:	e1a03087 	lsl	r3, r7, #1
  4283b8:	e19400b3 	ldrh	r0, [r4, r3]
  4283bc:	fa002631 	blx	431c88 <__aeabi_i2d>
  4283c0:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4283c4:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4283c8:	fa002661 	blx	431d54 <__aeabi_dmul>
  4283cc:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4283d0:	e893000c 	ldm	r3, {r2, r3}
  4283d4:	fa002585 	blx	4319f0 <__adddf3>
  4283d8:	e0853186 	add	r3, r5, r6, lsl #3
  4283dc:	e8830300 	stm	r3, {r8, r9}
  4283e0:	e0857187 	add	r7, r5, r7, lsl #3
  4283e4:	e8870003 	stm	r7, {r0, r1}
  4283e8:	e286a002 	add	sl, r6, #2
  4283ec:	e1a0308a 	lsl	r3, sl, #1
  4283f0:	e19400b3 	ldrh	r0, [r4, r3]
  4283f4:	fa002623 	blx	431c88 <__aeabi_i2d>
  4283f8:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4283fc:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428400:	fa002653 	blx	431d54 <__aeabi_dmul>
  428404:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428408:	e893000c 	ldm	r3, {r2, r3}
  42840c:	fa002577 	blx	4319f0 <__adddf3>
  428410:	e1a08000 	mov	r8, r0
  428414:	e1a09001 	mov	r9, r1
  428418:	e2867003 	add	r7, r6, #3
  42841c:	e1a03087 	lsl	r3, r7, #1
  428420:	e19400b3 	ldrh	r0, [r4, r3]
  428424:	fa002617 	blx	431c88 <__aeabi_i2d>
  428428:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42842c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428430:	fa002647 	blx	431d54 <__aeabi_dmul>
  428434:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428438:	e893000c 	ldm	r3, {r2, r3}
  42843c:	fa00256b 	blx	4319f0 <__adddf3>
  428440:	e085a18a 	add	sl, r5, sl, lsl #3
  428444:	e88a0300 	stm	sl, {r8, r9}
  428448:	e0857187 	add	r7, r5, r7, lsl #3
  42844c:	e8870003 	stm	r7, {r0, r1}
  428450:	e2866004 	add	r6, r6, #4
  428454:	ea000000 	b	42845c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x4e8>
  428458:	e3a06000 	mov	r6, #0
  42845c:	e59d7840 	ldr	r7, [sp, #2112]	; 0x840
  428460:	e2473004 	sub	r3, r7, #4
  428464:	e1530006 	cmp	r3, r6
  428468:	aaffffc5 	bge	428384 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x410>
  42846c:	ea00000b 	b	4284a0 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x52c>
  428470:	e1a03086 	lsl	r3, r6, #1
  428474:	e19400b3 	ldrh	r0, [r4, r3]
  428478:	fa002602 	blx	431c88 <__aeabi_i2d>
  42847c:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428480:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428484:	fa002632 	blx	431d54 <__aeabi_dmul>
  428488:	e28d3e85 	add	r3, sp, #2128	; 0x850
  42848c:	e893000c 	ldm	r3, {r2, r3}
  428490:	fa002556 	blx	4319f0 <__adddf3>
  428494:	e0853186 	add	r3, r5, r6, lsl #3
  428498:	e8830003 	stm	r3, {r0, r1}
  42849c:	e2866001 	add	r6, r6, #1
  4284a0:	e1560007 	cmp	r6, r7
  4284a4:	bafffff1 	blt	428470 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x4fc>
  4284a8:	e084408b 	add	r4, r4, fp, lsl #1
  4284ac:	e59d3010 	ldr	r3, [sp, #16]
  4284b0:	e0855183 	add	r5, r5, r3, lsl #3
  4284b4:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  4284b8:	e2432001 	sub	r2, r3, #1
  4284bc:	e58d2844 	str	r2, [sp, #2116]	; 0x844
  4284c0:	e3530000 	cmp	r3, #0
  4284c4:	1affffe3 	bne	428458 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x4e4>
  4284c8:	ea00014e 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  4284cc:	e1a0b0a1 	lsr	fp, r1, #1
  4284d0:	ea00004b 	b	428604 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x690>
  4284d4:	e1a03086 	lsl	r3, r6, #1
  4284d8:	e19400f3 	ldrsh	r0, [r4, r3]
  4284dc:	fa0025e9 	blx	431c88 <__aeabi_i2d>
  4284e0:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4284e4:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4284e8:	fa002619 	blx	431d54 <__aeabi_dmul>
  4284ec:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4284f0:	e893000c 	ldm	r3, {r2, r3}
  4284f4:	fa00253d 	blx	4319f0 <__adddf3>
  4284f8:	e1a08000 	mov	r8, r0
  4284fc:	e1a09001 	mov	r9, r1
  428500:	e2867001 	add	r7, r6, #1
  428504:	e1a03087 	lsl	r3, r7, #1
  428508:	e19400f3 	ldrsh	r0, [r4, r3]
  42850c:	fa0025dd 	blx	431c88 <__aeabi_i2d>
  428510:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428514:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428518:	fa00260d 	blx	431d54 <__aeabi_dmul>
  42851c:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428520:	e893000c 	ldm	r3, {r2, r3}
  428524:	fa002531 	blx	4319f0 <__adddf3>
  428528:	e0853186 	add	r3, r5, r6, lsl #3
  42852c:	e8830300 	stm	r3, {r8, r9}
  428530:	e0857187 	add	r7, r5, r7, lsl #3
  428534:	e8870003 	stm	r7, {r0, r1}
  428538:	e286a002 	add	sl, r6, #2
  42853c:	e1a0308a 	lsl	r3, sl, #1
  428540:	e19400f3 	ldrsh	r0, [r4, r3]
  428544:	fa0025cf 	blx	431c88 <__aeabi_i2d>
  428548:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42854c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428550:	fa0025ff 	blx	431d54 <__aeabi_dmul>
  428554:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428558:	e893000c 	ldm	r3, {r2, r3}
  42855c:	fa002523 	blx	4319f0 <__adddf3>
  428560:	e1a08000 	mov	r8, r0
  428564:	e1a09001 	mov	r9, r1
  428568:	e2867003 	add	r7, r6, #3
  42856c:	e1a03087 	lsl	r3, r7, #1
  428570:	e19400f3 	ldrsh	r0, [r4, r3]
  428574:	fa0025c3 	blx	431c88 <__aeabi_i2d>
  428578:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42857c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428580:	fa0025f3 	blx	431d54 <__aeabi_dmul>
  428584:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428588:	e893000c 	ldm	r3, {r2, r3}
  42858c:	fa002517 	blx	4319f0 <__adddf3>
  428590:	e085a18a 	add	sl, r5, sl, lsl #3
  428594:	e88a0300 	stm	sl, {r8, r9}
  428598:	e0857187 	add	r7, r5, r7, lsl #3
  42859c:	e8870003 	stm	r7, {r0, r1}
  4285a0:	e2866004 	add	r6, r6, #4
  4285a4:	ea000000 	b	4285ac <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x638>
  4285a8:	e3a06000 	mov	r6, #0
  4285ac:	e59d7840 	ldr	r7, [sp, #2112]	; 0x840
  4285b0:	e2473004 	sub	r3, r7, #4
  4285b4:	e1530006 	cmp	r3, r6
  4285b8:	aaffffc5 	bge	4284d4 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x560>
  4285bc:	ea00000b 	b	4285f0 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x67c>
  4285c0:	e1a03086 	lsl	r3, r6, #1
  4285c4:	e19400f3 	ldrsh	r0, [r4, r3]
  4285c8:	fa0025ae 	blx	431c88 <__aeabi_i2d>
  4285cc:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4285d0:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4285d4:	fa0025de 	blx	431d54 <__aeabi_dmul>
  4285d8:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4285dc:	e893000c 	ldm	r3, {r2, r3}
  4285e0:	fa002502 	blx	4319f0 <__adddf3>
  4285e4:	e0853186 	add	r3, r5, r6, lsl #3
  4285e8:	e8830003 	stm	r3, {r0, r1}
  4285ec:	e2866001 	add	r6, r6, #1
  4285f0:	e1560007 	cmp	r6, r7
  4285f4:	bafffff1 	blt	4285c0 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x64c>
  4285f8:	e084408b 	add	r4, r4, fp, lsl #1
  4285fc:	e59d3010 	ldr	r3, [sp, #16]
  428600:	e0855183 	add	r5, r5, r3, lsl #3
  428604:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  428608:	e2432001 	sub	r2, r3, #1
  42860c:	e58d2844 	str	r2, [sp, #2116]	; 0x844
  428610:	e3530000 	cmp	r3, #0
  428614:	1affffe3 	bne	4285a8 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x634>
  428618:	ea0000fa 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  42861c:	e1a0b121 	lsr	fp, r1, #2
  428620:	ea000046 	b	428740 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x7cc>
  428624:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  428628:	fa002596 	blx	431c88 <__aeabi_i2d>
  42862c:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428630:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428634:	fa0025c6 	blx	431d54 <__aeabi_dmul>
  428638:	e28d3e85 	add	r3, sp, #2128	; 0x850
  42863c:	e893000c 	ldm	r3, {r2, r3}
  428640:	fa0024ea 	blx	4319f0 <__adddf3>
  428644:	e1a08000 	mov	r8, r0
  428648:	e1a09001 	mov	r9, r1
  42864c:	e2867001 	add	r7, r6, #1
  428650:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  428654:	fa00258b 	blx	431c88 <__aeabi_i2d>
  428658:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42865c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428660:	fa0025bb 	blx	431d54 <__aeabi_dmul>
  428664:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428668:	e893000c 	ldm	r3, {r2, r3}
  42866c:	fa0024df 	blx	4319f0 <__adddf3>
  428670:	e0853186 	add	r3, r5, r6, lsl #3
  428674:	e8830300 	stm	r3, {r8, r9}
  428678:	e0857187 	add	r7, r5, r7, lsl #3
  42867c:	e8870003 	stm	r7, {r0, r1}
  428680:	e286a002 	add	sl, r6, #2
  428684:	e794010a 	ldr	r0, [r4, sl, lsl #2]
  428688:	fa00257e 	blx	431c88 <__aeabi_i2d>
  42868c:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428690:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428694:	fa0025ae 	blx	431d54 <__aeabi_dmul>
  428698:	e28d3e85 	add	r3, sp, #2128	; 0x850
  42869c:	e893000c 	ldm	r3, {r2, r3}
  4286a0:	fa0024d2 	blx	4319f0 <__adddf3>
  4286a4:	e1a08000 	mov	r8, r0
  4286a8:	e1a09001 	mov	r9, r1
  4286ac:	e2867003 	add	r7, r6, #3
  4286b0:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  4286b4:	fa002573 	blx	431c88 <__aeabi_i2d>
  4286b8:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4286bc:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4286c0:	fa0025a3 	blx	431d54 <__aeabi_dmul>
  4286c4:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4286c8:	e893000c 	ldm	r3, {r2, r3}
  4286cc:	fa0024c7 	blx	4319f0 <__adddf3>
  4286d0:	e085a18a 	add	sl, r5, sl, lsl #3
  4286d4:	e88a0300 	stm	sl, {r8, r9}
  4286d8:	e0857187 	add	r7, r5, r7, lsl #3
  4286dc:	e8870003 	stm	r7, {r0, r1}
  4286e0:	e2866004 	add	r6, r6, #4
  4286e4:	ea000000 	b	4286ec <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x778>
  4286e8:	e3a06000 	mov	r6, #0
  4286ec:	e59d7840 	ldr	r7, [sp, #2112]	; 0x840
  4286f0:	e2473004 	sub	r3, r7, #4
  4286f4:	e1530006 	cmp	r3, r6
  4286f8:	aaffffc9 	bge	428624 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x6b0>
  4286fc:	ea00000a 	b	42872c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x7b8>
  428700:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  428704:	fa00255f 	blx	431c88 <__aeabi_i2d>
  428708:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42870c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428710:	fa00258f 	blx	431d54 <__aeabi_dmul>
  428714:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428718:	e893000c 	ldm	r3, {r2, r3}
  42871c:	fa0024b3 	blx	4319f0 <__adddf3>
  428720:	e0853186 	add	r3, r5, r6, lsl #3
  428724:	e8830003 	stm	r3, {r0, r1}
  428728:	e2866001 	add	r6, r6, #1
  42872c:	e1560007 	cmp	r6, r7
  428730:	bafffff2 	blt	428700 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x78c>
  428734:	e084410b 	add	r4, r4, fp, lsl #2
  428738:	e59d3010 	ldr	r3, [sp, #16]
  42873c:	e0855183 	add	r5, r5, r3, lsl #3
  428740:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  428744:	e2432001 	sub	r2, r3, #1
  428748:	e58d2844 	str	r2, [sp, #2116]	; 0x844
  42874c:	e3530000 	cmp	r3, #0
  428750:	1affffe4 	bne	4286e8 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x774>
  428754:	ea0000ab 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  428758:	e1a0b121 	lsr	fp, r1, #2
  42875c:	ea000046 	b	42887c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x908>
  428760:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  428764:	fa002550 	blx	431cac <__aeabi_f2d>
  428768:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  42876c:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  428770:	fa002577 	blx	431d54 <__aeabi_dmul>
  428774:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428778:	e893000c 	ldm	r3, {r2, r3}
  42877c:	fa00249b 	blx	4319f0 <__adddf3>
  428780:	e1a08000 	mov	r8, r0
  428784:	e1a09001 	mov	r9, r1
  428788:	e2867001 	add	r7, r6, #1
  42878c:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  428790:	fa002545 	blx	431cac <__aeabi_f2d>
  428794:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428798:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  42879c:	fa00256c 	blx	431d54 <__aeabi_dmul>
  4287a0:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4287a4:	e893000c 	ldm	r3, {r2, r3}
  4287a8:	fa002490 	blx	4319f0 <__adddf3>
  4287ac:	e0853186 	add	r3, r5, r6, lsl #3
  4287b0:	e8830300 	stm	r3, {r8, r9}
  4287b4:	e0857187 	add	r7, r5, r7, lsl #3
  4287b8:	e8870003 	stm	r7, {r0, r1}
  4287bc:	e286a002 	add	sl, r6, #2
  4287c0:	e794010a 	ldr	r0, [r4, sl, lsl #2]
  4287c4:	fa002538 	blx	431cac <__aeabi_f2d>
  4287c8:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4287cc:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4287d0:	fa00255f 	blx	431d54 <__aeabi_dmul>
  4287d4:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4287d8:	e893000c 	ldm	r3, {r2, r3}
  4287dc:	fa002483 	blx	4319f0 <__adddf3>
  4287e0:	e1a08000 	mov	r8, r0
  4287e4:	e1a09001 	mov	r9, r1
  4287e8:	e2867003 	add	r7, r6, #3
  4287ec:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  4287f0:	fa00252d 	blx	431cac <__aeabi_f2d>
  4287f4:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  4287f8:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  4287fc:	fa002554 	blx	431d54 <__aeabi_dmul>
  428800:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428804:	e893000c 	ldm	r3, {r2, r3}
  428808:	fa002478 	blx	4319f0 <__adddf3>
  42880c:	e085a18a 	add	sl, r5, sl, lsl #3
  428810:	e88a0300 	stm	sl, {r8, r9}
  428814:	e0857187 	add	r7, r5, r7, lsl #3
  428818:	e8870003 	stm	r7, {r0, r1}
  42881c:	e2866004 	add	r6, r6, #4
  428820:	ea000000 	b	428828 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x8b4>
  428824:	e3a06000 	mov	r6, #0
  428828:	e59d7840 	ldr	r7, [sp, #2112]	; 0x840
  42882c:	e2473004 	sub	r3, r7, #4
  428830:	e1530006 	cmp	r3, r6
  428834:	aaffffc9 	bge	428760 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x7ec>
  428838:	ea00000a 	b	428868 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x8f4>
  42883c:	e7940106 	ldr	r0, [r4, r6, lsl #2]
  428840:	fa002519 	blx	431cac <__aeabi_f2d>
  428844:	e59d2848 	ldr	r2, [sp, #2120]	; 0x848
  428848:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
  42884c:	fa002540 	blx	431d54 <__aeabi_dmul>
  428850:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428854:	e893000c 	ldm	r3, {r2, r3}
  428858:	fa002464 	blx	4319f0 <__adddf3>
  42885c:	e0853186 	add	r3, r5, r6, lsl #3
  428860:	e8830003 	stm	r3, {r0, r1}
  428864:	e2866001 	add	r6, r6, #1
  428868:	e1560007 	cmp	r6, r7
  42886c:	bafffff2 	blt	42883c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x8c8>
  428870:	e084410b 	add	r4, r4, fp, lsl #2
  428874:	e59d3010 	ldr	r3, [sp, #16]
  428878:	e0855183 	add	r5, r5, r3, lsl #3
  42887c:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  428880:	e2432001 	sub	r2, r3, #1
  428884:	e58d2844 	str	r2, [sp, #2116]	; 0x844
  428888:	e3530000 	cmp	r3, #0
  42888c:	1affffe4 	bne	428824 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x8b0>
  428890:	ea00005c 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  428894:	e1a0b1a1 	lsr	fp, r1, #3
  428898:	ea00004b 	b	4289cc <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa58>
  42889c:	e1a0a186 	lsl	sl, r6, #3
  4288a0:	e084300a 	add	r3, r4, sl
  4288a4:	e59d0848 	ldr	r0, [sp, #2120]	; 0x848
  4288a8:	e59d184c 	ldr	r1, [sp, #2124]	; 0x84c
  4288ac:	e893000c 	ldm	r3, {r2, r3}
  4288b0:	fa002527 	blx	431d54 <__aeabi_dmul>
  4288b4:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4288b8:	e893000c 	ldm	r3, {r2, r3}
  4288bc:	fa00244b 	blx	4319f0 <__adddf3>
  4288c0:	e1a08000 	mov	r8, r0
  4288c4:	e1a09001 	mov	r9, r1
  4288c8:	e2867001 	add	r7, r6, #1
  4288cc:	e1a07187 	lsl	r7, r7, #3
  4288d0:	e0843007 	add	r3, r4, r7
  4288d4:	e59d0848 	ldr	r0, [sp, #2120]	; 0x848
  4288d8:	e59d184c 	ldr	r1, [sp, #2124]	; 0x84c
  4288dc:	e893000c 	ldm	r3, {r2, r3}
  4288e0:	fa00251b 	blx	431d54 <__aeabi_dmul>
  4288e4:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4288e8:	e893000c 	ldm	r3, {r2, r3}
  4288ec:	fa00243f 	blx	4319f0 <__adddf3>
  4288f0:	e085a00a 	add	sl, r5, sl
  4288f4:	e88a0300 	stm	sl, {r8, r9}
  4288f8:	e0857007 	add	r7, r5, r7
  4288fc:	e8870003 	stm	r7, {r0, r1}
  428900:	e286a002 	add	sl, r6, #2
  428904:	e1a0a18a 	lsl	sl, sl, #3
  428908:	e084300a 	add	r3, r4, sl
  42890c:	e59d0848 	ldr	r0, [sp, #2120]	; 0x848
  428910:	e59d184c 	ldr	r1, [sp, #2124]	; 0x84c
  428914:	e893000c 	ldm	r3, {r2, r3}
  428918:	fa00250d 	blx	431d54 <__aeabi_dmul>
  42891c:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428920:	e893000c 	ldm	r3, {r2, r3}
  428924:	fa002431 	blx	4319f0 <__adddf3>
  428928:	e1a08000 	mov	r8, r0
  42892c:	e1a09001 	mov	r9, r1
  428930:	e2867003 	add	r7, r6, #3
  428934:	e1a07187 	lsl	r7, r7, #3
  428938:	e0843007 	add	r3, r4, r7
  42893c:	e59d0848 	ldr	r0, [sp, #2120]	; 0x848
  428940:	e59d184c 	ldr	r1, [sp, #2124]	; 0x84c
  428944:	e893000c 	ldm	r3, {r2, r3}
  428948:	fa002501 	blx	431d54 <__aeabi_dmul>
  42894c:	e28d3e85 	add	r3, sp, #2128	; 0x850
  428950:	e893000c 	ldm	r3, {r2, r3}
  428954:	fa002425 	blx	4319f0 <__adddf3>
  428958:	e085a00a 	add	sl, r5, sl
  42895c:	e88a0300 	stm	sl, {r8, r9}
  428960:	e0857007 	add	r7, r5, r7
  428964:	e8870003 	stm	r7, {r0, r1}
  428968:	e2866004 	add	r6, r6, #4
  42896c:	ea000000 	b	428974 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa00>
  428970:	e3a06000 	mov	r6, #0
  428974:	e59d8840 	ldr	r8, [sp, #2112]	; 0x840
  428978:	e2483004 	sub	r3, r8, #4
  42897c:	e1530006 	cmp	r3, r6
  428980:	aaffffc5 	bge	42889c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x928>
  428984:	ea00000b 	b	4289b8 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa44>
  428988:	e1a07186 	lsl	r7, r6, #3
  42898c:	e0843007 	add	r3, r4, r7
  428990:	e59d0848 	ldr	r0, [sp, #2120]	; 0x848
  428994:	e59d184c 	ldr	r1, [sp, #2124]	; 0x84c
  428998:	e893000c 	ldm	r3, {r2, r3}
  42899c:	fa0024ec 	blx	431d54 <__aeabi_dmul>
  4289a0:	e28d3e85 	add	r3, sp, #2128	; 0x850
  4289a4:	e893000c 	ldm	r3, {r2, r3}
  4289a8:	fa002410 	blx	4319f0 <__adddf3>
  4289ac:	e0857007 	add	r7, r5, r7
  4289b0:	e8870003 	stm	r7, {r0, r1}
  4289b4:	e2866001 	add	r6, r6, #1
  4289b8:	e1560008 	cmp	r6, r8
  4289bc:	bafffff1 	blt	428988 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa14>
  4289c0:	e084418b 	add	r4, r4, fp, lsl #3
  4289c4:	e59d3010 	ldr	r3, [sp, #16]
  4289c8:	e0855183 	add	r5, r5, r3, lsl #3
  4289cc:	e59d3844 	ldr	r3, [sp, #2116]	; 0x844
  4289d0:	e2432001 	sub	r2, r3, #1
  4289d4:	e58d2844 	str	r2, [sp, #2116]	; 0x844
  4289d8:	e3530000 	cmp	r3, #0
  4289dc:	1affffe3 	bne	428970 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0x9fc>
  4289e0:	ea000008 	b	428a08 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xa94>
  4289e4:	e59f0030 	ldr	r0, [pc, #48]	; 428a1c <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xaa8>
  4289e8:	e08f0000 	add	r0, pc, r0
  4289ec:	e59f102c 	ldr	r1, [pc, #44]	; 428a20 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xaac>
  4289f0:	e59f202c 	ldr	r2, [pc, #44]	; 428a24 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xab0>
  4289f4:	e08f2002 	add	r2, pc, r2
  4289f8:	e2822e17 	add	r2, r2, #368	; 0x170
  4289fc:	e59f3024 	ldr	r3, [pc, #36]	; 428a28 <_ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi+0xab4>
  428a00:	e08f3003 	add	r3, pc, r3
  428a04:	fa002cd2 	blx	433d54 <__assert_func>
  428a08:	e3a00000 	mov	r0, #0
  428a0c:	e28dde81 	add	sp, sp, #2064	; 0x810
  428a10:	e28dd00c 	add	sp, sp, #12
  428a14:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  428a18:	e12fff1e 	bx	lr
  428a1c:	000176d4 	.word	0x000176d4
  428a20:	00000538 	.word	0x00000538
  428a24:	00017380 	.word	0x00017380
  428a28:	0001709c 	.word	0x0001709c

00428a2c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi>:
  428a2c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  428a30:	e24dde42 	sub	sp, sp, #1056	; 0x420
  428a34:	e24dd00c 	sub	sp, sp, #12
  428a38:	e1a04000 	mov	r4, r0
  428a3c:	e1a07001 	mov	r7, r1
  428a40:	e1a05002 	mov	r5, r2
  428a44:	e59d2458 	ldr	r2, [sp, #1112]	; 0x458
  428a48:	e58d2014 	str	r2, [sp, #20]
  428a4c:	e59d245c 	ldr	r2, [sp, #1116]	; 0x45c
  428a50:	e58d2018 	str	r2, [sp, #24]
  428a54:	e59db460 	ldr	fp, [sp, #1120]	; 0x460
  428a58:	e59d6464 	ldr	r6, [sp, #1124]	; 0x464
  428a5c:	e1a03123 	lsr	r3, r3, #2
  428a60:	e58d3020 	str	r3, [sp, #32]
  428a64:	e59d3468 	ldr	r3, [sp, #1128]	; 0x468
  428a68:	e2033007 	and	r3, r3, #7
  428a6c:	e3530006 	cmp	r3, #6
  428a70:	908ff103 	addls	pc, pc, r3, lsl #2
  428a74:	ea000486 	b	429c94 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1268>
  428a78:	ea000005 	b	428a94 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x68>
  428a7c:	ea0000e8 	b	428e24 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x3f8>
  428a80:	ea0001ca 	b	4291b0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x784>
  428a84:	ea000283 	b	429498 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xa6c>
  428a88:	ea000347 	b	4297ac <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xd80>
  428a8c:	ea0003ab 	b	429940 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xf14>
  428a90:	ea00041a 	b	429b00 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x10d4>
  428a94:	e59da450 	ldr	sl, [sp, #1104]	; 0x450
  428a98:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  428a9c:	e003039a 	mul	r3, sl, r3
  428aa0:	e35300ff 	cmp	r3, #255	; 0xff
  428aa4:	ca000014 	bgt	428afc <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xd0>
  428aa8:	ea000025 	b	428b44 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x118>
  428aac:	e1a0000b 	mov	r0, fp
  428ab0:	e1a01006 	mov	r1, r6
  428ab4:	e3a02000 	mov	r2, #0
  428ab8:	e59f3fc0 	ldr	r3, [pc, #4032]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428abc:	fa0023cb 	blx	4319f0 <__adddf3>
  428ac0:	fa00236c 	blx	431878 <floor>
  428ac4:	fa0025ef 	blx	432288 <__aeabi_d2iz>
  428ac8:	e28d3e42 	add	r3, sp, #1056	; 0x420
  428acc:	e2833008 	add	r3, r3, #8
  428ad0:	e0833108 	add	r3, r3, r8, lsl #2
  428ad4:	e5030400 	str	r0, [r3, #-1024]	; 0x400
  428ad8:	e2888001 	add	r8, r8, #1
  428adc:	e1a0000b 	mov	r0, fp
  428ae0:	e1a01006 	mov	r1, r6
  428ae4:	e1a02009 	mov	r2, r9
  428ae8:	e1a0300a 	mov	r3, sl
  428aec:	fa0023bf 	blx	4319f0 <__adddf3>
  428af0:	e1a0b000 	mov	fp, r0
  428af4:	e1a06001 	mov	r6, r1
  428af8:	ea000002 	b	428b08 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xdc>
  428afc:	e3a08000 	mov	r8, #0
  428b00:	e59d9014 	ldr	r9, [sp, #20]
  428b04:	e59da018 	ldr	sl, [sp, #24]
  428b08:	e35800ff 	cmp	r8, #255	; 0xff
  428b0c:	daffffe6 	ble	428aac <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x80>
  428b10:	e28d3d11 	add	r3, sp, #1088	; 0x440
  428b14:	e283300c 	add	r3, r3, #12
  428b18:	e9930003 	ldmib	r3, {r0, r1}
  428b1c:	e88d0003 	stm	sp, {r0, r1}
  428b20:	e28d3028 	add	r3, sp, #40	; 0x28
  428b24:	e58d3008 	str	r3, [sp, #8]
  428b28:	e1a00004 	mov	r0, r4
  428b2c:	e1a01007 	mov	r1, r7
  428b30:	e1a02005 	mov	r2, r5
  428b34:	e59d3020 	ldr	r3, [sp, #32]
  428b38:	e1a03103 	lsl	r3, r3, #2
  428b3c:	eb001e96 	bl	43059c <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi>
  428b40:	ea00045c 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  428b44:	e59d0014 	ldr	r0, [sp, #20]
  428b48:	e59d3018 	ldr	r3, [sp, #24]
  428b4c:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  428b50:	e3a02000 	mov	r2, #0
  428b54:	e59f3f0c 	ldr	r3, [pc, #3852]	; 429a68 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x103c>
  428b58:	fa0025bb 	blx	43224c <__aeabi_dcmple>
  428b5c:	e3500000 	cmp	r0, #0
  428b60:	0a00004b 	beq	428c94 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x268>
  428b64:	e1a0000b 	mov	r0, fp
  428b68:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  428b6c:	e59f2ef8 	ldr	r2, [pc, #3832]	; 429a6c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1040>
  428b70:	e59f3ef8 	ldr	r3, [pc, #3832]	; 429a70 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1044>
  428b74:	fa0025b4 	blx	43224c <__aeabi_dcmple>
  428b78:	e3500000 	cmp	r0, #0
  428b7c:	0a000044 	beq	428c94 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x268>
  428b80:	e59d0014 	ldr	r0, [sp, #20]
  428b84:	e59d1018 	ldr	r1, [sp, #24]
  428b88:	e3a02000 	mov	r2, #0
  428b8c:	e59f3ee0 	ldr	r3, [pc, #3808]	; 429a74 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1048>
  428b90:	fa00246f 	blx	431d54 <__aeabi_dmul>
  428b94:	e3a02000 	mov	r2, #0
  428b98:	e59f3ee0 	ldr	r3, [pc, #3808]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428b9c:	fa002393 	blx	4319f0 <__adddf3>
  428ba0:	fa002334 	blx	431878 <floor>
  428ba4:	fa0025b7 	blx	432288 <__aeabi_d2iz>
  428ba8:	e1a08000 	mov	r8, r0
  428bac:	e1a0000b 	mov	r0, fp
  428bb0:	e1a01006 	mov	r1, r6
  428bb4:	e3a02000 	mov	r2, #0
  428bb8:	e59f3eb4 	ldr	r3, [pc, #3764]	; 429a74 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1048>
  428bbc:	fa002464 	blx	431d54 <__aeabi_dmul>
  428bc0:	e3a02000 	mov	r2, #0
  428bc4:	e59f3eb4 	ldr	r3, [pc, #3764]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428bc8:	fa002388 	blx	4319f0 <__adddf3>
  428bcc:	fa002329 	blx	431878 <floor>
  428bd0:	fa0025ac 	blx	432288 <__aeabi_d2iz>
  428bd4:	e59d1020 	ldr	r1, [sp, #32]
  428bd8:	ea000027 	b	428c7c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x250>
  428bdc:	e7d4c003 	ldrb	ip, [r4, r3]
  428be0:	e02c0c98 	mla	ip, r8, ip, r0
  428be4:	e28cc901 	add	ip, ip, #16384	; 0x4000
  428be8:	e1a0c7cc 	asr	ip, ip, #15
  428bec:	e283e001 	add	lr, r3, #1
  428bf0:	e7d4200e 	ldrb	r2, [r4, lr]
  428bf4:	e0220298 	mla	r2, r8, r2, r0
  428bf8:	e2822901 	add	r2, r2, #16384	; 0x4000
  428bfc:	e1a027c2 	asr	r2, r2, #15
  428c00:	e785c103 	str	ip, [r5, r3, lsl #2]
  428c04:	e785210e 	str	r2, [r5, lr, lsl #2]
  428c08:	e2836002 	add	r6, r3, #2
  428c0c:	e7d4c006 	ldrb	ip, [r4, r6]
  428c10:	e02c0c98 	mla	ip, r8, ip, r0
  428c14:	e28cc901 	add	ip, ip, #16384	; 0x4000
  428c18:	e1a0c7cc 	asr	ip, ip, #15
  428c1c:	e283e003 	add	lr, r3, #3
  428c20:	e7d4200e 	ldrb	r2, [r4, lr]
  428c24:	e0220298 	mla	r2, r8, r2, r0
  428c28:	e2822901 	add	r2, r2, #16384	; 0x4000
  428c2c:	e1a027c2 	asr	r2, r2, #15
  428c30:	e785c106 	str	ip, [r5, r6, lsl #2]
  428c34:	e785210e 	str	r2, [r5, lr, lsl #2]
  428c38:	e2833004 	add	r3, r3, #4
  428c3c:	ea000000 	b	428c44 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x218>
  428c40:	e3a03000 	mov	r3, #0
  428c44:	e24a2004 	sub	r2, sl, #4
  428c48:	e1520003 	cmp	r2, r3
  428c4c:	aaffffe2 	bge	428bdc <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1b0>
  428c50:	ea000005 	b	428c6c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x240>
  428c54:	e7d42003 	ldrb	r2, [r4, r3]
  428c58:	e0220298 	mla	r2, r8, r2, r0
  428c5c:	e2822901 	add	r2, r2, #16384	; 0x4000
  428c60:	e1a027c2 	asr	r2, r2, #15
  428c64:	e7852103 	str	r2, [r5, r3, lsl #2]
  428c68:	e2833001 	add	r3, r3, #1
  428c6c:	e153000a 	cmp	r3, sl
  428c70:	bafffff7 	blt	428c54 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x228>
  428c74:	e0844007 	add	r4, r4, r7
  428c78:	e0855101 	add	r5, r5, r1, lsl #2
  428c7c:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  428c80:	e2432001 	sub	r2, r3, #1
  428c84:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  428c88:	e3530000 	cmp	r3, #0
  428c8c:	1affffeb 	bne	428c40 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x214>
  428c90:	ea000408 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  428c94:	e58d7024 	str	r7, [sp, #36]	; 0x24
  428c98:	e58db01c 	str	fp, [sp, #28]
  428c9c:	ea00005a 	b	428e0c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x3e0>
  428ca0:	e7d40007 	ldrb	r0, [r4, r7]
  428ca4:	fa0023f7 	blx	431c88 <__aeabi_i2d>
  428ca8:	e59d2014 	ldr	r2, [sp, #20]
  428cac:	e59d3018 	ldr	r3, [sp, #24]
  428cb0:	fa002427 	blx	431d54 <__aeabi_dmul>
  428cb4:	e59db01c 	ldr	fp, [sp, #28]
  428cb8:	e1a0200b 	mov	r2, fp
  428cbc:	e1a03006 	mov	r3, r6
  428cc0:	fa00234a 	blx	4319f0 <__adddf3>
  428cc4:	e3a02000 	mov	r2, #0
  428cc8:	e59f3db0 	ldr	r3, [pc, #3504]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428ccc:	fa002347 	blx	4319f0 <__adddf3>
  428cd0:	fa0022e8 	blx	431878 <floor>
  428cd4:	fa00256b 	blx	432288 <__aeabi_d2iz>
  428cd8:	e1a09000 	mov	r9, r0
  428cdc:	e2878001 	add	r8, r7, #1
  428ce0:	e7d40008 	ldrb	r0, [r4, r8]
  428ce4:	fa0023e7 	blx	431c88 <__aeabi_i2d>
  428ce8:	e59d2014 	ldr	r2, [sp, #20]
  428cec:	e59d3018 	ldr	r3, [sp, #24]
  428cf0:	fa002417 	blx	431d54 <__aeabi_dmul>
  428cf4:	e1a0200b 	mov	r2, fp
  428cf8:	e1a03006 	mov	r3, r6
  428cfc:	fa00233b 	blx	4319f0 <__adddf3>
  428d00:	e3a02000 	mov	r2, #0
  428d04:	e59f3d74 	ldr	r3, [pc, #3444]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428d08:	fa002338 	blx	4319f0 <__adddf3>
  428d0c:	fa0022d9 	blx	431878 <floor>
  428d10:	fa00255c 	blx	432288 <__aeabi_d2iz>
  428d14:	e7859107 	str	r9, [r5, r7, lsl #2]
  428d18:	e7850108 	str	r0, [r5, r8, lsl #2]
  428d1c:	e2879002 	add	r9, r7, #2
  428d20:	e7d40009 	ldrb	r0, [r4, r9]
  428d24:	fa0023d7 	blx	431c88 <__aeabi_i2d>
  428d28:	e59d2014 	ldr	r2, [sp, #20]
  428d2c:	e59d3018 	ldr	r3, [sp, #24]
  428d30:	fa002407 	blx	431d54 <__aeabi_dmul>
  428d34:	e58db01c 	str	fp, [sp, #28]
  428d38:	e1a0200b 	mov	r2, fp
  428d3c:	e1a03006 	mov	r3, r6
  428d40:	fa00232a 	blx	4319f0 <__adddf3>
  428d44:	e3a02000 	mov	r2, #0
  428d48:	e59f3d30 	ldr	r3, [pc, #3376]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428d4c:	fa002327 	blx	4319f0 <__adddf3>
  428d50:	fa0022c8 	blx	431878 <floor>
  428d54:	fa00254b 	blx	432288 <__aeabi_d2iz>
  428d58:	e1a0b000 	mov	fp, r0
  428d5c:	e2878003 	add	r8, r7, #3
  428d60:	e7d40008 	ldrb	r0, [r4, r8]
  428d64:	fa0023c7 	blx	431c88 <__aeabi_i2d>
  428d68:	e59d2014 	ldr	r2, [sp, #20]
  428d6c:	e59d3018 	ldr	r3, [sp, #24]
  428d70:	fa0023f7 	blx	431d54 <__aeabi_dmul>
  428d74:	e59d201c 	ldr	r2, [sp, #28]
  428d78:	e1a03006 	mov	r3, r6
  428d7c:	fa00231b 	blx	4319f0 <__adddf3>
  428d80:	e3a02000 	mov	r2, #0
  428d84:	e59f3cf4 	ldr	r3, [pc, #3316]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428d88:	fa002318 	blx	4319f0 <__adddf3>
  428d8c:	fa0022b9 	blx	431878 <floor>
  428d90:	fa00253c 	blx	432288 <__aeabi_d2iz>
  428d94:	e785b109 	str	fp, [r5, r9, lsl #2]
  428d98:	e7850108 	str	r0, [r5, r8, lsl #2]
  428d9c:	e2877004 	add	r7, r7, #4
  428da0:	ea000000 	b	428da8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x37c>
  428da4:	e3a07000 	mov	r7, #0
  428da8:	e24a3004 	sub	r3, sl, #4
  428dac:	e1530007 	cmp	r3, r7
  428db0:	aaffffba 	bge	428ca0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x274>
  428db4:	ea00000e 	b	428df4 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x3c8>
  428db8:	e7d40007 	ldrb	r0, [r4, r7]
  428dbc:	fa0023b1 	blx	431c88 <__aeabi_i2d>
  428dc0:	e59d2014 	ldr	r2, [sp, #20]
  428dc4:	e59d3018 	ldr	r3, [sp, #24]
  428dc8:	fa0023e1 	blx	431d54 <__aeabi_dmul>
  428dcc:	e59d201c 	ldr	r2, [sp, #28]
  428dd0:	e1a03006 	mov	r3, r6
  428dd4:	fa002305 	blx	4319f0 <__adddf3>
  428dd8:	e3a02000 	mov	r2, #0
  428ddc:	e59f3c9c 	ldr	r3, [pc, #3228]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428de0:	fa002302 	blx	4319f0 <__adddf3>
  428de4:	fa0022a3 	blx	431878 <floor>
  428de8:	fa002526 	blx	432288 <__aeabi_d2iz>
  428dec:	e7850107 	str	r0, [r5, r7, lsl #2]
  428df0:	e2877001 	add	r7, r7, #1
  428df4:	e157000a 	cmp	r7, sl
  428df8:	baffffee 	blt	428db8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x38c>
  428dfc:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  428e00:	e0844003 	add	r4, r4, r3
  428e04:	e59d3020 	ldr	r3, [sp, #32]
  428e08:	e0855103 	add	r5, r5, r3, lsl #2
  428e0c:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  428e10:	e2432001 	sub	r2, r3, #1
  428e14:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  428e18:	e3530000 	cmp	r3, #0
  428e1c:	1affffe0 	bne	428da4 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x378>
  428e20:	ea0003a4 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  428e24:	e59da450 	ldr	sl, [sp, #1104]	; 0x450
  428e28:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  428e2c:	e003039a 	mul	r3, sl, r3
  428e30:	e35300ff 	cmp	r3, #255	; 0xff
  428e34:	ca000013 	bgt	428e88 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x45c>
  428e38:	ea000024 	b	428ed0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x4a4>
  428e3c:	e20800ff 	and	r0, r8, #255	; 0xff
  428e40:	fa002390 	blx	431c88 <__aeabi_i2d>
  428e44:	e1a02009 	mov	r2, r9
  428e48:	e1a0300a 	mov	r3, sl
  428e4c:	fa0023c0 	blx	431d54 <__aeabi_dmul>
  428e50:	e1a0200b 	mov	r2, fp
  428e54:	e1a03006 	mov	r3, r6
  428e58:	fa0022e4 	blx	4319f0 <__adddf3>
  428e5c:	e3a02000 	mov	r2, #0
  428e60:	e59f3c18 	ldr	r3, [pc, #3096]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428e64:	fa0022e1 	blx	4319f0 <__adddf3>
  428e68:	fa002282 	blx	431878 <floor>
  428e6c:	fa002505 	blx	432288 <__aeabi_d2iz>
  428e70:	e28d3e42 	add	r3, sp, #1056	; 0x420
  428e74:	e2833008 	add	r3, r3, #8
  428e78:	e0833108 	add	r3, r3, r8, lsl #2
  428e7c:	e5030400 	str	r0, [r3, #-1024]	; 0x400
  428e80:	e2888001 	add	r8, r8, #1
  428e84:	ea000002 	b	428e94 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x468>
  428e88:	e3a08000 	mov	r8, #0
  428e8c:	e59d9014 	ldr	r9, [sp, #20]
  428e90:	e59da018 	ldr	sl, [sp, #24]
  428e94:	e35800ff 	cmp	r8, #255	; 0xff
  428e98:	daffffe7 	ble	428e3c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x410>
  428e9c:	e28d3d11 	add	r3, sp, #1088	; 0x440
  428ea0:	e283300c 	add	r3, r3, #12
  428ea4:	e9930003 	ldmib	r3, {r0, r1}
  428ea8:	e88d0003 	stm	sp, {r0, r1}
  428eac:	e28d3028 	add	r3, sp, #40	; 0x28
  428eb0:	e58d3008 	str	r3, [sp, #8]
  428eb4:	e1a00004 	mov	r0, r4
  428eb8:	e1a01007 	mov	r1, r7
  428ebc:	e1a02005 	mov	r2, r5
  428ec0:	e59d3020 	ldr	r3, [sp, #32]
  428ec4:	e1a03103 	lsl	r3, r3, #2
  428ec8:	eb001db3 	bl	43059c <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi>
  428ecc:	ea000379 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  428ed0:	e59d0014 	ldr	r0, [sp, #20]
  428ed4:	e59d3018 	ldr	r3, [sp, #24]
  428ed8:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  428edc:	e3a02000 	mov	r2, #0
  428ee0:	e59f3b80 	ldr	r3, [pc, #2944]	; 429a68 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x103c>
  428ee4:	fa0024d8 	blx	43224c <__aeabi_dcmple>
  428ee8:	e3500000 	cmp	r0, #0
  428eec:	0a00004b 	beq	429020 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x5f4>
  428ef0:	e1a0000b 	mov	r0, fp
  428ef4:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  428ef8:	e59f2b6c 	ldr	r2, [pc, #2924]	; 429a6c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1040>
  428efc:	e59f3b6c 	ldr	r3, [pc, #2924]	; 429a70 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1044>
  428f00:	fa0024d1 	blx	43224c <__aeabi_dcmple>
  428f04:	e3500000 	cmp	r0, #0
  428f08:	0a000044 	beq	429020 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x5f4>
  428f0c:	e59d0014 	ldr	r0, [sp, #20]
  428f10:	e59d1018 	ldr	r1, [sp, #24]
  428f14:	e3a02000 	mov	r2, #0
  428f18:	e59f3b54 	ldr	r3, [pc, #2900]	; 429a74 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1048>
  428f1c:	fa00238c 	blx	431d54 <__aeabi_dmul>
  428f20:	e3a02000 	mov	r2, #0
  428f24:	e59f3b54 	ldr	r3, [pc, #2900]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428f28:	fa0022b0 	blx	4319f0 <__adddf3>
  428f2c:	fa002251 	blx	431878 <floor>
  428f30:	fa0024d4 	blx	432288 <__aeabi_d2iz>
  428f34:	e1a08000 	mov	r8, r0
  428f38:	e1a0000b 	mov	r0, fp
  428f3c:	e1a01006 	mov	r1, r6
  428f40:	e3a02000 	mov	r2, #0
  428f44:	e59f3b28 	ldr	r3, [pc, #2856]	; 429a74 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1048>
  428f48:	fa002381 	blx	431d54 <__aeabi_dmul>
  428f4c:	e3a02000 	mov	r2, #0
  428f50:	e59f3b28 	ldr	r3, [pc, #2856]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  428f54:	fa0022a5 	blx	4319f0 <__adddf3>
  428f58:	fa002246 	blx	431878 <floor>
  428f5c:	fa0024c9 	blx	432288 <__aeabi_d2iz>
  428f60:	e59d1020 	ldr	r1, [sp, #32]
  428f64:	ea000027 	b	429008 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x5dc>
  428f68:	e7d4c003 	ldrb	ip, [r4, r3]
  428f6c:	e02c0c98 	mla	ip, r8, ip, r0
  428f70:	e28cc901 	add	ip, ip, #16384	; 0x4000
  428f74:	e1a0c7cc 	asr	ip, ip, #15
  428f78:	e283e001 	add	lr, r3, #1
  428f7c:	e7d4200e 	ldrb	r2, [r4, lr]
  428f80:	e0220298 	mla	r2, r8, r2, r0
  428f84:	e2822901 	add	r2, r2, #16384	; 0x4000
  428f88:	e1a027c2 	asr	r2, r2, #15
  428f8c:	e785c103 	str	ip, [r5, r3, lsl #2]
  428f90:	e785210e 	str	r2, [r5, lr, lsl #2]
  428f94:	e2836002 	add	r6, r3, #2
  428f98:	e7d4c006 	ldrb	ip, [r4, r6]
  428f9c:	e02c0c98 	mla	ip, r8, ip, r0
  428fa0:	e28cc901 	add	ip, ip, #16384	; 0x4000
  428fa4:	e1a0c7cc 	asr	ip, ip, #15
  428fa8:	e283e003 	add	lr, r3, #3
  428fac:	e7d4200e 	ldrb	r2, [r4, lr]
  428fb0:	e0220298 	mla	r2, r8, r2, r0
  428fb4:	e2822901 	add	r2, r2, #16384	; 0x4000
  428fb8:	e1a027c2 	asr	r2, r2, #15
  428fbc:	e785c106 	str	ip, [r5, r6, lsl #2]
  428fc0:	e785210e 	str	r2, [r5, lr, lsl #2]
  428fc4:	e2833004 	add	r3, r3, #4
  428fc8:	ea000000 	b	428fd0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x5a4>
  428fcc:	e3a03000 	mov	r3, #0
  428fd0:	e24a2004 	sub	r2, sl, #4
  428fd4:	e1520003 	cmp	r2, r3
  428fd8:	aaffffe2 	bge	428f68 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x53c>
  428fdc:	ea000005 	b	428ff8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x5cc>
  428fe0:	e7d42003 	ldrb	r2, [r4, r3]
  428fe4:	e0220298 	mla	r2, r8, r2, r0
  428fe8:	e2822901 	add	r2, r2, #16384	; 0x4000
  428fec:	e1a027c2 	asr	r2, r2, #15
  428ff0:	e7852103 	str	r2, [r5, r3, lsl #2]
  428ff4:	e2833001 	add	r3, r3, #1
  428ff8:	e153000a 	cmp	r3, sl
  428ffc:	bafffff7 	blt	428fe0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x5b4>
  429000:	e0844007 	add	r4, r4, r7
  429004:	e0855101 	add	r5, r5, r1, lsl #2
  429008:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  42900c:	e2432001 	sub	r2, r3, #1
  429010:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  429014:	e3530000 	cmp	r3, #0
  429018:	1affffeb 	bne	428fcc <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x5a0>
  42901c:	ea000325 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  429020:	e58d7024 	str	r7, [sp, #36]	; 0x24
  429024:	e58db01c 	str	fp, [sp, #28]
  429028:	ea00005a 	b	429198 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x76c>
  42902c:	e7d40007 	ldrb	r0, [r4, r7]
  429030:	fa002314 	blx	431c88 <__aeabi_i2d>
  429034:	e59d2014 	ldr	r2, [sp, #20]
  429038:	e59d3018 	ldr	r3, [sp, #24]
  42903c:	fa002344 	blx	431d54 <__aeabi_dmul>
  429040:	e59db01c 	ldr	fp, [sp, #28]
  429044:	e1a0200b 	mov	r2, fp
  429048:	e1a03006 	mov	r3, r6
  42904c:	fa002267 	blx	4319f0 <__adddf3>
  429050:	e3a02000 	mov	r2, #0
  429054:	e59f3a24 	ldr	r3, [pc, #2596]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429058:	fa002264 	blx	4319f0 <__adddf3>
  42905c:	fa002205 	blx	431878 <floor>
  429060:	fa002488 	blx	432288 <__aeabi_d2iz>
  429064:	e1a09000 	mov	r9, r0
  429068:	e2878001 	add	r8, r7, #1
  42906c:	e7d40008 	ldrb	r0, [r4, r8]
  429070:	fa002304 	blx	431c88 <__aeabi_i2d>
  429074:	e59d2014 	ldr	r2, [sp, #20]
  429078:	e59d3018 	ldr	r3, [sp, #24]
  42907c:	fa002334 	blx	431d54 <__aeabi_dmul>
  429080:	e1a0200b 	mov	r2, fp
  429084:	e1a03006 	mov	r3, r6
  429088:	fa002258 	blx	4319f0 <__adddf3>
  42908c:	e3a02000 	mov	r2, #0
  429090:	e59f39e8 	ldr	r3, [pc, #2536]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429094:	fa002255 	blx	4319f0 <__adddf3>
  429098:	fa0021f6 	blx	431878 <floor>
  42909c:	fa002479 	blx	432288 <__aeabi_d2iz>
  4290a0:	e7859107 	str	r9, [r5, r7, lsl #2]
  4290a4:	e7850108 	str	r0, [r5, r8, lsl #2]
  4290a8:	e2879002 	add	r9, r7, #2
  4290ac:	e7d40009 	ldrb	r0, [r4, r9]
  4290b0:	fa0022f4 	blx	431c88 <__aeabi_i2d>
  4290b4:	e59d2014 	ldr	r2, [sp, #20]
  4290b8:	e59d3018 	ldr	r3, [sp, #24]
  4290bc:	fa002324 	blx	431d54 <__aeabi_dmul>
  4290c0:	e58db01c 	str	fp, [sp, #28]
  4290c4:	e1a0200b 	mov	r2, fp
  4290c8:	e1a03006 	mov	r3, r6
  4290cc:	fa002247 	blx	4319f0 <__adddf3>
  4290d0:	e3a02000 	mov	r2, #0
  4290d4:	e59f39a4 	ldr	r3, [pc, #2468]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4290d8:	fa002244 	blx	4319f0 <__adddf3>
  4290dc:	fa0021e5 	blx	431878 <floor>
  4290e0:	fa002468 	blx	432288 <__aeabi_d2iz>
  4290e4:	e1a0b000 	mov	fp, r0
  4290e8:	e2878003 	add	r8, r7, #3
  4290ec:	e7d40008 	ldrb	r0, [r4, r8]
  4290f0:	fa0022e4 	blx	431c88 <__aeabi_i2d>
  4290f4:	e59d2014 	ldr	r2, [sp, #20]
  4290f8:	e59d3018 	ldr	r3, [sp, #24]
  4290fc:	fa002314 	blx	431d54 <__aeabi_dmul>
  429100:	e59d201c 	ldr	r2, [sp, #28]
  429104:	e1a03006 	mov	r3, r6
  429108:	fa002238 	blx	4319f0 <__adddf3>
  42910c:	e3a02000 	mov	r2, #0
  429110:	e59f3968 	ldr	r3, [pc, #2408]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429114:	fa002235 	blx	4319f0 <__adddf3>
  429118:	fa0021d6 	blx	431878 <floor>
  42911c:	fa002459 	blx	432288 <__aeabi_d2iz>
  429120:	e785b109 	str	fp, [r5, r9, lsl #2]
  429124:	e7850108 	str	r0, [r5, r8, lsl #2]
  429128:	e2877004 	add	r7, r7, #4
  42912c:	ea000000 	b	429134 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x708>
  429130:	e3a07000 	mov	r7, #0
  429134:	e24a3004 	sub	r3, sl, #4
  429138:	e1530007 	cmp	r3, r7
  42913c:	aaffffba 	bge	42902c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x600>
  429140:	ea00000e 	b	429180 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x754>
  429144:	e7d40007 	ldrb	r0, [r4, r7]
  429148:	fa0022ce 	blx	431c88 <__aeabi_i2d>
  42914c:	e59d2014 	ldr	r2, [sp, #20]
  429150:	e59d3018 	ldr	r3, [sp, #24]
  429154:	fa0022fe 	blx	431d54 <__aeabi_dmul>
  429158:	e59d201c 	ldr	r2, [sp, #28]
  42915c:	e1a03006 	mov	r3, r6
  429160:	fa002222 	blx	4319f0 <__adddf3>
  429164:	e3a02000 	mov	r2, #0
  429168:	e59f3910 	ldr	r3, [pc, #2320]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  42916c:	fa00221f 	blx	4319f0 <__adddf3>
  429170:	fa0021c0 	blx	431878 <floor>
  429174:	fa002443 	blx	432288 <__aeabi_d2iz>
  429178:	e7850107 	str	r0, [r5, r7, lsl #2]
  42917c:	e2877001 	add	r7, r7, #1
  429180:	e157000a 	cmp	r7, sl
  429184:	baffffee 	blt	429144 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x718>
  429188:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42918c:	e0844003 	add	r4, r4, r3
  429190:	e59d3020 	ldr	r3, [sp, #32]
  429194:	e0855103 	add	r5, r5, r3, lsl #2
  429198:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  42919c:	e2432001 	sub	r2, r3, #1
  4291a0:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  4291a4:	e3530000 	cmp	r3, #0
  4291a8:	1affffe0 	bne	429130 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x704>
  4291ac:	ea0002c1 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  4291b0:	e59d0014 	ldr	r0, [sp, #20]
  4291b4:	e59d3018 	ldr	r3, [sp, #24]
  4291b8:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  4291bc:	e3a02000 	mov	r2, #0
  4291c0:	e59f38b0 	ldr	r3, [pc, #2224]	; 429a78 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x104c>
  4291c4:	fa002420 	blx	43224c <__aeabi_dcmple>
  4291c8:	e3500000 	cmp	r0, #0
  4291cc:	0a000047 	beq	4292f0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x8c4>
  4291d0:	e1a0000b 	mov	r0, fp
  4291d4:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  4291d8:	e3a02000 	mov	r2, #0
  4291dc:	e59f3898 	ldr	r3, [pc, #2200]	; 429a7c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1050>
  4291e0:	fa002414 	blx	432238 <__aeabi_dcmplt>
  4291e4:	e3500000 	cmp	r0, #0
  4291e8:	0a000040 	beq	4292f0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x8c4>
  4291ec:	e59d0014 	ldr	r0, [sp, #20]
  4291f0:	e59d1018 	ldr	r1, [sp, #24]
  4291f4:	e3a02000 	mov	r2, #0
  4291f8:	e59f3874 	ldr	r3, [pc, #2164]	; 429a74 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1048>
  4291fc:	fa0022d4 	blx	431d54 <__aeabi_dmul>
  429200:	e3a02000 	mov	r2, #0
  429204:	e59f3874 	ldr	r3, [pc, #2164]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429208:	fa0021f8 	blx	4319f0 <__adddf3>
  42920c:	fa002199 	blx	431878 <floor>
  429210:	fa00241c 	blx	432288 <__aeabi_d2iz>
  429214:	e1a070a7 	lsr	r7, r7, #1
  429218:	e59d1020 	ldr	r1, [sp, #32]
  42921c:	ea00002d 	b	4292d8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x8ac>
  429220:	e1a02083 	lsl	r2, r3, #1
  429224:	e194c0b2 	ldrh	ip, [r4, r2]
  429228:	e00c0c90 	mul	ip, r0, ip
  42922c:	e28cc901 	add	ip, ip, #16384	; 0x4000
  429230:	e1a0c7cc 	asr	ip, ip, #15
  429234:	e283e001 	add	lr, r3, #1
  429238:	e1a0208e 	lsl	r2, lr, #1
  42923c:	e19420b2 	ldrh	r2, [r4, r2]
  429240:	e0020290 	mul	r2, r0, r2
  429244:	e2822901 	add	r2, r2, #16384	; 0x4000
  429248:	e1a027c2 	asr	r2, r2, #15
  42924c:	e785c103 	str	ip, [r5, r3, lsl #2]
  429250:	e785210e 	str	r2, [r5, lr, lsl #2]
  429254:	e283e002 	add	lr, r3, #2
  429258:	e1a0208e 	lsl	r2, lr, #1
  42925c:	e194c0b2 	ldrh	ip, [r4, r2]
  429260:	e00c0c90 	mul	ip, r0, ip
  429264:	e28cc901 	add	ip, ip, #16384	; 0x4000
  429268:	e1a0c7cc 	asr	ip, ip, #15
  42926c:	e2836003 	add	r6, r3, #3
  429270:	e1a02086 	lsl	r2, r6, #1
  429274:	e19420b2 	ldrh	r2, [r4, r2]
  429278:	e0020290 	mul	r2, r0, r2
  42927c:	e2822901 	add	r2, r2, #16384	; 0x4000
  429280:	e1a027c2 	asr	r2, r2, #15
  429284:	e785c10e 	str	ip, [r5, lr, lsl #2]
  429288:	e7852106 	str	r2, [r5, r6, lsl #2]
  42928c:	e2833004 	add	r3, r3, #4
  429290:	ea000000 	b	429298 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x86c>
  429294:	e3a03000 	mov	r3, #0
  429298:	e59dc450 	ldr	ip, [sp, #1104]	; 0x450
  42929c:	e24c2004 	sub	r2, ip, #4
  4292a0:	e1520003 	cmp	r2, r3
  4292a4:	aaffffdd 	bge	429220 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x7f4>
  4292a8:	ea000006 	b	4292c8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x89c>
  4292ac:	e1a02083 	lsl	r2, r3, #1
  4292b0:	e19420b2 	ldrh	r2, [r4, r2]
  4292b4:	e0020290 	mul	r2, r0, r2
  4292b8:	e2822901 	add	r2, r2, #16384	; 0x4000
  4292bc:	e1a027c2 	asr	r2, r2, #15
  4292c0:	e7852103 	str	r2, [r5, r3, lsl #2]
  4292c4:	e2833001 	add	r3, r3, #1
  4292c8:	e153000c 	cmp	r3, ip
  4292cc:	bafffff6 	blt	4292ac <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x880>
  4292d0:	e0844087 	add	r4, r4, r7, lsl #1
  4292d4:	e0855101 	add	r5, r5, r1, lsl #2
  4292d8:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  4292dc:	e2432001 	sub	r2, r3, #1
  4292e0:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  4292e4:	e3530000 	cmp	r3, #0
  4292e8:	1affffe9 	bne	429294 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x868>
  4292ec:	ea000271 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  4292f0:	e1a030a7 	lsr	r3, r7, #1
  4292f4:	e58d301c 	str	r3, [sp, #28]
  4292f8:	ea000060 	b	429480 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xa54>
  4292fc:	e1a03087 	lsl	r3, r7, #1
  429300:	e19400b3 	ldrh	r0, [r4, r3]
  429304:	fa00225f 	blx	431c88 <__aeabi_i2d>
  429308:	e59d2014 	ldr	r2, [sp, #20]
  42930c:	e59da018 	ldr	sl, [sp, #24]
  429310:	e1a0300a 	mov	r3, sl
  429314:	fa00228e 	blx	431d54 <__aeabi_dmul>
  429318:	e1a0200b 	mov	r2, fp
  42931c:	e1a03006 	mov	r3, r6
  429320:	fa0021b2 	blx	4319f0 <__adddf3>
  429324:	e3a02000 	mov	r2, #0
  429328:	e59f3750 	ldr	r3, [pc, #1872]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  42932c:	fa0021af 	blx	4319f0 <__adddf3>
  429330:	fa002150 	blx	431878 <floor>
  429334:	fa0023d3 	blx	432288 <__aeabi_d2iz>
  429338:	e1a09000 	mov	r9, r0
  42933c:	e2878001 	add	r8, r7, #1
  429340:	e1a03088 	lsl	r3, r8, #1
  429344:	e19400b3 	ldrh	r0, [r4, r3]
  429348:	fa00224e 	blx	431c88 <__aeabi_i2d>
  42934c:	e59d2014 	ldr	r2, [sp, #20]
  429350:	e1a0300a 	mov	r3, sl
  429354:	fa00227e 	blx	431d54 <__aeabi_dmul>
  429358:	e1a0200b 	mov	r2, fp
  42935c:	e1a03006 	mov	r3, r6
  429360:	fa0021a2 	blx	4319f0 <__adddf3>
  429364:	e3a02000 	mov	r2, #0
  429368:	e59f3710 	ldr	r3, [pc, #1808]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  42936c:	fa00219f 	blx	4319f0 <__adddf3>
  429370:	fa002140 	blx	431878 <floor>
  429374:	fa0023c3 	blx	432288 <__aeabi_d2iz>
  429378:	e7859107 	str	r9, [r5, r7, lsl #2]
  42937c:	e7850108 	str	r0, [r5, r8, lsl #2]
  429380:	e2879002 	add	r9, r7, #2
  429384:	e1a03089 	lsl	r3, r9, #1
  429388:	e19400b3 	ldrh	r0, [r4, r3]
  42938c:	fa00223d 	blx	431c88 <__aeabi_i2d>
  429390:	e59d2014 	ldr	r2, [sp, #20]
  429394:	e58da018 	str	sl, [sp, #24]
  429398:	e1a0300a 	mov	r3, sl
  42939c:	fa00226c 	blx	431d54 <__aeabi_dmul>
  4293a0:	e1a0200b 	mov	r2, fp
  4293a4:	e1a03006 	mov	r3, r6
  4293a8:	fa002190 	blx	4319f0 <__adddf3>
  4293ac:	e3a02000 	mov	r2, #0
  4293b0:	e59f36c8 	ldr	r3, [pc, #1736]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4293b4:	fa00218d 	blx	4319f0 <__adddf3>
  4293b8:	fa00212e 	blx	431878 <floor>
  4293bc:	fa0023b1 	blx	432288 <__aeabi_d2iz>
  4293c0:	e1a0a000 	mov	sl, r0
  4293c4:	e2878003 	add	r8, r7, #3
  4293c8:	e1a03088 	lsl	r3, r8, #1
  4293cc:	e19400b3 	ldrh	r0, [r4, r3]
  4293d0:	fa00222c 	blx	431c88 <__aeabi_i2d>
  4293d4:	e59d2014 	ldr	r2, [sp, #20]
  4293d8:	e59d3018 	ldr	r3, [sp, #24]
  4293dc:	fa00225c 	blx	431d54 <__aeabi_dmul>
  4293e0:	e1a0200b 	mov	r2, fp
  4293e4:	e1a03006 	mov	r3, r6
  4293e8:	fa002180 	blx	4319f0 <__adddf3>
  4293ec:	e3a02000 	mov	r2, #0
  4293f0:	e59f3688 	ldr	r3, [pc, #1672]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4293f4:	fa00217d 	blx	4319f0 <__adddf3>
  4293f8:	fa00211e 	blx	431878 <floor>
  4293fc:	fa0023a1 	blx	432288 <__aeabi_d2iz>
  429400:	e785a109 	str	sl, [r5, r9, lsl #2]
  429404:	e7850108 	str	r0, [r5, r8, lsl #2]
  429408:	e2877004 	add	r7, r7, #4
  42940c:	ea000000 	b	429414 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x9e8>
  429410:	e3a07000 	mov	r7, #0
  429414:	e59d8450 	ldr	r8, [sp, #1104]	; 0x450
  429418:	e2483004 	sub	r3, r8, #4
  42941c:	e1530007 	cmp	r3, r7
  429420:	aaffffb5 	bge	4292fc <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x8d0>
  429424:	ea00000f 	b	429468 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xa3c>
  429428:	e1a03087 	lsl	r3, r7, #1
  42942c:	e19400b3 	ldrh	r0, [r4, r3]
  429430:	fa002214 	blx	431c88 <__aeabi_i2d>
  429434:	e59d2014 	ldr	r2, [sp, #20]
  429438:	e59d3018 	ldr	r3, [sp, #24]
  42943c:	fa002244 	blx	431d54 <__aeabi_dmul>
  429440:	e1a0200b 	mov	r2, fp
  429444:	e1a03006 	mov	r3, r6
  429448:	fa002168 	blx	4319f0 <__adddf3>
  42944c:	e3a02000 	mov	r2, #0
  429450:	e59f3628 	ldr	r3, [pc, #1576]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429454:	fa002165 	blx	4319f0 <__adddf3>
  429458:	fa002106 	blx	431878 <floor>
  42945c:	fa002389 	blx	432288 <__aeabi_d2iz>
  429460:	e7850107 	str	r0, [r5, r7, lsl #2]
  429464:	e2877001 	add	r7, r7, #1
  429468:	e1570008 	cmp	r7, r8
  42946c:	baffffed 	blt	429428 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x9fc>
  429470:	e59d301c 	ldr	r3, [sp, #28]
  429474:	e0844083 	add	r4, r4, r3, lsl #1
  429478:	e59d3020 	ldr	r3, [sp, #32]
  42947c:	e0855103 	add	r5, r5, r3, lsl #2
  429480:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  429484:	e2432001 	sub	r2, r3, #1
  429488:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  42948c:	e3530000 	cmp	r3, #0
  429490:	1affffde 	bne	429410 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x9e4>
  429494:	ea000207 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  429498:	e59d0014 	ldr	r0, [sp, #20]
  42949c:	e59d3018 	ldr	r3, [sp, #24]
  4294a0:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  4294a4:	e3a02000 	mov	r2, #0
  4294a8:	e59f35c8 	ldr	r3, [pc, #1480]	; 429a78 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x104c>
  4294ac:	fa002366 	blx	43224c <__aeabi_dcmple>
  4294b0:	e3500000 	cmp	r0, #0
  4294b4:	0a000052 	beq	429604 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xbd8>
  4294b8:	e1a0000b 	mov	r0, fp
  4294bc:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  4294c0:	e59f25a4 	ldr	r2, [pc, #1444]	; 429a6c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1040>
  4294c4:	e59f35a4 	ldr	r3, [pc, #1444]	; 429a70 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1044>
  4294c8:	fa00235f 	blx	43224c <__aeabi_dcmple>
  4294cc:	e3500000 	cmp	r0, #0
  4294d0:	0a00004b 	beq	429604 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xbd8>
  4294d4:	e59d0014 	ldr	r0, [sp, #20]
  4294d8:	e59d1018 	ldr	r1, [sp, #24]
  4294dc:	e3a02000 	mov	r2, #0
  4294e0:	e59f358c 	ldr	r3, [pc, #1420]	; 429a74 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1048>
  4294e4:	fa00221a 	blx	431d54 <__aeabi_dmul>
  4294e8:	e3a02000 	mov	r2, #0
  4294ec:	e59f358c 	ldr	r3, [pc, #1420]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4294f0:	fa00213e 	blx	4319f0 <__adddf3>
  4294f4:	fa0020df 	blx	431878 <floor>
  4294f8:	fa002362 	blx	432288 <__aeabi_d2iz>
  4294fc:	e1a08000 	mov	r8, r0
  429500:	e1a0000b 	mov	r0, fp
  429504:	e1a01006 	mov	r1, r6
  429508:	e3a02000 	mov	r2, #0
  42950c:	e59f3560 	ldr	r3, [pc, #1376]	; 429a74 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1048>
  429510:	fa00220f 	blx	431d54 <__aeabi_dmul>
  429514:	e3a02000 	mov	r2, #0
  429518:	e59f3560 	ldr	r3, [pc, #1376]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  42951c:	fa002133 	blx	4319f0 <__adddf3>
  429520:	fa0020d4 	blx	431878 <floor>
  429524:	fa002357 	blx	432288 <__aeabi_d2iz>
  429528:	e1a070a7 	lsr	r7, r7, #1
  42952c:	e59d1020 	ldr	r1, [sp, #32]
  429530:	ea00002d 	b	4295ec <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xbc0>
  429534:	e1a02083 	lsl	r2, r3, #1
  429538:	e194c0f2 	ldrsh	ip, [r4, r2]
  42953c:	e02c0c98 	mla	ip, r8, ip, r0
  429540:	e28cc901 	add	ip, ip, #16384	; 0x4000
  429544:	e1a0c7cc 	asr	ip, ip, #15
  429548:	e283e001 	add	lr, r3, #1
  42954c:	e1a0208e 	lsl	r2, lr, #1
  429550:	e19420f2 	ldrsh	r2, [r4, r2]
  429554:	e0220298 	mla	r2, r8, r2, r0
  429558:	e2822901 	add	r2, r2, #16384	; 0x4000
  42955c:	e1a027c2 	asr	r2, r2, #15
  429560:	e785c103 	str	ip, [r5, r3, lsl #2]
  429564:	e785210e 	str	r2, [r5, lr, lsl #2]
  429568:	e283e002 	add	lr, r3, #2
  42956c:	e1a0208e 	lsl	r2, lr, #1
  429570:	e194c0f2 	ldrsh	ip, [r4, r2]
  429574:	e02c0c98 	mla	ip, r8, ip, r0
  429578:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42957c:	e1a0c7cc 	asr	ip, ip, #15
  429580:	e2836003 	add	r6, r3, #3
  429584:	e1a02086 	lsl	r2, r6, #1
  429588:	e19420f2 	ldrsh	r2, [r4, r2]
  42958c:	e0220298 	mla	r2, r8, r2, r0
  429590:	e2822901 	add	r2, r2, #16384	; 0x4000
  429594:	e1a027c2 	asr	r2, r2, #15
  429598:	e785c10e 	str	ip, [r5, lr, lsl #2]
  42959c:	e7852106 	str	r2, [r5, r6, lsl #2]
  4295a0:	e2833004 	add	r3, r3, #4
  4295a4:	ea000000 	b	4295ac <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xb80>
  4295a8:	e3a03000 	mov	r3, #0
  4295ac:	e59dc450 	ldr	ip, [sp, #1104]	; 0x450
  4295b0:	e24c2004 	sub	r2, ip, #4
  4295b4:	e1520003 	cmp	r2, r3
  4295b8:	aaffffdd 	bge	429534 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xb08>
  4295bc:	ea000006 	b	4295dc <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xbb0>
  4295c0:	e1a02083 	lsl	r2, r3, #1
  4295c4:	e19420f2 	ldrsh	r2, [r4, r2]
  4295c8:	e0220298 	mla	r2, r8, r2, r0
  4295cc:	e2822901 	add	r2, r2, #16384	; 0x4000
  4295d0:	e1a027c2 	asr	r2, r2, #15
  4295d4:	e7852103 	str	r2, [r5, r3, lsl #2]
  4295d8:	e2833001 	add	r3, r3, #1
  4295dc:	e153000c 	cmp	r3, ip
  4295e0:	bafffff6 	blt	4295c0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xb94>
  4295e4:	e0844087 	add	r4, r4, r7, lsl #1
  4295e8:	e0855101 	add	r5, r5, r1, lsl #2
  4295ec:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  4295f0:	e2432001 	sub	r2, r3, #1
  4295f4:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  4295f8:	e3530000 	cmp	r3, #0
  4295fc:	1affffe9 	bne	4295a8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xb7c>
  429600:	ea0001ac 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  429604:	e1a030a7 	lsr	r3, r7, #1
  429608:	e58d301c 	str	r3, [sp, #28]
  42960c:	ea000060 	b	429794 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xd68>
  429610:	e1a03087 	lsl	r3, r7, #1
  429614:	e19400f3 	ldrsh	r0, [r4, r3]
  429618:	fa00219a 	blx	431c88 <__aeabi_i2d>
  42961c:	e59d2014 	ldr	r2, [sp, #20]
  429620:	e59da018 	ldr	sl, [sp, #24]
  429624:	e1a0300a 	mov	r3, sl
  429628:	fa0021c9 	blx	431d54 <__aeabi_dmul>
  42962c:	e1a0200b 	mov	r2, fp
  429630:	e1a03006 	mov	r3, r6
  429634:	fa0020ed 	blx	4319f0 <__adddf3>
  429638:	e3a02000 	mov	r2, #0
  42963c:	e59f343c 	ldr	r3, [pc, #1084]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429640:	fa0020ea 	blx	4319f0 <__adddf3>
  429644:	fa00208b 	blx	431878 <floor>
  429648:	fa00230e 	blx	432288 <__aeabi_d2iz>
  42964c:	e1a09000 	mov	r9, r0
  429650:	e2878001 	add	r8, r7, #1
  429654:	e1a03088 	lsl	r3, r8, #1
  429658:	e19400f3 	ldrsh	r0, [r4, r3]
  42965c:	fa002189 	blx	431c88 <__aeabi_i2d>
  429660:	e59d2014 	ldr	r2, [sp, #20]
  429664:	e1a0300a 	mov	r3, sl
  429668:	fa0021b9 	blx	431d54 <__aeabi_dmul>
  42966c:	e1a0200b 	mov	r2, fp
  429670:	e1a03006 	mov	r3, r6
  429674:	fa0020dd 	blx	4319f0 <__adddf3>
  429678:	e3a02000 	mov	r2, #0
  42967c:	e59f33fc 	ldr	r3, [pc, #1020]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429680:	fa0020da 	blx	4319f0 <__adddf3>
  429684:	fa00207b 	blx	431878 <floor>
  429688:	fa0022fe 	blx	432288 <__aeabi_d2iz>
  42968c:	e7859107 	str	r9, [r5, r7, lsl #2]
  429690:	e7850108 	str	r0, [r5, r8, lsl #2]
  429694:	e2879002 	add	r9, r7, #2
  429698:	e1a03089 	lsl	r3, r9, #1
  42969c:	e19400f3 	ldrsh	r0, [r4, r3]
  4296a0:	fa002178 	blx	431c88 <__aeabi_i2d>
  4296a4:	e59d2014 	ldr	r2, [sp, #20]
  4296a8:	e58da018 	str	sl, [sp, #24]
  4296ac:	e1a0300a 	mov	r3, sl
  4296b0:	fa0021a7 	blx	431d54 <__aeabi_dmul>
  4296b4:	e1a0200b 	mov	r2, fp
  4296b8:	e1a03006 	mov	r3, r6
  4296bc:	fa0020cb 	blx	4319f0 <__adddf3>
  4296c0:	e3a02000 	mov	r2, #0
  4296c4:	e59f33b4 	ldr	r3, [pc, #948]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4296c8:	fa0020c8 	blx	4319f0 <__adddf3>
  4296cc:	fa002069 	blx	431878 <floor>
  4296d0:	fa0022ec 	blx	432288 <__aeabi_d2iz>
  4296d4:	e1a0a000 	mov	sl, r0
  4296d8:	e2878003 	add	r8, r7, #3
  4296dc:	e1a03088 	lsl	r3, r8, #1
  4296e0:	e19400f3 	ldrsh	r0, [r4, r3]
  4296e4:	fa002167 	blx	431c88 <__aeabi_i2d>
  4296e8:	e59d2014 	ldr	r2, [sp, #20]
  4296ec:	e59d3018 	ldr	r3, [sp, #24]
  4296f0:	fa002197 	blx	431d54 <__aeabi_dmul>
  4296f4:	e1a0200b 	mov	r2, fp
  4296f8:	e1a03006 	mov	r3, r6
  4296fc:	fa0020bb 	blx	4319f0 <__adddf3>
  429700:	e3a02000 	mov	r2, #0
  429704:	e59f3374 	ldr	r3, [pc, #884]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429708:	fa0020b8 	blx	4319f0 <__adddf3>
  42970c:	fa002059 	blx	431878 <floor>
  429710:	fa0022dc 	blx	432288 <__aeabi_d2iz>
  429714:	e785a109 	str	sl, [r5, r9, lsl #2]
  429718:	e7850108 	str	r0, [r5, r8, lsl #2]
  42971c:	e2877004 	add	r7, r7, #4
  429720:	ea000000 	b	429728 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xcfc>
  429724:	e3a07000 	mov	r7, #0
  429728:	e59d8450 	ldr	r8, [sp, #1104]	; 0x450
  42972c:	e2483004 	sub	r3, r8, #4
  429730:	e1530007 	cmp	r3, r7
  429734:	aaffffb5 	bge	429610 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xbe4>
  429738:	ea00000f 	b	42977c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xd50>
  42973c:	e1a03087 	lsl	r3, r7, #1
  429740:	e19400f3 	ldrsh	r0, [r4, r3]
  429744:	fa00214f 	blx	431c88 <__aeabi_i2d>
  429748:	e59d2014 	ldr	r2, [sp, #20]
  42974c:	e59d3018 	ldr	r3, [sp, #24]
  429750:	fa00217f 	blx	431d54 <__aeabi_dmul>
  429754:	e1a0200b 	mov	r2, fp
  429758:	e1a03006 	mov	r3, r6
  42975c:	fa0020a3 	blx	4319f0 <__adddf3>
  429760:	e3a02000 	mov	r2, #0
  429764:	e59f3314 	ldr	r3, [pc, #788]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429768:	fa0020a0 	blx	4319f0 <__adddf3>
  42976c:	fa002041 	blx	431878 <floor>
  429770:	fa0022c4 	blx	432288 <__aeabi_d2iz>
  429774:	e7850107 	str	r0, [r5, r7, lsl #2]
  429778:	e2877001 	add	r7, r7, #1
  42977c:	e1570008 	cmp	r7, r8
  429780:	baffffed 	blt	42973c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xd10>
  429784:	e59d301c 	ldr	r3, [sp, #28]
  429788:	e0844083 	add	r4, r4, r3, lsl #1
  42978c:	e59d3020 	ldr	r3, [sp, #32]
  429790:	e0855103 	add	r5, r5, r3, lsl #2
  429794:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  429798:	e2432001 	sub	r2, r3, #1
  42979c:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  4297a0:	e3530000 	cmp	r3, #0
  4297a4:	1affffde 	bne	429724 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xcf8>
  4297a8:	ea000142 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  4297ac:	e1a03121 	lsr	r3, r1, #2
  4297b0:	e58d301c 	str	r3, [sp, #28]
  4297b4:	ea00005b 	b	429928 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xefc>
  4297b8:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  4297bc:	fa002131 	blx	431c88 <__aeabi_i2d>
  4297c0:	e59d2014 	ldr	r2, [sp, #20]
  4297c4:	e59da018 	ldr	sl, [sp, #24]
  4297c8:	e1a0300a 	mov	r3, sl
  4297cc:	fa002160 	blx	431d54 <__aeabi_dmul>
  4297d0:	e1a0200b 	mov	r2, fp
  4297d4:	e1a03006 	mov	r3, r6
  4297d8:	fa002084 	blx	4319f0 <__adddf3>
  4297dc:	e3a02000 	mov	r2, #0
  4297e0:	e59f3298 	ldr	r3, [pc, #664]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4297e4:	fa002081 	blx	4319f0 <__adddf3>
  4297e8:	fa002022 	blx	431878 <floor>
  4297ec:	fa0022a5 	blx	432288 <__aeabi_d2iz>
  4297f0:	e1a09000 	mov	r9, r0
  4297f4:	e2878001 	add	r8, r7, #1
  4297f8:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  4297fc:	fa002121 	blx	431c88 <__aeabi_i2d>
  429800:	e59d2014 	ldr	r2, [sp, #20]
  429804:	e1a0300a 	mov	r3, sl
  429808:	fa002151 	blx	431d54 <__aeabi_dmul>
  42980c:	e1a0200b 	mov	r2, fp
  429810:	e1a03006 	mov	r3, r6
  429814:	fa002075 	blx	4319f0 <__adddf3>
  429818:	e3a02000 	mov	r2, #0
  42981c:	e59f325c 	ldr	r3, [pc, #604]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429820:	fa002072 	blx	4319f0 <__adddf3>
  429824:	fa002013 	blx	431878 <floor>
  429828:	fa002296 	blx	432288 <__aeabi_d2iz>
  42982c:	e7859107 	str	r9, [r5, r7, lsl #2]
  429830:	e7850108 	str	r0, [r5, r8, lsl #2]
  429834:	e2879002 	add	r9, r7, #2
  429838:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  42983c:	fa002111 	blx	431c88 <__aeabi_i2d>
  429840:	e59d2014 	ldr	r2, [sp, #20]
  429844:	e58da018 	str	sl, [sp, #24]
  429848:	e1a0300a 	mov	r3, sl
  42984c:	fa002140 	blx	431d54 <__aeabi_dmul>
  429850:	e1a0200b 	mov	r2, fp
  429854:	e1a03006 	mov	r3, r6
  429858:	fa002064 	blx	4319f0 <__adddf3>
  42985c:	e3a02000 	mov	r2, #0
  429860:	e59f3218 	ldr	r3, [pc, #536]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429864:	fa002061 	blx	4319f0 <__adddf3>
  429868:	fa002002 	blx	431878 <floor>
  42986c:	fa002285 	blx	432288 <__aeabi_d2iz>
  429870:	e1a0a000 	mov	sl, r0
  429874:	e2878003 	add	r8, r7, #3
  429878:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  42987c:	fa002101 	blx	431c88 <__aeabi_i2d>
  429880:	e59d2014 	ldr	r2, [sp, #20]
  429884:	e59d3018 	ldr	r3, [sp, #24]
  429888:	fa002131 	blx	431d54 <__aeabi_dmul>
  42988c:	e1a0200b 	mov	r2, fp
  429890:	e1a03006 	mov	r3, r6
  429894:	fa002055 	blx	4319f0 <__adddf3>
  429898:	e3a02000 	mov	r2, #0
  42989c:	e59f31dc 	ldr	r3, [pc, #476]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4298a0:	fa002052 	blx	4319f0 <__adddf3>
  4298a4:	fa001ff3 	blx	431878 <floor>
  4298a8:	fa002276 	blx	432288 <__aeabi_d2iz>
  4298ac:	e785a109 	str	sl, [r5, r9, lsl #2]
  4298b0:	e7850108 	str	r0, [r5, r8, lsl #2]
  4298b4:	e2877004 	add	r7, r7, #4
  4298b8:	ea000000 	b	4298c0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xe94>
  4298bc:	e3a07000 	mov	r7, #0
  4298c0:	e59d8450 	ldr	r8, [sp, #1104]	; 0x450
  4298c4:	e2483004 	sub	r3, r8, #4
  4298c8:	e1530007 	cmp	r3, r7
  4298cc:	aaffffb9 	bge	4297b8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xd8c>
  4298d0:	ea00000e 	b	429910 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xee4>
  4298d4:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  4298d8:	fa0020ea 	blx	431c88 <__aeabi_i2d>
  4298dc:	e59d2014 	ldr	r2, [sp, #20]
  4298e0:	e59d3018 	ldr	r3, [sp, #24]
  4298e4:	fa00211a 	blx	431d54 <__aeabi_dmul>
  4298e8:	e1a0200b 	mov	r2, fp
  4298ec:	e1a03006 	mov	r3, r6
  4298f0:	fa00203e 	blx	4319f0 <__adddf3>
  4298f4:	e3a02000 	mov	r2, #0
  4298f8:	e59f3180 	ldr	r3, [pc, #384]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4298fc:	fa00203b 	blx	4319f0 <__adddf3>
  429900:	fa001fdc 	blx	431878 <floor>
  429904:	fa00225f 	blx	432288 <__aeabi_d2iz>
  429908:	e7850107 	str	r0, [r5, r7, lsl #2]
  42990c:	e2877001 	add	r7, r7, #1
  429910:	e1570008 	cmp	r7, r8
  429914:	baffffee 	blt	4298d4 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xea8>
  429918:	e59d301c 	ldr	r3, [sp, #28]
  42991c:	e0844103 	add	r4, r4, r3, lsl #2
  429920:	e59d3020 	ldr	r3, [sp, #32]
  429924:	e0855103 	add	r5, r5, r3, lsl #2
  429928:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  42992c:	e2432001 	sub	r2, r3, #1
  429930:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  429934:	e3530000 	cmp	r3, #0
  429938:	1affffdf 	bne	4298bc <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xe90>
  42993c:	ea0000dd 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  429940:	e1a03121 	lsr	r3, r1, #2
  429944:	e58d301c 	str	r3, [sp, #28]
  429948:	ea000066 	b	429ae8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x10bc>
  42994c:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  429950:	fa0020d5 	blx	431cac <__aeabi_f2d>
  429954:	e59d2014 	ldr	r2, [sp, #20]
  429958:	e59da018 	ldr	sl, [sp, #24]
  42995c:	e1a0300a 	mov	r3, sl
  429960:	fa0020fb 	blx	431d54 <__aeabi_dmul>
  429964:	e1a0200b 	mov	r2, fp
  429968:	e1a03006 	mov	r3, r6
  42996c:	fa00201f 	blx	4319f0 <__adddf3>
  429970:	e3a02000 	mov	r2, #0
  429974:	e59f3104 	ldr	r3, [pc, #260]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429978:	fa00201c 	blx	4319f0 <__adddf3>
  42997c:	fa001fbd 	blx	431878 <floor>
  429980:	fa002240 	blx	432288 <__aeabi_d2iz>
  429984:	e1a09000 	mov	r9, r0
  429988:	e2878001 	add	r8, r7, #1
  42998c:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  429990:	fa0020c5 	blx	431cac <__aeabi_f2d>
  429994:	e59d2014 	ldr	r2, [sp, #20]
  429998:	e1a0300a 	mov	r3, sl
  42999c:	fa0020ec 	blx	431d54 <__aeabi_dmul>
  4299a0:	e1a0200b 	mov	r2, fp
  4299a4:	e1a03006 	mov	r3, r6
  4299a8:	fa002010 	blx	4319f0 <__adddf3>
  4299ac:	e3a02000 	mov	r2, #0
  4299b0:	e59f30c8 	ldr	r3, [pc, #200]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4299b4:	fa00200d 	blx	4319f0 <__adddf3>
  4299b8:	fa001fae 	blx	431878 <floor>
  4299bc:	fa002231 	blx	432288 <__aeabi_d2iz>
  4299c0:	e7859107 	str	r9, [r5, r7, lsl #2]
  4299c4:	e7850108 	str	r0, [r5, r8, lsl #2]
  4299c8:	e2879002 	add	r9, r7, #2
  4299cc:	e7940109 	ldr	r0, [r4, r9, lsl #2]
  4299d0:	fa0020b5 	blx	431cac <__aeabi_f2d>
  4299d4:	e59d2014 	ldr	r2, [sp, #20]
  4299d8:	e58da018 	str	sl, [sp, #24]
  4299dc:	e1a0300a 	mov	r3, sl
  4299e0:	fa0020db 	blx	431d54 <__aeabi_dmul>
  4299e4:	e1a0200b 	mov	r2, fp
  4299e8:	e1a03006 	mov	r3, r6
  4299ec:	fa001fff 	blx	4319f0 <__adddf3>
  4299f0:	e3a02000 	mov	r2, #0
  4299f4:	e59f3084 	ldr	r3, [pc, #132]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  4299f8:	fa001ffc 	blx	4319f0 <__adddf3>
  4299fc:	fa001f9d 	blx	431878 <floor>
  429a00:	fa002220 	blx	432288 <__aeabi_d2iz>
  429a04:	e1a0a000 	mov	sl, r0
  429a08:	e2878003 	add	r8, r7, #3
  429a0c:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  429a10:	fa0020a5 	blx	431cac <__aeabi_f2d>
  429a14:	e59d2014 	ldr	r2, [sp, #20]
  429a18:	e59d3018 	ldr	r3, [sp, #24]
  429a1c:	fa0020cc 	blx	431d54 <__aeabi_dmul>
  429a20:	e1a0200b 	mov	r2, fp
  429a24:	e1a03006 	mov	r3, r6
  429a28:	fa001ff0 	blx	4319f0 <__adddf3>
  429a2c:	e3a02000 	mov	r2, #0
  429a30:	e59f3048 	ldr	r3, [pc, #72]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429a34:	fa001fed 	blx	4319f0 <__adddf3>
  429a38:	fa001f8e 	blx	431878 <floor>
  429a3c:	fa002211 	blx	432288 <__aeabi_d2iz>
  429a40:	e785a109 	str	sl, [r5, r9, lsl #2]
  429a44:	e7850108 	str	r0, [r5, r8, lsl #2]
  429a48:	e2877004 	add	r7, r7, #4
  429a4c:	ea000000 	b	429a54 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1028>
  429a50:	e3a07000 	mov	r7, #0
  429a54:	e59d8450 	ldr	r8, [sp, #1104]	; 0x450
  429a58:	e2483004 	sub	r3, r8, #4
  429a5c:	e1530007 	cmp	r3, r7
  429a60:	aaffffb9 	bge	42994c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0xf20>
  429a64:	ea000019 	b	429ad0 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x10a4>
  429a68:	40600000 	.word	0x40600000
  429a6c:	ffc00000 	.word	0xffc00000
  429a70:	40dfffff 	.word	0x40dfffff
  429a74:	40e00000 	.word	0x40e00000
  429a78:	3ff00000 	.word	0x3ff00000
  429a7c:	3cb00000 	.word	0x3cb00000
  429a80:	3fe00000 	.word	0x3fe00000
  429a84:	00016424 	.word	0x00016424
  429a88:	00000535 	.word	0x00000535
  429a8c:	000160d0 	.word	0x000160d0
  429a90:	00015dec 	.word	0x00015dec
  429a94:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  429a98:	fa002083 	blx	431cac <__aeabi_f2d>
  429a9c:	e59d2014 	ldr	r2, [sp, #20]
  429aa0:	e59d3018 	ldr	r3, [sp, #24]
  429aa4:	fa0020aa 	blx	431d54 <__aeabi_dmul>
  429aa8:	e1a0200b 	mov	r2, fp
  429aac:	e1a03006 	mov	r3, r6
  429ab0:	fa001fce 	blx	4319f0 <__adddf3>
  429ab4:	e3a02000 	mov	r2, #0
  429ab8:	e51f3040 	ldr	r3, [pc, #-64]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429abc:	fa001fcb 	blx	4319f0 <__adddf3>
  429ac0:	fa001f6c 	blx	431878 <floor>
  429ac4:	fa0021ef 	blx	432288 <__aeabi_d2iz>
  429ac8:	e7850107 	str	r0, [r5, r7, lsl #2]
  429acc:	e2877001 	add	r7, r7, #1
  429ad0:	e1570008 	cmp	r7, r8
  429ad4:	baffffee 	blt	429a94 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1068>
  429ad8:	e59d301c 	ldr	r3, [sp, #28]
  429adc:	e0844103 	add	r4, r4, r3, lsl #2
  429ae0:	e59d3020 	ldr	r3, [sp, #32]
  429ae4:	e0855103 	add	r5, r5, r3, lsl #2
  429ae8:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  429aec:	e2432001 	sub	r2, r3, #1
  429af0:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  429af4:	e3530000 	cmp	r3, #0
  429af8:	1affffd4 	bne	429a50 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1024>
  429afc:	ea00006d 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  429b00:	e1a031a1 	lsr	r3, r1, #3
  429b04:	e58d301c 	str	r3, [sp, #28]
  429b08:	ea00005b 	b	429c7c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1250>
  429b0c:	e0843187 	add	r3, r4, r7, lsl #3
  429b10:	e59d0014 	ldr	r0, [sp, #20]
  429b14:	e59da018 	ldr	sl, [sp, #24]
  429b18:	e1a0100a 	mov	r1, sl
  429b1c:	e893000c 	ldm	r3, {r2, r3}
  429b20:	fa00208b 	blx	431d54 <__aeabi_dmul>
  429b24:	e1a0200b 	mov	r2, fp
  429b28:	e1a03006 	mov	r3, r6
  429b2c:	fa001faf 	blx	4319f0 <__adddf3>
  429b30:	e3a02000 	mov	r2, #0
  429b34:	e51f30bc 	ldr	r3, [pc, #-188]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429b38:	fa001fac 	blx	4319f0 <__adddf3>
  429b3c:	fa001f4d 	blx	431878 <floor>
  429b40:	fa0021d0 	blx	432288 <__aeabi_d2iz>
  429b44:	e1a09000 	mov	r9, r0
  429b48:	e2878001 	add	r8, r7, #1
  429b4c:	e0843188 	add	r3, r4, r8, lsl #3
  429b50:	e59d0014 	ldr	r0, [sp, #20]
  429b54:	e1a0100a 	mov	r1, sl
  429b58:	e893000c 	ldm	r3, {r2, r3}
  429b5c:	fa00207c 	blx	431d54 <__aeabi_dmul>
  429b60:	e1a0200b 	mov	r2, fp
  429b64:	e1a03006 	mov	r3, r6
  429b68:	fa001fa0 	blx	4319f0 <__adddf3>
  429b6c:	e3a02000 	mov	r2, #0
  429b70:	e51f30f8 	ldr	r3, [pc, #-248]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429b74:	fa001f9d 	blx	4319f0 <__adddf3>
  429b78:	fa001f3e 	blx	431878 <floor>
  429b7c:	fa0021c1 	blx	432288 <__aeabi_d2iz>
  429b80:	e7859107 	str	r9, [r5, r7, lsl #2]
  429b84:	e7850108 	str	r0, [r5, r8, lsl #2]
  429b88:	e2879002 	add	r9, r7, #2
  429b8c:	e0843189 	add	r3, r4, r9, lsl #3
  429b90:	e59d0014 	ldr	r0, [sp, #20]
  429b94:	e58da018 	str	sl, [sp, #24]
  429b98:	e1a0100a 	mov	r1, sl
  429b9c:	e893000c 	ldm	r3, {r2, r3}
  429ba0:	fa00206b 	blx	431d54 <__aeabi_dmul>
  429ba4:	e1a0200b 	mov	r2, fp
  429ba8:	e1a03006 	mov	r3, r6
  429bac:	fa001f8f 	blx	4319f0 <__adddf3>
  429bb0:	e3a02000 	mov	r2, #0
  429bb4:	e51f313c 	ldr	r3, [pc, #-316]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429bb8:	fa001f8c 	blx	4319f0 <__adddf3>
  429bbc:	fa001f2d 	blx	431878 <floor>
  429bc0:	fa0021b0 	blx	432288 <__aeabi_d2iz>
  429bc4:	e1a0a000 	mov	sl, r0
  429bc8:	e2878003 	add	r8, r7, #3
  429bcc:	e0843188 	add	r3, r4, r8, lsl #3
  429bd0:	e59d0014 	ldr	r0, [sp, #20]
  429bd4:	e59d1018 	ldr	r1, [sp, #24]
  429bd8:	e893000c 	ldm	r3, {r2, r3}
  429bdc:	fa00205c 	blx	431d54 <__aeabi_dmul>
  429be0:	e1a0200b 	mov	r2, fp
  429be4:	e1a03006 	mov	r3, r6
  429be8:	fa001f80 	blx	4319f0 <__adddf3>
  429bec:	e3a02000 	mov	r2, #0
  429bf0:	e51f3178 	ldr	r3, [pc, #-376]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429bf4:	fa001f7d 	blx	4319f0 <__adddf3>
  429bf8:	fa001f1e 	blx	431878 <floor>
  429bfc:	fa0021a1 	blx	432288 <__aeabi_d2iz>
  429c00:	e785a109 	str	sl, [r5, r9, lsl #2]
  429c04:	e7850108 	str	r0, [r5, r8, lsl #2]
  429c08:	e2877004 	add	r7, r7, #4
  429c0c:	ea000000 	b	429c14 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x11e8>
  429c10:	e3a07000 	mov	r7, #0
  429c14:	e59d8450 	ldr	r8, [sp, #1104]	; 0x450
  429c18:	e2483004 	sub	r3, r8, #4
  429c1c:	e1530007 	cmp	r3, r7
  429c20:	aaffffb9 	bge	429b0c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x10e0>
  429c24:	ea00000e 	b	429c64 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1238>
  429c28:	e0843187 	add	r3, r4, r7, lsl #3
  429c2c:	e59d0014 	ldr	r0, [sp, #20]
  429c30:	e59d1018 	ldr	r1, [sp, #24]
  429c34:	e893000c 	ldm	r3, {r2, r3}
  429c38:	fa002045 	blx	431d54 <__aeabi_dmul>
  429c3c:	e1a0200b 	mov	r2, fp
  429c40:	e1a03006 	mov	r3, r6
  429c44:	fa001f69 	blx	4319f0 <__adddf3>
  429c48:	e3a02000 	mov	r2, #0
  429c4c:	e51f31d4 	ldr	r3, [pc, #-468]	; 429a80 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1054>
  429c50:	fa001f66 	blx	4319f0 <__adddf3>
  429c54:	fa001f07 	blx	431878 <floor>
  429c58:	fa00218a 	blx	432288 <__aeabi_d2iz>
  429c5c:	e7850107 	str	r0, [r5, r7, lsl #2]
  429c60:	e2877001 	add	r7, r7, #1
  429c64:	e1570008 	cmp	r7, r8
  429c68:	baffffee 	blt	429c28 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x11fc>
  429c6c:	e59d301c 	ldr	r3, [sp, #28]
  429c70:	e0844183 	add	r4, r4, r3, lsl #3
  429c74:	e59d3020 	ldr	r3, [sp, #32]
  429c78:	e0855103 	add	r5, r5, r3, lsl #2
  429c7c:	e59d3454 	ldr	r3, [sp, #1108]	; 0x454
  429c80:	e2432001 	sub	r2, r3, #1
  429c84:	e58d2454 	str	r2, [sp, #1108]	; 0x454
  429c88:	e3530000 	cmp	r3, #0
  429c8c:	1affffdf 	bne	429c10 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x11e4>
  429c90:	ea000008 	b	429cb8 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x128c>
  429c94:	e51f0218 	ldr	r0, [pc, #-536]	; 429a84 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1058>
  429c98:	e08f0000 	add	r0, pc, r0
  429c9c:	e51f121c 	ldr	r1, [pc, #-540]	; 429a88 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x105c>
  429ca0:	e51f221c 	ldr	r2, [pc, #-540]	; 429a8c <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1060>
  429ca4:	e08f2002 	add	r2, pc, r2
  429ca8:	e2822e1d 	add	r2, r2, #464	; 0x1d0
  429cac:	e51f3224 	ldr	r3, [pc, #-548]	; 429a90 <_ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi+0x1064>
  429cb0:	e08f3003 	add	r3, pc, r3
  429cb4:	fa002826 	blx	433d54 <__assert_func>
  429cb8:	e3a00000 	mov	r0, #0
  429cbc:	e28dde42 	add	sp, sp, #1056	; 0x420
  429cc0:	e28dd00c 	add	sp, sp, #12
  429cc4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  429cc8:	e12fff1e 	bx	lr

00429ccc <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi>:
  429ccc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  429cd0:	e24dde43 	sub	sp, sp, #1072	; 0x430
  429cd4:	e24dd00c 	sub	sp, sp, #12
  429cd8:	e1a06001 	mov	r6, r1
  429cdc:	e1a08002 	mov	r8, r2
  429ce0:	e1a03123 	lsr	r3, r3, #2
  429ce4:	e58d3020 	str	r3, [sp, #32]
  429ce8:	e59d3478 	ldr	r3, [sp, #1144]	; 0x478
  429cec:	e2033007 	and	r3, r3, #7
  429cf0:	e3530006 	cmp	r3, #6
  429cf4:	908ff103 	addls	pc, pc, r3, lsl #2
  429cf8:	ea000312 	b	42a948 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xc7c>
  429cfc:	ea000005 	b	429d18 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x4c>
  429d00:	ea000093 	b	429f54 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x288>
  429d04:	ea000120 	b	42a18c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x4c0>
  429d08:	ea000185 	b	42a324 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x658>
  429d0c:	ea0001ea 	b	42a4bc <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x7f0>
  429d10:	ea00024a 	b	42a640 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x974>
  429d14:	ea0002aa 	b	42a7c4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xaf8>
  429d18:	e59d9460 	ldr	r9, [sp, #1120]	; 0x460
  429d1c:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  429d20:	e0030399 	mul	r3, r9, r3
  429d24:	e35300ff 	cmp	r3, #255	; 0xff
  429d28:	ca000010 	bgt	429d70 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xa4>
  429d2c:	ea000028 	b	429dd4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x108>
  429d30:	e28d3e43 	add	r3, sp, #1072	; 0x430
  429d34:	e2833008 	add	r3, r3, #8
  429d38:	e0839107 	add	r9, r3, r7, lsl #2
  429d3c:	e1a0000a 	mov	r0, sl
  429d40:	e1a0100b 	mov	r1, fp
  429d44:	fa002163 	blx	4322d8 <__aeabi_d2f>
  429d48:	e5090400 	str	r0, [r9, #-1024]	; 0x400
  429d4c:	e2877001 	add	r7, r7, #1
  429d50:	e1a0000a 	mov	r0, sl
  429d54:	e1a0100b 	mov	r1, fp
  429d58:	e1a02004 	mov	r2, r4
  429d5c:	e1a03005 	mov	r3, r5
  429d60:	fa001f22 	blx	4319f0 <__adddf3>
  429d64:	e1a0a000 	mov	sl, r0
  429d68:	e1a0b001 	mov	fp, r1
  429d6c:	ea000006 	b	429d8c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xc0>
  429d70:	e3a04000 	mov	r4, #0
  429d74:	e1a07004 	mov	r7, r4
  429d78:	e58d0010 	str	r0, [sp, #16]
  429d7c:	e59d4468 	ldr	r4, [sp, #1128]	; 0x468
  429d80:	e59d546c 	ldr	r5, [sp, #1132]	; 0x46c
  429d84:	e28dbe47 	add	fp, sp, #1136	; 0x470
  429d88:	e89b0c00 	ldm	fp, {sl, fp}
  429d8c:	e35700ff 	cmp	r7, #255	; 0xff
  429d90:	daffffe6 	ble	429d30 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x64>
  429d94:	e59d5010 	ldr	r5, [sp, #16]
  429d98:	e28d3e45 	add	r3, sp, #1104	; 0x450
  429d9c:	e283300c 	add	r3, r3, #12
  429da0:	e9930003 	ldmib	r3, {r0, r1}
  429da4:	e28d3028 	add	r3, sp, #40	; 0x28
  429da8:	e8830003 	stm	r3, {r0, r1}
  429dac:	e88d0003 	stm	sp, {r0, r1}
  429db0:	e28d3038 	add	r3, sp, #56	; 0x38
  429db4:	e58d3008 	str	r3, [sp, #8]
  429db8:	e1a00005 	mov	r0, r5
  429dbc:	e1a01006 	mov	r1, r6
  429dc0:	e1a02008 	mov	r2, r8
  429dc4:	e59d3020 	ldr	r3, [sp, #32]
  429dc8:	e1a03103 	lsl	r3, r3, #2
  429dcc:	eb0019f2 	bl	43059c <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi>
  429dd0:	ea0002e5 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  429dd4:	e58d1024 	str	r1, [sp, #36]	; 0x24
  429dd8:	e1a06009 	mov	r6, r9
  429ddc:	e1a07000 	mov	r7, r0
  429de0:	e1a05002 	mov	r5, r2
  429de4:	e59d8468 	ldr	r8, [sp, #1128]	; 0x468
  429de8:	e59d946c 	ldr	r9, [sp, #1132]	; 0x46c
  429dec:	ea000052 	b	429f3c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x270>
  429df0:	e7d70004 	ldrb	r0, [r7, r4]
  429df4:	fa001fa3 	blx	431c88 <__aeabi_i2d>
  429df8:	e1a02008 	mov	r2, r8
  429dfc:	e1a03009 	mov	r3, r9
  429e00:	fa001fd3 	blx	431d54 <__aeabi_dmul>
  429e04:	e28d3e47 	add	r3, sp, #1136	; 0x470
  429e08:	e893000c 	ldm	r3, {r2, r3}
  429e0c:	fa001ef7 	blx	4319f0 <__adddf3>
  429e10:	e58d0010 	str	r0, [sp, #16]
  429e14:	e58d1014 	str	r1, [sp, #20]
  429e18:	e284a001 	add	sl, r4, #1
  429e1c:	e7d7000a 	ldrb	r0, [r7, sl]
  429e20:	fa001f98 	blx	431c88 <__aeabi_i2d>
  429e24:	e1a02008 	mov	r2, r8
  429e28:	e1a03009 	mov	r3, r9
  429e2c:	fa001fc8 	blx	431d54 <__aeabi_dmul>
  429e30:	e28d3e47 	add	r3, sp, #1136	; 0x470
  429e34:	e893000c 	ldm	r3, {r2, r3}
  429e38:	fa001eec 	blx	4319f0 <__adddf3>
  429e3c:	e58d0018 	str	r0, [sp, #24]
  429e40:	e58d101c 	str	r1, [sp, #28]
  429e44:	e28d1010 	add	r1, sp, #16
  429e48:	e8910003 	ldm	r1, {r0, r1}
  429e4c:	fa002121 	blx	4322d8 <__aeabi_d2f>
  429e50:	e7850104 	str	r0, [r5, r4, lsl #2]
  429e54:	e28d1018 	add	r1, sp, #24
  429e58:	e8910003 	ldm	r1, {r0, r1}
  429e5c:	fa00211d 	blx	4322d8 <__aeabi_d2f>
  429e60:	e785010a 	str	r0, [r5, sl, lsl #2]
  429e64:	e284b002 	add	fp, r4, #2
  429e68:	e7d7000b 	ldrb	r0, [r7, fp]
  429e6c:	fa001f85 	blx	431c88 <__aeabi_i2d>
  429e70:	e1a02008 	mov	r2, r8
  429e74:	e1a03009 	mov	r3, r9
  429e78:	fa001fb5 	blx	431d54 <__aeabi_dmul>
  429e7c:	e28d3e47 	add	r3, sp, #1136	; 0x470
  429e80:	e893000c 	ldm	r3, {r2, r3}
  429e84:	fa001ed9 	blx	4319f0 <__adddf3>
  429e88:	e58d0010 	str	r0, [sp, #16]
  429e8c:	e58d1014 	str	r1, [sp, #20]
  429e90:	e284a003 	add	sl, r4, #3
  429e94:	e7d7000a 	ldrb	r0, [r7, sl]
  429e98:	fa001f7a 	blx	431c88 <__aeabi_i2d>
  429e9c:	e1a02008 	mov	r2, r8
  429ea0:	e1a03009 	mov	r3, r9
  429ea4:	fa001faa 	blx	431d54 <__aeabi_dmul>
  429ea8:	e28d3e47 	add	r3, sp, #1136	; 0x470
  429eac:	e893000c 	ldm	r3, {r2, r3}
  429eb0:	fa001ece 	blx	4319f0 <__adddf3>
  429eb4:	e58d0018 	str	r0, [sp, #24]
  429eb8:	e58d101c 	str	r1, [sp, #28]
  429ebc:	e28d1010 	add	r1, sp, #16
  429ec0:	e8910003 	ldm	r1, {r0, r1}
  429ec4:	fa002103 	blx	4322d8 <__aeabi_d2f>
  429ec8:	e785010b 	str	r0, [r5, fp, lsl #2]
  429ecc:	e28d1018 	add	r1, sp, #24
  429ed0:	e8910003 	ldm	r1, {r0, r1}
  429ed4:	fa0020ff 	blx	4322d8 <__aeabi_d2f>
  429ed8:	e785010a 	str	r0, [r5, sl, lsl #2]
  429edc:	e2844004 	add	r4, r4, #4
  429ee0:	ea000000 	b	429ee8 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x21c>
  429ee4:	e3a04000 	mov	r4, #0
  429ee8:	e2463004 	sub	r3, r6, #4
  429eec:	e1530004 	cmp	r3, r4
  429ef0:	aaffffbe 	bge	429df0 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x124>
  429ef4:	ea00000a 	b	429f24 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x258>
  429ef8:	e7d70004 	ldrb	r0, [r7, r4]
  429efc:	fa001f61 	blx	431c88 <__aeabi_i2d>
  429f00:	e1a02008 	mov	r2, r8
  429f04:	e1a03009 	mov	r3, r9
  429f08:	fa001f91 	blx	431d54 <__aeabi_dmul>
  429f0c:	e28d3e47 	add	r3, sp, #1136	; 0x470
  429f10:	e893000c 	ldm	r3, {r2, r3}
  429f14:	fa001eb5 	blx	4319f0 <__adddf3>
  429f18:	fa0020ee 	blx	4322d8 <__aeabi_d2f>
  429f1c:	e7850104 	str	r0, [r5, r4, lsl #2]
  429f20:	e2844001 	add	r4, r4, #1
  429f24:	e1540006 	cmp	r4, r6
  429f28:	bafffff2 	blt	429ef8 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x22c>
  429f2c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  429f30:	e0877003 	add	r7, r7, r3
  429f34:	e59d3020 	ldr	r3, [sp, #32]
  429f38:	e0855103 	add	r5, r5, r3, lsl #2
  429f3c:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  429f40:	e2432001 	sub	r2, r3, #1
  429f44:	e58d2464 	str	r2, [sp, #1124]	; 0x464
  429f48:	e3530000 	cmp	r3, #0
  429f4c:	1affffe4 	bne	429ee4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x218>
  429f50:	ea000285 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  429f54:	e59d9460 	ldr	r9, [sp, #1120]	; 0x460
  429f58:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  429f5c:	e0030399 	mul	r3, r9, r3
  429f60:	e35300ff 	cmp	r3, #255	; 0xff
  429f64:	ca00000f 	bgt	429fa8 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x2dc>
  429f68:	ea000027 	b	42a00c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x340>
  429f6c:	e20700ff 	and	r0, r7, #255	; 0xff
  429f70:	fa001f44 	blx	431c88 <__aeabi_i2d>
  429f74:	e1a02004 	mov	r2, r4
  429f78:	e1a03005 	mov	r3, r5
  429f7c:	fa001f74 	blx	431d54 <__aeabi_dmul>
  429f80:	e1a0200a 	mov	r2, sl
  429f84:	e1a0300b 	mov	r3, fp
  429f88:	fa001e98 	blx	4319f0 <__adddf3>
  429f8c:	e28d3e43 	add	r3, sp, #1072	; 0x430
  429f90:	e2833008 	add	r3, r3, #8
  429f94:	e0839107 	add	r9, r3, r7, lsl #2
  429f98:	fa0020ce 	blx	4322d8 <__aeabi_d2f>
  429f9c:	e5090400 	str	r0, [r9, #-1024]	; 0x400
  429fa0:	e2877001 	add	r7, r7, #1
  429fa4:	ea000006 	b	429fc4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x2f8>
  429fa8:	e3a04000 	mov	r4, #0
  429fac:	e1a07004 	mov	r7, r4
  429fb0:	e58d0010 	str	r0, [sp, #16]
  429fb4:	e59d4468 	ldr	r4, [sp, #1128]	; 0x468
  429fb8:	e59d546c 	ldr	r5, [sp, #1132]	; 0x46c
  429fbc:	e28dbe47 	add	fp, sp, #1136	; 0x470
  429fc0:	e89b0c00 	ldm	fp, {sl, fp}
  429fc4:	e35700ff 	cmp	r7, #255	; 0xff
  429fc8:	daffffe7 	ble	429f6c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x2a0>
  429fcc:	e59d5010 	ldr	r5, [sp, #16]
  429fd0:	e28d2038 	add	r2, sp, #56	; 0x38
  429fd4:	e28d3030 	add	r3, sp, #48	; 0x30
  429fd8:	e28d1e45 	add	r1, sp, #1104	; 0x450
  429fdc:	e281100c 	add	r1, r1, #12
  429fe0:	e9910003 	ldmib	r1, {r0, r1}
  429fe4:	e8830003 	stm	r3, {r0, r1}
  429fe8:	e88d0003 	stm	sp, {r0, r1}
  429fec:	e58d2008 	str	r2, [sp, #8]
  429ff0:	e1a00005 	mov	r0, r5
  429ff4:	e1a01006 	mov	r1, r6
  429ff8:	e1a02008 	mov	r2, r8
  429ffc:	e59d3020 	ldr	r3, [sp, #32]
  42a000:	e1a03103 	lsl	r3, r3, #2
  42a004:	eb001964 	bl	43059c <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi>
  42a008:	ea000257 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  42a00c:	e58d1024 	str	r1, [sp, #36]	; 0x24
  42a010:	e1a06009 	mov	r6, r9
  42a014:	e1a07000 	mov	r7, r0
  42a018:	e1a05002 	mov	r5, r2
  42a01c:	e59d8468 	ldr	r8, [sp, #1128]	; 0x468
  42a020:	e59d946c 	ldr	r9, [sp, #1132]	; 0x46c
  42a024:	ea000052 	b	42a174 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x4a8>
  42a028:	e7d70004 	ldrb	r0, [r7, r4]
  42a02c:	fa001f15 	blx	431c88 <__aeabi_i2d>
  42a030:	e1a02008 	mov	r2, r8
  42a034:	e1a03009 	mov	r3, r9
  42a038:	fa001f45 	blx	431d54 <__aeabi_dmul>
  42a03c:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a040:	e893000c 	ldm	r3, {r2, r3}
  42a044:	fa001e69 	blx	4319f0 <__adddf3>
  42a048:	e58d0010 	str	r0, [sp, #16]
  42a04c:	e58d1014 	str	r1, [sp, #20]
  42a050:	e284a001 	add	sl, r4, #1
  42a054:	e7d7000a 	ldrb	r0, [r7, sl]
  42a058:	fa001f0a 	blx	431c88 <__aeabi_i2d>
  42a05c:	e1a02008 	mov	r2, r8
  42a060:	e1a03009 	mov	r3, r9
  42a064:	fa001f3a 	blx	431d54 <__aeabi_dmul>
  42a068:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a06c:	e893000c 	ldm	r3, {r2, r3}
  42a070:	fa001e5e 	blx	4319f0 <__adddf3>
  42a074:	e58d0018 	str	r0, [sp, #24]
  42a078:	e58d101c 	str	r1, [sp, #28]
  42a07c:	e28d1010 	add	r1, sp, #16
  42a080:	e8910003 	ldm	r1, {r0, r1}
  42a084:	fa002093 	blx	4322d8 <__aeabi_d2f>
  42a088:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a08c:	e28d1018 	add	r1, sp, #24
  42a090:	e8910003 	ldm	r1, {r0, r1}
  42a094:	fa00208f 	blx	4322d8 <__aeabi_d2f>
  42a098:	e785010a 	str	r0, [r5, sl, lsl #2]
  42a09c:	e284b002 	add	fp, r4, #2
  42a0a0:	e7d7000b 	ldrb	r0, [r7, fp]
  42a0a4:	fa001ef7 	blx	431c88 <__aeabi_i2d>
  42a0a8:	e1a02008 	mov	r2, r8
  42a0ac:	e1a03009 	mov	r3, r9
  42a0b0:	fa001f27 	blx	431d54 <__aeabi_dmul>
  42a0b4:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a0b8:	e893000c 	ldm	r3, {r2, r3}
  42a0bc:	fa001e4b 	blx	4319f0 <__adddf3>
  42a0c0:	e58d0010 	str	r0, [sp, #16]
  42a0c4:	e58d1014 	str	r1, [sp, #20]
  42a0c8:	e284a003 	add	sl, r4, #3
  42a0cc:	e7d7000a 	ldrb	r0, [r7, sl]
  42a0d0:	fa001eec 	blx	431c88 <__aeabi_i2d>
  42a0d4:	e1a02008 	mov	r2, r8
  42a0d8:	e1a03009 	mov	r3, r9
  42a0dc:	fa001f1c 	blx	431d54 <__aeabi_dmul>
  42a0e0:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a0e4:	e893000c 	ldm	r3, {r2, r3}
  42a0e8:	fa001e40 	blx	4319f0 <__adddf3>
  42a0ec:	e58d0018 	str	r0, [sp, #24]
  42a0f0:	e58d101c 	str	r1, [sp, #28]
  42a0f4:	e28d1010 	add	r1, sp, #16
  42a0f8:	e8910003 	ldm	r1, {r0, r1}
  42a0fc:	fa002075 	blx	4322d8 <__aeabi_d2f>
  42a100:	e785010b 	str	r0, [r5, fp, lsl #2]
  42a104:	e28d1018 	add	r1, sp, #24
  42a108:	e8910003 	ldm	r1, {r0, r1}
  42a10c:	fa002071 	blx	4322d8 <__aeabi_d2f>
  42a110:	e785010a 	str	r0, [r5, sl, lsl #2]
  42a114:	e2844004 	add	r4, r4, #4
  42a118:	ea000000 	b	42a120 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x454>
  42a11c:	e3a04000 	mov	r4, #0
  42a120:	e2463004 	sub	r3, r6, #4
  42a124:	e1530004 	cmp	r3, r4
  42a128:	aaffffbe 	bge	42a028 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x35c>
  42a12c:	ea00000a 	b	42a15c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x490>
  42a130:	e7d70004 	ldrb	r0, [r7, r4]
  42a134:	fa001ed3 	blx	431c88 <__aeabi_i2d>
  42a138:	e1a02008 	mov	r2, r8
  42a13c:	e1a03009 	mov	r3, r9
  42a140:	fa001f03 	blx	431d54 <__aeabi_dmul>
  42a144:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a148:	e893000c 	ldm	r3, {r2, r3}
  42a14c:	fa001e27 	blx	4319f0 <__adddf3>
  42a150:	fa002060 	blx	4322d8 <__aeabi_d2f>
  42a154:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a158:	e2844001 	add	r4, r4, #1
  42a15c:	e1540006 	cmp	r4, r6
  42a160:	bafffff2 	blt	42a130 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x464>
  42a164:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42a168:	e0877003 	add	r7, r7, r3
  42a16c:	e59d3020 	ldr	r3, [sp, #32]
  42a170:	e0855103 	add	r5, r5, r3, lsl #2
  42a174:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  42a178:	e2432001 	sub	r2, r3, #1
  42a17c:	e58d2464 	str	r2, [sp, #1124]	; 0x464
  42a180:	e3530000 	cmp	r3, #0
  42a184:	1affffe4 	bne	42a11c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x450>
  42a188:	ea0001f7 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  42a18c:	e1a090a1 	lsr	r9, r1, #1
  42a190:	e58d9024 	str	r9, [sp, #36]	; 0x24
  42a194:	e1a07000 	mov	r7, r0
  42a198:	e1a05002 	mov	r5, r2
  42a19c:	e59d8468 	ldr	r8, [sp, #1128]	; 0x468
  42a1a0:	e59d946c 	ldr	r9, [sp, #1132]	; 0x46c
  42a1a4:	ea000058 	b	42a30c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x640>
  42a1a8:	e1a03084 	lsl	r3, r4, #1
  42a1ac:	e19700b3 	ldrh	r0, [r7, r3]
  42a1b0:	fa001eb4 	blx	431c88 <__aeabi_i2d>
  42a1b4:	e1a02008 	mov	r2, r8
  42a1b8:	e1a03009 	mov	r3, r9
  42a1bc:	fa001ee4 	blx	431d54 <__aeabi_dmul>
  42a1c0:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a1c4:	e893000c 	ldm	r3, {r2, r3}
  42a1c8:	fa001e08 	blx	4319f0 <__adddf3>
  42a1cc:	e1a0a000 	mov	sl, r0
  42a1d0:	e1a0b001 	mov	fp, r1
  42a1d4:	e2846001 	add	r6, r4, #1
  42a1d8:	e1a03086 	lsl	r3, r6, #1
  42a1dc:	e19700b3 	ldrh	r0, [r7, r3]
  42a1e0:	fa001ea8 	blx	431c88 <__aeabi_i2d>
  42a1e4:	e1a02008 	mov	r2, r8
  42a1e8:	e1a03009 	mov	r3, r9
  42a1ec:	fa001ed8 	blx	431d54 <__aeabi_dmul>
  42a1f0:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a1f4:	e893000c 	ldm	r3, {r2, r3}
  42a1f8:	fa001dfc 	blx	4319f0 <__adddf3>
  42a1fc:	e58d0010 	str	r0, [sp, #16]
  42a200:	e58d1014 	str	r1, [sp, #20]
  42a204:	e1a0000a 	mov	r0, sl
  42a208:	e1a0100b 	mov	r1, fp
  42a20c:	fa002031 	blx	4322d8 <__aeabi_d2f>
  42a210:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a214:	e28d1010 	add	r1, sp, #16
  42a218:	e8910003 	ldm	r1, {r0, r1}
  42a21c:	fa00202d 	blx	4322d8 <__aeabi_d2f>
  42a220:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a224:	e284a002 	add	sl, r4, #2
  42a228:	e1a0308a 	lsl	r3, sl, #1
  42a22c:	e19700b3 	ldrh	r0, [r7, r3]
  42a230:	fa001e94 	blx	431c88 <__aeabi_i2d>
  42a234:	e1a02008 	mov	r2, r8
  42a238:	e1a03009 	mov	r3, r9
  42a23c:	fa001ec4 	blx	431d54 <__aeabi_dmul>
  42a240:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a244:	e893000c 	ldm	r3, {r2, r3}
  42a248:	fa001de8 	blx	4319f0 <__adddf3>
  42a24c:	e58d0010 	str	r0, [sp, #16]
  42a250:	e58d1014 	str	r1, [sp, #20]
  42a254:	e2846003 	add	r6, r4, #3
  42a258:	e1a03086 	lsl	r3, r6, #1
  42a25c:	e19700b3 	ldrh	r0, [r7, r3]
  42a260:	fa001e88 	blx	431c88 <__aeabi_i2d>
  42a264:	e1a02008 	mov	r2, r8
  42a268:	e1a03009 	mov	r3, r9
  42a26c:	fa001eb8 	blx	431d54 <__aeabi_dmul>
  42a270:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a274:	e893000c 	ldm	r3, {r2, r3}
  42a278:	fa001ddc 	blx	4319f0 <__adddf3>
  42a27c:	e58d0018 	str	r0, [sp, #24]
  42a280:	e58d101c 	str	r1, [sp, #28]
  42a284:	e28d1010 	add	r1, sp, #16
  42a288:	e8910003 	ldm	r1, {r0, r1}
  42a28c:	fa002011 	blx	4322d8 <__aeabi_d2f>
  42a290:	e785010a 	str	r0, [r5, sl, lsl #2]
  42a294:	e28d1018 	add	r1, sp, #24
  42a298:	e8910003 	ldm	r1, {r0, r1}
  42a29c:	fa00200d 	blx	4322d8 <__aeabi_d2f>
  42a2a0:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a2a4:	e2844004 	add	r4, r4, #4
  42a2a8:	ea000000 	b	42a2b0 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x5e4>
  42a2ac:	e3a04000 	mov	r4, #0
  42a2b0:	e59d6460 	ldr	r6, [sp, #1120]	; 0x460
  42a2b4:	e2463004 	sub	r3, r6, #4
  42a2b8:	e1530004 	cmp	r3, r4
  42a2bc:	aaffffb9 	bge	42a1a8 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x4dc>
  42a2c0:	ea00000b 	b	42a2f4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x628>
  42a2c4:	e1a03084 	lsl	r3, r4, #1
  42a2c8:	e19700b3 	ldrh	r0, [r7, r3]
  42a2cc:	fa001e6d 	blx	431c88 <__aeabi_i2d>
  42a2d0:	e1a02008 	mov	r2, r8
  42a2d4:	e1a03009 	mov	r3, r9
  42a2d8:	fa001e9d 	blx	431d54 <__aeabi_dmul>
  42a2dc:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a2e0:	e893000c 	ldm	r3, {r2, r3}
  42a2e4:	fa001dc1 	blx	4319f0 <__adddf3>
  42a2e8:	fa001ffa 	blx	4322d8 <__aeabi_d2f>
  42a2ec:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a2f0:	e2844001 	add	r4, r4, #1
  42a2f4:	e1540006 	cmp	r4, r6
  42a2f8:	bafffff1 	blt	42a2c4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x5f8>
  42a2fc:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42a300:	e0877083 	add	r7, r7, r3, lsl #1
  42a304:	e59d3020 	ldr	r3, [sp, #32]
  42a308:	e0855103 	add	r5, r5, r3, lsl #2
  42a30c:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  42a310:	e2432001 	sub	r2, r3, #1
  42a314:	e58d2464 	str	r2, [sp, #1124]	; 0x464
  42a318:	e3530000 	cmp	r3, #0
  42a31c:	1affffe2 	bne	42a2ac <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x5e0>
  42a320:	ea000191 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  42a324:	e1a090a1 	lsr	r9, r1, #1
  42a328:	e58d9024 	str	r9, [sp, #36]	; 0x24
  42a32c:	e1a07000 	mov	r7, r0
  42a330:	e1a05002 	mov	r5, r2
  42a334:	e59d8468 	ldr	r8, [sp, #1128]	; 0x468
  42a338:	e59d946c 	ldr	r9, [sp, #1132]	; 0x46c
  42a33c:	ea000058 	b	42a4a4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x7d8>
  42a340:	e1a03084 	lsl	r3, r4, #1
  42a344:	e19700f3 	ldrsh	r0, [r7, r3]
  42a348:	fa001e4e 	blx	431c88 <__aeabi_i2d>
  42a34c:	e1a02008 	mov	r2, r8
  42a350:	e1a03009 	mov	r3, r9
  42a354:	fa001e7e 	blx	431d54 <__aeabi_dmul>
  42a358:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a35c:	e893000c 	ldm	r3, {r2, r3}
  42a360:	fa001da2 	blx	4319f0 <__adddf3>
  42a364:	e1a0a000 	mov	sl, r0
  42a368:	e1a0b001 	mov	fp, r1
  42a36c:	e2846001 	add	r6, r4, #1
  42a370:	e1a03086 	lsl	r3, r6, #1
  42a374:	e19700f3 	ldrsh	r0, [r7, r3]
  42a378:	fa001e42 	blx	431c88 <__aeabi_i2d>
  42a37c:	e1a02008 	mov	r2, r8
  42a380:	e1a03009 	mov	r3, r9
  42a384:	fa001e72 	blx	431d54 <__aeabi_dmul>
  42a388:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a38c:	e893000c 	ldm	r3, {r2, r3}
  42a390:	fa001d96 	blx	4319f0 <__adddf3>
  42a394:	e58d0010 	str	r0, [sp, #16]
  42a398:	e58d1014 	str	r1, [sp, #20]
  42a39c:	e1a0000a 	mov	r0, sl
  42a3a0:	e1a0100b 	mov	r1, fp
  42a3a4:	fa001fcb 	blx	4322d8 <__aeabi_d2f>
  42a3a8:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a3ac:	e28d1010 	add	r1, sp, #16
  42a3b0:	e8910003 	ldm	r1, {r0, r1}
  42a3b4:	fa001fc7 	blx	4322d8 <__aeabi_d2f>
  42a3b8:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a3bc:	e284a002 	add	sl, r4, #2
  42a3c0:	e1a0308a 	lsl	r3, sl, #1
  42a3c4:	e19700f3 	ldrsh	r0, [r7, r3]
  42a3c8:	fa001e2e 	blx	431c88 <__aeabi_i2d>
  42a3cc:	e1a02008 	mov	r2, r8
  42a3d0:	e1a03009 	mov	r3, r9
  42a3d4:	fa001e5e 	blx	431d54 <__aeabi_dmul>
  42a3d8:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a3dc:	e893000c 	ldm	r3, {r2, r3}
  42a3e0:	fa001d82 	blx	4319f0 <__adddf3>
  42a3e4:	e58d0010 	str	r0, [sp, #16]
  42a3e8:	e58d1014 	str	r1, [sp, #20]
  42a3ec:	e2846003 	add	r6, r4, #3
  42a3f0:	e1a03086 	lsl	r3, r6, #1
  42a3f4:	e19700f3 	ldrsh	r0, [r7, r3]
  42a3f8:	fa001e22 	blx	431c88 <__aeabi_i2d>
  42a3fc:	e1a02008 	mov	r2, r8
  42a400:	e1a03009 	mov	r3, r9
  42a404:	fa001e52 	blx	431d54 <__aeabi_dmul>
  42a408:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a40c:	e893000c 	ldm	r3, {r2, r3}
  42a410:	fa001d76 	blx	4319f0 <__adddf3>
  42a414:	e58d0018 	str	r0, [sp, #24]
  42a418:	e58d101c 	str	r1, [sp, #28]
  42a41c:	e28d1010 	add	r1, sp, #16
  42a420:	e8910003 	ldm	r1, {r0, r1}
  42a424:	fa001fab 	blx	4322d8 <__aeabi_d2f>
  42a428:	e785010a 	str	r0, [r5, sl, lsl #2]
  42a42c:	e28d1018 	add	r1, sp, #24
  42a430:	e8910003 	ldm	r1, {r0, r1}
  42a434:	fa001fa7 	blx	4322d8 <__aeabi_d2f>
  42a438:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a43c:	e2844004 	add	r4, r4, #4
  42a440:	ea000000 	b	42a448 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x77c>
  42a444:	e3a04000 	mov	r4, #0
  42a448:	e59d6460 	ldr	r6, [sp, #1120]	; 0x460
  42a44c:	e2463004 	sub	r3, r6, #4
  42a450:	e1530004 	cmp	r3, r4
  42a454:	aaffffb9 	bge	42a340 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x674>
  42a458:	ea00000b 	b	42a48c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x7c0>
  42a45c:	e1a03084 	lsl	r3, r4, #1
  42a460:	e19700f3 	ldrsh	r0, [r7, r3]
  42a464:	fa001e07 	blx	431c88 <__aeabi_i2d>
  42a468:	e1a02008 	mov	r2, r8
  42a46c:	e1a03009 	mov	r3, r9
  42a470:	fa001e37 	blx	431d54 <__aeabi_dmul>
  42a474:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a478:	e893000c 	ldm	r3, {r2, r3}
  42a47c:	fa001d5b 	blx	4319f0 <__adddf3>
  42a480:	fa001f94 	blx	4322d8 <__aeabi_d2f>
  42a484:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a488:	e2844001 	add	r4, r4, #1
  42a48c:	e1540006 	cmp	r4, r6
  42a490:	bafffff1 	blt	42a45c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x790>
  42a494:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42a498:	e0877083 	add	r7, r7, r3, lsl #1
  42a49c:	e59d3020 	ldr	r3, [sp, #32]
  42a4a0:	e0855103 	add	r5, r5, r3, lsl #2
  42a4a4:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  42a4a8:	e2432001 	sub	r2, r3, #1
  42a4ac:	e58d2464 	str	r2, [sp, #1124]	; 0x464
  42a4b0:	e3530000 	cmp	r3, #0
  42a4b4:	1affffe2 	bne	42a444 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x778>
  42a4b8:	ea00012b 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  42a4bc:	e1a09121 	lsr	r9, r1, #2
  42a4c0:	e58d9024 	str	r9, [sp, #36]	; 0x24
  42a4c4:	e1a07000 	mov	r7, r0
  42a4c8:	e1a05002 	mov	r5, r2
  42a4cc:	e59d8468 	ldr	r8, [sp, #1128]	; 0x468
  42a4d0:	e59d946c 	ldr	r9, [sp, #1132]	; 0x46c
  42a4d4:	ea000053 	b	42a628 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x95c>
  42a4d8:	e7970104 	ldr	r0, [r7, r4, lsl #2]
  42a4dc:	fa001de9 	blx	431c88 <__aeabi_i2d>
  42a4e0:	e1a02008 	mov	r2, r8
  42a4e4:	e1a03009 	mov	r3, r9
  42a4e8:	fa001e19 	blx	431d54 <__aeabi_dmul>
  42a4ec:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a4f0:	e893000c 	ldm	r3, {r2, r3}
  42a4f4:	fa001d3d 	blx	4319f0 <__adddf3>
  42a4f8:	e1a0a000 	mov	sl, r0
  42a4fc:	e1a0b001 	mov	fp, r1
  42a500:	e2846001 	add	r6, r4, #1
  42a504:	e7970106 	ldr	r0, [r7, r6, lsl #2]
  42a508:	fa001dde 	blx	431c88 <__aeabi_i2d>
  42a50c:	e1a02008 	mov	r2, r8
  42a510:	e1a03009 	mov	r3, r9
  42a514:	fa001e0e 	blx	431d54 <__aeabi_dmul>
  42a518:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a51c:	e893000c 	ldm	r3, {r2, r3}
  42a520:	fa001d32 	blx	4319f0 <__adddf3>
  42a524:	e58d0010 	str	r0, [sp, #16]
  42a528:	e58d1014 	str	r1, [sp, #20]
  42a52c:	e1a0000a 	mov	r0, sl
  42a530:	e1a0100b 	mov	r1, fp
  42a534:	fa001f67 	blx	4322d8 <__aeabi_d2f>
  42a538:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a53c:	e28d1010 	add	r1, sp, #16
  42a540:	e8910003 	ldm	r1, {r0, r1}
  42a544:	fa001f63 	blx	4322d8 <__aeabi_d2f>
  42a548:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a54c:	e284a002 	add	sl, r4, #2
  42a550:	e797010a 	ldr	r0, [r7, sl, lsl #2]
  42a554:	fa001dcb 	blx	431c88 <__aeabi_i2d>
  42a558:	e1a02008 	mov	r2, r8
  42a55c:	e1a03009 	mov	r3, r9
  42a560:	fa001dfb 	blx	431d54 <__aeabi_dmul>
  42a564:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a568:	e893000c 	ldm	r3, {r2, r3}
  42a56c:	fa001d1f 	blx	4319f0 <__adddf3>
  42a570:	e58d0010 	str	r0, [sp, #16]
  42a574:	e58d1014 	str	r1, [sp, #20]
  42a578:	e2846003 	add	r6, r4, #3
  42a57c:	e7970106 	ldr	r0, [r7, r6, lsl #2]
  42a580:	fa001dc0 	blx	431c88 <__aeabi_i2d>
  42a584:	e1a02008 	mov	r2, r8
  42a588:	e1a03009 	mov	r3, r9
  42a58c:	fa001df0 	blx	431d54 <__aeabi_dmul>
  42a590:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a594:	e893000c 	ldm	r3, {r2, r3}
  42a598:	fa001d14 	blx	4319f0 <__adddf3>
  42a59c:	e58d0018 	str	r0, [sp, #24]
  42a5a0:	e58d101c 	str	r1, [sp, #28]
  42a5a4:	e28d1010 	add	r1, sp, #16
  42a5a8:	e8910003 	ldm	r1, {r0, r1}
  42a5ac:	fa001f49 	blx	4322d8 <__aeabi_d2f>
  42a5b0:	e785010a 	str	r0, [r5, sl, lsl #2]
  42a5b4:	e28d1018 	add	r1, sp, #24
  42a5b8:	e8910003 	ldm	r1, {r0, r1}
  42a5bc:	fa001f45 	blx	4322d8 <__aeabi_d2f>
  42a5c0:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a5c4:	e2844004 	add	r4, r4, #4
  42a5c8:	ea000000 	b	42a5d0 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x904>
  42a5cc:	e3a04000 	mov	r4, #0
  42a5d0:	e59d6460 	ldr	r6, [sp, #1120]	; 0x460
  42a5d4:	e2463004 	sub	r3, r6, #4
  42a5d8:	e1530004 	cmp	r3, r4
  42a5dc:	aaffffbd 	bge	42a4d8 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x80c>
  42a5e0:	ea00000a 	b	42a610 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x944>
  42a5e4:	e7970104 	ldr	r0, [r7, r4, lsl #2]
  42a5e8:	fa001da6 	blx	431c88 <__aeabi_i2d>
  42a5ec:	e1a02008 	mov	r2, r8
  42a5f0:	e1a03009 	mov	r3, r9
  42a5f4:	fa001dd6 	blx	431d54 <__aeabi_dmul>
  42a5f8:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a5fc:	e893000c 	ldm	r3, {r2, r3}
  42a600:	fa001cfa 	blx	4319f0 <__adddf3>
  42a604:	fa001f33 	blx	4322d8 <__aeabi_d2f>
  42a608:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a60c:	e2844001 	add	r4, r4, #1
  42a610:	e1540006 	cmp	r4, r6
  42a614:	bafffff2 	blt	42a5e4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x918>
  42a618:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42a61c:	e0877103 	add	r7, r7, r3, lsl #2
  42a620:	e59d3020 	ldr	r3, [sp, #32]
  42a624:	e0855103 	add	r5, r5, r3, lsl #2
  42a628:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  42a62c:	e2432001 	sub	r2, r3, #1
  42a630:	e58d2464 	str	r2, [sp, #1124]	; 0x464
  42a634:	e3530000 	cmp	r3, #0
  42a638:	1affffe3 	bne	42a5cc <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x900>
  42a63c:	ea0000ca 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  42a640:	e1a09121 	lsr	r9, r1, #2
  42a644:	e58d9024 	str	r9, [sp, #36]	; 0x24
  42a648:	e1a07000 	mov	r7, r0
  42a64c:	e1a05002 	mov	r5, r2
  42a650:	e59d8468 	ldr	r8, [sp, #1128]	; 0x468
  42a654:	e59d946c 	ldr	r9, [sp, #1132]	; 0x46c
  42a658:	ea000053 	b	42a7ac <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xae0>
  42a65c:	e7970104 	ldr	r0, [r7, r4, lsl #2]
  42a660:	fa001d91 	blx	431cac <__aeabi_f2d>
  42a664:	e1a02008 	mov	r2, r8
  42a668:	e1a03009 	mov	r3, r9
  42a66c:	fa001db8 	blx	431d54 <__aeabi_dmul>
  42a670:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a674:	e893000c 	ldm	r3, {r2, r3}
  42a678:	fa001cdc 	blx	4319f0 <__adddf3>
  42a67c:	e1a0a000 	mov	sl, r0
  42a680:	e1a0b001 	mov	fp, r1
  42a684:	e2846001 	add	r6, r4, #1
  42a688:	e7970106 	ldr	r0, [r7, r6, lsl #2]
  42a68c:	fa001d86 	blx	431cac <__aeabi_f2d>
  42a690:	e1a02008 	mov	r2, r8
  42a694:	e1a03009 	mov	r3, r9
  42a698:	fa001dad 	blx	431d54 <__aeabi_dmul>
  42a69c:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a6a0:	e893000c 	ldm	r3, {r2, r3}
  42a6a4:	fa001cd1 	blx	4319f0 <__adddf3>
  42a6a8:	e58d0010 	str	r0, [sp, #16]
  42a6ac:	e58d1014 	str	r1, [sp, #20]
  42a6b0:	e1a0000a 	mov	r0, sl
  42a6b4:	e1a0100b 	mov	r1, fp
  42a6b8:	fa001f06 	blx	4322d8 <__aeabi_d2f>
  42a6bc:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a6c0:	e28d1010 	add	r1, sp, #16
  42a6c4:	e8910003 	ldm	r1, {r0, r1}
  42a6c8:	fa001f02 	blx	4322d8 <__aeabi_d2f>
  42a6cc:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a6d0:	e284a002 	add	sl, r4, #2
  42a6d4:	e797010a 	ldr	r0, [r7, sl, lsl #2]
  42a6d8:	fa001d73 	blx	431cac <__aeabi_f2d>
  42a6dc:	e1a02008 	mov	r2, r8
  42a6e0:	e1a03009 	mov	r3, r9
  42a6e4:	fa001d9a 	blx	431d54 <__aeabi_dmul>
  42a6e8:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a6ec:	e893000c 	ldm	r3, {r2, r3}
  42a6f0:	fa001cbe 	blx	4319f0 <__adddf3>
  42a6f4:	e58d0010 	str	r0, [sp, #16]
  42a6f8:	e58d1014 	str	r1, [sp, #20]
  42a6fc:	e2846003 	add	r6, r4, #3
  42a700:	e7970106 	ldr	r0, [r7, r6, lsl #2]
  42a704:	fa001d68 	blx	431cac <__aeabi_f2d>
  42a708:	e1a02008 	mov	r2, r8
  42a70c:	e1a03009 	mov	r3, r9
  42a710:	fa001d8f 	blx	431d54 <__aeabi_dmul>
  42a714:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a718:	e893000c 	ldm	r3, {r2, r3}
  42a71c:	fa001cb3 	blx	4319f0 <__adddf3>
  42a720:	e58d0018 	str	r0, [sp, #24]
  42a724:	e58d101c 	str	r1, [sp, #28]
  42a728:	e28d1010 	add	r1, sp, #16
  42a72c:	e8910003 	ldm	r1, {r0, r1}
  42a730:	fa001ee8 	blx	4322d8 <__aeabi_d2f>
  42a734:	e785010a 	str	r0, [r5, sl, lsl #2]
  42a738:	e28d1018 	add	r1, sp, #24
  42a73c:	e8910003 	ldm	r1, {r0, r1}
  42a740:	fa001ee4 	blx	4322d8 <__aeabi_d2f>
  42a744:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a748:	e2844004 	add	r4, r4, #4
  42a74c:	ea000000 	b	42a754 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xa88>
  42a750:	e3a04000 	mov	r4, #0
  42a754:	e59d6460 	ldr	r6, [sp, #1120]	; 0x460
  42a758:	e2463004 	sub	r3, r6, #4
  42a75c:	e1530004 	cmp	r3, r4
  42a760:	aaffffbd 	bge	42a65c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0x990>
  42a764:	ea00000a 	b	42a794 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xac8>
  42a768:	e7970104 	ldr	r0, [r7, r4, lsl #2]
  42a76c:	fa001d4e 	blx	431cac <__aeabi_f2d>
  42a770:	e1a02008 	mov	r2, r8
  42a774:	e1a03009 	mov	r3, r9
  42a778:	fa001d75 	blx	431d54 <__aeabi_dmul>
  42a77c:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a780:	e893000c 	ldm	r3, {r2, r3}
  42a784:	fa001c99 	blx	4319f0 <__adddf3>
  42a788:	fa001ed2 	blx	4322d8 <__aeabi_d2f>
  42a78c:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a790:	e2844001 	add	r4, r4, #1
  42a794:	e1540006 	cmp	r4, r6
  42a798:	bafffff2 	blt	42a768 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xa9c>
  42a79c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42a7a0:	e0877103 	add	r7, r7, r3, lsl #2
  42a7a4:	e59d3020 	ldr	r3, [sp, #32]
  42a7a8:	e0855103 	add	r5, r5, r3, lsl #2
  42a7ac:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  42a7b0:	e2432001 	sub	r2, r3, #1
  42a7b4:	e58d2464 	str	r2, [sp, #1124]	; 0x464
  42a7b8:	e3530000 	cmp	r3, #0
  42a7bc:	1affffe3 	bne	42a750 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xa84>
  42a7c0:	ea000069 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  42a7c4:	e1a031a1 	lsr	r3, r1, #3
  42a7c8:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42a7cc:	e1a07000 	mov	r7, r0
  42a7d0:	e1a05002 	mov	r5, r2
  42a7d4:	e59d8468 	ldr	r8, [sp, #1128]	; 0x468
  42a7d8:	e59d946c 	ldr	r9, [sp, #1132]	; 0x46c
  42a7dc:	ea000053 	b	42a930 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xc64>
  42a7e0:	e0873184 	add	r3, r7, r4, lsl #3
  42a7e4:	e1a00008 	mov	r0, r8
  42a7e8:	e1a01009 	mov	r1, r9
  42a7ec:	e893000c 	ldm	r3, {r2, r3}
  42a7f0:	fa001d57 	blx	431d54 <__aeabi_dmul>
  42a7f4:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a7f8:	e893000c 	ldm	r3, {r2, r3}
  42a7fc:	fa001c7b 	blx	4319f0 <__adddf3>
  42a800:	e1a0a000 	mov	sl, r0
  42a804:	e1a0b001 	mov	fp, r1
  42a808:	e2846001 	add	r6, r4, #1
  42a80c:	e0873186 	add	r3, r7, r6, lsl #3
  42a810:	e1a00008 	mov	r0, r8
  42a814:	e1a01009 	mov	r1, r9
  42a818:	e893000c 	ldm	r3, {r2, r3}
  42a81c:	fa001d4c 	blx	431d54 <__aeabi_dmul>
  42a820:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a824:	e893000c 	ldm	r3, {r2, r3}
  42a828:	fa001c70 	blx	4319f0 <__adddf3>
  42a82c:	e58d0010 	str	r0, [sp, #16]
  42a830:	e58d1014 	str	r1, [sp, #20]
  42a834:	e1a0000a 	mov	r0, sl
  42a838:	e1a0100b 	mov	r1, fp
  42a83c:	fa001ea5 	blx	4322d8 <__aeabi_d2f>
  42a840:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a844:	e28d1010 	add	r1, sp, #16
  42a848:	e8910003 	ldm	r1, {r0, r1}
  42a84c:	fa001ea1 	blx	4322d8 <__aeabi_d2f>
  42a850:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a854:	e284a002 	add	sl, r4, #2
  42a858:	e087318a 	add	r3, r7, sl, lsl #3
  42a85c:	e1a00008 	mov	r0, r8
  42a860:	e1a01009 	mov	r1, r9
  42a864:	e893000c 	ldm	r3, {r2, r3}
  42a868:	fa001d39 	blx	431d54 <__aeabi_dmul>
  42a86c:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a870:	e893000c 	ldm	r3, {r2, r3}
  42a874:	fa001c5d 	blx	4319f0 <__adddf3>
  42a878:	e58d0010 	str	r0, [sp, #16]
  42a87c:	e58d1014 	str	r1, [sp, #20]
  42a880:	e2846003 	add	r6, r4, #3
  42a884:	e0873186 	add	r3, r7, r6, lsl #3
  42a888:	e1a00008 	mov	r0, r8
  42a88c:	e1a01009 	mov	r1, r9
  42a890:	e893000c 	ldm	r3, {r2, r3}
  42a894:	fa001d2e 	blx	431d54 <__aeabi_dmul>
  42a898:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a89c:	e893000c 	ldm	r3, {r2, r3}
  42a8a0:	fa001c52 	blx	4319f0 <__adddf3>
  42a8a4:	e58d0018 	str	r0, [sp, #24]
  42a8a8:	e58d101c 	str	r1, [sp, #28]
  42a8ac:	e28d1010 	add	r1, sp, #16
  42a8b0:	e8910003 	ldm	r1, {r0, r1}
  42a8b4:	fa001e87 	blx	4322d8 <__aeabi_d2f>
  42a8b8:	e785010a 	str	r0, [r5, sl, lsl #2]
  42a8bc:	e28d1018 	add	r1, sp, #24
  42a8c0:	e8910003 	ldm	r1, {r0, r1}
  42a8c4:	fa001e83 	blx	4322d8 <__aeabi_d2f>
  42a8c8:	e7850106 	str	r0, [r5, r6, lsl #2]
  42a8cc:	e2844004 	add	r4, r4, #4
  42a8d0:	ea000000 	b	42a8d8 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xc0c>
  42a8d4:	e3a04000 	mov	r4, #0
  42a8d8:	e59d6460 	ldr	r6, [sp, #1120]	; 0x460
  42a8dc:	e2463004 	sub	r3, r6, #4
  42a8e0:	e1530004 	cmp	r3, r4
  42a8e4:	aaffffbd 	bge	42a7e0 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xb14>
  42a8e8:	ea00000a 	b	42a918 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xc4c>
  42a8ec:	e0873184 	add	r3, r7, r4, lsl #3
  42a8f0:	e1a00008 	mov	r0, r8
  42a8f4:	e1a01009 	mov	r1, r9
  42a8f8:	e893000c 	ldm	r3, {r2, r3}
  42a8fc:	fa001d14 	blx	431d54 <__aeabi_dmul>
  42a900:	e28d3e47 	add	r3, sp, #1136	; 0x470
  42a904:	e893000c 	ldm	r3, {r2, r3}
  42a908:	fa001c38 	blx	4319f0 <__adddf3>
  42a90c:	fa001e71 	blx	4322d8 <__aeabi_d2f>
  42a910:	e7850104 	str	r0, [r5, r4, lsl #2]
  42a914:	e2844001 	add	r4, r4, #1
  42a918:	e1540006 	cmp	r4, r6
  42a91c:	bafffff2 	blt	42a8ec <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xc20>
  42a920:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42a924:	e0877183 	add	r7, r7, r3, lsl #3
  42a928:	e59d3020 	ldr	r3, [sp, #32]
  42a92c:	e0855103 	add	r5, r5, r3, lsl #2
  42a930:	e59d3464 	ldr	r3, [sp, #1124]	; 0x464
  42a934:	e2432001 	sub	r2, r3, #1
  42a938:	e58d2464 	str	r2, [sp, #1124]	; 0x464
  42a93c:	e3530000 	cmp	r3, #0
  42a940:	1affffe3 	bne	42a8d4 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xc08>
  42a944:	ea000008 	b	42a96c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xca0>
  42a948:	e59f0030 	ldr	r0, [pc, #48]	; 42a980 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xcb4>
  42a94c:	e08f0000 	add	r0, pc, r0
  42a950:	e59f102c 	ldr	r1, [pc, #44]	; 42a984 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xcb8>
  42a954:	e59f202c 	ldr	r2, [pc, #44]	; 42a988 <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xcbc>
  42a958:	e08f2002 	add	r2, pc, r2
  42a95c:	e2822f8b 	add	r2, r2, #556	; 0x22c
  42a960:	e59f3024 	ldr	r3, [pc, #36]	; 42a98c <_ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi+0xcc0>
  42a964:	e08f3003 	add	r3, pc, r3
  42a968:	fa0024f9 	blx	433d54 <__assert_func>
  42a96c:	e3a00000 	mov	r0, #0
  42a970:	e28dde43 	add	sp, sp, #1072	; 0x430
  42a974:	e28dd00c 	add	sp, sp, #12
  42a978:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42a97c:	e12fff1e 	bx	lr
  42a980:	00015770 	.word	0x00015770
  42a984:	00000537 	.word	0x00000537
  42a988:	0001541c 	.word	0x0001541c
  42a98c:	00015138 	.word	0x00015138

0042a990 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi>:
  42a990:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42a994:	e24ddf8b 	sub	sp, sp, #556	; 0x22c
  42a998:	e1a04000 	mov	r4, r0
  42a99c:	e1a07001 	mov	r7, r1
  42a9a0:	e1a05002 	mov	r5, r2
  42a9a4:	e59d2258 	ldr	r2, [sp, #600]	; 0x258
  42a9a8:	e58d2014 	str	r2, [sp, #20]
  42a9ac:	e59d225c 	ldr	r2, [sp, #604]	; 0x25c
  42a9b0:	e58d2018 	str	r2, [sp, #24]
  42a9b4:	e59d2260 	ldr	r2, [sp, #608]	; 0x260
  42a9b8:	e58d201c 	str	r2, [sp, #28]
  42a9bc:	e59d6264 	ldr	r6, [sp, #612]	; 0x264
  42a9c0:	e1a030a3 	lsr	r3, r3, #1
  42a9c4:	e58d3020 	str	r3, [sp, #32]
  42a9c8:	e59d3268 	ldr	r3, [sp, #616]	; 0x268
  42a9cc:	e2033007 	and	r3, r3, #7
  42a9d0:	e3530006 	cmp	r3, #6
  42a9d4:	908ff103 	addls	pc, pc, r3, lsl #2
  42a9d8:	ea0006be 	b	42c4d8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b48>
  42a9dc:	ea000005 	b	42a9f8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x68>
  42a9e0:	ea000153 	b	42af34 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x5a4>
  42a9e4:	ea0002a0 	b	42b46c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xadc>
  42a9e8:	ea0003be 	b	42b8e8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xf58>
  42a9ec:	ea0004f4 	b	42bdc4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1434>
  42a9f0:	ea00058a 	b	42c020 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1690>
  42a9f4:	ea000620 	b	42c27c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x18ec>
  42a9f8:	e59db250 	ldr	fp, [sp, #592]	; 0x250
  42a9fc:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42aa00:	e003039b 	mul	r3, fp, r3
  42aa04:	e35300ff 	cmp	r3, #255	; 0xff
  42aa08:	ca00001c 	bgt	42aa80 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xf0>
  42aa0c:	ea00002d 	b	42aac8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x138>
  42aa10:	e1a00009 	mov	r0, r9
  42aa14:	e1a01006 	mov	r1, r6
  42aa18:	e3a02000 	mov	r2, #0
  42aa1c:	e59f3f60 	ldr	r3, [pc, #3936]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42aa20:	fa001bf2 	blx	4319f0 <__adddf3>
  42aa24:	fa001b93 	blx	431878 <floor>
  42aa28:	fa001e16 	blx	432288 <__aeabi_d2iz>
  42aa2c:	e1b03820 	lsrs	r3, r0, #16
  42aa30:	0a000004 	beq	42aa48 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xb8>
  42aa34:	e3500000 	cmp	r0, #0
  42aa38:	c59f0f64 	ldrgt	r0, [pc, #3940]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42aa3c:	ca000003 	bgt	42aa50 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc0>
  42aa40:	e3a00000 	mov	r0, #0
  42aa44:	ea000001 	b	42aa50 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc0>
  42aa48:	e1a00800 	lsl	r0, r0, #16
  42aa4c:	e1a00820 	lsr	r0, r0, #16
  42aa50:	e1a03088 	lsl	r3, r8, #1
  42aa54:	e28d2028 	add	r2, sp, #40	; 0x28
  42aa58:	e18200b3 	strh	r0, [r2, r3]
  42aa5c:	e2888001 	add	r8, r8, #1
  42aa60:	e1a00009 	mov	r0, r9
  42aa64:	e1a01006 	mov	r1, r6
  42aa68:	e1a0200a 	mov	r2, sl
  42aa6c:	e1a0300b 	mov	r3, fp
  42aa70:	fa001bde 	blx	4319f0 <__adddf3>
  42aa74:	e1a09000 	mov	r9, r0
  42aa78:	e1a06001 	mov	r6, r1
  42aa7c:	ea000003 	b	42aa90 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x100>
  42aa80:	e3a08000 	mov	r8, #0
  42aa84:	e59da014 	ldr	sl, [sp, #20]
  42aa88:	e59db018 	ldr	fp, [sp, #24]
  42aa8c:	e59d901c 	ldr	r9, [sp, #28]
  42aa90:	e35800ff 	cmp	r8, #255	; 0xff
  42aa94:	daffffdd 	ble	42aa10 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x80>
  42aa98:	e28d3f93 	add	r3, sp, #588	; 0x24c
  42aa9c:	e9930003 	ldmib	r3, {r0, r1}
  42aaa0:	e88d0003 	stm	sp, {r0, r1}
  42aaa4:	e28d3028 	add	r3, sp, #40	; 0x28
  42aaa8:	e58d3008 	str	r3, [sp, #8]
  42aaac:	e1a00004 	mov	r0, r4
  42aab0:	e1a01007 	mov	r1, r7
  42aab4:	e1a02005 	mov	r2, r5
  42aab8:	e59d3020 	ldr	r3, [sp, #32]
  42aabc:	e1a03083 	lsl	r3, r3, #1
  42aac0:	eb001680 	bl	4304c8 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt>
  42aac4:	ea00068c 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42aac8:	e59d0014 	ldr	r0, [sp, #20]
  42aacc:	e59d3018 	ldr	r3, [sp, #24]
  42aad0:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42aad4:	e3a02000 	mov	r2, #0
  42aad8:	e59f3ea8 	ldr	r3, [pc, #3752]	; 42b988 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff8>
  42aadc:	fa001dda 	blx	43224c <__aeabi_dcmple>
  42aae0:	e3500000 	cmp	r0, #0
  42aae4:	0a00007e 	beq	42ace4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x354>
  42aae8:	e59d001c 	ldr	r0, [sp, #28]
  42aaec:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42aaf0:	e59f2e94 	ldr	r2, [pc, #3732]	; 42b98c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xffc>
  42aaf4:	e59f3e94 	ldr	r3, [pc, #3732]	; 42b990 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1000>
  42aaf8:	fa001dd3 	blx	43224c <__aeabi_dcmple>
  42aafc:	e3500000 	cmp	r0, #0
  42ab00:	0a000077 	beq	42ace4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x354>
  42ab04:	e59d0014 	ldr	r0, [sp, #20]
  42ab08:	e59d1018 	ldr	r1, [sp, #24]
  42ab0c:	e3a02000 	mov	r2, #0
  42ab10:	e59f3e7c 	ldr	r3, [pc, #3708]	; 42b994 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1004>
  42ab14:	fa001c8e 	blx	431d54 <__aeabi_dmul>
  42ab18:	e3a02000 	mov	r2, #0
  42ab1c:	e59f3e60 	ldr	r3, [pc, #3680]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42ab20:	fa001bb2 	blx	4319f0 <__adddf3>
  42ab24:	fa001b53 	blx	431878 <floor>
  42ab28:	fa001dd6 	blx	432288 <__aeabi_d2iz>
  42ab2c:	e1a08000 	mov	r8, r0
  42ab30:	e59d001c 	ldr	r0, [sp, #28]
  42ab34:	e1a01006 	mov	r1, r6
  42ab38:	e3a02000 	mov	r2, #0
  42ab3c:	e59f3e50 	ldr	r3, [pc, #3664]	; 42b994 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1004>
  42ab40:	fa001c83 	blx	431d54 <__aeabi_dmul>
  42ab44:	e3a02000 	mov	r2, #0
  42ab48:	e59f3e34 	ldr	r3, [pc, #3636]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42ab4c:	fa001ba7 	blx	4319f0 <__adddf3>
  42ab50:	fa001b48 	blx	431878 <floor>
  42ab54:	fa001dcb 	blx	432288 <__aeabi_d2iz>
  42ab58:	e59d1020 	ldr	r1, [sp, #32]
  42ab5c:	ea00005a 	b	42accc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x33c>
  42ab60:	e1a0e003 	mov	lr, r3
  42ab64:	e7d42003 	ldrb	r2, [r4, r3]
  42ab68:	e0220298 	mla	r2, r8, r2, r0
  42ab6c:	e2822901 	add	r2, r2, #16384	; 0x4000
  42ab70:	e1a0c7c2 	asr	ip, r2, #15
  42ab74:	e2836001 	add	r6, r3, #1
  42ab78:	e7d42006 	ldrb	r2, [r4, r6]
  42ab7c:	e0220298 	mla	r2, r8, r2, r0
  42ab80:	e2822901 	add	r2, r2, #16384	; 0x4000
  42ab84:	e1a027c2 	asr	r2, r2, #15
  42ab88:	e0859083 	add	r9, r5, r3, lsl #1
  42ab8c:	e1b0a82c 	lsrs	sl, ip, #16
  42ab90:	0a000004 	beq	42aba8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x218>
  42ab94:	e35c0000 	cmp	ip, #0
  42ab98:	c59fce04 	ldrgt	ip, [pc, #3588]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ab9c:	ca000003 	bgt	42abb0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x220>
  42aba0:	e3a0c000 	mov	ip, #0
  42aba4:	ea000001 	b	42abb0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x220>
  42aba8:	e1a0c80c 	lsl	ip, ip, #16
  42abac:	e1a0c82c 	lsr	ip, ip, #16
  42abb0:	e1c9c0b0 	strh	ip, [r9]
  42abb4:	e0856086 	add	r6, r5, r6, lsl #1
  42abb8:	e1b0c822 	lsrs	ip, r2, #16
  42abbc:	0a000004 	beq	42abd4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x244>
  42abc0:	e3520000 	cmp	r2, #0
  42abc4:	c59f2dd8 	ldrgt	r2, [pc, #3544]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42abc8:	ca000003 	bgt	42abdc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x24c>
  42abcc:	e3a02000 	mov	r2, #0
  42abd0:	ea000001 	b	42abdc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x24c>
  42abd4:	e1a02802 	lsl	r2, r2, #16
  42abd8:	e1a02822 	lsr	r2, r2, #16
  42abdc:	e1c620b0 	strh	r2, [r6]
  42abe0:	e28e6002 	add	r6, lr, #2
  42abe4:	e7d4c006 	ldrb	ip, [r4, r6]
  42abe8:	e02c0c98 	mla	ip, r8, ip, r0
  42abec:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42abf0:	e1a0c7cc 	asr	ip, ip, #15
  42abf4:	e28ee003 	add	lr, lr, #3
  42abf8:	e7d4200e 	ldrb	r2, [r4, lr]
  42abfc:	e0220298 	mla	r2, r8, r2, r0
  42ac00:	e2822901 	add	r2, r2, #16384	; 0x4000
  42ac04:	e1a027c2 	asr	r2, r2, #15
  42ac08:	e0856086 	add	r6, r5, r6, lsl #1
  42ac0c:	e1b0982c 	lsrs	r9, ip, #16
  42ac10:	0a000004 	beq	42ac28 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x298>
  42ac14:	e35c0000 	cmp	ip, #0
  42ac18:	c59fcd84 	ldrgt	ip, [pc, #3460]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ac1c:	ca000003 	bgt	42ac30 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2a0>
  42ac20:	e3a0c000 	mov	ip, #0
  42ac24:	ea000001 	b	42ac30 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2a0>
  42ac28:	e1a0c80c 	lsl	ip, ip, #16
  42ac2c:	e1a0c82c 	lsr	ip, ip, #16
  42ac30:	e1c6c0b0 	strh	ip, [r6]
  42ac34:	e085e08e 	add	lr, r5, lr, lsl #1
  42ac38:	e1b0c822 	lsrs	ip, r2, #16
  42ac3c:	0a000004 	beq	42ac54 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2c4>
  42ac40:	e3520000 	cmp	r2, #0
  42ac44:	c59f2d58 	ldrgt	r2, [pc, #3416]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ac48:	ca000003 	bgt	42ac5c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2cc>
  42ac4c:	e3a02000 	mov	r2, #0
  42ac50:	ea000001 	b	42ac5c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2cc>
  42ac54:	e1a02802 	lsl	r2, r2, #16
  42ac58:	e1a02822 	lsr	r2, r2, #16
  42ac5c:	e1ce20b0 	strh	r2, [lr]
  42ac60:	e2833004 	add	r3, r3, #4
  42ac64:	ea000000 	b	42ac6c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2dc>
  42ac68:	e3a03000 	mov	r3, #0
  42ac6c:	e24b2004 	sub	r2, fp, #4
  42ac70:	e1520003 	cmp	r2, r3
  42ac74:	aaffffb9 	bge	42ab60 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1d0>
  42ac78:	ea00000f 	b	42acbc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x32c>
  42ac7c:	e7d42003 	ldrb	r2, [r4, r3]
  42ac80:	e0220298 	mla	r2, r8, r2, r0
  42ac84:	e2822901 	add	r2, r2, #16384	; 0x4000
  42ac88:	e1a027c2 	asr	r2, r2, #15
  42ac8c:	e085c083 	add	ip, r5, r3, lsl #1
  42ac90:	e1b0e822 	lsrs	lr, r2, #16
  42ac94:	0a000004 	beq	42acac <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x31c>
  42ac98:	e3520000 	cmp	r2, #0
  42ac9c:	c59f2d00 	ldrgt	r2, [pc, #3328]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42aca0:	ca000003 	bgt	42acb4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x324>
  42aca4:	e3a02000 	mov	r2, #0
  42aca8:	ea000001 	b	42acb4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x324>
  42acac:	e1a02802 	lsl	r2, r2, #16
  42acb0:	e1a02822 	lsr	r2, r2, #16
  42acb4:	e1cc20b0 	strh	r2, [ip]
  42acb8:	e2833001 	add	r3, r3, #1
  42acbc:	e153000b 	cmp	r3, fp
  42acc0:	baffffed 	blt	42ac7c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2ec>
  42acc4:	e0844007 	add	r4, r4, r7
  42acc8:	e0855081 	add	r5, r5, r1, lsl #1
  42accc:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42acd0:	e2432001 	sub	r2, r3, #1
  42acd4:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42acd8:	e3530000 	cmp	r3, #0
  42acdc:	1affffe1 	bne	42ac68 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x2d8>
  42ace0:	ea000605 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42ace4:	e58d7024 	str	r7, [sp, #36]	; 0x24
  42ace8:	ea00008b 	b	42af1c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x58c>
  42acec:	e1a08007 	mov	r8, r7
  42acf0:	e7d40007 	ldrb	r0, [r4, r7]
  42acf4:	fa001be3 	blx	431c88 <__aeabi_i2d>
  42acf8:	e59d2014 	ldr	r2, [sp, #20]
  42acfc:	e59d3018 	ldr	r3, [sp, #24]
  42ad00:	fa001c13 	blx	431d54 <__aeabi_dmul>
  42ad04:	e59d201c 	ldr	r2, [sp, #28]
  42ad08:	e1a03006 	mov	r3, r6
  42ad0c:	fa001b37 	blx	4319f0 <__adddf3>
  42ad10:	e3a02000 	mov	r2, #0
  42ad14:	e59f3c68 	ldr	r3, [pc, #3176]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42ad18:	fa001b34 	blx	4319f0 <__adddf3>
  42ad1c:	fa001ad5 	blx	431878 <floor>
  42ad20:	fa001d58 	blx	432288 <__aeabi_d2iz>
  42ad24:	e1a09000 	mov	r9, r0
  42ad28:	e287a001 	add	sl, r7, #1
  42ad2c:	e7d4000a 	ldrb	r0, [r4, sl]
  42ad30:	fa001bd4 	blx	431c88 <__aeabi_i2d>
  42ad34:	e59d2014 	ldr	r2, [sp, #20]
  42ad38:	e59d3018 	ldr	r3, [sp, #24]
  42ad3c:	fa001c04 	blx	431d54 <__aeabi_dmul>
  42ad40:	e59d201c 	ldr	r2, [sp, #28]
  42ad44:	e1a03006 	mov	r3, r6
  42ad48:	fa001b28 	blx	4319f0 <__adddf3>
  42ad4c:	e3a02000 	mov	r2, #0
  42ad50:	e59f3c2c 	ldr	r3, [pc, #3116]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42ad54:	fa001b25 	blx	4319f0 <__adddf3>
  42ad58:	fa001ac6 	blx	431878 <floor>
  42ad5c:	fa001d49 	blx	432288 <__aeabi_d2iz>
  42ad60:	e0853087 	add	r3, r5, r7, lsl #1
  42ad64:	e1b02829 	lsrs	r2, r9, #16
  42ad68:	0a000004 	beq	42ad80 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x3f0>
  42ad6c:	e3590000 	cmp	r9, #0
  42ad70:	c59f9c2c 	ldrgt	r9, [pc, #3116]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ad74:	ca000003 	bgt	42ad88 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x3f8>
  42ad78:	e3a09000 	mov	r9, #0
  42ad7c:	ea000001 	b	42ad88 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x3f8>
  42ad80:	e1a09809 	lsl	r9, r9, #16
  42ad84:	e1a09829 	lsr	r9, r9, #16
  42ad88:	e1c390b0 	strh	r9, [r3]
  42ad8c:	e085a08a 	add	sl, r5, sl, lsl #1
  42ad90:	e1b03820 	lsrs	r3, r0, #16
  42ad94:	0a000004 	beq	42adac <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x41c>
  42ad98:	e3500000 	cmp	r0, #0
  42ad9c:	c59f0c00 	ldrgt	r0, [pc, #3072]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ada0:	ca000003 	bgt	42adb4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x424>
  42ada4:	e3a00000 	mov	r0, #0
  42ada8:	ea000001 	b	42adb4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x424>
  42adac:	e1a00800 	lsl	r0, r0, #16
  42adb0:	e1a00820 	lsr	r0, r0, #16
  42adb4:	e1ca00b0 	strh	r0, [sl]
  42adb8:	e288a002 	add	sl, r8, #2
  42adbc:	e7d4000a 	ldrb	r0, [r4, sl]
  42adc0:	fa001bb0 	blx	431c88 <__aeabi_i2d>
  42adc4:	e59d2014 	ldr	r2, [sp, #20]
  42adc8:	e59d3018 	ldr	r3, [sp, #24]
  42adcc:	fa001be0 	blx	431d54 <__aeabi_dmul>
  42add0:	e59d201c 	ldr	r2, [sp, #28]
  42add4:	e1a03006 	mov	r3, r6
  42add8:	fa001b04 	blx	4319f0 <__adddf3>
  42addc:	e3a02000 	mov	r2, #0
  42ade0:	e59f3b9c 	ldr	r3, [pc, #2972]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42ade4:	fa001b01 	blx	4319f0 <__adddf3>
  42ade8:	fa001aa2 	blx	431878 <floor>
  42adec:	fa001d25 	blx	432288 <__aeabi_d2iz>
  42adf0:	e1a09000 	mov	r9, r0
  42adf4:	e2888003 	add	r8, r8, #3
  42adf8:	e7d40008 	ldrb	r0, [r4, r8]
  42adfc:	fa001ba1 	blx	431c88 <__aeabi_i2d>
  42ae00:	e59d2014 	ldr	r2, [sp, #20]
  42ae04:	e59d3018 	ldr	r3, [sp, #24]
  42ae08:	fa001bd1 	blx	431d54 <__aeabi_dmul>
  42ae0c:	e59d201c 	ldr	r2, [sp, #28]
  42ae10:	e1a03006 	mov	r3, r6
  42ae14:	fa001af5 	blx	4319f0 <__adddf3>
  42ae18:	e3a02000 	mov	r2, #0
  42ae1c:	e59f3b60 	ldr	r3, [pc, #2912]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42ae20:	fa001af2 	blx	4319f0 <__adddf3>
  42ae24:	fa001a93 	blx	431878 <floor>
  42ae28:	fa001d16 	blx	432288 <__aeabi_d2iz>
  42ae2c:	e085a08a 	add	sl, r5, sl, lsl #1
  42ae30:	e1b03829 	lsrs	r3, r9, #16
  42ae34:	0a000004 	beq	42ae4c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x4bc>
  42ae38:	e3590000 	cmp	r9, #0
  42ae3c:	c59f9b60 	ldrgt	r9, [pc, #2912]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ae40:	ca000003 	bgt	42ae54 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x4c4>
  42ae44:	e3a09000 	mov	r9, #0
  42ae48:	ea000001 	b	42ae54 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x4c4>
  42ae4c:	e1a09809 	lsl	r9, r9, #16
  42ae50:	e1a09829 	lsr	r9, r9, #16
  42ae54:	e1ca90b0 	strh	r9, [sl]
  42ae58:	e0858088 	add	r8, r5, r8, lsl #1
  42ae5c:	e1b03820 	lsrs	r3, r0, #16
  42ae60:	0a000004 	beq	42ae78 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x4e8>
  42ae64:	e3500000 	cmp	r0, #0
  42ae68:	c59f0b34 	ldrgt	r0, [pc, #2868]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ae6c:	ca000003 	bgt	42ae80 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x4f0>
  42ae70:	e3a00000 	mov	r0, #0
  42ae74:	ea000001 	b	42ae80 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x4f0>
  42ae78:	e1a00800 	lsl	r0, r0, #16
  42ae7c:	e1a00820 	lsr	r0, r0, #16
  42ae80:	e1c800b0 	strh	r0, [r8]
  42ae84:	e2877004 	add	r7, r7, #4
  42ae88:	ea000000 	b	42ae90 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x500>
  42ae8c:	e3a07000 	mov	r7, #0
  42ae90:	e24b3004 	sub	r3, fp, #4
  42ae94:	e1530007 	cmp	r3, r7
  42ae98:	aaffff93 	bge	42acec <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x35c>
  42ae9c:	ea000018 	b	42af04 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x574>
  42aea0:	e7d40007 	ldrb	r0, [r4, r7]
  42aea4:	fa001b77 	blx	431c88 <__aeabi_i2d>
  42aea8:	e59d2014 	ldr	r2, [sp, #20]
  42aeac:	e59d3018 	ldr	r3, [sp, #24]
  42aeb0:	fa001ba7 	blx	431d54 <__aeabi_dmul>
  42aeb4:	e59d201c 	ldr	r2, [sp, #28]
  42aeb8:	e1a03006 	mov	r3, r6
  42aebc:	fa001acb 	blx	4319f0 <__adddf3>
  42aec0:	e3a02000 	mov	r2, #0
  42aec4:	e59f3ab8 	ldr	r3, [pc, #2744]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42aec8:	fa001ac8 	blx	4319f0 <__adddf3>
  42aecc:	fa001a69 	blx	431878 <floor>
  42aed0:	fa001cec 	blx	432288 <__aeabi_d2iz>
  42aed4:	e0853087 	add	r3, r5, r7, lsl #1
  42aed8:	e1b02820 	lsrs	r2, r0, #16
  42aedc:	0a000004 	beq	42aef4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x564>
  42aee0:	e3500000 	cmp	r0, #0
  42aee4:	c59f0ab8 	ldrgt	r0, [pc, #2744]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42aee8:	ca000003 	bgt	42aefc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x56c>
  42aeec:	e3a00000 	mov	r0, #0
  42aef0:	ea000001 	b	42aefc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x56c>
  42aef4:	e1a00800 	lsl	r0, r0, #16
  42aef8:	e1a00820 	lsr	r0, r0, #16
  42aefc:	e1c300b0 	strh	r0, [r3]
  42af00:	e2877001 	add	r7, r7, #1
  42af04:	e157000b 	cmp	r7, fp
  42af08:	baffffe4 	blt	42aea0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x510>
  42af0c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42af10:	e0844003 	add	r4, r4, r3
  42af14:	e59d3020 	ldr	r3, [sp, #32]
  42af18:	e0855083 	add	r5, r5, r3, lsl #1
  42af1c:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42af20:	e2432001 	sub	r2, r3, #1
  42af24:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42af28:	e3530000 	cmp	r3, #0
  42af2c:	1affffd6 	bne	42ae8c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x4fc>
  42af30:	ea000571 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42af34:	e59db250 	ldr	fp, [sp, #592]	; 0x250
  42af38:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42af3c:	e003039b 	mul	r3, fp, r3
  42af40:	e35300ff 	cmp	r3, #255	; 0xff
  42af44:	ca00001b 	bgt	42afb8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x628>
  42af48:	ea00002c 	b	42b000 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x670>
  42af4c:	e20800ff 	and	r0, r8, #255	; 0xff
  42af50:	fa001b4c 	blx	431c88 <__aeabi_i2d>
  42af54:	e1a02009 	mov	r2, r9
  42af58:	e1a0300a 	mov	r3, sl
  42af5c:	fa001b7c 	blx	431d54 <__aeabi_dmul>
  42af60:	e1a0200b 	mov	r2, fp
  42af64:	e1a03006 	mov	r3, r6
  42af68:	fa001aa0 	blx	4319f0 <__adddf3>
  42af6c:	e3a02000 	mov	r2, #0
  42af70:	e59f3a0c 	ldr	r3, [pc, #2572]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42af74:	fa001a9d 	blx	4319f0 <__adddf3>
  42af78:	fa001a3e 	blx	431878 <floor>
  42af7c:	fa001cc1 	blx	432288 <__aeabi_d2iz>
  42af80:	e1b03820 	lsrs	r3, r0, #16
  42af84:	0a000004 	beq	42af9c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x60c>
  42af88:	e3500000 	cmp	r0, #0
  42af8c:	c59f0a10 	ldrgt	r0, [pc, #2576]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42af90:	ca000003 	bgt	42afa4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x614>
  42af94:	e3a00000 	mov	r0, #0
  42af98:	ea000001 	b	42afa4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x614>
  42af9c:	e1a00800 	lsl	r0, r0, #16
  42afa0:	e1a00820 	lsr	r0, r0, #16
  42afa4:	e1a03088 	lsl	r3, r8, #1
  42afa8:	e28d2028 	add	r2, sp, #40	; 0x28
  42afac:	e18200b3 	strh	r0, [r2, r3]
  42afb0:	e2888001 	add	r8, r8, #1
  42afb4:	ea000003 	b	42afc8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x638>
  42afb8:	e3a08000 	mov	r8, #0
  42afbc:	e59d9014 	ldr	r9, [sp, #20]
  42afc0:	e59da018 	ldr	sl, [sp, #24]
  42afc4:	e59db01c 	ldr	fp, [sp, #28]
  42afc8:	e35800ff 	cmp	r8, #255	; 0xff
  42afcc:	daffffde 	ble	42af4c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x5bc>
  42afd0:	e28d3f93 	add	r3, sp, #588	; 0x24c
  42afd4:	e9930003 	ldmib	r3, {r0, r1}
  42afd8:	e88d0003 	stm	sp, {r0, r1}
  42afdc:	e28d3028 	add	r3, sp, #40	; 0x28
  42afe0:	e58d3008 	str	r3, [sp, #8]
  42afe4:	e1a00004 	mov	r0, r4
  42afe8:	e1a01007 	mov	r1, r7
  42afec:	e1a02005 	mov	r2, r5
  42aff0:	e59d3020 	ldr	r3, [sp, #32]
  42aff4:	e1a03083 	lsl	r3, r3, #1
  42aff8:	eb001532 	bl	4304c8 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt>
  42affc:	ea00053e 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42b000:	e59d0014 	ldr	r0, [sp, #20]
  42b004:	e59d3018 	ldr	r3, [sp, #24]
  42b008:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42b00c:	e3a02000 	mov	r2, #0
  42b010:	e59f3970 	ldr	r3, [pc, #2416]	; 42b988 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff8>
  42b014:	fa001c8c 	blx	43224c <__aeabi_dcmple>
  42b018:	e3500000 	cmp	r0, #0
  42b01c:	0a00007e 	beq	42b21c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x88c>
  42b020:	e59d001c 	ldr	r0, [sp, #28]
  42b024:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42b028:	e59f295c 	ldr	r2, [pc, #2396]	; 42b98c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xffc>
  42b02c:	e59f395c 	ldr	r3, [pc, #2396]	; 42b990 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1000>
  42b030:	fa001c85 	blx	43224c <__aeabi_dcmple>
  42b034:	e3500000 	cmp	r0, #0
  42b038:	0a000077 	beq	42b21c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x88c>
  42b03c:	e59d0014 	ldr	r0, [sp, #20]
  42b040:	e59d1018 	ldr	r1, [sp, #24]
  42b044:	e3a02000 	mov	r2, #0
  42b048:	e59f3944 	ldr	r3, [pc, #2372]	; 42b994 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1004>
  42b04c:	fa001b40 	blx	431d54 <__aeabi_dmul>
  42b050:	e3a02000 	mov	r2, #0
  42b054:	e59f3928 	ldr	r3, [pc, #2344]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b058:	fa001a64 	blx	4319f0 <__adddf3>
  42b05c:	fa001a05 	blx	431878 <floor>
  42b060:	fa001c88 	blx	432288 <__aeabi_d2iz>
  42b064:	e1a08000 	mov	r8, r0
  42b068:	e59d001c 	ldr	r0, [sp, #28]
  42b06c:	e1a01006 	mov	r1, r6
  42b070:	e3a02000 	mov	r2, #0
  42b074:	e59f3918 	ldr	r3, [pc, #2328]	; 42b994 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1004>
  42b078:	fa001b35 	blx	431d54 <__aeabi_dmul>
  42b07c:	e3a02000 	mov	r2, #0
  42b080:	e59f38fc 	ldr	r3, [pc, #2300]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b084:	fa001a59 	blx	4319f0 <__adddf3>
  42b088:	fa0019fa 	blx	431878 <floor>
  42b08c:	fa001c7d 	blx	432288 <__aeabi_d2iz>
  42b090:	e59d1020 	ldr	r1, [sp, #32]
  42b094:	ea00005a 	b	42b204 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x874>
  42b098:	e1a0e003 	mov	lr, r3
  42b09c:	e7d42003 	ldrb	r2, [r4, r3]
  42b0a0:	e0220298 	mla	r2, r8, r2, r0
  42b0a4:	e2822901 	add	r2, r2, #16384	; 0x4000
  42b0a8:	e1a0c7c2 	asr	ip, r2, #15
  42b0ac:	e2836001 	add	r6, r3, #1
  42b0b0:	e7d42006 	ldrb	r2, [r4, r6]
  42b0b4:	e0220298 	mla	r2, r8, r2, r0
  42b0b8:	e2822901 	add	r2, r2, #16384	; 0x4000
  42b0bc:	e1a027c2 	asr	r2, r2, #15
  42b0c0:	e0859083 	add	r9, r5, r3, lsl #1
  42b0c4:	e1b0a82c 	lsrs	sl, ip, #16
  42b0c8:	0a000004 	beq	42b0e0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x750>
  42b0cc:	e35c0000 	cmp	ip, #0
  42b0d0:	c59fc8cc 	ldrgt	ip, [pc, #2252]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b0d4:	ca000003 	bgt	42b0e8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x758>
  42b0d8:	e3a0c000 	mov	ip, #0
  42b0dc:	ea000001 	b	42b0e8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x758>
  42b0e0:	e1a0c80c 	lsl	ip, ip, #16
  42b0e4:	e1a0c82c 	lsr	ip, ip, #16
  42b0e8:	e1c9c0b0 	strh	ip, [r9]
  42b0ec:	e0856086 	add	r6, r5, r6, lsl #1
  42b0f0:	e1b0c822 	lsrs	ip, r2, #16
  42b0f4:	0a000004 	beq	42b10c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x77c>
  42b0f8:	e3520000 	cmp	r2, #0
  42b0fc:	c59f28a0 	ldrgt	r2, [pc, #2208]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b100:	ca000003 	bgt	42b114 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x784>
  42b104:	e3a02000 	mov	r2, #0
  42b108:	ea000001 	b	42b114 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x784>
  42b10c:	e1a02802 	lsl	r2, r2, #16
  42b110:	e1a02822 	lsr	r2, r2, #16
  42b114:	e1c620b0 	strh	r2, [r6]
  42b118:	e28e6002 	add	r6, lr, #2
  42b11c:	e7d4c006 	ldrb	ip, [r4, r6]
  42b120:	e02c0c98 	mla	ip, r8, ip, r0
  42b124:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42b128:	e1a0c7cc 	asr	ip, ip, #15
  42b12c:	e28ee003 	add	lr, lr, #3
  42b130:	e7d4200e 	ldrb	r2, [r4, lr]
  42b134:	e0220298 	mla	r2, r8, r2, r0
  42b138:	e2822901 	add	r2, r2, #16384	; 0x4000
  42b13c:	e1a027c2 	asr	r2, r2, #15
  42b140:	e0856086 	add	r6, r5, r6, lsl #1
  42b144:	e1b0982c 	lsrs	r9, ip, #16
  42b148:	0a000004 	beq	42b160 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x7d0>
  42b14c:	e35c0000 	cmp	ip, #0
  42b150:	c59fc84c 	ldrgt	ip, [pc, #2124]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b154:	ca000003 	bgt	42b168 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x7d8>
  42b158:	e3a0c000 	mov	ip, #0
  42b15c:	ea000001 	b	42b168 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x7d8>
  42b160:	e1a0c80c 	lsl	ip, ip, #16
  42b164:	e1a0c82c 	lsr	ip, ip, #16
  42b168:	e1c6c0b0 	strh	ip, [r6]
  42b16c:	e085e08e 	add	lr, r5, lr, lsl #1
  42b170:	e1b0c822 	lsrs	ip, r2, #16
  42b174:	0a000004 	beq	42b18c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x7fc>
  42b178:	e3520000 	cmp	r2, #0
  42b17c:	c59f2820 	ldrgt	r2, [pc, #2080]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b180:	ca000003 	bgt	42b194 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x804>
  42b184:	e3a02000 	mov	r2, #0
  42b188:	ea000001 	b	42b194 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x804>
  42b18c:	e1a02802 	lsl	r2, r2, #16
  42b190:	e1a02822 	lsr	r2, r2, #16
  42b194:	e1ce20b0 	strh	r2, [lr]
  42b198:	e2833004 	add	r3, r3, #4
  42b19c:	ea000000 	b	42b1a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x814>
  42b1a0:	e3a03000 	mov	r3, #0
  42b1a4:	e24b2004 	sub	r2, fp, #4
  42b1a8:	e1520003 	cmp	r2, r3
  42b1ac:	aaffffb9 	bge	42b098 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x708>
  42b1b0:	ea00000f 	b	42b1f4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x864>
  42b1b4:	e7d42003 	ldrb	r2, [r4, r3]
  42b1b8:	e0220298 	mla	r2, r8, r2, r0
  42b1bc:	e2822901 	add	r2, r2, #16384	; 0x4000
  42b1c0:	e1a027c2 	asr	r2, r2, #15
  42b1c4:	e085c083 	add	ip, r5, r3, lsl #1
  42b1c8:	e1b0e822 	lsrs	lr, r2, #16
  42b1cc:	0a000004 	beq	42b1e4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x854>
  42b1d0:	e3520000 	cmp	r2, #0
  42b1d4:	c59f27c8 	ldrgt	r2, [pc, #1992]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b1d8:	ca000003 	bgt	42b1ec <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x85c>
  42b1dc:	e3a02000 	mov	r2, #0
  42b1e0:	ea000001 	b	42b1ec <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x85c>
  42b1e4:	e1a02802 	lsl	r2, r2, #16
  42b1e8:	e1a02822 	lsr	r2, r2, #16
  42b1ec:	e1cc20b0 	strh	r2, [ip]
  42b1f0:	e2833001 	add	r3, r3, #1
  42b1f4:	e153000b 	cmp	r3, fp
  42b1f8:	baffffed 	blt	42b1b4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x824>
  42b1fc:	e0844007 	add	r4, r4, r7
  42b200:	e0855081 	add	r5, r5, r1, lsl #1
  42b204:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42b208:	e2432001 	sub	r2, r3, #1
  42b20c:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42b210:	e3530000 	cmp	r3, #0
  42b214:	1affffe1 	bne	42b1a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x810>
  42b218:	ea0004b7 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42b21c:	e58d7024 	str	r7, [sp, #36]	; 0x24
  42b220:	ea00008b 	b	42b454 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xac4>
  42b224:	e1a08007 	mov	r8, r7
  42b228:	e7d40007 	ldrb	r0, [r4, r7]
  42b22c:	fa001a95 	blx	431c88 <__aeabi_i2d>
  42b230:	e59d2014 	ldr	r2, [sp, #20]
  42b234:	e59d3018 	ldr	r3, [sp, #24]
  42b238:	fa001ac5 	blx	431d54 <__aeabi_dmul>
  42b23c:	e59d201c 	ldr	r2, [sp, #28]
  42b240:	e1a03006 	mov	r3, r6
  42b244:	fa0019e9 	blx	4319f0 <__adddf3>
  42b248:	e3a02000 	mov	r2, #0
  42b24c:	e59f3730 	ldr	r3, [pc, #1840]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b250:	fa0019e6 	blx	4319f0 <__adddf3>
  42b254:	fa001987 	blx	431878 <floor>
  42b258:	fa001c0a 	blx	432288 <__aeabi_d2iz>
  42b25c:	e1a09000 	mov	r9, r0
  42b260:	e287a001 	add	sl, r7, #1
  42b264:	e7d4000a 	ldrb	r0, [r4, sl]
  42b268:	fa001a86 	blx	431c88 <__aeabi_i2d>
  42b26c:	e59d2014 	ldr	r2, [sp, #20]
  42b270:	e59d3018 	ldr	r3, [sp, #24]
  42b274:	fa001ab6 	blx	431d54 <__aeabi_dmul>
  42b278:	e59d201c 	ldr	r2, [sp, #28]
  42b27c:	e1a03006 	mov	r3, r6
  42b280:	fa0019da 	blx	4319f0 <__adddf3>
  42b284:	e3a02000 	mov	r2, #0
  42b288:	e59f36f4 	ldr	r3, [pc, #1780]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b28c:	fa0019d7 	blx	4319f0 <__adddf3>
  42b290:	fa001978 	blx	431878 <floor>
  42b294:	fa001bfb 	blx	432288 <__aeabi_d2iz>
  42b298:	e0853087 	add	r3, r5, r7, lsl #1
  42b29c:	e1b02829 	lsrs	r2, r9, #16
  42b2a0:	0a000004 	beq	42b2b8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x928>
  42b2a4:	e3590000 	cmp	r9, #0
  42b2a8:	c59f96f4 	ldrgt	r9, [pc, #1780]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b2ac:	ca000003 	bgt	42b2c0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x930>
  42b2b0:	e3a09000 	mov	r9, #0
  42b2b4:	ea000001 	b	42b2c0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x930>
  42b2b8:	e1a09809 	lsl	r9, r9, #16
  42b2bc:	e1a09829 	lsr	r9, r9, #16
  42b2c0:	e1c390b0 	strh	r9, [r3]
  42b2c4:	e085a08a 	add	sl, r5, sl, lsl #1
  42b2c8:	e1b03820 	lsrs	r3, r0, #16
  42b2cc:	0a000004 	beq	42b2e4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x954>
  42b2d0:	e3500000 	cmp	r0, #0
  42b2d4:	c59f06c8 	ldrgt	r0, [pc, #1736]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b2d8:	ca000003 	bgt	42b2ec <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x95c>
  42b2dc:	e3a00000 	mov	r0, #0
  42b2e0:	ea000001 	b	42b2ec <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x95c>
  42b2e4:	e1a00800 	lsl	r0, r0, #16
  42b2e8:	e1a00820 	lsr	r0, r0, #16
  42b2ec:	e1ca00b0 	strh	r0, [sl]
  42b2f0:	e288a002 	add	sl, r8, #2
  42b2f4:	e7d4000a 	ldrb	r0, [r4, sl]
  42b2f8:	fa001a62 	blx	431c88 <__aeabi_i2d>
  42b2fc:	e59d2014 	ldr	r2, [sp, #20]
  42b300:	e59d3018 	ldr	r3, [sp, #24]
  42b304:	fa001a92 	blx	431d54 <__aeabi_dmul>
  42b308:	e59d201c 	ldr	r2, [sp, #28]
  42b30c:	e1a03006 	mov	r3, r6
  42b310:	fa0019b6 	blx	4319f0 <__adddf3>
  42b314:	e3a02000 	mov	r2, #0
  42b318:	e59f3664 	ldr	r3, [pc, #1636]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b31c:	fa0019b3 	blx	4319f0 <__adddf3>
  42b320:	fa001954 	blx	431878 <floor>
  42b324:	fa001bd7 	blx	432288 <__aeabi_d2iz>
  42b328:	e1a09000 	mov	r9, r0
  42b32c:	e2888003 	add	r8, r8, #3
  42b330:	e7d40008 	ldrb	r0, [r4, r8]
  42b334:	fa001a53 	blx	431c88 <__aeabi_i2d>
  42b338:	e59d2014 	ldr	r2, [sp, #20]
  42b33c:	e59d3018 	ldr	r3, [sp, #24]
  42b340:	fa001a83 	blx	431d54 <__aeabi_dmul>
  42b344:	e59d201c 	ldr	r2, [sp, #28]
  42b348:	e1a03006 	mov	r3, r6
  42b34c:	fa0019a7 	blx	4319f0 <__adddf3>
  42b350:	e3a02000 	mov	r2, #0
  42b354:	e59f3628 	ldr	r3, [pc, #1576]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b358:	fa0019a4 	blx	4319f0 <__adddf3>
  42b35c:	fa001945 	blx	431878 <floor>
  42b360:	fa001bc8 	blx	432288 <__aeabi_d2iz>
  42b364:	e085a08a 	add	sl, r5, sl, lsl #1
  42b368:	e1b03829 	lsrs	r3, r9, #16
  42b36c:	0a000004 	beq	42b384 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x9f4>
  42b370:	e3590000 	cmp	r9, #0
  42b374:	c59f9628 	ldrgt	r9, [pc, #1576]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b378:	ca000003 	bgt	42b38c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x9fc>
  42b37c:	e3a09000 	mov	r9, #0
  42b380:	ea000001 	b	42b38c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x9fc>
  42b384:	e1a09809 	lsl	r9, r9, #16
  42b388:	e1a09829 	lsr	r9, r9, #16
  42b38c:	e1ca90b0 	strh	r9, [sl]
  42b390:	e0858088 	add	r8, r5, r8, lsl #1
  42b394:	e1b03820 	lsrs	r3, r0, #16
  42b398:	0a000004 	beq	42b3b0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xa20>
  42b39c:	e3500000 	cmp	r0, #0
  42b3a0:	c59f05fc 	ldrgt	r0, [pc, #1532]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b3a4:	ca000003 	bgt	42b3b8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xa28>
  42b3a8:	e3a00000 	mov	r0, #0
  42b3ac:	ea000001 	b	42b3b8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xa28>
  42b3b0:	e1a00800 	lsl	r0, r0, #16
  42b3b4:	e1a00820 	lsr	r0, r0, #16
  42b3b8:	e1c800b0 	strh	r0, [r8]
  42b3bc:	e2877004 	add	r7, r7, #4
  42b3c0:	ea000000 	b	42b3c8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xa38>
  42b3c4:	e3a07000 	mov	r7, #0
  42b3c8:	e24b3004 	sub	r3, fp, #4
  42b3cc:	e1530007 	cmp	r3, r7
  42b3d0:	aaffff93 	bge	42b224 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x894>
  42b3d4:	ea000018 	b	42b43c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xaac>
  42b3d8:	e7d40007 	ldrb	r0, [r4, r7]
  42b3dc:	fa001a29 	blx	431c88 <__aeabi_i2d>
  42b3e0:	e59d2014 	ldr	r2, [sp, #20]
  42b3e4:	e59d3018 	ldr	r3, [sp, #24]
  42b3e8:	fa001a59 	blx	431d54 <__aeabi_dmul>
  42b3ec:	e59d201c 	ldr	r2, [sp, #28]
  42b3f0:	e1a03006 	mov	r3, r6
  42b3f4:	fa00197d 	blx	4319f0 <__adddf3>
  42b3f8:	e3a02000 	mov	r2, #0
  42b3fc:	e59f3580 	ldr	r3, [pc, #1408]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b400:	fa00197a 	blx	4319f0 <__adddf3>
  42b404:	fa00191b 	blx	431878 <floor>
  42b408:	fa001b9e 	blx	432288 <__aeabi_d2iz>
  42b40c:	e0853087 	add	r3, r5, r7, lsl #1
  42b410:	e1b02820 	lsrs	r2, r0, #16
  42b414:	0a000004 	beq	42b42c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xa9c>
  42b418:	e3500000 	cmp	r0, #0
  42b41c:	c59f0580 	ldrgt	r0, [pc, #1408]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b420:	ca000003 	bgt	42b434 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xaa4>
  42b424:	e3a00000 	mov	r0, #0
  42b428:	ea000001 	b	42b434 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xaa4>
  42b42c:	e1a00800 	lsl	r0, r0, #16
  42b430:	e1a00820 	lsr	r0, r0, #16
  42b434:	e1c300b0 	strh	r0, [r3]
  42b438:	e2877001 	add	r7, r7, #1
  42b43c:	e157000b 	cmp	r7, fp
  42b440:	baffffe4 	blt	42b3d8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xa48>
  42b444:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42b448:	e0844003 	add	r4, r4, r3
  42b44c:	e59d3020 	ldr	r3, [sp, #32]
  42b450:	e0855083 	add	r5, r5, r3, lsl #1
  42b454:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42b458:	e2432001 	sub	r2, r3, #1
  42b45c:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42b460:	e3530000 	cmp	r3, #0
  42b464:	1affffd6 	bne	42b3c4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xa34>
  42b468:	ea000423 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42b46c:	e59d0014 	ldr	r0, [sp, #20]
  42b470:	e59d3018 	ldr	r3, [sp, #24]
  42b474:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42b478:	e3a02000 	mov	r2, #0
  42b47c:	e59f3514 	ldr	r3, [pc, #1300]	; 42b998 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1008>
  42b480:	fa001b71 	blx	43224c <__aeabi_dcmple>
  42b484:	e3500000 	cmp	r0, #0
  42b488:	0a00007a 	beq	42b678 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xce8>
  42b48c:	e59d001c 	ldr	r0, [sp, #28]
  42b490:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42b494:	e3a02000 	mov	r2, #0
  42b498:	e59f34fc 	ldr	r3, [pc, #1276]	; 42b99c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x100c>
  42b49c:	fa001b65 	blx	432238 <__aeabi_dcmplt>
  42b4a0:	e3500000 	cmp	r0, #0
  42b4a4:	0a000073 	beq	42b678 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xce8>
  42b4a8:	e59d0014 	ldr	r0, [sp, #20]
  42b4ac:	e59d1018 	ldr	r1, [sp, #24]
  42b4b0:	e3a02000 	mov	r2, #0
  42b4b4:	e59f34d8 	ldr	r3, [pc, #1240]	; 42b994 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1004>
  42b4b8:	fa001a25 	blx	431d54 <__aeabi_dmul>
  42b4bc:	e3a02000 	mov	r2, #0
  42b4c0:	e59f34bc 	ldr	r3, [pc, #1212]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b4c4:	fa001949 	blx	4319f0 <__adddf3>
  42b4c8:	fa0018ea 	blx	431878 <floor>
  42b4cc:	fa001b6d 	blx	432288 <__aeabi_d2iz>
  42b4d0:	e1a070a7 	lsr	r7, r7, #1
  42b4d4:	e59d1020 	ldr	r1, [sp, #32]
  42b4d8:	ea000060 	b	42b660 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xcd0>
  42b4dc:	e1a06002 	mov	r6, r2
  42b4e0:	e1a0c082 	lsl	ip, r2, #1
  42b4e4:	e19430bc 	ldrh	r3, [r4, ip]
  42b4e8:	e0030390 	mul	r3, r0, r3
  42b4ec:	e2833901 	add	r3, r3, #16384	; 0x4000
  42b4f0:	e1a0e7c3 	asr	lr, r3, #15
  42b4f4:	e2828001 	add	r8, r2, #1
  42b4f8:	e1a08088 	lsl	r8, r8, #1
  42b4fc:	e19430b8 	ldrh	r3, [r4, r8]
  42b500:	e0030390 	mul	r3, r0, r3
  42b504:	e2833901 	add	r3, r3, #16384	; 0x4000
  42b508:	e1a037c3 	asr	r3, r3, #15
  42b50c:	e085c00c 	add	ip, r5, ip
  42b510:	e1b0982e 	lsrs	r9, lr, #16
  42b514:	0a000004 	beq	42b52c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xb9c>
  42b518:	e35e0000 	cmp	lr, #0
  42b51c:	c59fe480 	ldrgt	lr, [pc, #1152]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b520:	ca000003 	bgt	42b534 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xba4>
  42b524:	e3a0e000 	mov	lr, #0
  42b528:	ea000001 	b	42b534 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xba4>
  42b52c:	e1a0e80e 	lsl	lr, lr, #16
  42b530:	e1a0e82e 	lsr	lr, lr, #16
  42b534:	e1cce0b0 	strh	lr, [ip]
  42b538:	e0858008 	add	r8, r5, r8
  42b53c:	e1b0c823 	lsrs	ip, r3, #16
  42b540:	0a000004 	beq	42b558 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xbc8>
  42b544:	e3530000 	cmp	r3, #0
  42b548:	c59f3454 	ldrgt	r3, [pc, #1108]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b54c:	ca000003 	bgt	42b560 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xbd0>
  42b550:	e3a03000 	mov	r3, #0
  42b554:	ea000001 	b	42b560 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xbd0>
  42b558:	e1a03803 	lsl	r3, r3, #16
  42b55c:	e1a03823 	lsr	r3, r3, #16
  42b560:	e1c830b0 	strh	r3, [r8]
  42b564:	e286e002 	add	lr, r6, #2
  42b568:	e1a0e08e 	lsl	lr, lr, #1
  42b56c:	e194c0be 	ldrh	ip, [r4, lr]
  42b570:	e00c0c90 	mul	ip, r0, ip
  42b574:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42b578:	e1a0c7cc 	asr	ip, ip, #15
  42b57c:	e2866003 	add	r6, r6, #3
  42b580:	e1a06086 	lsl	r6, r6, #1
  42b584:	e19430b6 	ldrh	r3, [r4, r6]
  42b588:	e0030390 	mul	r3, r0, r3
  42b58c:	e2833901 	add	r3, r3, #16384	; 0x4000
  42b590:	e1a037c3 	asr	r3, r3, #15
  42b594:	e085e00e 	add	lr, r5, lr
  42b598:	e1b0882c 	lsrs	r8, ip, #16
  42b59c:	0a000004 	beq	42b5b4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc24>
  42b5a0:	e35c0000 	cmp	ip, #0
  42b5a4:	c59fc3f8 	ldrgt	ip, [pc, #1016]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b5a8:	ca000003 	bgt	42b5bc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc2c>
  42b5ac:	e3a0c000 	mov	ip, #0
  42b5b0:	ea000001 	b	42b5bc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc2c>
  42b5b4:	e1a0c80c 	lsl	ip, ip, #16
  42b5b8:	e1a0c82c 	lsr	ip, ip, #16
  42b5bc:	e1cec0b0 	strh	ip, [lr]
  42b5c0:	e0856006 	add	r6, r5, r6
  42b5c4:	e1b0c823 	lsrs	ip, r3, #16
  42b5c8:	0a000004 	beq	42b5e0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc50>
  42b5cc:	e3530000 	cmp	r3, #0
  42b5d0:	c59f33cc 	ldrgt	r3, [pc, #972]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b5d4:	ca000003 	bgt	42b5e8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc58>
  42b5d8:	e3a03000 	mov	r3, #0
  42b5dc:	ea000001 	b	42b5e8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc58>
  42b5e0:	e1a03803 	lsl	r3, r3, #16
  42b5e4:	e1a03823 	lsr	r3, r3, #16
  42b5e8:	e1c630b0 	strh	r3, [r6]
  42b5ec:	e2822004 	add	r2, r2, #4
  42b5f0:	ea000000 	b	42b5f8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc68>
  42b5f4:	e3a02000 	mov	r2, #0
  42b5f8:	e59de250 	ldr	lr, [sp, #592]	; 0x250
  42b5fc:	e24e3004 	sub	r3, lr, #4
  42b600:	e1530002 	cmp	r3, r2
  42b604:	aaffffb4 	bge	42b4dc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xb4c>
  42b608:	ea000010 	b	42b650 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xcc0>
  42b60c:	e1a0c082 	lsl	ip, r2, #1
  42b610:	e19430bc 	ldrh	r3, [r4, ip]
  42b614:	e0030390 	mul	r3, r0, r3
  42b618:	e2833901 	add	r3, r3, #16384	; 0x4000
  42b61c:	e1a037c3 	asr	r3, r3, #15
  42b620:	e085c00c 	add	ip, r5, ip
  42b624:	e1b06823 	lsrs	r6, r3, #16
  42b628:	0a000004 	beq	42b640 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xcb0>
  42b62c:	e3530000 	cmp	r3, #0
  42b630:	c59f336c 	ldrgt	r3, [pc, #876]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b634:	ca000003 	bgt	42b648 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xcb8>
  42b638:	e3a03000 	mov	r3, #0
  42b63c:	ea000001 	b	42b648 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xcb8>
  42b640:	e1a03803 	lsl	r3, r3, #16
  42b644:	e1a03823 	lsr	r3, r3, #16
  42b648:	e1cc30b0 	strh	r3, [ip]
  42b64c:	e2822001 	add	r2, r2, #1
  42b650:	e152000e 	cmp	r2, lr
  42b654:	baffffec 	blt	42b60c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc7c>
  42b658:	e0844087 	add	r4, r4, r7, lsl #1
  42b65c:	e0855081 	add	r5, r5, r1, lsl #1
  42b660:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42b664:	e2432001 	sub	r2, r3, #1
  42b668:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42b66c:	e3530000 	cmp	r3, #0
  42b670:	1affffdf 	bne	42b5f4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xc64>
  42b674:	ea0003a0 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42b678:	e1a030a7 	lsr	r3, r7, #1
  42b67c:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42b680:	ea000092 	b	42b8d0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xf40>
  42b684:	e1a08007 	mov	r8, r7
  42b688:	e1a0b087 	lsl	fp, r7, #1
  42b68c:	e19400bb 	ldrh	r0, [r4, fp]
  42b690:	fa00197c 	blx	431c88 <__aeabi_i2d>
  42b694:	e59d2014 	ldr	r2, [sp, #20]
  42b698:	e59d3018 	ldr	r3, [sp, #24]
  42b69c:	fa0019ac 	blx	431d54 <__aeabi_dmul>
  42b6a0:	e59d201c 	ldr	r2, [sp, #28]
  42b6a4:	e1a03006 	mov	r3, r6
  42b6a8:	fa0018d0 	blx	4319f0 <__adddf3>
  42b6ac:	e3a02000 	mov	r2, #0
  42b6b0:	e59f32cc 	ldr	r3, [pc, #716]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b6b4:	fa0018cd 	blx	4319f0 <__adddf3>
  42b6b8:	fa00186e 	blx	431878 <floor>
  42b6bc:	fa001af1 	blx	432288 <__aeabi_d2iz>
  42b6c0:	e1a0a000 	mov	sl, r0
  42b6c4:	e2879001 	add	r9, r7, #1
  42b6c8:	e1a09089 	lsl	r9, r9, #1
  42b6cc:	e19400b9 	ldrh	r0, [r4, r9]
  42b6d0:	fa00196c 	blx	431c88 <__aeabi_i2d>
  42b6d4:	e59d2014 	ldr	r2, [sp, #20]
  42b6d8:	e59d3018 	ldr	r3, [sp, #24]
  42b6dc:	fa00199c 	blx	431d54 <__aeabi_dmul>
  42b6e0:	e59d201c 	ldr	r2, [sp, #28]
  42b6e4:	e1a03006 	mov	r3, r6
  42b6e8:	fa0018c0 	blx	4319f0 <__adddf3>
  42b6ec:	e3a02000 	mov	r2, #0
  42b6f0:	e59f328c 	ldr	r3, [pc, #652]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b6f4:	fa0018bd 	blx	4319f0 <__adddf3>
  42b6f8:	fa00185e 	blx	431878 <floor>
  42b6fc:	fa001ae1 	blx	432288 <__aeabi_d2iz>
  42b700:	e085b00b 	add	fp, r5, fp
  42b704:	e1b0382a 	lsrs	r3, sl, #16
  42b708:	0a000004 	beq	42b720 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xd90>
  42b70c:	e35a0000 	cmp	sl, #0
  42b710:	c59fa28c 	ldrgt	sl, [pc, #652]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b714:	ca000003 	bgt	42b728 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xd98>
  42b718:	e3a0a000 	mov	sl, #0
  42b71c:	ea000001 	b	42b728 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xd98>
  42b720:	e1a0a80a 	lsl	sl, sl, #16
  42b724:	e1a0a82a 	lsr	sl, sl, #16
  42b728:	e1cba0b0 	strh	sl, [fp]
  42b72c:	e0859009 	add	r9, r5, r9
  42b730:	e1b03820 	lsrs	r3, r0, #16
  42b734:	0a000004 	beq	42b74c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xdbc>
  42b738:	e3500000 	cmp	r0, #0
  42b73c:	c59f0260 	ldrgt	r0, [pc, #608]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b740:	ca000003 	bgt	42b754 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xdc4>
  42b744:	e3a00000 	mov	r0, #0
  42b748:	ea000001 	b	42b754 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xdc4>
  42b74c:	e1a00800 	lsl	r0, r0, #16
  42b750:	e1a00820 	lsr	r0, r0, #16
  42b754:	e1c900b0 	strh	r0, [r9]
  42b758:	e2889002 	add	r9, r8, #2
  42b75c:	e1a09089 	lsl	r9, r9, #1
  42b760:	e19400b9 	ldrh	r0, [r4, r9]
  42b764:	fa001947 	blx	431c88 <__aeabi_i2d>
  42b768:	e59d2014 	ldr	r2, [sp, #20]
  42b76c:	e59d3018 	ldr	r3, [sp, #24]
  42b770:	fa001977 	blx	431d54 <__aeabi_dmul>
  42b774:	e59db01c 	ldr	fp, [sp, #28]
  42b778:	e1a0200b 	mov	r2, fp
  42b77c:	e1a03006 	mov	r3, r6
  42b780:	fa00189a 	blx	4319f0 <__adddf3>
  42b784:	e3a02000 	mov	r2, #0
  42b788:	e59f31f4 	ldr	r3, [pc, #500]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b78c:	fa001897 	blx	4319f0 <__adddf3>
  42b790:	fa001838 	blx	431878 <floor>
  42b794:	fa001abb 	blx	432288 <__aeabi_d2iz>
  42b798:	e1a0a000 	mov	sl, r0
  42b79c:	e2888003 	add	r8, r8, #3
  42b7a0:	e1a08088 	lsl	r8, r8, #1
  42b7a4:	e19400b8 	ldrh	r0, [r4, r8]
  42b7a8:	fa001936 	blx	431c88 <__aeabi_i2d>
  42b7ac:	e59d2014 	ldr	r2, [sp, #20]
  42b7b0:	e59d3018 	ldr	r3, [sp, #24]
  42b7b4:	fa001966 	blx	431d54 <__aeabi_dmul>
  42b7b8:	e1a0200b 	mov	r2, fp
  42b7bc:	e1a03006 	mov	r3, r6
  42b7c0:	fa00188a 	blx	4319f0 <__adddf3>
  42b7c4:	e3a02000 	mov	r2, #0
  42b7c8:	e59f31b4 	ldr	r3, [pc, #436]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b7cc:	fa001887 	blx	4319f0 <__adddf3>
  42b7d0:	fa001828 	blx	431878 <floor>
  42b7d4:	fa001aab 	blx	432288 <__aeabi_d2iz>
  42b7d8:	e0859009 	add	r9, r5, r9
  42b7dc:	e1b0382a 	lsrs	r3, sl, #16
  42b7e0:	0a000004 	beq	42b7f8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xe68>
  42b7e4:	e35a0000 	cmp	sl, #0
  42b7e8:	c59fa1b4 	ldrgt	sl, [pc, #436]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b7ec:	ca000003 	bgt	42b800 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xe70>
  42b7f0:	e3a0a000 	mov	sl, #0
  42b7f4:	ea000001 	b	42b800 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xe70>
  42b7f8:	e1a0a80a 	lsl	sl, sl, #16
  42b7fc:	e1a0a82a 	lsr	sl, sl, #16
  42b800:	e1c9a0b0 	strh	sl, [r9]
  42b804:	e0858008 	add	r8, r5, r8
  42b808:	e1b03820 	lsrs	r3, r0, #16
  42b80c:	0a000004 	beq	42b824 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xe94>
  42b810:	e3500000 	cmp	r0, #0
  42b814:	c59f0188 	ldrgt	r0, [pc, #392]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b818:	ca000003 	bgt	42b82c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xe9c>
  42b81c:	e3a00000 	mov	r0, #0
  42b820:	ea000001 	b	42b82c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xe9c>
  42b824:	e1a00800 	lsl	r0, r0, #16
  42b828:	e1a00820 	lsr	r0, r0, #16
  42b82c:	e1c800b0 	strh	r0, [r8]
  42b830:	e2877004 	add	r7, r7, #4
  42b834:	ea000000 	b	42b83c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xeac>
  42b838:	e3a07000 	mov	r7, #0
  42b83c:	e59d9250 	ldr	r9, [sp, #592]	; 0x250
  42b840:	e2493004 	sub	r3, r9, #4
  42b844:	e1530007 	cmp	r3, r7
  42b848:	aaffff8d 	bge	42b684 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xcf4>
  42b84c:	ea000019 	b	42b8b8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xf28>
  42b850:	e1a08087 	lsl	r8, r7, #1
  42b854:	e19400b8 	ldrh	r0, [r4, r8]
  42b858:	fa00190a 	blx	431c88 <__aeabi_i2d>
  42b85c:	e59d2014 	ldr	r2, [sp, #20]
  42b860:	e59d3018 	ldr	r3, [sp, #24]
  42b864:	fa00193a 	blx	431d54 <__aeabi_dmul>
  42b868:	e59d201c 	ldr	r2, [sp, #28]
  42b86c:	e1a03006 	mov	r3, r6
  42b870:	fa00185e 	blx	4319f0 <__adddf3>
  42b874:	e3a02000 	mov	r2, #0
  42b878:	e59f3104 	ldr	r3, [pc, #260]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b87c:	fa00185b 	blx	4319f0 <__adddf3>
  42b880:	fa0017fc 	blx	431878 <floor>
  42b884:	fa001a7f 	blx	432288 <__aeabi_d2iz>
  42b888:	e0858008 	add	r8, r5, r8
  42b88c:	e1b03820 	lsrs	r3, r0, #16
  42b890:	0a000004 	beq	42b8a8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xf18>
  42b894:	e3500000 	cmp	r0, #0
  42b898:	c59f0104 	ldrgt	r0, [pc, #260]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b89c:	ca000003 	bgt	42b8b0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xf20>
  42b8a0:	e3a00000 	mov	r0, #0
  42b8a4:	ea000001 	b	42b8b0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xf20>
  42b8a8:	e1a00800 	lsl	r0, r0, #16
  42b8ac:	e1a00820 	lsr	r0, r0, #16
  42b8b0:	e1c800b0 	strh	r0, [r8]
  42b8b4:	e2877001 	add	r7, r7, #1
  42b8b8:	e1570009 	cmp	r7, r9
  42b8bc:	baffffe3 	blt	42b850 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xec0>
  42b8c0:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42b8c4:	e0844083 	add	r4, r4, r3, lsl #1
  42b8c8:	e59d3020 	ldr	r3, [sp, #32]
  42b8cc:	e0855083 	add	r5, r5, r3, lsl #1
  42b8d0:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42b8d4:	e2432001 	sub	r2, r3, #1
  42b8d8:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42b8dc:	e3530000 	cmp	r3, #0
  42b8e0:	1affffd4 	bne	42b838 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xea8>
  42b8e4:	ea000304 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42b8e8:	e59d0014 	ldr	r0, [sp, #20]
  42b8ec:	e59d3018 	ldr	r3, [sp, #24]
  42b8f0:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42b8f4:	e3a02000 	mov	r2, #0
  42b8f8:	e59f3098 	ldr	r3, [pc, #152]	; 42b998 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1008>
  42b8fc:	fa001a52 	blx	43224c <__aeabi_dcmple>
  42b900:	e3500000 	cmp	r0, #0
  42b904:	0a000092 	beq	42bb54 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x11c4>
  42b908:	e59d001c 	ldr	r0, [sp, #28]
  42b90c:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42b910:	e59f2074 	ldr	r2, [pc, #116]	; 42b98c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xffc>
  42b914:	e59f3074 	ldr	r3, [pc, #116]	; 42b990 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1000>
  42b918:	fa001a4b 	blx	43224c <__aeabi_dcmple>
  42b91c:	e3500000 	cmp	r0, #0
  42b920:	0a00008b 	beq	42bb54 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x11c4>
  42b924:	e59d0014 	ldr	r0, [sp, #20]
  42b928:	e59d1018 	ldr	r1, [sp, #24]
  42b92c:	e3a02000 	mov	r2, #0
  42b930:	e59f305c 	ldr	r3, [pc, #92]	; 42b994 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1004>
  42b934:	fa001906 	blx	431d54 <__aeabi_dmul>
  42b938:	e3a02000 	mov	r2, #0
  42b93c:	e59f3040 	ldr	r3, [pc, #64]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b940:	fa00182a 	blx	4319f0 <__adddf3>
  42b944:	fa0017cb 	blx	431878 <floor>
  42b948:	fa001a4e 	blx	432288 <__aeabi_d2iz>
  42b94c:	e1a08000 	mov	r8, r0
  42b950:	e59d001c 	ldr	r0, [sp, #28]
  42b954:	e1a01006 	mov	r1, r6
  42b958:	e3a02000 	mov	r2, #0
  42b95c:	e59f3030 	ldr	r3, [pc, #48]	; 42b994 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1004>
  42b960:	fa0018fb 	blx	431d54 <__aeabi_dmul>
  42b964:	e3a02000 	mov	r2, #0
  42b968:	e59f3014 	ldr	r3, [pc, #20]	; 42b984 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0xff4>
  42b96c:	fa00181f 	blx	4319f0 <__adddf3>
  42b970:	fa0017c0 	blx	431878 <floor>
  42b974:	fa001a43 	blx	432288 <__aeabi_d2iz>
  42b978:	e1a070a7 	lsr	r7, r7, #1
  42b97c:	e59d1020 	ldr	r1, [sp, #32]
  42b980:	ea00006d 	b	42bb3c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x11ac>
  42b984:	3fe00000 	.word	0x3fe00000
  42b988:	40600000 	.word	0x40600000
  42b98c:	ffc00000 	.word	0xffc00000
  42b990:	40dfffff 	.word	0x40dfffff
  42b994:	40e00000 	.word	0x40e00000
  42b998:	3ff00000 	.word	0x3ff00000
  42b99c:	3cb00000 	.word	0x3cb00000
  42b9a0:	3fe00000 	.word	0x3fe00000
  42b9a4:	0000ffff 	.word	0x0000ffff
  42b9a8:	00013be0 	.word	0x00013be0
  42b9ac:	00000534 	.word	0x00000534
  42b9b0:	0001388c 	.word	0x0001388c
  42b9b4:	000135a8 	.word	0x000135a8
  42b9b8:	e1a0e002 	mov	lr, r2
  42b9bc:	e1a09082 	lsl	r9, r2, #1
  42b9c0:	e194c0f9 	ldrsh	ip, [r4, r9]
  42b9c4:	e02c0c98 	mla	ip, r8, ip, r0
  42b9c8:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42b9cc:	e1a0c7cc 	asr	ip, ip, #15
  42b9d0:	e2826001 	add	r6, r2, #1
  42b9d4:	e1a06086 	lsl	r6, r6, #1
  42b9d8:	e19430f6 	ldrsh	r3, [r4, r6]
  42b9dc:	e0230398 	mla	r3, r8, r3, r0
  42b9e0:	e2833901 	add	r3, r3, #16384	; 0x4000
  42b9e4:	e1a037c3 	asr	r3, r3, #15
  42b9e8:	e0859009 	add	r9, r5, r9
  42b9ec:	e1b0a82c 	lsrs	sl, ip, #16
  42b9f0:	0a000004 	beq	42ba08 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1078>
  42b9f4:	e35c0000 	cmp	ip, #0
  42b9f8:	c51fc05c 	ldrgt	ip, [pc, #-92]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42b9fc:	ca000003 	bgt	42ba10 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1080>
  42ba00:	e3a0c000 	mov	ip, #0
  42ba04:	ea000001 	b	42ba10 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1080>
  42ba08:	e1a0c80c 	lsl	ip, ip, #16
  42ba0c:	e1a0c82c 	lsr	ip, ip, #16
  42ba10:	e1c9c0b0 	strh	ip, [r9]
  42ba14:	e0856006 	add	r6, r5, r6
  42ba18:	e1b0c823 	lsrs	ip, r3, #16
  42ba1c:	0a000004 	beq	42ba34 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x10a4>
  42ba20:	e3530000 	cmp	r3, #0
  42ba24:	c51f3088 	ldrgt	r3, [pc, #-136]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ba28:	ca000003 	bgt	42ba3c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x10ac>
  42ba2c:	e3a03000 	mov	r3, #0
  42ba30:	ea000001 	b	42ba3c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x10ac>
  42ba34:	e1a03803 	lsl	r3, r3, #16
  42ba38:	e1a03823 	lsr	r3, r3, #16
  42ba3c:	e1c630b0 	strh	r3, [r6]
  42ba40:	e28ec002 	add	ip, lr, #2
  42ba44:	e1a0c08c 	lsl	ip, ip, #1
  42ba48:	e19430fc 	ldrsh	r3, [r4, ip]
  42ba4c:	e0230398 	mla	r3, r8, r3, r0
  42ba50:	e2833901 	add	r3, r3, #16384	; 0x4000
  42ba54:	e1a067c3 	asr	r6, r3, #15
  42ba58:	e28ee003 	add	lr, lr, #3
  42ba5c:	e1a0e08e 	lsl	lr, lr, #1
  42ba60:	e19430fe 	ldrsh	r3, [r4, lr]
  42ba64:	e0230398 	mla	r3, r8, r3, r0
  42ba68:	e2833901 	add	r3, r3, #16384	; 0x4000
  42ba6c:	e1a037c3 	asr	r3, r3, #15
  42ba70:	e085c00c 	add	ip, r5, ip
  42ba74:	e1b09826 	lsrs	r9, r6, #16
  42ba78:	0a000004 	beq	42ba90 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1100>
  42ba7c:	e3560000 	cmp	r6, #0
  42ba80:	c51f60e4 	ldrgt	r6, [pc, #-228]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42ba84:	ca000003 	bgt	42ba98 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1108>
  42ba88:	e3a06000 	mov	r6, #0
  42ba8c:	ea000001 	b	42ba98 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1108>
  42ba90:	e1a06806 	lsl	r6, r6, #16
  42ba94:	e1a06826 	lsr	r6, r6, #16
  42ba98:	e1cc60b0 	strh	r6, [ip]
  42ba9c:	e085e00e 	add	lr, r5, lr
  42baa0:	e1b0c823 	lsrs	ip, r3, #16
  42baa4:	0a000004 	beq	42babc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x112c>
  42baa8:	e3530000 	cmp	r3, #0
  42baac:	c51f3110 	ldrgt	r3, [pc, #-272]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bab0:	ca000003 	bgt	42bac4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1134>
  42bab4:	e3a03000 	mov	r3, #0
  42bab8:	ea000001 	b	42bac4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1134>
  42babc:	e1a03803 	lsl	r3, r3, #16
  42bac0:	e1a03823 	lsr	r3, r3, #16
  42bac4:	e1ce30b0 	strh	r3, [lr]
  42bac8:	e2822004 	add	r2, r2, #4
  42bacc:	ea000000 	b	42bad4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1144>
  42bad0:	e3a02000 	mov	r2, #0
  42bad4:	e59dc250 	ldr	ip, [sp, #592]	; 0x250
  42bad8:	e24c3004 	sub	r3, ip, #4
  42badc:	e1530002 	cmp	r3, r2
  42bae0:	aaffffb4 	bge	42b9b8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1028>
  42bae4:	ea000010 	b	42bb2c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x119c>
  42bae8:	e1a0e082 	lsl	lr, r2, #1
  42baec:	e19430fe 	ldrsh	r3, [r4, lr]
  42baf0:	e0230398 	mla	r3, r8, r3, r0
  42baf4:	e2833901 	add	r3, r3, #16384	; 0x4000
  42baf8:	e1a037c3 	asr	r3, r3, #15
  42bafc:	e085e00e 	add	lr, r5, lr
  42bb00:	e1b06823 	lsrs	r6, r3, #16
  42bb04:	0a000004 	beq	42bb1c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x118c>
  42bb08:	e3530000 	cmp	r3, #0
  42bb0c:	c51f3170 	ldrgt	r3, [pc, #-368]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bb10:	ca000003 	bgt	42bb24 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1194>
  42bb14:	e3a03000 	mov	r3, #0
  42bb18:	ea000001 	b	42bb24 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1194>
  42bb1c:	e1a03803 	lsl	r3, r3, #16
  42bb20:	e1a03823 	lsr	r3, r3, #16
  42bb24:	e1ce30b0 	strh	r3, [lr]
  42bb28:	e2822001 	add	r2, r2, #1
  42bb2c:	e152000c 	cmp	r2, ip
  42bb30:	baffffec 	blt	42bae8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1158>
  42bb34:	e0844087 	add	r4, r4, r7, lsl #1
  42bb38:	e0855081 	add	r5, r5, r1, lsl #1
  42bb3c:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42bb40:	e2432001 	sub	r2, r3, #1
  42bb44:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42bb48:	e3530000 	cmp	r3, #0
  42bb4c:	1affffdf 	bne	42bad0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1140>
  42bb50:	ea000269 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42bb54:	e1a030a7 	lsr	r3, r7, #1
  42bb58:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42bb5c:	ea000092 	b	42bdac <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x141c>
  42bb60:	e1a08007 	mov	r8, r7
  42bb64:	e1a0b087 	lsl	fp, r7, #1
  42bb68:	e19400fb 	ldrsh	r0, [r4, fp]
  42bb6c:	fa001845 	blx	431c88 <__aeabi_i2d>
  42bb70:	e59d2014 	ldr	r2, [sp, #20]
  42bb74:	e59d3018 	ldr	r3, [sp, #24]
  42bb78:	fa001875 	blx	431d54 <__aeabi_dmul>
  42bb7c:	e59d201c 	ldr	r2, [sp, #28]
  42bb80:	e1a03006 	mov	r3, r6
  42bb84:	fa001799 	blx	4319f0 <__adddf3>
  42bb88:	e3a02000 	mov	r2, #0
  42bb8c:	e51f31f4 	ldr	r3, [pc, #-500]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42bb90:	fa001796 	blx	4319f0 <__adddf3>
  42bb94:	fa001737 	blx	431878 <floor>
  42bb98:	fa0019ba 	blx	432288 <__aeabi_d2iz>
  42bb9c:	e1a0a000 	mov	sl, r0
  42bba0:	e2879001 	add	r9, r7, #1
  42bba4:	e1a09089 	lsl	r9, r9, #1
  42bba8:	e19400f9 	ldrsh	r0, [r4, r9]
  42bbac:	fa001835 	blx	431c88 <__aeabi_i2d>
  42bbb0:	e59d2014 	ldr	r2, [sp, #20]
  42bbb4:	e59d3018 	ldr	r3, [sp, #24]
  42bbb8:	fa001865 	blx	431d54 <__aeabi_dmul>
  42bbbc:	e59d201c 	ldr	r2, [sp, #28]
  42bbc0:	e1a03006 	mov	r3, r6
  42bbc4:	fa001789 	blx	4319f0 <__adddf3>
  42bbc8:	e3a02000 	mov	r2, #0
  42bbcc:	e51f3234 	ldr	r3, [pc, #-564]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42bbd0:	fa001786 	blx	4319f0 <__adddf3>
  42bbd4:	fa001727 	blx	431878 <floor>
  42bbd8:	fa0019aa 	blx	432288 <__aeabi_d2iz>
  42bbdc:	e085b00b 	add	fp, r5, fp
  42bbe0:	e1b0382a 	lsrs	r3, sl, #16
  42bbe4:	0a000004 	beq	42bbfc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x126c>
  42bbe8:	e35a0000 	cmp	sl, #0
  42bbec:	c51fa250 	ldrgt	sl, [pc, #-592]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bbf0:	ca000003 	bgt	42bc04 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1274>
  42bbf4:	e3a0a000 	mov	sl, #0
  42bbf8:	ea000001 	b	42bc04 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1274>
  42bbfc:	e1a0a80a 	lsl	sl, sl, #16
  42bc00:	e1a0a82a 	lsr	sl, sl, #16
  42bc04:	e1cba0b0 	strh	sl, [fp]
  42bc08:	e0859009 	add	r9, r5, r9
  42bc0c:	e1b03820 	lsrs	r3, r0, #16
  42bc10:	0a000004 	beq	42bc28 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1298>
  42bc14:	e3500000 	cmp	r0, #0
  42bc18:	c51f027c 	ldrgt	r0, [pc, #-636]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bc1c:	ca000003 	bgt	42bc30 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x12a0>
  42bc20:	e3a00000 	mov	r0, #0
  42bc24:	ea000001 	b	42bc30 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x12a0>
  42bc28:	e1a00800 	lsl	r0, r0, #16
  42bc2c:	e1a00820 	lsr	r0, r0, #16
  42bc30:	e1c900b0 	strh	r0, [r9]
  42bc34:	e2889002 	add	r9, r8, #2
  42bc38:	e1a09089 	lsl	r9, r9, #1
  42bc3c:	e19400f9 	ldrsh	r0, [r4, r9]
  42bc40:	fa001810 	blx	431c88 <__aeabi_i2d>
  42bc44:	e59d2014 	ldr	r2, [sp, #20]
  42bc48:	e59d3018 	ldr	r3, [sp, #24]
  42bc4c:	fa001840 	blx	431d54 <__aeabi_dmul>
  42bc50:	e59db01c 	ldr	fp, [sp, #28]
  42bc54:	e1a0200b 	mov	r2, fp
  42bc58:	e1a03006 	mov	r3, r6
  42bc5c:	fa001763 	blx	4319f0 <__adddf3>
  42bc60:	e3a02000 	mov	r2, #0
  42bc64:	e51f32cc 	ldr	r3, [pc, #-716]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42bc68:	fa001760 	blx	4319f0 <__adddf3>
  42bc6c:	fa001701 	blx	431878 <floor>
  42bc70:	fa001984 	blx	432288 <__aeabi_d2iz>
  42bc74:	e1a0a000 	mov	sl, r0
  42bc78:	e2888003 	add	r8, r8, #3
  42bc7c:	e1a08088 	lsl	r8, r8, #1
  42bc80:	e19400f8 	ldrsh	r0, [r4, r8]
  42bc84:	fa0017ff 	blx	431c88 <__aeabi_i2d>
  42bc88:	e59d2014 	ldr	r2, [sp, #20]
  42bc8c:	e59d3018 	ldr	r3, [sp, #24]
  42bc90:	fa00182f 	blx	431d54 <__aeabi_dmul>
  42bc94:	e1a0200b 	mov	r2, fp
  42bc98:	e1a03006 	mov	r3, r6
  42bc9c:	fa001753 	blx	4319f0 <__adddf3>
  42bca0:	e3a02000 	mov	r2, #0
  42bca4:	e51f330c 	ldr	r3, [pc, #-780]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42bca8:	fa001750 	blx	4319f0 <__adddf3>
  42bcac:	fa0016f1 	blx	431878 <floor>
  42bcb0:	fa001974 	blx	432288 <__aeabi_d2iz>
  42bcb4:	e0859009 	add	r9, r5, r9
  42bcb8:	e1b0382a 	lsrs	r3, sl, #16
  42bcbc:	0a000004 	beq	42bcd4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1344>
  42bcc0:	e35a0000 	cmp	sl, #0
  42bcc4:	c51fa328 	ldrgt	sl, [pc, #-808]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bcc8:	ca000003 	bgt	42bcdc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x134c>
  42bccc:	e3a0a000 	mov	sl, #0
  42bcd0:	ea000001 	b	42bcdc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x134c>
  42bcd4:	e1a0a80a 	lsl	sl, sl, #16
  42bcd8:	e1a0a82a 	lsr	sl, sl, #16
  42bcdc:	e1c9a0b0 	strh	sl, [r9]
  42bce0:	e0858008 	add	r8, r5, r8
  42bce4:	e1b03820 	lsrs	r3, r0, #16
  42bce8:	0a000004 	beq	42bd00 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1370>
  42bcec:	e3500000 	cmp	r0, #0
  42bcf0:	c51f0354 	ldrgt	r0, [pc, #-852]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bcf4:	ca000003 	bgt	42bd08 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1378>
  42bcf8:	e3a00000 	mov	r0, #0
  42bcfc:	ea000001 	b	42bd08 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1378>
  42bd00:	e1a00800 	lsl	r0, r0, #16
  42bd04:	e1a00820 	lsr	r0, r0, #16
  42bd08:	e1c800b0 	strh	r0, [r8]
  42bd0c:	e2877004 	add	r7, r7, #4
  42bd10:	ea000000 	b	42bd18 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1388>
  42bd14:	e3a07000 	mov	r7, #0
  42bd18:	e59d9250 	ldr	r9, [sp, #592]	; 0x250
  42bd1c:	e2493004 	sub	r3, r9, #4
  42bd20:	e1530007 	cmp	r3, r7
  42bd24:	aaffff8d 	bge	42bb60 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x11d0>
  42bd28:	ea000019 	b	42bd94 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1404>
  42bd2c:	e1a08087 	lsl	r8, r7, #1
  42bd30:	e19400f8 	ldrsh	r0, [r4, r8]
  42bd34:	fa0017d3 	blx	431c88 <__aeabi_i2d>
  42bd38:	e59d2014 	ldr	r2, [sp, #20]
  42bd3c:	e59d3018 	ldr	r3, [sp, #24]
  42bd40:	fa001803 	blx	431d54 <__aeabi_dmul>
  42bd44:	e59d201c 	ldr	r2, [sp, #28]
  42bd48:	e1a03006 	mov	r3, r6
  42bd4c:	fa001727 	blx	4319f0 <__adddf3>
  42bd50:	e3a02000 	mov	r2, #0
  42bd54:	e51f33bc 	ldr	r3, [pc, #-956]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42bd58:	fa001724 	blx	4319f0 <__adddf3>
  42bd5c:	fa0016c5 	blx	431878 <floor>
  42bd60:	fa001948 	blx	432288 <__aeabi_d2iz>
  42bd64:	e0858008 	add	r8, r5, r8
  42bd68:	e1b03820 	lsrs	r3, r0, #16
  42bd6c:	0a000004 	beq	42bd84 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x13f4>
  42bd70:	e3500000 	cmp	r0, #0
  42bd74:	c51f03d8 	ldrgt	r0, [pc, #-984]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bd78:	ca000003 	bgt	42bd8c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x13fc>
  42bd7c:	e3a00000 	mov	r0, #0
  42bd80:	ea000001 	b	42bd8c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x13fc>
  42bd84:	e1a00800 	lsl	r0, r0, #16
  42bd88:	e1a00820 	lsr	r0, r0, #16
  42bd8c:	e1c800b0 	strh	r0, [r8]
  42bd90:	e2877001 	add	r7, r7, #1
  42bd94:	e1570009 	cmp	r7, r9
  42bd98:	baffffe3 	blt	42bd2c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x139c>
  42bd9c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42bda0:	e0844083 	add	r4, r4, r3, lsl #1
  42bda4:	e59d3020 	ldr	r3, [sp, #32]
  42bda8:	e0855083 	add	r5, r5, r3, lsl #1
  42bdac:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42bdb0:	e2432001 	sub	r2, r3, #1
  42bdb4:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42bdb8:	e3530000 	cmp	r3, #0
  42bdbc:	1affffd4 	bne	42bd14 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1384>
  42bdc0:	ea0001cd 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42bdc4:	e1a0b121 	lsr	fp, r1, #2
  42bdc8:	e58db024 	str	fp, [sp, #36]	; 0x24
  42bdcc:	e59da01c 	ldr	sl, [sp, #28]
  42bdd0:	ea00008c 	b	42c008 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1678>
  42bdd4:	e1a08007 	mov	r8, r7
  42bdd8:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42bddc:	fa0017a9 	blx	431c88 <__aeabi_i2d>
  42bde0:	e59d2014 	ldr	r2, [sp, #20]
  42bde4:	e59d3018 	ldr	r3, [sp, #24]
  42bde8:	fa0017d9 	blx	431d54 <__aeabi_dmul>
  42bdec:	e1a0200a 	mov	r2, sl
  42bdf0:	e1a03006 	mov	r3, r6
  42bdf4:	fa0016fd 	blx	4319f0 <__adddf3>
  42bdf8:	e3a02000 	mov	r2, #0
  42bdfc:	e51f3464 	ldr	r3, [pc, #-1124]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42be00:	fa0016fa 	blx	4319f0 <__adddf3>
  42be04:	fa00169b 	blx	431878 <floor>
  42be08:	fa00191e 	blx	432288 <__aeabi_d2iz>
  42be0c:	e1a09000 	mov	r9, r0
  42be10:	e287b001 	add	fp, r7, #1
  42be14:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42be18:	fa00179a 	blx	431c88 <__aeabi_i2d>
  42be1c:	e59d2014 	ldr	r2, [sp, #20]
  42be20:	e59d3018 	ldr	r3, [sp, #24]
  42be24:	fa0017ca 	blx	431d54 <__aeabi_dmul>
  42be28:	e1a0200a 	mov	r2, sl
  42be2c:	e1a03006 	mov	r3, r6
  42be30:	fa0016ee 	blx	4319f0 <__adddf3>
  42be34:	e3a02000 	mov	r2, #0
  42be38:	e51f34a0 	ldr	r3, [pc, #-1184]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42be3c:	fa0016eb 	blx	4319f0 <__adddf3>
  42be40:	fa00168c 	blx	431878 <floor>
  42be44:	fa00190f 	blx	432288 <__aeabi_d2iz>
  42be48:	e0853087 	add	r3, r5, r7, lsl #1
  42be4c:	e1b02829 	lsrs	r2, r9, #16
  42be50:	0a000004 	beq	42be68 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x14d8>
  42be54:	e3590000 	cmp	r9, #0
  42be58:	c51f94bc 	ldrgt	r9, [pc, #-1212]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42be5c:	ca000003 	bgt	42be70 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x14e0>
  42be60:	e3a09000 	mov	r9, #0
  42be64:	ea000001 	b	42be70 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x14e0>
  42be68:	e1a09809 	lsl	r9, r9, #16
  42be6c:	e1a09829 	lsr	r9, r9, #16
  42be70:	e1c390b0 	strh	r9, [r3]
  42be74:	e085b08b 	add	fp, r5, fp, lsl #1
  42be78:	e1b03820 	lsrs	r3, r0, #16
  42be7c:	0a000004 	beq	42be94 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1504>
  42be80:	e3500000 	cmp	r0, #0
  42be84:	c51f04e8 	ldrgt	r0, [pc, #-1256]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42be88:	ca000003 	bgt	42be9c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x150c>
  42be8c:	e3a00000 	mov	r0, #0
  42be90:	ea000001 	b	42be9c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x150c>
  42be94:	e1a00800 	lsl	r0, r0, #16
  42be98:	e1a00820 	lsr	r0, r0, #16
  42be9c:	e1cb00b0 	strh	r0, [fp]
  42bea0:	e288b002 	add	fp, r8, #2
  42bea4:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42bea8:	fa001776 	blx	431c88 <__aeabi_i2d>
  42beac:	e59d2014 	ldr	r2, [sp, #20]
  42beb0:	e59d3018 	ldr	r3, [sp, #24]
  42beb4:	fa0017a6 	blx	431d54 <__aeabi_dmul>
  42beb8:	e1a0200a 	mov	r2, sl
  42bebc:	e1a03006 	mov	r3, r6
  42bec0:	fa0016ca 	blx	4319f0 <__adddf3>
  42bec4:	e3a02000 	mov	r2, #0
  42bec8:	e51f3530 	ldr	r3, [pc, #-1328]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42becc:	fa0016c7 	blx	4319f0 <__adddf3>
  42bed0:	fa001668 	blx	431878 <floor>
  42bed4:	fa0018eb 	blx	432288 <__aeabi_d2iz>
  42bed8:	e1a09000 	mov	r9, r0
  42bedc:	e2888003 	add	r8, r8, #3
  42bee0:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  42bee4:	fa001767 	blx	431c88 <__aeabi_i2d>
  42bee8:	e59d2014 	ldr	r2, [sp, #20]
  42beec:	e59d3018 	ldr	r3, [sp, #24]
  42bef0:	fa001797 	blx	431d54 <__aeabi_dmul>
  42bef4:	e1a0200a 	mov	r2, sl
  42bef8:	e1a03006 	mov	r3, r6
  42befc:	fa0016bb 	blx	4319f0 <__adddf3>
  42bf00:	e3a02000 	mov	r2, #0
  42bf04:	e51f356c 	ldr	r3, [pc, #-1388]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42bf08:	fa0016b8 	blx	4319f0 <__adddf3>
  42bf0c:	fa001659 	blx	431878 <floor>
  42bf10:	fa0018dc 	blx	432288 <__aeabi_d2iz>
  42bf14:	e085b08b 	add	fp, r5, fp, lsl #1
  42bf18:	e1b03829 	lsrs	r3, r9, #16
  42bf1c:	0a000004 	beq	42bf34 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15a4>
  42bf20:	e3590000 	cmp	r9, #0
  42bf24:	c51f9588 	ldrgt	r9, [pc, #-1416]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bf28:	ca000003 	bgt	42bf3c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15ac>
  42bf2c:	e3a09000 	mov	r9, #0
  42bf30:	ea000001 	b	42bf3c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15ac>
  42bf34:	e1a09809 	lsl	r9, r9, #16
  42bf38:	e1a09829 	lsr	r9, r9, #16
  42bf3c:	e1cb90b0 	strh	r9, [fp]
  42bf40:	e0858088 	add	r8, r5, r8, lsl #1
  42bf44:	e1b03820 	lsrs	r3, r0, #16
  42bf48:	0a000004 	beq	42bf60 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15d0>
  42bf4c:	e3500000 	cmp	r0, #0
  42bf50:	c51f05b4 	ldrgt	r0, [pc, #-1460]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bf54:	ca000003 	bgt	42bf68 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15d8>
  42bf58:	e3a00000 	mov	r0, #0
  42bf5c:	ea000001 	b	42bf68 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15d8>
  42bf60:	e1a00800 	lsl	r0, r0, #16
  42bf64:	e1a00820 	lsr	r0, r0, #16
  42bf68:	e1c800b0 	strh	r0, [r8]
  42bf6c:	e2877004 	add	r7, r7, #4
  42bf70:	ea000000 	b	42bf78 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15e8>
  42bf74:	e3a07000 	mov	r7, #0
  42bf78:	e59d8250 	ldr	r8, [sp, #592]	; 0x250
  42bf7c:	e2483004 	sub	r3, r8, #4
  42bf80:	e1530007 	cmp	r3, r7
  42bf84:	aaffff92 	bge	42bdd4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1444>
  42bf88:	ea000018 	b	42bff0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1660>
  42bf8c:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42bf90:	fa00173c 	blx	431c88 <__aeabi_i2d>
  42bf94:	e59d2014 	ldr	r2, [sp, #20]
  42bf98:	e59d3018 	ldr	r3, [sp, #24]
  42bf9c:	fa00176c 	blx	431d54 <__aeabi_dmul>
  42bfa0:	e1a0200a 	mov	r2, sl
  42bfa4:	e1a03006 	mov	r3, r6
  42bfa8:	fa001690 	blx	4319f0 <__adddf3>
  42bfac:	e3a02000 	mov	r2, #0
  42bfb0:	e51f3618 	ldr	r3, [pc, #-1560]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42bfb4:	fa00168d 	blx	4319f0 <__adddf3>
  42bfb8:	fa00162e 	blx	431878 <floor>
  42bfbc:	fa0018b1 	blx	432288 <__aeabi_d2iz>
  42bfc0:	e0853087 	add	r3, r5, r7, lsl #1
  42bfc4:	e1b02820 	lsrs	r2, r0, #16
  42bfc8:	0a000004 	beq	42bfe0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1650>
  42bfcc:	e3500000 	cmp	r0, #0
  42bfd0:	c51f0634 	ldrgt	r0, [pc, #-1588]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42bfd4:	ca000003 	bgt	42bfe8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1658>
  42bfd8:	e3a00000 	mov	r0, #0
  42bfdc:	ea000001 	b	42bfe8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1658>
  42bfe0:	e1a00800 	lsl	r0, r0, #16
  42bfe4:	e1a00820 	lsr	r0, r0, #16
  42bfe8:	e1c300b0 	strh	r0, [r3]
  42bfec:	e2877001 	add	r7, r7, #1
  42bff0:	e1570008 	cmp	r7, r8
  42bff4:	baffffe4 	blt	42bf8c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15fc>
  42bff8:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42bffc:	e0844103 	add	r4, r4, r3, lsl #2
  42c000:	e59d3020 	ldr	r3, [sp, #32]
  42c004:	e0855083 	add	r5, r5, r3, lsl #1
  42c008:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42c00c:	e2432001 	sub	r2, r3, #1
  42c010:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42c014:	e3530000 	cmp	r3, #0
  42c018:	1affffd5 	bne	42bf74 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x15e4>
  42c01c:	ea000136 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42c020:	e1a0b121 	lsr	fp, r1, #2
  42c024:	e58db024 	str	fp, [sp, #36]	; 0x24
  42c028:	e59da01c 	ldr	sl, [sp, #28]
  42c02c:	ea00008c 	b	42c264 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x18d4>
  42c030:	e1a08007 	mov	r8, r7
  42c034:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42c038:	fa00171b 	blx	431cac <__aeabi_f2d>
  42c03c:	e59d2014 	ldr	r2, [sp, #20]
  42c040:	e59d3018 	ldr	r3, [sp, #24]
  42c044:	fa001742 	blx	431d54 <__aeabi_dmul>
  42c048:	e1a0200a 	mov	r2, sl
  42c04c:	e1a03006 	mov	r3, r6
  42c050:	fa001666 	blx	4319f0 <__adddf3>
  42c054:	e3a02000 	mov	r2, #0
  42c058:	e51f36c0 	ldr	r3, [pc, #-1728]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c05c:	fa001663 	blx	4319f0 <__adddf3>
  42c060:	fa001604 	blx	431878 <floor>
  42c064:	fa001887 	blx	432288 <__aeabi_d2iz>
  42c068:	e1a09000 	mov	r9, r0
  42c06c:	e287b001 	add	fp, r7, #1
  42c070:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42c074:	fa00170c 	blx	431cac <__aeabi_f2d>
  42c078:	e59d2014 	ldr	r2, [sp, #20]
  42c07c:	e59d3018 	ldr	r3, [sp, #24]
  42c080:	fa001733 	blx	431d54 <__aeabi_dmul>
  42c084:	e1a0200a 	mov	r2, sl
  42c088:	e1a03006 	mov	r3, r6
  42c08c:	fa001657 	blx	4319f0 <__adddf3>
  42c090:	e3a02000 	mov	r2, #0
  42c094:	e51f36fc 	ldr	r3, [pc, #-1788]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c098:	fa001654 	blx	4319f0 <__adddf3>
  42c09c:	fa0015f5 	blx	431878 <floor>
  42c0a0:	fa001878 	blx	432288 <__aeabi_d2iz>
  42c0a4:	e0853087 	add	r3, r5, r7, lsl #1
  42c0a8:	e1b02829 	lsrs	r2, r9, #16
  42c0ac:	0a000004 	beq	42c0c4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1734>
  42c0b0:	e3590000 	cmp	r9, #0
  42c0b4:	c51f9718 	ldrgt	r9, [pc, #-1816]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c0b8:	ca000003 	bgt	42c0cc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x173c>
  42c0bc:	e3a09000 	mov	r9, #0
  42c0c0:	ea000001 	b	42c0cc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x173c>
  42c0c4:	e1a09809 	lsl	r9, r9, #16
  42c0c8:	e1a09829 	lsr	r9, r9, #16
  42c0cc:	e1c390b0 	strh	r9, [r3]
  42c0d0:	e085b08b 	add	fp, r5, fp, lsl #1
  42c0d4:	e1b03820 	lsrs	r3, r0, #16
  42c0d8:	0a000004 	beq	42c0f0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1760>
  42c0dc:	e3500000 	cmp	r0, #0
  42c0e0:	c51f0744 	ldrgt	r0, [pc, #-1860]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c0e4:	ca000003 	bgt	42c0f8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1768>
  42c0e8:	e3a00000 	mov	r0, #0
  42c0ec:	ea000001 	b	42c0f8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1768>
  42c0f0:	e1a00800 	lsl	r0, r0, #16
  42c0f4:	e1a00820 	lsr	r0, r0, #16
  42c0f8:	e1cb00b0 	strh	r0, [fp]
  42c0fc:	e288b002 	add	fp, r8, #2
  42c100:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42c104:	fa0016e8 	blx	431cac <__aeabi_f2d>
  42c108:	e59d2014 	ldr	r2, [sp, #20]
  42c10c:	e59d3018 	ldr	r3, [sp, #24]
  42c110:	fa00170f 	blx	431d54 <__aeabi_dmul>
  42c114:	e1a0200a 	mov	r2, sl
  42c118:	e1a03006 	mov	r3, r6
  42c11c:	fa001633 	blx	4319f0 <__adddf3>
  42c120:	e3a02000 	mov	r2, #0
  42c124:	e51f378c 	ldr	r3, [pc, #-1932]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c128:	fa001630 	blx	4319f0 <__adddf3>
  42c12c:	fa0015d1 	blx	431878 <floor>
  42c130:	fa001854 	blx	432288 <__aeabi_d2iz>
  42c134:	e1a09000 	mov	r9, r0
  42c138:	e2888003 	add	r8, r8, #3
  42c13c:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  42c140:	fa0016d9 	blx	431cac <__aeabi_f2d>
  42c144:	e59d2014 	ldr	r2, [sp, #20]
  42c148:	e59d3018 	ldr	r3, [sp, #24]
  42c14c:	fa001700 	blx	431d54 <__aeabi_dmul>
  42c150:	e1a0200a 	mov	r2, sl
  42c154:	e1a03006 	mov	r3, r6
  42c158:	fa001624 	blx	4319f0 <__adddf3>
  42c15c:	e3a02000 	mov	r2, #0
  42c160:	e51f37c8 	ldr	r3, [pc, #-1992]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c164:	fa001621 	blx	4319f0 <__adddf3>
  42c168:	fa0015c2 	blx	431878 <floor>
  42c16c:	fa001845 	blx	432288 <__aeabi_d2iz>
  42c170:	e085b08b 	add	fp, r5, fp, lsl #1
  42c174:	e1b03829 	lsrs	r3, r9, #16
  42c178:	0a000004 	beq	42c190 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1800>
  42c17c:	e3590000 	cmp	r9, #0
  42c180:	c51f97e4 	ldrgt	r9, [pc, #-2020]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c184:	ca000003 	bgt	42c198 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1808>
  42c188:	e3a09000 	mov	r9, #0
  42c18c:	ea000001 	b	42c198 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1808>
  42c190:	e1a09809 	lsl	r9, r9, #16
  42c194:	e1a09829 	lsr	r9, r9, #16
  42c198:	e1cb90b0 	strh	r9, [fp]
  42c19c:	e0858088 	add	r8, r5, r8, lsl #1
  42c1a0:	e1b03820 	lsrs	r3, r0, #16
  42c1a4:	0a000004 	beq	42c1bc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x182c>
  42c1a8:	e3500000 	cmp	r0, #0
  42c1ac:	c51f0810 	ldrgt	r0, [pc, #-2064]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c1b0:	ca000003 	bgt	42c1c4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1834>
  42c1b4:	e3a00000 	mov	r0, #0
  42c1b8:	ea000001 	b	42c1c4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1834>
  42c1bc:	e1a00800 	lsl	r0, r0, #16
  42c1c0:	e1a00820 	lsr	r0, r0, #16
  42c1c4:	e1c800b0 	strh	r0, [r8]
  42c1c8:	e2877004 	add	r7, r7, #4
  42c1cc:	ea000000 	b	42c1d4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1844>
  42c1d0:	e3a07000 	mov	r7, #0
  42c1d4:	e59d8250 	ldr	r8, [sp, #592]	; 0x250
  42c1d8:	e2483004 	sub	r3, r8, #4
  42c1dc:	e1530007 	cmp	r3, r7
  42c1e0:	aaffff92 	bge	42c030 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x16a0>
  42c1e4:	ea000018 	b	42c24c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x18bc>
  42c1e8:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42c1ec:	fa0016ae 	blx	431cac <__aeabi_f2d>
  42c1f0:	e59d2014 	ldr	r2, [sp, #20]
  42c1f4:	e59d3018 	ldr	r3, [sp, #24]
  42c1f8:	fa0016d5 	blx	431d54 <__aeabi_dmul>
  42c1fc:	e1a0200a 	mov	r2, sl
  42c200:	e1a03006 	mov	r3, r6
  42c204:	fa0015f9 	blx	4319f0 <__adddf3>
  42c208:	e3a02000 	mov	r2, #0
  42c20c:	e51f3874 	ldr	r3, [pc, #-2164]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c210:	fa0015f6 	blx	4319f0 <__adddf3>
  42c214:	fa001597 	blx	431878 <floor>
  42c218:	fa00181a 	blx	432288 <__aeabi_d2iz>
  42c21c:	e0853087 	add	r3, r5, r7, lsl #1
  42c220:	e1b02820 	lsrs	r2, r0, #16
  42c224:	0a000004 	beq	42c23c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x18ac>
  42c228:	e3500000 	cmp	r0, #0
  42c22c:	c51f0890 	ldrgt	r0, [pc, #-2192]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c230:	ca000003 	bgt	42c244 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x18b4>
  42c234:	e3a00000 	mov	r0, #0
  42c238:	ea000001 	b	42c244 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x18b4>
  42c23c:	e1a00800 	lsl	r0, r0, #16
  42c240:	e1a00820 	lsr	r0, r0, #16
  42c244:	e1c300b0 	strh	r0, [r3]
  42c248:	e2877001 	add	r7, r7, #1
  42c24c:	e1570008 	cmp	r7, r8
  42c250:	baffffe4 	blt	42c1e8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1858>
  42c254:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42c258:	e0844103 	add	r4, r4, r3, lsl #2
  42c25c:	e59d3020 	ldr	r3, [sp, #32]
  42c260:	e0855083 	add	r5, r5, r3, lsl #1
  42c264:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42c268:	e2432001 	sub	r2, r3, #1
  42c26c:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42c270:	e3530000 	cmp	r3, #0
  42c274:	1affffd5 	bne	42c1d0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1840>
  42c278:	ea00009f 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42c27c:	e1a0b1a1 	lsr	fp, r1, #3
  42c280:	e58db024 	str	fp, [sp, #36]	; 0x24
  42c284:	e59da01c 	ldr	sl, [sp, #28]
  42c288:	ea00008c 	b	42c4c0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b30>
  42c28c:	e1a08007 	mov	r8, r7
  42c290:	e0843187 	add	r3, r4, r7, lsl #3
  42c294:	e59d0014 	ldr	r0, [sp, #20]
  42c298:	e59d1018 	ldr	r1, [sp, #24]
  42c29c:	e893000c 	ldm	r3, {r2, r3}
  42c2a0:	fa0016ab 	blx	431d54 <__aeabi_dmul>
  42c2a4:	e1a0200a 	mov	r2, sl
  42c2a8:	e1a03006 	mov	r3, r6
  42c2ac:	fa0015cf 	blx	4319f0 <__adddf3>
  42c2b0:	e3a02000 	mov	r2, #0
  42c2b4:	e51f391c 	ldr	r3, [pc, #-2332]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c2b8:	fa0015cc 	blx	4319f0 <__adddf3>
  42c2bc:	fa00156d 	blx	431878 <floor>
  42c2c0:	fa0017f0 	blx	432288 <__aeabi_d2iz>
  42c2c4:	e1a09000 	mov	r9, r0
  42c2c8:	e287b001 	add	fp, r7, #1
  42c2cc:	e084318b 	add	r3, r4, fp, lsl #3
  42c2d0:	e59d0014 	ldr	r0, [sp, #20]
  42c2d4:	e59d1018 	ldr	r1, [sp, #24]
  42c2d8:	e893000c 	ldm	r3, {r2, r3}
  42c2dc:	fa00169c 	blx	431d54 <__aeabi_dmul>
  42c2e0:	e1a0200a 	mov	r2, sl
  42c2e4:	e1a03006 	mov	r3, r6
  42c2e8:	fa0015c0 	blx	4319f0 <__adddf3>
  42c2ec:	e3a02000 	mov	r2, #0
  42c2f0:	e51f3958 	ldr	r3, [pc, #-2392]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c2f4:	fa0015bd 	blx	4319f0 <__adddf3>
  42c2f8:	fa00155e 	blx	431878 <floor>
  42c2fc:	fa0017e1 	blx	432288 <__aeabi_d2iz>
  42c300:	e0853087 	add	r3, r5, r7, lsl #1
  42c304:	e1b02829 	lsrs	r2, r9, #16
  42c308:	0a000004 	beq	42c320 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1990>
  42c30c:	e3590000 	cmp	r9, #0
  42c310:	c51f9974 	ldrgt	r9, [pc, #-2420]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c314:	ca000003 	bgt	42c328 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1998>
  42c318:	e3a09000 	mov	r9, #0
  42c31c:	ea000001 	b	42c328 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1998>
  42c320:	e1a09809 	lsl	r9, r9, #16
  42c324:	e1a09829 	lsr	r9, r9, #16
  42c328:	e1c390b0 	strh	r9, [r3]
  42c32c:	e085b08b 	add	fp, r5, fp, lsl #1
  42c330:	e1b03820 	lsrs	r3, r0, #16
  42c334:	0a000004 	beq	42c34c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x19bc>
  42c338:	e3500000 	cmp	r0, #0
  42c33c:	c51f09a0 	ldrgt	r0, [pc, #-2464]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c340:	ca000003 	bgt	42c354 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x19c4>
  42c344:	e3a00000 	mov	r0, #0
  42c348:	ea000001 	b	42c354 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x19c4>
  42c34c:	e1a00800 	lsl	r0, r0, #16
  42c350:	e1a00820 	lsr	r0, r0, #16
  42c354:	e1cb00b0 	strh	r0, [fp]
  42c358:	e288b002 	add	fp, r8, #2
  42c35c:	e084318b 	add	r3, r4, fp, lsl #3
  42c360:	e59d0014 	ldr	r0, [sp, #20]
  42c364:	e59d1018 	ldr	r1, [sp, #24]
  42c368:	e893000c 	ldm	r3, {r2, r3}
  42c36c:	fa001678 	blx	431d54 <__aeabi_dmul>
  42c370:	e1a0200a 	mov	r2, sl
  42c374:	e1a03006 	mov	r3, r6
  42c378:	fa00159c 	blx	4319f0 <__adddf3>
  42c37c:	e3a02000 	mov	r2, #0
  42c380:	e51f39e8 	ldr	r3, [pc, #-2536]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c384:	fa001599 	blx	4319f0 <__adddf3>
  42c388:	fa00153a 	blx	431878 <floor>
  42c38c:	fa0017bd 	blx	432288 <__aeabi_d2iz>
  42c390:	e1a09000 	mov	r9, r0
  42c394:	e2888003 	add	r8, r8, #3
  42c398:	e0843188 	add	r3, r4, r8, lsl #3
  42c39c:	e59d0014 	ldr	r0, [sp, #20]
  42c3a0:	e59d1018 	ldr	r1, [sp, #24]
  42c3a4:	e893000c 	ldm	r3, {r2, r3}
  42c3a8:	fa001669 	blx	431d54 <__aeabi_dmul>
  42c3ac:	e1a0200a 	mov	r2, sl
  42c3b0:	e1a03006 	mov	r3, r6
  42c3b4:	fa00158d 	blx	4319f0 <__adddf3>
  42c3b8:	e3a02000 	mov	r2, #0
  42c3bc:	e51f3a24 	ldr	r3, [pc, #-2596]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c3c0:	fa00158a 	blx	4319f0 <__adddf3>
  42c3c4:	fa00152b 	blx	431878 <floor>
  42c3c8:	fa0017ae 	blx	432288 <__aeabi_d2iz>
  42c3cc:	e085b08b 	add	fp, r5, fp, lsl #1
  42c3d0:	e1b03829 	lsrs	r3, r9, #16
  42c3d4:	0a000004 	beq	42c3ec <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1a5c>
  42c3d8:	e3590000 	cmp	r9, #0
  42c3dc:	c51f9a40 	ldrgt	r9, [pc, #-2624]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c3e0:	ca000003 	bgt	42c3f4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1a64>
  42c3e4:	e3a09000 	mov	r9, #0
  42c3e8:	ea000001 	b	42c3f4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1a64>
  42c3ec:	e1a09809 	lsl	r9, r9, #16
  42c3f0:	e1a09829 	lsr	r9, r9, #16
  42c3f4:	e1cb90b0 	strh	r9, [fp]
  42c3f8:	e0858088 	add	r8, r5, r8, lsl #1
  42c3fc:	e1b03820 	lsrs	r3, r0, #16
  42c400:	0a000004 	beq	42c418 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1a88>
  42c404:	e3500000 	cmp	r0, #0
  42c408:	c51f0a6c 	ldrgt	r0, [pc, #-2668]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c40c:	ca000003 	bgt	42c420 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1a90>
  42c410:	e3a00000 	mov	r0, #0
  42c414:	ea000001 	b	42c420 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1a90>
  42c418:	e1a00800 	lsl	r0, r0, #16
  42c41c:	e1a00820 	lsr	r0, r0, #16
  42c420:	e1c800b0 	strh	r0, [r8]
  42c424:	e2877004 	add	r7, r7, #4
  42c428:	ea000000 	b	42c430 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1aa0>
  42c42c:	e3a07000 	mov	r7, #0
  42c430:	e59d8250 	ldr	r8, [sp, #592]	; 0x250
  42c434:	e2483004 	sub	r3, r8, #4
  42c438:	e1530007 	cmp	r3, r7
  42c43c:	aaffff92 	bge	42c28c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x18fc>
  42c440:	ea000018 	b	42c4a8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b18>
  42c444:	e0843187 	add	r3, r4, r7, lsl #3
  42c448:	e59d0014 	ldr	r0, [sp, #20]
  42c44c:	e59d1018 	ldr	r1, [sp, #24]
  42c450:	e893000c 	ldm	r3, {r2, r3}
  42c454:	fa00163e 	blx	431d54 <__aeabi_dmul>
  42c458:	e1a0200a 	mov	r2, sl
  42c45c:	e1a03006 	mov	r3, r6
  42c460:	fa001562 	blx	4319f0 <__adddf3>
  42c464:	e3a02000 	mov	r2, #0
  42c468:	e51f3ad0 	ldr	r3, [pc, #-2768]	; 42b9a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1010>
  42c46c:	fa00155f 	blx	4319f0 <__adddf3>
  42c470:	fa001500 	blx	431878 <floor>
  42c474:	fa001783 	blx	432288 <__aeabi_d2iz>
  42c478:	e0853087 	add	r3, r5, r7, lsl #1
  42c47c:	e1b02820 	lsrs	r2, r0, #16
  42c480:	0a000004 	beq	42c498 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b08>
  42c484:	e3500000 	cmp	r0, #0
  42c488:	c51f0aec 	ldrgt	r0, [pc, #-2796]	; 42b9a4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1014>
  42c48c:	ca000003 	bgt	42c4a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b10>
  42c490:	e3a00000 	mov	r0, #0
  42c494:	ea000001 	b	42c4a0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b10>
  42c498:	e1a00800 	lsl	r0, r0, #16
  42c49c:	e1a00820 	lsr	r0, r0, #16
  42c4a0:	e1c300b0 	strh	r0, [r3]
  42c4a4:	e2877001 	add	r7, r7, #1
  42c4a8:	e1570008 	cmp	r7, r8
  42c4ac:	baffffe4 	blt	42c444 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1ab4>
  42c4b0:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42c4b4:	e0844183 	add	r4, r4, r3, lsl #3
  42c4b8:	e59d3020 	ldr	r3, [sp, #32]
  42c4bc:	e0855083 	add	r5, r5, r3, lsl #1
  42c4c0:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
  42c4c4:	e2432001 	sub	r2, r3, #1
  42c4c8:	e58d2254 	str	r2, [sp, #596]	; 0x254
  42c4cc:	e3530000 	cmp	r3, #0
  42c4d0:	1affffd5 	bne	42c42c <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1a9c>
  42c4d4:	ea000008 	b	42c4fc <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1b6c>
  42c4d8:	e51f0b38 	ldr	r0, [pc, #-2872]	; 42b9a8 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1018>
  42c4dc:	e08f0000 	add	r0, pc, r0
  42c4e0:	e51f1b3c 	ldr	r1, [pc, #-2876]	; 42b9ac <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x101c>
  42c4e4:	e51f2b3c 	ldr	r2, [pc, #-2876]	; 42b9b0 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1020>
  42c4e8:	e08f2002 	add	r2, pc, r2
  42c4ec:	e2822fa2 	add	r2, r2, #648	; 0x288
  42c4f0:	e51f3b44 	ldr	r3, [pc, #-2884]	; 42b9b4 <_ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi+0x1024>
  42c4f4:	e08f3003 	add	r3, pc, r3
  42c4f8:	fa001e15 	blx	433d54 <__assert_func>
  42c4fc:	e3a00000 	mov	r0, #0
  42c500:	e28ddf8b 	add	sp, sp, #556	; 0x22c
  42c504:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42c508:	e12fff1e 	bx	lr

0042c50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi>:
  42c50c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42c510:	e24ddf8f 	sub	sp, sp, #572	; 0x23c
  42c514:	e1a04000 	mov	r4, r0
  42c518:	e1a07001 	mov	r7, r1
  42c51c:	e1a05002 	mov	r5, r2
  42c520:	e59d2268 	ldr	r2, [sp, #616]	; 0x268
  42c524:	e58d2014 	str	r2, [sp, #20]
  42c528:	e59d226c 	ldr	r2, [sp, #620]	; 0x26c
  42c52c:	e58d2018 	str	r2, [sp, #24]
  42c530:	e59d2270 	ldr	r2, [sp, #624]	; 0x270
  42c534:	e58d201c 	str	r2, [sp, #28]
  42c538:	e59d6274 	ldr	r6, [sp, #628]	; 0x274
  42c53c:	e1a030a3 	lsr	r3, r3, #1
  42c540:	e58d3020 	str	r3, [sp, #32]
  42c544:	e59d3278 	ldr	r3, [sp, #632]	; 0x278
  42c548:	e2033007 	and	r3, r3, #7
  42c54c:	e3530006 	cmp	r3, #6
  42c550:	908ff103 	addls	pc, pc, r3, lsl #2
  42c554:	ea0006fa 	b	42e144 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c38>
  42c558:	ea000005 	b	42c574 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x68>
  42c55c:	ea000160 	b	42cae4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x5d8>
  42c560:	ea0002ba 	b	42d050 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xb44>
  42c564:	ea0003ee 	b	42d524 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1018>
  42c568:	ea000521 	b	42d9f4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x14e8>
  42c56c:	ea0005bc 	b	42dc64 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1758>
  42c570:	ea000657 	b	42ded4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x19c8>
  42c574:	e59db260 	ldr	fp, [sp, #608]	; 0x260
  42c578:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42c57c:	e003039b 	mul	r3, fp, r3
  42c580:	e35300ff 	cmp	r3, #255	; 0xff
  42c584:	ca00001d 	bgt	42c600 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xf4>
  42c588:	ea000030 	b	42c650 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x144>
  42c58c:	e1a00009 	mov	r0, r9
  42c590:	e1a01006 	mov	r1, r6
  42c594:	e3a02000 	mov	r2, #0
  42c598:	e59f3f6c 	ldr	r3, [pc, #3948]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42c59c:	fa001513 	blx	4319f0 <__adddf3>
  42c5a0:	fa0014b4 	blx	431878 <floor>
  42c5a4:	fa001737 	blx	432288 <__aeabi_d2iz>
  42c5a8:	e2803902 	add	r3, r0, #32768	; 0x8000
  42c5ac:	e1b03823 	lsrs	r3, r3, #16
  42c5b0:	0a000004 	beq	42c5c8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xbc>
  42c5b4:	e3500000 	cmp	r0, #0
  42c5b8:	c59f0f50 	ldrgt	r0, [pc, #3920]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c5bc:	ca000003 	bgt	42c5d0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc4>
  42c5c0:	e3a00902 	mov	r0, #32768	; 0x8000
  42c5c4:	ea000001 	b	42c5d0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc4>
  42c5c8:	e1a00800 	lsl	r0, r0, #16
  42c5cc:	e1a00820 	lsr	r0, r0, #16
  42c5d0:	e1a03088 	lsl	r3, r8, #1
  42c5d4:	e28d2038 	add	r2, sp, #56	; 0x38
  42c5d8:	e18200b3 	strh	r0, [r2, r3]
  42c5dc:	e2888001 	add	r8, r8, #1
  42c5e0:	e1a00009 	mov	r0, r9
  42c5e4:	e1a01006 	mov	r1, r6
  42c5e8:	e1a0200a 	mov	r2, sl
  42c5ec:	e1a0300b 	mov	r3, fp
  42c5f0:	fa0014fe 	blx	4319f0 <__adddf3>
  42c5f4:	e1a09000 	mov	r9, r0
  42c5f8:	e1a06001 	mov	r6, r1
  42c5fc:	ea000003 	b	42c610 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x104>
  42c600:	e3a08000 	mov	r8, #0
  42c604:	e59da014 	ldr	sl, [sp, #20]
  42c608:	e59db018 	ldr	fp, [sp, #24]
  42c60c:	e59d901c 	ldr	r9, [sp, #28]
  42c610:	e35800ff 	cmp	r8, #255	; 0xff
  42c614:	daffffdc 	ble	42c58c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x80>
  42c618:	e28d3f97 	add	r3, sp, #604	; 0x25c
  42c61c:	e9930003 	ldmib	r3, {r0, r1}
  42c620:	e28d3028 	add	r3, sp, #40	; 0x28
  42c624:	e8830003 	stm	r3, {r0, r1}
  42c628:	e88d0003 	stm	sp, {r0, r1}
  42c62c:	e28d3038 	add	r3, sp, #56	; 0x38
  42c630:	e58d3008 	str	r3, [sp, #8]
  42c634:	e1a00004 	mov	r0, r4
  42c638:	e1a01007 	mov	r1, r7
  42c63c:	e1a02005 	mov	r2, r5
  42c640:	e59d3020 	ldr	r3, [sp, #32]
  42c644:	e1a03083 	lsl	r3, r3, #1
  42c648:	eb000f9e 	bl	4304c8 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt>
  42c64c:	ea0006c5 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42c650:	e59d0014 	ldr	r0, [sp, #20]
  42c654:	e59d3018 	ldr	r3, [sp, #24]
  42c658:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42c65c:	e3a02000 	mov	r2, #0
  42c660:	e59f3e8c 	ldr	r3, [pc, #3724]	; 42d4f4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfe8>
  42c664:	fa0016f8 	blx	43224c <__aeabi_dcmple>
  42c668:	e3500000 	cmp	r0, #0
  42c66c:	0a000083 	beq	42c880 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x374>
  42c670:	e59d001c 	ldr	r0, [sp, #28]
  42c674:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42c678:	e59f2e80 	ldr	r2, [pc, #3712]	; 42d500 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff4>
  42c67c:	e59f3e80 	ldr	r3, [pc, #3712]	; 42d504 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff8>
  42c680:	fa0016f1 	blx	43224c <__aeabi_dcmple>
  42c684:	e3500000 	cmp	r0, #0
  42c688:	0a00007c 	beq	42c880 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x374>
  42c68c:	e59d0014 	ldr	r0, [sp, #20]
  42c690:	e59d1018 	ldr	r1, [sp, #24]
  42c694:	e3a02000 	mov	r2, #0
  42c698:	e59f3e68 	ldr	r3, [pc, #3688]	; 42d508 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xffc>
  42c69c:	fa0015ac 	blx	431d54 <__aeabi_dmul>
  42c6a0:	e3a02000 	mov	r2, #0
  42c6a4:	e59f3e60 	ldr	r3, [pc, #3680]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42c6a8:	fa0014d0 	blx	4319f0 <__adddf3>
  42c6ac:	fa001471 	blx	431878 <floor>
  42c6b0:	fa0016f4 	blx	432288 <__aeabi_d2iz>
  42c6b4:	e1a08000 	mov	r8, r0
  42c6b8:	e59d001c 	ldr	r0, [sp, #28]
  42c6bc:	e1a01006 	mov	r1, r6
  42c6c0:	e3a02000 	mov	r2, #0
  42c6c4:	e59f3e3c 	ldr	r3, [pc, #3644]	; 42d508 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xffc>
  42c6c8:	fa0015a1 	blx	431d54 <__aeabi_dmul>
  42c6cc:	e3a02000 	mov	r2, #0
  42c6d0:	e59f3e34 	ldr	r3, [pc, #3636]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42c6d4:	fa0014c5 	blx	4319f0 <__adddf3>
  42c6d8:	fa001466 	blx	431878 <floor>
  42c6dc:	fa0016e9 	blx	432288 <__aeabi_d2iz>
  42c6e0:	e59d1020 	ldr	r1, [sp, #32]
  42c6e4:	ea00005f 	b	42c868 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x35c>
  42c6e8:	e1a0e003 	mov	lr, r3
  42c6ec:	e7d42003 	ldrb	r2, [r4, r3]
  42c6f0:	e0220298 	mla	r2, r8, r2, r0
  42c6f4:	e2822901 	add	r2, r2, #16384	; 0x4000
  42c6f8:	e1a0c7c2 	asr	ip, r2, #15
  42c6fc:	e2836001 	add	r6, r3, #1
  42c700:	e7d42006 	ldrb	r2, [r4, r6]
  42c704:	e0220298 	mla	r2, r8, r2, r0
  42c708:	e2822901 	add	r2, r2, #16384	; 0x4000
  42c70c:	e1a027c2 	asr	r2, r2, #15
  42c710:	e0859083 	add	r9, r5, r3, lsl #1
  42c714:	e28ca902 	add	sl, ip, #32768	; 0x8000
  42c718:	e1b0a82a 	lsrs	sl, sl, #16
  42c71c:	0a000004 	beq	42c734 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x228>
  42c720:	e35c0000 	cmp	ip, #0
  42c724:	c59fcde4 	ldrgt	ip, [pc, #3556]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c728:	ca000003 	bgt	42c73c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x230>
  42c72c:	e3a0c902 	mov	ip, #32768	; 0x8000
  42c730:	ea000001 	b	42c73c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x230>
  42c734:	e1a0c80c 	lsl	ip, ip, #16
  42c738:	e1a0c82c 	lsr	ip, ip, #16
  42c73c:	e1c9c0b0 	strh	ip, [r9]
  42c740:	e0856086 	add	r6, r5, r6, lsl #1
  42c744:	e282c902 	add	ip, r2, #32768	; 0x8000
  42c748:	e1b0c82c 	lsrs	ip, ip, #16
  42c74c:	0a000004 	beq	42c764 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x258>
  42c750:	e3520000 	cmp	r2, #0
  42c754:	c59f2db4 	ldrgt	r2, [pc, #3508]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c758:	ca000003 	bgt	42c76c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x260>
  42c75c:	e3a02902 	mov	r2, #32768	; 0x8000
  42c760:	ea000001 	b	42c76c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x260>
  42c764:	e1a02802 	lsl	r2, r2, #16
  42c768:	e1a02822 	lsr	r2, r2, #16
  42c76c:	e1c620b0 	strh	r2, [r6]
  42c770:	e28e6002 	add	r6, lr, #2
  42c774:	e7d4c006 	ldrb	ip, [r4, r6]
  42c778:	e02c0c98 	mla	ip, r8, ip, r0
  42c77c:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42c780:	e1a0c7cc 	asr	ip, ip, #15
  42c784:	e28ee003 	add	lr, lr, #3
  42c788:	e7d4200e 	ldrb	r2, [r4, lr]
  42c78c:	e0220298 	mla	r2, r8, r2, r0
  42c790:	e2822901 	add	r2, r2, #16384	; 0x4000
  42c794:	e1a027c2 	asr	r2, r2, #15
  42c798:	e0856086 	add	r6, r5, r6, lsl #1
  42c79c:	e28c9902 	add	r9, ip, #32768	; 0x8000
  42c7a0:	e1b09829 	lsrs	r9, r9, #16
  42c7a4:	0a000004 	beq	42c7bc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2b0>
  42c7a8:	e35c0000 	cmp	ip, #0
  42c7ac:	c59fcd5c 	ldrgt	ip, [pc, #3420]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c7b0:	ca000003 	bgt	42c7c4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2b8>
  42c7b4:	e3a0c902 	mov	ip, #32768	; 0x8000
  42c7b8:	ea000001 	b	42c7c4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2b8>
  42c7bc:	e1a0c80c 	lsl	ip, ip, #16
  42c7c0:	e1a0c82c 	lsr	ip, ip, #16
  42c7c4:	e1c6c0b0 	strh	ip, [r6]
  42c7c8:	e085e08e 	add	lr, r5, lr, lsl #1
  42c7cc:	e282c902 	add	ip, r2, #32768	; 0x8000
  42c7d0:	e1b0c82c 	lsrs	ip, ip, #16
  42c7d4:	0a000004 	beq	42c7ec <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2e0>
  42c7d8:	e3520000 	cmp	r2, #0
  42c7dc:	c59f2d2c 	ldrgt	r2, [pc, #3372]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c7e0:	ca000003 	bgt	42c7f4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2e8>
  42c7e4:	e3a02902 	mov	r2, #32768	; 0x8000
  42c7e8:	ea000001 	b	42c7f4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2e8>
  42c7ec:	e1a02802 	lsl	r2, r2, #16
  42c7f0:	e1a02822 	lsr	r2, r2, #16
  42c7f4:	e1ce20b0 	strh	r2, [lr]
  42c7f8:	e2833004 	add	r3, r3, #4
  42c7fc:	ea000000 	b	42c804 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2f8>
  42c800:	e3a03000 	mov	r3, #0
  42c804:	e24b2004 	sub	r2, fp, #4
  42c808:	e1520003 	cmp	r2, r3
  42c80c:	aaffffb5 	bge	42c6e8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1dc>
  42c810:	ea000010 	b	42c858 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x34c>
  42c814:	e7d42003 	ldrb	r2, [r4, r3]
  42c818:	e0220298 	mla	r2, r8, r2, r0
  42c81c:	e2822901 	add	r2, r2, #16384	; 0x4000
  42c820:	e1a027c2 	asr	r2, r2, #15
  42c824:	e085c083 	add	ip, r5, r3, lsl #1
  42c828:	e282e902 	add	lr, r2, #32768	; 0x8000
  42c82c:	e1b0e82e 	lsrs	lr, lr, #16
  42c830:	0a000004 	beq	42c848 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x33c>
  42c834:	e3520000 	cmp	r2, #0
  42c838:	c59f2cd0 	ldrgt	r2, [pc, #3280]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c83c:	ca000003 	bgt	42c850 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x344>
  42c840:	e3a02902 	mov	r2, #32768	; 0x8000
  42c844:	ea000001 	b	42c850 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x344>
  42c848:	e1a02802 	lsl	r2, r2, #16
  42c84c:	e1a02822 	lsr	r2, r2, #16
  42c850:	e1cc20b0 	strh	r2, [ip]
  42c854:	e2833001 	add	r3, r3, #1
  42c858:	e153000b 	cmp	r3, fp
  42c85c:	baffffec 	blt	42c814 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x308>
  42c860:	e0844007 	add	r4, r4, r7
  42c864:	e0855081 	add	r5, r5, r1, lsl #1
  42c868:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42c86c:	e2432001 	sub	r2, r3, #1
  42c870:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42c874:	e3530000 	cmp	r3, #0
  42c878:	1affffe0 	bne	42c800 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x2f4>
  42c87c:	ea000639 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42c880:	e58d7024 	str	r7, [sp, #36]	; 0x24
  42c884:	ea000090 	b	42cacc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x5c0>
  42c888:	e1a08007 	mov	r8, r7
  42c88c:	e7d40007 	ldrb	r0, [r4, r7]
  42c890:	fa0014fc 	blx	431c88 <__aeabi_i2d>
  42c894:	e59d2014 	ldr	r2, [sp, #20]
  42c898:	e59d3018 	ldr	r3, [sp, #24]
  42c89c:	fa00152c 	blx	431d54 <__aeabi_dmul>
  42c8a0:	e59d201c 	ldr	r2, [sp, #28]
  42c8a4:	e1a03006 	mov	r3, r6
  42c8a8:	fa001450 	blx	4319f0 <__adddf3>
  42c8ac:	e3a02000 	mov	r2, #0
  42c8b0:	e59f3c54 	ldr	r3, [pc, #3156]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42c8b4:	fa00144d 	blx	4319f0 <__adddf3>
  42c8b8:	fa0013ee 	blx	431878 <floor>
  42c8bc:	fa001671 	blx	432288 <__aeabi_d2iz>
  42c8c0:	e1a09000 	mov	r9, r0
  42c8c4:	e287a001 	add	sl, r7, #1
  42c8c8:	e7d4000a 	ldrb	r0, [r4, sl]
  42c8cc:	fa0014ed 	blx	431c88 <__aeabi_i2d>
  42c8d0:	e59d2014 	ldr	r2, [sp, #20]
  42c8d4:	e59d3018 	ldr	r3, [sp, #24]
  42c8d8:	fa00151d 	blx	431d54 <__aeabi_dmul>
  42c8dc:	e59d201c 	ldr	r2, [sp, #28]
  42c8e0:	e1a03006 	mov	r3, r6
  42c8e4:	fa001441 	blx	4319f0 <__adddf3>
  42c8e8:	e3a02000 	mov	r2, #0
  42c8ec:	e59f3c18 	ldr	r3, [pc, #3096]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42c8f0:	fa00143e 	blx	4319f0 <__adddf3>
  42c8f4:	fa0013df 	blx	431878 <floor>
  42c8f8:	fa001662 	blx	432288 <__aeabi_d2iz>
  42c8fc:	e0853087 	add	r3, r5, r7, lsl #1
  42c900:	e2892902 	add	r2, r9, #32768	; 0x8000
  42c904:	e1b02822 	lsrs	r2, r2, #16
  42c908:	0a000004 	beq	42c920 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x414>
  42c90c:	e3590000 	cmp	r9, #0
  42c910:	c59f9bf8 	ldrgt	r9, [pc, #3064]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c914:	ca000003 	bgt	42c928 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x41c>
  42c918:	e3a09902 	mov	r9, #32768	; 0x8000
  42c91c:	ea000001 	b	42c928 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x41c>
  42c920:	e1a09809 	lsl	r9, r9, #16
  42c924:	e1a09829 	lsr	r9, r9, #16
  42c928:	e1c390b0 	strh	r9, [r3]
  42c92c:	e085a08a 	add	sl, r5, sl, lsl #1
  42c930:	e2803902 	add	r3, r0, #32768	; 0x8000
  42c934:	e1b03823 	lsrs	r3, r3, #16
  42c938:	0a000004 	beq	42c950 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x444>
  42c93c:	e3500000 	cmp	r0, #0
  42c940:	c59f0bc8 	ldrgt	r0, [pc, #3016]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c944:	ca000003 	bgt	42c958 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x44c>
  42c948:	e3a00902 	mov	r0, #32768	; 0x8000
  42c94c:	ea000001 	b	42c958 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x44c>
  42c950:	e1a00800 	lsl	r0, r0, #16
  42c954:	e1a00820 	lsr	r0, r0, #16
  42c958:	e1ca00b0 	strh	r0, [sl]
  42c95c:	e288a002 	add	sl, r8, #2
  42c960:	e7d4000a 	ldrb	r0, [r4, sl]
  42c964:	fa0014c7 	blx	431c88 <__aeabi_i2d>
  42c968:	e59d2014 	ldr	r2, [sp, #20]
  42c96c:	e59d3018 	ldr	r3, [sp, #24]
  42c970:	fa0014f7 	blx	431d54 <__aeabi_dmul>
  42c974:	e59d201c 	ldr	r2, [sp, #28]
  42c978:	e1a03006 	mov	r3, r6
  42c97c:	fa00141b 	blx	4319f0 <__adddf3>
  42c980:	e3a02000 	mov	r2, #0
  42c984:	e59f3b80 	ldr	r3, [pc, #2944]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42c988:	fa001418 	blx	4319f0 <__adddf3>
  42c98c:	fa0013b9 	blx	431878 <floor>
  42c990:	fa00163c 	blx	432288 <__aeabi_d2iz>
  42c994:	e1a09000 	mov	r9, r0
  42c998:	e2888003 	add	r8, r8, #3
  42c99c:	e7d40008 	ldrb	r0, [r4, r8]
  42c9a0:	fa0014b8 	blx	431c88 <__aeabi_i2d>
  42c9a4:	e59d2014 	ldr	r2, [sp, #20]
  42c9a8:	e59d3018 	ldr	r3, [sp, #24]
  42c9ac:	fa0014e8 	blx	431d54 <__aeabi_dmul>
  42c9b0:	e59d201c 	ldr	r2, [sp, #28]
  42c9b4:	e1a03006 	mov	r3, r6
  42c9b8:	fa00140c 	blx	4319f0 <__adddf3>
  42c9bc:	e3a02000 	mov	r2, #0
  42c9c0:	e59f3b44 	ldr	r3, [pc, #2884]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42c9c4:	fa001409 	blx	4319f0 <__adddf3>
  42c9c8:	fa0013aa 	blx	431878 <floor>
  42c9cc:	fa00162d 	blx	432288 <__aeabi_d2iz>
  42c9d0:	e085a08a 	add	sl, r5, sl, lsl #1
  42c9d4:	e2893902 	add	r3, r9, #32768	; 0x8000
  42c9d8:	e1b03823 	lsrs	r3, r3, #16
  42c9dc:	0a000004 	beq	42c9f4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x4e8>
  42c9e0:	e3590000 	cmp	r9, #0
  42c9e4:	c59f9b24 	ldrgt	r9, [pc, #2852]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42c9e8:	ca000003 	bgt	42c9fc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x4f0>
  42c9ec:	e3a09902 	mov	r9, #32768	; 0x8000
  42c9f0:	ea000001 	b	42c9fc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x4f0>
  42c9f4:	e1a09809 	lsl	r9, r9, #16
  42c9f8:	e1a09829 	lsr	r9, r9, #16
  42c9fc:	e1ca90b0 	strh	r9, [sl]
  42ca00:	e0858088 	add	r8, r5, r8, lsl #1
  42ca04:	e2803902 	add	r3, r0, #32768	; 0x8000
  42ca08:	e1b03823 	lsrs	r3, r3, #16
  42ca0c:	0a000004 	beq	42ca24 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x518>
  42ca10:	e3500000 	cmp	r0, #0
  42ca14:	c59f0af4 	ldrgt	r0, [pc, #2804]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42ca18:	ca000003 	bgt	42ca2c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x520>
  42ca1c:	e3a00902 	mov	r0, #32768	; 0x8000
  42ca20:	ea000001 	b	42ca2c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x520>
  42ca24:	e1a00800 	lsl	r0, r0, #16
  42ca28:	e1a00820 	lsr	r0, r0, #16
  42ca2c:	e1c800b0 	strh	r0, [r8]
  42ca30:	e2877004 	add	r7, r7, #4
  42ca34:	ea000000 	b	42ca3c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x530>
  42ca38:	e3a07000 	mov	r7, #0
  42ca3c:	e24b3004 	sub	r3, fp, #4
  42ca40:	e1530007 	cmp	r3, r7
  42ca44:	aaffff8f 	bge	42c888 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x37c>
  42ca48:	ea000019 	b	42cab4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x5a8>
  42ca4c:	e7d40007 	ldrb	r0, [r4, r7]
  42ca50:	fa00148c 	blx	431c88 <__aeabi_i2d>
  42ca54:	e59d2014 	ldr	r2, [sp, #20]
  42ca58:	e59d3018 	ldr	r3, [sp, #24]
  42ca5c:	fa0014bc 	blx	431d54 <__aeabi_dmul>
  42ca60:	e59d201c 	ldr	r2, [sp, #28]
  42ca64:	e1a03006 	mov	r3, r6
  42ca68:	fa0013e0 	blx	4319f0 <__adddf3>
  42ca6c:	e3a02000 	mov	r2, #0
  42ca70:	e59f3a94 	ldr	r3, [pc, #2708]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42ca74:	fa0013dd 	blx	4319f0 <__adddf3>
  42ca78:	fa00137e 	blx	431878 <floor>
  42ca7c:	fa001601 	blx	432288 <__aeabi_d2iz>
  42ca80:	e0853087 	add	r3, r5, r7, lsl #1
  42ca84:	e2802902 	add	r2, r0, #32768	; 0x8000
  42ca88:	e1b02822 	lsrs	r2, r2, #16
  42ca8c:	0a000004 	beq	42caa4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x598>
  42ca90:	e3500000 	cmp	r0, #0
  42ca94:	c59f0a74 	ldrgt	r0, [pc, #2676]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42ca98:	ca000003 	bgt	42caac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x5a0>
  42ca9c:	e3a00902 	mov	r0, #32768	; 0x8000
  42caa0:	ea000001 	b	42caac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x5a0>
  42caa4:	e1a00800 	lsl	r0, r0, #16
  42caa8:	e1a00820 	lsr	r0, r0, #16
  42caac:	e1c300b0 	strh	r0, [r3]
  42cab0:	e2877001 	add	r7, r7, #1
  42cab4:	e157000b 	cmp	r7, fp
  42cab8:	baffffe3 	blt	42ca4c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x540>
  42cabc:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42cac0:	e0844003 	add	r4, r4, r3
  42cac4:	e59d3020 	ldr	r3, [sp, #32]
  42cac8:	e0855083 	add	r5, r5, r3, lsl #1
  42cacc:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42cad0:	e2432001 	sub	r2, r3, #1
  42cad4:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42cad8:	e3530000 	cmp	r3, #0
  42cadc:	1affffd5 	bne	42ca38 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x52c>
  42cae0:	ea0005a0 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42cae4:	e59db260 	ldr	fp, [sp, #608]	; 0x260
  42cae8:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42caec:	e003039b 	mul	r3, fp, r3
  42caf0:	e35300ff 	cmp	r3, #255	; 0xff
  42caf4:	ca00001c 	bgt	42cb6c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x660>
  42caf8:	ea00002f 	b	42cbbc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x6b0>
  42cafc:	e20800ff 	and	r0, r8, #255	; 0xff
  42cb00:	fa001460 	blx	431c88 <__aeabi_i2d>
  42cb04:	e1a02009 	mov	r2, r9
  42cb08:	e1a0300a 	mov	r3, sl
  42cb0c:	fa001490 	blx	431d54 <__aeabi_dmul>
  42cb10:	e1a0200b 	mov	r2, fp
  42cb14:	e1a03006 	mov	r3, r6
  42cb18:	fa0013b4 	blx	4319f0 <__adddf3>
  42cb1c:	e3a02000 	mov	r2, #0
  42cb20:	e59f39e4 	ldr	r3, [pc, #2532]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42cb24:	fa0013b1 	blx	4319f0 <__adddf3>
  42cb28:	fa001352 	blx	431878 <floor>
  42cb2c:	fa0015d5 	blx	432288 <__aeabi_d2iz>
  42cb30:	e2803902 	add	r3, r0, #32768	; 0x8000
  42cb34:	e1b03823 	lsrs	r3, r3, #16
  42cb38:	0a000004 	beq	42cb50 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x644>
  42cb3c:	e3500000 	cmp	r0, #0
  42cb40:	c59f09c8 	ldrgt	r0, [pc, #2504]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42cb44:	ca000003 	bgt	42cb58 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x64c>
  42cb48:	e3a00902 	mov	r0, #32768	; 0x8000
  42cb4c:	ea000001 	b	42cb58 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x64c>
  42cb50:	e1a00800 	lsl	r0, r0, #16
  42cb54:	e1a00820 	lsr	r0, r0, #16
  42cb58:	e1a03088 	lsl	r3, r8, #1
  42cb5c:	e28d2038 	add	r2, sp, #56	; 0x38
  42cb60:	e18200b3 	strh	r0, [r2, r3]
  42cb64:	e2888001 	add	r8, r8, #1
  42cb68:	ea000003 	b	42cb7c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x670>
  42cb6c:	e3a08000 	mov	r8, #0
  42cb70:	e59d9014 	ldr	r9, [sp, #20]
  42cb74:	e59da018 	ldr	sl, [sp, #24]
  42cb78:	e59db01c 	ldr	fp, [sp, #28]
  42cb7c:	e35800ff 	cmp	r8, #255	; 0xff
  42cb80:	daffffdd 	ble	42cafc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x5f0>
  42cb84:	e28d3f97 	add	r3, sp, #604	; 0x25c
  42cb88:	e9930003 	ldmib	r3, {r0, r1}
  42cb8c:	e28d3030 	add	r3, sp, #48	; 0x30
  42cb90:	e8830003 	stm	r3, {r0, r1}
  42cb94:	e88d0003 	stm	sp, {r0, r1}
  42cb98:	e28d3038 	add	r3, sp, #56	; 0x38
  42cb9c:	e58d3008 	str	r3, [sp, #8]
  42cba0:	e1a00004 	mov	r0, r4
  42cba4:	e1a01007 	mov	r1, r7
  42cba8:	e1a02005 	mov	r2, r5
  42cbac:	e59d3020 	ldr	r3, [sp, #32]
  42cbb0:	e1a03083 	lsl	r3, r3, #1
  42cbb4:	eb000e43 	bl	4304c8 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt>
  42cbb8:	ea00056a 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42cbbc:	e59d0014 	ldr	r0, [sp, #20]
  42cbc0:	e59d3018 	ldr	r3, [sp, #24]
  42cbc4:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42cbc8:	e3a02000 	mov	r2, #0
  42cbcc:	e59f3920 	ldr	r3, [pc, #2336]	; 42d4f4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfe8>
  42cbd0:	fa00159d 	blx	43224c <__aeabi_dcmple>
  42cbd4:	e3500000 	cmp	r0, #0
  42cbd8:	0a000083 	beq	42cdec <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8e0>
  42cbdc:	e59d001c 	ldr	r0, [sp, #28]
  42cbe0:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42cbe4:	e59f2914 	ldr	r2, [pc, #2324]	; 42d500 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff4>
  42cbe8:	e59f3914 	ldr	r3, [pc, #2324]	; 42d504 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff8>
  42cbec:	fa001596 	blx	43224c <__aeabi_dcmple>
  42cbf0:	e3500000 	cmp	r0, #0
  42cbf4:	0a00007c 	beq	42cdec <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8e0>
  42cbf8:	e59d0014 	ldr	r0, [sp, #20]
  42cbfc:	e59d1018 	ldr	r1, [sp, #24]
  42cc00:	e3a02000 	mov	r2, #0
  42cc04:	e59f38fc 	ldr	r3, [pc, #2300]	; 42d508 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xffc>
  42cc08:	fa001451 	blx	431d54 <__aeabi_dmul>
  42cc0c:	e3a02000 	mov	r2, #0
  42cc10:	e59f38f4 	ldr	r3, [pc, #2292]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42cc14:	fa001375 	blx	4319f0 <__adddf3>
  42cc18:	fa001316 	blx	431878 <floor>
  42cc1c:	fa001599 	blx	432288 <__aeabi_d2iz>
  42cc20:	e1a08000 	mov	r8, r0
  42cc24:	e59d001c 	ldr	r0, [sp, #28]
  42cc28:	e1a01006 	mov	r1, r6
  42cc2c:	e3a02000 	mov	r2, #0
  42cc30:	e59f38d0 	ldr	r3, [pc, #2256]	; 42d508 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xffc>
  42cc34:	fa001446 	blx	431d54 <__aeabi_dmul>
  42cc38:	e3a02000 	mov	r2, #0
  42cc3c:	e59f38c8 	ldr	r3, [pc, #2248]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42cc40:	fa00136a 	blx	4319f0 <__adddf3>
  42cc44:	fa00130b 	blx	431878 <floor>
  42cc48:	fa00158e 	blx	432288 <__aeabi_d2iz>
  42cc4c:	e59d1020 	ldr	r1, [sp, #32]
  42cc50:	ea00005f 	b	42cdd4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8c8>
  42cc54:	e1a0e003 	mov	lr, r3
  42cc58:	e7d42003 	ldrb	r2, [r4, r3]
  42cc5c:	e0220298 	mla	r2, r8, r2, r0
  42cc60:	e2822901 	add	r2, r2, #16384	; 0x4000
  42cc64:	e1a0c7c2 	asr	ip, r2, #15
  42cc68:	e2836001 	add	r6, r3, #1
  42cc6c:	e7d42006 	ldrb	r2, [r4, r6]
  42cc70:	e0220298 	mla	r2, r8, r2, r0
  42cc74:	e2822901 	add	r2, r2, #16384	; 0x4000
  42cc78:	e1a027c2 	asr	r2, r2, #15
  42cc7c:	e0859083 	add	r9, r5, r3, lsl #1
  42cc80:	e28ca902 	add	sl, ip, #32768	; 0x8000
  42cc84:	e1b0a82a 	lsrs	sl, sl, #16
  42cc88:	0a000004 	beq	42cca0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x794>
  42cc8c:	e35c0000 	cmp	ip, #0
  42cc90:	c59fc878 	ldrgt	ip, [pc, #2168]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42cc94:	ca000003 	bgt	42cca8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x79c>
  42cc98:	e3a0c902 	mov	ip, #32768	; 0x8000
  42cc9c:	ea000001 	b	42cca8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x79c>
  42cca0:	e1a0c80c 	lsl	ip, ip, #16
  42cca4:	e1a0c82c 	lsr	ip, ip, #16
  42cca8:	e1c9c0b0 	strh	ip, [r9]
  42ccac:	e0856086 	add	r6, r5, r6, lsl #1
  42ccb0:	e282c902 	add	ip, r2, #32768	; 0x8000
  42ccb4:	e1b0c82c 	lsrs	ip, ip, #16
  42ccb8:	0a000004 	beq	42ccd0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x7c4>
  42ccbc:	e3520000 	cmp	r2, #0
  42ccc0:	c59f2848 	ldrgt	r2, [pc, #2120]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42ccc4:	ca000003 	bgt	42ccd8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x7cc>
  42ccc8:	e3a02902 	mov	r2, #32768	; 0x8000
  42cccc:	ea000001 	b	42ccd8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x7cc>
  42ccd0:	e1a02802 	lsl	r2, r2, #16
  42ccd4:	e1a02822 	lsr	r2, r2, #16
  42ccd8:	e1c620b0 	strh	r2, [r6]
  42ccdc:	e28e6002 	add	r6, lr, #2
  42cce0:	e7d4c006 	ldrb	ip, [r4, r6]
  42cce4:	e02c0c98 	mla	ip, r8, ip, r0
  42cce8:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42ccec:	e1a0c7cc 	asr	ip, ip, #15
  42ccf0:	e28ee003 	add	lr, lr, #3
  42ccf4:	e7d4200e 	ldrb	r2, [r4, lr]
  42ccf8:	e0220298 	mla	r2, r8, r2, r0
  42ccfc:	e2822901 	add	r2, r2, #16384	; 0x4000
  42cd00:	e1a027c2 	asr	r2, r2, #15
  42cd04:	e0856086 	add	r6, r5, r6, lsl #1
  42cd08:	e28c9902 	add	r9, ip, #32768	; 0x8000
  42cd0c:	e1b09829 	lsrs	r9, r9, #16
  42cd10:	0a000004 	beq	42cd28 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x81c>
  42cd14:	e35c0000 	cmp	ip, #0
  42cd18:	c59fc7f0 	ldrgt	ip, [pc, #2032]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42cd1c:	ca000003 	bgt	42cd30 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x824>
  42cd20:	e3a0c902 	mov	ip, #32768	; 0x8000
  42cd24:	ea000001 	b	42cd30 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x824>
  42cd28:	e1a0c80c 	lsl	ip, ip, #16
  42cd2c:	e1a0c82c 	lsr	ip, ip, #16
  42cd30:	e1c6c0b0 	strh	ip, [r6]
  42cd34:	e085e08e 	add	lr, r5, lr, lsl #1
  42cd38:	e282c902 	add	ip, r2, #32768	; 0x8000
  42cd3c:	e1b0c82c 	lsrs	ip, ip, #16
  42cd40:	0a000004 	beq	42cd58 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x84c>
  42cd44:	e3520000 	cmp	r2, #0
  42cd48:	c59f27c0 	ldrgt	r2, [pc, #1984]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42cd4c:	ca000003 	bgt	42cd60 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x854>
  42cd50:	e3a02902 	mov	r2, #32768	; 0x8000
  42cd54:	ea000001 	b	42cd60 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x854>
  42cd58:	e1a02802 	lsl	r2, r2, #16
  42cd5c:	e1a02822 	lsr	r2, r2, #16
  42cd60:	e1ce20b0 	strh	r2, [lr]
  42cd64:	e2833004 	add	r3, r3, #4
  42cd68:	ea000000 	b	42cd70 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x864>
  42cd6c:	e3a03000 	mov	r3, #0
  42cd70:	e24b2004 	sub	r2, fp, #4
  42cd74:	e1520003 	cmp	r2, r3
  42cd78:	aaffffb5 	bge	42cc54 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x748>
  42cd7c:	ea000010 	b	42cdc4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8b8>
  42cd80:	e7d42003 	ldrb	r2, [r4, r3]
  42cd84:	e0220298 	mla	r2, r8, r2, r0
  42cd88:	e2822901 	add	r2, r2, #16384	; 0x4000
  42cd8c:	e1a027c2 	asr	r2, r2, #15
  42cd90:	e085c083 	add	ip, r5, r3, lsl #1
  42cd94:	e282e902 	add	lr, r2, #32768	; 0x8000
  42cd98:	e1b0e82e 	lsrs	lr, lr, #16
  42cd9c:	0a000004 	beq	42cdb4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8a8>
  42cda0:	e3520000 	cmp	r2, #0
  42cda4:	c59f2764 	ldrgt	r2, [pc, #1892]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42cda8:	ca000003 	bgt	42cdbc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8b0>
  42cdac:	e3a02902 	mov	r2, #32768	; 0x8000
  42cdb0:	ea000001 	b	42cdbc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8b0>
  42cdb4:	e1a02802 	lsl	r2, r2, #16
  42cdb8:	e1a02822 	lsr	r2, r2, #16
  42cdbc:	e1cc20b0 	strh	r2, [ip]
  42cdc0:	e2833001 	add	r3, r3, #1
  42cdc4:	e153000b 	cmp	r3, fp
  42cdc8:	baffffec 	blt	42cd80 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x874>
  42cdcc:	e0844007 	add	r4, r4, r7
  42cdd0:	e0855081 	add	r5, r5, r1, lsl #1
  42cdd4:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42cdd8:	e2432001 	sub	r2, r3, #1
  42cddc:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42cde0:	e3530000 	cmp	r3, #0
  42cde4:	1affffe0 	bne	42cd6c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x860>
  42cde8:	ea0004de 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42cdec:	e58d7024 	str	r7, [sp, #36]	; 0x24
  42cdf0:	ea000090 	b	42d038 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xb2c>
  42cdf4:	e1a08007 	mov	r8, r7
  42cdf8:	e7d40007 	ldrb	r0, [r4, r7]
  42cdfc:	fa0013a1 	blx	431c88 <__aeabi_i2d>
  42ce00:	e59d2014 	ldr	r2, [sp, #20]
  42ce04:	e59d3018 	ldr	r3, [sp, #24]
  42ce08:	fa0013d1 	blx	431d54 <__aeabi_dmul>
  42ce0c:	e59d201c 	ldr	r2, [sp, #28]
  42ce10:	e1a03006 	mov	r3, r6
  42ce14:	fa0012f5 	blx	4319f0 <__adddf3>
  42ce18:	e3a02000 	mov	r2, #0
  42ce1c:	e59f36e8 	ldr	r3, [pc, #1768]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42ce20:	fa0012f2 	blx	4319f0 <__adddf3>
  42ce24:	fa001293 	blx	431878 <floor>
  42ce28:	fa001516 	blx	432288 <__aeabi_d2iz>
  42ce2c:	e1a09000 	mov	r9, r0
  42ce30:	e287a001 	add	sl, r7, #1
  42ce34:	e7d4000a 	ldrb	r0, [r4, sl]
  42ce38:	fa001392 	blx	431c88 <__aeabi_i2d>
  42ce3c:	e59d2014 	ldr	r2, [sp, #20]
  42ce40:	e59d3018 	ldr	r3, [sp, #24]
  42ce44:	fa0013c2 	blx	431d54 <__aeabi_dmul>
  42ce48:	e59d201c 	ldr	r2, [sp, #28]
  42ce4c:	e1a03006 	mov	r3, r6
  42ce50:	fa0012e6 	blx	4319f0 <__adddf3>
  42ce54:	e3a02000 	mov	r2, #0
  42ce58:	e59f36ac 	ldr	r3, [pc, #1708]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42ce5c:	fa0012e3 	blx	4319f0 <__adddf3>
  42ce60:	fa001284 	blx	431878 <floor>
  42ce64:	fa001507 	blx	432288 <__aeabi_d2iz>
  42ce68:	e0853087 	add	r3, r5, r7, lsl #1
  42ce6c:	e2892902 	add	r2, r9, #32768	; 0x8000
  42ce70:	e1b02822 	lsrs	r2, r2, #16
  42ce74:	0a000004 	beq	42ce8c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x980>
  42ce78:	e3590000 	cmp	r9, #0
  42ce7c:	c59f968c 	ldrgt	r9, [pc, #1676]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42ce80:	ca000003 	bgt	42ce94 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x988>
  42ce84:	e3a09902 	mov	r9, #32768	; 0x8000
  42ce88:	ea000001 	b	42ce94 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x988>
  42ce8c:	e1a09809 	lsl	r9, r9, #16
  42ce90:	e1a09829 	lsr	r9, r9, #16
  42ce94:	e1c390b0 	strh	r9, [r3]
  42ce98:	e085a08a 	add	sl, r5, sl, lsl #1
  42ce9c:	e2803902 	add	r3, r0, #32768	; 0x8000
  42cea0:	e1b03823 	lsrs	r3, r3, #16
  42cea4:	0a000004 	beq	42cebc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x9b0>
  42cea8:	e3500000 	cmp	r0, #0
  42ceac:	c59f065c 	ldrgt	r0, [pc, #1628]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42ceb0:	ca000003 	bgt	42cec4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x9b8>
  42ceb4:	e3a00902 	mov	r0, #32768	; 0x8000
  42ceb8:	ea000001 	b	42cec4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x9b8>
  42cebc:	e1a00800 	lsl	r0, r0, #16
  42cec0:	e1a00820 	lsr	r0, r0, #16
  42cec4:	e1ca00b0 	strh	r0, [sl]
  42cec8:	e288a002 	add	sl, r8, #2
  42cecc:	e7d4000a 	ldrb	r0, [r4, sl]
  42ced0:	fa00136c 	blx	431c88 <__aeabi_i2d>
  42ced4:	e59d2014 	ldr	r2, [sp, #20]
  42ced8:	e59d3018 	ldr	r3, [sp, #24]
  42cedc:	fa00139c 	blx	431d54 <__aeabi_dmul>
  42cee0:	e59d201c 	ldr	r2, [sp, #28]
  42cee4:	e1a03006 	mov	r3, r6
  42cee8:	fa0012c0 	blx	4319f0 <__adddf3>
  42ceec:	e3a02000 	mov	r2, #0
  42cef0:	e59f3614 	ldr	r3, [pc, #1556]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42cef4:	fa0012bd 	blx	4319f0 <__adddf3>
  42cef8:	fa00125e 	blx	431878 <floor>
  42cefc:	fa0014e1 	blx	432288 <__aeabi_d2iz>
  42cf00:	e1a09000 	mov	r9, r0
  42cf04:	e2888003 	add	r8, r8, #3
  42cf08:	e7d40008 	ldrb	r0, [r4, r8]
  42cf0c:	fa00135d 	blx	431c88 <__aeabi_i2d>
  42cf10:	e59d2014 	ldr	r2, [sp, #20]
  42cf14:	e59d3018 	ldr	r3, [sp, #24]
  42cf18:	fa00138d 	blx	431d54 <__aeabi_dmul>
  42cf1c:	e59d201c 	ldr	r2, [sp, #28]
  42cf20:	e1a03006 	mov	r3, r6
  42cf24:	fa0012b1 	blx	4319f0 <__adddf3>
  42cf28:	e3a02000 	mov	r2, #0
  42cf2c:	e59f35d8 	ldr	r3, [pc, #1496]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42cf30:	fa0012ae 	blx	4319f0 <__adddf3>
  42cf34:	fa00124f 	blx	431878 <floor>
  42cf38:	fa0014d2 	blx	432288 <__aeabi_d2iz>
  42cf3c:	e085a08a 	add	sl, r5, sl, lsl #1
  42cf40:	e2893902 	add	r3, r9, #32768	; 0x8000
  42cf44:	e1b03823 	lsrs	r3, r3, #16
  42cf48:	0a000004 	beq	42cf60 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa54>
  42cf4c:	e3590000 	cmp	r9, #0
  42cf50:	c59f95b8 	ldrgt	r9, [pc, #1464]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42cf54:	ca000003 	bgt	42cf68 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa5c>
  42cf58:	e3a09902 	mov	r9, #32768	; 0x8000
  42cf5c:	ea000001 	b	42cf68 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa5c>
  42cf60:	e1a09809 	lsl	r9, r9, #16
  42cf64:	e1a09829 	lsr	r9, r9, #16
  42cf68:	e1ca90b0 	strh	r9, [sl]
  42cf6c:	e0858088 	add	r8, r5, r8, lsl #1
  42cf70:	e2803902 	add	r3, r0, #32768	; 0x8000
  42cf74:	e1b03823 	lsrs	r3, r3, #16
  42cf78:	0a000004 	beq	42cf90 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa84>
  42cf7c:	e3500000 	cmp	r0, #0
  42cf80:	c59f0588 	ldrgt	r0, [pc, #1416]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42cf84:	ca000003 	bgt	42cf98 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa8c>
  42cf88:	e3a00902 	mov	r0, #32768	; 0x8000
  42cf8c:	ea000001 	b	42cf98 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa8c>
  42cf90:	e1a00800 	lsl	r0, r0, #16
  42cf94:	e1a00820 	lsr	r0, r0, #16
  42cf98:	e1c800b0 	strh	r0, [r8]
  42cf9c:	e2877004 	add	r7, r7, #4
  42cfa0:	ea000000 	b	42cfa8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa9c>
  42cfa4:	e3a07000 	mov	r7, #0
  42cfa8:	e24b3004 	sub	r3, fp, #4
  42cfac:	e1530007 	cmp	r3, r7
  42cfb0:	aaffff8f 	bge	42cdf4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x8e8>
  42cfb4:	ea000019 	b	42d020 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xb14>
  42cfb8:	e7d40007 	ldrb	r0, [r4, r7]
  42cfbc:	fa001331 	blx	431c88 <__aeabi_i2d>
  42cfc0:	e59d2014 	ldr	r2, [sp, #20]
  42cfc4:	e59d3018 	ldr	r3, [sp, #24]
  42cfc8:	fa001361 	blx	431d54 <__aeabi_dmul>
  42cfcc:	e59d201c 	ldr	r2, [sp, #28]
  42cfd0:	e1a03006 	mov	r3, r6
  42cfd4:	fa001285 	blx	4319f0 <__adddf3>
  42cfd8:	e3a02000 	mov	r2, #0
  42cfdc:	e59f3528 	ldr	r3, [pc, #1320]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42cfe0:	fa001282 	blx	4319f0 <__adddf3>
  42cfe4:	fa001223 	blx	431878 <floor>
  42cfe8:	fa0014a6 	blx	432288 <__aeabi_d2iz>
  42cfec:	e0853087 	add	r3, r5, r7, lsl #1
  42cff0:	e2802902 	add	r2, r0, #32768	; 0x8000
  42cff4:	e1b02822 	lsrs	r2, r2, #16
  42cff8:	0a000004 	beq	42d010 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xb04>
  42cffc:	e3500000 	cmp	r0, #0
  42d000:	c59f0508 	ldrgt	r0, [pc, #1288]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d004:	ca000003 	bgt	42d018 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xb0c>
  42d008:	e3a00902 	mov	r0, #32768	; 0x8000
  42d00c:	ea000001 	b	42d018 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xb0c>
  42d010:	e1a00800 	lsl	r0, r0, #16
  42d014:	e1a00820 	lsr	r0, r0, #16
  42d018:	e1c300b0 	strh	r0, [r3]
  42d01c:	e2877001 	add	r7, r7, #1
  42d020:	e157000b 	cmp	r7, fp
  42d024:	baffffe3 	blt	42cfb8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xaac>
  42d028:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42d02c:	e0844003 	add	r4, r4, r3
  42d030:	e59d3020 	ldr	r3, [sp, #32]
  42d034:	e0855083 	add	r5, r5, r3, lsl #1
  42d038:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42d03c:	e2432001 	sub	r2, r3, #1
  42d040:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42d044:	e3530000 	cmp	r3, #0
  42d048:	1affffd5 	bne	42cfa4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xa98>
  42d04c:	ea000445 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42d050:	e59d0014 	ldr	r0, [sp, #20]
  42d054:	e59d3018 	ldr	r3, [sp, #24]
  42d058:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42d05c:	e3a02000 	mov	r2, #0
  42d060:	e59f3494 	ldr	r3, [pc, #1172]	; 42d4fc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff0>
  42d064:	fa001478 	blx	43224c <__aeabi_dcmple>
  42d068:	e3500000 	cmp	r0, #0
  42d06c:	0a00007f 	beq	42d270 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd64>
  42d070:	e59d001c 	ldr	r0, [sp, #28]
  42d074:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42d078:	e3a02000 	mov	r2, #0
  42d07c:	e59f3474 	ldr	r3, [pc, #1140]	; 42d4f8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfec>
  42d080:	fa00146c 	blx	432238 <__aeabi_dcmplt>
  42d084:	e3500000 	cmp	r0, #0
  42d088:	0a000078 	beq	42d270 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd64>
  42d08c:	e59d0014 	ldr	r0, [sp, #20]
  42d090:	e59d1018 	ldr	r1, [sp, #24]
  42d094:	e3a02000 	mov	r2, #0
  42d098:	e59f3468 	ldr	r3, [pc, #1128]	; 42d508 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xffc>
  42d09c:	fa00132c 	blx	431d54 <__aeabi_dmul>
  42d0a0:	e3a02000 	mov	r2, #0
  42d0a4:	e59f3460 	ldr	r3, [pc, #1120]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d0a8:	fa001250 	blx	4319f0 <__adddf3>
  42d0ac:	fa0011f1 	blx	431878 <floor>
  42d0b0:	fa001474 	blx	432288 <__aeabi_d2iz>
  42d0b4:	e1a070a7 	lsr	r7, r7, #1
  42d0b8:	e59d1020 	ldr	r1, [sp, #32]
  42d0bc:	ea000065 	b	42d258 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd4c>
  42d0c0:	e1a0e002 	mov	lr, r2
  42d0c4:	e1a0c082 	lsl	ip, r2, #1
  42d0c8:	e19430bc 	ldrh	r3, [r4, ip]
  42d0cc:	e0030390 	mul	r3, r0, r3
  42d0d0:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d0d4:	e1a087c3 	asr	r8, r3, #15
  42d0d8:	e2829001 	add	r9, r2, #1
  42d0dc:	e1a09089 	lsl	r9, r9, #1
  42d0e0:	e19430b9 	ldrh	r3, [r4, r9]
  42d0e4:	e0030390 	mul	r3, r0, r3
  42d0e8:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d0ec:	e1a067c3 	asr	r6, r3, #15
  42d0f0:	e085c00c 	add	ip, r5, ip
  42d0f4:	e2883902 	add	r3, r8, #32768	; 0x8000
  42d0f8:	e1b03823 	lsrs	r3, r3, #16
  42d0fc:	0a000004 	beq	42d114 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc08>
  42d100:	e3580000 	cmp	r8, #0
  42d104:	c59f3404 	ldrgt	r3, [pc, #1028]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d108:	ca000003 	bgt	42d11c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc10>
  42d10c:	e3a03902 	mov	r3, #32768	; 0x8000
  42d110:	ea000001 	b	42d11c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc10>
  42d114:	e1a03808 	lsl	r3, r8, #16
  42d118:	e1a03823 	lsr	r3, r3, #16
  42d11c:	e1cc30b0 	strh	r3, [ip]
  42d120:	e0859009 	add	r9, r5, r9
  42d124:	e2863902 	add	r3, r6, #32768	; 0x8000
  42d128:	e1b03823 	lsrs	r3, r3, #16
  42d12c:	0a000004 	beq	42d144 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc38>
  42d130:	e3560000 	cmp	r6, #0
  42d134:	c59f33d4 	ldrgt	r3, [pc, #980]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d138:	ca000003 	bgt	42d14c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc40>
  42d13c:	e3a03902 	mov	r3, #32768	; 0x8000
  42d140:	ea000001 	b	42d14c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc40>
  42d144:	e1a03806 	lsl	r3, r6, #16
  42d148:	e1a03823 	lsr	r3, r3, #16
  42d14c:	e1c930b0 	strh	r3, [r9]
  42d150:	e28ec002 	add	ip, lr, #2
  42d154:	e1a0c08c 	lsl	ip, ip, #1
  42d158:	e19430bc 	ldrh	r3, [r4, ip]
  42d15c:	e0030390 	mul	r3, r0, r3
  42d160:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d164:	e1a067c3 	asr	r6, r3, #15
  42d168:	e28ee003 	add	lr, lr, #3
  42d16c:	e1a0e08e 	lsl	lr, lr, #1
  42d170:	e19430be 	ldrh	r3, [r4, lr]
  42d174:	e0030390 	mul	r3, r0, r3
  42d178:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d17c:	e1a037c3 	asr	r3, r3, #15
  42d180:	e085c00c 	add	ip, r5, ip
  42d184:	e2868902 	add	r8, r6, #32768	; 0x8000
  42d188:	e1b08828 	lsrs	r8, r8, #16
  42d18c:	0a000004 	beq	42d1a4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xc98>
  42d190:	e3560000 	cmp	r6, #0
  42d194:	c59f6374 	ldrgt	r6, [pc, #884]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d198:	ca000003 	bgt	42d1ac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xca0>
  42d19c:	e3a06902 	mov	r6, #32768	; 0x8000
  42d1a0:	ea000001 	b	42d1ac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xca0>
  42d1a4:	e1a06806 	lsl	r6, r6, #16
  42d1a8:	e1a06826 	lsr	r6, r6, #16
  42d1ac:	e1cc60b0 	strh	r6, [ip]
  42d1b0:	e085e00e 	add	lr, r5, lr
  42d1b4:	e283c902 	add	ip, r3, #32768	; 0x8000
  42d1b8:	e1b0c82c 	lsrs	ip, ip, #16
  42d1bc:	0a000004 	beq	42d1d4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xcc8>
  42d1c0:	e3530000 	cmp	r3, #0
  42d1c4:	c59f3344 	ldrgt	r3, [pc, #836]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d1c8:	ca000003 	bgt	42d1dc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xcd0>
  42d1cc:	e3a03902 	mov	r3, #32768	; 0x8000
  42d1d0:	ea000001 	b	42d1dc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xcd0>
  42d1d4:	e1a03803 	lsl	r3, r3, #16
  42d1d8:	e1a03823 	lsr	r3, r3, #16
  42d1dc:	e1ce30b0 	strh	r3, [lr]
  42d1e0:	e2822004 	add	r2, r2, #4
  42d1e4:	ea000000 	b	42d1ec <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xce0>
  42d1e8:	e3a02000 	mov	r2, #0
  42d1ec:	e59de260 	ldr	lr, [sp, #608]	; 0x260
  42d1f0:	e24e3004 	sub	r3, lr, #4
  42d1f4:	e1530002 	cmp	r3, r2
  42d1f8:	aaffffb0 	bge	42d0c0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xbb4>
  42d1fc:	ea000011 	b	42d248 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd3c>
  42d200:	e1a0c082 	lsl	ip, r2, #1
  42d204:	e19430bc 	ldrh	r3, [r4, ip]
  42d208:	e0030390 	mul	r3, r0, r3
  42d20c:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d210:	e1a037c3 	asr	r3, r3, #15
  42d214:	e085c00c 	add	ip, r5, ip
  42d218:	e2836902 	add	r6, r3, #32768	; 0x8000
  42d21c:	e1b06826 	lsrs	r6, r6, #16
  42d220:	0a000004 	beq	42d238 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd2c>
  42d224:	e3530000 	cmp	r3, #0
  42d228:	c59f32e0 	ldrgt	r3, [pc, #736]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d22c:	ca000003 	bgt	42d240 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd34>
  42d230:	e3a03902 	mov	r3, #32768	; 0x8000
  42d234:	ea000001 	b	42d240 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd34>
  42d238:	e1a03803 	lsl	r3, r3, #16
  42d23c:	e1a03823 	lsr	r3, r3, #16
  42d240:	e1cc30b0 	strh	r3, [ip]
  42d244:	e2822001 	add	r2, r2, #1
  42d248:	e152000e 	cmp	r2, lr
  42d24c:	baffffeb 	blt	42d200 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xcf4>
  42d250:	e0844087 	add	r4, r4, r7, lsl #1
  42d254:	e0855081 	add	r5, r5, r1, lsl #1
  42d258:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42d25c:	e2432001 	sub	r2, r3, #1
  42d260:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42d264:	e3530000 	cmp	r3, #0
  42d268:	1affffde 	bne	42d1e8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xcdc>
  42d26c:	ea0003bd 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42d270:	e1a030a7 	lsr	r3, r7, #1
  42d274:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42d278:	ea000097 	b	42d4dc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfd0>
  42d27c:	e1a08007 	mov	r8, r7
  42d280:	e1a0b087 	lsl	fp, r7, #1
  42d284:	e19400bb 	ldrh	r0, [r4, fp]
  42d288:	fa00127e 	blx	431c88 <__aeabi_i2d>
  42d28c:	e59d2014 	ldr	r2, [sp, #20]
  42d290:	e59d3018 	ldr	r3, [sp, #24]
  42d294:	fa0012ae 	blx	431d54 <__aeabi_dmul>
  42d298:	e59d201c 	ldr	r2, [sp, #28]
  42d29c:	e1a03006 	mov	r3, r6
  42d2a0:	fa0011d2 	blx	4319f0 <__adddf3>
  42d2a4:	e3a02000 	mov	r2, #0
  42d2a8:	e59f325c 	ldr	r3, [pc, #604]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d2ac:	fa0011cf 	blx	4319f0 <__adddf3>
  42d2b0:	fa001170 	blx	431878 <floor>
  42d2b4:	fa0013f3 	blx	432288 <__aeabi_d2iz>
  42d2b8:	e1a0a000 	mov	sl, r0
  42d2bc:	e2879001 	add	r9, r7, #1
  42d2c0:	e1a09089 	lsl	r9, r9, #1
  42d2c4:	e19400b9 	ldrh	r0, [r4, r9]
  42d2c8:	fa00126e 	blx	431c88 <__aeabi_i2d>
  42d2cc:	e59d2014 	ldr	r2, [sp, #20]
  42d2d0:	e59d3018 	ldr	r3, [sp, #24]
  42d2d4:	fa00129e 	blx	431d54 <__aeabi_dmul>
  42d2d8:	e59d201c 	ldr	r2, [sp, #28]
  42d2dc:	e1a03006 	mov	r3, r6
  42d2e0:	fa0011c2 	blx	4319f0 <__adddf3>
  42d2e4:	e3a02000 	mov	r2, #0
  42d2e8:	e59f321c 	ldr	r3, [pc, #540]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d2ec:	fa0011bf 	blx	4319f0 <__adddf3>
  42d2f0:	fa001160 	blx	431878 <floor>
  42d2f4:	fa0013e3 	blx	432288 <__aeabi_d2iz>
  42d2f8:	e085b00b 	add	fp, r5, fp
  42d2fc:	e28a3902 	add	r3, sl, #32768	; 0x8000
  42d300:	e1b03823 	lsrs	r3, r3, #16
  42d304:	0a000004 	beq	42d31c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xe10>
  42d308:	e35a0000 	cmp	sl, #0
  42d30c:	c59fa1fc 	ldrgt	sl, [pc, #508]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d310:	ca000003 	bgt	42d324 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xe18>
  42d314:	e3a0a902 	mov	sl, #32768	; 0x8000
  42d318:	ea000001 	b	42d324 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xe18>
  42d31c:	e1a0a80a 	lsl	sl, sl, #16
  42d320:	e1a0a82a 	lsr	sl, sl, #16
  42d324:	e1cba0b0 	strh	sl, [fp]
  42d328:	e0859009 	add	r9, r5, r9
  42d32c:	e2803902 	add	r3, r0, #32768	; 0x8000
  42d330:	e1b03823 	lsrs	r3, r3, #16
  42d334:	0a000004 	beq	42d34c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xe40>
  42d338:	e3500000 	cmp	r0, #0
  42d33c:	c59f01cc 	ldrgt	r0, [pc, #460]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d340:	ca000003 	bgt	42d354 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xe48>
  42d344:	e3a00902 	mov	r0, #32768	; 0x8000
  42d348:	ea000001 	b	42d354 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xe48>
  42d34c:	e1a00800 	lsl	r0, r0, #16
  42d350:	e1a00820 	lsr	r0, r0, #16
  42d354:	e1c900b0 	strh	r0, [r9]
  42d358:	e2889002 	add	r9, r8, #2
  42d35c:	e1a09089 	lsl	r9, r9, #1
  42d360:	e19400b9 	ldrh	r0, [r4, r9]
  42d364:	fa001247 	blx	431c88 <__aeabi_i2d>
  42d368:	e59d2014 	ldr	r2, [sp, #20]
  42d36c:	e59d3018 	ldr	r3, [sp, #24]
  42d370:	fa001277 	blx	431d54 <__aeabi_dmul>
  42d374:	e59db01c 	ldr	fp, [sp, #28]
  42d378:	e1a0200b 	mov	r2, fp
  42d37c:	e1a03006 	mov	r3, r6
  42d380:	fa00119a 	blx	4319f0 <__adddf3>
  42d384:	e3a02000 	mov	r2, #0
  42d388:	e59f317c 	ldr	r3, [pc, #380]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d38c:	fa001197 	blx	4319f0 <__adddf3>
  42d390:	fa001138 	blx	431878 <floor>
  42d394:	fa0013bb 	blx	432288 <__aeabi_d2iz>
  42d398:	e1a0a000 	mov	sl, r0
  42d39c:	e2888003 	add	r8, r8, #3
  42d3a0:	e1a08088 	lsl	r8, r8, #1
  42d3a4:	e19400b8 	ldrh	r0, [r4, r8]
  42d3a8:	fa001236 	blx	431c88 <__aeabi_i2d>
  42d3ac:	e59d2014 	ldr	r2, [sp, #20]
  42d3b0:	e59d3018 	ldr	r3, [sp, #24]
  42d3b4:	fa001266 	blx	431d54 <__aeabi_dmul>
  42d3b8:	e1a0200b 	mov	r2, fp
  42d3bc:	e1a03006 	mov	r3, r6
  42d3c0:	fa00118a 	blx	4319f0 <__adddf3>
  42d3c4:	e3a02000 	mov	r2, #0
  42d3c8:	e59f313c 	ldr	r3, [pc, #316]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d3cc:	fa001187 	blx	4319f0 <__adddf3>
  42d3d0:	fa001128 	blx	431878 <floor>
  42d3d4:	fa0013ab 	blx	432288 <__aeabi_d2iz>
  42d3d8:	e0859009 	add	r9, r5, r9
  42d3dc:	e28a3902 	add	r3, sl, #32768	; 0x8000
  42d3e0:	e1b03823 	lsrs	r3, r3, #16
  42d3e4:	0a000004 	beq	42d3fc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xef0>
  42d3e8:	e35a0000 	cmp	sl, #0
  42d3ec:	c59fa11c 	ldrgt	sl, [pc, #284]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d3f0:	ca000003 	bgt	42d404 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xef8>
  42d3f4:	e3a0a902 	mov	sl, #32768	; 0x8000
  42d3f8:	ea000001 	b	42d404 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xef8>
  42d3fc:	e1a0a80a 	lsl	sl, sl, #16
  42d400:	e1a0a82a 	lsr	sl, sl, #16
  42d404:	e1c9a0b0 	strh	sl, [r9]
  42d408:	e0858008 	add	r8, r5, r8
  42d40c:	e2803902 	add	r3, r0, #32768	; 0x8000
  42d410:	e1b03823 	lsrs	r3, r3, #16
  42d414:	0a000004 	beq	42d42c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xf20>
  42d418:	e3500000 	cmp	r0, #0
  42d41c:	c59f00ec 	ldrgt	r0, [pc, #236]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d420:	ca000003 	bgt	42d434 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xf28>
  42d424:	e3a00902 	mov	r0, #32768	; 0x8000
  42d428:	ea000001 	b	42d434 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xf28>
  42d42c:	e1a00800 	lsl	r0, r0, #16
  42d430:	e1a00820 	lsr	r0, r0, #16
  42d434:	e1c800b0 	strh	r0, [r8]
  42d438:	e2877004 	add	r7, r7, #4
  42d43c:	ea000000 	b	42d444 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xf38>
  42d440:	e3a07000 	mov	r7, #0
  42d444:	e59d9260 	ldr	r9, [sp, #608]	; 0x260
  42d448:	e2493004 	sub	r3, r9, #4
  42d44c:	e1530007 	cmp	r3, r7
  42d450:	aaffff89 	bge	42d27c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xd70>
  42d454:	ea00001a 	b	42d4c4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfb8>
  42d458:	e1a08087 	lsl	r8, r7, #1
  42d45c:	e19400b8 	ldrh	r0, [r4, r8]
  42d460:	fa001208 	blx	431c88 <__aeabi_i2d>
  42d464:	e59d2014 	ldr	r2, [sp, #20]
  42d468:	e59d3018 	ldr	r3, [sp, #24]
  42d46c:	fa001238 	blx	431d54 <__aeabi_dmul>
  42d470:	e59d201c 	ldr	r2, [sp, #28]
  42d474:	e1a03006 	mov	r3, r6
  42d478:	fa00115c 	blx	4319f0 <__adddf3>
  42d47c:	e3a02000 	mov	r2, #0
  42d480:	e59f3084 	ldr	r3, [pc, #132]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d484:	fa001159 	blx	4319f0 <__adddf3>
  42d488:	fa0010fa 	blx	431878 <floor>
  42d48c:	fa00137d 	blx	432288 <__aeabi_d2iz>
  42d490:	e0858008 	add	r8, r5, r8
  42d494:	e2803902 	add	r3, r0, #32768	; 0x8000
  42d498:	e1b03823 	lsrs	r3, r3, #16
  42d49c:	0a000004 	beq	42d4b4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfa8>
  42d4a0:	e3500000 	cmp	r0, #0
  42d4a4:	c59f0064 	ldrgt	r0, [pc, #100]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d4a8:	ca000003 	bgt	42d4bc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfb0>
  42d4ac:	e3a00902 	mov	r0, #32768	; 0x8000
  42d4b0:	ea000001 	b	42d4bc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xfb0>
  42d4b4:	e1a00800 	lsl	r0, r0, #16
  42d4b8:	e1a00820 	lsr	r0, r0, #16
  42d4bc:	e1c800b0 	strh	r0, [r8]
  42d4c0:	e2877001 	add	r7, r7, #1
  42d4c4:	e1570009 	cmp	r7, r9
  42d4c8:	baffffe2 	blt	42d458 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xf4c>
  42d4cc:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42d4d0:	e0844083 	add	r4, r4, r3, lsl #1
  42d4d4:	e59d3020 	ldr	r3, [sp, #32]
  42d4d8:	e0855083 	add	r5, r5, r3, lsl #1
  42d4dc:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42d4e0:	e2432001 	sub	r2, r3, #1
  42d4e4:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42d4e8:	e3530000 	cmp	r3, #0
  42d4ec:	1affffd3 	bne	42d440 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xf34>
  42d4f0:	ea00031c 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42d4f4:	40600000 	.word	0x40600000
  42d4f8:	3cb00000 	.word	0x3cb00000
  42d4fc:	3ff00000 	.word	0x3ff00000
  42d500:	ffc00000 	.word	0xffc00000
  42d504:	40dfffff 	.word	0x40dfffff
  42d508:	40e00000 	.word	0x40e00000
  42d50c:	3fe00000 	.word	0x3fe00000
  42d510:	00007fff 	.word	0x00007fff
  42d514:	00011f74 	.word	0x00011f74
  42d518:	00000533 	.word	0x00000533
  42d51c:	00011c20 	.word	0x00011c20
  42d520:	0001193c 	.word	0x0001193c
  42d524:	e59d0014 	ldr	r0, [sp, #20]
  42d528:	e59d3018 	ldr	r3, [sp, #24]
  42d52c:	e3c31102 	bic	r1, r3, #-2147483648	; 0x80000000
  42d530:	e3a02000 	mov	r2, #0
  42d534:	e51f3040 	ldr	r3, [pc, #-64]	; 42d4fc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff0>
  42d538:	fa001343 	blx	43224c <__aeabi_dcmple>
  42d53c:	e3500000 	cmp	r0, #0
  42d540:	0a00008a 	beq	42d770 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1264>
  42d544:	e59d001c 	ldr	r0, [sp, #28]
  42d548:	e3c61102 	bic	r1, r6, #-2147483648	; 0x80000000
  42d54c:	e51f2054 	ldr	r2, [pc, #-84]	; 42d500 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff4>
  42d550:	e51f3054 	ldr	r3, [pc, #-84]	; 42d504 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xff8>
  42d554:	fa00133c 	blx	43224c <__aeabi_dcmple>
  42d558:	e3500000 	cmp	r0, #0
  42d55c:	0a000083 	beq	42d770 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1264>
  42d560:	e59d0014 	ldr	r0, [sp, #20]
  42d564:	e59d1018 	ldr	r1, [sp, #24]
  42d568:	e3a02000 	mov	r2, #0
  42d56c:	e51f306c 	ldr	r3, [pc, #-108]	; 42d508 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xffc>
  42d570:	fa0011f7 	blx	431d54 <__aeabi_dmul>
  42d574:	e3a02000 	mov	r2, #0
  42d578:	e51f3074 	ldr	r3, [pc, #-116]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d57c:	fa00111b 	blx	4319f0 <__adddf3>
  42d580:	fa0010bc 	blx	431878 <floor>
  42d584:	fa00133f 	blx	432288 <__aeabi_d2iz>
  42d588:	e1a08000 	mov	r8, r0
  42d58c:	e59d001c 	ldr	r0, [sp, #28]
  42d590:	e1a01006 	mov	r1, r6
  42d594:	e3a02000 	mov	r2, #0
  42d598:	e51f3098 	ldr	r3, [pc, #-152]	; 42d508 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0xffc>
  42d59c:	fa0011ec 	blx	431d54 <__aeabi_dmul>
  42d5a0:	e3a02000 	mov	r2, #0
  42d5a4:	e51f30a0 	ldr	r3, [pc, #-160]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d5a8:	fa001110 	blx	4319f0 <__adddf3>
  42d5ac:	fa0010b1 	blx	431878 <floor>
  42d5b0:	fa001334 	blx	432288 <__aeabi_d2iz>
  42d5b4:	e1a070a7 	lsr	r7, r7, #1
  42d5b8:	e59d1020 	ldr	r1, [sp, #32]
  42d5bc:	ea000065 	b	42d758 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x124c>
  42d5c0:	e1a0e002 	mov	lr, r2
  42d5c4:	e1a09082 	lsl	r9, r2, #1
  42d5c8:	e194c0f9 	ldrsh	ip, [r4, r9]
  42d5cc:	e02c0c98 	mla	ip, r8, ip, r0
  42d5d0:	e28cc901 	add	ip, ip, #16384	; 0x4000
  42d5d4:	e1a0c7cc 	asr	ip, ip, #15
  42d5d8:	e2826001 	add	r6, r2, #1
  42d5dc:	e1a06086 	lsl	r6, r6, #1
  42d5e0:	e19430f6 	ldrsh	r3, [r4, r6]
  42d5e4:	e0230398 	mla	r3, r8, r3, r0
  42d5e8:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d5ec:	e1a037c3 	asr	r3, r3, #15
  42d5f0:	e0859009 	add	r9, r5, r9
  42d5f4:	e28ca902 	add	sl, ip, #32768	; 0x8000
  42d5f8:	e1b0a82a 	lsrs	sl, sl, #16
  42d5fc:	0a000004 	beq	42d614 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1108>
  42d600:	e35c0000 	cmp	ip, #0
  42d604:	c51fc0fc 	ldrgt	ip, [pc, #-252]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d608:	ca000003 	bgt	42d61c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1110>
  42d60c:	e3a0c902 	mov	ip, #32768	; 0x8000
  42d610:	ea000001 	b	42d61c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1110>
  42d614:	e1a0c80c 	lsl	ip, ip, #16
  42d618:	e1a0c82c 	lsr	ip, ip, #16
  42d61c:	e1c9c0b0 	strh	ip, [r9]
  42d620:	e0856006 	add	r6, r5, r6
  42d624:	e283c902 	add	ip, r3, #32768	; 0x8000
  42d628:	e1b0c82c 	lsrs	ip, ip, #16
  42d62c:	0a000004 	beq	42d644 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1138>
  42d630:	e3530000 	cmp	r3, #0
  42d634:	c51f312c 	ldrgt	r3, [pc, #-300]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d638:	ca000003 	bgt	42d64c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1140>
  42d63c:	e3a03902 	mov	r3, #32768	; 0x8000
  42d640:	ea000001 	b	42d64c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1140>
  42d644:	e1a03803 	lsl	r3, r3, #16
  42d648:	e1a03823 	lsr	r3, r3, #16
  42d64c:	e1c630b0 	strh	r3, [r6]
  42d650:	e28ec002 	add	ip, lr, #2
  42d654:	e1a0c08c 	lsl	ip, ip, #1
  42d658:	e19430fc 	ldrsh	r3, [r4, ip]
  42d65c:	e0230398 	mla	r3, r8, r3, r0
  42d660:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d664:	e1a067c3 	asr	r6, r3, #15
  42d668:	e28ee003 	add	lr, lr, #3
  42d66c:	e1a0e08e 	lsl	lr, lr, #1
  42d670:	e19430fe 	ldrsh	r3, [r4, lr]
  42d674:	e0230398 	mla	r3, r8, r3, r0
  42d678:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d67c:	e1a037c3 	asr	r3, r3, #15
  42d680:	e085c00c 	add	ip, r5, ip
  42d684:	e2869902 	add	r9, r6, #32768	; 0x8000
  42d688:	e1b09829 	lsrs	r9, r9, #16
  42d68c:	0a000004 	beq	42d6a4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1198>
  42d690:	e3560000 	cmp	r6, #0
  42d694:	c51f618c 	ldrgt	r6, [pc, #-396]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d698:	ca000003 	bgt	42d6ac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11a0>
  42d69c:	e3a06902 	mov	r6, #32768	; 0x8000
  42d6a0:	ea000001 	b	42d6ac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11a0>
  42d6a4:	e1a06806 	lsl	r6, r6, #16
  42d6a8:	e1a06826 	lsr	r6, r6, #16
  42d6ac:	e1cc60b0 	strh	r6, [ip]
  42d6b0:	e085e00e 	add	lr, r5, lr
  42d6b4:	e283c902 	add	ip, r3, #32768	; 0x8000
  42d6b8:	e1b0c82c 	lsrs	ip, ip, #16
  42d6bc:	0a000004 	beq	42d6d4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11c8>
  42d6c0:	e3530000 	cmp	r3, #0
  42d6c4:	c51f31bc 	ldrgt	r3, [pc, #-444]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d6c8:	ca000003 	bgt	42d6dc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11d0>
  42d6cc:	e3a03902 	mov	r3, #32768	; 0x8000
  42d6d0:	ea000001 	b	42d6dc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11d0>
  42d6d4:	e1a03803 	lsl	r3, r3, #16
  42d6d8:	e1a03823 	lsr	r3, r3, #16
  42d6dc:	e1ce30b0 	strh	r3, [lr]
  42d6e0:	e2822004 	add	r2, r2, #4
  42d6e4:	ea000000 	b	42d6ec <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11e0>
  42d6e8:	e3a02000 	mov	r2, #0
  42d6ec:	e59dc260 	ldr	ip, [sp, #608]	; 0x260
  42d6f0:	e24c3004 	sub	r3, ip, #4
  42d6f4:	e1530002 	cmp	r3, r2
  42d6f8:	aaffffb0 	bge	42d5c0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x10b4>
  42d6fc:	ea000011 	b	42d748 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x123c>
  42d700:	e1a0e082 	lsl	lr, r2, #1
  42d704:	e19430fe 	ldrsh	r3, [r4, lr]
  42d708:	e0230398 	mla	r3, r8, r3, r0
  42d70c:	e2833901 	add	r3, r3, #16384	; 0x4000
  42d710:	e1a037c3 	asr	r3, r3, #15
  42d714:	e085e00e 	add	lr, r5, lr
  42d718:	e2836902 	add	r6, r3, #32768	; 0x8000
  42d71c:	e1b06826 	lsrs	r6, r6, #16
  42d720:	0a000004 	beq	42d738 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x122c>
  42d724:	e3530000 	cmp	r3, #0
  42d728:	c51f3220 	ldrgt	r3, [pc, #-544]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d72c:	ca000003 	bgt	42d740 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1234>
  42d730:	e3a03902 	mov	r3, #32768	; 0x8000
  42d734:	ea000001 	b	42d740 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1234>
  42d738:	e1a03803 	lsl	r3, r3, #16
  42d73c:	e1a03823 	lsr	r3, r3, #16
  42d740:	e1ce30b0 	strh	r3, [lr]
  42d744:	e2822001 	add	r2, r2, #1
  42d748:	e152000c 	cmp	r2, ip
  42d74c:	baffffeb 	blt	42d700 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11f4>
  42d750:	e0844087 	add	r4, r4, r7, lsl #1
  42d754:	e0855081 	add	r5, r5, r1, lsl #1
  42d758:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42d75c:	e2432001 	sub	r2, r3, #1
  42d760:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42d764:	e3530000 	cmp	r3, #0
  42d768:	1affffde 	bne	42d6e8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x11dc>
  42d76c:	ea00027d 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42d770:	e1a030a7 	lsr	r3, r7, #1
  42d774:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42d778:	ea000097 	b	42d9dc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x14d0>
  42d77c:	e1a08007 	mov	r8, r7
  42d780:	e1a0b087 	lsl	fp, r7, #1
  42d784:	e19400fb 	ldrsh	r0, [r4, fp]
  42d788:	fa00113e 	blx	431c88 <__aeabi_i2d>
  42d78c:	e59d2014 	ldr	r2, [sp, #20]
  42d790:	e59d3018 	ldr	r3, [sp, #24]
  42d794:	fa00116e 	blx	431d54 <__aeabi_dmul>
  42d798:	e59d201c 	ldr	r2, [sp, #28]
  42d79c:	e1a03006 	mov	r3, r6
  42d7a0:	fa001092 	blx	4319f0 <__adddf3>
  42d7a4:	e3a02000 	mov	r2, #0
  42d7a8:	e51f32a4 	ldr	r3, [pc, #-676]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d7ac:	fa00108f 	blx	4319f0 <__adddf3>
  42d7b0:	fa001030 	blx	431878 <floor>
  42d7b4:	fa0012b3 	blx	432288 <__aeabi_d2iz>
  42d7b8:	e1a0a000 	mov	sl, r0
  42d7bc:	e2879001 	add	r9, r7, #1
  42d7c0:	e1a09089 	lsl	r9, r9, #1
  42d7c4:	e19400f9 	ldrsh	r0, [r4, r9]
  42d7c8:	fa00112e 	blx	431c88 <__aeabi_i2d>
  42d7cc:	e59d2014 	ldr	r2, [sp, #20]
  42d7d0:	e59d3018 	ldr	r3, [sp, #24]
  42d7d4:	fa00115e 	blx	431d54 <__aeabi_dmul>
  42d7d8:	e59d201c 	ldr	r2, [sp, #28]
  42d7dc:	e1a03006 	mov	r3, r6
  42d7e0:	fa001082 	blx	4319f0 <__adddf3>
  42d7e4:	e3a02000 	mov	r2, #0
  42d7e8:	e51f32e4 	ldr	r3, [pc, #-740]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d7ec:	fa00107f 	blx	4319f0 <__adddf3>
  42d7f0:	fa001020 	blx	431878 <floor>
  42d7f4:	fa0012a3 	blx	432288 <__aeabi_d2iz>
  42d7f8:	e085b00b 	add	fp, r5, fp
  42d7fc:	e28a3902 	add	r3, sl, #32768	; 0x8000
  42d800:	e1b03823 	lsrs	r3, r3, #16
  42d804:	0a000004 	beq	42d81c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1310>
  42d808:	e35a0000 	cmp	sl, #0
  42d80c:	c51fa304 	ldrgt	sl, [pc, #-772]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d810:	ca000003 	bgt	42d824 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1318>
  42d814:	e3a0a902 	mov	sl, #32768	; 0x8000
  42d818:	ea000001 	b	42d824 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1318>
  42d81c:	e1a0a80a 	lsl	sl, sl, #16
  42d820:	e1a0a82a 	lsr	sl, sl, #16
  42d824:	e1cba0b0 	strh	sl, [fp]
  42d828:	e0859009 	add	r9, r5, r9
  42d82c:	e2803902 	add	r3, r0, #32768	; 0x8000
  42d830:	e1b03823 	lsrs	r3, r3, #16
  42d834:	0a000004 	beq	42d84c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1340>
  42d838:	e3500000 	cmp	r0, #0
  42d83c:	c51f0334 	ldrgt	r0, [pc, #-820]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d840:	ca000003 	bgt	42d854 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1348>
  42d844:	e3a00902 	mov	r0, #32768	; 0x8000
  42d848:	ea000001 	b	42d854 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1348>
  42d84c:	e1a00800 	lsl	r0, r0, #16
  42d850:	e1a00820 	lsr	r0, r0, #16
  42d854:	e1c900b0 	strh	r0, [r9]
  42d858:	e2889002 	add	r9, r8, #2
  42d85c:	e1a09089 	lsl	r9, r9, #1
  42d860:	e19400f9 	ldrsh	r0, [r4, r9]
  42d864:	fa001107 	blx	431c88 <__aeabi_i2d>
  42d868:	e59d2014 	ldr	r2, [sp, #20]
  42d86c:	e59d3018 	ldr	r3, [sp, #24]
  42d870:	fa001137 	blx	431d54 <__aeabi_dmul>
  42d874:	e59db01c 	ldr	fp, [sp, #28]
  42d878:	e1a0200b 	mov	r2, fp
  42d87c:	e1a03006 	mov	r3, r6
  42d880:	fa00105a 	blx	4319f0 <__adddf3>
  42d884:	e3a02000 	mov	r2, #0
  42d888:	e51f3384 	ldr	r3, [pc, #-900]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d88c:	fa001057 	blx	4319f0 <__adddf3>
  42d890:	fa000ff8 	blx	431878 <floor>
  42d894:	fa00127b 	blx	432288 <__aeabi_d2iz>
  42d898:	e1a0a000 	mov	sl, r0
  42d89c:	e2888003 	add	r8, r8, #3
  42d8a0:	e1a08088 	lsl	r8, r8, #1
  42d8a4:	e19400f8 	ldrsh	r0, [r4, r8]
  42d8a8:	fa0010f6 	blx	431c88 <__aeabi_i2d>
  42d8ac:	e59d2014 	ldr	r2, [sp, #20]
  42d8b0:	e59d3018 	ldr	r3, [sp, #24]
  42d8b4:	fa001126 	blx	431d54 <__aeabi_dmul>
  42d8b8:	e1a0200b 	mov	r2, fp
  42d8bc:	e1a03006 	mov	r3, r6
  42d8c0:	fa00104a 	blx	4319f0 <__adddf3>
  42d8c4:	e3a02000 	mov	r2, #0
  42d8c8:	e51f33c4 	ldr	r3, [pc, #-964]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d8cc:	fa001047 	blx	4319f0 <__adddf3>
  42d8d0:	fa000fe8 	blx	431878 <floor>
  42d8d4:	fa00126b 	blx	432288 <__aeabi_d2iz>
  42d8d8:	e0859009 	add	r9, r5, r9
  42d8dc:	e28a3902 	add	r3, sl, #32768	; 0x8000
  42d8e0:	e1b03823 	lsrs	r3, r3, #16
  42d8e4:	0a000004 	beq	42d8fc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x13f0>
  42d8e8:	e35a0000 	cmp	sl, #0
  42d8ec:	c51fa3e4 	ldrgt	sl, [pc, #-996]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d8f0:	ca000003 	bgt	42d904 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x13f8>
  42d8f4:	e3a0a902 	mov	sl, #32768	; 0x8000
  42d8f8:	ea000001 	b	42d904 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x13f8>
  42d8fc:	e1a0a80a 	lsl	sl, sl, #16
  42d900:	e1a0a82a 	lsr	sl, sl, #16
  42d904:	e1c9a0b0 	strh	sl, [r9]
  42d908:	e0858008 	add	r8, r5, r8
  42d90c:	e2803902 	add	r3, r0, #32768	; 0x8000
  42d910:	e1b03823 	lsrs	r3, r3, #16
  42d914:	0a000004 	beq	42d92c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1420>
  42d918:	e3500000 	cmp	r0, #0
  42d91c:	c51f0414 	ldrgt	r0, [pc, #-1044]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d920:	ca000003 	bgt	42d934 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1428>
  42d924:	e3a00902 	mov	r0, #32768	; 0x8000
  42d928:	ea000001 	b	42d934 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1428>
  42d92c:	e1a00800 	lsl	r0, r0, #16
  42d930:	e1a00820 	lsr	r0, r0, #16
  42d934:	e1c800b0 	strh	r0, [r8]
  42d938:	e2877004 	add	r7, r7, #4
  42d93c:	ea000000 	b	42d944 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1438>
  42d940:	e3a07000 	mov	r7, #0
  42d944:	e59d9260 	ldr	r9, [sp, #608]	; 0x260
  42d948:	e2493004 	sub	r3, r9, #4
  42d94c:	e1530007 	cmp	r3, r7
  42d950:	aaffff89 	bge	42d77c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1270>
  42d954:	ea00001a 	b	42d9c4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x14b8>
  42d958:	e1a08087 	lsl	r8, r7, #1
  42d95c:	e19400f8 	ldrsh	r0, [r4, r8]
  42d960:	fa0010c8 	blx	431c88 <__aeabi_i2d>
  42d964:	e59d2014 	ldr	r2, [sp, #20]
  42d968:	e59d3018 	ldr	r3, [sp, #24]
  42d96c:	fa0010f8 	blx	431d54 <__aeabi_dmul>
  42d970:	e59d201c 	ldr	r2, [sp, #28]
  42d974:	e1a03006 	mov	r3, r6
  42d978:	fa00101c 	blx	4319f0 <__adddf3>
  42d97c:	e3a02000 	mov	r2, #0
  42d980:	e51f347c 	ldr	r3, [pc, #-1148]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42d984:	fa001019 	blx	4319f0 <__adddf3>
  42d988:	fa000fba 	blx	431878 <floor>
  42d98c:	fa00123d 	blx	432288 <__aeabi_d2iz>
  42d990:	e0858008 	add	r8, r5, r8
  42d994:	e2803902 	add	r3, r0, #32768	; 0x8000
  42d998:	e1b03823 	lsrs	r3, r3, #16
  42d99c:	0a000004 	beq	42d9b4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x14a8>
  42d9a0:	e3500000 	cmp	r0, #0
  42d9a4:	c51f049c 	ldrgt	r0, [pc, #-1180]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42d9a8:	ca000003 	bgt	42d9bc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x14b0>
  42d9ac:	e3a00902 	mov	r0, #32768	; 0x8000
  42d9b0:	ea000001 	b	42d9bc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x14b0>
  42d9b4:	e1a00800 	lsl	r0, r0, #16
  42d9b8:	e1a00820 	lsr	r0, r0, #16
  42d9bc:	e1c800b0 	strh	r0, [r8]
  42d9c0:	e2877001 	add	r7, r7, #1
  42d9c4:	e1570009 	cmp	r7, r9
  42d9c8:	baffffe2 	blt	42d958 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x144c>
  42d9cc:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42d9d0:	e0844083 	add	r4, r4, r3, lsl #1
  42d9d4:	e59d3020 	ldr	r3, [sp, #32]
  42d9d8:	e0855083 	add	r5, r5, r3, lsl #1
  42d9dc:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42d9e0:	e2432001 	sub	r2, r3, #1
  42d9e4:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42d9e8:	e3530000 	cmp	r3, #0
  42d9ec:	1affffd3 	bne	42d940 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1434>
  42d9f0:	ea0001dc 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42d9f4:	e1a0b121 	lsr	fp, r1, #2
  42d9f8:	e58db024 	str	fp, [sp, #36]	; 0x24
  42d9fc:	e59da01c 	ldr	sl, [sp, #28]
  42da00:	ea000091 	b	42dc4c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1740>
  42da04:	e1a08007 	mov	r8, r7
  42da08:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42da0c:	fa00109d 	blx	431c88 <__aeabi_i2d>
  42da10:	e59d2014 	ldr	r2, [sp, #20]
  42da14:	e59d3018 	ldr	r3, [sp, #24]
  42da18:	fa0010cd 	blx	431d54 <__aeabi_dmul>
  42da1c:	e1a0200a 	mov	r2, sl
  42da20:	e1a03006 	mov	r3, r6
  42da24:	fa000ff1 	blx	4319f0 <__adddf3>
  42da28:	e3a02000 	mov	r2, #0
  42da2c:	e51f3528 	ldr	r3, [pc, #-1320]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42da30:	fa000fee 	blx	4319f0 <__adddf3>
  42da34:	fa000f8f 	blx	431878 <floor>
  42da38:	fa001212 	blx	432288 <__aeabi_d2iz>
  42da3c:	e1a09000 	mov	r9, r0
  42da40:	e287b001 	add	fp, r7, #1
  42da44:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42da48:	fa00108e 	blx	431c88 <__aeabi_i2d>
  42da4c:	e59d2014 	ldr	r2, [sp, #20]
  42da50:	e59d3018 	ldr	r3, [sp, #24]
  42da54:	fa0010be 	blx	431d54 <__aeabi_dmul>
  42da58:	e1a0200a 	mov	r2, sl
  42da5c:	e1a03006 	mov	r3, r6
  42da60:	fa000fe2 	blx	4319f0 <__adddf3>
  42da64:	e3a02000 	mov	r2, #0
  42da68:	e51f3564 	ldr	r3, [pc, #-1380]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42da6c:	fa000fdf 	blx	4319f0 <__adddf3>
  42da70:	fa000f80 	blx	431878 <floor>
  42da74:	fa001203 	blx	432288 <__aeabi_d2iz>
  42da78:	e0853087 	add	r3, r5, r7, lsl #1
  42da7c:	e2892902 	add	r2, r9, #32768	; 0x8000
  42da80:	e1b02822 	lsrs	r2, r2, #16
  42da84:	0a000004 	beq	42da9c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1590>
  42da88:	e3590000 	cmp	r9, #0
  42da8c:	c51f9584 	ldrgt	r9, [pc, #-1412]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42da90:	ca000003 	bgt	42daa4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1598>
  42da94:	e3a09902 	mov	r9, #32768	; 0x8000
  42da98:	ea000001 	b	42daa4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1598>
  42da9c:	e1a09809 	lsl	r9, r9, #16
  42daa0:	e1a09829 	lsr	r9, r9, #16
  42daa4:	e1c390b0 	strh	r9, [r3]
  42daa8:	e085b08b 	add	fp, r5, fp, lsl #1
  42daac:	e2803902 	add	r3, r0, #32768	; 0x8000
  42dab0:	e1b03823 	lsrs	r3, r3, #16
  42dab4:	0a000004 	beq	42dacc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x15c0>
  42dab8:	e3500000 	cmp	r0, #0
  42dabc:	c51f05b4 	ldrgt	r0, [pc, #-1460]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42dac0:	ca000003 	bgt	42dad4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x15c8>
  42dac4:	e3a00902 	mov	r0, #32768	; 0x8000
  42dac8:	ea000001 	b	42dad4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x15c8>
  42dacc:	e1a00800 	lsl	r0, r0, #16
  42dad0:	e1a00820 	lsr	r0, r0, #16
  42dad4:	e1cb00b0 	strh	r0, [fp]
  42dad8:	e288b002 	add	fp, r8, #2
  42dadc:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42dae0:	fa001068 	blx	431c88 <__aeabi_i2d>
  42dae4:	e59d2014 	ldr	r2, [sp, #20]
  42dae8:	e59d3018 	ldr	r3, [sp, #24]
  42daec:	fa001098 	blx	431d54 <__aeabi_dmul>
  42daf0:	e1a0200a 	mov	r2, sl
  42daf4:	e1a03006 	mov	r3, r6
  42daf8:	fa000fbc 	blx	4319f0 <__adddf3>
  42dafc:	e3a02000 	mov	r2, #0
  42db00:	e51f35fc 	ldr	r3, [pc, #-1532]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42db04:	fa000fb9 	blx	4319f0 <__adddf3>
  42db08:	fa000f5a 	blx	431878 <floor>
  42db0c:	fa0011dd 	blx	432288 <__aeabi_d2iz>
  42db10:	e1a09000 	mov	r9, r0
  42db14:	e2888003 	add	r8, r8, #3
  42db18:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  42db1c:	fa001059 	blx	431c88 <__aeabi_i2d>
  42db20:	e59d2014 	ldr	r2, [sp, #20]
  42db24:	e59d3018 	ldr	r3, [sp, #24]
  42db28:	fa001089 	blx	431d54 <__aeabi_dmul>
  42db2c:	e1a0200a 	mov	r2, sl
  42db30:	e1a03006 	mov	r3, r6
  42db34:	fa000fad 	blx	4319f0 <__adddf3>
  42db38:	e3a02000 	mov	r2, #0
  42db3c:	e51f3638 	ldr	r3, [pc, #-1592]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42db40:	fa000faa 	blx	4319f0 <__adddf3>
  42db44:	fa000f4b 	blx	431878 <floor>
  42db48:	fa0011ce 	blx	432288 <__aeabi_d2iz>
  42db4c:	e085b08b 	add	fp, r5, fp, lsl #1
  42db50:	e2893902 	add	r3, r9, #32768	; 0x8000
  42db54:	e1b03823 	lsrs	r3, r3, #16
  42db58:	0a000004 	beq	42db70 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1664>
  42db5c:	e3590000 	cmp	r9, #0
  42db60:	c51f9658 	ldrgt	r9, [pc, #-1624]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42db64:	ca000003 	bgt	42db78 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x166c>
  42db68:	e3a09902 	mov	r9, #32768	; 0x8000
  42db6c:	ea000001 	b	42db78 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x166c>
  42db70:	e1a09809 	lsl	r9, r9, #16
  42db74:	e1a09829 	lsr	r9, r9, #16
  42db78:	e1cb90b0 	strh	r9, [fp]
  42db7c:	e0858088 	add	r8, r5, r8, lsl #1
  42db80:	e2803902 	add	r3, r0, #32768	; 0x8000
  42db84:	e1b03823 	lsrs	r3, r3, #16
  42db88:	0a000004 	beq	42dba0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1694>
  42db8c:	e3500000 	cmp	r0, #0
  42db90:	c51f0688 	ldrgt	r0, [pc, #-1672]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42db94:	ca000003 	bgt	42dba8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x169c>
  42db98:	e3a00902 	mov	r0, #32768	; 0x8000
  42db9c:	ea000001 	b	42dba8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x169c>
  42dba0:	e1a00800 	lsl	r0, r0, #16
  42dba4:	e1a00820 	lsr	r0, r0, #16
  42dba8:	e1c800b0 	strh	r0, [r8]
  42dbac:	e2877004 	add	r7, r7, #4
  42dbb0:	ea000000 	b	42dbb8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x16ac>
  42dbb4:	e3a07000 	mov	r7, #0
  42dbb8:	e59d8260 	ldr	r8, [sp, #608]	; 0x260
  42dbbc:	e2483004 	sub	r3, r8, #4
  42dbc0:	e1530007 	cmp	r3, r7
  42dbc4:	aaffff8e 	bge	42da04 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x14f8>
  42dbc8:	ea000019 	b	42dc34 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1728>
  42dbcc:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42dbd0:	fa00102c 	blx	431c88 <__aeabi_i2d>
  42dbd4:	e59d2014 	ldr	r2, [sp, #20]
  42dbd8:	e59d3018 	ldr	r3, [sp, #24]
  42dbdc:	fa00105c 	blx	431d54 <__aeabi_dmul>
  42dbe0:	e1a0200a 	mov	r2, sl
  42dbe4:	e1a03006 	mov	r3, r6
  42dbe8:	fa000f80 	blx	4319f0 <__adddf3>
  42dbec:	e3a02000 	mov	r2, #0
  42dbf0:	e51f36ec 	ldr	r3, [pc, #-1772]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42dbf4:	fa000f7d 	blx	4319f0 <__adddf3>
  42dbf8:	fa000f1e 	blx	431878 <floor>
  42dbfc:	fa0011a1 	blx	432288 <__aeabi_d2iz>
  42dc00:	e0853087 	add	r3, r5, r7, lsl #1
  42dc04:	e2802902 	add	r2, r0, #32768	; 0x8000
  42dc08:	e1b02822 	lsrs	r2, r2, #16
  42dc0c:	0a000004 	beq	42dc24 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1718>
  42dc10:	e3500000 	cmp	r0, #0
  42dc14:	c51f070c 	ldrgt	r0, [pc, #-1804]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42dc18:	ca000003 	bgt	42dc2c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1720>
  42dc1c:	e3a00902 	mov	r0, #32768	; 0x8000
  42dc20:	ea000001 	b	42dc2c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1720>
  42dc24:	e1a00800 	lsl	r0, r0, #16
  42dc28:	e1a00820 	lsr	r0, r0, #16
  42dc2c:	e1c300b0 	strh	r0, [r3]
  42dc30:	e2877001 	add	r7, r7, #1
  42dc34:	e1570008 	cmp	r7, r8
  42dc38:	baffffe3 	blt	42dbcc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x16c0>
  42dc3c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42dc40:	e0844103 	add	r4, r4, r3, lsl #2
  42dc44:	e59d3020 	ldr	r3, [sp, #32]
  42dc48:	e0855083 	add	r5, r5, r3, lsl #1
  42dc4c:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42dc50:	e2432001 	sub	r2, r3, #1
  42dc54:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42dc58:	e3530000 	cmp	r3, #0
  42dc5c:	1affffd4 	bne	42dbb4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x16a8>
  42dc60:	ea000140 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42dc64:	e1a0b121 	lsr	fp, r1, #2
  42dc68:	e58db024 	str	fp, [sp, #36]	; 0x24
  42dc6c:	e59da01c 	ldr	sl, [sp, #28]
  42dc70:	ea000091 	b	42debc <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x19b0>
  42dc74:	e1a08007 	mov	r8, r7
  42dc78:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42dc7c:	fa00100a 	blx	431cac <__aeabi_f2d>
  42dc80:	e59d2014 	ldr	r2, [sp, #20]
  42dc84:	e59d3018 	ldr	r3, [sp, #24]
  42dc88:	fa001031 	blx	431d54 <__aeabi_dmul>
  42dc8c:	e1a0200a 	mov	r2, sl
  42dc90:	e1a03006 	mov	r3, r6
  42dc94:	fa000f55 	blx	4319f0 <__adddf3>
  42dc98:	e3a02000 	mov	r2, #0
  42dc9c:	e51f3798 	ldr	r3, [pc, #-1944]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42dca0:	fa000f52 	blx	4319f0 <__adddf3>
  42dca4:	fa000ef3 	blx	431878 <floor>
  42dca8:	fa001176 	blx	432288 <__aeabi_d2iz>
  42dcac:	e1a09000 	mov	r9, r0
  42dcb0:	e287b001 	add	fp, r7, #1
  42dcb4:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42dcb8:	fa000ffb 	blx	431cac <__aeabi_f2d>
  42dcbc:	e59d2014 	ldr	r2, [sp, #20]
  42dcc0:	e59d3018 	ldr	r3, [sp, #24]
  42dcc4:	fa001022 	blx	431d54 <__aeabi_dmul>
  42dcc8:	e1a0200a 	mov	r2, sl
  42dccc:	e1a03006 	mov	r3, r6
  42dcd0:	fa000f46 	blx	4319f0 <__adddf3>
  42dcd4:	e3a02000 	mov	r2, #0
  42dcd8:	e51f37d4 	ldr	r3, [pc, #-2004]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42dcdc:	fa000f43 	blx	4319f0 <__adddf3>
  42dce0:	fa000ee4 	blx	431878 <floor>
  42dce4:	fa001167 	blx	432288 <__aeabi_d2iz>
  42dce8:	e0853087 	add	r3, r5, r7, lsl #1
  42dcec:	e2892902 	add	r2, r9, #32768	; 0x8000
  42dcf0:	e1b02822 	lsrs	r2, r2, #16
  42dcf4:	0a000004 	beq	42dd0c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1800>
  42dcf8:	e3590000 	cmp	r9, #0
  42dcfc:	c51f97f4 	ldrgt	r9, [pc, #-2036]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42dd00:	ca000003 	bgt	42dd14 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1808>
  42dd04:	e3a09902 	mov	r9, #32768	; 0x8000
  42dd08:	ea000001 	b	42dd14 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1808>
  42dd0c:	e1a09809 	lsl	r9, r9, #16
  42dd10:	e1a09829 	lsr	r9, r9, #16
  42dd14:	e1c390b0 	strh	r9, [r3]
  42dd18:	e085b08b 	add	fp, r5, fp, lsl #1
  42dd1c:	e2803902 	add	r3, r0, #32768	; 0x8000
  42dd20:	e1b03823 	lsrs	r3, r3, #16
  42dd24:	0a000004 	beq	42dd3c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1830>
  42dd28:	e3500000 	cmp	r0, #0
  42dd2c:	c51f0824 	ldrgt	r0, [pc, #-2084]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42dd30:	ca000003 	bgt	42dd44 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1838>
  42dd34:	e3a00902 	mov	r0, #32768	; 0x8000
  42dd38:	ea000001 	b	42dd44 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1838>
  42dd3c:	e1a00800 	lsl	r0, r0, #16
  42dd40:	e1a00820 	lsr	r0, r0, #16
  42dd44:	e1cb00b0 	strh	r0, [fp]
  42dd48:	e288b002 	add	fp, r8, #2
  42dd4c:	e794010b 	ldr	r0, [r4, fp, lsl #2]
  42dd50:	fa000fd5 	blx	431cac <__aeabi_f2d>
  42dd54:	e59d2014 	ldr	r2, [sp, #20]
  42dd58:	e59d3018 	ldr	r3, [sp, #24]
  42dd5c:	fa000ffc 	blx	431d54 <__aeabi_dmul>
  42dd60:	e1a0200a 	mov	r2, sl
  42dd64:	e1a03006 	mov	r3, r6
  42dd68:	fa000f20 	blx	4319f0 <__adddf3>
  42dd6c:	e3a02000 	mov	r2, #0
  42dd70:	e51f386c 	ldr	r3, [pc, #-2156]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42dd74:	fa000f1d 	blx	4319f0 <__adddf3>
  42dd78:	fa000ebe 	blx	431878 <floor>
  42dd7c:	fa001141 	blx	432288 <__aeabi_d2iz>
  42dd80:	e1a09000 	mov	r9, r0
  42dd84:	e2888003 	add	r8, r8, #3
  42dd88:	e7940108 	ldr	r0, [r4, r8, lsl #2]
  42dd8c:	fa000fc6 	blx	431cac <__aeabi_f2d>
  42dd90:	e59d2014 	ldr	r2, [sp, #20]
  42dd94:	e59d3018 	ldr	r3, [sp, #24]
  42dd98:	fa000fed 	blx	431d54 <__aeabi_dmul>
  42dd9c:	e1a0200a 	mov	r2, sl
  42dda0:	e1a03006 	mov	r3, r6
  42dda4:	fa000f11 	blx	4319f0 <__adddf3>
  42dda8:	e3a02000 	mov	r2, #0
  42ddac:	e51f38a8 	ldr	r3, [pc, #-2216]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42ddb0:	fa000f0e 	blx	4319f0 <__adddf3>
  42ddb4:	fa000eaf 	blx	431878 <floor>
  42ddb8:	fa001132 	blx	432288 <__aeabi_d2iz>
  42ddbc:	e085b08b 	add	fp, r5, fp, lsl #1
  42ddc0:	e2893902 	add	r3, r9, #32768	; 0x8000
  42ddc4:	e1b03823 	lsrs	r3, r3, #16
  42ddc8:	0a000004 	beq	42dde0 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x18d4>
  42ddcc:	e3590000 	cmp	r9, #0
  42ddd0:	c51f98c8 	ldrgt	r9, [pc, #-2248]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42ddd4:	ca000003 	bgt	42dde8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x18dc>
  42ddd8:	e3a09902 	mov	r9, #32768	; 0x8000
  42dddc:	ea000001 	b	42dde8 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x18dc>
  42dde0:	e1a09809 	lsl	r9, r9, #16
  42dde4:	e1a09829 	lsr	r9, r9, #16
  42dde8:	e1cb90b0 	strh	r9, [fp]
  42ddec:	e0858088 	add	r8, r5, r8, lsl #1
  42ddf0:	e2803902 	add	r3, r0, #32768	; 0x8000
  42ddf4:	e1b03823 	lsrs	r3, r3, #16
  42ddf8:	0a000004 	beq	42de10 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1904>
  42ddfc:	e3500000 	cmp	r0, #0
  42de00:	c51f08f8 	ldrgt	r0, [pc, #-2296]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42de04:	ca000003 	bgt	42de18 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x190c>
  42de08:	e3a00902 	mov	r0, #32768	; 0x8000
  42de0c:	ea000001 	b	42de18 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x190c>
  42de10:	e1a00800 	lsl	r0, r0, #16
  42de14:	e1a00820 	lsr	r0, r0, #16
  42de18:	e1c800b0 	strh	r0, [r8]
  42de1c:	e2877004 	add	r7, r7, #4
  42de20:	ea000000 	b	42de28 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x191c>
  42de24:	e3a07000 	mov	r7, #0
  42de28:	e59d8260 	ldr	r8, [sp, #608]	; 0x260
  42de2c:	e2483004 	sub	r3, r8, #4
  42de30:	e1530007 	cmp	r3, r7
  42de34:	aaffff8e 	bge	42dc74 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1768>
  42de38:	ea000019 	b	42dea4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1998>
  42de3c:	e7940107 	ldr	r0, [r4, r7, lsl #2]
  42de40:	fa000f99 	blx	431cac <__aeabi_f2d>
  42de44:	e59d2014 	ldr	r2, [sp, #20]
  42de48:	e59d3018 	ldr	r3, [sp, #24]
  42de4c:	fa000fc0 	blx	431d54 <__aeabi_dmul>
  42de50:	e1a0200a 	mov	r2, sl
  42de54:	e1a03006 	mov	r3, r6
  42de58:	fa000ee4 	blx	4319f0 <__adddf3>
  42de5c:	e3a02000 	mov	r2, #0
  42de60:	e51f395c 	ldr	r3, [pc, #-2396]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42de64:	fa000ee1 	blx	4319f0 <__adddf3>
  42de68:	fa000e82 	blx	431878 <floor>
  42de6c:	fa001105 	blx	432288 <__aeabi_d2iz>
  42de70:	e0853087 	add	r3, r5, r7, lsl #1
  42de74:	e2802902 	add	r2, r0, #32768	; 0x8000
  42de78:	e1b02822 	lsrs	r2, r2, #16
  42de7c:	0a000004 	beq	42de94 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1988>
  42de80:	e3500000 	cmp	r0, #0
  42de84:	c51f097c 	ldrgt	r0, [pc, #-2428]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42de88:	ca000003 	bgt	42de9c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1990>
  42de8c:	e3a00902 	mov	r0, #32768	; 0x8000
  42de90:	ea000001 	b	42de9c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1990>
  42de94:	e1a00800 	lsl	r0, r0, #16
  42de98:	e1a00820 	lsr	r0, r0, #16
  42de9c:	e1c300b0 	strh	r0, [r3]
  42dea0:	e2877001 	add	r7, r7, #1
  42dea4:	e1570008 	cmp	r7, r8
  42dea8:	baffffe3 	blt	42de3c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1930>
  42deac:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42deb0:	e0844103 	add	r4, r4, r3, lsl #2
  42deb4:	e59d3020 	ldr	r3, [sp, #32]
  42deb8:	e0855083 	add	r5, r5, r3, lsl #1
  42debc:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42dec0:	e2432001 	sub	r2, r3, #1
  42dec4:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42dec8:	e3530000 	cmp	r3, #0
  42decc:	1affffd4 	bne	42de24 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1918>
  42ded0:	ea0000a4 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42ded4:	e1a0b1a1 	lsr	fp, r1, #3
  42ded8:	e58db024 	str	fp, [sp, #36]	; 0x24
  42dedc:	e59da01c 	ldr	sl, [sp, #28]
  42dee0:	ea000091 	b	42e12c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c20>
  42dee4:	e1a08007 	mov	r8, r7
  42dee8:	e0843187 	add	r3, r4, r7, lsl #3
  42deec:	e59d0014 	ldr	r0, [sp, #20]
  42def0:	e59d1018 	ldr	r1, [sp, #24]
  42def4:	e893000c 	ldm	r3, {r2, r3}
  42def8:	fa000f95 	blx	431d54 <__aeabi_dmul>
  42defc:	e1a0200a 	mov	r2, sl
  42df00:	e1a03006 	mov	r3, r6
  42df04:	fa000eb9 	blx	4319f0 <__adddf3>
  42df08:	e3a02000 	mov	r2, #0
  42df0c:	e51f3a08 	ldr	r3, [pc, #-2568]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42df10:	fa000eb6 	blx	4319f0 <__adddf3>
  42df14:	fa000e57 	blx	431878 <floor>
  42df18:	fa0010da 	blx	432288 <__aeabi_d2iz>
  42df1c:	e1a09000 	mov	r9, r0
  42df20:	e287b001 	add	fp, r7, #1
  42df24:	e084318b 	add	r3, r4, fp, lsl #3
  42df28:	e59d0014 	ldr	r0, [sp, #20]
  42df2c:	e59d1018 	ldr	r1, [sp, #24]
  42df30:	e893000c 	ldm	r3, {r2, r3}
  42df34:	fa000f86 	blx	431d54 <__aeabi_dmul>
  42df38:	e1a0200a 	mov	r2, sl
  42df3c:	e1a03006 	mov	r3, r6
  42df40:	fa000eaa 	blx	4319f0 <__adddf3>
  42df44:	e3a02000 	mov	r2, #0
  42df48:	e51f3a44 	ldr	r3, [pc, #-2628]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42df4c:	fa000ea7 	blx	4319f0 <__adddf3>
  42df50:	fa000e48 	blx	431878 <floor>
  42df54:	fa0010cb 	blx	432288 <__aeabi_d2iz>
  42df58:	e0853087 	add	r3, r5, r7, lsl #1
  42df5c:	e2892902 	add	r2, r9, #32768	; 0x8000
  42df60:	e1b02822 	lsrs	r2, r2, #16
  42df64:	0a000004 	beq	42df7c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1a70>
  42df68:	e3590000 	cmp	r9, #0
  42df6c:	c51f9a64 	ldrgt	r9, [pc, #-2660]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42df70:	ca000003 	bgt	42df84 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1a78>
  42df74:	e3a09902 	mov	r9, #32768	; 0x8000
  42df78:	ea000001 	b	42df84 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1a78>
  42df7c:	e1a09809 	lsl	r9, r9, #16
  42df80:	e1a09829 	lsr	r9, r9, #16
  42df84:	e1c390b0 	strh	r9, [r3]
  42df88:	e085b08b 	add	fp, r5, fp, lsl #1
  42df8c:	e2803902 	add	r3, r0, #32768	; 0x8000
  42df90:	e1b03823 	lsrs	r3, r3, #16
  42df94:	0a000004 	beq	42dfac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1aa0>
  42df98:	e3500000 	cmp	r0, #0
  42df9c:	c51f0a94 	ldrgt	r0, [pc, #-2708]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42dfa0:	ca000003 	bgt	42dfb4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1aa8>
  42dfa4:	e3a00902 	mov	r0, #32768	; 0x8000
  42dfa8:	ea000001 	b	42dfb4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1aa8>
  42dfac:	e1a00800 	lsl	r0, r0, #16
  42dfb0:	e1a00820 	lsr	r0, r0, #16
  42dfb4:	e1cb00b0 	strh	r0, [fp]
  42dfb8:	e288b002 	add	fp, r8, #2
  42dfbc:	e084318b 	add	r3, r4, fp, lsl #3
  42dfc0:	e59d0014 	ldr	r0, [sp, #20]
  42dfc4:	e59d1018 	ldr	r1, [sp, #24]
  42dfc8:	e893000c 	ldm	r3, {r2, r3}
  42dfcc:	fa000f60 	blx	431d54 <__aeabi_dmul>
  42dfd0:	e1a0200a 	mov	r2, sl
  42dfd4:	e1a03006 	mov	r3, r6
  42dfd8:	fa000e84 	blx	4319f0 <__adddf3>
  42dfdc:	e3a02000 	mov	r2, #0
  42dfe0:	e51f3adc 	ldr	r3, [pc, #-2780]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42dfe4:	fa000e81 	blx	4319f0 <__adddf3>
  42dfe8:	fa000e22 	blx	431878 <floor>
  42dfec:	fa0010a5 	blx	432288 <__aeabi_d2iz>
  42dff0:	e1a09000 	mov	r9, r0
  42dff4:	e2888003 	add	r8, r8, #3
  42dff8:	e0843188 	add	r3, r4, r8, lsl #3
  42dffc:	e59d0014 	ldr	r0, [sp, #20]
  42e000:	e59d1018 	ldr	r1, [sp, #24]
  42e004:	e893000c 	ldm	r3, {r2, r3}
  42e008:	fa000f51 	blx	431d54 <__aeabi_dmul>
  42e00c:	e1a0200a 	mov	r2, sl
  42e010:	e1a03006 	mov	r3, r6
  42e014:	fa000e75 	blx	4319f0 <__adddf3>
  42e018:	e3a02000 	mov	r2, #0
  42e01c:	e51f3b18 	ldr	r3, [pc, #-2840]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42e020:	fa000e72 	blx	4319f0 <__adddf3>
  42e024:	fa000e13 	blx	431878 <floor>
  42e028:	fa001096 	blx	432288 <__aeabi_d2iz>
  42e02c:	e085b08b 	add	fp, r5, fp, lsl #1
  42e030:	e2893902 	add	r3, r9, #32768	; 0x8000
  42e034:	e1b03823 	lsrs	r3, r3, #16
  42e038:	0a000004 	beq	42e050 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b44>
  42e03c:	e3590000 	cmp	r9, #0
  42e040:	c51f9b38 	ldrgt	r9, [pc, #-2872]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42e044:	ca000003 	bgt	42e058 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b4c>
  42e048:	e3a09902 	mov	r9, #32768	; 0x8000
  42e04c:	ea000001 	b	42e058 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b4c>
  42e050:	e1a09809 	lsl	r9, r9, #16
  42e054:	e1a09829 	lsr	r9, r9, #16
  42e058:	e1cb90b0 	strh	r9, [fp]
  42e05c:	e0858088 	add	r8, r5, r8, lsl #1
  42e060:	e2803902 	add	r3, r0, #32768	; 0x8000
  42e064:	e1b03823 	lsrs	r3, r3, #16
  42e068:	0a000004 	beq	42e080 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b74>
  42e06c:	e3500000 	cmp	r0, #0
  42e070:	c51f0b68 	ldrgt	r0, [pc, #-2920]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42e074:	ca000003 	bgt	42e088 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b7c>
  42e078:	e3a00902 	mov	r0, #32768	; 0x8000
  42e07c:	ea000001 	b	42e088 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b7c>
  42e080:	e1a00800 	lsl	r0, r0, #16
  42e084:	e1a00820 	lsr	r0, r0, #16
  42e088:	e1c800b0 	strh	r0, [r8]
  42e08c:	e2877004 	add	r7, r7, #4
  42e090:	ea000000 	b	42e098 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b8c>
  42e094:	e3a07000 	mov	r7, #0
  42e098:	e59d8260 	ldr	r8, [sp, #608]	; 0x260
  42e09c:	e2483004 	sub	r3, r8, #4
  42e0a0:	e1530007 	cmp	r3, r7
  42e0a4:	aaffff8e 	bge	42dee4 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x19d8>
  42e0a8:	ea000019 	b	42e114 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c08>
  42e0ac:	e0843187 	add	r3, r4, r7, lsl #3
  42e0b0:	e59d0014 	ldr	r0, [sp, #20]
  42e0b4:	e59d1018 	ldr	r1, [sp, #24]
  42e0b8:	e893000c 	ldm	r3, {r2, r3}
  42e0bc:	fa000f24 	blx	431d54 <__aeabi_dmul>
  42e0c0:	e1a0200a 	mov	r2, sl
  42e0c4:	e1a03006 	mov	r3, r6
  42e0c8:	fa000e48 	blx	4319f0 <__adddf3>
  42e0cc:	e3a02000 	mov	r2, #0
  42e0d0:	e51f3bcc 	ldr	r3, [pc, #-3020]	; 42d50c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1000>
  42e0d4:	fa000e45 	blx	4319f0 <__adddf3>
  42e0d8:	fa000de6 	blx	431878 <floor>
  42e0dc:	fa001069 	blx	432288 <__aeabi_d2iz>
  42e0e0:	e0853087 	add	r3, r5, r7, lsl #1
  42e0e4:	e2802902 	add	r2, r0, #32768	; 0x8000
  42e0e8:	e1b02822 	lsrs	r2, r2, #16
  42e0ec:	0a000004 	beq	42e104 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1bf8>
  42e0f0:	e3500000 	cmp	r0, #0
  42e0f4:	c51f0bec 	ldrgt	r0, [pc, #-3052]	; 42d510 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1004>
  42e0f8:	ca000003 	bgt	42e10c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c00>
  42e0fc:	e3a00902 	mov	r0, #32768	; 0x8000
  42e100:	ea000001 	b	42e10c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c00>
  42e104:	e1a00800 	lsl	r0, r0, #16
  42e108:	e1a00820 	lsr	r0, r0, #16
  42e10c:	e1c300b0 	strh	r0, [r3]
  42e110:	e2877001 	add	r7, r7, #1
  42e114:	e1570008 	cmp	r7, r8
  42e118:	baffffe3 	blt	42e0ac <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1ba0>
  42e11c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42e120:	e0844183 	add	r4, r4, r3, lsl #3
  42e124:	e59d3020 	ldr	r3, [sp, #32]
  42e128:	e0855083 	add	r5, r5, r3, lsl #1
  42e12c:	e59d3264 	ldr	r3, [sp, #612]	; 0x264
  42e130:	e2432001 	sub	r2, r3, #1
  42e134:	e58d2264 	str	r2, [sp, #612]	; 0x264
  42e138:	e3530000 	cmp	r3, #0
  42e13c:	1affffd4 	bne	42e094 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1b88>
  42e140:	ea000008 	b	42e168 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1c5c>
  42e144:	e51f0c38 	ldr	r0, [pc, #-3128]	; 42d514 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1008>
  42e148:	e08f0000 	add	r0, pc, r0
  42e14c:	e51f1c3c 	ldr	r1, [pc, #-3132]	; 42d518 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x100c>
  42e150:	e51f2c3c 	ldr	r2, [pc, #-3132]	; 42d51c <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1010>
  42e154:	e08f2002 	add	r2, pc, r2
  42e158:	e2822fba 	add	r2, r2, #744	; 0x2e8
  42e15c:	e51f3c44 	ldr	r3, [pc, #-3140]	; 42d520 <_ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi+0x1014>
  42e160:	e08f3003 	add	r3, pc, r3
  42e164:	fa0016fa 	blx	433d54 <__assert_func>
  42e168:	e3a00000 	mov	r0, #0
  42e16c:	e28ddf8f 	add	sp, sp, #572	; 0x23c
  42e170:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42e174:	e12fff1e 	bx	lr

0042e178 <cvSplit>:
  42e178:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42e17c:	e24dd0dc 	sub	sp, sp, #220	; 0xdc
  42e180:	e1a04000 	mov	r4, r0
  42e184:	e1a07001 	mov	r7, r1
  42e188:	e1a06002 	mov	r6, r2
  42e18c:	e1a05003 	mov	r5, r3
  42e190:	e3a03000 	mov	r3, #0
  42e194:	e58d3034 	str	r3, [sp, #52]	; 0x34
  42e198:	e58d3038 	str	r3, [sp, #56]	; 0x38
  42e19c:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  42e1a0:	e58d3040 	str	r3, [sp, #64]	; 0x40
  42e1a4:	e58d3018 	str	r3, [sp, #24]
  42e1a8:	e59f349c 	ldr	r3, [pc, #1180]	; 42e64c <cvSplit+0x4d4>
  42e1ac:	e08f3003 	add	r3, pc, r3
  42e1b0:	e5933000 	ldr	r3, [r3]
  42e1b4:	e3530000 	cmp	r3, #0
  42e1b8:	1a000008 	bne	42e1e0 <cvSplit+0x68>
  42e1bc:	e59f848c 	ldr	r8, [pc, #1164]	; 42e650 <cvSplit+0x4d8>
  42e1c0:	e08f8008 	add	r8, pc, r8
  42e1c4:	e2880004 	add	r0, r8, #4
  42e1c8:	ebffc58c 	bl	41f800 <_ZL18icvInitSplitRTableP14CvBigFuncTable>
  42e1cc:	e2880b02 	add	r0, r8, #2048	; 0x800
  42e1d0:	e2800004 	add	r0, r0, #4
  42e1d4:	ebffc5ba 	bl	41f8c4 <_ZL21icvInitSplitRCoiTableP11CvFuncTable>
  42e1d8:	e3a03001 	mov	r3, #1
  42e1dc:	e5883000 	str	r3, [r8]
  42e1e0:	e58d7024 	str	r7, [sp, #36]	; 0x24
  42e1e4:	e58d6028 	str	r6, [sp, #40]	; 0x28
  42e1e8:	e58d502c 	str	r5, [sp, #44]	; 0x2c
  42e1ec:	e59d3100 	ldr	r3, [sp, #256]	; 0x100
  42e1f0:	e58d3030 	str	r3, [sp, #48]	; 0x30
  42e1f4:	e1a00004 	mov	r0, r4
  42e1f8:	e28d10b4 	add	r1, sp, #180	; 0xb4
  42e1fc:	e28d2018 	add	r2, sp, #24
  42e200:	e3a03000 	mov	r3, #0
  42e204:	ebff8248 	bl	40eb2c <cvGetMat>
  42e208:	e1a07000 	mov	r7, r0
  42e20c:	ebff91f4 	bl	4129e4 <cvGetErrStatus>
  42e210:	e3500000 	cmp	r0, #0
  42e214:	aa00000a 	bge	42e244 <cvSplit+0xcc>
  42e218:	e3a03e1d 	mov	r3, #464	; 0x1d0
  42e21c:	e58d3000 	str	r3, [sp]
  42e220:	e3e00000 	mvn	r0, #0
  42e224:	e59f1428 	ldr	r1, [pc, #1064]	; 42e654 <cvSplit+0x4dc>
  42e228:	e08f1001 	add	r1, pc, r1
  42e22c:	e59f2424 	ldr	r2, [pc, #1060]	; 42e658 <cvSplit+0x4e0>
  42e230:	e08f2002 	add	r2, pc, r2
  42e234:	e59f3420 	ldr	r3, [pc, #1056]	; 42e65c <cvSplit+0x4e4>
  42e238:	e08f3003 	add	r3, pc, r3
  42e23c:	ebff9219 	bl	412aa8 <cvError>
  42e240:	ea0000fe 	b	42e640 <cvSplit+0x4c8>
  42e244:	e597b000 	ldr	fp, [r7]
  42e248:	e1a03b8b 	lsl	r3, fp, #23
  42e24c:	e1a03ba3 	lsr	r3, r3, #23
  42e250:	e58d3014 	str	r3, [sp, #20]
  42e254:	e20b8f7e 	and	r8, fp, #504	; 0x1f8
  42e258:	e1a081c8 	asr	r8, r8, #3
  42e25c:	e2888001 	add	r8, r8, #1
  42e260:	e3580001 	cmp	r8, #1
  42e264:	1a000079 	bne	42e450 <cvSplit+0x2d8>
  42e268:	e59f33f0 	ldr	r3, [pc, #1008]	; 42e660 <cvSplit+0x4e8>
  42e26c:	e58d3000 	str	r3, [sp]
  42e270:	e3e0000e 	mvn	r0, #14
  42e274:	e59f13e8 	ldr	r1, [pc, #1000]	; 42e664 <cvSplit+0x4ec>
  42e278:	e08f1001 	add	r1, pc, r1
  42e27c:	e59f23e4 	ldr	r2, [pc, #996]	; 42e668 <cvSplit+0x4f0>
  42e280:	e08f2002 	add	r2, pc, r2
  42e284:	e59f33e0 	ldr	r3, [pc, #992]	; 42e66c <cvSplit+0x4f4>
  42e288:	e08f3003 	add	r3, pc, r3
  42e28c:	ebff9205 	bl	412aa8 <cvError>
  42e290:	ea0000ea 	b	42e640 <cvSplit+0x4c8>
  42e294:	e28d20d8 	add	r2, sp, #216	; 0xd8
  42e298:	e0822104 	add	r2, r2, r4, lsl #2
  42e29c:	e51200b4 	ldr	r0, [r2, #-180]	; 0xb4
  42e2a0:	e3500000 	cmp	r0, #0
  42e2a4:	0a000067 	beq	42e448 <cvSplit+0x2d0>
  42e2a8:	e2869001 	add	r9, r6, #1
  42e2ac:	e0643184 	rsb	r3, r4, r4, lsl #3
  42e2b0:	e1a03103 	lsl	r3, r3, #2
  42e2b4:	e28d1044 	add	r1, sp, #68	; 0x44
  42e2b8:	e0811003 	add	r1, r1, r3
  42e2bc:	e3a02000 	mov	r2, #0
  42e2c0:	e1a03002 	mov	r3, r2
  42e2c4:	ebff8218 	bl	40eb2c <cvGetMat>
  42e2c8:	e1a05000 	mov	r5, r0
  42e2cc:	e28d30d8 	add	r3, sp, #216	; 0xd8
  42e2d0:	e0833104 	add	r3, r3, r4, lsl #2
  42e2d4:	e50300b4 	str	r0, [r3, #-180]	; 0xb4
  42e2d8:	ebff91c1 	bl	4129e4 <cvGetErrStatus>
  42e2dc:	e3500000 	cmp	r0, #0
  42e2e0:	aa00000a 	bge	42e310 <cvSplit+0x198>
  42e2e4:	e59f3384 	ldr	r3, [pc, #900]	; 42e670 <cvSplit+0x4f8>
  42e2e8:	e58d3000 	str	r3, [sp]
  42e2ec:	e3e00000 	mvn	r0, #0
  42e2f0:	e59f137c 	ldr	r1, [pc, #892]	; 42e674 <cvSplit+0x4fc>
  42e2f4:	e08f1001 	add	r1, pc, r1
  42e2f8:	e59f2378 	ldr	r2, [pc, #888]	; 42e678 <cvSplit+0x500>
  42e2fc:	e08f2002 	add	r2, pc, r2
  42e300:	e59f3374 	ldr	r3, [pc, #884]	; 42e67c <cvSplit+0x504>
  42e304:	e08f3003 	add	r3, pc, r3
  42e308:	ebff91e6 	bl	412aa8 <cvError>
  42e30c:	ea0000cb 	b	42e640 <cvSplit+0x4c8>
  42e310:	e5952000 	ldr	r2, [r5]
  42e314:	e3120f7e 	tst	r2, #504	; 0x1f8
  42e318:	0a00000a 	beq	42e348 <cvSplit+0x1d0>
  42e31c:	e59f335c 	ldr	r3, [pc, #860]	; 42e680 <cvSplit+0x508>
  42e320:	e58d3000 	str	r3, [sp]
  42e324:	e3e0000e 	mvn	r0, #14
  42e328:	e59f1354 	ldr	r1, [pc, #852]	; 42e684 <cvSplit+0x50c>
  42e32c:	e08f1001 	add	r1, pc, r1
  42e330:	e59f2350 	ldr	r2, [pc, #848]	; 42e688 <cvSplit+0x510>
  42e334:	e08f2002 	add	r2, pc, r2
  42e338:	e59f334c 	ldr	r3, [pc, #844]	; 42e68c <cvSplit+0x514>
  42e33c:	e08f3003 	add	r3, pc, r3
  42e340:	ebff91d8 	bl	412aa8 <cvError>
  42e344:	ea0000bd 	b	42e640 <cvSplit+0x4c8>
  42e348:	e5973000 	ldr	r3, [r7]
  42e34c:	e0233002 	eor	r3, r3, r2
  42e350:	e3130007 	tst	r3, #7
  42e354:	0a00000a 	beq	42e384 <cvSplit+0x20c>
  42e358:	e59f3330 	ldr	r3, [pc, #816]	; 42e690 <cvSplit+0x518>
  42e35c:	e58d3000 	str	r3, [sp]
  42e360:	e3e000cc 	mvn	r0, #204	; 0xcc
  42e364:	e59f1328 	ldr	r1, [pc, #808]	; 42e694 <cvSplit+0x51c>
  42e368:	e08f1001 	add	r1, pc, r1
  42e36c:	e59f2324 	ldr	r2, [pc, #804]	; 42e698 <cvSplit+0x520>
  42e370:	e08f2002 	add	r2, pc, r2
  42e374:	e59f3320 	ldr	r3, [pc, #800]	; 42e69c <cvSplit+0x524>
  42e378:	e08f3003 	add	r3, pc, r3
  42e37c:	ebff91c9 	bl	412aa8 <cvError>
  42e380:	ea0000ae 	b	42e640 <cvSplit+0x4c8>
  42e384:	e5952014 	ldr	r2, [r5, #20]
  42e388:	e5973014 	ldr	r3, [r7, #20]
  42e38c:	e1520003 	cmp	r2, r3
  42e390:	1a000003 	bne	42e3a4 <cvSplit+0x22c>
  42e394:	e5952018 	ldr	r2, [r5, #24]
  42e398:	e5973018 	ldr	r3, [r7, #24]
  42e39c:	e1520003 	cmp	r2, r3
  42e3a0:	0a00000a 	beq	42e3d0 <cvSplit+0x258>
  42e3a4:	e59f32f4 	ldr	r3, [pc, #756]	; 42e6a0 <cvSplit+0x528>
  42e3a8:	e58d3000 	str	r3, [sp]
  42e3ac:	e3e000d0 	mvn	r0, #208	; 0xd0
  42e3b0:	e59f12ec 	ldr	r1, [pc, #748]	; 42e6a4 <cvSplit+0x52c>
  42e3b4:	e08f1001 	add	r1, pc, r1
  42e3b8:	e59f22e8 	ldr	r2, [pc, #744]	; 42e6a8 <cvSplit+0x530>
  42e3bc:	e08f2002 	add	r2, pc, r2
  42e3c0:	e59f32e4 	ldr	r3, [pc, #740]	; 42e6ac <cvSplit+0x534>
  42e3c4:	e08f3003 	add	r3, pc, r3
  42e3c8:	ebff91b6 	bl	412aa8 <cvError>
  42e3cc:	ea00009b 	b	42e640 <cvSplit+0x4c8>
  42e3d0:	e1590004 	cmp	r9, r4
  42e3d4:	c3540000 	cmpgt	r4, #0
  42e3d8:	da000011 	ble	42e424 <cvSplit+0x2ac>
  42e3dc:	e5952004 	ldr	r2, [r5, #4]
  42e3e0:	e28d30d8 	add	r3, sp, #216	; 0xd8
  42e3e4:	e0833104 	add	r3, r3, r4, lsl #2
  42e3e8:	e51330b8 	ldr	r3, [r3, #-184]	; 0xb8
  42e3ec:	e5933004 	ldr	r3, [r3, #4]
  42e3f0:	e1520003 	cmp	r2, r3
  42e3f4:	0a00000a 	beq	42e424 <cvSplit+0x2ac>
  42e3f8:	e59f32b0 	ldr	r3, [pc, #688]	; 42e6b0 <cvSplit+0x538>
  42e3fc:	e58d3000 	str	r3, [sp]
  42e400:	e3e0000c 	mvn	r0, #12
  42e404:	e59f12a8 	ldr	r1, [pc, #680]	; 42e6b4 <cvSplit+0x53c>
  42e408:	e08f1001 	add	r1, pc, r1
  42e40c:	e59f22a4 	ldr	r2, [pc, #676]	; 42e6b8 <cvSplit+0x540>
  42e410:	e08f2002 	add	r2, pc, r2
  42e414:	e59f32a0 	ldr	r3, [pc, #672]	; 42e6bc <cvSplit+0x544>
  42e418:	e08f3003 	add	r3, pc, r3
  42e41c:	ebff91a1 	bl	412aa8 <cvError>
  42e420:	ea000086 	b	42e640 <cvSplit+0x4c8>
  42e424:	e5953004 	ldr	r3, [r5, #4]
  42e428:	e28d20d8 	add	r2, sp, #216	; 0xd8
  42e42c:	e0826106 	add	r6, r2, r6, lsl #2
  42e430:	e5952010 	ldr	r2, [r5, #16]
  42e434:	e50620a4 	str	r2, [r6, #-164]	; 0xa4
  42e438:	e5952000 	ldr	r2, [r5]
  42e43c:	e00aa002 	and	sl, sl, r2
  42e440:	e1a0c004 	mov	ip, r4
  42e444:	e1a06009 	mov	r6, r9
  42e448:	e2844001 	add	r4, r4, #1
  42e44c:	ea000004 	b	42e464 <cvSplit+0x2ec>
  42e450:	e1a0a00b 	mov	sl, fp
  42e454:	e3a03000 	mov	r3, #0
  42e458:	e3e0c000 	mvn	ip, #0
  42e45c:	e1a06003 	mov	r6, r3
  42e460:	e1a04003 	mov	r4, r3
  42e464:	e3540003 	cmp	r4, #3
  42e468:	daffff89 	ble	42e294 <cvSplit+0x11c>
  42e46c:	e597e004 	ldr	lr, [r7, #4]
  42e470:	e5975018 	ldr	r5, [r7, #24]
  42e474:	e58d50d0 	str	r5, [sp, #208]	; 0xd0
  42e478:	e5974014 	ldr	r4, [r7, #20]
  42e47c:	e58d40d4 	str	r4, [sp, #212]	; 0xd4
  42e480:	e28d20d8 	add	r2, sp, #216	; 0xd8
  42e484:	e9120003 	ldmdb	r2, {r0, r1}
  42e488:	e28d201c 	add	r2, sp, #28
  42e48c:	e8820003 	stm	r2, {r0, r1}
  42e490:	e31a0901 	tst	sl, #16384	; 0x4000
  42e494:	0a000005 	beq	42e4b0 <cvSplit+0x338>
  42e498:	e0040495 	mul	r4, r5, r4
  42e49c:	e58d401c 	str	r4, [sp, #28]
  42e4a0:	e3a03001 	mov	r3, #1
  42e4a4:	e58d3020 	str	r3, [sp, #32]
  42e4a8:	e3a03101 	mov	r3, #1073741824	; 0x40000000
  42e4ac:	e1a0e003 	mov	lr, r3
  42e4b0:	e1560008 	cmp	r6, r8
  42e4b4:	1a000027 	bne	42e558 <cvSplit+0x3e0>
  42e4b8:	e59f2200 	ldr	r2, [pc, #512]	; 42e6c0 <cvSplit+0x548>
  42e4bc:	e08f2002 	add	r2, pc, r2
  42e4c0:	e59d1014 	ldr	r1, [sp, #20]
  42e4c4:	e0822101 	add	r2, r2, r1, lsl #2
  42e4c8:	e592c004 	ldr	ip, [r2, #4]
  42e4cc:	e35c0000 	cmp	ip, #0
  42e4d0:	1a00000a 	bne	42e500 <cvSplit+0x388>
  42e4d4:	e59f31e8 	ldr	r3, [pc, #488]	; 42e6c4 <cvSplit+0x54c>
  42e4d8:	e58d3000 	str	r3, [sp]
  42e4dc:	e3e000d1 	mvn	r0, #209	; 0xd1
  42e4e0:	e59f11e0 	ldr	r1, [pc, #480]	; 42e6c8 <cvSplit+0x550>
  42e4e4:	e08f1001 	add	r1, pc, r1
  42e4e8:	e59f21dc 	ldr	r2, [pc, #476]	; 42e6cc <cvSplit+0x554>
  42e4ec:	e08f2002 	add	r2, pc, r2
  42e4f0:	e59f31d8 	ldr	r3, [pc, #472]	; 42e6d0 <cvSplit+0x558>
  42e4f4:	e08f3003 	add	r3, pc, r3
  42e4f8:	ebff916a 	bl	412aa8 <cvError>
  42e4fc:	ea00004f 	b	42e640 <cvSplit+0x4c8>
  42e500:	e5974010 	ldr	r4, [r7, #16]
  42e504:	e28d201c 	add	r2, sp, #28
  42e508:	e8920003 	ldm	r2, {r0, r1}
  42e50c:	e88d0003 	stm	sp, {r0, r1}
  42e510:	e1a00004 	mov	r0, r4
  42e514:	e1a0100e 	mov	r1, lr
  42e518:	e28d2034 	add	r2, sp, #52	; 0x34
  42e51c:	e1a0e00f 	mov	lr, pc
  42e520:	e12fff1c 	bx	ip
  42e524:	e3500000 	cmp	r0, #0
  42e528:	aa000044 	bge	42e640 <cvSplit+0x4c8>
  42e52c:	ebff9196 	bl	412b8c <cvErrorFromIppStatus>
  42e530:	e59f319c 	ldr	r3, [pc, #412]	; 42e6d4 <cvSplit+0x55c>
  42e534:	e58d3000 	str	r3, [sp]
  42e538:	e59f1198 	ldr	r1, [pc, #408]	; 42e6d8 <cvSplit+0x560>
  42e53c:	e08f1001 	add	r1, pc, r1
  42e540:	e59f2194 	ldr	r2, [pc, #404]	; 42e6dc <cvSplit+0x564>
  42e544:	e08f2002 	add	r2, pc, r2
  42e548:	e59f3190 	ldr	r3, [pc, #400]	; 42e6e0 <cvSplit+0x568>
  42e54c:	e08f3003 	add	r3, pc, r3
  42e550:	ebff9154 	bl	412aa8 <cvError>
  42e554:	ea000039 	b	42e640 <cvSplit+0x4c8>
  42e558:	e3560001 	cmp	r6, #1
  42e55c:	1a00002d 	bne	42e618 <cvSplit+0x4a0>
  42e560:	e20bb007 	and	fp, fp, #7
  42e564:	e59f2178 	ldr	r2, [pc, #376]	; 42e6e4 <cvSplit+0x56c>
  42e568:	e08f2002 	add	r2, pc, r2
  42e56c:	e082b10b 	add	fp, r2, fp, lsl #2
  42e570:	e59b4804 	ldr	r4, [fp, #2052]	; 0x804
  42e574:	e3540000 	cmp	r4, #0
  42e578:	1a00000a 	bne	42e5a8 <cvSplit+0x430>
  42e57c:	e3a03f83 	mov	r3, #524	; 0x20c
  42e580:	e58d3000 	str	r3, [sp]
  42e584:	e3e000d1 	mvn	r0, #209	; 0xd1
  42e588:	e59f1158 	ldr	r1, [pc, #344]	; 42e6e8 <cvSplit+0x570>
  42e58c:	e08f1001 	add	r1, pc, r1
  42e590:	e59f2154 	ldr	r2, [pc, #340]	; 42e6ec <cvSplit+0x574>
  42e594:	e08f2002 	add	r2, pc, r2
  42e598:	e59f3150 	ldr	r3, [pc, #336]	; 42e6f0 <cvSplit+0x578>
  42e59c:	e08f3003 	add	r3, pc, r3
  42e5a0:	ebff9140 	bl	412aa8 <cvError>
  42e5a4:	ea000025 	b	42e640 <cvSplit+0x4c8>
  42e5a8:	e5975010 	ldr	r5, [r7, #16]
  42e5ac:	e28d20d8 	add	r2, sp, #216	; 0xd8
  42e5b0:	e082210c 	add	r2, r2, ip, lsl #2
  42e5b4:	e51220b4 	ldr	r2, [r2, #-180]	; 0xb4
  42e5b8:	e5922010 	ldr	r2, [r2, #16]
  42e5bc:	e28cc001 	add	ip, ip, #1
  42e5c0:	e28d101c 	add	r1, sp, #28
  42e5c4:	e8910003 	ldm	r1, {r0, r1}
  42e5c8:	e88d0003 	stm	sp, {r0, r1}
  42e5cc:	e58d8008 	str	r8, [sp, #8]
  42e5d0:	e58dc00c 	str	ip, [sp, #12]
  42e5d4:	e1a00005 	mov	r0, r5
  42e5d8:	e1a0100e 	mov	r1, lr
  42e5dc:	e1a0e00f 	mov	lr, pc
  42e5e0:	e12fff14 	bx	r4
  42e5e4:	e3500000 	cmp	r0, #0
  42e5e8:	aa000014 	bge	42e640 <cvSplit+0x4c8>
  42e5ec:	ebff9166 	bl	412b8c <cvErrorFromIppStatus>
  42e5f0:	e3a03e21 	mov	r3, #528	; 0x210
  42e5f4:	e58d3000 	str	r3, [sp]
  42e5f8:	e59f10f4 	ldr	r1, [pc, #244]	; 42e6f4 <cvSplit+0x57c>
  42e5fc:	e08f1001 	add	r1, pc, r1
  42e600:	e59f20f0 	ldr	r2, [pc, #240]	; 42e6f8 <cvSplit+0x580>
  42e604:	e08f2002 	add	r2, pc, r2
  42e608:	e59f30ec 	ldr	r3, [pc, #236]	; 42e6fc <cvSplit+0x584>
  42e60c:	e08f3003 	add	r3, pc, r3
  42e610:	ebff9124 	bl	412aa8 <cvError>
  42e614:	ea000009 	b	42e640 <cvSplit+0x4c8>
  42e618:	e59f30e0 	ldr	r3, [pc, #224]	; 42e700 <cvSplit+0x588>
  42e61c:	e58d3000 	str	r3, [sp]
  42e620:	e3e00004 	mvn	r0, #4
  42e624:	e59f10d8 	ldr	r1, [pc, #216]	; 42e704 <cvSplit+0x58c>
  42e628:	e08f1001 	add	r1, pc, r1
  42e62c:	e59f20d4 	ldr	r2, [pc, #212]	; 42e708 <cvSplit+0x590>
  42e630:	e08f2002 	add	r2, pc, r2
  42e634:	e59f30d0 	ldr	r3, [pc, #208]	; 42e70c <cvSplit+0x594>
  42e638:	e08f3003 	add	r3, pc, r3
  42e63c:	ebff9119 	bl	412aa8 <cvError>
  42e640:	e28dd0dc 	add	sp, sp, #220	; 0xdc
  42e644:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42e648:	e12fff1e 	bx	lr
  42e64c:	1fbd3c54 	.word	0x1fbd3c54
  42e650:	1fbd3c40 	.word	0x1fbd3c40
  42e654:	1fbd2bc4 	.word	0x1fbd2bc4
  42e658:	0000eda0 	.word	0x0000eda0
  42e65c:	00011e84 	.word	0x00011e84
  42e660:	000001db 	.word	0x000001db
  42e664:	1fbd2b74 	.word	0x1fbd2b74
  42e668:	00012190 	.word	0x00012190
  42e66c:	00011e34 	.word	0x00011e34
  42e670:	000001e3 	.word	0x000001e3
  42e674:	1fbd2af8 	.word	0x1fbd2af8
  42e678:	0000ecd4 	.word	0x0000ecd4
  42e67c:	00011db8 	.word	0x00011db8
  42e680:	000001e5 	.word	0x000001e5
  42e684:	1fbd2ac0 	.word	0x1fbd2ac0
  42e688:	000120dc 	.word	0x000120dc
  42e68c:	00011d80 	.word	0x00011d80
  42e690:	000001e7 	.word	0x000001e7
  42e694:	1fbd2a84 	.word	0x1fbd2a84
  42e698:	000120a0 	.word	0x000120a0
  42e69c:	00011d44 	.word	0x00011d44
  42e6a0:	000001e9 	.word	0x000001e9
  42e6a4:	1fbd2a38 	.word	0x1fbd2a38
  42e6a8:	00012054 	.word	0x00012054
  42e6ac:	00011cf8 	.word	0x00011cf8
  42e6b0:	000001eb 	.word	0x000001eb
  42e6b4:	1fbd29e4 	.word	0x1fbd29e4
  42e6b8:	00012000 	.word	0x00012000
  42e6bc:	00011ca4 	.word	0x00011ca4
  42e6c0:	1fbd3944 	.word	0x1fbd3944
  42e6c4:	00000203 	.word	0x00000203
  42e6c8:	1fbd2908 	.word	0x1fbd2908
  42e6cc:	00011f24 	.word	0x00011f24
  42e6d0:	00011bc8 	.word	0x00011bc8
  42e6d4:	00000205 	.word	0x00000205
  42e6d8:	1fbd28b0 	.word	0x1fbd28b0
  42e6dc:	00011800 	.word	0x00011800
  42e6e0:	00011b70 	.word	0x00011b70
  42e6e4:	1fbd3898 	.word	0x1fbd3898
  42e6e8:	1fbd2860 	.word	0x1fbd2860
  42e6ec:	00011e7c 	.word	0x00011e7c
  42e6f0:	00011b20 	.word	0x00011b20
  42e6f4:	1fbd27f0 	.word	0x1fbd27f0
  42e6f8:	00011740 	.word	0x00011740
  42e6fc:	00011ab0 	.word	0x00011ab0
  42e700:	00000215 	.word	0x00000215
  42e704:	1fbd27c4 	.word	0x1fbd27c4
  42e708:	00011aac 	.word	0x00011aac
  42e70c:	00011a84 	.word	0x00011a84

0042e710 <cvMerge>:
  42e710:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42e714:	e24dd0dc 	sub	sp, sp, #220	; 0xdc
  42e718:	e1a07000 	mov	r7, r0
  42e71c:	e1a06001 	mov	r6, r1
  42e720:	e1a05002 	mov	r5, r2
  42e724:	e1a04003 	mov	r4, r3
  42e728:	e3a03000 	mov	r3, #0
  42e72c:	e58d3034 	str	r3, [sp, #52]	; 0x34
  42e730:	e58d3038 	str	r3, [sp, #56]	; 0x38
  42e734:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  42e738:	e58d3040 	str	r3, [sp, #64]	; 0x40
  42e73c:	e58d3018 	str	r3, [sp, #24]
  42e740:	e59f34cc 	ldr	r3, [pc, #1228]	; 42ec14 <cvMerge+0x504>
  42e744:	e08f3003 	add	r3, pc, r3
  42e748:	e5933824 	ldr	r3, [r3, #2084]	; 0x824
  42e74c:	e3530000 	cmp	r3, #0
  42e750:	1a00000a 	bne	42e780 <cvMerge+0x70>
  42e754:	e59f84bc 	ldr	r8, [pc, #1212]	; 42ec18 <cvMerge+0x508>
  42e758:	e08f8008 	add	r8, pc, r8
  42e75c:	e2880e82 	add	r0, r8, #2080	; 0x820
  42e760:	e2800008 	add	r0, r0, #8
  42e764:	ebffc469 	bl	41f910 <_ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable>
  42e768:	e59f04ac 	ldr	r0, [pc, #1196]	; 42ec1c <cvMerge+0x50c>
  42e76c:	e08f0000 	add	r0, pc, r0
  42e770:	e2400efd 	sub	r0, r0, #4048	; 0xfd0
  42e774:	ebffc496 	bl	41f9d4 <_ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable>
  42e778:	e3a03001 	mov	r3, #1
  42e77c:	e5883824 	str	r3, [r8, #2084]	; 0x824
  42e780:	e58d7024 	str	r7, [sp, #36]	; 0x24
  42e784:	e58d6028 	str	r6, [sp, #40]	; 0x28
  42e788:	e58d502c 	str	r5, [sp, #44]	; 0x2c
  42e78c:	e58d4030 	str	r4, [sp, #48]	; 0x30
  42e790:	e59d0100 	ldr	r0, [sp, #256]	; 0x100
  42e794:	e28d10b4 	add	r1, sp, #180	; 0xb4
  42e798:	e28d2018 	add	r2, sp, #24
  42e79c:	e3a03000 	mov	r3, #0
  42e7a0:	ebff80e1 	bl	40eb2c <cvGetMat>
  42e7a4:	e1a07000 	mov	r7, r0
  42e7a8:	ebff908d 	bl	4129e4 <cvGetErrStatus>
  42e7ac:	e3500000 	cmp	r0, #0
  42e7b0:	aa00000b 	bge	42e7e4 <cvMerge+0xd4>
  42e7b4:	e59f3464 	ldr	r3, [pc, #1124]	; 42ec20 <cvMerge+0x510>
  42e7b8:	e58d3000 	str	r3, [sp]
  42e7bc:	e3e00000 	mvn	r0, #0
  42e7c0:	e59f145c 	ldr	r1, [pc, #1116]	; 42ec24 <cvMerge+0x514>
  42e7c4:	e08f1001 	add	r1, pc, r1
  42e7c8:	e2811008 	add	r1, r1, #8
  42e7cc:	e59f2454 	ldr	r2, [pc, #1108]	; 42ec28 <cvMerge+0x518>
  42e7d0:	e08f2002 	add	r2, pc, r2
  42e7d4:	e59f3450 	ldr	r3, [pc, #1104]	; 42ec2c <cvMerge+0x51c>
  42e7d8:	e08f3003 	add	r3, pc, r3
  42e7dc:	ebff90b1 	bl	412aa8 <cvError>
  42e7e0:	ea000108 	b	42ec08 <cvMerge+0x4f8>
  42e7e4:	e597b000 	ldr	fp, [r7]
  42e7e8:	e1a03b8b 	lsl	r3, fp, #23
  42e7ec:	e1a03ba3 	lsr	r3, r3, #23
  42e7f0:	e58d3014 	str	r3, [sp, #20]
  42e7f4:	e20b8f7e 	and	r8, fp, #504	; 0x1f8
  42e7f8:	e1a081c8 	asr	r8, r8, #3
  42e7fc:	e2888001 	add	r8, r8, #1
  42e800:	e3580001 	cmp	r8, #1
  42e804:	1a00007f 	bne	42ea08 <cvMerge+0x2f8>
  42e808:	e59f3420 	ldr	r3, [pc, #1056]	; 42ec30 <cvMerge+0x520>
  42e80c:	e58d3000 	str	r3, [sp]
  42e810:	e3e0000e 	mvn	r0, #14
  42e814:	e59f1418 	ldr	r1, [pc, #1048]	; 42ec34 <cvMerge+0x524>
  42e818:	e08f1001 	add	r1, pc, r1
  42e81c:	e2811008 	add	r1, r1, #8
  42e820:	e59f2410 	ldr	r2, [pc, #1040]	; 42ec38 <cvMerge+0x528>
  42e824:	e08f2002 	add	r2, pc, r2
  42e828:	e59f340c 	ldr	r3, [pc, #1036]	; 42ec3c <cvMerge+0x52c>
  42e82c:	e08f3003 	add	r3, pc, r3
  42e830:	ebff909c 	bl	412aa8 <cvError>
  42e834:	ea0000f3 	b	42ec08 <cvMerge+0x4f8>
  42e838:	e28d30d8 	add	r3, sp, #216	; 0xd8
  42e83c:	e0833104 	add	r3, r3, r4, lsl #2
  42e840:	e51300b4 	ldr	r0, [r3, #-180]	; 0xb4
  42e844:	e3500000 	cmp	r0, #0
  42e848:	0a00006c 	beq	42ea00 <cvMerge+0x2f0>
  42e84c:	e2869001 	add	r9, r6, #1
  42e850:	e0643184 	rsb	r3, r4, r4, lsl #3
  42e854:	e1a03103 	lsl	r3, r3, #2
  42e858:	e28d1044 	add	r1, sp, #68	; 0x44
  42e85c:	e0811003 	add	r1, r1, r3
  42e860:	e3a02000 	mov	r2, #0
  42e864:	e1a03002 	mov	r3, r2
  42e868:	ebff80af 	bl	40eb2c <cvGetMat>
  42e86c:	e1a05000 	mov	r5, r0
  42e870:	e28d30d8 	add	r3, sp, #216	; 0xd8
  42e874:	e0833104 	add	r3, r3, r4, lsl #2
  42e878:	e50300b4 	str	r0, [r3, #-180]	; 0xb4
  42e87c:	ebff9058 	bl	4129e4 <cvGetErrStatus>
  42e880:	e3500000 	cmp	r0, #0
  42e884:	aa00000b 	bge	42e8b8 <cvMerge+0x1a8>
  42e888:	e59f33b0 	ldr	r3, [pc, #944]	; 42ec40 <cvMerge+0x530>
  42e88c:	e58d3000 	str	r3, [sp]
  42e890:	e3e00000 	mvn	r0, #0
  42e894:	e59f13a8 	ldr	r1, [pc, #936]	; 42ec44 <cvMerge+0x534>
  42e898:	e08f1001 	add	r1, pc, r1
  42e89c:	e2811008 	add	r1, r1, #8
  42e8a0:	e59f23a0 	ldr	r2, [pc, #928]	; 42ec48 <cvMerge+0x538>
  42e8a4:	e08f2002 	add	r2, pc, r2
  42e8a8:	e59f339c 	ldr	r3, [pc, #924]	; 42ec4c <cvMerge+0x53c>
  42e8ac:	e08f3003 	add	r3, pc, r3
  42e8b0:	ebff907c 	bl	412aa8 <cvError>
  42e8b4:	ea0000d3 	b	42ec08 <cvMerge+0x4f8>
  42e8b8:	e5952000 	ldr	r2, [r5]
  42e8bc:	e3120f7e 	tst	r2, #504	; 0x1f8
  42e8c0:	0a00000b 	beq	42e8f4 <cvMerge+0x1e4>
  42e8c4:	e59f3384 	ldr	r3, [pc, #900]	; 42ec50 <cvMerge+0x540>
  42e8c8:	e58d3000 	str	r3, [sp]
  42e8cc:	e3e0000e 	mvn	r0, #14
  42e8d0:	e59f137c 	ldr	r1, [pc, #892]	; 42ec54 <cvMerge+0x544>
  42e8d4:	e08f1001 	add	r1, pc, r1
  42e8d8:	e2811008 	add	r1, r1, #8
  42e8dc:	e59f2374 	ldr	r2, [pc, #884]	; 42ec58 <cvMerge+0x548>
  42e8e0:	e08f2002 	add	r2, pc, r2
  42e8e4:	e59f3370 	ldr	r3, [pc, #880]	; 42ec5c <cvMerge+0x54c>
  42e8e8:	e08f3003 	add	r3, pc, r3
  42e8ec:	ebff906d 	bl	412aa8 <cvError>
  42e8f0:	ea0000c4 	b	42ec08 <cvMerge+0x4f8>
  42e8f4:	e5973000 	ldr	r3, [r7]
  42e8f8:	e0233002 	eor	r3, r3, r2
  42e8fc:	e3130007 	tst	r3, #7
  42e900:	0a00000b 	beq	42e934 <cvMerge+0x224>
  42e904:	e59f3354 	ldr	r3, [pc, #852]	; 42ec60 <cvMerge+0x550>
  42e908:	e58d3000 	str	r3, [sp]
  42e90c:	e3e000cc 	mvn	r0, #204	; 0xcc
  42e910:	e59f134c 	ldr	r1, [pc, #844]	; 42ec64 <cvMerge+0x554>
  42e914:	e08f1001 	add	r1, pc, r1
  42e918:	e2811008 	add	r1, r1, #8
  42e91c:	e59f2344 	ldr	r2, [pc, #836]	; 42ec68 <cvMerge+0x558>
  42e920:	e08f2002 	add	r2, pc, r2
  42e924:	e59f3340 	ldr	r3, [pc, #832]	; 42ec6c <cvMerge+0x55c>
  42e928:	e08f3003 	add	r3, pc, r3
  42e92c:	ebff905d 	bl	412aa8 <cvError>
  42e930:	ea0000b4 	b	42ec08 <cvMerge+0x4f8>
  42e934:	e5952014 	ldr	r2, [r5, #20]
  42e938:	e5973014 	ldr	r3, [r7, #20]
  42e93c:	e1520003 	cmp	r2, r3
  42e940:	1a000003 	bne	42e954 <cvMerge+0x244>
  42e944:	e5952018 	ldr	r2, [r5, #24]
  42e948:	e5973018 	ldr	r3, [r7, #24]
  42e94c:	e1520003 	cmp	r2, r3
  42e950:	0a00000b 	beq	42e984 <cvMerge+0x274>
  42e954:	e59f3314 	ldr	r3, [pc, #788]	; 42ec70 <cvMerge+0x560>
  42e958:	e58d3000 	str	r3, [sp]
  42e95c:	e3e000d0 	mvn	r0, #208	; 0xd0
  42e960:	e59f130c 	ldr	r1, [pc, #780]	; 42ec74 <cvMerge+0x564>
  42e964:	e08f1001 	add	r1, pc, r1
  42e968:	e2811008 	add	r1, r1, #8
  42e96c:	e59f2304 	ldr	r2, [pc, #772]	; 42ec78 <cvMerge+0x568>
  42e970:	e08f2002 	add	r2, pc, r2
  42e974:	e59f3300 	ldr	r3, [pc, #768]	; 42ec7c <cvMerge+0x56c>
  42e978:	e08f3003 	add	r3, pc, r3
  42e97c:	ebff9049 	bl	412aa8 <cvError>
  42e980:	ea0000a0 	b	42ec08 <cvMerge+0x4f8>
  42e984:	e1590004 	cmp	r9, r4
  42e988:	c3540000 	cmpgt	r4, #0
  42e98c:	da000012 	ble	42e9dc <cvMerge+0x2cc>
  42e990:	e5952004 	ldr	r2, [r5, #4]
  42e994:	e28d30d8 	add	r3, sp, #216	; 0xd8
  42e998:	e0833104 	add	r3, r3, r4, lsl #2
  42e99c:	e51330b8 	ldr	r3, [r3, #-184]	; 0xb8
  42e9a0:	e5933004 	ldr	r3, [r3, #4]
  42e9a4:	e1520003 	cmp	r2, r3
  42e9a8:	0a00000b 	beq	42e9dc <cvMerge+0x2cc>
  42e9ac:	e59f32cc 	ldr	r3, [pc, #716]	; 42ec80 <cvMerge+0x570>
  42e9b0:	e58d3000 	str	r3, [sp]
  42e9b4:	e3e0000c 	mvn	r0, #12
  42e9b8:	e59f12c4 	ldr	r1, [pc, #708]	; 42ec84 <cvMerge+0x574>
  42e9bc:	e08f1001 	add	r1, pc, r1
  42e9c0:	e2811008 	add	r1, r1, #8
  42e9c4:	e59f22bc 	ldr	r2, [pc, #700]	; 42ec88 <cvMerge+0x578>
  42e9c8:	e08f2002 	add	r2, pc, r2
  42e9cc:	e59f32b8 	ldr	r3, [pc, #696]	; 42ec8c <cvMerge+0x57c>
  42e9d0:	e08f3003 	add	r3, pc, r3
  42e9d4:	ebff9033 	bl	412aa8 <cvError>
  42e9d8:	ea00008a 	b	42ec08 <cvMerge+0x4f8>
  42e9dc:	e595e004 	ldr	lr, [r5, #4]
  42e9e0:	e28d30d8 	add	r3, sp, #216	; 0xd8
  42e9e4:	e0836106 	add	r6, r3, r6, lsl #2
  42e9e8:	e5953010 	ldr	r3, [r5, #16]
  42e9ec:	e50630a4 	str	r3, [r6, #-164]	; 0xa4
  42e9f0:	e5953000 	ldr	r3, [r5]
  42e9f4:	e00aa003 	and	sl, sl, r3
  42e9f8:	e1a0c004 	mov	ip, r4
  42e9fc:	e1a06009 	mov	r6, r9
  42ea00:	e2844001 	add	r4, r4, #1
  42ea04:	ea000004 	b	42ea1c <cvMerge+0x30c>
  42ea08:	e1a0a00b 	mov	sl, fp
  42ea0c:	e3e0c000 	mvn	ip, #0
  42ea10:	e3a06000 	mov	r6, #0
  42ea14:	e1a04006 	mov	r4, r6
  42ea18:	e1a0e006 	mov	lr, r6
  42ea1c:	e3540003 	cmp	r4, #3
  42ea20:	daffff84 	ble	42e838 <cvMerge+0x128>
  42ea24:	e5974018 	ldr	r4, [r7, #24]
  42ea28:	e58d40d0 	str	r4, [sp, #208]	; 0xd0
  42ea2c:	e5972014 	ldr	r2, [r7, #20]
  42ea30:	e58d20d4 	str	r2, [sp, #212]	; 0xd4
  42ea34:	e28d30d8 	add	r3, sp, #216	; 0xd8
  42ea38:	e9130003 	ldmdb	r3, {r0, r1}
  42ea3c:	e28d301c 	add	r3, sp, #28
  42ea40:	e8830003 	stm	r3, {r0, r1}
  42ea44:	e5973004 	ldr	r3, [r7, #4]
  42ea48:	e31a0901 	tst	sl, #16384	; 0x4000
  42ea4c:	0a000005 	beq	42ea68 <cvMerge+0x358>
  42ea50:	e0020294 	mul	r2, r4, r2
  42ea54:	e58d201c 	str	r2, [sp, #28]
  42ea58:	e3a03001 	mov	r3, #1
  42ea5c:	e58d3020 	str	r3, [sp, #32]
  42ea60:	e3a03101 	mov	r3, #1073741824	; 0x40000000
  42ea64:	e1a0e003 	mov	lr, r3
  42ea68:	e1560008 	cmp	r6, r8
  42ea6c:	1a000028 	bne	42eb14 <cvMerge+0x404>
  42ea70:	e59f2218 	ldr	r2, [pc, #536]	; 42ec90 <cvMerge+0x580>
  42ea74:	e08f2002 	add	r2, pc, r2
  42ea78:	e59d1014 	ldr	r1, [sp, #20]
  42ea7c:	e0822101 	add	r2, r2, r1, lsl #2
  42ea80:	e592c828 	ldr	ip, [r2, #2088]	; 0x828
  42ea84:	e35c0000 	cmp	ip, #0
  42ea88:	1a00000b 	bne	42eabc <cvMerge+0x3ac>
  42ea8c:	e3a03f9b 	mov	r3, #620	; 0x26c
  42ea90:	e58d3000 	str	r3, [sp]
  42ea94:	e3e000d1 	mvn	r0, #209	; 0xd1
  42ea98:	e59f11f4 	ldr	r1, [pc, #500]	; 42ec94 <cvMerge+0x584>
  42ea9c:	e08f1001 	add	r1, pc, r1
  42eaa0:	e2811008 	add	r1, r1, #8
  42eaa4:	e59f21ec 	ldr	r2, [pc, #492]	; 42ec98 <cvMerge+0x588>
  42eaa8:	e08f2002 	add	r2, pc, r2
  42eaac:	e59f31e8 	ldr	r3, [pc, #488]	; 42ec9c <cvMerge+0x58c>
  42eab0:	e08f3003 	add	r3, pc, r3
  42eab4:	ebff8ffb 	bl	412aa8 <cvError>
  42eab8:	ea000052 	b	42ec08 <cvMerge+0x4f8>
  42eabc:	e5972010 	ldr	r2, [r7, #16]
  42eac0:	e28d101c 	add	r1, sp, #28
  42eac4:	e8910003 	ldm	r1, {r0, r1}
  42eac8:	e88d0003 	stm	sp, {r0, r1}
  42eacc:	e28d0034 	add	r0, sp, #52	; 0x34
  42ead0:	e1a0100e 	mov	r1, lr
  42ead4:	e1a0e00f 	mov	lr, pc
  42ead8:	e12fff1c 	bx	ip
  42eadc:	e3500000 	cmp	r0, #0
  42eae0:	aa000048 	bge	42ec08 <cvMerge+0x4f8>
  42eae4:	ebff9028 	bl	412b8c <cvErrorFromIppStatus>
  42eae8:	e59f31b0 	ldr	r3, [pc, #432]	; 42eca0 <cvMerge+0x590>
  42eaec:	e58d3000 	str	r3, [sp]
  42eaf0:	e59f11ac 	ldr	r1, [pc, #428]	; 42eca4 <cvMerge+0x594>
  42eaf4:	e08f1001 	add	r1, pc, r1
  42eaf8:	e2811008 	add	r1, r1, #8
  42eafc:	e59f21a4 	ldr	r2, [pc, #420]	; 42eca8 <cvMerge+0x598>
  42eb00:	e08f2002 	add	r2, pc, r2
  42eb04:	e59f31a0 	ldr	r3, [pc, #416]	; 42ecac <cvMerge+0x59c>
  42eb08:	e08f3003 	add	r3, pc, r3
  42eb0c:	ebff8fe5 	bl	412aa8 <cvError>
  42eb10:	ea00003c 	b	42ec08 <cvMerge+0x4f8>
  42eb14:	e3560001 	cmp	r6, #1
  42eb18:	1a00002f 	bne	42ebdc <cvMerge+0x4cc>
  42eb1c:	e20bb007 	and	fp, fp, #7
  42eb20:	e59f2188 	ldr	r2, [pc, #392]	; 42ecb0 <cvMerge+0x5a0>
  42eb24:	e08f2002 	add	r2, pc, r2
  42eb28:	e082b10b 	add	fp, r2, fp, lsl #2
  42eb2c:	e51b4fd0 	ldr	r4, [fp, #-4048]	; 0xfd0
  42eb30:	e3540000 	cmp	r4, #0
  42eb34:	1a00000b 	bne	42eb68 <cvMerge+0x458>
  42eb38:	e59f3174 	ldr	r3, [pc, #372]	; 42ecb4 <cvMerge+0x5a4>
  42eb3c:	e58d3000 	str	r3, [sp]
  42eb40:	e3e000d1 	mvn	r0, #209	; 0xd1
  42eb44:	e59f116c 	ldr	r1, [pc, #364]	; 42ecb8 <cvMerge+0x5a8>
  42eb48:	e08f1001 	add	r1, pc, r1
  42eb4c:	e2811008 	add	r1, r1, #8
  42eb50:	e59f2164 	ldr	r2, [pc, #356]	; 42ecbc <cvMerge+0x5ac>
  42eb54:	e08f2002 	add	r2, pc, r2
  42eb58:	e59f3160 	ldr	r3, [pc, #352]	; 42ecc0 <cvMerge+0x5b0>
  42eb5c:	e08f3003 	add	r3, pc, r3
  42eb60:	ebff8fd0 	bl	412aa8 <cvError>
  42eb64:	ea000027 	b	42ec08 <cvMerge+0x4f8>
  42eb68:	e28d20d8 	add	r2, sp, #216	; 0xd8
  42eb6c:	e082210c 	add	r2, r2, ip, lsl #2
  42eb70:	e51220b4 	ldr	r2, [r2, #-180]	; 0xb4
  42eb74:	e5925010 	ldr	r5, [r2, #16]
  42eb78:	e5972010 	ldr	r2, [r7, #16]
  42eb7c:	e28cc001 	add	ip, ip, #1
  42eb80:	e28d101c 	add	r1, sp, #28
  42eb84:	e8910003 	ldm	r1, {r0, r1}
  42eb88:	e88d0003 	stm	sp, {r0, r1}
  42eb8c:	e58d8008 	str	r8, [sp, #8]
  42eb90:	e58dc00c 	str	ip, [sp, #12]
  42eb94:	e1a00005 	mov	r0, r5
  42eb98:	e1a0100e 	mov	r1, lr
  42eb9c:	e1a0e00f 	mov	lr, pc
  42eba0:	e12fff14 	bx	r4
  42eba4:	e3500000 	cmp	r0, #0
  42eba8:	aa000016 	bge	42ec08 <cvMerge+0x4f8>
  42ebac:	ebff8ff6 	bl	412b8c <cvErrorFromIppStatus>
  42ebb0:	e59f310c 	ldr	r3, [pc, #268]	; 42ecc4 <cvMerge+0x5b4>
  42ebb4:	e58d3000 	str	r3, [sp]
  42ebb8:	e59f1108 	ldr	r1, [pc, #264]	; 42ecc8 <cvMerge+0x5b8>
  42ebbc:	e08f1001 	add	r1, pc, r1
  42ebc0:	e2811008 	add	r1, r1, #8
  42ebc4:	e59f2100 	ldr	r2, [pc, #256]	; 42eccc <cvMerge+0x5bc>
  42ebc8:	e08f2002 	add	r2, pc, r2
  42ebcc:	e59f30fc 	ldr	r3, [pc, #252]	; 42ecd0 <cvMerge+0x5c0>
  42ebd0:	e08f3003 	add	r3, pc, r3
  42ebd4:	ebff8fb3 	bl	412aa8 <cvError>
  42ebd8:	ea00000a 	b	42ec08 <cvMerge+0x4f8>
  42ebdc:	e59f30f0 	ldr	r3, [pc, #240]	; 42ecd4 <cvMerge+0x5c4>
  42ebe0:	e58d3000 	str	r3, [sp]
  42ebe4:	e3e00004 	mvn	r0, #4
  42ebe8:	e59f10e8 	ldr	r1, [pc, #232]	; 42ecd8 <cvMerge+0x5c8>
  42ebec:	e08f1001 	add	r1, pc, r1
  42ebf0:	e2811008 	add	r1, r1, #8
  42ebf4:	e59f20e0 	ldr	r2, [pc, #224]	; 42ecdc <cvMerge+0x5cc>
  42ebf8:	e08f2002 	add	r2, pc, r2
  42ebfc:	e59f30dc 	ldr	r3, [pc, #220]	; 42ece0 <cvMerge+0x5d0>
  42ec00:	e08f3003 	add	r3, pc, r3
  42ec04:	ebff8fa7 	bl	412aa8 <cvError>
  42ec08:	e28dd0dc 	add	sp, sp, #220	; 0xdc
  42ec0c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42ec10:	e12fff1e 	bx	lr
  42ec14:	1fbd36bc 	.word	0x1fbd36bc
  42ec18:	1fbd36a8 	.word	0x1fbd36a8
  42ec1c:	1fbd568c 	.word	0x1fbd568c
  42ec20:	0000023d 	.word	0x0000023d
  42ec24:	1fbd2628 	.word	0x1fbd2628
  42ec28:	0000e800 	.word	0x0000e800
  42ec2c:	000118e4 	.word	0x000118e4
  42ec30:	00000245 	.word	0x00000245
  42ec34:	1fbd25d4 	.word	0x1fbd25d4
  42ec38:	00011bec 	.word	0x00011bec
  42ec3c:	00011890 	.word	0x00011890
  42ec40:	0000024d 	.word	0x0000024d
  42ec44:	1fbd2554 	.word	0x1fbd2554
  42ec48:	0000e72c 	.word	0x0000e72c
  42ec4c:	00011810 	.word	0x00011810
  42ec50:	0000024f 	.word	0x0000024f
  42ec54:	1fbd2518 	.word	0x1fbd2518
  42ec58:	00011b30 	.word	0x00011b30
  42ec5c:	000117d4 	.word	0x000117d4
  42ec60:	00000251 	.word	0x00000251
  42ec64:	1fbd24d8 	.word	0x1fbd24d8
  42ec68:	00011af0 	.word	0x00011af0
  42ec6c:	00011794 	.word	0x00011794
  42ec70:	00000253 	.word	0x00000253
  42ec74:	1fbd2488 	.word	0x1fbd2488
  42ec78:	00011aa0 	.word	0x00011aa0
  42ec7c:	00011744 	.word	0x00011744
  42ec80:	00000255 	.word	0x00000255
  42ec84:	1fbd2430 	.word	0x1fbd2430
  42ec88:	00011a48 	.word	0x00011a48
  42ec8c:	000116ec 	.word	0x000116ec
  42ec90:	1fbd338c 	.word	0x1fbd338c
  42ec94:	1fbd2350 	.word	0x1fbd2350
  42ec98:	00011968 	.word	0x00011968
  42ec9c:	0001160c 	.word	0x0001160c
  42eca0:	0000026e 	.word	0x0000026e
  42eca4:	1fbd22f8 	.word	0x1fbd22f8
  42eca8:	00011244 	.word	0x00011244
  42ecac:	000115b4 	.word	0x000115b4
  42ecb0:	1fbd52d4 	.word	0x1fbd52d4
  42ecb4:	00000275 	.word	0x00000275
  42ecb8:	1fbd22a4 	.word	0x1fbd22a4
  42ecbc:	000118bc 	.word	0x000118bc
  42ecc0:	00011560 	.word	0x00011560
  42ecc4:	00000279 	.word	0x00000279
  42ecc8:	1fbd2230 	.word	0x1fbd2230
  42eccc:	0001117c 	.word	0x0001117c
  42ecd0:	000114ec 	.word	0x000114ec
  42ecd4:	0000027e 	.word	0x0000027e
  42ecd8:	1fbd2200 	.word	0x1fbd2200
  42ecdc:	0001152c 	.word	0x0001152c
  42ece0:	000114bc 	.word	0x000114bc

0042ece4 <cvMixChannels>:
  42ece4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42ece8:	e24dd0d4 	sub	sp, sp, #212	; 0xd4
  42ecec:	e58d0040 	str	r0, [sp, #64]	; 0x40
  42ecf0:	e1a04001 	mov	r4, r1
  42ecf4:	e58d2020 	str	r2, [sp, #32]
  42ecf8:	e58d301c 	str	r3, [sp, #28]
  42ecfc:	e3a03000 	mov	r3, #0
  42ed00:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  42ed04:	e58d3060 	str	r3, [sp, #96]	; 0x60
  42ed08:	e59f3728 	ldr	r3, [pc, #1832]	; 42f438 <cvMixChannels+0x754>
  42ed0c:	e08f3003 	add	r3, pc, r3
  42ed10:	e5133fb0 	ldr	r3, [r3, #-4016]	; 0xfb0
  42ed14:	e3530000 	cmp	r3, #0
  42ed18:	1a000006 	bne	42ed38 <cvMixChannels+0x54>
  42ed1c:	e59f5718 	ldr	r5, [pc, #1816]	; 42f43c <cvMixChannels+0x758>
  42ed20:	e08f5005 	add	r5, pc, r5
  42ed24:	e2450efa 	sub	r0, r5, #4000	; 0xfa0
  42ed28:	e240000c 	sub	r0, r0, #12
  42ed2c:	ebffc4be 	bl	42002c <_ZL21icvInitMixChannelsTabP11CvFuncTable>
  42ed30:	e3a03001 	mov	r3, #1
  42ed34:	e5053fb0 	str	r3, [r5, #-4016]	; 0xfb0
  42ed38:	e1c43fc4 	bic	r3, r4, r4, asr #31
  42ed3c:	e1a02003 	mov	r2, r3
  42ed40:	e58d3044 	str	r3, [sp, #68]	; 0x44
  42ed44:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
  42ed48:	e2733001 	rsbs	r3, r3, #1
  42ed4c:	33a03000 	movcc	r3, #0
  42ed50:	e3520000 	cmp	r2, #0
  42ed54:	d3a03000 	movle	r3, #0
  42ed58:	e3530000 	cmp	r3, #0
  42ed5c:	0a00000d 	beq	42ed98 <cvMixChannels+0xb4>
  42ed60:	e59f36d8 	ldr	r3, [pc, #1752]	; 42f440 <cvMixChannels+0x75c>
  42ed64:	e58d3000 	str	r3, [sp]
  42ed68:	e3e0001a 	mvn	r0, #26
  42ed6c:	e59f16d0 	ldr	r1, [pc, #1744]	; 42f444 <cvMixChannels+0x760>
  42ed70:	e08f1001 	add	r1, pc, r1
  42ed74:	e2811010 	add	r1, r1, #16
  42ed78:	e59f26c8 	ldr	r2, [pc, #1736]	; 42f448 <cvMixChannels+0x764>
  42ed7c:	e08f2002 	add	r2, pc, r2
  42ed80:	e59f36c4 	ldr	r3, [pc, #1732]	; 42f44c <cvMixChannels+0x768>
  42ed84:	e08f3003 	add	r3, pc, r3
  42ed88:	ebff8f46 	bl	412aa8 <cvError>
  42ed8c:	e3a03000 	mov	r3, #0
  42ed90:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  42ed94:	ea0001a2 	b	42f424 <cvMixChannels+0x740>
  42ed98:	e59d3020 	ldr	r3, [sp, #32]
  42ed9c:	e3530000 	cmp	r3, #0
  42eda0:	1a00000d 	bne	42eddc <cvMixChannels+0xf8>
  42eda4:	e59f36a4 	ldr	r3, [pc, #1700]	; 42f450 <cvMixChannels+0x76c>
  42eda8:	e58d3000 	str	r3, [sp]
  42edac:	e3e0001a 	mvn	r0, #26
  42edb0:	e59f169c 	ldr	r1, [pc, #1692]	; 42f454 <cvMixChannels+0x770>
  42edb4:	e08f1001 	add	r1, pc, r1
  42edb8:	e2811010 	add	r1, r1, #16
  42edbc:	e59f2694 	ldr	r2, [pc, #1684]	; 42f458 <cvMixChannels+0x774>
  42edc0:	e08f2002 	add	r2, pc, r2
  42edc4:	e59f3690 	ldr	r3, [pc, #1680]	; 42f45c <cvMixChannels+0x778>
  42edc8:	e08f3003 	add	r3, pc, r3
  42edcc:	ebff8f35 	bl	412aa8 <cvError>
  42edd0:	e3a03000 	mov	r3, #0
  42edd4:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  42edd8:	ea000191 	b	42f424 <cvMixChannels+0x740>
  42eddc:	e59d301c 	ldr	r3, [sp, #28]
  42ede0:	e59d20fc 	ldr	r2, [sp, #252]	; 0xfc
  42ede4:	e3520000 	cmp	r2, #0
  42ede8:	c3530000 	cmpgt	r3, #0
  42edec:	ca00000d 	bgt	42ee28 <cvMixChannels+0x144>
  42edf0:	e59f3668 	ldr	r3, [pc, #1640]	; 42f460 <cvMixChannels+0x77c>
  42edf4:	e58d3000 	str	r3, [sp]
  42edf8:	e3e000d2 	mvn	r0, #210	; 0xd2
  42edfc:	e59f1660 	ldr	r1, [pc, #1632]	; 42f464 <cvMixChannels+0x780>
  42ee00:	e08f1001 	add	r1, pc, r1
  42ee04:	e2811010 	add	r1, r1, #16
  42ee08:	e59f2658 	ldr	r2, [pc, #1624]	; 42f468 <cvMixChannels+0x784>
  42ee0c:	e08f2002 	add	r2, pc, r2
  42ee10:	e59f3654 	ldr	r3, [pc, #1620]	; 42f46c <cvMixChannels+0x788>
  42ee14:	e08f3003 	add	r3, pc, r3
  42ee18:	ebff8f22 	bl	412aa8 <cvError>
  42ee1c:	e3a03000 	mov	r3, #0
  42ee20:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  42ee24:	ea00017e 	b	42f424 <cvMixChannels+0x740>
  42ee28:	e59d30f8 	ldr	r3, [sp, #248]	; 0xf8
  42ee2c:	e3530000 	cmp	r3, #0
  42ee30:	1a00000d 	bne	42ee6c <cvMixChannels+0x188>
  42ee34:	e59f3634 	ldr	r3, [pc, #1588]	; 42f470 <cvMixChannels+0x78c>
  42ee38:	e58d3000 	str	r3, [sp]
  42ee3c:	e3e0001a 	mvn	r0, #26
  42ee40:	e59f162c 	ldr	r1, [pc, #1580]	; 42f474 <cvMixChannels+0x790>
  42ee44:	e08f1001 	add	r1, pc, r1
  42ee48:	e2811010 	add	r1, r1, #16
  42ee4c:	e59f2624 	ldr	r2, [pc, #1572]	; 42f478 <cvMixChannels+0x794>
  42ee50:	e08f2002 	add	r2, pc, r2
  42ee54:	e59f3620 	ldr	r3, [pc, #1568]	; 42f47c <cvMixChannels+0x798>
  42ee58:	e08f3003 	add	r3, pc, r3
  42ee5c:	ebff8f11 	bl	412aa8 <cvError>
  42ee60:	e3a03000 	mov	r3, #0
  42ee64:	e58d303c 	str	r3, [sp, #60]	; 0x3c
  42ee68:	ea00016d 	b	42f424 <cvMixChannels+0x740>
  42ee6c:	e59d5044 	ldr	r5, [sp, #68]	; 0x44
  42ee70:	e59d401c 	ldr	r4, [sp, #28]
  42ee74:	e0853004 	add	r3, r5, r4
  42ee78:	e2833002 	add	r3, r3, #2
  42ee7c:	e0833083 	add	r3, r3, r3, lsl #1
  42ee80:	e1a03103 	lsl	r3, r3, #2
  42ee84:	e59d20fc 	ldr	r2, [sp, #252]	; 0xfc
  42ee88:	e0820082 	add	r0, r2, r2, lsl #1
  42ee8c:	e1a00100 	lsl	r0, r0, #2
  42ee90:	e0830080 	add	r0, r3, r0, lsl #1
  42ee94:	ebffb288 	bl	41b8bc <cvAlloc>
  42ee98:	e58d003c 	str	r0, [sp, #60]	; 0x3c
  42ee9c:	e1a01105 	lsl	r1, r5, #2
  42eea0:	e0803001 	add	r3, r0, r1
  42eea4:	e1a0e003 	mov	lr, r3
  42eea8:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42eeac:	e1a00004 	mov	r0, r4
  42eeb0:	e1a03104 	lsl	r3, r4, #2
  42eeb4:	e08ec003 	add	ip, lr, r3
  42eeb8:	e1a0400c 	mov	r4, ip
  42eebc:	e58dc050 	str	ip, [sp, #80]	; 0x50
  42eec0:	e2852001 	add	r2, r5, #1
  42eec4:	e08ca102 	add	sl, ip, r2, lsl #2
  42eec8:	e1a0c000 	mov	ip, r0
  42eecc:	e2800001 	add	r0, r0, #1
  42eed0:	e08a0100 	add	r0, sl, r0, lsl #2
  42eed4:	e58d0054 	str	r0, [sp, #84]	; 0x54
  42eed8:	e0801001 	add	r1, r0, r1
  42eedc:	e58d1028 	str	r1, [sp, #40]	; 0x28
  42eee0:	e0813003 	add	r3, r1, r3
  42eee4:	e2833003 	add	r3, r3, #3
  42eee8:	e3c33003 	bic	r3, r3, #3
  42eeec:	e1a01003 	mov	r1, r3
  42eef0:	e58d304c 	str	r3, [sp, #76]	; 0x4c
  42eef4:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  42eef8:	e1a03103 	lsl	r3, r3, #2
  42eefc:	e0811003 	add	r1, r1, r3
  42ef00:	e58d1030 	str	r1, [sp, #48]	; 0x30
  42ef04:	e0811003 	add	r1, r1, r3
  42ef08:	e58d102c 	str	r1, [sp, #44]	; 0x2c
  42ef0c:	e0811003 	add	r1, r1, r3
  42ef10:	e58d1048 	str	r1, [sp, #72]	; 0x48
  42ef14:	e0811003 	add	r1, r1, r3
  42ef18:	e58d1034 	str	r1, [sp, #52]	; 0x34
  42ef1c:	e0813003 	add	r3, r1, r3
  42ef20:	e58d3038 	str	r3, [sp, #56]	; 0x38
  42ef24:	e3a08000 	mov	r8, #0
  42ef28:	e7848102 	str	r8, [r4, r2, lsl #2]
  42ef2c:	e78e810c 	str	r8, [lr, ip, lsl #2]
  42ef30:	e3a0b901 	mov	fp, #16384	; 0x4000
  42ef34:	e3a03001 	mov	r3, #1
  42ef38:	e58d3018 	str	r3, [sp, #24]
  42ef3c:	e3e09000 	mvn	r9, #0
  42ef40:	ea000090 	b	42f188 <cvMixChannels+0x4a4>
  42ef44:	e3580000 	cmp	r8, #0
  42ef48:	059d3040 	ldreq	r3, [sp, #64]	; 0x40
  42ef4c:	07934107 	ldreq	r4, [r3, r7, lsl #2]
  42ef50:	159d3020 	ldrne	r3, [sp, #32]
  42ef54:	17934107 	ldrne	r4, [r3, r7, lsl #2]
  42ef58:	e3540000 	cmp	r4, #0
  42ef5c:	0a00000c 	beq	42ef94 <cvMixChannels+0x2b0>
  42ef60:	e1d420b2 	ldrh	r2, [r4, #2]
  42ef64:	e59f3514 	ldr	r3, [pc, #1300]	; 42f480 <cvMixChannels+0x79c>
  42ef68:	e1530802 	cmp	r3, r2, lsl #16
  42ef6c:	1a000008 	bne	42ef94 <cvMixChannels+0x2b0>
  42ef70:	e5943018 	ldr	r3, [r4, #24]
  42ef74:	e3530000 	cmp	r3, #0
  42ef78:	da000005 	ble	42ef94 <cvMixChannels+0x2b0>
  42ef7c:	e5943014 	ldr	r3, [r4, #20]
  42ef80:	e3530000 	cmp	r3, #0
  42ef84:	da000002 	ble	42ef94 <cvMixChannels+0x2b0>
  42ef88:	e5943010 	ldr	r3, [r4, #16]
  42ef8c:	e3530000 	cmp	r3, #0
  42ef90:	1a000014 	bne	42efe8 <cvMixChannels+0x304>
  42ef94:	e1a00004 	mov	r0, r4
  42ef98:	e28d1064 	add	r1, sp, #100	; 0x64
  42ef9c:	e3a02000 	mov	r2, #0
  42efa0:	e1a03002 	mov	r3, r2
  42efa4:	ebff7ee0 	bl	40eb2c <cvGetMat>
  42efa8:	e1a04000 	mov	r4, r0
  42efac:	ebff8e8c 	bl	4129e4 <cvGetErrStatus>
  42efb0:	e3500000 	cmp	r0, #0
  42efb4:	aa00000b 	bge	42efe8 <cvMixChannels+0x304>
  42efb8:	e59f34c4 	ldr	r3, [pc, #1220]	; 42f484 <cvMixChannels+0x7a0>
  42efbc:	e58d3000 	str	r3, [sp]
  42efc0:	e3e00000 	mvn	r0, #0
  42efc4:	e59f14bc 	ldr	r1, [pc, #1212]	; 42f488 <cvMixChannels+0x7a4>
  42efc8:	e08f1001 	add	r1, pc, r1
  42efcc:	e2811010 	add	r1, r1, #16
  42efd0:	e59f24b4 	ldr	r2, [pc, #1204]	; 42f48c <cvMixChannels+0x7a8>
  42efd4:	e08f2002 	add	r2, pc, r2
  42efd8:	e59f34b0 	ldr	r3, [pc, #1200]	; 42f490 <cvMixChannels+0x7ac>
  42efdc:	e08f3003 	add	r3, pc, r3
  42efe0:	ebff8eb0 	bl	412aa8 <cvError>
  42efe4:	ea00010e 	b	42f424 <cvMixChannels+0x740>
  42efe8:	e3590000 	cmp	r9, #0
  42efec:	aa00000e 	bge	42f02c <cvMixChannels+0x348>
  42eff0:	e5949000 	ldr	r9, [r4]
  42eff4:	e2099007 	and	r9, r9, #7
  42eff8:	e1a02109 	lsl	r2, r9, #2
  42effc:	e59f3490 	ldr	r3, [pc, #1168]	; 42f494 <cvMixChannels+0x7b0>
  42f000:	e1a03233 	lsr	r3, r3, r2
  42f004:	e203300f 	and	r3, r3, #15
  42f008:	e58d3018 	str	r3, [sp, #24]
  42f00c:	e5943018 	ldr	r3, [r4, #24]
  42f010:	e58d30c8 	str	r3, [sp, #200]	; 0xc8
  42f014:	e5943014 	ldr	r3, [r4, #20]
  42f018:	e58d30cc 	str	r3, [sp, #204]	; 0xcc
  42f01c:	e28d30d0 	add	r3, sp, #208	; 0xd0
  42f020:	e9130003 	ldmdb	r3, {r0, r1}
  42f024:	e28d305c 	add	r3, sp, #92	; 0x5c
  42f028:	e8830003 	stm	r3, {r0, r1}
  42f02c:	e5943000 	ldr	r3, [r4]
  42f030:	e2033007 	and	r3, r3, #7
  42f034:	e1530009 	cmp	r3, r9
  42f038:	0a00000b 	beq	42f06c <cvMixChannels+0x388>
  42f03c:	e59f3454 	ldr	r3, [pc, #1108]	; 42f498 <cvMixChannels+0x7b4>
  42f040:	e58d3000 	str	r3, [sp]
  42f044:	e3e000cc 	mvn	r0, #204	; 0xcc
  42f048:	e59f144c 	ldr	r1, [pc, #1100]	; 42f49c <cvMixChannels+0x7b8>
  42f04c:	e08f1001 	add	r1, pc, r1
  42f050:	e2811010 	add	r1, r1, #16
  42f054:	e59f2444 	ldr	r2, [pc, #1092]	; 42f4a0 <cvMixChannels+0x7bc>
  42f058:	e08f2002 	add	r2, pc, r2
  42f05c:	e59f3440 	ldr	r3, [pc, #1088]	; 42f4a4 <cvMixChannels+0x7c0>
  42f060:	e08f3003 	add	r3, pc, r3
  42f064:	ebff8e8f 	bl	412aa8 <cvError>
  42f068:	ea0000ed 	b	42f424 <cvMixChannels+0x740>
  42f06c:	e5943018 	ldr	r3, [r4, #24]
  42f070:	e59d605c 	ldr	r6, [sp, #92]	; 0x5c
  42f074:	e1530006 	cmp	r3, r6
  42f078:	1a000003 	bne	42f08c <cvMixChannels+0x3a8>
  42f07c:	e5942014 	ldr	r2, [r4, #20]
  42f080:	e59d3060 	ldr	r3, [sp, #96]	; 0x60
  42f084:	e1520003 	cmp	r2, r3
  42f088:	0a00000b 	beq	42f0bc <cvMixChannels+0x3d8>
  42f08c:	e3a03e33 	mov	r3, #816	; 0x330
  42f090:	e58d3000 	str	r3, [sp]
  42f094:	e3e000d0 	mvn	r0, #208	; 0xd0
  42f098:	e59f1408 	ldr	r1, [pc, #1032]	; 42f4a8 <cvMixChannels+0x7c4>
  42f09c:	e08f1001 	add	r1, pc, r1
  42f0a0:	e2811010 	add	r1, r1, #16
  42f0a4:	e59f2400 	ldr	r2, [pc, #1024]	; 42f4ac <cvMixChannels+0x7c8>
  42f0a8:	e08f2002 	add	r2, pc, r2
  42f0ac:	e59f33fc 	ldr	r3, [pc, #1020]	; 42f4b0 <cvMixChannels+0x7cc>
  42f0b0:	e08f3003 	add	r3, pc, r3
  42f0b4:	ebff8e7b 	bl	412aa8 <cvError>
  42f0b8:	ea0000d9 	b	42f424 <cvMixChannels+0x740>
  42f0bc:	e3580000 	cmp	r8, #0
  42f0c0:	1a000013 	bne	42f114 <cvMixChannels+0x430>
  42f0c4:	e5943010 	ldr	r3, [r4, #16]
  42f0c8:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
  42f0cc:	e7823107 	str	r3, [r2, r7, lsl #2]
  42f0d0:	e5945000 	ldr	r5, [r4]
  42f0d4:	e2055f7e 	and	r5, r5, #504	; 0x1f8
  42f0d8:	e1a051c5 	asr	r5, r5, #3
  42f0dc:	e2855001 	add	r5, r5, #1
  42f0e0:	e2872001 	add	r2, r7, #1
  42f0e4:	e59d1050 	ldr	r1, [sp, #80]	; 0x50
  42f0e8:	e7913107 	ldr	r3, [r1, r7, lsl #2]
  42f0ec:	e0833005 	add	r3, r3, r5
  42f0f0:	e7813102 	str	r3, [r1, r2, lsl #2]
  42f0f4:	e5940004 	ldr	r0, [r4, #4]
  42f0f8:	e59d1018 	ldr	r1, [sp, #24]
  42f0fc:	fa000a2c 	blx	4319b4 <__aeabi_idiv>
  42f100:	e0050596 	mul	r5, r6, r5
  42f104:	e0650000 	rsb	r0, r5, r0
  42f108:	e59d3054 	ldr	r3, [sp, #84]	; 0x54
  42f10c:	e7830107 	str	r0, [r3, r7, lsl #2]
  42f110:	ea000011 	b	42f15c <cvMixChannels+0x478>
  42f114:	e5943010 	ldr	r3, [r4, #16]
  42f118:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
  42f11c:	e7823107 	str	r3, [r2, r7, lsl #2]
  42f120:	e5945000 	ldr	r5, [r4]
  42f124:	e2055f7e 	and	r5, r5, #504	; 0x1f8
  42f128:	e1a051c5 	asr	r5, r5, #3
  42f12c:	e2855001 	add	r5, r5, #1
  42f130:	e2872001 	add	r2, r7, #1
  42f134:	e79a3107 	ldr	r3, [sl, r7, lsl #2]
  42f138:	e0833005 	add	r3, r3, r5
  42f13c:	e78a3102 	str	r3, [sl, r2, lsl #2]
  42f140:	e5940004 	ldr	r0, [r4, #4]
  42f144:	e59d1018 	ldr	r1, [sp, #24]
  42f148:	fa000a19 	blx	4319b4 <__aeabi_idiv>
  42f14c:	e0050596 	mul	r5, r6, r5
  42f150:	e0650000 	rsb	r0, r5, r0
  42f154:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
  42f158:	e7830107 	str	r0, [r3, r7, lsl #2]
  42f15c:	e5943000 	ldr	r3, [r4]
  42f160:	e00bb003 	and	fp, fp, r3
  42f164:	e2877001 	add	r7, r7, #1
  42f168:	ea000000 	b	42f170 <cvMixChannels+0x48c>
  42f16c:	e3a07000 	mov	r7, #0
  42f170:	e3580000 	cmp	r8, #0
  42f174:	059d3044 	ldreq	r3, [sp, #68]	; 0x44
  42f178:	159d301c 	ldrne	r3, [sp, #28]
  42f17c:	e1530007 	cmp	r3, r7
  42f180:	caffff6f 	bgt	42ef44 <cvMixChannels+0x260>
  42f184:	e2888001 	add	r8, r8, #1
  42f188:	e3580001 	cmp	r8, #1
  42f18c:	dafffff6 	ble	42f16c <cvMixChannels+0x488>
  42f190:	e35b0000 	cmp	fp, #0
  42f194:	0a000005 	beq	42f1b0 <cvMixChannels+0x4cc>
  42f198:	e59d3060 	ldr	r3, [sp, #96]	; 0x60
  42f19c:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
  42f1a0:	e0030392 	mul	r3, r2, r3
  42f1a4:	e58d305c 	str	r3, [sp, #92]	; 0x5c
  42f1a8:	e3a03001 	mov	r3, #1
  42f1ac:	e58d3060 	str	r3, [sp, #96]	; 0x60
  42f1b0:	e3a04000 	mov	r4, #0
  42f1b4:	e58d9040 	str	r9, [sp, #64]	; 0x40
  42f1b8:	e58da020 	str	sl, [sp, #32]
  42f1bc:	e59da024 	ldr	sl, [sp, #36]	; 0x24
  42f1c0:	e59db028 	ldr	fp, [sp, #40]	; 0x28
  42f1c4:	e59d8048 	ldr	r8, [sp, #72]	; 0x48
  42f1c8:	e59d904c 	ldr	r9, [sp, #76]	; 0x4c
  42f1cc:	e59d601c 	ldr	r6, [sp, #28]
  42f1d0:	e59d70f8 	ldr	r7, [sp, #248]	; 0xf8
  42f1d4:	ea00005f 	b	42f358 <cvMixChannels+0x674>
  42f1d8:	e08c2084 	add	r2, ip, r4, lsl #1
  42f1dc:	e7971102 	ldr	r1, [r7, r2, lsl #2]
  42f1e0:	e35c0000 	cmp	ip, #0
  42f1e4:	059d0050 	ldreq	r0, [sp, #80]	; 0x50
  42f1e8:	159d0020 	ldrne	r0, [sp, #32]
  42f1ec:	e35c0000 	cmp	ip, #0
  42f1f0:	059d3044 	ldreq	r3, [sp, #68]	; 0x44
  42f1f4:	02433001 	subeq	r3, r3, #1
  42f1f8:	12463001 	subne	r3, r6, #1
  42f1fc:	e3510000 	cmp	r1, #0
  42f200:	ba000003 	blt	42f214 <cvMixChannels+0x530>
  42f204:	e2833001 	add	r3, r3, #1
  42f208:	e7903103 	ldr	r3, [r0, r3, lsl #2]
  42f20c:	e1530001 	cmp	r3, r1
  42f210:	ca000022 	bgt	42f2a0 <cvMixChannels+0x5bc>
  42f214:	e1a01fa1 	lsr	r1, r1, #31
  42f218:	e35c0000 	cmp	ip, #0
  42f21c:	13a01000 	movne	r1, #0
  42f220:	02011001 	andeq	r1, r1, #1
  42f224:	e3510000 	cmp	r1, #0
  42f228:	0a000005 	beq	42f244 <cvMixChannels+0x560>
  42f22c:	e3a03000 	mov	r3, #0
  42f230:	e7893104 	str	r3, [r9, r4, lsl #2]
  42f234:	e7883104 	str	r3, [r8, r4, lsl #2]
  42f238:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
  42f23c:	e7823104 	str	r3, [r2, r4, lsl #2]
  42f240:	ea00003e 	b	42f340 <cvMixChannels+0x65c>
  42f244:	e35c0000 	cmp	ip, #0
  42f248:	059f3264 	ldreq	r3, [pc, #612]	; 42f4b4 <cvMixChannels+0x7d0>
  42f24c:	008f3003 	addeq	r3, pc, r3
  42f250:	159f3260 	ldrne	r3, [pc, #608]	; 42f4b8 <cvMixChannels+0x7d4>
  42f254:	108f3003 	addne	r3, pc, r3
  42f258:	e28d4064 	add	r4, sp, #100	; 0x64
  42f25c:	e1a00004 	mov	r0, r4
  42f260:	e59f1254 	ldr	r1, [pc, #596]	; 42f4bc <cvMixChannels+0x7d8>
  42f264:	e08f1001 	add	r1, pc, r1
  42f268:	fa001916 	blx	4356c8 <sprintf>
  42f26c:	e59f324c 	ldr	r3, [pc, #588]	; 42f4c0 <cvMixChannels+0x7dc>
  42f270:	e58d3000 	str	r3, [sp]
  42f274:	e3e000d2 	mvn	r0, #210	; 0xd2
  42f278:	e59f1244 	ldr	r1, [pc, #580]	; 42f4c4 <cvMixChannels+0x7e0>
  42f27c:	e08f1001 	add	r1, pc, r1
  42f280:	e2811010 	add	r1, r1, #16
  42f284:	e1a02004 	mov	r2, r4
  42f288:	e59f3238 	ldr	r3, [pc, #568]	; 42f4c8 <cvMixChannels+0x7e4>
  42f28c:	e08f3003 	add	r3, pc, r3
  42f290:	ebff8e04 	bl	412aa8 <cvError>
  42f294:	ea000062 	b	42f424 <cvMixChannels+0x740>
  42f298:	e2833001 	add	r3, r3, #1
  42f29c:	ea000000 	b	42f2a4 <cvMixChannels+0x5c0>
  42f2a0:	e3a03000 	mov	r3, #0
  42f2a4:	e1a0e003 	mov	lr, r3
  42f2a8:	e2832001 	add	r2, r3, #1
  42f2ac:	e0805102 	add	r5, r0, r2, lsl #2
  42f2b0:	e7902102 	ldr	r2, [r0, r2, lsl #2]
  42f2b4:	e1520001 	cmp	r2, r1
  42f2b8:	dafffff6 	ble	42f298 <cvMixChannels+0x5b4>
  42f2bc:	e35c0000 	cmp	ip, #0
  42f2c0:	1a00000f 	bne	42f304 <cvMixChannels+0x620>
  42f2c4:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
  42f2c8:	e793310e 	ldr	r3, [r3, lr, lsl #2]
  42f2cc:	e790210e 	ldr	r2, [r0, lr, lsl #2]
  42f2d0:	e0621001 	rsb	r1, r2, r1
  42f2d4:	e59d2018 	ldr	r2, [sp, #24]
  42f2d8:	e0223291 	mla	r2, r1, r2, r3
  42f2dc:	e7892104 	str	r2, [r9, r4, lsl #2]
  42f2e0:	e5953000 	ldr	r3, [r5]
  42f2e4:	e790210e 	ldr	r2, [r0, lr, lsl #2]
  42f2e8:	e0623003 	rsb	r3, r2, r3
  42f2ec:	e7883104 	str	r3, [r8, r4, lsl #2]
  42f2f0:	e59d3054 	ldr	r3, [sp, #84]	; 0x54
  42f2f4:	e793310e 	ldr	r3, [r3, lr, lsl #2]
  42f2f8:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
  42f2fc:	e7823104 	str	r3, [r2, r4, lsl #2]
  42f300:	ea00000e 	b	42f340 <cvMixChannels+0x65c>
  42f304:	e79a3103 	ldr	r3, [sl, r3, lsl #2]
  42f308:	e790210e 	ldr	r2, [r0, lr, lsl #2]
  42f30c:	e0621001 	rsb	r1, r2, r1
  42f310:	e59d2018 	ldr	r2, [sp, #24]
  42f314:	e0223291 	mla	r2, r1, r2, r3
  42f318:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  42f31c:	e7832104 	str	r2, [r3, r4, lsl #2]
  42f320:	e5953000 	ldr	r3, [r5]
  42f324:	e790210e 	ldr	r2, [r0, lr, lsl #2]
  42f328:	e0623003 	rsb	r3, r2, r3
  42f32c:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
  42f330:	e7823104 	str	r3, [r2, r4, lsl #2]
  42f334:	e79b310e 	ldr	r3, [fp, lr, lsl #2]
  42f338:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
  42f33c:	e7823104 	str	r3, [r2, r4, lsl #2]
  42f340:	e28cc001 	add	ip, ip, #1
  42f344:	ea000000 	b	42f34c <cvMixChannels+0x668>
  42f348:	e3a0c000 	mov	ip, #0
  42f34c:	e35c0001 	cmp	ip, #1
  42f350:	daffffa0 	ble	42f1d8 <cvMixChannels+0x4f4>
  42f354:	e2844001 	add	r4, r4, #1
  42f358:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  42f35c:	e1540003 	cmp	r4, r3
  42f360:	bafffff8 	blt	42f348 <cvMixChannels+0x664>
  42f364:	e59d9040 	ldr	r9, [sp, #64]	; 0x40
  42f368:	e59f315c 	ldr	r3, [pc, #348]	; 42f4cc <cvMixChannels+0x7e8>
  42f36c:	e08f3003 	add	r3, pc, r3
  42f370:	e0839109 	add	r9, r3, r9, lsl #2
  42f374:	e519cfac 	ldr	ip, [r9, #-4012]	; 0xfac
  42f378:	e35c0000 	cmp	ip, #0
  42f37c:	1a00000b 	bne	42f3b0 <cvMixChannels+0x6cc>
  42f380:	e59f3148 	ldr	r3, [pc, #328]	; 42f4d0 <cvMixChannels+0x7ec>
  42f384:	e58d3000 	str	r3, [sp]
  42f388:	e3e000d1 	mvn	r0, #209	; 0xd1
  42f38c:	e59f1140 	ldr	r1, [pc, #320]	; 42f4d4 <cvMixChannels+0x7f0>
  42f390:	e08f1001 	add	r1, pc, r1
  42f394:	e2811010 	add	r1, r1, #16
  42f398:	e59f2138 	ldr	r2, [pc, #312]	; 42f4d8 <cvMixChannels+0x7f4>
  42f39c:	e08f2002 	add	r2, pc, r2
  42f3a0:	e59f3134 	ldr	r3, [pc, #308]	; 42f4dc <cvMixChannels+0x7f8>
  42f3a4:	e08f3003 	add	r3, pc, r3
  42f3a8:	ebff8dbe 	bl	412aa8 <cvError>
  42f3ac:	ea00001c 	b	42f424 <cvMixChannels+0x740>
  42f3b0:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
  42f3b4:	e58d3000 	str	r3, [sp]
  42f3b8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
  42f3bc:	e58d3004 	str	r3, [sp, #4]
  42f3c0:	e59d30fc 	ldr	r3, [sp, #252]	; 0xfc
  42f3c4:	e58d3008 	str	r3, [sp, #8]
  42f3c8:	e28d300c 	add	r3, sp, #12
  42f3cc:	e28d205c 	add	r2, sp, #92	; 0x5c
  42f3d0:	e8920003 	ldm	r2, {r0, r1}
  42f3d4:	e8830003 	stm	r3, {r0, r1}
  42f3d8:	e59d004c 	ldr	r0, [sp, #76]	; 0x4c
  42f3dc:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
  42f3e0:	e59d2048 	ldr	r2, [sp, #72]	; 0x48
  42f3e4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
  42f3e8:	e1a0e00f 	mov	lr, pc
  42f3ec:	e12fff1c 	bx	ip
  42f3f0:	e3500000 	cmp	r0, #0
  42f3f4:	aa00000a 	bge	42f424 <cvMixChannels+0x740>
  42f3f8:	ebff8de3 	bl	412b8c <cvErrorFromIppStatus>
  42f3fc:	e3a03fdf 	mov	r3, #892	; 0x37c
  42f400:	e58d3000 	str	r3, [sp]
  42f404:	e59f10d4 	ldr	r1, [pc, #212]	; 42f4e0 <cvMixChannels+0x7fc>
  42f408:	e08f1001 	add	r1, pc, r1
  42f40c:	e2811010 	add	r1, r1, #16
  42f410:	e59f20cc 	ldr	r2, [pc, #204]	; 42f4e4 <cvMixChannels+0x800>
  42f414:	e08f2002 	add	r2, pc, r2
  42f418:	e59f30c8 	ldr	r3, [pc, #200]	; 42f4e8 <cvMixChannels+0x804>
  42f41c:	e08f3003 	add	r3, pc, r3
  42f420:	ebff8da0 	bl	412aa8 <cvError>
  42f424:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
  42f428:	ebffb155 	bl	41b984 <cvFree_>
  42f42c:	e28dd0d4 	add	sp, sp, #212	; 0xd4
  42f430:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42f434:	e12fff1e 	bx	lr
  42f438:	1fbd50ec 	.word	0x1fbd50ec
  42f43c:	1fbd50d8 	.word	0x1fbd50d8
  42f440:	000002f3 	.word	0x000002f3
  42f444:	1fbd207c 	.word	0x1fbd207c
  42f448:	000113fc 	.word	0x000113fc
  42f44c:	00011338 	.word	0x00011338
  42f450:	000002f6 	.word	0x000002f6
  42f454:	1fbd2038 	.word	0x1fbd2038
  42f458:	000113dc 	.word	0x000113dc
  42f45c:	000112f4 	.word	0x000112f4
  42f460:	000002fa 	.word	0x000002fa
  42f464:	1fbd1fec 	.word	0x1fbd1fec
  42f468:	000113b4 	.word	0x000113b4
  42f46c:	000112a8 	.word	0x000112a8
  42f470:	000002fd 	.word	0x000002fd
  42f474:	1fbd1fa8 	.word	0x1fbd1fa8
  42f478:	000113c0 	.word	0x000113c0
  42f47c:	00011264 	.word	0x00011264
  42f480:	42420000 	.word	0x42420000
  42f484:	00000323 	.word	0x00000323
  42f488:	1fbd1e24 	.word	0x1fbd1e24
  42f48c:	0000dffc 	.word	0x0000dffc
  42f490:	000110e0 	.word	0x000110e0
  42f494:	48442211 	.word	0x48442211
  42f498:	0000032d 	.word	0x0000032d
  42f49c:	1fbd1da0 	.word	0x1fbd1da0
  42f4a0:	000111e4 	.word	0x000111e4
  42f4a4:	0001105c 	.word	0x0001105c
  42f4a8:	1fbd1d50 	.word	0x1fbd1d50
  42f4ac:	000111c0 	.word	0x000111c0
  42f4b0:	0001100c 	.word	0x0001100c
  42f4b4:	00010f1c 	.word	0x00010f1c
  42f4b8:	00010f1c 	.word	0x00010f1c
  42f4bc:	0001102c 	.word	0x0001102c
  42f4c0:	00000361 	.word	0x00000361
  42f4c4:	1fbd1b70 	.word	0x1fbd1b70
  42f4c8:	00010e30 	.word	0x00010e30
  42f4cc:	1fbd4a8c 	.word	0x1fbd4a8c
  42f4d0:	00000379 	.word	0x00000379
  42f4d4:	1fbd1a5c 	.word	0x1fbd1a5c
  42f4d8:	00010f68 	.word	0x00010f68
  42f4dc:	00010d18 	.word	0x00010d18
  42f4e0:	1fbd19e4 	.word	0x1fbd19e4
  42f4e4:	00010930 	.word	0x00010930
  42f4e8:	00010ca0 	.word	0x00010ca0

0042f4ec <cvConvertScaleAbs>:
  42f4ec:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  42f4f0:	e24dd074 	sub	sp, sp, #116	; 0x74
  42f4f4:	e1a04001 	mov	r4, r1
  42f4f8:	e1a06002 	mov	r6, r2
  42f4fc:	e1a07003 	mov	r7, r3
  42f500:	e3a03000 	mov	r3, #0
  42f504:	e58d3020 	str	r3, [sp, #32]
  42f508:	e58d3024 	str	r3, [sp, #36]	; 0x24
  42f50c:	e28d1030 	add	r1, sp, #48	; 0x30
  42f510:	e28d2020 	add	r2, sp, #32
  42f514:	ebff7d84 	bl	40eb2c <cvGetMat>
  42f518:	e1a05000 	mov	r5, r0
  42f51c:	ebff8d30 	bl	4129e4 <cvGetErrStatus>
  42f520:	e3500000 	cmp	r0, #0
  42f524:	aa00000b 	bge	42f558 <cvConvertScaleAbs+0x6c>
  42f528:	e59f3258 	ldr	r3, [pc, #600]	; 42f788 <cvConvertScaleAbs+0x29c>
  42f52c:	e58d3000 	str	r3, [sp]
  42f530:	e3e00000 	mvn	r0, #0
  42f534:	e59f1250 	ldr	r1, [pc, #592]	; 42f78c <cvConvertScaleAbs+0x2a0>
  42f538:	e08f1001 	add	r1, pc, r1
  42f53c:	e2811020 	add	r1, r1, #32
  42f540:	e59f2248 	ldr	r2, [pc, #584]	; 42f790 <cvConvertScaleAbs+0x2a4>
  42f544:	e08f2002 	add	r2, pc, r2
  42f548:	e59f3244 	ldr	r3, [pc, #580]	; 42f794 <cvConvertScaleAbs+0x2a8>
  42f54c:	e08f3003 	add	r3, pc, r3
  42f550:	ebff8d54 	bl	412aa8 <cvError>
  42f554:	ea000088 	b	42f77c <cvConvertScaleAbs+0x290>
  42f558:	e1a00004 	mov	r0, r4
  42f55c:	e28d104c 	add	r1, sp, #76	; 0x4c
  42f560:	e28d2024 	add	r2, sp, #36	; 0x24
  42f564:	e3a03000 	mov	r3, #0
  42f568:	ebff7d6f 	bl	40eb2c <cvGetMat>
  42f56c:	e1a04000 	mov	r4, r0
  42f570:	ebff8d1b 	bl	4129e4 <cvGetErrStatus>
  42f574:	e3500000 	cmp	r0, #0
  42f578:	aa00000b 	bge	42f5ac <cvConvertScaleAbs+0xc0>
  42f57c:	e59f3214 	ldr	r3, [pc, #532]	; 42f798 <cvConvertScaleAbs+0x2ac>
  42f580:	e58d3000 	str	r3, [sp]
  42f584:	e3e00000 	mvn	r0, #0
  42f588:	e59f120c 	ldr	r1, [pc, #524]	; 42f79c <cvConvertScaleAbs+0x2b0>
  42f58c:	e08f1001 	add	r1, pc, r1
  42f590:	e2811020 	add	r1, r1, #32
  42f594:	e59f2204 	ldr	r2, [pc, #516]	; 42f7a0 <cvConvertScaleAbs+0x2b4>
  42f598:	e08f2002 	add	r2, pc, r2
  42f59c:	e59f3200 	ldr	r3, [pc, #512]	; 42f7a4 <cvConvertScaleAbs+0x2b8>
  42f5a0:	e08f3003 	add	r3, pc, r3
  42f5a4:	ebff8d3f 	bl	412aa8 <cvError>
  42f5a8:	ea000073 	b	42f77c <cvConvertScaleAbs+0x290>
  42f5ac:	e59d3020 	ldr	r3, [sp, #32]
  42f5b0:	e3530000 	cmp	r3, #0
  42f5b4:	1a000002 	bne	42f5c4 <cvConvertScaleAbs+0xd8>
  42f5b8:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
  42f5bc:	e3530000 	cmp	r3, #0
  42f5c0:	0a00000b 	beq	42f5f4 <cvConvertScaleAbs+0x108>
  42f5c4:	e59f31dc 	ldr	r3, [pc, #476]	; 42f7a8 <cvConvertScaleAbs+0x2bc>
  42f5c8:	e58d3000 	str	r3, [sp]
  42f5cc:	e3e00017 	mvn	r0, #23
  42f5d0:	e59f11d4 	ldr	r1, [pc, #468]	; 42f7ac <cvConvertScaleAbs+0x2c0>
  42f5d4:	e08f1001 	add	r1, pc, r1
  42f5d8:	e2811020 	add	r1, r1, #32
  42f5dc:	e59f21cc 	ldr	r2, [pc, #460]	; 42f7b0 <cvConvertScaleAbs+0x2c4>
  42f5e0:	e08f2002 	add	r2, pc, r2
  42f5e4:	e59f31c8 	ldr	r3, [pc, #456]	; 42f7b4 <cvConvertScaleAbs+0x2c8>
  42f5e8:	e08f3003 	add	r3, pc, r3
  42f5ec:	ebff8d2d 	bl	412aa8 <cvError>
  42f5f0:	ea000061 	b	42f77c <cvConvertScaleAbs+0x290>
  42f5f4:	e5952014 	ldr	r2, [r5, #20]
  42f5f8:	e5943014 	ldr	r3, [r4, #20]
  42f5fc:	e1520003 	cmp	r2, r3
  42f600:	1a000003 	bne	42f614 <cvConvertScaleAbs+0x128>
  42f604:	e595c018 	ldr	ip, [r5, #24]
  42f608:	e5943018 	ldr	r3, [r4, #24]
  42f60c:	e15c0003 	cmp	ip, r3
  42f610:	0a00000b 	beq	42f644 <cvConvertScaleAbs+0x158>
  42f614:	e59f319c 	ldr	r3, [pc, #412]	; 42f7b8 <cvConvertScaleAbs+0x2cc>
  42f618:	e58d3000 	str	r3, [sp]
  42f61c:	e3e000d0 	mvn	r0, #208	; 0xd0
  42f620:	e59f1194 	ldr	r1, [pc, #404]	; 42f7bc <cvConvertScaleAbs+0x2d0>
  42f624:	e08f1001 	add	r1, pc, r1
  42f628:	e2811020 	add	r1, r1, #32
  42f62c:	e59f218c 	ldr	r2, [pc, #396]	; 42f7c0 <cvConvertScaleAbs+0x2d4>
  42f630:	e08f2002 	add	r2, pc, r2
  42f634:	e59f3188 	ldr	r3, [pc, #392]	; 42f7c4 <cvConvertScaleAbs+0x2d8>
  42f638:	e08f3003 	add	r3, pc, r3
  42f63c:	ebff8d19 	bl	412aa8 <cvError>
  42f640:	ea00004d 	b	42f77c <cvConvertScaleAbs+0x290>
  42f644:	e595e000 	ldr	lr, [r5]
  42f648:	e5948000 	ldr	r8, [r4]
  42f64c:	e02e3008 	eor	r3, lr, r8
  42f650:	e3130f7e 	tst	r3, #504	; 0x1f8
  42f654:	0a00000b 	beq	42f688 <cvConvertScaleAbs+0x19c>
  42f658:	e59f3168 	ldr	r3, [pc, #360]	; 42f7c8 <cvConvertScaleAbs+0x2dc>
  42f65c:	e58d3000 	str	r3, [sp]
  42f660:	e3e000cc 	mvn	r0, #204	; 0xcc
  42f664:	e59f1160 	ldr	r1, [pc, #352]	; 42f7cc <cvConvertScaleAbs+0x2e0>
  42f668:	e08f1001 	add	r1, pc, r1
  42f66c:	e2811020 	add	r1, r1, #32
  42f670:	e59f2158 	ldr	r2, [pc, #344]	; 42f7d0 <cvConvertScaleAbs+0x2e4>
  42f674:	e08f2002 	add	r2, pc, r2
  42f678:	e59f3154 	ldr	r3, [pc, #340]	; 42f7d4 <cvConvertScaleAbs+0x2e8>
  42f67c:	e08f3003 	add	r3, pc, r3
  42f680:	ebff8d08 	bl	412aa8 <cvError>
  42f684:	ea00003c 	b	42f77c <cvConvertScaleAbs+0x290>
  42f688:	e3180007 	tst	r8, #7
  42f68c:	0a00000b 	beq	42f6c0 <cvConvertScaleAbs+0x1d4>
  42f690:	e59f3140 	ldr	r3, [pc, #320]	; 42f7d8 <cvConvertScaleAbs+0x2ec>
  42f694:	e58d3000 	str	r3, [sp]
  42f698:	e3e000d1 	mvn	r0, #209	; 0xd1
  42f69c:	e59f1138 	ldr	r1, [pc, #312]	; 42f7dc <cvConvertScaleAbs+0x2f0>
  42f6a0:	e08f1001 	add	r1, pc, r1
  42f6a4:	e2811020 	add	r1, r1, #32
  42f6a8:	e59f2130 	ldr	r2, [pc, #304]	; 42f7e0 <cvConvertScaleAbs+0x2f4>
  42f6ac:	e08f2002 	add	r2, pc, r2
  42f6b0:	e59f312c 	ldr	r3, [pc, #300]	; 42f7e4 <cvConvertScaleAbs+0x2f8>
  42f6b4:	e08f3003 	add	r3, pc, r3
  42f6b8:	ebff8cfa 	bl	412aa8 <cvError>
  42f6bc:	ea00002e 	b	42f77c <cvConvertScaleAbs+0x290>
  42f6c0:	e58dc068 	str	ip, [sp, #104]	; 0x68
  42f6c4:	e58d206c 	str	r2, [sp, #108]	; 0x6c
  42f6c8:	e28d3070 	add	r3, sp, #112	; 0x70
  42f6cc:	e9130003 	ldmdb	r3, {r0, r1}
  42f6d0:	e28d3028 	add	r3, sp, #40	; 0x28
  42f6d4:	e8830003 	stm	r3, {r0, r1}
  42f6d8:	e5959004 	ldr	r9, [r5, #4]
  42f6dc:	e5943004 	ldr	r3, [r4, #4]
  42f6e0:	e008800e 	and	r8, r8, lr
  42f6e4:	e3180901 	tst	r8, #16384	; 0x4000
  42f6e8:	0a000005 	beq	42f704 <cvConvertScaleAbs+0x218>
  42f6ec:	e002029c 	mul	r2, ip, r2
  42f6f0:	e58d2028 	str	r2, [sp, #40]	; 0x28
  42f6f4:	e3a03001 	mov	r3, #1
  42f6f8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
  42f6fc:	e3a03101 	mov	r3, #1073741824	; 0x40000000
  42f700:	e1a09003 	mov	r9, r3
  42f704:	e595c010 	ldr	ip, [r5, #16]
  42f708:	e5942010 	ldr	r2, [r4, #16]
  42f70c:	e1a0eb8e 	lsl	lr, lr, #23
  42f710:	e1a0ebae 	lsr	lr, lr, #23
  42f714:	e28d1028 	add	r1, sp, #40	; 0x28
  42f718:	e8910003 	ldm	r1, {r0, r1}
  42f71c:	e88d0003 	stm	sp, {r0, r1}
  42f720:	e58d6008 	str	r6, [sp, #8]
  42f724:	e58d700c 	str	r7, [sp, #12]
  42f728:	e28d1090 	add	r1, sp, #144	; 0x90
  42f72c:	e8910003 	ldm	r1, {r0, r1}
  42f730:	e58d0010 	str	r0, [sp, #16]
  42f734:	e58d1014 	str	r1, [sp, #20]
  42f738:	e58de018 	str	lr, [sp, #24]
  42f73c:	e1a0000c 	mov	r0, ip
  42f740:	e1a01009 	mov	r1, r9
  42f744:	ebffc58a 	bl	420d74 <_ZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddi>
  42f748:	e3500000 	cmp	r0, #0
  42f74c:	aa00000a 	bge	42f77c <cvConvertScaleAbs+0x290>
  42f750:	ebff8d0d 	bl	412b8c <cvErrorFromIppStatus>
  42f754:	e59f308c 	ldr	r3, [pc, #140]	; 42f7e8 <cvConvertScaleAbs+0x2fc>
  42f758:	e58d3000 	str	r3, [sp]
  42f75c:	e59f1088 	ldr	r1, [pc, #136]	; 42f7ec <cvConvertScaleAbs+0x300>
  42f760:	e08f1001 	add	r1, pc, r1
  42f764:	e2811020 	add	r1, r1, #32
  42f768:	e59f2080 	ldr	r2, [pc, #128]	; 42f7f0 <cvConvertScaleAbs+0x304>
  42f76c:	e08f2002 	add	r2, pc, r2
  42f770:	e59f307c 	ldr	r3, [pc, #124]	; 42f7f4 <cvConvertScaleAbs+0x308>
  42f774:	e08f3003 	add	r3, pc, r3
  42f778:	ebff8cca 	bl	412aa8 <cvError>
  42f77c:	e28dd074 	add	sp, sp, #116	; 0x74
  42f780:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  42f784:	e12fff1e 	bx	lr
  42f788:	0000042e 	.word	0x0000042e
  42f78c:	1fbd18b4 	.word	0x1fbd18b4
  42f790:	0000da8c 	.word	0x0000da8c
  42f794:	00010b70 	.word	0x00010b70
  42f798:	0000042f 	.word	0x0000042f
  42f79c:	1fbd1860 	.word	0x1fbd1860
  42f7a0:	0000da38 	.word	0x0000da38
  42f7a4:	00010b1c 	.word	0x00010b1c
  42f7a8:	00000432 	.word	0x00000432
  42f7ac:	1fbd1818 	.word	0x1fbd1818
  42f7b0:	00010e30 	.word	0x00010e30
  42f7b4:	00010ad4 	.word	0x00010ad4
  42f7b8:	00000435 	.word	0x00000435
  42f7bc:	1fbd17c8 	.word	0x1fbd17c8
  42f7c0:	00010de0 	.word	0x00010de0
  42f7c4:	00010a84 	.word	0x00010a84
  42f7c8:	00000438 	.word	0x00000438
  42f7cc:	1fbd1784 	.word	0x1fbd1784
  42f7d0:	00010d9c 	.word	0x00010d9c
  42f7d4:	00010a40 	.word	0x00010a40
  42f7d8:	0000043b 	.word	0x0000043b
  42f7dc:	1fbd174c 	.word	0x1fbd174c
  42f7e0:	00010d64 	.word	0x00010d64
  42f7e4:	00010a08 	.word	0x00010a08
  42f7e8:	0000044a 	.word	0x0000044a
  42f7ec:	1fbd168c 	.word	0x1fbd168c
  42f7f0:	000105d8 	.word	0x000105d8
  42f7f4:	00010948 	.word	0x00010948

0042f7f8 <cvConvertScale>:
  42f7f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  42f7fc:	e24ddfdf 	sub	sp, sp, #892	; 0x37c
  42f800:	e1a04000 	mov	r4, r0
  42f804:	e1a05001 	mov	r5, r1
  42f808:	e1a06002 	mov	r6, r2
  42f80c:	e1a07003 	mov	r7, r3
  42f810:	e3a08001 	mov	r8, #1
  42f814:	e1a00002 	mov	r0, r2
  42f818:	e1a01003 	mov	r1, r3
  42f81c:	e3a02000 	mov	r2, #0
  42f820:	e59f386c 	ldr	r3, [pc, #2156]	; 430094 <cvConvertScale+0x89c>
  42f824:	fa000a7e 	blx	432224 <__aeabi_dcmpeq>
  42f828:	e3500000 	cmp	r0, #0
  42f82c:	03a08000 	moveq	r8, #0
  42f830:	e20880ff 	and	r8, r8, #255	; 0xff
  42f834:	e3a09001 	mov	r9, #1
  42f838:	e28d1e3a 	add	r1, sp, #928	; 0x3a0
  42f83c:	e8910003 	ldm	r1, {r0, r1}
  42f840:	e3a02000 	mov	r2, #0
  42f844:	e3a03000 	mov	r3, #0
  42f848:	fa000a75 	blx	432224 <__aeabi_dcmpeq>
  42f84c:	e3500000 	cmp	r0, #0
  42f850:	03a09000 	moveq	r9, #0
  42f854:	e0088009 	and	r8, r8, r9
  42f858:	e3540000 	cmp	r4, #0
  42f85c:	0a00000c 	beq	42f894 <cvConvertScale+0x9c>
  42f860:	e1d420b2 	ldrh	r2, [r4, #2]
  42f864:	e59f382c 	ldr	r3, [pc, #2092]	; 430098 <cvConvertScale+0x8a0>
  42f868:	e1530802 	cmp	r3, r2, lsl #16
  42f86c:	1a000008 	bne	42f894 <cvConvertScale+0x9c>
  42f870:	e5943018 	ldr	r3, [r4, #24]
  42f874:	e3530000 	cmp	r3, #0
  42f878:	da000005 	ble	42f894 <cvConvertScale+0x9c>
  42f87c:	e5943014 	ldr	r3, [r4, #20]
  42f880:	e3530000 	cmp	r3, #0
  42f884:	da000002 	ble	42f894 <cvConvertScale+0x9c>
  42f888:	e5943010 	ldr	r3, [r4, #16]
  42f88c:	e3530000 	cmp	r3, #0
  42f890:	1a00002f 	bne	42f954 <cvConvertScale+0x15c>
  42f894:	e3540000 	cmp	r4, #0
  42f898:	0a000006 	beq	42f8b8 <cvConvertScale+0xc0>
  42f89c:	e1d420b2 	ldrh	r2, [r4, #2]
  42f8a0:	e59f37f4 	ldr	r3, [pc, #2036]	; 43009c <cvConvertScale+0x8a4>
  42f8a4:	e1530802 	cmp	r3, r2, lsl #16
  42f8a8:	1a000002 	bne	42f8b8 <cvConvertScale+0xc0>
  42f8ac:	e5943010 	ldr	r3, [r4, #16]
  42f8b0:	e3530000 	cmp	r3, #0
  42f8b4:	1a000028 	bne	42f95c <cvConvertScale+0x164>
  42f8b8:	e3a03000 	mov	r3, #0
  42f8bc:	e58d3148 	str	r3, [sp, #328]	; 0x148
  42f8c0:	e1a00004 	mov	r0, r4
  42f8c4:	e28d1030 	add	r1, sp, #48	; 0x30
  42f8c8:	e28d2f52 	add	r2, sp, #328	; 0x148
  42f8cc:	ebff7c96 	bl	40eb2c <cvGetMat>
  42f8d0:	e1a04000 	mov	r4, r0
  42f8d4:	ebff8c42 	bl	4129e4 <cvGetErrStatus>
  42f8d8:	e3500000 	cmp	r0, #0
  42f8dc:	aa00000b 	bge	42f910 <cvConvertScale+0x118>
  42f8e0:	e3a03e5f 	mov	r3, #1520	; 0x5f0
  42f8e4:	e58d3000 	str	r3, [sp]
  42f8e8:	e3e00000 	mvn	r0, #0
  42f8ec:	e59f17ac 	ldr	r1, [pc, #1964]	; 4300a0 <cvConvertScale+0x8a8>
  42f8f0:	e08f1001 	add	r1, pc, r1
  42f8f4:	e2811034 	add	r1, r1, #52	; 0x34
  42f8f8:	e59f27a4 	ldr	r2, [pc, #1956]	; 4300a4 <cvConvertScale+0x8ac>
  42f8fc:	e08f2002 	add	r2, pc, r2
  42f900:	e59f37a0 	ldr	r3, [pc, #1952]	; 4300a8 <cvConvertScale+0x8b0>
  42f904:	e08f3003 	add	r3, pc, r3
  42f908:	ebff8c66 	bl	412aa8 <cvError>
  42f90c:	ea0001dd 	b	430088 <cvConvertScale+0x890>
  42f910:	e59d3148 	ldr	r3, [sp, #328]	; 0x148
  42f914:	e3530000 	cmp	r3, #0
  42f918:	0a00000b 	beq	42f94c <cvConvertScale+0x154>
  42f91c:	e59f3788 	ldr	r3, [pc, #1928]	; 4300ac <cvConvertScale+0x8b4>
  42f920:	e58d3000 	str	r3, [sp]
  42f924:	e3e00017 	mvn	r0, #23
  42f928:	e59f1780 	ldr	r1, [pc, #1920]	; 4300b0 <cvConvertScale+0x8b8>
  42f92c:	e08f1001 	add	r1, pc, r1
  42f930:	e2811034 	add	r1, r1, #52	; 0x34
  42f934:	e59f2778 	ldr	r2, [pc, #1912]	; 4300b4 <cvConvertScale+0x8bc>
  42f938:	e08f2002 	add	r2, pc, r2
  42f93c:	e59f3774 	ldr	r3, [pc, #1908]	; 4300b8 <cvConvertScale+0x8c0>
  42f940:	e08f3003 	add	r3, pc, r3
  42f944:	ebff8c57 	bl	412aa8 <cvError>
  42f948:	ea0001ce 	b	430088 <cvConvertScale+0x890>
  42f94c:	e3a09000 	mov	r9, #0
  42f950:	ea000002 	b	42f960 <cvConvertScale+0x168>
  42f954:	e3a09000 	mov	r9, #0
  42f958:	ea000000 	b	42f960 <cvConvertScale+0x168>
  42f95c:	e3a09001 	mov	r9, #1
  42f960:	e3550000 	cmp	r5, #0
  42f964:	0a00000c 	beq	42f99c <cvConvertScale+0x1a4>
  42f968:	e1d520b2 	ldrh	r2, [r5, #2]
  42f96c:	e59f3724 	ldr	r3, [pc, #1828]	; 430098 <cvConvertScale+0x8a0>
  42f970:	e1530802 	cmp	r3, r2, lsl #16
  42f974:	1a000008 	bne	42f99c <cvConvertScale+0x1a4>
  42f978:	e5953018 	ldr	r3, [r5, #24]
  42f97c:	e3530000 	cmp	r3, #0
  42f980:	da000005 	ble	42f99c <cvConvertScale+0x1a4>
  42f984:	e5953014 	ldr	r3, [r5, #20]
  42f988:	e3530000 	cmp	r3, #0
  42f98c:	da000002 	ble	42f99c <cvConvertScale+0x1a4>
  42f990:	e5953010 	ldr	r3, [r5, #16]
  42f994:	e3530000 	cmp	r3, #0
  42f998:	1a00002e 	bne	42fa58 <cvConvertScale+0x260>
  42f99c:	e3550000 	cmp	r5, #0
  42f9a0:	0a000006 	beq	42f9c0 <cvConvertScale+0x1c8>
  42f9a4:	e1d520b2 	ldrh	r2, [r5, #2]
  42f9a8:	e59f36ec 	ldr	r3, [pc, #1772]	; 43009c <cvConvertScale+0x8a4>
  42f9ac:	e1530802 	cmp	r3, r2, lsl #16
  42f9b0:	1a000002 	bne	42f9c0 <cvConvertScale+0x1c8>
  42f9b4:	e5953010 	ldr	r3, [r5, #16]
  42f9b8:	e3530000 	cmp	r3, #0
  42f9bc:	1a000024 	bne	42fa54 <cvConvertScale+0x25c>
  42f9c0:	e3a03000 	mov	r3, #0
  42f9c4:	e58d3148 	str	r3, [sp, #328]	; 0x148
  42f9c8:	e1a00005 	mov	r0, r5
  42f9cc:	e28d104c 	add	r1, sp, #76	; 0x4c
  42f9d0:	e28d2f52 	add	r2, sp, #328	; 0x148
  42f9d4:	ebff7c54 	bl	40eb2c <cvGetMat>
  42f9d8:	e1a05000 	mov	r5, r0
  42f9dc:	ebff8c00 	bl	4129e4 <cvGetErrStatus>
  42f9e0:	e3500000 	cmp	r0, #0
  42f9e4:	aa00000b 	bge	42fa18 <cvConvertScale+0x220>
  42f9e8:	e59f36cc 	ldr	r3, [pc, #1740]	; 4300bc <cvConvertScale+0x8c4>
  42f9ec:	e58d3000 	str	r3, [sp]
  42f9f0:	e3e00000 	mvn	r0, #0
  42f9f4:	e59f16c4 	ldr	r1, [pc, #1732]	; 4300c0 <cvConvertScale+0x8c8>
  42f9f8:	e08f1001 	add	r1, pc, r1
  42f9fc:	e2811034 	add	r1, r1, #52	; 0x34
  42fa00:	e59f26bc 	ldr	r2, [pc, #1724]	; 4300c4 <cvConvertScale+0x8cc>
  42fa04:	e08f2002 	add	r2, pc, r2
  42fa08:	e59f36b8 	ldr	r3, [pc, #1720]	; 4300c8 <cvConvertScale+0x8d0>
  42fa0c:	e08f3003 	add	r3, pc, r3
  42fa10:	ebff8c24 	bl	412aa8 <cvError>
  42fa14:	ea00019b 	b	430088 <cvConvertScale+0x890>
  42fa18:	e59d3148 	ldr	r3, [sp, #328]	; 0x148
  42fa1c:	e3530000 	cmp	r3, #0
  42fa20:	0a00000c 	beq	42fa58 <cvConvertScale+0x260>
  42fa24:	e59f36a0 	ldr	r3, [pc, #1696]	; 4300cc <cvConvertScale+0x8d4>
  42fa28:	e58d3000 	str	r3, [sp]
  42fa2c:	e3e00017 	mvn	r0, #23
  42fa30:	e59f1698 	ldr	r1, [pc, #1688]	; 4300d0 <cvConvertScale+0x8d8>
  42fa34:	e08f1001 	add	r1, pc, r1
  42fa38:	e2811034 	add	r1, r1, #52	; 0x34
  42fa3c:	e59f2690 	ldr	r2, [pc, #1680]	; 4300d4 <cvConvertScale+0x8dc>
  42fa40:	e08f2002 	add	r2, pc, r2
  42fa44:	e59f368c 	ldr	r3, [pc, #1676]	; 4300d8 <cvConvertScale+0x8e0>
  42fa48:	e08f3003 	add	r3, pc, r3
  42fa4c:	ebff8c15 	bl	412aa8 <cvError>
  42fa50:	ea00018c 	b	430088 <cvConvertScale+0x890>
  42fa54:	e3a09001 	mov	r9, #1
  42fa58:	e3590000 	cmp	r9, #0
  42fa5c:	0a000099 	beq	42fcc8 <cvConvertScale+0x4d0>
  42fa60:	e58d4028 	str	r4, [sp, #40]	; 0x28
  42fa64:	e58d502c 	str	r5, [sp, #44]	; 0x2c
  42fa68:	e28d3068 	add	r3, sp, #104	; 0x68
  42fa6c:	e58d3000 	str	r3, [sp]
  42fa70:	e3a03001 	mov	r3, #1
  42fa74:	e58d3004 	str	r3, [sp, #4]
  42fa78:	e3a00002 	mov	r0, #2
  42fa7c:	e28d1028 	add	r1, sp, #40	; 0x28
  42fa80:	e3a02000 	mov	r2, #0
  42fa84:	e28d3f52 	add	r3, sp, #328	; 0x148
  42fa88:	ebff7e80 	bl	40f490 <cvInitNArrayIterator>
  42fa8c:	ebff8bd4 	bl	4129e4 <cvGetErrStatus>
  42fa90:	e3500000 	cmp	r0, #0
  42fa94:	aa00000b 	bge	42fac8 <cvConvertScale+0x2d0>
  42fa98:	e59f363c 	ldr	r3, [pc, #1596]	; 4300dc <cvConvertScale+0x8e4>
  42fa9c:	e58d3000 	str	r3, [sp]
  42faa0:	e3e00000 	mvn	r0, #0
  42faa4:	e59f1634 	ldr	r1, [pc, #1588]	; 4300e0 <cvConvertScale+0x8e8>
  42faa8:	e08f1001 	add	r1, pc, r1
  42faac:	e2811034 	add	r1, r1, #52	; 0x34
  42fab0:	e59f262c 	ldr	r2, [pc, #1580]	; 4300e4 <cvConvertScale+0x8ec>
  42fab4:	e08f2002 	add	r2, pc, r2
  42fab8:	e59f3628 	ldr	r3, [pc, #1576]	; 4300e8 <cvConvertScale+0x8f0>
  42fabc:	e08f3003 	add	r3, pc, r3
  42fac0:	ebff8bf8 	bl	412aa8 <cvError>
  42fac4:	ea00016f 	b	430088 <cvConvertScale+0x890>
  42fac8:	e59d3120 	ldr	r3, [sp, #288]	; 0x120
  42facc:	e5934000 	ldr	r4, [r3]
  42fad0:	e59d3124 	ldr	r3, [sp, #292]	; 0x124
  42fad4:	e5935000 	ldr	r5, [r3]
  42fad8:	e2043f7e 	and	r3, r4, #504	; 0x1f8
  42fadc:	e1a021c3 	asr	r2, r3, #3
  42fae0:	e59d3070 	ldr	r3, [sp, #112]	; 0x70
  42fae4:	e0233392 	mla	r3, r2, r3, r3
  42fae8:	e58d3070 	str	r3, [sp, #112]	; 0x70
  42faec:	e59f35f8 	ldr	r3, [pc, #1528]	; 4300ec <cvConvertScale+0x8f4>
  42faf0:	e08f3003 	add	r3, pc, r3
  42faf4:	e5133f8c 	ldr	r3, [r3, #-3980]	; 0xf8c
  42faf8:	e3530000 	cmp	r3, #0
  42fafc:	1a000009 	bne	42fb28 <cvConvertScale+0x330>
  42fb00:	e59f95e8 	ldr	r9, [pc, #1512]	; 4300f0 <cvConvertScale+0x8f8>
  42fb04:	e08f9009 	add	r9, pc, r9
  42fb08:	e2490d3e 	sub	r0, r9, #3968	; 0xf80
  42fb0c:	e2400008 	sub	r0, r0, #8
  42fb10:	ebffc43c 	bl	420c08 <_ZL20icvInitCvtToC1RTableP11CvFuncTable>
  42fb14:	e2490ef6 	sub	r0, r9, #3936	; 0xf60
  42fb18:	e2400008 	sub	r0, r0, #8
  42fb1c:	ebffc466 	bl	420cbc <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable>
  42fb20:	e3a03001 	mov	r3, #1
  42fb24:	e5093f8c 	str	r3, [r9, #-3980]	; 0xf8c
  42fb28:	e3580000 	cmp	r8, #0
  42fb2c:	0a00002f 	beq	42fbf0 <cvConvertScale+0x3f8>
  42fb30:	e2055007 	and	r5, r5, #7
  42fb34:	e59f35b8 	ldr	r3, [pc, #1464]	; 4300f4 <cvConvertScale+0x8fc>
  42fb38:	e08f3003 	add	r3, pc, r3
  42fb3c:	e0835105 	add	r5, r3, r5, lsl #2
  42fb40:	e5155f88 	ldr	r5, [r5, #-3976]	; 0xf88
  42fb44:	e3550000 	cmp	r5, #0
  42fb48:	1a00000b 	bne	42fb7c <cvConvertScale+0x384>
  42fb4c:	e59f35a4 	ldr	r3, [pc, #1444]	; 4300f8 <cvConvertScale+0x900>
  42fb50:	e58d3000 	str	r3, [sp]
  42fb54:	e3e000d1 	mvn	r0, #209	; 0xd1
  42fb58:	e59f159c 	ldr	r1, [pc, #1436]	; 4300fc <cvConvertScale+0x904>
  42fb5c:	e08f1001 	add	r1, pc, r1
  42fb60:	e2811034 	add	r1, r1, #52	; 0x34
  42fb64:	e59f2594 	ldr	r2, [pc, #1428]	; 430100 <cvConvertScale+0x908>
  42fb68:	e08f2002 	add	r2, pc, r2
  42fb6c:	e59f3590 	ldr	r3, [pc, #1424]	; 430104 <cvConvertScale+0x90c>
  42fb70:	e08f3003 	add	r3, pc, r3
  42fb74:	ebff8bcb 	bl	412aa8 <cvError>
  42fb78:	ea000142 	b	430088 <cvConvertScale+0x890>
  42fb7c:	e28d3070 	add	r3, sp, #112	; 0x70
  42fb80:	e8930003 	ldm	r3, {r0, r1}
  42fb84:	e88d0003 	stm	sp, {r0, r1}
  42fb88:	e58d4008 	str	r4, [sp, #8]
  42fb8c:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
  42fb90:	e3a01101 	mov	r1, #1073741824	; 0x40000000
  42fb94:	e59d207c 	ldr	r2, [sp, #124]	; 0x7c
  42fb98:	e1a03001 	mov	r3, r1
  42fb9c:	e1a0e00f 	mov	lr, pc
  42fba0:	e12fff15 	bx	r5
  42fba4:	e3500000 	cmp	r0, #0
  42fba8:	aa00000b 	bge	42fbdc <cvConvertScale+0x3e4>
  42fbac:	ebff8bf6 	bl	412b8c <cvErrorFromIppStatus>
  42fbb0:	e59f3550 	ldr	r3, [pc, #1360]	; 430108 <cvConvertScale+0x910>
  42fbb4:	e58d3000 	str	r3, [sp]
  42fbb8:	e59f154c 	ldr	r1, [pc, #1356]	; 43010c <cvConvertScale+0x914>
  42fbbc:	e08f1001 	add	r1, pc, r1
  42fbc0:	e2811034 	add	r1, r1, #52	; 0x34
  42fbc4:	e59f2544 	ldr	r2, [pc, #1348]	; 430110 <cvConvertScale+0x918>
  42fbc8:	e08f2002 	add	r2, pc, r2
  42fbcc:	e59f3540 	ldr	r3, [pc, #1344]	; 430114 <cvConvertScale+0x91c>
  42fbd0:	e08f3003 	add	r3, pc, r3
  42fbd4:	ebff8bb3 	bl	412aa8 <cvError>
  42fbd8:	ea00012a 	b	430088 <cvConvertScale+0x890>
  42fbdc:	e28d0068 	add	r0, sp, #104	; 0x68
  42fbe0:	ebff696c 	bl	40a198 <cvNextNArraySlice>
  42fbe4:	e3500000 	cmp	r0, #0
  42fbe8:	1affffe3 	bne	42fb7c <cvConvertScale+0x384>
  42fbec:	ea000125 	b	430088 <cvConvertScale+0x890>
  42fbf0:	e2055007 	and	r5, r5, #7
  42fbf4:	e59f351c 	ldr	r3, [pc, #1308]	; 430118 <cvConvertScale+0x920>
  42fbf8:	e08f3003 	add	r3, pc, r3
  42fbfc:	e0835105 	add	r5, r3, r5, lsl #2
  42fc00:	e5155f68 	ldr	r5, [r5, #-3944]	; 0xf68
  42fc04:	e3550000 	cmp	r5, #0
  42fc08:	1a00000b 	bne	42fc3c <cvConvertScale+0x444>
  42fc0c:	e59f3508 	ldr	r3, [pc, #1288]	; 43011c <cvConvertScale+0x924>
  42fc10:	e58d3000 	str	r3, [sp]
  42fc14:	e3e000d1 	mvn	r0, #209	; 0xd1
  42fc18:	e59f1500 	ldr	r1, [pc, #1280]	; 430120 <cvConvertScale+0x928>
  42fc1c:	e08f1001 	add	r1, pc, r1
  42fc20:	e2811034 	add	r1, r1, #52	; 0x34
  42fc24:	e59f24f8 	ldr	r2, [pc, #1272]	; 430124 <cvConvertScale+0x92c>
  42fc28:	e08f2002 	add	r2, pc, r2
  42fc2c:	e59f34f4 	ldr	r3, [pc, #1268]	; 430128 <cvConvertScale+0x930>
  42fc30:	e08f3003 	add	r3, pc, r3
  42fc34:	ebff8b9b 	bl	412aa8 <cvError>
  42fc38:	ea000112 	b	430088 <cvConvertScale+0x890>
  42fc3c:	e28d3070 	add	r3, sp, #112	; 0x70
  42fc40:	e8930003 	ldm	r3, {r0, r1}
  42fc44:	e88d0003 	stm	sp, {r0, r1}
  42fc48:	e58d6008 	str	r6, [sp, #8]
  42fc4c:	e58d700c 	str	r7, [sp, #12]
  42fc50:	e28d3e3a 	add	r3, sp, #928	; 0x3a0
  42fc54:	e893000c 	ldm	r3, {r2, r3}
  42fc58:	e58d2010 	str	r2, [sp, #16]
  42fc5c:	e58d3014 	str	r3, [sp, #20]
  42fc60:	e58d4018 	str	r4, [sp, #24]
  42fc64:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
  42fc68:	e3a01101 	mov	r1, #1073741824	; 0x40000000
  42fc6c:	e59d207c 	ldr	r2, [sp, #124]	; 0x7c
  42fc70:	e1a03001 	mov	r3, r1
  42fc74:	e1a0e00f 	mov	lr, pc
  42fc78:	e12fff15 	bx	r5
  42fc7c:	e3500000 	cmp	r0, #0
  42fc80:	aa00000b 	bge	42fcb4 <cvConvertScale+0x4bc>
  42fc84:	ebff8bc0 	bl	412b8c <cvErrorFromIppStatus>
  42fc88:	e59f349c 	ldr	r3, [pc, #1180]	; 43012c <cvConvertScale+0x934>
  42fc8c:	e58d3000 	str	r3, [sp]
  42fc90:	e59f1498 	ldr	r1, [pc, #1176]	; 430130 <cvConvertScale+0x938>
  42fc94:	e08f1001 	add	r1, pc, r1
  42fc98:	e2811034 	add	r1, r1, #52	; 0x34
  42fc9c:	e59f2490 	ldr	r2, [pc, #1168]	; 430134 <cvConvertScale+0x93c>
  42fca0:	e08f2002 	add	r2, pc, r2
  42fca4:	e59f348c 	ldr	r3, [pc, #1164]	; 430138 <cvConvertScale+0x940>
  42fca8:	e08f3003 	add	r3, pc, r3
  42fcac:	ebff8b7d 	bl	412aa8 <cvError>
  42fcb0:	ea0000f4 	b	430088 <cvConvertScale+0x890>
  42fcb4:	e28d0068 	add	r0, sp, #104	; 0x68
  42fcb8:	ebff6936 	bl	40a198 <cvNextNArraySlice>
  42fcbc:	e3500000 	cmp	r0, #0
  42fcc0:	1affffdd 	bne	42fc3c <cvConvertScale+0x444>
  42fcc4:	ea0000ef 	b	430088 <cvConvertScale+0x890>
  42fcc8:	e3580000 	cmp	r8, #0
  42fccc:	0a00000b 	beq	42fd00 <cvConvertScale+0x508>
  42fcd0:	e5942000 	ldr	r2, [r4]
  42fcd4:	e5953000 	ldr	r3, [r5]
  42fcd8:	e0233002 	eor	r3, r3, r2
  42fcdc:	e1b03b83 	lsls	r3, r3, #23
  42fce0:	1a000006 	bne	42fd00 <cvConvertScale+0x508>
  42fce4:	e1540005 	cmp	r4, r5
  42fce8:	0a0000e6 	beq	430088 <cvConvertScale+0x890>
  42fcec:	e1a00004 	mov	r0, r4
  42fcf0:	e1a01005 	mov	r1, r5
  42fcf4:	e3a02000 	mov	r2, #0
  42fcf8:	ebffb344 	bl	41ca10 <cvCopy>
  42fcfc:	ea0000e1 	b	430088 <cvConvertScale+0x890>
  42fd00:	e5943014 	ldr	r3, [r4, #20]
  42fd04:	e5952014 	ldr	r2, [r5, #20]
  42fd08:	e1530002 	cmp	r3, r2
  42fd0c:	1a000003 	bne	42fd20 <cvConvertScale+0x528>
  42fd10:	e5942018 	ldr	r2, [r4, #24]
  42fd14:	e5951018 	ldr	r1, [r5, #24]
  42fd18:	e1520001 	cmp	r2, r1
  42fd1c:	0a00000b 	beq	42fd50 <cvConvertScale+0x558>
  42fd20:	e59f3414 	ldr	r3, [pc, #1044]	; 43013c <cvConvertScale+0x944>
  42fd24:	e58d3000 	str	r3, [sp]
  42fd28:	e3e000d0 	mvn	r0, #208	; 0xd0
  42fd2c:	e59f140c 	ldr	r1, [pc, #1036]	; 430140 <cvConvertScale+0x948>
  42fd30:	e08f1001 	add	r1, pc, r1
  42fd34:	e2811034 	add	r1, r1, #52	; 0x34
  42fd38:	e59f2404 	ldr	r2, [pc, #1028]	; 430144 <cvConvertScale+0x94c>
  42fd3c:	e08f2002 	add	r2, pc, r2
  42fd40:	e59f3400 	ldr	r3, [pc, #1024]	; 430148 <cvConvertScale+0x950>
  42fd44:	e08f3003 	add	r3, pc, r3
  42fd48:	ebff8b56 	bl	412aa8 <cvError>
  42fd4c:	ea0000cd 	b	430088 <cvConvertScale+0x890>
  42fd50:	e58d2370 	str	r2, [sp, #880]	; 0x370
  42fd54:	e58d3374 	str	r3, [sp, #884]	; 0x374
  42fd58:	e28d1fde 	add	r1, sp, #888	; 0x378
  42fd5c:	e9110003 	ldmdb	r1, {r0, r1}
  42fd60:	e28dcf52 	add	ip, sp, #328	; 0x148
  42fd64:	e88c0003 	stm	ip, {r0, r1}
  42fd68:	e5941000 	ldr	r1, [r4]
  42fd6c:	e1a09b81 	lsl	r9, r1, #23
  42fd70:	e1a09ba9 	lsr	r9, r9, #23
  42fd74:	e5940004 	ldr	r0, [r4, #4]
  42fd78:	e58d0024 	str	r0, [sp, #36]	; 0x24
  42fd7c:	e595a004 	ldr	sl, [r5, #4]
  42fd80:	e5950000 	ldr	r0, [r5]
  42fd84:	e001c000 	and	ip, r1, r0
  42fd88:	e31c0901 	tst	ip, #16384	; 0x4000
  42fd8c:	0a000005 	beq	42fda8 <cvConvertScale+0x5b0>
  42fd90:	e0030392 	mul	r3, r2, r3
  42fd94:	e58d3148 	str	r3, [sp, #328]	; 0x148
  42fd98:	e3a03001 	mov	r3, #1
  42fd9c:	e58d314c 	str	r3, [sp, #332]	; 0x14c
  42fda0:	e3a0a101 	mov	sl, #1073741824	; 0x40000000
  42fda4:	e58da024 	str	sl, [sp, #36]	; 0x24
  42fda8:	e2013f7e 	and	r3, r1, #504	; 0x1f8
  42fdac:	e1a021c3 	asr	r2, r3, #3
  42fdb0:	e59d3148 	ldr	r3, [sp, #328]	; 0x148
  42fdb4:	e0233392 	mla	r3, r2, r3, r3
  42fdb8:	e58d3148 	str	r3, [sp, #328]	; 0x148
  42fdbc:	e0200001 	eor	r0, r0, r1
  42fdc0:	e1b02b80 	lsls	r2, r0, #23
  42fdc4:	1a000030 	bne	42fe8c <cvConvertScale+0x694>
  42fdc8:	e59d214c 	ldr	r2, [sp, #332]	; 0x14c
  42fdcc:	e3520001 	cmp	r2, #1
  42fdd0:	1a00002d 	bne	42fe8c <cvConvertScale+0x694>
  42fdd4:	e353000a 	cmp	r3, #10
  42fdd8:	ca00002b 	bgt	42fe8c <cvConvertScale+0x694>
  42fddc:	e2011007 	and	r1, r1, #7
  42fde0:	e3510005 	cmp	r1, #5
  42fde4:	1a000012 	bne	42fe34 <cvConvertScale+0x63c>
  42fde8:	e5949010 	ldr	r9, [r4, #16]
  42fdec:	e5958010 	ldr	r8, [r5, #16]
  42fdf0:	e59d4148 	ldr	r4, [sp, #328]	; 0x148
  42fdf4:	e2445107 	sub	r5, r4, #-1073741823	; 0xc0000001
  42fdf8:	e7990105 	ldr	r0, [r9, r5, lsl #2]
  42fdfc:	fa0007aa 	blx	431cac <__aeabi_f2d>
  42fe00:	e1a02006 	mov	r2, r6
  42fe04:	e1a03007 	mov	r3, r7
  42fe08:	fa0007d1 	blx	431d54 <__aeabi_dmul>
  42fe0c:	e28d3e3a 	add	r3, sp, #928	; 0x3a0
  42fe10:	e893000c 	ldm	r3, {r2, r3}
  42fe14:	fa0006f5 	blx	4319f0 <__adddf3>
  42fe18:	fa00092e 	blx	4322d8 <__aeabi_d2f>
  42fe1c:	e7880105 	str	r0, [r8, r5, lsl #2]
  42fe20:	e2444001 	sub	r4, r4, #1
  42fe24:	e58d4148 	str	r4, [sp, #328]	; 0x148
  42fe28:	e3540000 	cmp	r4, #0
  42fe2c:	1affffef 	bne	42fdf0 <cvConvertScale+0x5f8>
  42fe30:	ea000094 	b	430088 <cvConvertScale+0x890>
  42fe34:	e3510006 	cmp	r1, #6
  42fe38:	1a000013 	bne	42fe8c <cvConvertScale+0x694>
  42fe3c:	e5948010 	ldr	r8, [r4, #16]
  42fe40:	e5955010 	ldr	r5, [r5, #16]
  42fe44:	e59d4148 	ldr	r4, [sp, #328]	; 0x148
  42fe48:	e244321e 	sub	r3, r4, #-536870911	; 0xe0000001
  42fe4c:	e1a03183 	lsl	r3, r3, #3
  42fe50:	e0859003 	add	r9, r5, r3
  42fe54:	e0883003 	add	r3, r8, r3
  42fe58:	e1a00006 	mov	r0, r6
  42fe5c:	e1a01007 	mov	r1, r7
  42fe60:	e893000c 	ldm	r3, {r2, r3}
  42fe64:	fa0007ba 	blx	431d54 <__aeabi_dmul>
  42fe68:	e28d3e3a 	add	r3, sp, #928	; 0x3a0
  42fe6c:	e893000c 	ldm	r3, {r2, r3}
  42fe70:	fa0006de 	blx	4319f0 <__adddf3>
  42fe74:	e8890003 	stm	r9, {r0, r1}
  42fe78:	e2444001 	sub	r4, r4, #1
  42fe7c:	e58d4148 	str	r4, [sp, #328]	; 0x148
  42fe80:	e3540000 	cmp	r4, #0
  42fe84:	1affffee 	bne	42fe44 <cvConvertScale+0x64c>
  42fe88:	ea00007e 	b	430088 <cvConvertScale+0x890>
  42fe8c:	e59f32b8 	ldr	r3, [pc, #696]	; 43014c <cvConvertScale+0x954>
  42fe90:	e08f3003 	add	r3, pc, r3
  42fe94:	e5133f8c 	ldr	r3, [r3, #-3980]	; 0xf8c
  42fe98:	e3530000 	cmp	r3, #0
  42fe9c:	1a000009 	bne	42fec8 <cvConvertScale+0x6d0>
  42fea0:	e59fb2a8 	ldr	fp, [pc, #680]	; 430150 <cvConvertScale+0x958>
  42fea4:	e08fb00b 	add	fp, pc, fp
  42fea8:	e24b0d3e 	sub	r0, fp, #3968	; 0xf80
  42feac:	e2400008 	sub	r0, r0, #8
  42feb0:	ebffc354 	bl	420c08 <_ZL20icvInitCvtToC1RTableP11CvFuncTable>
  42feb4:	e24b0ef6 	sub	r0, fp, #3936	; 0xf60
  42feb8:	e2400008 	sub	r0, r0, #8
  42febc:	ebffc37e 	bl	420cbc <_ZL25icvInitCvtScaleToC1RTableP11CvFuncTable>
  42fec0:	e3a03001 	mov	r3, #1
  42fec4:	e50b3f8c 	str	r3, [fp, #-3980]	; 0xf8c
  42fec8:	e5953000 	ldr	r3, [r5]
  42fecc:	e5942000 	ldr	r2, [r4]
  42fed0:	e0222003 	eor	r2, r2, r3
  42fed4:	e3120f7e 	tst	r2, #504	; 0x1f8
  42fed8:	0a00000b 	beq	42ff0c <cvConvertScale+0x714>
  42fedc:	e59f3270 	ldr	r3, [pc, #624]	; 430154 <cvConvertScale+0x95c>
  42fee0:	e58d3000 	str	r3, [sp]
  42fee4:	e3e000cc 	mvn	r0, #204	; 0xcc
  42fee8:	e59f1268 	ldr	r1, [pc, #616]	; 430158 <cvConvertScale+0x960>
  42feec:	e08f1001 	add	r1, pc, r1
  42fef0:	e2811034 	add	r1, r1, #52	; 0x34
  42fef4:	e59f2260 	ldr	r2, [pc, #608]	; 43015c <cvConvertScale+0x964>
  42fef8:	e08f2002 	add	r2, pc, r2
  42fefc:	e59f325c 	ldr	r3, [pc, #604]	; 430160 <cvConvertScale+0x968>
  42ff00:	e08f3003 	add	r3, pc, r3
  42ff04:	ebff8ae7 	bl	412aa8 <cvError>
  42ff08:	ea00005e 	b	430088 <cvConvertScale+0x890>
  42ff0c:	e3580000 	cmp	r8, #0
  42ff10:	0a00002b 	beq	42ffc4 <cvConvertScale+0x7cc>
  42ff14:	e2033007 	and	r3, r3, #7
  42ff18:	e59f2244 	ldr	r2, [pc, #580]	; 430164 <cvConvertScale+0x96c>
  42ff1c:	e08f2002 	add	r2, pc, r2
  42ff20:	e0823103 	add	r3, r2, r3, lsl #2
  42ff24:	e513cf88 	ldr	ip, [r3, #-3976]	; 0xf88
  42ff28:	e35c0000 	cmp	ip, #0
  42ff2c:	1a00000b 	bne	42ff60 <cvConvertScale+0x768>
  42ff30:	e3a03d1a 	mov	r3, #1664	; 0x680
  42ff34:	e58d3000 	str	r3, [sp]
  42ff38:	e3e000d1 	mvn	r0, #209	; 0xd1
  42ff3c:	e59f1224 	ldr	r1, [pc, #548]	; 430168 <cvConvertScale+0x970>
  42ff40:	e08f1001 	add	r1, pc, r1
  42ff44:	e2811034 	add	r1, r1, #52	; 0x34
  42ff48:	e59f221c 	ldr	r2, [pc, #540]	; 43016c <cvConvertScale+0x974>
  42ff4c:	e08f2002 	add	r2, pc, r2
  42ff50:	e59f3218 	ldr	r3, [pc, #536]	; 430170 <cvConvertScale+0x978>
  42ff54:	e08f3003 	add	r3, pc, r3
  42ff58:	ebff8ad2 	bl	412aa8 <cvError>
  42ff5c:	ea000049 	b	430088 <cvConvertScale+0x890>
  42ff60:	e594e010 	ldr	lr, [r4, #16]
  42ff64:	e5952010 	ldr	r2, [r5, #16]
  42ff68:	e28d3f52 	add	r3, sp, #328	; 0x148
  42ff6c:	e8930003 	ldm	r3, {r0, r1}
  42ff70:	e88d0003 	stm	sp, {r0, r1}
  42ff74:	e58d9008 	str	r9, [sp, #8]
  42ff78:	e1a0000e 	mov	r0, lr
  42ff7c:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  42ff80:	e1a0300a 	mov	r3, sl
  42ff84:	e1a0e00f 	mov	lr, pc
  42ff88:	e12fff1c 	bx	ip
  42ff8c:	e3500000 	cmp	r0, #0
  42ff90:	aa00003c 	bge	430088 <cvConvertScale+0x890>
  42ff94:	ebff8afc 	bl	412b8c <cvErrorFromIppStatus>
  42ff98:	e59f31d4 	ldr	r3, [pc, #468]	; 430174 <cvConvertScale+0x97c>
  42ff9c:	e58d3000 	str	r3, [sp]
  42ffa0:	e59f11d0 	ldr	r1, [pc, #464]	; 430178 <cvConvertScale+0x980>
  42ffa4:	e08f1001 	add	r1, pc, r1
  42ffa8:	e2811034 	add	r1, r1, #52	; 0x34
  42ffac:	e59f21c8 	ldr	r2, [pc, #456]	; 43017c <cvConvertScale+0x984>
  42ffb0:	e08f2002 	add	r2, pc, r2
  42ffb4:	e59f31c4 	ldr	r3, [pc, #452]	; 430180 <cvConvertScale+0x988>
  42ffb8:	e08f3003 	add	r3, pc, r3
  42ffbc:	ebff8ab9 	bl	412aa8 <cvError>
  42ffc0:	ea000030 	b	430088 <cvConvertScale+0x890>
  42ffc4:	e2033007 	and	r3, r3, #7
  42ffc8:	e59f21b4 	ldr	r2, [pc, #436]	; 430184 <cvConvertScale+0x98c>
  42ffcc:	e08f2002 	add	r2, pc, r2
  42ffd0:	e0823103 	add	r3, r2, r3, lsl #2
  42ffd4:	e513cf68 	ldr	ip, [r3, #-3944]	; 0xf68
  42ffd8:	e35c0000 	cmp	ip, #0
  42ffdc:	1a00000b 	bne	430010 <cvConvertScale+0x818>
  42ffe0:	e59f31a0 	ldr	r3, [pc, #416]	; 430188 <cvConvertScale+0x990>
  42ffe4:	e58d3000 	str	r3, [sp]
  42ffe8:	e3e000d1 	mvn	r0, #209	; 0xd1
  42ffec:	e59f1198 	ldr	r1, [pc, #408]	; 43018c <cvConvertScale+0x994>
  42fff0:	e08f1001 	add	r1, pc, r1
  42fff4:	e2811034 	add	r1, r1, #52	; 0x34
  42fff8:	e59f2190 	ldr	r2, [pc, #400]	; 430190 <cvConvertScale+0x998>
  42fffc:	e08f2002 	add	r2, pc, r2
  430000:	e59f318c 	ldr	r3, [pc, #396]	; 430194 <cvConvertScale+0x99c>
  430004:	e08f3003 	add	r3, pc, r3
  430008:	ebff8aa6 	bl	412aa8 <cvError>
  43000c:	ea00001d 	b	430088 <cvConvertScale+0x890>
  430010:	e594e010 	ldr	lr, [r4, #16]
  430014:	e5952010 	ldr	r2, [r5, #16]
  430018:	e28d3f52 	add	r3, sp, #328	; 0x148
  43001c:	e8930003 	ldm	r3, {r0, r1}
  430020:	e88d0003 	stm	sp, {r0, r1}
  430024:	e58d6008 	str	r6, [sp, #8]
  430028:	e58d700c 	str	r7, [sp, #12]
  43002c:	e28d4e3a 	add	r4, sp, #928	; 0x3a0
  430030:	e8940018 	ldm	r4, {r3, r4}
  430034:	e58d3010 	str	r3, [sp, #16]
  430038:	e58d4014 	str	r4, [sp, #20]
  43003c:	e58d9018 	str	r9, [sp, #24]
  430040:	e1a0000e 	mov	r0, lr
  430044:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  430048:	e1a0300a 	mov	r3, sl
  43004c:	e1a0e00f 	mov	lr, pc
  430050:	e12fff1c 	bx	ip
  430054:	e3500000 	cmp	r0, #0
  430058:	aa00000a 	bge	430088 <cvConvertScale+0x890>
  43005c:	ebff8aca 	bl	412b8c <cvErrorFromIppStatus>
  430060:	e59f3130 	ldr	r3, [pc, #304]	; 430198 <cvConvertScale+0x9a0>
  430064:	e58d3000 	str	r3, [sp]
  430068:	e59f112c 	ldr	r1, [pc, #300]	; 43019c <cvConvertScale+0x9a4>
  43006c:	e08f1001 	add	r1, pc, r1
  430070:	e2811034 	add	r1, r1, #52	; 0x34
  430074:	e59f2124 	ldr	r2, [pc, #292]	; 4301a0 <cvConvertScale+0x9a8>
  430078:	e08f2002 	add	r2, pc, r2
  43007c:	e59f3120 	ldr	r3, [pc, #288]	; 4301a4 <cvConvertScale+0x9ac>
  430080:	e08f3003 	add	r3, pc, r3
  430084:	ebff8a87 	bl	412aa8 <cvError>
  430088:	e28ddfdf 	add	sp, sp, #892	; 0x37c
  43008c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  430090:	e12fff1e 	bx	lr
  430094:	3ff00000 	.word	0x3ff00000
  430098:	42420000 	.word	0x42420000
  43009c:	42430000 	.word	0x42430000
  4300a0:	1fbd14fc 	.word	0x1fbd14fc
  4300a4:	0000d6d4 	.word	0x0000d6d4
  4300a8:	000107b8 	.word	0x000107b8
  4300ac:	000005f3 	.word	0x000005f3
  4300b0:	1fbd14c0 	.word	0x1fbd14c0
  4300b4:	00010ad8 	.word	0x00010ad8
  4300b8:	0001077c 	.word	0x0001077c
  4300bc:	000005fe 	.word	0x000005fe
  4300c0:	1fbd13f4 	.word	0x1fbd13f4
  4300c4:	0000d5cc 	.word	0x0000d5cc
  4300c8:	000106b0 	.word	0x000106b0
  4300cc:	00000601 	.word	0x00000601
  4300d0:	1fbd13b8 	.word	0x1fbd13b8
  4300d4:	000109d0 	.word	0x000109d0
  4300d8:	00010674 	.word	0x00010674
  4300dc:	0000060c 	.word	0x0000060c
  4300e0:	1fbd1344 	.word	0x1fbd1344
  4300e4:	0000d51c 	.word	0x0000d51c
  4300e8:	00010600 	.word	0x00010600
  4300ec:	1fbd4308 	.word	0x1fbd4308
  4300f0:	1fbd42f4 	.word	0x1fbd42f4
  4300f4:	1fbd42c0 	.word	0x1fbd42c0
  4300f8:	0000061d 	.word	0x0000061d
  4300fc:	1fbd1290 	.word	0x1fbd1290
  430100:	000108a8 	.word	0x000108a8
  430104:	0001054c 	.word	0x0001054c
  430108:	00000623 	.word	0x00000623
  43010c:	1fbd1230 	.word	0x1fbd1230
  430110:	0001017c 	.word	0x0001017c
  430114:	000104ec 	.word	0x000104ec
  430118:	1fbd4200 	.word	0x1fbd4200
  43011c:	0000062c 	.word	0x0000062c
  430120:	1fbd11d0 	.word	0x1fbd11d0
  430124:	000107e8 	.word	0x000107e8
  430128:	0001048c 	.word	0x0001048c
  43012c:	00000632 	.word	0x00000632
  430130:	1fbd1158 	.word	0x1fbd1158
  430134:	000100a4 	.word	0x000100a4
  430138:	00010414 	.word	0x00010414
  43013c:	00000641 	.word	0x00000641
  430140:	1fbd10bc 	.word	0x1fbd10bc
  430144:	000106d4 	.word	0x000106d4
  430148:	00010378 	.word	0x00010378
  43014c:	1fbd3f68 	.word	0x1fbd3f68
  430150:	1fbd3f54 	.word	0x1fbd3f54
  430154:	00000679 	.word	0x00000679
  430158:	1fbd0f00 	.word	0x1fbd0f00
  43015c:	00010518 	.word	0x00010518
  430160:	000101bc 	.word	0x000101bc
  430164:	1fbd3edc 	.word	0x1fbd3edc
  430168:	1fbd0eac 	.word	0x1fbd0eac
  43016c:	000104c4 	.word	0x000104c4
  430170:	00010168 	.word	0x00010168
  430174:	00000683 	.word	0x00000683
  430178:	1fbd0e48 	.word	0x1fbd0e48
  43017c:	0000fd94 	.word	0x0000fd94
  430180:	00010104 	.word	0x00010104
  430184:	1fbd3e2c 	.word	0x1fbd3e2c
  430188:	0000068b 	.word	0x0000068b
  43018c:	1fbd0dfc 	.word	0x1fbd0dfc
  430190:	00010414 	.word	0x00010414
  430194:	000100b8 	.word	0x000100b8
  430198:	0000068f 	.word	0x0000068f
  43019c:	1fbd0d80 	.word	0x1fbd0d80
  4301a0:	0000fccc 	.word	0x0000fccc
  4301a4:	0001003c 	.word	0x0001003c

004301a8 <_Z13icvCvt_32f64fPKfPdi>:
  4301a8:	e92d4008 	push	{r3, lr}
  4301ac:	e59f301c 	ldr	r3, [pc, #28]	; 4301d0 <_Z13icvCvt_32f64fPKfPdi+0x28>
  4301b0:	e08f3003 	add	r3, pc, r3
  4301b4:	e59fc018 	ldr	ip, [pc, #24]	; 4301d4 <_Z13icvCvt_32f64fPKfPdi+0x2c>
  4301b8:	e793300c 	ldr	r3, [r3, ip]
  4301bc:	e593c000 	ldr	ip, [r3]
  4301c0:	e1a0e00f 	mov	lr, pc
  4301c4:	e12fff1c 	bx	ip
  4301c8:	e8bd4008 	pop	{r3, lr}
  4301cc:	e12fff1e 	bx	lr
  4301d0:	00010e84 	.word	0x00010e84
  4301d4:	00000028 	.word	0x00000028

004301d8 <_Z13icvCvt_64f32fPKdPfi>:
  4301d8:	e92d4008 	push	{r3, lr}
  4301dc:	e59f301c 	ldr	r3, [pc, #28]	; 430200 <_Z13icvCvt_64f32fPKdPfi+0x28>
  4301e0:	e08f3003 	add	r3, pc, r3
  4301e4:	e59fc018 	ldr	ip, [pc, #24]	; 430204 <_Z13icvCvt_64f32fPKdPfi+0x2c>
  4301e8:	e793300c 	ldr	r3, [r3, ip]
  4301ec:	e593c000 	ldr	ip, [r3]
  4301f0:	e1a0e00f 	mov	lr, pc
  4301f4:	e12fff1c 	bx	ip
  4301f8:	e8bd4008 	pop	{r3, lr}
  4301fc:	e12fff1e 	bx	lr
  430200:	00010e54 	.word	0x00010e54
  430204:	00000130 	.word	0x00000130

00430208 <_Z12icvScale_32fPKfPfiff>:
  430208:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43020c:	e1a05000 	mov	r5, r0
  430210:	e1a06001 	mov	r6, r1
  430214:	e1a0a002 	mov	sl, r2
  430218:	e1a07003 	mov	r7, r3
  43021c:	e3a04000 	mov	r4, #0
  430220:	ea00001d 	b	43029c <_Z12icvScale_32fPKfPfiff+0x94>
  430224:	e1a00007 	mov	r0, r7
  430228:	e7951104 	ldr	r1, [r5, r4, lsl #2]
  43022c:	fa0008d8 	blx	432594 <__aeabi_fmul>
  430230:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  430234:	fa000852 	blx	432384 <__addsf3>
  430238:	e1a09000 	mov	r9, r0
  43023c:	e2848001 	add	r8, r4, #1
  430240:	e1a00007 	mov	r0, r7
  430244:	e7951108 	ldr	r1, [r5, r8, lsl #2]
  430248:	fa0008d1 	blx	432594 <__aeabi_fmul>
  43024c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  430250:	fa00084b 	blx	432384 <__addsf3>
  430254:	e7869104 	str	r9, [r6, r4, lsl #2]
  430258:	e7860108 	str	r0, [r6, r8, lsl #2]
  43025c:	e2849002 	add	r9, r4, #2
  430260:	e1a00007 	mov	r0, r7
  430264:	e7951109 	ldr	r1, [r5, r9, lsl #2]
  430268:	fa0008c9 	blx	432594 <__aeabi_fmul>
  43026c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  430270:	fa000843 	blx	432384 <__addsf3>
  430274:	e1a0b000 	mov	fp, r0
  430278:	e2848003 	add	r8, r4, #3
  43027c:	e1a00007 	mov	r0, r7
  430280:	e7951108 	ldr	r1, [r5, r8, lsl #2]
  430284:	fa0008c2 	blx	432594 <__aeabi_fmul>
  430288:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  43028c:	fa00083c 	blx	432384 <__addsf3>
  430290:	e786b109 	str	fp, [r6, r9, lsl #2]
  430294:	e7860108 	str	r0, [r6, r8, lsl #2]
  430298:	e2844004 	add	r4, r4, #4
  43029c:	e24a3004 	sub	r3, sl, #4
  4302a0:	e1530004 	cmp	r3, r4
  4302a4:	aaffffde 	bge	430224 <_Z12icvScale_32fPKfPfiff+0x1c>
  4302a8:	ea000006 	b	4302c8 <_Z12icvScale_32fPKfPfiff+0xc0>
  4302ac:	e1a00007 	mov	r0, r7
  4302b0:	e7951104 	ldr	r1, [r5, r4, lsl #2]
  4302b4:	fa0008b6 	blx	432594 <__aeabi_fmul>
  4302b8:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  4302bc:	fa000830 	blx	432384 <__addsf3>
  4302c0:	e7860104 	str	r0, [r6, r4, lsl #2]
  4302c4:	e2844001 	add	r4, r4, #1
  4302c8:	e154000a 	cmp	r4, sl
  4302cc:	bafffff6 	blt	4302ac <_Z12icvScale_32fPKfPfiff+0xa4>
  4302d0:	e3a00000 	mov	r0, #0
  4302d4:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4302d8:	e12fff1e 	bx	lr

004302dc <_Z12icvScale_64fPKdPdidd>:
  4302dc:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4302e0:	e1a05000 	mov	r5, r0
  4302e4:	e1a08001 	mov	r8, r1
  4302e8:	e1a09002 	mov	r9, r2
  4302ec:	e3a04000 	mov	r4, #0
  4302f0:	ea000033 	b	4303c4 <_Z12icvScale_64fPKdPdidd+0xe8>
  4302f4:	e1a0b184 	lsl	fp, r4, #3
  4302f8:	e085300b 	add	r3, r5, fp
  4302fc:	e28d1028 	add	r1, sp, #40	; 0x28
  430300:	e8910003 	ldm	r1, {r0, r1}
  430304:	e893000c 	ldm	r3, {r2, r3}
  430308:	fa000691 	blx	431d54 <__aeabi_dmul>
  43030c:	e28d3030 	add	r3, sp, #48	; 0x30
  430310:	e893000c 	ldm	r3, {r2, r3}
  430314:	fa0005b5 	blx	4319f0 <__adddf3>
  430318:	e1a06000 	mov	r6, r0
  43031c:	e1a07001 	mov	r7, r1
  430320:	e284a001 	add	sl, r4, #1
  430324:	e1a0a18a 	lsl	sl, sl, #3
  430328:	e085300a 	add	r3, r5, sl
  43032c:	e28d1028 	add	r1, sp, #40	; 0x28
  430330:	e8910003 	ldm	r1, {r0, r1}
  430334:	e893000c 	ldm	r3, {r2, r3}
  430338:	fa000685 	blx	431d54 <__aeabi_dmul>
  43033c:	e28d3030 	add	r3, sp, #48	; 0x30
  430340:	e893000c 	ldm	r3, {r2, r3}
  430344:	fa0005a9 	blx	4319f0 <__adddf3>
  430348:	e088b00b 	add	fp, r8, fp
  43034c:	e88b00c0 	stm	fp, {r6, r7}
  430350:	e088a00a 	add	sl, r8, sl
  430354:	e88a0003 	stm	sl, {r0, r1}
  430358:	e284b002 	add	fp, r4, #2
  43035c:	e1a0b18b 	lsl	fp, fp, #3
  430360:	e085300b 	add	r3, r5, fp
  430364:	e28d1028 	add	r1, sp, #40	; 0x28
  430368:	e8910003 	ldm	r1, {r0, r1}
  43036c:	e893000c 	ldm	r3, {r2, r3}
  430370:	fa000677 	blx	431d54 <__aeabi_dmul>
  430374:	e28d3030 	add	r3, sp, #48	; 0x30
  430378:	e893000c 	ldm	r3, {r2, r3}
  43037c:	fa00059b 	blx	4319f0 <__adddf3>
  430380:	e1a06000 	mov	r6, r0
  430384:	e1a07001 	mov	r7, r1
  430388:	e284a003 	add	sl, r4, #3
  43038c:	e1a0a18a 	lsl	sl, sl, #3
  430390:	e085300a 	add	r3, r5, sl
  430394:	e28d1028 	add	r1, sp, #40	; 0x28
  430398:	e8910003 	ldm	r1, {r0, r1}
  43039c:	e893000c 	ldm	r3, {r2, r3}
  4303a0:	fa00066b 	blx	431d54 <__aeabi_dmul>
  4303a4:	e28d3030 	add	r3, sp, #48	; 0x30
  4303a8:	e893000c 	ldm	r3, {r2, r3}
  4303ac:	fa00058f 	blx	4319f0 <__adddf3>
  4303b0:	e088b00b 	add	fp, r8, fp
  4303b4:	e88b00c0 	stm	fp, {r6, r7}
  4303b8:	e088a00a 	add	sl, r8, sl
  4303bc:	e88a0003 	stm	sl, {r0, r1}
  4303c0:	e2844004 	add	r4, r4, #4
  4303c4:	e2493004 	sub	r3, r9, #4
  4303c8:	e1530004 	cmp	r3, r4
  4303cc:	aaffffc8 	bge	4302f4 <_Z12icvScale_64fPKdPdidd+0x18>
  4303d0:	e28d7030 	add	r7, sp, #48	; 0x30
  4303d4:	e89700c0 	ldm	r7, {r6, r7}
  4303d8:	ea00000b 	b	43040c <_Z12icvScale_64fPKdPdidd+0x130>
  4303dc:	e1a03184 	lsl	r3, r4, #3
  4303e0:	e088a003 	add	sl, r8, r3
  4303e4:	e0853003 	add	r3, r5, r3
  4303e8:	e28d1028 	add	r1, sp, #40	; 0x28
  4303ec:	e8910003 	ldm	r1, {r0, r1}
  4303f0:	e893000c 	ldm	r3, {r2, r3}
  4303f4:	fa000656 	blx	431d54 <__aeabi_dmul>
  4303f8:	e1a02006 	mov	r2, r6
  4303fc:	e1a03007 	mov	r3, r7
  430400:	fa00057a 	blx	4319f0 <__adddf3>
  430404:	e88a0003 	stm	sl, {r0, r1}
  430408:	e2844001 	add	r4, r4, #1
  43040c:	e1540009 	cmp	r4, r9
  430410:	bafffff1 	blt	4303dc <_Z12icvScale_64fPKdPdidd+0x100>
  430414:	e3a00000 	mov	r0, #0
  430418:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43041c:	e12fff1e 	bx	lr

00430420 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_>:
  430420:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  430424:	e59de020 	ldr	lr, [sp, #32]
  430428:	e59d6018 	ldr	r6, [sp, #24]
  43042c:	ea00001d 	b	4304a8 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_+0x88>
  430430:	e7d0400c 	ldrb	r4, [r0, ip]
  430434:	e7de7004 	ldrb	r7, [lr, r4]
  430438:	e28c4001 	add	r4, ip, #1
  43043c:	e7d05004 	ldrb	r5, [r0, r4]
  430440:	e7de5005 	ldrb	r5, [lr, r5]
  430444:	e7c2700c 	strb	r7, [r2, ip]
  430448:	e7c25004 	strb	r5, [r2, r4]
  43044c:	e28c5002 	add	r5, ip, #2
  430450:	e7d04005 	ldrb	r4, [r0, r5]
  430454:	e7de8004 	ldrb	r8, [lr, r4]
  430458:	e28c4003 	add	r4, ip, #3
  43045c:	e7d07004 	ldrb	r7, [r0, r4]
  430460:	e7de7007 	ldrb	r7, [lr, r7]
  430464:	e7c28005 	strb	r8, [r2, r5]
  430468:	e7c27004 	strb	r7, [r2, r4]
  43046c:	e28cc004 	add	ip, ip, #4
  430470:	ea000000 	b	430478 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_+0x58>
  430474:	e3a0c000 	mov	ip, #0
  430478:	e2464004 	sub	r4, r6, #4
  43047c:	e154000c 	cmp	r4, ip
  430480:	aaffffea 	bge	430430 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_+0x10>
  430484:	ea000003 	b	430498 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_+0x78>
  430488:	e7d0400c 	ldrb	r4, [r0, ip]
  43048c:	e7de4004 	ldrb	r4, [lr, r4]
  430490:	e7c2400c 	strb	r4, [r2, ip]
  430494:	e28cc001 	add	ip, ip, #1
  430498:	e15c0006 	cmp	ip, r6
  43049c:	bafffff9 	blt	430488 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_+0x68>
  4304a0:	e0800001 	add	r0, r0, r1
  4304a4:	e0822003 	add	r2, r2, r3
  4304a8:	e59dc01c 	ldr	ip, [sp, #28]
  4304ac:	e24c4001 	sub	r4, ip, #1
  4304b0:	e58d401c 	str	r4, [sp, #28]
  4304b4:	e35c0000 	cmp	ip, #0
  4304b8:	1affffed 	bne	430474 <_Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_+0x54>
  4304bc:	e3a00000 	mov	r0, #0
  4304c0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  4304c4:	e12fff1e 	bx	lr

004304c8 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt>:
  4304c8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  4304cc:	e59de020 	ldr	lr, [sp, #32]
  4304d0:	e59d6018 	ldr	r6, [sp, #24]
  4304d4:	e1a030a3 	lsr	r3, r3, #1
  4304d8:	ea000027 	b	43057c <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt+0xb4>
  4304dc:	e7d0400c 	ldrb	r4, [r0, ip]
  4304e0:	e1a04084 	lsl	r4, r4, #1
  4304e4:	e19e80b4 	ldrh	r8, [lr, r4]
  4304e8:	e28c4001 	add	r4, ip, #1
  4304ec:	e7d05004 	ldrb	r5, [r0, r4]
  4304f0:	e1a05085 	lsl	r5, r5, #1
  4304f4:	e19e50b5 	ldrh	r5, [lr, r5]
  4304f8:	e1a0708c 	lsl	r7, ip, #1
  4304fc:	e18280b7 	strh	r8, [r2, r7]
  430500:	e1a04084 	lsl	r4, r4, #1
  430504:	e18250b4 	strh	r5, [r2, r4]
  430508:	e28c5002 	add	r5, ip, #2
  43050c:	e7d04005 	ldrb	r4, [r0, r5]
  430510:	e1a04084 	lsl	r4, r4, #1
  430514:	e19e80b4 	ldrh	r8, [lr, r4]
  430518:	e28c4003 	add	r4, ip, #3
  43051c:	e7d07004 	ldrb	r7, [r0, r4]
  430520:	e1a07087 	lsl	r7, r7, #1
  430524:	e19e70b7 	ldrh	r7, [lr, r7]
  430528:	e1a05085 	lsl	r5, r5, #1
  43052c:	e18280b5 	strh	r8, [r2, r5]
  430530:	e1a04084 	lsl	r4, r4, #1
  430534:	e18270b4 	strh	r7, [r2, r4]
  430538:	e28cc004 	add	ip, ip, #4
  43053c:	ea000000 	b	430544 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt+0x7c>
  430540:	e3a0c000 	mov	ip, #0
  430544:	e2464004 	sub	r4, r6, #4
  430548:	e154000c 	cmp	r4, ip
  43054c:	aaffffe2 	bge	4304dc <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt+0x14>
  430550:	ea000005 	b	43056c <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt+0xa4>
  430554:	e7d0400c 	ldrb	r4, [r0, ip]
  430558:	e1a04084 	lsl	r4, r4, #1
  43055c:	e19e50b4 	ldrh	r5, [lr, r4]
  430560:	e1a0408c 	lsl	r4, ip, #1
  430564:	e18250b4 	strh	r5, [r2, r4]
  430568:	e28cc001 	add	ip, ip, #1
  43056c:	e15c0006 	cmp	ip, r6
  430570:	bafffff7 	blt	430554 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt+0x8c>
  430574:	e0800001 	add	r0, r0, r1
  430578:	e0822083 	add	r2, r2, r3, lsl #1
  43057c:	e59dc01c 	ldr	ip, [sp, #28]
  430580:	e24c4001 	sub	r4, ip, #1
  430584:	e58d401c 	str	r4, [sp, #28]
  430588:	e35c0000 	cmp	ip, #0
  43058c:	1affffeb 	bne	430540 <_Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt+0x78>
  430590:	e3a00000 	mov	r0, #0
  430594:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  430598:	e12fff1e 	bx	lr

0043059c <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi>:
  43059c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  4305a0:	e59de020 	ldr	lr, [sp, #32]
  4305a4:	e59d6018 	ldr	r6, [sp, #24]
  4305a8:	e1a03123 	lsr	r3, r3, #2
  4305ac:	ea00001d 	b	430628 <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi+0x8c>
  4305b0:	e7d0400c 	ldrb	r4, [r0, ip]
  4305b4:	e79e7104 	ldr	r7, [lr, r4, lsl #2]
  4305b8:	e28c4001 	add	r4, ip, #1
  4305bc:	e7d05004 	ldrb	r5, [r0, r4]
  4305c0:	e79e5105 	ldr	r5, [lr, r5, lsl #2]
  4305c4:	e782710c 	str	r7, [r2, ip, lsl #2]
  4305c8:	e7825104 	str	r5, [r2, r4, lsl #2]
  4305cc:	e28c5002 	add	r5, ip, #2
  4305d0:	e7d04005 	ldrb	r4, [r0, r5]
  4305d4:	e79e8104 	ldr	r8, [lr, r4, lsl #2]
  4305d8:	e28c4003 	add	r4, ip, #3
  4305dc:	e7d07004 	ldrb	r7, [r0, r4]
  4305e0:	e79e7107 	ldr	r7, [lr, r7, lsl #2]
  4305e4:	e7828105 	str	r8, [r2, r5, lsl #2]
  4305e8:	e7827104 	str	r7, [r2, r4, lsl #2]
  4305ec:	e28cc004 	add	ip, ip, #4
  4305f0:	ea000000 	b	4305f8 <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi+0x5c>
  4305f4:	e3a0c000 	mov	ip, #0
  4305f8:	e2464004 	sub	r4, r6, #4
  4305fc:	e154000c 	cmp	r4, ip
  430600:	aaffffea 	bge	4305b0 <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi+0x14>
  430604:	ea000003 	b	430618 <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi+0x7c>
  430608:	e7d0400c 	ldrb	r4, [r0, ip]
  43060c:	e79e4104 	ldr	r4, [lr, r4, lsl #2]
  430610:	e782410c 	str	r4, [r2, ip, lsl #2]
  430614:	e28cc001 	add	ip, ip, #1
  430618:	e15c0006 	cmp	ip, r6
  43061c:	bafffff9 	blt	430608 <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi+0x6c>
  430620:	e0800001 	add	r0, r0, r1
  430624:	e0822103 	add	r2, r2, r3, lsl #2
  430628:	e59dc01c 	ldr	ip, [sp, #28]
  43062c:	e24c4001 	sub	r4, ip, #1
  430630:	e58d401c 	str	r4, [sp, #28]
  430634:	e35c0000 	cmp	ip, #0
  430638:	1affffed 	bne	4305f4 <_Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi+0x58>
  43063c:	e3a00000 	mov	r0, #0
  430640:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  430644:	e12fff1e 	bx	lr

00430648 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd>:
  430648:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  43064c:	e1a08001 	mov	r8, r1
  430650:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
  430654:	e59de020 	ldr	lr, [sp, #32]
  430658:	e1a031a3 	lsr	r3, r3, #3
  43065c:	ea000027 	b	430700 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd+0xb8>
  430660:	e7d04001 	ldrb	r4, [r0, r1]
  430664:	e08c4184 	add	r4, ip, r4, lsl #3
  430668:	e89400c0 	ldm	r4, {r6, r7}
  43066c:	e2819001 	add	r9, r1, #1
  430670:	e7d04009 	ldrb	r4, [r0, r9]
  430674:	e08c4184 	add	r4, ip, r4, lsl #3
  430678:	e8940030 	ldm	r4, {r4, r5}
  43067c:	e082a181 	add	sl, r2, r1, lsl #3
  430680:	e88a00c0 	stm	sl, {r6, r7}
  430684:	e0829189 	add	r9, r2, r9, lsl #3
  430688:	e8890030 	stm	r9, {r4, r5}
  43068c:	e281a002 	add	sl, r1, #2
  430690:	e7d0400a 	ldrb	r4, [r0, sl]
  430694:	e08c4184 	add	r4, ip, r4, lsl #3
  430698:	e89400c0 	ldm	r4, {r6, r7}
  43069c:	e2819003 	add	r9, r1, #3
  4306a0:	e7d04009 	ldrb	r4, [r0, r9]
  4306a4:	e08c4184 	add	r4, ip, r4, lsl #3
  4306a8:	e8940030 	ldm	r4, {r4, r5}
  4306ac:	e082a18a 	add	sl, r2, sl, lsl #3
  4306b0:	e88a00c0 	stm	sl, {r6, r7}
  4306b4:	e0829189 	add	r9, r2, r9, lsl #3
  4306b8:	e8890030 	stm	r9, {r4, r5}
  4306bc:	e2811004 	add	r1, r1, #4
  4306c0:	ea000000 	b	4306c8 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd+0x80>
  4306c4:	e3a01000 	mov	r1, #0
  4306c8:	e24e4004 	sub	r4, lr, #4
  4306cc:	e1540001 	cmp	r4, r1
  4306d0:	aaffffe2 	bge	430660 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd+0x18>
  4306d4:	ea000005 	b	4306f0 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd+0xa8>
  4306d8:	e7d04001 	ldrb	r4, [r0, r1]
  4306dc:	e08c4184 	add	r4, ip, r4, lsl #3
  4306e0:	e8940030 	ldm	r4, {r4, r5}
  4306e4:	e0826181 	add	r6, r2, r1, lsl #3
  4306e8:	e8860030 	stm	r6, {r4, r5}
  4306ec:	e2811001 	add	r1, r1, #1
  4306f0:	e151000e 	cmp	r1, lr
  4306f4:	bafffff7 	blt	4306d8 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd+0x90>
  4306f8:	e0800008 	add	r0, r0, r8
  4306fc:	e0822183 	add	r2, r2, r3, lsl #3
  430700:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
  430704:	e2414001 	sub	r4, r1, #1
  430708:	e58d4024 	str	r4, [sp, #36]	; 0x24
  43070c:	e3510000 	cmp	r1, #0
  430710:	1affffeb 	bne	4306c4 <_Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd+0x7c>
  430714:	e3a00000 	mov	r0, #0
  430718:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  43071c:	e12fff1e 	bx	lr

00430720 <_Z25icvLUT_Transform8u_8u_C2RPKhiPhi6CvSizeS0_>:
  430720:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  430724:	e59d501c 	ldr	r5, [sp, #28]
  430728:	e59d7014 	ldr	r7, [sp, #20]
  43072c:	e1a07087 	lsl	r7, r7, #1
  430730:	ea00000e 	b	430770 <_Z25icvLUT_Transform8u_8u_C2RPKhiPhi6CvSizeS0_+0x50>
  430734:	e7d0e00c 	ldrb	lr, [r0, ip]
  430738:	e7d5608e 	ldrb	r6, [r5, lr, lsl #1]
  43073c:	e28c4001 	add	r4, ip, #1
  430740:	e7d0e004 	ldrb	lr, [r0, r4]
  430744:	e085e08e 	add	lr, r5, lr, lsl #1
  430748:	e5dee001 	ldrb	lr, [lr, #1]
  43074c:	e7c2600c 	strb	r6, [r2, ip]
  430750:	e7c2e004 	strb	lr, [r2, r4]
  430754:	e28cc002 	add	ip, ip, #2
  430758:	ea000000 	b	430760 <_Z25icvLUT_Transform8u_8u_C2RPKhiPhi6CvSizeS0_+0x40>
  43075c:	e3a0c000 	mov	ip, #0
  430760:	e15c0007 	cmp	ip, r7
  430764:	bafffff2 	blt	430734 <_Z25icvLUT_Transform8u_8u_C2RPKhiPhi6CvSizeS0_+0x14>
  430768:	e0800001 	add	r0, r0, r1
  43076c:	e0822003 	add	r2, r2, r3
  430770:	e59dc018 	ldr	ip, [sp, #24]
  430774:	e24ce001 	sub	lr, ip, #1
  430778:	e58de018 	str	lr, [sp, #24]
  43077c:	e35c0000 	cmp	ip, #0
  430780:	1afffff5 	bne	43075c <_Z25icvLUT_Transform8u_8u_C2RPKhiPhi6CvSizeS0_+0x3c>
  430784:	e3a00000 	mov	r0, #0
  430788:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  43078c:	e12fff1e 	bx	lr

00430790 <_Z25icvLUT_Transform8u_8u_C3RPKhiPhi6CvSizeS0_>:
  430790:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  430794:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
  430798:	e59d701c 	ldr	r7, [sp, #28]
  43079c:	e0877087 	add	r7, r7, r7, lsl #1
  4307a0:	ea000016 	b	430800 <_Z25icvLUT_Transform8u_8u_C3RPKhiPhi6CvSizeS0_+0x70>
  4307a4:	e7d0e00c 	ldrb	lr, [r0, ip]
  4307a8:	e08ee08e 	add	lr, lr, lr, lsl #1
  4307ac:	e7d4600e 	ldrb	r6, [r4, lr]
  4307b0:	e28c5001 	add	r5, ip, #1
  4307b4:	e7d0e005 	ldrb	lr, [r0, r5]
  4307b8:	e08ee08e 	add	lr, lr, lr, lsl #1
  4307bc:	e084e00e 	add	lr, r4, lr
  4307c0:	e5de9001 	ldrb	r9, [lr, #1]
  4307c4:	e28c8002 	add	r8, ip, #2
  4307c8:	e7d0e008 	ldrb	lr, [r0, r8]
  4307cc:	e08ee08e 	add	lr, lr, lr, lsl #1
  4307d0:	e084e00e 	add	lr, r4, lr
  4307d4:	e5dee002 	ldrb	lr, [lr, #2]
  4307d8:	e7c2600c 	strb	r6, [r2, ip]
  4307dc:	e7c29005 	strb	r9, [r2, r5]
  4307e0:	e7c2e008 	strb	lr, [r2, r8]
  4307e4:	e28cc003 	add	ip, ip, #3
  4307e8:	ea000000 	b	4307f0 <_Z25icvLUT_Transform8u_8u_C3RPKhiPhi6CvSizeS0_+0x60>
  4307ec:	e3a0c000 	mov	ip, #0
  4307f0:	e15c0007 	cmp	ip, r7
  4307f4:	baffffea 	blt	4307a4 <_Z25icvLUT_Transform8u_8u_C3RPKhiPhi6CvSizeS0_+0x14>
  4307f8:	e0800001 	add	r0, r0, r1
  4307fc:	e0822003 	add	r2, r2, r3
  430800:	e59dc020 	ldr	ip, [sp, #32]
  430804:	e24ce001 	sub	lr, ip, #1
  430808:	e58de020 	str	lr, [sp, #32]
  43080c:	e35c0000 	cmp	ip, #0
  430810:	1afffff5 	bne	4307ec <_Z25icvLUT_Transform8u_8u_C3RPKhiPhi6CvSizeS0_+0x5c>
  430814:	e3a00000 	mov	r0, #0
  430818:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
  43081c:	e12fff1e 	bx	lr

00430820 <_Z25icvLUT_Transform8u_8u_C4RPKhiPhi6CvSizeS0_>:
  430820:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  430824:	e59de020 	ldr	lr, [sp, #32]
  430828:	e59d6018 	ldr	r6, [sp, #24]
  43082c:	e1a06106 	lsl	r6, r6, #2
  430830:	ea000018 	b	430898 <_Z25icvLUT_Transform8u_8u_C4RPKhiPhi6CvSizeS0_+0x78>
  430834:	e7d0400c 	ldrb	r4, [r0, ip]
  430838:	e7de7104 	ldrb	r7, [lr, r4, lsl #2]
  43083c:	e28c5001 	add	r5, ip, #1
  430840:	e7d04005 	ldrb	r4, [r0, r5]
  430844:	e08e4104 	add	r4, lr, r4, lsl #2
  430848:	e5d44001 	ldrb	r4, [r4, #1]
  43084c:	e7c2700c 	strb	r7, [r2, ip]
  430850:	e7c24005 	strb	r4, [r2, r5]
  430854:	e28c7002 	add	r7, ip, #2
  430858:	e7d04007 	ldrb	r4, [r0, r7]
  43085c:	e08e4104 	add	r4, lr, r4, lsl #2
  430860:	e5d48002 	ldrb	r8, [r4, #2]
  430864:	e28c5003 	add	r5, ip, #3
  430868:	e7d04005 	ldrb	r4, [r0, r5]
  43086c:	e08e4104 	add	r4, lr, r4, lsl #2
  430870:	e5d44003 	ldrb	r4, [r4, #3]
  430874:	e7c28007 	strb	r8, [r2, r7]
  430878:	e7c24005 	strb	r4, [r2, r5]
  43087c:	e28cc004 	add	ip, ip, #4
  430880:	ea000000 	b	430888 <_Z25icvLUT_Transform8u_8u_C4RPKhiPhi6CvSizeS0_+0x68>
  430884:	e3a0c000 	mov	ip, #0
  430888:	e15c0006 	cmp	ip, r6
  43088c:	baffffe8 	blt	430834 <_Z25icvLUT_Transform8u_8u_C4RPKhiPhi6CvSizeS0_+0x14>
  430890:	e0800001 	add	r0, r0, r1
  430894:	e0822003 	add	r2, r2, r3
  430898:	e59dc01c 	ldr	ip, [sp, #28]
  43089c:	e24c4001 	sub	r4, ip, #1
  4308a0:	e58d401c 	str	r4, [sp, #28]
  4308a4:	e35c0000 	cmp	ip, #0
  4308a8:	1afffff5 	bne	430884 <_Z25icvLUT_Transform8u_8u_C4RPKhiPhi6CvSizeS0_+0x64>
  4308ac:	e3a00000 	mov	r0, #0
  4308b0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  4308b4:	e12fff1e 	bx	lr

004308b8 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i>:
  4308b8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4308bc:	e24ddb01 	sub	sp, sp, #1024	; 0x400
  4308c0:	e24dd00c 	sub	sp, sp, #12
  4308c4:	e59d4438 	ldr	r4, [sp, #1080]	; 0x438
  4308c8:	e59dc43c 	ldr	ip, [sp, #1084]	; 0x43c
  4308cc:	e1a0a50c 	lsl	sl, ip, #10
  4308d0:	e59d9430 	ldr	r9, [sp, #1072]	; 0x430
  4308d4:	e009099c 	mul	r9, ip, r9
  4308d8:	e58d3004 	str	r3, [sp, #4]
  4308dc:	e59d3434 	ldr	r3, [sp, #1076]	; 0x434
  4308e0:	e0030399 	mul	r3, r9, r3
  4308e4:	e35300ff 	cmp	r3, #255	; 0xff
  4308e8:	da000013 	ble	43093c <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x84>
  4308ec:	e3a05000 	mov	r5, #0
  4308f0:	ea000024 	b	430988 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0xd0>
  4308f4:	e0835006 	add	r5, r3, r6
  4308f8:	e7d0e005 	ldrb	lr, [r0, r5]
  4308fc:	e02e6e9c 	mla	lr, ip, lr, r6
  430900:	e7d4e00e 	ldrb	lr, [r4, lr]
  430904:	e7c2e005 	strb	lr, [r2, r5]
  430908:	e083300c 	add	r3, r3, ip
  43090c:	ea000000 	b	430914 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x5c>
  430910:	e3a03000 	mov	r3, #0
  430914:	e1530009 	cmp	r3, r9
  430918:	bafffff5 	blt	4308f4 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x3c>
  43091c:	e2866001 	add	r6, r6, #1
  430920:	ea000000 	b	430928 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x70>
  430924:	e3a06000 	mov	r6, #0
  430928:	e156000c 	cmp	r6, ip
  43092c:	bafffff7 	blt	430910 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x58>
  430930:	e0800001 	add	r0, r0, r1
  430934:	e59d3004 	ldr	r3, [sp, #4]
  430938:	e0822003 	add	r2, r2, r3
  43093c:	e59d3434 	ldr	r3, [sp, #1076]	; 0x434
  430940:	e243e001 	sub	lr, r3, #1
  430944:	e58de434 	str	lr, [sp, #1076]	; 0x434
  430948:	e3530000 	cmp	r3, #0
  43094c:	1afffff4 	bne	430924 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x6c>
  430950:	ea000042 	b	430a60 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x1a8>
  430954:	e083e405 	add	lr, r3, r5, lsl #8
  430958:	e026539c 	mla	r6, ip, r3, r5
  43095c:	e7d46006 	ldrb	r6, [r4, r6]
  430960:	e28d7b01 	add	r7, sp, #1024	; 0x400
  430964:	e2877008 	add	r7, r7, #8
  430968:	e087e00e 	add	lr, r7, lr
  43096c:	e54e6400 	strb	r6, [lr, #-1024]	; 0x400
  430970:	e2833001 	add	r3, r3, #1
  430974:	ea000000 	b	43097c <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0xc4>
  430978:	e3a03000 	mov	r3, #0
  43097c:	e35300ff 	cmp	r3, #255	; 0xff
  430980:	dafffff3 	ble	430954 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x9c>
  430984:	e2855001 	add	r5, r5, #1
  430988:	e155000c 	cmp	r5, ip
  43098c:	bafffff9 	blt	430978 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0xc0>
  430990:	ea00002d 	b	430a4c <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x194>
  430994:	e087300a 	add	r3, r7, sl
  430998:	e1590003 	cmp	r9, r3
  43099c:	b1a05009 	movlt	r5, r9
  4309a0:	a1a05003 	movge	r5, r3
  4309a4:	e3a06000 	mov	r6, #0
  4309a8:	ea00001a 	b	430a18 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x160>
  4309ac:	e28d4008 	add	r4, sp, #8
  4309b0:	e0844406 	add	r4, r4, r6, lsl #8
  4309b4:	e1a03007 	mov	r3, r7
  4309b8:	ea000007 	b	4309dc <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x124>
  4309bc:	e7d0e003 	ldrb	lr, [r0, r3]
  4309c0:	e7d4b00e 	ldrb	fp, [r4, lr]
  4309c4:	e083e00c 	add	lr, r3, ip
  4309c8:	e7d0800e 	ldrb	r8, [r0, lr]
  4309cc:	e7d48008 	ldrb	r8, [r4, r8]
  4309d0:	e7c2b003 	strb	fp, [r2, r3]
  4309d4:	e7c2800e 	strb	r8, [r2, lr]
  4309d8:	e083308c 	add	r3, r3, ip, lsl #1
  4309dc:	e26ce000 	rsb	lr, ip, #0
  4309e0:	e1a0e08e 	lsl	lr, lr, #1
  4309e4:	e08ee005 	add	lr, lr, r5
  4309e8:	e15e0003 	cmp	lr, r3
  4309ec:	aafffff2 	bge	4309bc <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x104>
  4309f0:	ea000003 	b	430a04 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x14c>
  4309f4:	e7d0e003 	ldrb	lr, [r0, r3]
  4309f8:	e7d4e00e 	ldrb	lr, [r4, lr]
  4309fc:	e7c2e003 	strb	lr, [r2, r3]
  430a00:	e083300c 	add	r3, r3, ip
  430a04:	e1530005 	cmp	r3, r5
  430a08:	bafffff9 	blt	4309f4 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x13c>
  430a0c:	e2866001 	add	r6, r6, #1
  430a10:	e2800001 	add	r0, r0, #1
  430a14:	e2822001 	add	r2, r2, #1
  430a18:	e156000c 	cmp	r6, ip
  430a1c:	baffffe2 	blt	4309ac <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0xf4>
  430a20:	e26c3000 	rsb	r3, ip, #0
  430a24:	e0800003 	add	r0, r0, r3
  430a28:	e0822003 	add	r2, r2, r3
  430a2c:	e0877005 	add	r7, r7, r5
  430a30:	ea000000 	b	430a38 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x180>
  430a34:	e3a07000 	mov	r7, #0
  430a38:	e1570009 	cmp	r7, r9
  430a3c:	baffffd4 	blt	430994 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0xdc>
  430a40:	e0800001 	add	r0, r0, r1
  430a44:	e59d3004 	ldr	r3, [sp, #4]
  430a48:	e0822003 	add	r2, r2, r3
  430a4c:	e59d3434 	ldr	r3, [sp, #1076]	; 0x434
  430a50:	e243e001 	sub	lr, r3, #1
  430a54:	e58de434 	str	lr, [sp, #1076]	; 0x434
  430a58:	e3530000 	cmp	r3, #0
  430a5c:	1afffff4 	bne	430a34 <_ZL25icvLUT_Transform8u_8u_CnRPKhiPhi6CvSizeS0_i+0x17c>
  430a60:	e3a00000 	mov	r0, #0
  430a64:	e28ddb01 	add	sp, sp, #1024	; 0x400
  430a68:	e28dd00c 	add	sp, sp, #12
  430a6c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  430a70:	e12fff1e 	bx	lr

00430a74 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti>:
  430a74:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  430a78:	e24ddb02 	sub	sp, sp, #2048	; 0x800
  430a7c:	e24dd00c 	sub	sp, sp, #12
  430a80:	e58d1004 	str	r1, [sp, #4]
  430a84:	e59de838 	ldr	lr, [sp, #2104]	; 0x838
  430a88:	e59dc83c 	ldr	ip, [sp, #2108]	; 0x83c
  430a8c:	e1a0a50c 	lsl	sl, ip, #10
  430a90:	e59d9830 	ldr	r9, [sp, #2096]	; 0x830
  430a94:	e009099c 	mul	r9, ip, r9
  430a98:	e1a030a3 	lsr	r3, r3, #1
  430a9c:	e58d3000 	str	r3, [sp]
  430aa0:	e59d3834 	ldr	r3, [sp, #2100]	; 0x834
  430aa4:	e0030399 	mul	r3, r9, r3
  430aa8:	e35300ff 	cmp	r3, #255	; 0xff
  430aac:	da000016 	ble	430b0c <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x98>
  430ab0:	e3a05000 	mov	r5, #0
  430ab4:	ea000027 	b	430b58 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0xe4>
  430ab8:	e0813004 	add	r3, r1, r4
  430abc:	e1a05083 	lsl	r5, r3, #1
  430ac0:	e7d03003 	ldrb	r3, [r0, r3]
  430ac4:	e023439c 	mla	r3, ip, r3, r4
  430ac8:	e1a03083 	lsl	r3, r3, #1
  430acc:	e19e30b3 	ldrh	r3, [lr, r3]
  430ad0:	e18230b5 	strh	r3, [r2, r5]
  430ad4:	e081100c 	add	r1, r1, ip
  430ad8:	ea000000 	b	430ae0 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x6c>
  430adc:	e3a01000 	mov	r1, #0
  430ae0:	e1510009 	cmp	r1, r9
  430ae4:	bafffff3 	blt	430ab8 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x44>
  430ae8:	e2844001 	add	r4, r4, #1
  430aec:	ea000000 	b	430af4 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x80>
  430af0:	e3a04000 	mov	r4, #0
  430af4:	e154000c 	cmp	r4, ip
  430af8:	bafffff7 	blt	430adc <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x68>
  430afc:	e59d3004 	ldr	r3, [sp, #4]
  430b00:	e0800003 	add	r0, r0, r3
  430b04:	e59d3000 	ldr	r3, [sp]
  430b08:	e0822083 	add	r2, r2, r3, lsl #1
  430b0c:	e59d3834 	ldr	r3, [sp, #2100]	; 0x834
  430b10:	e2431001 	sub	r1, r3, #1
  430b14:	e58d1834 	str	r1, [sp, #2100]	; 0x834
  430b18:	e3530000 	cmp	r3, #0
  430b1c:	1afffff3 	bne	430af0 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x7c>
  430b20:	ea000048 	b	430c48 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x1d4>
  430b24:	e0831405 	add	r1, r3, r5, lsl #8
  430b28:	e024539c 	mla	r4, ip, r3, r5
  430b2c:	e1a04084 	lsl	r4, r4, #1
  430b30:	e19e60b4 	ldrh	r6, [lr, r4]
  430b34:	e1a01081 	lsl	r1, r1, #1
  430b38:	e28d4008 	add	r4, sp, #8
  430b3c:	e18460b1 	strh	r6, [r4, r1]
  430b40:	e2833001 	add	r3, r3, #1
  430b44:	ea000000 	b	430b4c <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0xd8>
  430b48:	e3a03000 	mov	r3, #0
  430b4c:	e35300ff 	cmp	r3, #255	; 0xff
  430b50:	dafffff3 	ble	430b24 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0xb0>
  430b54:	e2855001 	add	r5, r5, #1
  430b58:	e155000c 	cmp	r5, ip
  430b5c:	bafffff9 	blt	430b48 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0xd4>
  430b60:	ea000033 	b	430c34 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x1c0>
  430b64:	e086300a 	add	r3, r6, sl
  430b68:	e1590003 	cmp	r9, r3
  430b6c:	b1a04009 	movlt	r4, r9
  430b70:	a1a04003 	movge	r4, r3
  430b74:	e3a05000 	mov	r5, #0
  430b78:	ea000020 	b	430c00 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x18c>
  430b7c:	e28de008 	add	lr, sp, #8
  430b80:	e08ee485 	add	lr, lr, r5, lsl #9
  430b84:	e1a03006 	mov	r3, r6
  430b88:	ea00000b 	b	430bbc <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x148>
  430b8c:	e7d01003 	ldrb	r1, [r0, r3]
  430b90:	e1a01081 	lsl	r1, r1, #1
  430b94:	e19e80b1 	ldrh	r8, [lr, r1]
  430b98:	e083100c 	add	r1, r3, ip
  430b9c:	e7d07001 	ldrb	r7, [r0, r1]
  430ba0:	e1a07087 	lsl	r7, r7, #1
  430ba4:	e19e70b7 	ldrh	r7, [lr, r7]
  430ba8:	e1a0b083 	lsl	fp, r3, #1
  430bac:	e18280bb 	strh	r8, [r2, fp]
  430bb0:	e1a01081 	lsl	r1, r1, #1
  430bb4:	e18270b1 	strh	r7, [r2, r1]
  430bb8:	e083308c 	add	r3, r3, ip, lsl #1
  430bbc:	e26c1000 	rsb	r1, ip, #0
  430bc0:	e1a01081 	lsl	r1, r1, #1
  430bc4:	e0811004 	add	r1, r1, r4
  430bc8:	e1510003 	cmp	r1, r3
  430bcc:	aaffffee 	bge	430b8c <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x118>
  430bd0:	ea000005 	b	430bec <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x178>
  430bd4:	e1a07083 	lsl	r7, r3, #1
  430bd8:	e7d01003 	ldrb	r1, [r0, r3]
  430bdc:	e1a01081 	lsl	r1, r1, #1
  430be0:	e19e10b1 	ldrh	r1, [lr, r1]
  430be4:	e18210b7 	strh	r1, [r2, r7]
  430be8:	e083300c 	add	r3, r3, ip
  430bec:	e1530004 	cmp	r3, r4
  430bf0:	bafffff7 	blt	430bd4 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x160>
  430bf4:	e2855001 	add	r5, r5, #1
  430bf8:	e2800001 	add	r0, r0, #1
  430bfc:	e2822002 	add	r2, r2, #2
  430c00:	e155000c 	cmp	r5, ip
  430c04:	baffffdc 	blt	430b7c <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x108>
  430c08:	e06c0000 	rsb	r0, ip, r0
  430c0c:	e042208c 	sub	r2, r2, ip, lsl #1
  430c10:	e0866004 	add	r6, r6, r4
  430c14:	ea000000 	b	430c1c <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x1a8>
  430c18:	e3a06000 	mov	r6, #0
  430c1c:	e1560009 	cmp	r6, r9
  430c20:	baffffcf 	blt	430b64 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0xf0>
  430c24:	e59d3004 	ldr	r3, [sp, #4]
  430c28:	e0800003 	add	r0, r0, r3
  430c2c:	e59d3000 	ldr	r3, [sp]
  430c30:	e0822083 	add	r2, r2, r3, lsl #1
  430c34:	e59d3834 	ldr	r3, [sp, #2100]	; 0x834
  430c38:	e2431001 	sub	r1, r3, #1
  430c3c:	e58d1834 	str	r1, [sp, #2100]	; 0x834
  430c40:	e3530000 	cmp	r3, #0
  430c44:	1afffff3 	bne	430c18 <_ZL26icvLUT_Transform8u_16u_CnRPKhiPti6CvSizePKti+0x1a4>
  430c48:	e3a00000 	mov	r0, #0
  430c4c:	e28ddb02 	add	sp, sp, #2048	; 0x800
  430c50:	e28dd00c 	add	sp, sp, #12
  430c54:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  430c58:	e12fff1e 	bx	lr

00430c5c <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii>:
  430c5c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  430c60:	e24dda01 	sub	sp, sp, #4096	; 0x1000
  430c64:	e24dd00c 	sub	sp, sp, #12
  430c68:	e58d1004 	str	r1, [sp, #4]
  430c6c:	e28d1a01 	add	r1, sp, #4096	; 0x1000
  430c70:	e2811038 	add	r1, r1, #56	; 0x38
  430c74:	e5915000 	ldr	r5, [r1]
  430c78:	e28d1a01 	add	r1, sp, #4096	; 0x1000
  430c7c:	e281103c 	add	r1, r1, #60	; 0x3c
  430c80:	e591c000 	ldr	ip, [r1]
  430c84:	e1a0b50c 	lsl	fp, ip, #10
  430c88:	e28d1a01 	add	r1, sp, #4096	; 0x1000
  430c8c:	e2811030 	add	r1, r1, #48	; 0x30
  430c90:	e5919000 	ldr	r9, [r1]
  430c94:	e009099c 	mul	r9, ip, r9
  430c98:	e1a03123 	lsr	r3, r3, #2
  430c9c:	e28d1a01 	add	r1, sp, #4096	; 0x1000
  430ca0:	e2811034 	add	r1, r1, #52	; 0x34
  430ca4:	e5911000 	ldr	r1, [r1]
  430ca8:	e0010199 	mul	r1, r9, r1
  430cac:	e35100ff 	cmp	r1, #255	; 0xff
  430cb0:	da000013 	ble	430d04 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0xa8>
  430cb4:	e3a0e000 	mov	lr, #0
  430cb8:	ea000026 	b	430d58 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0xfc>
  430cbc:	e0814006 	add	r4, r1, r6
  430cc0:	e7d0e004 	ldrb	lr, [r0, r4]
  430cc4:	e02e6e9c 	mla	lr, ip, lr, r6
  430cc8:	e795e10e 	ldr	lr, [r5, lr, lsl #2]
  430ccc:	e782e104 	str	lr, [r2, r4, lsl #2]
  430cd0:	e081100c 	add	r1, r1, ip
  430cd4:	ea000000 	b	430cdc <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x80>
  430cd8:	e3a01000 	mov	r1, #0
  430cdc:	e1510009 	cmp	r1, r9
  430ce0:	bafffff5 	blt	430cbc <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x60>
  430ce4:	e2866001 	add	r6, r6, #1
  430ce8:	ea000000 	b	430cf0 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x94>
  430cec:	e3a06000 	mov	r6, #0
  430cf0:	e156000c 	cmp	r6, ip
  430cf4:	bafffff7 	blt	430cd8 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x7c>
  430cf8:	e59d1004 	ldr	r1, [sp, #4]
  430cfc:	e0800001 	add	r0, r0, r1
  430d00:	e0822103 	add	r2, r2, r3, lsl #2
  430d04:	e28d1a01 	add	r1, sp, #4096	; 0x1000
  430d08:	e2811034 	add	r1, r1, #52	; 0x34
  430d0c:	e5911000 	ldr	r1, [r1]
  430d10:	e241e001 	sub	lr, r1, #1
  430d14:	e28d4a01 	add	r4, sp, #4096	; 0x1000
  430d18:	e2844034 	add	r4, r4, #52	; 0x34
  430d1c:	e584e000 	str	lr, [r4]
  430d20:	e3510000 	cmp	r1, #0
  430d24:	1afffff0 	bne	430cec <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x90>
  430d28:	ea000043 	b	430e3c <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x1e0>
  430d2c:	e081640e 	add	r6, r1, lr, lsl #8
  430d30:	e024e19c 	mla	r4, ip, r1, lr
  430d34:	e7957104 	ldr	r7, [r5, r4, lsl #2]
  430d38:	e28d4008 	add	r4, sp, #8
  430d3c:	e7847106 	str	r7, [r4, r6, lsl #2]
  430d40:	e2811001 	add	r1, r1, #1
  430d44:	ea000000 	b	430d4c <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0xf0>
  430d48:	e3a01000 	mov	r1, #0
  430d4c:	e35100ff 	cmp	r1, #255	; 0xff
  430d50:	dafffff5 	ble	430d2c <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0xd0>
  430d54:	e28ee001 	add	lr, lr, #1
  430d58:	e15e000c 	cmp	lr, ip
  430d5c:	bafffff9 	blt	430d48 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0xec>
  430d60:	ea00002c 	b	430e18 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x1bc>
  430d64:	e087100b 	add	r1, r7, fp
  430d68:	e1590001 	cmp	r9, r1
  430d6c:	b1a05009 	movlt	r5, r9
  430d70:	a1a05001 	movge	r5, r1
  430d74:	e3a06000 	mov	r6, #0
  430d78:	ea00001a 	b	430de8 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x18c>
  430d7c:	e28d4008 	add	r4, sp, #8
  430d80:	e0844506 	add	r4, r4, r6, lsl #10
  430d84:	e1a01007 	mov	r1, r7
  430d88:	ea000007 	b	430dac <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x150>
  430d8c:	e7d0e001 	ldrb	lr, [r0, r1]
  430d90:	e794a10e 	ldr	sl, [r4, lr, lsl #2]
  430d94:	e081e00c 	add	lr, r1, ip
  430d98:	e7d0800e 	ldrb	r8, [r0, lr]
  430d9c:	e7948108 	ldr	r8, [r4, r8, lsl #2]
  430da0:	e782a101 	str	sl, [r2, r1, lsl #2]
  430da4:	e782810e 	str	r8, [r2, lr, lsl #2]
  430da8:	e081108c 	add	r1, r1, ip, lsl #1
  430dac:	e26ce000 	rsb	lr, ip, #0
  430db0:	e1a0e08e 	lsl	lr, lr, #1
  430db4:	e08ee005 	add	lr, lr, r5
  430db8:	e15e0001 	cmp	lr, r1
  430dbc:	aafffff2 	bge	430d8c <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x130>
  430dc0:	ea000003 	b	430dd4 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x178>
  430dc4:	e7d0e001 	ldrb	lr, [r0, r1]
  430dc8:	e794e10e 	ldr	lr, [r4, lr, lsl #2]
  430dcc:	e782e101 	str	lr, [r2, r1, lsl #2]
  430dd0:	e081100c 	add	r1, r1, ip
  430dd4:	e1510005 	cmp	r1, r5
  430dd8:	bafffff9 	blt	430dc4 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x168>
  430ddc:	e2866001 	add	r6, r6, #1
  430de0:	e2800001 	add	r0, r0, #1
  430de4:	e2822004 	add	r2, r2, #4
  430de8:	e156000c 	cmp	r6, ip
  430dec:	baffffe2 	blt	430d7c <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x120>
  430df0:	e06c0000 	rsb	r0, ip, r0
  430df4:	e042210c 	sub	r2, r2, ip, lsl #2
  430df8:	e0877005 	add	r7, r7, r5
  430dfc:	ea000000 	b	430e04 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x1a8>
  430e00:	e3a07000 	mov	r7, #0
  430e04:	e1570009 	cmp	r7, r9
  430e08:	baffffd5 	blt	430d64 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x108>
  430e0c:	e59d1004 	ldr	r1, [sp, #4]
  430e10:	e0800001 	add	r0, r0, r1
  430e14:	e0822103 	add	r2, r2, r3, lsl #2
  430e18:	e28d1a01 	add	r1, sp, #4096	; 0x1000
  430e1c:	e2811034 	add	r1, r1, #52	; 0x34
  430e20:	e5911000 	ldr	r1, [r1]
  430e24:	e241e001 	sub	lr, r1, #1
  430e28:	e28d4a01 	add	r4, sp, #4096	; 0x1000
  430e2c:	e2844034 	add	r4, r4, #52	; 0x34
  430e30:	e584e000 	str	lr, [r4]
  430e34:	e3510000 	cmp	r1, #0
  430e38:	1afffff0 	bne	430e00 <_ZL26icvLUT_Transform8u_32s_CnRPKhiPii6CvSizePKii+0x1a4>
  430e3c:	e3a00000 	mov	r0, #0
  430e40:	e28dda01 	add	sp, sp, #4096	; 0x1000
  430e44:	e28dd00c 	add	sp, sp, #12
  430e48:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  430e4c:	e12fff1e 	bx	lr

00430e50 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi>:
  430e50:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  430e54:	e24dda02 	sub	sp, sp, #8192	; 0x2000
  430e58:	e24dd014 	sub	sp, sp, #20
  430e5c:	e58d100c 	str	r1, [sp, #12]
  430e60:	e28d1d81 	add	r1, sp, #8256	; 0x2040
  430e64:	e5911000 	ldr	r1, [r1]
  430e68:	e28dcd81 	add	ip, sp, #8256	; 0x2040
  430e6c:	e28cc004 	add	ip, ip, #4
  430e70:	e59cc000 	ldr	ip, [ip]
  430e74:	e1a0e50c 	lsl	lr, ip, #10
  430e78:	e58de004 	str	lr, [sp, #4]
  430e7c:	e28dea02 	add	lr, sp, #8192	; 0x2000
  430e80:	e28ee038 	add	lr, lr, #56	; 0x38
  430e84:	e59ee000 	ldr	lr, [lr]
  430e88:	e00b0c9e 	mul	fp, lr, ip
  430e8c:	e1a031a3 	lsr	r3, r3, #3
  430e90:	e58d3008 	str	r3, [sp, #8]
  430e94:	e28d3a02 	add	r3, sp, #8192	; 0x2000
  430e98:	e283303c 	add	r3, r3, #60	; 0x3c
  430e9c:	e5933000 	ldr	r3, [r3]
  430ea0:	e003039b 	mul	r3, fp, r3
  430ea4:	e35300ff 	cmp	r3, #255	; 0xff
  430ea8:	da000016 	ble	430f08 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0xb8>
  430eac:	e3a06000 	mov	r6, #0
  430eb0:	ea00002b 	b	430f64 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x114>
  430eb4:	e08e3004 	add	r3, lr, r4
  430eb8:	e0825183 	add	r5, r2, r3, lsl #3
  430ebc:	e7d03003 	ldrb	r3, [r0, r3]
  430ec0:	e023439c 	mla	r3, ip, r3, r4
  430ec4:	e0813183 	add	r3, r1, r3, lsl #3
  430ec8:	e89300c0 	ldm	r3, {r6, r7}
  430ecc:	e88500c0 	stm	r5, {r6, r7}
  430ed0:	e08ee00c 	add	lr, lr, ip
  430ed4:	ea000000 	b	430edc <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x8c>
  430ed8:	e3a0e000 	mov	lr, #0
  430edc:	e15e000b 	cmp	lr, fp
  430ee0:	bafffff3 	blt	430eb4 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x64>
  430ee4:	e2844001 	add	r4, r4, #1
  430ee8:	ea000000 	b	430ef0 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0xa0>
  430eec:	e3a04000 	mov	r4, #0
  430ef0:	e154000c 	cmp	r4, ip
  430ef4:	bafffff7 	blt	430ed8 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x88>
  430ef8:	e59d300c 	ldr	r3, [sp, #12]
  430efc:	e0800003 	add	r0, r0, r3
  430f00:	e59d3008 	ldr	r3, [sp, #8]
  430f04:	e0822183 	add	r2, r2, r3, lsl #3
  430f08:	e28d3a02 	add	r3, sp, #8192	; 0x2000
  430f0c:	e283303c 	add	r3, r3, #60	; 0x3c
  430f10:	e5933000 	ldr	r3, [r3]
  430f14:	e243e001 	sub	lr, r3, #1
  430f18:	e28d4a02 	add	r4, sp, #8192	; 0x2000
  430f1c:	e284403c 	add	r4, r4, #60	; 0x3c
  430f20:	e584e000 	str	lr, [r4]
  430f24:	e3530000 	cmp	r3, #0
  430f28:	1affffef 	bne	430eec <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x9c>
  430f2c:	ea000050 	b	431074 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x224>
  430f30:	e0837406 	add	r7, r3, r6, lsl #8
  430f34:	e024639c 	mla	r4, ip, r3, r6
  430f38:	e0814184 	add	r4, r1, r4, lsl #3
  430f3c:	e8940030 	ldm	r4, {r4, r5}
  430f40:	e28de010 	add	lr, sp, #16
  430f44:	e08ee187 	add	lr, lr, r7, lsl #3
  430f48:	e88e0030 	stm	lr, {r4, r5}
  430f4c:	e2833001 	add	r3, r3, #1
  430f50:	ea000000 	b	430f58 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x108>
  430f54:	e3a03000 	mov	r3, #0
  430f58:	e35300ff 	cmp	r3, #255	; 0xff
  430f5c:	dafffff3 	ble	430f30 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0xe0>
  430f60:	e2866001 	add	r6, r6, #1
  430f64:	e156000c 	cmp	r6, ip
  430f68:	bafffff9 	blt	430f54 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x104>
  430f6c:	e58db000 	str	fp, [sp]
  430f70:	ea000036 	b	431050 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x200>
  430f74:	e59d3004 	ldr	r3, [sp, #4]
  430f78:	e08b3003 	add	r3, fp, r3
  430f7c:	e59d1000 	ldr	r1, [sp]
  430f80:	e1510003 	cmp	r1, r3
  430f84:	b1a08001 	movlt	r8, r1
  430f88:	a1a08003 	movge	r8, r3
  430f8c:	e3a0a000 	mov	sl, #0
  430f90:	ea000020 	b	431018 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x1c8>
  430f94:	e28d1010 	add	r1, sp, #16
  430f98:	e081158a 	add	r1, r1, sl, lsl #11
  430f9c:	e1a0300b 	mov	r3, fp
  430fa0:	ea00000b 	b	430fd4 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x184>
  430fa4:	e7d0e003 	ldrb	lr, [r0, r3]
  430fa8:	e081e18e 	add	lr, r1, lr, lsl #3
  430fac:	e89e00c0 	ldm	lr, {r6, r7}
  430fb0:	e083e00c 	add	lr, r3, ip
  430fb4:	e7d0400e 	ldrb	r4, [r0, lr]
  430fb8:	e0814184 	add	r4, r1, r4, lsl #3
  430fbc:	e8940030 	ldm	r4, {r4, r5}
  430fc0:	e0829183 	add	r9, r2, r3, lsl #3
  430fc4:	e88900c0 	stm	r9, {r6, r7}
  430fc8:	e082e18e 	add	lr, r2, lr, lsl #3
  430fcc:	e88e0030 	stm	lr, {r4, r5}
  430fd0:	e083308c 	add	r3, r3, ip, lsl #1
  430fd4:	e26ce000 	rsb	lr, ip, #0
  430fd8:	e1a0e08e 	lsl	lr, lr, #1
  430fdc:	e08ee008 	add	lr, lr, r8
  430fe0:	e15e0003 	cmp	lr, r3
  430fe4:	aaffffee 	bge	430fa4 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x154>
  430fe8:	ea000005 	b	431004 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x1b4>
  430fec:	e0824183 	add	r4, r2, r3, lsl #3
  430ff0:	e7d0e003 	ldrb	lr, [r0, r3]
  430ff4:	e081e18e 	add	lr, r1, lr, lsl #3
  430ff8:	e89e00c0 	ldm	lr, {r6, r7}
  430ffc:	e88400c0 	stm	r4, {r6, r7}
  431000:	e083300c 	add	r3, r3, ip
  431004:	e1530008 	cmp	r3, r8
  431008:	bafffff7 	blt	430fec <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x19c>
  43100c:	e28aa001 	add	sl, sl, #1
  431010:	e2800001 	add	r0, r0, #1
  431014:	e2822008 	add	r2, r2, #8
  431018:	e15a000c 	cmp	sl, ip
  43101c:	baffffdc 	blt	430f94 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x144>
  431020:	e06c0000 	rsb	r0, ip, r0
  431024:	e042218c 	sub	r2, r2, ip, lsl #3
  431028:	e08bb008 	add	fp, fp, r8
  43102c:	ea000000 	b	431034 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x1e4>
  431030:	e3a0b000 	mov	fp, #0
  431034:	e59d3000 	ldr	r3, [sp]
  431038:	e15b0003 	cmp	fp, r3
  43103c:	baffffcc 	blt	430f74 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x124>
  431040:	e59d300c 	ldr	r3, [sp, #12]
  431044:	e0800003 	add	r0, r0, r3
  431048:	e59d3008 	ldr	r3, [sp, #8]
  43104c:	e0822183 	add	r2, r2, r3, lsl #3
  431050:	e28d3a02 	add	r3, sp, #8192	; 0x2000
  431054:	e283303c 	add	r3, r3, #60	; 0x3c
  431058:	e5933000 	ldr	r3, [r3]
  43105c:	e2431001 	sub	r1, r3, #1
  431060:	e28dea02 	add	lr, sp, #8192	; 0x2000
  431064:	e28ee03c 	add	lr, lr, #60	; 0x3c
  431068:	e58e1000 	str	r1, [lr]
  43106c:	e3530000 	cmp	r3, #0
  431070:	1affffee 	bne	431030 <_ZL26icvLUT_Transform8u_64f_CnRPKhiPdi6CvSizePKdi+0x1e0>
  431074:	e3a00000 	mov	r0, #0
  431078:	e28dda02 	add	sp, sp, #8192	; 0x2000
  43107c:	e28dd014 	add	sp, sp, #20
  431080:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  431084:	e12fff1e 	bx	lr

00431088 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable>:
  431088:	e92d4008 	push	{r3, lr}
  43108c:	e59f306c 	ldr	r3, [pc, #108]	; 431100 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x78>
  431090:	e08f3003 	add	r3, pc, r3
  431094:	e3500000 	cmp	r0, #0
  431098:	1a000007 	bne	4310bc <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x34>
  43109c:	e59f0060 	ldr	r0, [pc, #96]	; 431104 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x7c>
  4310a0:	e08f0000 	add	r0, pc, r0
  4310a4:	e3a010d1 	mov	r1, #209	; 0xd1
  4310a8:	e59f2058 	ldr	r2, [pc, #88]	; 431108 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x80>
  4310ac:	e08f2002 	add	r2, pc, r2
  4310b0:	e59f3054 	ldr	r3, [pc, #84]	; 43110c <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x84>
  4310b4:	e08f3003 	add	r3, pc, r3
  4310b8:	fa000b25 	blx	433d54 <__assert_func>
  4310bc:	e59f204c 	ldr	r2, [pc, #76]	; 431110 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x88>
  4310c0:	e7932002 	ldr	r2, [r3, r2]
  4310c4:	e5802000 	str	r2, [r0]
  4310c8:	e5802004 	str	r2, [r0, #4]
  4310cc:	e59f2040 	ldr	r2, [pc, #64]	; 431114 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x8c>
  4310d0:	e7932002 	ldr	r2, [r3, r2]
  4310d4:	e5802008 	str	r2, [r0, #8]
  4310d8:	e580200c 	str	r2, [r0, #12]
  4310dc:	e59f2034 	ldr	r2, [pc, #52]	; 431118 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x90>
  4310e0:	e7932002 	ldr	r2, [r3, r2]
  4310e4:	e5802010 	str	r2, [r0, #16]
  4310e8:	e5802014 	str	r2, [r0, #20]
  4310ec:	e59f2028 	ldr	r2, [pc, #40]	; 43111c <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable+0x94>
  4310f0:	e7933002 	ldr	r3, [r3, r2]
  4310f4:	e5803018 	str	r3, [r0, #24]
  4310f8:	e8bd4008 	pop	{r3, lr}
  4310fc:	e12fff1e 	bx	lr
  431100:	0000ffa4 	.word	0x0000ffa4
  431104:	0000f2fc 	.word	0x0000f2fc
  431108:	0000f288 	.word	0x0000f288
  43110c:	0000f024 	.word	0x0000f024
  431110:	00000058 	.word	0x00000058
  431114:	00000048 	.word	0x00000048
  431118:	00000108 	.word	0x00000108
  43111c:	000000fc 	.word	0x000000fc

00431120 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable>:
  431120:	e92d4008 	push	{r3, lr}
  431124:	e3500000 	cmp	r0, #0
  431128:	1a000008 	bne	431150 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x30>
  43112c:	e59f0060 	ldr	r0, [pc, #96]	; 431194 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x74>
  431130:	e08f0000 	add	r0, pc, r0
  431134:	e3a010d2 	mov	r1, #210	; 0xd2
  431138:	e59f2058 	ldr	r2, [pc, #88]	; 431198 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x78>
  43113c:	e08f2002 	add	r2, pc, r2
  431140:	e2822034 	add	r2, r2, #52	; 0x34
  431144:	e59f3050 	ldr	r3, [pc, #80]	; 43119c <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x7c>
  431148:	e08f3003 	add	r3, pc, r3
  43114c:	fa000b00 	blx	433d54 <__assert_func>
  431150:	e59f3048 	ldr	r3, [pc, #72]	; 4311a0 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x80>
  431154:	e08f3003 	add	r3, pc, r3
  431158:	e5803000 	str	r3, [r0]
  43115c:	e5803004 	str	r3, [r0, #4]
  431160:	e59f303c 	ldr	r3, [pc, #60]	; 4311a4 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x84>
  431164:	e08f3003 	add	r3, pc, r3
  431168:	e5803008 	str	r3, [r0, #8]
  43116c:	e580300c 	str	r3, [r0, #12]
  431170:	e59f3030 	ldr	r3, [pc, #48]	; 4311a8 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x88>
  431174:	e08f3003 	add	r3, pc, r3
  431178:	e5803010 	str	r3, [r0, #16]
  43117c:	e5803014 	str	r3, [r0, #20]
  431180:	e59f3024 	ldr	r3, [pc, #36]	; 4311ac <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable+0x8c>
  431184:	e08f3003 	add	r3, pc, r3
  431188:	e5803018 	str	r3, [r0, #24]
  43118c:	e8bd4008 	pop	{r3, lr}
  431190:	e12fff1e 	bx	lr
  431194:	0000f26c 	.word	0x0000f26c
  431198:	0000f1f8 	.word	0x0000f1f8
  43119c:	0000ef90 	.word	0x0000ef90
  4311a0:	fffff75c 	.word	0xfffff75c
  4311a4:	fffff908 	.word	0xfffff908
  4311a8:	fffffae0 	.word	0xfffffae0
  4311ac:	fffffcc4 	.word	0xfffffcc4

004311b0 <cvLUT>:
  4311b0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4311b4:	e24dd084 	sub	sp, sp, #132	; 0x84
  4311b8:	e1a04000 	mov	r4, r0
  4311bc:	e1a05001 	mov	r5, r1
  4311c0:	e1a06002 	mov	r6, r2
  4311c4:	e59f75c8 	ldr	r7, [pc, #1480]	; 431794 <cvLUT+0x5e4>
  4311c8:	e08f7007 	add	r7, pc, r7
  4311cc:	e3a03000 	mov	r3, #0
  4311d0:	e58d3014 	str	r3, [sp, #20]
  4311d4:	e58d3018 	str	r3, [sp, #24]
  4311d8:	e59f35b8 	ldr	r3, [pc, #1464]	; 431798 <cvLUT+0x5e8>
  4311dc:	e08f3003 	add	r3, pc, r3
  4311e0:	e5933000 	ldr	r3, [r3]
  4311e4:	e3530000 	cmp	r3, #0
  4311e8:	1a000013 	bne	43123c <cvLUT+0x8c>
  4311ec:	e59f85a8 	ldr	r8, [pc, #1448]	; 43179c <cvLUT+0x5ec>
  4311f0:	e08f8008 	add	r8, pc, r8
  4311f4:	e2880004 	add	r0, r8, #4
  4311f8:	ebffffa2 	bl	431088 <_ZL30icvInitLUT_Transform8uC1RTableP11CvFuncTable>
  4311fc:	e2880024 	add	r0, r8, #36	; 0x24
  431200:	ebffffc6 	bl	431120 <_ZL30icvInitLUT_Transform8uCnRTableP11CvFuncTable>
  431204:	e59f3594 	ldr	r3, [pc, #1428]	; 4317a0 <cvLUT+0x5f0>
  431208:	e7973003 	ldr	r3, [r7, r3]
  43120c:	e5883044 	str	r3, [r8, #68]	; 0x44
  431210:	e59f358c 	ldr	r3, [pc, #1420]	; 4317a4 <cvLUT+0x5f4>
  431214:	e7973003 	ldr	r3, [r7, r3]
  431218:	e5883048 	str	r3, [r8, #72]	; 0x48
  43121c:	e59f3584 	ldr	r3, [pc, #1412]	; 4317a8 <cvLUT+0x5f8>
  431220:	e7973003 	ldr	r3, [r7, r3]
  431224:	e588304c 	str	r3, [r8, #76]	; 0x4c
  431228:	e59f357c 	ldr	r3, [pc, #1404]	; 4317ac <cvLUT+0x5fc>
  43122c:	e7973003 	ldr	r3, [r7, r3]
  431230:	e5883050 	str	r3, [r8, #80]	; 0x50
  431234:	e3a03001 	mov	r3, #1
  431238:	e5883000 	str	r3, [r8]
  43123c:	e3540000 	cmp	r4, #0
  431240:	0a00000c 	beq	431278 <cvLUT+0xc8>
  431244:	e1d420b2 	ldrh	r2, [r4, #2]
  431248:	e59f3560 	ldr	r3, [pc, #1376]	; 4317b0 <cvLUT+0x600>
  43124c:	e1530802 	cmp	r3, r2, lsl #16
  431250:	1a000008 	bne	431278 <cvLUT+0xc8>
  431254:	e5943018 	ldr	r3, [r4, #24]
  431258:	e3530000 	cmp	r3, #0
  43125c:	da000005 	ble	431278 <cvLUT+0xc8>
  431260:	e5943014 	ldr	r3, [r4, #20]
  431264:	e3530000 	cmp	r3, #0
  431268:	da000002 	ble	431278 <cvLUT+0xc8>
  43126c:	e5943010 	ldr	r3, [r4, #16]
  431270:	e3530000 	cmp	r3, #0
  431274:	1a000013 	bne	4312c8 <cvLUT+0x118>
  431278:	e1a00004 	mov	r0, r4
  43127c:	e28d1024 	add	r1, sp, #36	; 0x24
  431280:	e28d2014 	add	r2, sp, #20
  431284:	e3a03000 	mov	r3, #0
  431288:	ebff7627 	bl	40eb2c <cvGetMat>
  43128c:	e1a04000 	mov	r4, r0
  431290:	ebff85d3 	bl	4129e4 <cvGetErrStatus>
  431294:	e3500000 	cmp	r0, #0
  431298:	aa00000a 	bge	4312c8 <cvLUT+0x118>
  43129c:	e3a030f8 	mov	r3, #248	; 0xf8
  4312a0:	e58d3000 	str	r3, [sp]
  4312a4:	e3e00000 	mvn	r0, #0
  4312a8:	e59f1504 	ldr	r1, [pc, #1284]	; 4317b4 <cvLUT+0x604>
  4312ac:	e08f1001 	add	r1, pc, r1
  4312b0:	e59f2500 	ldr	r2, [pc, #1280]	; 4317b8 <cvLUT+0x608>
  4312b4:	e08f2002 	add	r2, pc, r2
  4312b8:	e59f34fc 	ldr	r3, [pc, #1276]	; 4317bc <cvLUT+0x60c>
  4312bc:	e08f3003 	add	r3, pc, r3
  4312c0:	ebff85f8 	bl	412aa8 <cvError>
  4312c4:	ea00012f 	b	431788 <cvLUT+0x5d8>
  4312c8:	e3550000 	cmp	r5, #0
  4312cc:	0a00000c 	beq	431304 <cvLUT+0x154>
  4312d0:	e1d520b2 	ldrh	r2, [r5, #2]
  4312d4:	e59f34d4 	ldr	r3, [pc, #1236]	; 4317b0 <cvLUT+0x600>
  4312d8:	e1530802 	cmp	r3, r2, lsl #16
  4312dc:	1a000008 	bne	431304 <cvLUT+0x154>
  4312e0:	e5953018 	ldr	r3, [r5, #24]
  4312e4:	e3530000 	cmp	r3, #0
  4312e8:	da000005 	ble	431304 <cvLUT+0x154>
  4312ec:	e5953014 	ldr	r3, [r5, #20]
  4312f0:	e3530000 	cmp	r3, #0
  4312f4:	da000002 	ble	431304 <cvLUT+0x154>
  4312f8:	e5953010 	ldr	r3, [r5, #16]
  4312fc:	e3530000 	cmp	r3, #0
  431300:	1a000013 	bne	431354 <cvLUT+0x1a4>
  431304:	e1a00005 	mov	r0, r5
  431308:	e28d1040 	add	r1, sp, #64	; 0x40
  43130c:	e28d2018 	add	r2, sp, #24
  431310:	e3a03000 	mov	r3, #0
  431314:	ebff7604 	bl	40eb2c <cvGetMat>
  431318:	e1a05000 	mov	r5, r0
  43131c:	ebff85b0 	bl	4129e4 <cvGetErrStatus>
  431320:	e3500000 	cmp	r0, #0
  431324:	aa00000a 	bge	431354 <cvLUT+0x1a4>
  431328:	e3a030fb 	mov	r3, #251	; 0xfb
  43132c:	e58d3000 	str	r3, [sp]
  431330:	e3e00000 	mvn	r0, #0
  431334:	e59f1484 	ldr	r1, [pc, #1156]	; 4317c0 <cvLUT+0x610>
  431338:	e08f1001 	add	r1, pc, r1
  43133c:	e59f2480 	ldr	r2, [pc, #1152]	; 4317c4 <cvLUT+0x614>
  431340:	e08f2002 	add	r2, pc, r2
  431344:	e59f347c 	ldr	r3, [pc, #1148]	; 4317c8 <cvLUT+0x618>
  431348:	e08f3003 	add	r3, pc, r3
  43134c:	ebff85d5 	bl	412aa8 <cvError>
  431350:	ea00010c 	b	431788 <cvLUT+0x5d8>
  431354:	e3560000 	cmp	r6, #0
  431358:	0a00000c 	beq	431390 <cvLUT+0x1e0>
  43135c:	e1d620b2 	ldrh	r2, [r6, #2]
  431360:	e59f3448 	ldr	r3, [pc, #1096]	; 4317b0 <cvLUT+0x600>
  431364:	e1530802 	cmp	r3, r2, lsl #16
  431368:	1a000008 	bne	431390 <cvLUT+0x1e0>
  43136c:	e5963018 	ldr	r3, [r6, #24]
  431370:	e3530000 	cmp	r3, #0
  431374:	da000005 	ble	431390 <cvLUT+0x1e0>
  431378:	e5963014 	ldr	r3, [r6, #20]
  43137c:	e3530000 	cmp	r3, #0
  431380:	da000002 	ble	431390 <cvLUT+0x1e0>
  431384:	e5963010 	ldr	r3, [r6, #16]
  431388:	e3530000 	cmp	r3, #0
  43138c:	1a000013 	bne	4313e0 <cvLUT+0x230>
  431390:	e1a00006 	mov	r0, r6
  431394:	e28d105c 	add	r1, sp, #92	; 0x5c
  431398:	e3a02000 	mov	r2, #0
  43139c:	e1a03002 	mov	r3, r2
  4313a0:	ebff75e1 	bl	40eb2c <cvGetMat>
  4313a4:	e1a06000 	mov	r6, r0
  4313a8:	ebff858d 	bl	4129e4 <cvGetErrStatus>
  4313ac:	e3500000 	cmp	r0, #0
  4313b0:	aa00000a 	bge	4313e0 <cvLUT+0x230>
  4313b4:	e3a030fe 	mov	r3, #254	; 0xfe
  4313b8:	e58d3000 	str	r3, [sp]
  4313bc:	e3e00000 	mvn	r0, #0
  4313c0:	e59f1404 	ldr	r1, [pc, #1028]	; 4317cc <cvLUT+0x61c>
  4313c4:	e08f1001 	add	r1, pc, r1
  4313c8:	e59f2400 	ldr	r2, [pc, #1024]	; 4317d0 <cvLUT+0x620>
  4313cc:	e08f2002 	add	r2, pc, r2
  4313d0:	e59f33fc 	ldr	r3, [pc, #1020]	; 4317d4 <cvLUT+0x624>
  4313d4:	e08f3003 	add	r3, pc, r3
  4313d8:	ebff85b2 	bl	412aa8 <cvError>
  4313dc:	ea0000e9 	b	431788 <cvLUT+0x5d8>
  4313e0:	e59d3014 	ldr	r3, [sp, #20]
  4313e4:	e3530000 	cmp	r3, #0
  4313e8:	1a000002 	bne	4313f8 <cvLUT+0x248>
  4313ec:	e59d3018 	ldr	r3, [sp, #24]
  4313f0:	e3530000 	cmp	r3, #0
  4313f4:	0a00000a 	beq	431424 <cvLUT+0x274>
  4313f8:	e59f33d8 	ldr	r3, [pc, #984]	; 4317d8 <cvLUT+0x628>
  4313fc:	e58d3000 	str	r3, [sp]
  431400:	e3e00017 	mvn	r0, #23
  431404:	e59f13d0 	ldr	r1, [pc, #976]	; 4317dc <cvLUT+0x62c>
  431408:	e08f1001 	add	r1, pc, r1
  43140c:	e59f23cc 	ldr	r2, [pc, #972]	; 4317e0 <cvLUT+0x630>
  431410:	e08f2002 	add	r2, pc, r2
  431414:	e59f33c8 	ldr	r3, [pc, #968]	; 4317e4 <cvLUT+0x634>
  431418:	e08f3003 	add	r3, pc, r3
  43141c:	ebff85a1 	bl	412aa8 <cvError>
  431420:	ea0000d8 	b	431788 <cvLUT+0x5d8>
  431424:	e5943014 	ldr	r3, [r4, #20]
  431428:	e5952014 	ldr	r2, [r5, #20]
  43142c:	e1530002 	cmp	r3, r2
  431430:	1a000003 	bne	431444 <cvLUT+0x294>
  431434:	e5942018 	ldr	r2, [r4, #24]
  431438:	e5951018 	ldr	r1, [r5, #24]
  43143c:	e1520001 	cmp	r2, r1
  431440:	0a00000a 	beq	431470 <cvLUT+0x2c0>
  431444:	e3a03f41 	mov	r3, #260	; 0x104
  431448:	e58d3000 	str	r3, [sp]
  43144c:	e3e000d0 	mvn	r0, #208	; 0xd0
  431450:	e59f1390 	ldr	r1, [pc, #912]	; 4317e8 <cvLUT+0x638>
  431454:	e08f1001 	add	r1, pc, r1
  431458:	e59f238c 	ldr	r2, [pc, #908]	; 4317ec <cvLUT+0x63c>
  43145c:	e08f2002 	add	r2, pc, r2
  431460:	e59f3388 	ldr	r3, [pc, #904]	; 4317f0 <cvLUT+0x640>
  431464:	e08f3003 	add	r3, pc, r3
  431468:	ebff858e 	bl	412aa8 <cvError>
  43146c:	ea0000c5 	b	431788 <cvLUT+0x5d8>
  431470:	e594a000 	ldr	sl, [r4]
  431474:	e595c000 	ldr	ip, [r5]
  431478:	e02a100c 	eor	r1, sl, ip
  43147c:	e3110f7e 	tst	r1, #504	; 0x1f8
  431480:	0a00000a 	beq	4314b0 <cvLUT+0x300>
  431484:	e59f3368 	ldr	r3, [pc, #872]	; 4317f4 <cvLUT+0x644>
  431488:	e58d3000 	str	r3, [sp]
  43148c:	e3e000cc 	mvn	r0, #204	; 0xcc
  431490:	e59f1360 	ldr	r1, [pc, #864]	; 4317f8 <cvLUT+0x648>
  431494:	e08f1001 	add	r1, pc, r1
  431498:	e59f235c 	ldr	r2, [pc, #860]	; 4317fc <cvLUT+0x64c>
  43149c:	e08f2002 	add	r2, pc, r2
  4314a0:	e59f3358 	ldr	r3, [pc, #856]	; 431800 <cvLUT+0x650>
  4314a4:	e08f3003 	add	r3, pc, r3
  4314a8:	ebff857e 	bl	412aa8 <cvError>
  4314ac:	ea0000b5 	b	431788 <cvLUT+0x5d8>
  4314b0:	e20ae007 	and	lr, sl, #7
  4314b4:	e35e0001 	cmp	lr, #1
  4314b8:	da00000a 	ble	4314e8 <cvLUT+0x338>
  4314bc:	e59f3340 	ldr	r3, [pc, #832]	; 431804 <cvLUT+0x654>
  4314c0:	e58d3000 	str	r3, [sp]
  4314c4:	e3e000d1 	mvn	r0, #209	; 0xd1
  4314c8:	e59f1338 	ldr	r1, [pc, #824]	; 431808 <cvLUT+0x658>
  4314cc:	e08f1001 	add	r1, pc, r1
  4314d0:	e59f2334 	ldr	r2, [pc, #820]	; 43180c <cvLUT+0x65c>
  4314d4:	e08f2002 	add	r2, pc, r2
  4314d8:	e59f3330 	ldr	r3, [pc, #816]	; 431810 <cvLUT+0x660>
  4314dc:	e08f3003 	add	r3, pc, r3
  4314e0:	ebff8570 	bl	412aa8 <cvError>
  4314e4:	ea0000a7 	b	431788 <cvLUT+0x5d8>
  4314e8:	e20c9007 	and	r9, ip, #7
  4314ec:	e20c8f7e 	and	r8, ip, #504	; 0x1f8
  4314f0:	e1a081c8 	asr	r8, r8, #3
  4314f4:	e2888001 	add	r8, r8, #1
  4314f8:	e5961000 	ldr	r1, [r6]
  4314fc:	e2017f7e 	and	r7, r1, #504	; 0x1f8
  431500:	e1a071c7 	asr	r7, r7, #3
  431504:	e2877001 	add	r7, r7, #1
  431508:	e3110901 	tst	r1, #16384	; 0x4000
  43150c:	0a00000a 	beq	43153c <cvLUT+0x38c>
  431510:	e3570001 	cmp	r7, #1
  431514:	11570008 	cmpne	r7, r8
  431518:	1a000007 	bne	43153c <cvLUT+0x38c>
  43151c:	e021100c 	eor	r1, r1, ip
  431520:	e3110007 	tst	r1, #7
  431524:	1a000004 	bne	43153c <cvLUT+0x38c>
  431528:	e5960018 	ldr	r0, [r6, #24]
  43152c:	e5961014 	ldr	r1, [r6, #20]
  431530:	e0010190 	mul	r1, r0, r1
  431534:	e3510c01 	cmp	r1, #256	; 0x100
  431538:	0a00000a 	beq	431568 <cvLUT+0x3b8>
  43153c:	e59f32d0 	ldr	r3, [pc, #720]	; 431814 <cvLUT+0x664>
  431540:	e58d3000 	str	r3, [sp]
  431544:	e3e00004 	mvn	r0, #4
  431548:	e59f12c8 	ldr	r1, [pc, #712]	; 431818 <cvLUT+0x668>
  43154c:	e08f1001 	add	r1, pc, r1
  431550:	e59f22c4 	ldr	r2, [pc, #708]	; 43181c <cvLUT+0x66c>
  431554:	e08f2002 	add	r2, pc, r2
  431558:	e59f32c0 	ldr	r3, [pc, #704]	; 431820 <cvLUT+0x670>
  43155c:	e08f3003 	add	r3, pc, r3
  431560:	ebff8550 	bl	412aa8 <cvError>
  431564:	ea000087 	b	431788 <cvLUT+0x5d8>
  431568:	e58d2078 	str	r2, [sp, #120]	; 0x78
  43156c:	e58d307c 	str	r3, [sp, #124]	; 0x7c
  431570:	e28d1080 	add	r1, sp, #128	; 0x80
  431574:	e9110003 	ldmdb	r1, {r0, r1}
  431578:	e28db01c 	add	fp, sp, #28
  43157c:	e88b0003 	stm	fp, {r0, r1}
  431580:	e3570001 	cmp	r7, #1
  431584:	00020298 	muleq	r2, r8, r2
  431588:	058d201c 	streq	r2, [sp, #28]
  43158c:	03a08001 	moveq	r8, #1
  431590:	e00cc00a 	and	ip, ip, sl
  431594:	e31c0901 	tst	ip, #16384	; 0x4000
  431598:	0a000004 	beq	4315b0 <cvLUT+0x400>
  43159c:	e59d201c 	ldr	r2, [sp, #28]
  4315a0:	e0030392 	mul	r3, r2, r3
  4315a4:	e58d301c 	str	r3, [sp, #28]
  4315a8:	e3a03001 	mov	r3, #1
  4315ac:	e58d3020 	str	r3, [sp, #32]
  4315b0:	e5966010 	ldr	r6, [r6, #16]
  4315b4:	e35e0001 	cmp	lr, #1
  4315b8:	1a000012 	bne	431608 <cvLUT+0x458>
  4315bc:	e1a00109 	lsl	r0, r9, #2
  4315c0:	e59f325c 	ldr	r3, [pc, #604]	; 431824 <cvLUT+0x674>
  4315c4:	e1a00033 	lsr	r0, r3, r0
  4315c8:	e200000f 	and	r0, r0, #15
  4315cc:	e0000098 	mul	r0, r8, r0
  4315d0:	e1a0a380 	lsl	sl, r0, #7
  4315d4:	e1a00400 	lsl	r0, r0, #8
  4315d8:	ebffa8b7 	bl	41b8bc <cvAlloc>
  4315dc:	e1a0b000 	mov	fp, r0
  4315e0:	e086100a 	add	r1, r6, sl
  4315e4:	e1a0200a 	mov	r2, sl
  4315e8:	fa000e3a 	blx	434ed8 <memcpy>
  4315ec:	e08b000a 	add	r0, fp, sl
  4315f0:	e1a01006 	mov	r1, r6
  4315f4:	e1a0200a 	mov	r2, sl
  4315f8:	fa000e36 	blx	434ed8 <memcpy>
  4315fc:	e1a0000b 	mov	r0, fp
  431600:	ebffa8df 	bl	41b984 <cvFree_>
  431604:	e1a0600b 	mov	r6, fp
  431608:	e3570001 	cmp	r7, #1
  43160c:	0a000002 	beq	43161c <cvLUT+0x46c>
  431610:	e3570004 	cmp	r7, #4
  431614:	d3590000 	cmple	r9, #0
  431618:	1a000030 	bne	4316e0 <cvLUT+0x530>
  43161c:	e3590000 	cmp	r9, #0
  431620:	1a000004 	bne	431638 <cvLUT+0x488>
  431624:	e59f31fc 	ldr	r3, [pc, #508]	; 431828 <cvLUT+0x678>
  431628:	e08f3003 	add	r3, pc, r3
  43162c:	e0838108 	add	r8, r3, r8, lsl #2
  431630:	e598c040 	ldr	ip, [r8, #64]	; 0x40
  431634:	ea000003 	b	431648 <cvLUT+0x498>
  431638:	e59f31ec 	ldr	r3, [pc, #492]	; 43182c <cvLUT+0x67c>
  43163c:	e08f3003 	add	r3, pc, r3
  431640:	e0839109 	add	r9, r3, r9, lsl #2
  431644:	e599c004 	ldr	ip, [r9, #4]
  431648:	e35c0000 	cmp	ip, #0
  43164c:	1a00000a 	bne	43167c <cvLUT+0x4cc>
  431650:	e59f31d8 	ldr	r3, [pc, #472]	; 431830 <cvLUT+0x680>
  431654:	e58d3000 	str	r3, [sp]
  431658:	e3e000d1 	mvn	r0, #209	; 0xd1
  43165c:	e59f11d0 	ldr	r1, [pc, #464]	; 431834 <cvLUT+0x684>
  431660:	e08f1001 	add	r1, pc, r1
  431664:	e59f21cc 	ldr	r2, [pc, #460]	; 431838 <cvLUT+0x688>
  431668:	e08f2002 	add	r2, pc, r2
  43166c:	e59f31c8 	ldr	r3, [pc, #456]	; 43183c <cvLUT+0x68c>
  431670:	e08f3003 	add	r3, pc, r3
  431674:	ebff850b 	bl	412aa8 <cvError>
  431678:	ea000042 	b	431788 <cvLUT+0x5d8>
  43167c:	e5947010 	ldr	r7, [r4, #16]
  431680:	e594e004 	ldr	lr, [r4, #4]
  431684:	e5952010 	ldr	r2, [r5, #16]
  431688:	e5953004 	ldr	r3, [r5, #4]
  43168c:	e28d101c 	add	r1, sp, #28
  431690:	e8910003 	ldm	r1, {r0, r1}
  431694:	e88d0003 	stm	sp, {r0, r1}
  431698:	e58d6008 	str	r6, [sp, #8]
  43169c:	e1a00007 	mov	r0, r7
  4316a0:	e1a0100e 	mov	r1, lr
  4316a4:	e1a0e00f 	mov	lr, pc
  4316a8:	e12fff1c 	bx	ip
  4316ac:	e3500000 	cmp	r0, #0
  4316b0:	aa000034 	bge	431788 <cvLUT+0x5d8>
  4316b4:	ebff8534 	bl	412b8c <cvErrorFromIppStatus>
  4316b8:	e59f3180 	ldr	r3, [pc, #384]	; 431840 <cvLUT+0x690>
  4316bc:	e58d3000 	str	r3, [sp]
  4316c0:	e59f117c 	ldr	r1, [pc, #380]	; 431844 <cvLUT+0x694>
  4316c4:	e08f1001 	add	r1, pc, r1
  4316c8:	e59f2178 	ldr	r2, [pc, #376]	; 431848 <cvLUT+0x698>
  4316cc:	e08f2002 	add	r2, pc, r2
  4316d0:	e59f3174 	ldr	r3, [pc, #372]	; 43184c <cvLUT+0x69c>
  4316d4:	e08f3003 	add	r3, pc, r3
  4316d8:	ebff84f2 	bl	412aa8 <cvError>
  4316dc:	ea000029 	b	431788 <cvLUT+0x5d8>
  4316e0:	e59f3168 	ldr	r3, [pc, #360]	; 431850 <cvLUT+0x6a0>
  4316e4:	e08f3003 	add	r3, pc, r3
  4316e8:	e0839109 	add	r9, r3, r9, lsl #2
  4316ec:	e599c024 	ldr	ip, [r9, #36]	; 0x24
  4316f0:	e35c0000 	cmp	ip, #0
  4316f4:	1a00000a 	bne	431724 <cvLUT+0x574>
  4316f8:	e59f3154 	ldr	r3, [pc, #340]	; 431854 <cvLUT+0x6a4>
  4316fc:	e58d3000 	str	r3, [sp]
  431700:	e3e000d1 	mvn	r0, #209	; 0xd1
  431704:	e59f114c 	ldr	r1, [pc, #332]	; 431858 <cvLUT+0x6a8>
  431708:	e08f1001 	add	r1, pc, r1
  43170c:	e59f2148 	ldr	r2, [pc, #328]	; 43185c <cvLUT+0x6ac>
  431710:	e08f2002 	add	r2, pc, r2
  431714:	e59f3144 	ldr	r3, [pc, #324]	; 431860 <cvLUT+0x6b0>
  431718:	e08f3003 	add	r3, pc, r3
  43171c:	ebff84e1 	bl	412aa8 <cvError>
  431720:	ea000018 	b	431788 <cvLUT+0x5d8>
  431724:	e5947010 	ldr	r7, [r4, #16]
  431728:	e594e004 	ldr	lr, [r4, #4]
  43172c:	e5952010 	ldr	r2, [r5, #16]
  431730:	e5953004 	ldr	r3, [r5, #4]
  431734:	e28d101c 	add	r1, sp, #28
  431738:	e8910003 	ldm	r1, {r0, r1}
  43173c:	e88d0003 	stm	sp, {r0, r1}
  431740:	e58d6008 	str	r6, [sp, #8]
  431744:	e58d800c 	str	r8, [sp, #12]
  431748:	e1a00007 	mov	r0, r7
  43174c:	e1a0100e 	mov	r1, lr
  431750:	e1a0e00f 	mov	lr, pc
  431754:	e12fff1c 	bx	ip
  431758:	e3500000 	cmp	r0, #0
  43175c:	aa000009 	bge	431788 <cvLUT+0x5d8>
  431760:	ebff8509 	bl	412b8c <cvErrorFromIppStatus>
  431764:	e59f30f8 	ldr	r3, [pc, #248]	; 431864 <cvLUT+0x6b4>
  431768:	e58d3000 	str	r3, [sp]
  43176c:	e59f10f4 	ldr	r1, [pc, #244]	; 431868 <cvLUT+0x6b8>
  431770:	e08f1001 	add	r1, pc, r1
  431774:	e59f20f0 	ldr	r2, [pc, #240]	; 43186c <cvLUT+0x6bc>
  431778:	e08f2002 	add	r2, pc, r2
  43177c:	e59f30ec 	ldr	r3, [pc, #236]	; 431870 <cvLUT+0x6c0>
  431780:	e08f3003 	add	r3, pc, r3
  431784:	ebff84c7 	bl	412aa8 <cvError>
  431788:	e28dd084 	add	sp, sp, #132	; 0x84
  43178c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  431790:	e12fff1e 	bx	lr
  431794:	0000fe6c 	.word	0x0000fe6c
  431798:	1fbd1cd4 	.word	0x1fbd1cd4
  43179c:	1fbd1cc0 	.word	0x1fbd1cc0
  4317a0:	00000058 	.word	0x00000058
  4317a4:	00000084 	.word	0x00000084
  4317a8:	000000c0 	.word	0x000000c0
  4317ac:	00000020 	.word	0x00000020
  4317b0:	42420000 	.word	0x42420000
  4317b4:	1fbcfbec 	.word	0x1fbcfbec
  4317b8:	0000bd1c 	.word	0x0000bd1c
  4317bc:	0000f0e0 	.word	0x0000f0e0
  4317c0:	1fbcfb60 	.word	0x1fbcfb60
  4317c4:	0000bc90 	.word	0x0000bc90
  4317c8:	0000f054 	.word	0x0000f054
  4317cc:	1fbcfad4 	.word	0x1fbcfad4
  4317d0:	0000bc04 	.word	0x0000bc04
  4317d4:	0000efc8 	.word	0x0000efc8
  4317d8:	00000101 	.word	0x00000101
  4317dc:	1fbcfa90 	.word	0x1fbcfa90
  4317e0:	0000f000 	.word	0x0000f000
  4317e4:	0000ef84 	.word	0x0000ef84
  4317e8:	1fbcfa44 	.word	0x1fbcfa44
  4317ec:	0000efb4 	.word	0x0000efb4
  4317f0:	0000ef38 	.word	0x0000ef38
  4317f4:	00000107 	.word	0x00000107
  4317f8:	1fbcfa04 	.word	0x1fbcfa04
  4317fc:	0000ef74 	.word	0x0000ef74
  431800:	0000eef8 	.word	0x0000eef8
  431804:	0000010a 	.word	0x0000010a
  431808:	1fbcf9cc 	.word	0x1fbcf9cc
  43180c:	0000ef3c 	.word	0x0000ef3c
  431810:	0000eec0 	.word	0x0000eec0
  431814:	00000113 	.word	0x00000113
  431818:	1fbcf94c 	.word	0x1fbcf94c
  43181c:	0000ee5c 	.word	0x0000ee5c
  431820:	0000ee40 	.word	0x0000ee40
  431824:	48442211 	.word	0x48442211
  431828:	1fbd1888 	.word	0x1fbd1888
  43182c:	1fbd1874 	.word	0x1fbd1874
  431830:	00000137 	.word	0x00000137
  431834:	1fbcf838 	.word	0x1fbcf838
  431838:	0000eda8 	.word	0x0000eda8
  43183c:	0000ed2c 	.word	0x0000ed2c
  431840:	0000013a 	.word	0x0000013a
  431844:	1fbcf7d4 	.word	0x1fbcf7d4
  431848:	0000e678 	.word	0x0000e678
  43184c:	0000ecc8 	.word	0x0000ecc8
  431850:	1fbd17cc 	.word	0x1fbd17cc
  431854:	00000142 	.word	0x00000142
  431858:	1fbcf790 	.word	0x1fbcf790
  43185c:	0000ed00 	.word	0x0000ed00
  431860:	0000ec84 	.word	0x0000ec84
  431864:	00000145 	.word	0x00000145
  431868:	1fbcf728 	.word	0x1fbcf728
  43186c:	0000e5cc 	.word	0x0000e5cc
  431870:	0000ec1c 	.word	0x0000ec1c
  431874:	00000000 	.word	0x00000000

00431878 <floor>:
  431878:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  43187c:	f3c1 580a 	ubfx	r8, r1, #20, #11
  431880:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
  431884:	2e13      	cmp	r6, #19
  431886:	460b      	mov	r3, r1
  431888:	460d      	mov	r5, r1
  43188a:	4604      	mov	r4, r0
  43188c:	4602      	mov	r2, r0
  43188e:	4689      	mov	r9, r1
  431890:	4607      	mov	r7, r0
  431892:	dc1d      	bgt.n	4318d0 <floor+0x58>
  431894:	2e00      	cmp	r6, #0
  431896:	db40      	blt.n	43191a <floor+0xa2>
  431898:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 43198c <floor+0x114>
  43189c:	fa48 f806 	asr.w	r8, r8, r6
  4318a0:	ea08 0e01 	and.w	lr, r8, r1
  4318a4:	ea5e 0202 	orrs.w	r2, lr, r2
  4318a8:	d017      	beq.n	4318da <floor+0x62>
  4318aa:	a335      	add	r3, pc, #212	; (adr r3, 431980 <floor+0x108>)
  4318ac:	e9d3 2300 	ldrd	r2, r3, [r3]
  4318b0:	f000 f89e 	bl	4319f0 <__adddf3>
  4318b4:	2200      	movs	r2, #0
  4318b6:	2300      	movs	r3, #0
  4318b8:	f000 fcdc 	bl	432274 <__aeabi_dcmpgt>
  4318bc:	b120      	cbz	r0, 4318c8 <floor+0x50>
  4318be:	2d00      	cmp	r5, #0
  4318c0:	db40      	blt.n	431944 <floor+0xcc>
  4318c2:	ea29 0508 	bic.w	r5, r9, r8
  4318c6:	2700      	movs	r7, #0
  4318c8:	4638      	mov	r0, r7
  4318ca:	4629      	mov	r1, r5
  4318cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4318d0:	2e33      	cmp	r6, #51	; 0x33
  4318d2:	dd06      	ble.n	4318e2 <floor+0x6a>
  4318d4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
  4318d8:	d02f      	beq.n	43193a <floor+0xc2>
  4318da:	4620      	mov	r0, r4
  4318dc:	4619      	mov	r1, r3
  4318de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4318e2:	f2a8 4213 	subw	r2, r8, #1043	; 0x413
  4318e6:	f04f 3aff 	mov.w	sl, #4294967295
  4318ea:	fa2a fa02 	lsr.w	sl, sl, r2
  4318ee:	ea1a 0f00 	tst.w	sl, r0
  4318f2:	d0f2      	beq.n	4318da <floor+0x62>
  4318f4:	a322      	add	r3, pc, #136	; (adr r3, 431980 <floor+0x108>)
  4318f6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4318fa:	f000 f879 	bl	4319f0 <__adddf3>
  4318fe:	2200      	movs	r2, #0
  431900:	2300      	movs	r3, #0
  431902:	f000 fcb7 	bl	432274 <__aeabi_dcmpgt>
  431906:	2800      	cmp	r0, #0
  431908:	d0de      	beq.n	4318c8 <floor+0x50>
  43190a:	2d00      	cmp	r5, #0
  43190c:	db1f      	blt.n	43194e <floor+0xd6>
  43190e:	464d      	mov	r5, r9
  431910:	ea27 070a 	bic.w	r7, r7, sl
  431914:	4638      	mov	r0, r7
  431916:	4629      	mov	r1, r5
  431918:	e7d8      	b.n	4318cc <floor+0x54>
  43191a:	a319      	add	r3, pc, #100	; (adr r3, 431980 <floor+0x108>)
  43191c:	e9d3 2300 	ldrd	r2, r3, [r3]
  431920:	f000 f866 	bl	4319f0 <__adddf3>
  431924:	2200      	movs	r2, #0
  431926:	2300      	movs	r3, #0
  431928:	f000 fca4 	bl	432274 <__aeabi_dcmpgt>
  43192c:	2800      	cmp	r0, #0
  43192e:	d0cb      	beq.n	4318c8 <floor+0x50>
  431930:	2d00      	cmp	r5, #0
  431932:	db1a      	blt.n	43196a <floor+0xf2>
  431934:	2700      	movs	r7, #0
  431936:	463d      	mov	r5, r7
  431938:	e7c6      	b.n	4318c8 <floor+0x50>
  43193a:	4602      	mov	r2, r0
  43193c:	460b      	mov	r3, r1
  43193e:	f000 f857 	bl	4319f0 <__adddf3>
  431942:	e7cc      	b.n	4318de <floor+0x66>
  431944:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  431948:	4133      	asrs	r3, r6
  43194a:	4499      	add	r9, r3
  43194c:	e7b9      	b.n	4318c2 <floor+0x4a>
  43194e:	2e14      	cmp	r6, #20
  431950:	d008      	beq.n	431964 <floor+0xec>
  431952:	f5c8 6886 	rsb	r8, r8, #1072	; 0x430
  431956:	f108 0803 	add.w	r8, r8, #3
  43195a:	2301      	movs	r3, #1
  43195c:	fa03 f308 	lsl.w	r3, r3, r8
  431960:	191f      	adds	r7, r3, r4
  431962:	d3d4      	bcc.n	43190e <floor+0x96>
  431964:	f109 0901 	add.w	r9, r9, #1
  431968:	e7d1      	b.n	43190e <floor+0x96>
  43196a:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
  43196e:	4b06      	ldr	r3, [pc, #24]	; (431988 <floor+0x110>)
  431970:	4322      	orrs	r2, r4
  431972:	bf18      	it	ne
  431974:	461d      	movne	r5, r3
  431976:	2700      	movs	r7, #0
  431978:	e7a6      	b.n	4318c8 <floor+0x50>
  43197a:	bf00      	nop
  43197c:	f3af 8000 	nop.w
  431980:	8800759c 	.word	0x8800759c
  431984:	7e37e43c 	.word	0x7e37e43c
  431988:	bff00000 	.word	0xbff00000
  43198c:	000fffff 	.word	0x000fffff

00431990 <__aeabi_uidiv>:
  431990:	2900      	cmp	r1, #0
  431992:	d002      	beq.n	43199a <__aeabi_uidiv+0xa>
  431994:	fbb0 f0f1 	udiv	r0, r0, r1
  431998:	4770      	bx	lr
  43199a:	b108      	cbz	r0, 4319a0 <__aeabi_uidiv+0x10>
  43199c:	f04f 30ff 	mov.w	r0, #4294967295
  4319a0:	f000 b81e 	b.w	4319e0 <__aeabi_idiv0>

004319a4 <__aeabi_uidivmod>:
  4319a4:	2900      	cmp	r1, #0
  4319a6:	d0f8      	beq.n	43199a <__aeabi_uidiv+0xa>
  4319a8:	4602      	mov	r2, r0
  4319aa:	fbb0 f0f1 	udiv	r0, r0, r1
  4319ae:	fb00 2111 	mls	r1, r0, r1, r2
  4319b2:	4770      	bx	lr

004319b4 <__aeabi_idiv>:
  4319b4:	2900      	cmp	r1, #0
  4319b6:	d002      	beq.n	4319be <__aeabi_idiv+0xa>
  4319b8:	fb90 f0f1 	sdiv	r0, r0, r1
  4319bc:	4770      	bx	lr
  4319be:	2800      	cmp	r0, #0
  4319c0:	bfc8      	it	gt
  4319c2:	f06f 4000 	mvngt.w	r0, #2147483648	; 0x80000000
  4319c6:	bfb8      	it	lt
  4319c8:	f04f 4000 	movlt.w	r0, #2147483648	; 0x80000000
  4319cc:	f000 b808 	b.w	4319e0 <__aeabi_idiv0>

004319d0 <__aeabi_idivmod>:
  4319d0:	2900      	cmp	r1, #0
  4319d2:	d0f4      	beq.n	4319be <__aeabi_idiv+0xa>
  4319d4:	4602      	mov	r2, r0
  4319d6:	fb90 f0f1 	sdiv	r0, r0, r1
  4319da:	fb00 2111 	mls	r1, r0, r1, r2
  4319de:	4770      	bx	lr

004319e0 <__aeabi_idiv0>:
  4319e0:	4770      	bx	lr
  4319e2:	bf00      	nop

004319e4 <__aeabi_drsub>:
  4319e4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4319e8:	e002      	b.n	4319f0 <__adddf3>
  4319ea:	bf00      	nop

004319ec <__aeabi_dsub>:
  4319ec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004319f0 <__adddf3>:
  4319f0:	b530      	push	{r4, r5, lr}
  4319f2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4319f6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4319fa:	ea94 0f05 	teq	r4, r5
  4319fe:	bf08      	it	eq
  431a00:	ea90 0f02 	teqeq	r0, r2
  431a04:	bf1f      	itttt	ne
  431a06:	ea54 0c00 	orrsne.w	ip, r4, r0
  431a0a:	ea55 0c02 	orrsne.w	ip, r5, r2
  431a0e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  431a12:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  431a16:	f000 80e2 	beq.w	431bde <__adddf3+0x1ee>
  431a1a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  431a1e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  431a22:	bfb8      	it	lt
  431a24:	426d      	neglt	r5, r5
  431a26:	dd0c      	ble.n	431a42 <__adddf3+0x52>
  431a28:	442c      	add	r4, r5
  431a2a:	ea80 0202 	eor.w	r2, r0, r2
  431a2e:	ea81 0303 	eor.w	r3, r1, r3
  431a32:	ea82 0000 	eor.w	r0, r2, r0
  431a36:	ea83 0101 	eor.w	r1, r3, r1
  431a3a:	ea80 0202 	eor.w	r2, r0, r2
  431a3e:	ea81 0303 	eor.w	r3, r1, r3
  431a42:	2d36      	cmp	r5, #54	; 0x36
  431a44:	bf88      	it	hi
  431a46:	bd30      	pophi	{r4, r5, pc}
  431a48:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  431a4c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  431a50:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  431a54:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  431a58:	d002      	beq.n	431a60 <__adddf3+0x70>
  431a5a:	4240      	negs	r0, r0
  431a5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  431a60:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  431a64:	ea4f 3303 	mov.w	r3, r3, lsl #12
  431a68:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  431a6c:	d002      	beq.n	431a74 <__adddf3+0x84>
  431a6e:	4252      	negs	r2, r2
  431a70:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  431a74:	ea94 0f05 	teq	r4, r5
  431a78:	f000 80a7 	beq.w	431bca <__adddf3+0x1da>
  431a7c:	f1a4 0401 	sub.w	r4, r4, #1
  431a80:	f1d5 0e20 	rsbs	lr, r5, #32
  431a84:	db0d      	blt.n	431aa2 <__adddf3+0xb2>
  431a86:	fa02 fc0e 	lsl.w	ip, r2, lr
  431a8a:	fa22 f205 	lsr.w	r2, r2, r5
  431a8e:	1880      	adds	r0, r0, r2
  431a90:	f141 0100 	adc.w	r1, r1, #0
  431a94:	fa03 f20e 	lsl.w	r2, r3, lr
  431a98:	1880      	adds	r0, r0, r2
  431a9a:	fa43 f305 	asr.w	r3, r3, r5
  431a9e:	4159      	adcs	r1, r3
  431aa0:	e00e      	b.n	431ac0 <__adddf3+0xd0>
  431aa2:	f1a5 0520 	sub.w	r5, r5, #32
  431aa6:	f10e 0e20 	add.w	lr, lr, #32
  431aaa:	2a01      	cmp	r2, #1
  431aac:	fa03 fc0e 	lsl.w	ip, r3, lr
  431ab0:	bf28      	it	cs
  431ab2:	f04c 0c02 	orrcs.w	ip, ip, #2
  431ab6:	fa43 f305 	asr.w	r3, r3, r5
  431aba:	18c0      	adds	r0, r0, r3
  431abc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  431ac0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  431ac4:	d507      	bpl.n	431ad6 <__adddf3+0xe6>
  431ac6:	f04f 0e00 	mov.w	lr, #0
  431aca:	f1dc 0c00 	rsbs	ip, ip, #0
  431ace:	eb7e 0000 	sbcs.w	r0, lr, r0
  431ad2:	eb6e 0101 	sbc.w	r1, lr, r1
  431ad6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  431ada:	d31b      	bcc.n	431b14 <__adddf3+0x124>
  431adc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  431ae0:	d30c      	bcc.n	431afc <__adddf3+0x10c>
  431ae2:	0849      	lsrs	r1, r1, #1
  431ae4:	ea5f 0030 	movs.w	r0, r0, rrx
  431ae8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  431aec:	f104 0401 	add.w	r4, r4, #1
  431af0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  431af4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  431af8:	f080 809a 	bcs.w	431c30 <__adddf3+0x240>
  431afc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  431b00:	bf08      	it	eq
  431b02:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  431b06:	f150 0000 	adcs.w	r0, r0, #0
  431b0a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  431b0e:	ea41 0105 	orr.w	r1, r1, r5
  431b12:	bd30      	pop	{r4, r5, pc}
  431b14:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  431b18:	4140      	adcs	r0, r0
  431b1a:	eb41 0101 	adc.w	r1, r1, r1
  431b1e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  431b22:	f1a4 0401 	sub.w	r4, r4, #1
  431b26:	d1e9      	bne.n	431afc <__adddf3+0x10c>
  431b28:	f091 0f00 	teq	r1, #0
  431b2c:	bf04      	itt	eq
  431b2e:	4601      	moveq	r1, r0
  431b30:	2000      	moveq	r0, #0
  431b32:	fab1 f381 	clz	r3, r1
  431b36:	bf08      	it	eq
  431b38:	3320      	addeq	r3, #32
  431b3a:	f1a3 030b 	sub.w	r3, r3, #11
  431b3e:	f1b3 0220 	subs.w	r2, r3, #32
  431b42:	da0c      	bge.n	431b5e <__adddf3+0x16e>
  431b44:	320c      	adds	r2, #12
  431b46:	dd08      	ble.n	431b5a <__adddf3+0x16a>
  431b48:	f102 0c14 	add.w	ip, r2, #20
  431b4c:	f1c2 020c 	rsb	r2, r2, #12
  431b50:	fa01 f00c 	lsl.w	r0, r1, ip
  431b54:	fa21 f102 	lsr.w	r1, r1, r2
  431b58:	e00c      	b.n	431b74 <__adddf3+0x184>
  431b5a:	f102 0214 	add.w	r2, r2, #20
  431b5e:	bfd8      	it	le
  431b60:	f1c2 0c20 	rsble	ip, r2, #32
  431b64:	fa01 f102 	lsl.w	r1, r1, r2
  431b68:	fa20 fc0c 	lsr.w	ip, r0, ip
  431b6c:	bfdc      	itt	le
  431b6e:	ea41 010c 	orrle.w	r1, r1, ip
  431b72:	4090      	lslle	r0, r2
  431b74:	1ae4      	subs	r4, r4, r3
  431b76:	bfa2      	ittt	ge
  431b78:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  431b7c:	4329      	orrge	r1, r5
  431b7e:	bd30      	popge	{r4, r5, pc}
  431b80:	ea6f 0404 	mvn.w	r4, r4
  431b84:	3c1f      	subs	r4, #31
  431b86:	da1c      	bge.n	431bc2 <__adddf3+0x1d2>
  431b88:	340c      	adds	r4, #12
  431b8a:	dc0e      	bgt.n	431baa <__adddf3+0x1ba>
  431b8c:	f104 0414 	add.w	r4, r4, #20
  431b90:	f1c4 0220 	rsb	r2, r4, #32
  431b94:	fa20 f004 	lsr.w	r0, r0, r4
  431b98:	fa01 f302 	lsl.w	r3, r1, r2
  431b9c:	ea40 0003 	orr.w	r0, r0, r3
  431ba0:	fa21 f304 	lsr.w	r3, r1, r4
  431ba4:	ea45 0103 	orr.w	r1, r5, r3
  431ba8:	bd30      	pop	{r4, r5, pc}
  431baa:	f1c4 040c 	rsb	r4, r4, #12
  431bae:	f1c4 0220 	rsb	r2, r4, #32
  431bb2:	fa20 f002 	lsr.w	r0, r0, r2
  431bb6:	fa01 f304 	lsl.w	r3, r1, r4
  431bba:	ea40 0003 	orr.w	r0, r0, r3
  431bbe:	4629      	mov	r1, r5
  431bc0:	bd30      	pop	{r4, r5, pc}
  431bc2:	fa21 f004 	lsr.w	r0, r1, r4
  431bc6:	4629      	mov	r1, r5
  431bc8:	bd30      	pop	{r4, r5, pc}
  431bca:	f094 0f00 	teq	r4, #0
  431bce:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  431bd2:	bf06      	itte	eq
  431bd4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  431bd8:	3401      	addeq	r4, #1
  431bda:	3d01      	subne	r5, #1
  431bdc:	e74e      	b.n	431a7c <__adddf3+0x8c>
  431bde:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  431be2:	bf18      	it	ne
  431be4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  431be8:	d029      	beq.n	431c3e <__adddf3+0x24e>
  431bea:	ea94 0f05 	teq	r4, r5
  431bee:	bf08      	it	eq
  431bf0:	ea90 0f02 	teqeq	r0, r2
  431bf4:	d005      	beq.n	431c02 <__adddf3+0x212>
  431bf6:	ea54 0c00 	orrs.w	ip, r4, r0
  431bfa:	bf04      	itt	eq
  431bfc:	4619      	moveq	r1, r3
  431bfe:	4610      	moveq	r0, r2
  431c00:	bd30      	pop	{r4, r5, pc}
  431c02:	ea91 0f03 	teq	r1, r3
  431c06:	bf1e      	ittt	ne
  431c08:	2100      	movne	r1, #0
  431c0a:	2000      	movne	r0, #0
  431c0c:	bd30      	popne	{r4, r5, pc}
  431c0e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  431c12:	d105      	bne.n	431c20 <__adddf3+0x230>
  431c14:	0040      	lsls	r0, r0, #1
  431c16:	4149      	adcs	r1, r1
  431c18:	bf28      	it	cs
  431c1a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  431c1e:	bd30      	pop	{r4, r5, pc}
  431c20:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  431c24:	bf3c      	itt	cc
  431c26:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  431c2a:	bd30      	popcc	{r4, r5, pc}
  431c2c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  431c30:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  431c34:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  431c38:	f04f 0000 	mov.w	r0, #0
  431c3c:	bd30      	pop	{r4, r5, pc}
  431c3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  431c42:	bf1a      	itte	ne
  431c44:	4619      	movne	r1, r3
  431c46:	4610      	movne	r0, r2
  431c48:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  431c4c:	bf1c      	itt	ne
  431c4e:	460b      	movne	r3, r1
  431c50:	4602      	movne	r2, r0
  431c52:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  431c56:	bf06      	itte	eq
  431c58:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  431c5c:	ea91 0f03 	teqeq	r1, r3
  431c60:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  431c64:	bd30      	pop	{r4, r5, pc}
  431c66:	bf00      	nop

00431c68 <__aeabi_ui2d>:
  431c68:	f090 0f00 	teq	r0, #0
  431c6c:	bf04      	itt	eq
  431c6e:	2100      	moveq	r1, #0
  431c70:	4770      	bxeq	lr
  431c72:	b530      	push	{r4, r5, lr}
  431c74:	f44f 6480 	mov.w	r4, #1024	; 0x400
  431c78:	f104 0432 	add.w	r4, r4, #50	; 0x32
  431c7c:	f04f 0500 	mov.w	r5, #0
  431c80:	f04f 0100 	mov.w	r1, #0
  431c84:	e750      	b.n	431b28 <__adddf3+0x138>
  431c86:	bf00      	nop

00431c88 <__aeabi_i2d>:
  431c88:	f090 0f00 	teq	r0, #0
  431c8c:	bf04      	itt	eq
  431c8e:	2100      	moveq	r1, #0
  431c90:	4770      	bxeq	lr
  431c92:	b530      	push	{r4, r5, lr}
  431c94:	f44f 6480 	mov.w	r4, #1024	; 0x400
  431c98:	f104 0432 	add.w	r4, r4, #50	; 0x32
  431c9c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  431ca0:	bf48      	it	mi
  431ca2:	4240      	negmi	r0, r0
  431ca4:	f04f 0100 	mov.w	r1, #0
  431ca8:	e73e      	b.n	431b28 <__adddf3+0x138>
  431caa:	bf00      	nop

00431cac <__aeabi_f2d>:
  431cac:	0042      	lsls	r2, r0, #1
  431cae:	ea4f 01e2 	mov.w	r1, r2, asr #3
  431cb2:	ea4f 0131 	mov.w	r1, r1, rrx
  431cb6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  431cba:	bf1f      	itttt	ne
  431cbc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  431cc0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  431cc4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  431cc8:	4770      	bxne	lr
  431cca:	f092 0f00 	teq	r2, #0
  431cce:	bf14      	ite	ne
  431cd0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  431cd4:	4770      	bxeq	lr
  431cd6:	b530      	push	{r4, r5, lr}
  431cd8:	f44f 7460 	mov.w	r4, #896	; 0x380
  431cdc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  431ce0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  431ce4:	e720      	b.n	431b28 <__adddf3+0x138>
  431ce6:	bf00      	nop

00431ce8 <__aeabi_ul2d>:
  431ce8:	ea50 0201 	orrs.w	r2, r0, r1
  431cec:	bf08      	it	eq
  431cee:	4770      	bxeq	lr
  431cf0:	b530      	push	{r4, r5, lr}
  431cf2:	f04f 0500 	mov.w	r5, #0
  431cf6:	e00a      	b.n	431d0e <__aeabi_l2d+0x16>

00431cf8 <__aeabi_l2d>:
  431cf8:	ea50 0201 	orrs.w	r2, r0, r1
  431cfc:	bf08      	it	eq
  431cfe:	4770      	bxeq	lr
  431d00:	b530      	push	{r4, r5, lr}
  431d02:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  431d06:	d502      	bpl.n	431d0e <__aeabi_l2d+0x16>
  431d08:	4240      	negs	r0, r0
  431d0a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  431d0e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  431d12:	f104 0432 	add.w	r4, r4, #50	; 0x32
  431d16:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  431d1a:	f43f aedc 	beq.w	431ad6 <__adddf3+0xe6>
  431d1e:	f04f 0203 	mov.w	r2, #3
  431d22:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  431d26:	bf18      	it	ne
  431d28:	3203      	addne	r2, #3
  431d2a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  431d2e:	bf18      	it	ne
  431d30:	3203      	addne	r2, #3
  431d32:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  431d36:	f1c2 0320 	rsb	r3, r2, #32
  431d3a:	fa00 fc03 	lsl.w	ip, r0, r3
  431d3e:	fa20 f002 	lsr.w	r0, r0, r2
  431d42:	fa01 fe03 	lsl.w	lr, r1, r3
  431d46:	ea40 000e 	orr.w	r0, r0, lr
  431d4a:	fa21 f102 	lsr.w	r1, r1, r2
  431d4e:	4414      	add	r4, r2
  431d50:	e6c1      	b.n	431ad6 <__adddf3+0xe6>
  431d52:	bf00      	nop

00431d54 <__aeabi_dmul>:
  431d54:	b570      	push	{r4, r5, r6, lr}
  431d56:	f04f 0cff 	mov.w	ip, #255	; 0xff
  431d5a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  431d5e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  431d62:	bf1d      	ittte	ne
  431d64:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  431d68:	ea94 0f0c 	teqne	r4, ip
  431d6c:	ea95 0f0c 	teqne	r5, ip
  431d70:	f000 f8de 	bleq	431f30 <__aeabi_dmul+0x1dc>
  431d74:	442c      	add	r4, r5
  431d76:	ea81 0603 	eor.w	r6, r1, r3
  431d7a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  431d7e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  431d82:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  431d86:	bf18      	it	ne
  431d88:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  431d8c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  431d90:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  431d94:	d038      	beq.n	431e08 <__aeabi_dmul+0xb4>
  431d96:	fba0 ce02 	umull	ip, lr, r0, r2
  431d9a:	f04f 0500 	mov.w	r5, #0
  431d9e:	fbe1 e502 	umlal	lr, r5, r1, r2
  431da2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  431da6:	fbe0 e503 	umlal	lr, r5, r0, r3
  431daa:	f04f 0600 	mov.w	r6, #0
  431dae:	fbe1 5603 	umlal	r5, r6, r1, r3
  431db2:	f09c 0f00 	teq	ip, #0
  431db6:	bf18      	it	ne
  431db8:	f04e 0e01 	orrne.w	lr, lr, #1
  431dbc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  431dc0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  431dc4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  431dc8:	d204      	bcs.n	431dd4 <__aeabi_dmul+0x80>
  431dca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  431dce:	416d      	adcs	r5, r5
  431dd0:	eb46 0606 	adc.w	r6, r6, r6
  431dd4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  431dd8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  431ddc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  431de0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  431de4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  431de8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  431dec:	bf88      	it	hi
  431dee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  431df2:	d81e      	bhi.n	431e32 <__aeabi_dmul+0xde>
  431df4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  431df8:	bf08      	it	eq
  431dfa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  431dfe:	f150 0000 	adcs.w	r0, r0, #0
  431e02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  431e06:	bd70      	pop	{r4, r5, r6, pc}
  431e08:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  431e0c:	ea46 0101 	orr.w	r1, r6, r1
  431e10:	ea40 0002 	orr.w	r0, r0, r2
  431e14:	ea81 0103 	eor.w	r1, r1, r3
  431e18:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  431e1c:	bfc2      	ittt	gt
  431e1e:	ebd4 050c 	rsbsgt	r5, r4, ip
  431e22:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  431e26:	bd70      	popgt	{r4, r5, r6, pc}
  431e28:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  431e2c:	f04f 0e00 	mov.w	lr, #0
  431e30:	3c01      	subs	r4, #1
  431e32:	f300 80ab 	bgt.w	431f8c <__aeabi_dmul+0x238>
  431e36:	f114 0f36 	cmn.w	r4, #54	; 0x36
  431e3a:	bfde      	ittt	le
  431e3c:	2000      	movle	r0, #0
  431e3e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  431e42:	bd70      	pople	{r4, r5, r6, pc}
  431e44:	f1c4 0400 	rsb	r4, r4, #0
  431e48:	3c20      	subs	r4, #32
  431e4a:	da35      	bge.n	431eb8 <__aeabi_dmul+0x164>
  431e4c:	340c      	adds	r4, #12
  431e4e:	dc1b      	bgt.n	431e88 <__aeabi_dmul+0x134>
  431e50:	f104 0414 	add.w	r4, r4, #20
  431e54:	f1c4 0520 	rsb	r5, r4, #32
  431e58:	fa00 f305 	lsl.w	r3, r0, r5
  431e5c:	fa20 f004 	lsr.w	r0, r0, r4
  431e60:	fa01 f205 	lsl.w	r2, r1, r5
  431e64:	ea40 0002 	orr.w	r0, r0, r2
  431e68:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  431e6c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  431e70:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  431e74:	fa21 f604 	lsr.w	r6, r1, r4
  431e78:	eb42 0106 	adc.w	r1, r2, r6
  431e7c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  431e80:	bf08      	it	eq
  431e82:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  431e86:	bd70      	pop	{r4, r5, r6, pc}
  431e88:	f1c4 040c 	rsb	r4, r4, #12
  431e8c:	f1c4 0520 	rsb	r5, r4, #32
  431e90:	fa00 f304 	lsl.w	r3, r0, r4
  431e94:	fa20 f005 	lsr.w	r0, r0, r5
  431e98:	fa01 f204 	lsl.w	r2, r1, r4
  431e9c:	ea40 0002 	orr.w	r0, r0, r2
  431ea0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  431ea4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  431ea8:	f141 0100 	adc.w	r1, r1, #0
  431eac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  431eb0:	bf08      	it	eq
  431eb2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  431eb6:	bd70      	pop	{r4, r5, r6, pc}
  431eb8:	f1c4 0520 	rsb	r5, r4, #32
  431ebc:	fa00 f205 	lsl.w	r2, r0, r5
  431ec0:	ea4e 0e02 	orr.w	lr, lr, r2
  431ec4:	fa20 f304 	lsr.w	r3, r0, r4
  431ec8:	fa01 f205 	lsl.w	r2, r1, r5
  431ecc:	ea43 0302 	orr.w	r3, r3, r2
  431ed0:	fa21 f004 	lsr.w	r0, r1, r4
  431ed4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  431ed8:	fa21 f204 	lsr.w	r2, r1, r4
  431edc:	ea20 0002 	bic.w	r0, r0, r2
  431ee0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  431ee4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  431ee8:	bf08      	it	eq
  431eea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  431eee:	bd70      	pop	{r4, r5, r6, pc}
  431ef0:	f094 0f00 	teq	r4, #0
  431ef4:	d10f      	bne.n	431f16 <__aeabi_dmul+0x1c2>
  431ef6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  431efa:	0040      	lsls	r0, r0, #1
  431efc:	eb41 0101 	adc.w	r1, r1, r1
  431f00:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  431f04:	bf08      	it	eq
  431f06:	3c01      	subeq	r4, #1
  431f08:	d0f7      	beq.n	431efa <__aeabi_dmul+0x1a6>
  431f0a:	ea41 0106 	orr.w	r1, r1, r6
  431f0e:	f095 0f00 	teq	r5, #0
  431f12:	bf18      	it	ne
  431f14:	4770      	bxne	lr
  431f16:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  431f1a:	0052      	lsls	r2, r2, #1
  431f1c:	eb43 0303 	adc.w	r3, r3, r3
  431f20:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  431f24:	bf08      	it	eq
  431f26:	3d01      	subeq	r5, #1
  431f28:	d0f7      	beq.n	431f1a <__aeabi_dmul+0x1c6>
  431f2a:	ea43 0306 	orr.w	r3, r3, r6
  431f2e:	4770      	bx	lr
  431f30:	ea94 0f0c 	teq	r4, ip
  431f34:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  431f38:	bf18      	it	ne
  431f3a:	ea95 0f0c 	teqne	r5, ip
  431f3e:	d00c      	beq.n	431f5a <__aeabi_dmul+0x206>
  431f40:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  431f44:	bf18      	it	ne
  431f46:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  431f4a:	d1d1      	bne.n	431ef0 <__aeabi_dmul+0x19c>
  431f4c:	ea81 0103 	eor.w	r1, r1, r3
  431f50:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  431f54:	f04f 0000 	mov.w	r0, #0
  431f58:	bd70      	pop	{r4, r5, r6, pc}
  431f5a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  431f5e:	bf06      	itte	eq
  431f60:	4610      	moveq	r0, r2
  431f62:	4619      	moveq	r1, r3
  431f64:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  431f68:	d019      	beq.n	431f9e <__aeabi_dmul+0x24a>
  431f6a:	ea94 0f0c 	teq	r4, ip
  431f6e:	d102      	bne.n	431f76 <__aeabi_dmul+0x222>
  431f70:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  431f74:	d113      	bne.n	431f9e <__aeabi_dmul+0x24a>
  431f76:	ea95 0f0c 	teq	r5, ip
  431f7a:	d105      	bne.n	431f88 <__aeabi_dmul+0x234>
  431f7c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  431f80:	bf1c      	itt	ne
  431f82:	4610      	movne	r0, r2
  431f84:	4619      	movne	r1, r3
  431f86:	d10a      	bne.n	431f9e <__aeabi_dmul+0x24a>
  431f88:	ea81 0103 	eor.w	r1, r1, r3
  431f8c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  431f90:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  431f94:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  431f98:	f04f 0000 	mov.w	r0, #0
  431f9c:	bd70      	pop	{r4, r5, r6, pc}
  431f9e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  431fa2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  431fa6:	bd70      	pop	{r4, r5, r6, pc}

00431fa8 <__aeabi_ddiv>:
  431fa8:	b570      	push	{r4, r5, r6, lr}
  431faa:	f04f 0cff 	mov.w	ip, #255	; 0xff
  431fae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  431fb2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  431fb6:	bf1d      	ittte	ne
  431fb8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  431fbc:	ea94 0f0c 	teqne	r4, ip
  431fc0:	ea95 0f0c 	teqne	r5, ip
  431fc4:	f000 f8a7 	bleq	432116 <__aeabi_ddiv+0x16e>
  431fc8:	eba4 0405 	sub.w	r4, r4, r5
  431fcc:	ea81 0e03 	eor.w	lr, r1, r3
  431fd0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  431fd4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  431fd8:	f000 8088 	beq.w	4320ec <__aeabi_ddiv+0x144>
  431fdc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  431fe0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  431fe4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  431fe8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  431fec:	ea4f 2202 	mov.w	r2, r2, lsl #8
  431ff0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  431ff4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  431ff8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  431ffc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  432000:	429d      	cmp	r5, r3
  432002:	bf08      	it	eq
  432004:	4296      	cmpeq	r6, r2
  432006:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  43200a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  43200e:	d202      	bcs.n	432016 <__aeabi_ddiv+0x6e>
  432010:	085b      	lsrs	r3, r3, #1
  432012:	ea4f 0232 	mov.w	r2, r2, rrx
  432016:	1ab6      	subs	r6, r6, r2
  432018:	eb65 0503 	sbc.w	r5, r5, r3
  43201c:	085b      	lsrs	r3, r3, #1
  43201e:	ea4f 0232 	mov.w	r2, r2, rrx
  432022:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  432026:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  43202a:	ebb6 0e02 	subs.w	lr, r6, r2
  43202e:	eb75 0e03 	sbcs.w	lr, r5, r3
  432032:	bf22      	ittt	cs
  432034:	1ab6      	subcs	r6, r6, r2
  432036:	4675      	movcs	r5, lr
  432038:	ea40 000c 	orrcs.w	r0, r0, ip
  43203c:	085b      	lsrs	r3, r3, #1
  43203e:	ea4f 0232 	mov.w	r2, r2, rrx
  432042:	ebb6 0e02 	subs.w	lr, r6, r2
  432046:	eb75 0e03 	sbcs.w	lr, r5, r3
  43204a:	bf22      	ittt	cs
  43204c:	1ab6      	subcs	r6, r6, r2
  43204e:	4675      	movcs	r5, lr
  432050:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  432054:	085b      	lsrs	r3, r3, #1
  432056:	ea4f 0232 	mov.w	r2, r2, rrx
  43205a:	ebb6 0e02 	subs.w	lr, r6, r2
  43205e:	eb75 0e03 	sbcs.w	lr, r5, r3
  432062:	bf22      	ittt	cs
  432064:	1ab6      	subcs	r6, r6, r2
  432066:	4675      	movcs	r5, lr
  432068:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  43206c:	085b      	lsrs	r3, r3, #1
  43206e:	ea4f 0232 	mov.w	r2, r2, rrx
  432072:	ebb6 0e02 	subs.w	lr, r6, r2
  432076:	eb75 0e03 	sbcs.w	lr, r5, r3
  43207a:	bf22      	ittt	cs
  43207c:	1ab6      	subcs	r6, r6, r2
  43207e:	4675      	movcs	r5, lr
  432080:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  432084:	ea55 0e06 	orrs.w	lr, r5, r6
  432088:	d018      	beq.n	4320bc <__aeabi_ddiv+0x114>
  43208a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  43208e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  432092:	ea4f 1606 	mov.w	r6, r6, lsl #4
  432096:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  43209a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  43209e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4320a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4320a6:	d1c0      	bne.n	43202a <__aeabi_ddiv+0x82>
  4320a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4320ac:	d10b      	bne.n	4320c6 <__aeabi_ddiv+0x11e>
  4320ae:	ea41 0100 	orr.w	r1, r1, r0
  4320b2:	f04f 0000 	mov.w	r0, #0
  4320b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4320ba:	e7b6      	b.n	43202a <__aeabi_ddiv+0x82>
  4320bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4320c0:	bf04      	itt	eq
  4320c2:	4301      	orreq	r1, r0
  4320c4:	2000      	moveq	r0, #0
  4320c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4320ca:	bf88      	it	hi
  4320cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4320d0:	f63f aeaf 	bhi.w	431e32 <__aeabi_dmul+0xde>
  4320d4:	ebb5 0c03 	subs.w	ip, r5, r3
  4320d8:	bf04      	itt	eq
  4320da:	ebb6 0c02 	subseq.w	ip, r6, r2
  4320de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4320e2:	f150 0000 	adcs.w	r0, r0, #0
  4320e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4320ea:	bd70      	pop	{r4, r5, r6, pc}
  4320ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4320f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4320f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4320f8:	bfc2      	ittt	gt
  4320fa:	ebd4 050c 	rsbsgt	r5, r4, ip
  4320fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  432102:	bd70      	popgt	{r4, r5, r6, pc}
  432104:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  432108:	f04f 0e00 	mov.w	lr, #0
  43210c:	3c01      	subs	r4, #1
  43210e:	e690      	b.n	431e32 <__aeabi_dmul+0xde>
  432110:	ea45 0e06 	orr.w	lr, r5, r6
  432114:	e68d      	b.n	431e32 <__aeabi_dmul+0xde>
  432116:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  43211a:	ea94 0f0c 	teq	r4, ip
  43211e:	bf08      	it	eq
  432120:	ea95 0f0c 	teqeq	r5, ip
  432124:	f43f af3b 	beq.w	431f9e <__aeabi_dmul+0x24a>
  432128:	ea94 0f0c 	teq	r4, ip
  43212c:	d10a      	bne.n	432144 <__aeabi_ddiv+0x19c>
  43212e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  432132:	f47f af34 	bne.w	431f9e <__aeabi_dmul+0x24a>
  432136:	ea95 0f0c 	teq	r5, ip
  43213a:	f47f af25 	bne.w	431f88 <__aeabi_dmul+0x234>
  43213e:	4610      	mov	r0, r2
  432140:	4619      	mov	r1, r3
  432142:	e72c      	b.n	431f9e <__aeabi_dmul+0x24a>
  432144:	ea95 0f0c 	teq	r5, ip
  432148:	d106      	bne.n	432158 <__aeabi_ddiv+0x1b0>
  43214a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  43214e:	f43f aefd 	beq.w	431f4c <__aeabi_dmul+0x1f8>
  432152:	4610      	mov	r0, r2
  432154:	4619      	mov	r1, r3
  432156:	e722      	b.n	431f9e <__aeabi_dmul+0x24a>
  432158:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  43215c:	bf18      	it	ne
  43215e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  432162:	f47f aec5 	bne.w	431ef0 <__aeabi_dmul+0x19c>
  432166:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  43216a:	f47f af0d 	bne.w	431f88 <__aeabi_dmul+0x234>
  43216e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  432172:	f47f aeeb 	bne.w	431f4c <__aeabi_dmul+0x1f8>
  432176:	e712      	b.n	431f9e <__aeabi_dmul+0x24a>

00432178 <__gedf2>:
  432178:	f04f 3cff 	mov.w	ip, #4294967295
  43217c:	e006      	b.n	43218c <__cmpdf2+0x4>
  43217e:	bf00      	nop

00432180 <__ledf2>:
  432180:	f04f 0c01 	mov.w	ip, #1
  432184:	e002      	b.n	43218c <__cmpdf2+0x4>
  432186:	bf00      	nop

00432188 <__cmpdf2>:
  432188:	f04f 0c01 	mov.w	ip, #1
  43218c:	f84d cd04 	str.w	ip, [sp, #-4]!
  432190:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  432194:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  432198:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  43219c:	bf18      	it	ne
  43219e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4321a2:	d01b      	beq.n	4321dc <__cmpdf2+0x54>
  4321a4:	b001      	add	sp, #4
  4321a6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4321aa:	bf0c      	ite	eq
  4321ac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4321b0:	ea91 0f03 	teqne	r1, r3
  4321b4:	bf02      	ittt	eq
  4321b6:	ea90 0f02 	teqeq	r0, r2
  4321ba:	2000      	moveq	r0, #0
  4321bc:	4770      	bxeq	lr
  4321be:	f110 0f00 	cmn.w	r0, #0
  4321c2:	ea91 0f03 	teq	r1, r3
  4321c6:	bf58      	it	pl
  4321c8:	4299      	cmppl	r1, r3
  4321ca:	bf08      	it	eq
  4321cc:	4290      	cmpeq	r0, r2
  4321ce:	bf2c      	ite	cs
  4321d0:	17d8      	asrcs	r0, r3, #31
  4321d2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4321d6:	f040 0001 	orr.w	r0, r0, #1
  4321da:	4770      	bx	lr
  4321dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4321e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4321e4:	d102      	bne.n	4321ec <__cmpdf2+0x64>
  4321e6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4321ea:	d107      	bne.n	4321fc <__cmpdf2+0x74>
  4321ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4321f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4321f4:	d1d6      	bne.n	4321a4 <__cmpdf2+0x1c>
  4321f6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4321fa:	d0d3      	beq.n	4321a4 <__cmpdf2+0x1c>
  4321fc:	f85d 0b04 	ldr.w	r0, [sp], #4
  432200:	4770      	bx	lr
  432202:	bf00      	nop

00432204 <__aeabi_cdrcmple>:
  432204:	4684      	mov	ip, r0
  432206:	4610      	mov	r0, r2
  432208:	4662      	mov	r2, ip
  43220a:	468c      	mov	ip, r1
  43220c:	4619      	mov	r1, r3
  43220e:	4663      	mov	r3, ip
  432210:	e000      	b.n	432214 <__aeabi_cdcmpeq>
  432212:	bf00      	nop

00432214 <__aeabi_cdcmpeq>:
  432214:	b501      	push	{r0, lr}
  432216:	f7ff ffb7 	bl	432188 <__cmpdf2>
  43221a:	2800      	cmp	r0, #0
  43221c:	bf48      	it	mi
  43221e:	f110 0f00 	cmnmi.w	r0, #0
  432222:	bd01      	pop	{r0, pc}

00432224 <__aeabi_dcmpeq>:
  432224:	f84d ed08 	str.w	lr, [sp, #-8]!
  432228:	f7ff fff4 	bl	432214 <__aeabi_cdcmpeq>
  43222c:	bf0c      	ite	eq
  43222e:	2001      	moveq	r0, #1
  432230:	2000      	movne	r0, #0
  432232:	f85d fb08 	ldr.w	pc, [sp], #8
  432236:	bf00      	nop

00432238 <__aeabi_dcmplt>:
  432238:	f84d ed08 	str.w	lr, [sp, #-8]!
  43223c:	f7ff ffea 	bl	432214 <__aeabi_cdcmpeq>
  432240:	bf34      	ite	cc
  432242:	2001      	movcc	r0, #1
  432244:	2000      	movcs	r0, #0
  432246:	f85d fb08 	ldr.w	pc, [sp], #8
  43224a:	bf00      	nop

0043224c <__aeabi_dcmple>:
  43224c:	f84d ed08 	str.w	lr, [sp, #-8]!
  432250:	f7ff ffe0 	bl	432214 <__aeabi_cdcmpeq>
  432254:	bf94      	ite	ls
  432256:	2001      	movls	r0, #1
  432258:	2000      	movhi	r0, #0
  43225a:	f85d fb08 	ldr.w	pc, [sp], #8
  43225e:	bf00      	nop

00432260 <__aeabi_dcmpge>:
  432260:	f84d ed08 	str.w	lr, [sp, #-8]!
  432264:	f7ff ffce 	bl	432204 <__aeabi_cdrcmple>
  432268:	bf94      	ite	ls
  43226a:	2001      	movls	r0, #1
  43226c:	2000      	movhi	r0, #0
  43226e:	f85d fb08 	ldr.w	pc, [sp], #8
  432272:	bf00      	nop

00432274 <__aeabi_dcmpgt>:
  432274:	f84d ed08 	str.w	lr, [sp, #-8]!
  432278:	f7ff ffc4 	bl	432204 <__aeabi_cdrcmple>
  43227c:	bf34      	ite	cc
  43227e:	2001      	movcc	r0, #1
  432280:	2000      	movcs	r0, #0
  432282:	f85d fb08 	ldr.w	pc, [sp], #8
  432286:	bf00      	nop

00432288 <__aeabi_d2iz>:
  432288:	ea4f 0241 	mov.w	r2, r1, lsl #1
  43228c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  432290:	d215      	bcs.n	4322be <__aeabi_d2iz+0x36>
  432292:	d511      	bpl.n	4322b8 <__aeabi_d2iz+0x30>
  432294:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  432298:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  43229c:	d912      	bls.n	4322c4 <__aeabi_d2iz+0x3c>
  43229e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4322a2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4322a6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4322aa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4322ae:	fa23 f002 	lsr.w	r0, r3, r2
  4322b2:	bf18      	it	ne
  4322b4:	4240      	negne	r0, r0
  4322b6:	4770      	bx	lr
  4322b8:	f04f 0000 	mov.w	r0, #0
  4322bc:	4770      	bx	lr
  4322be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4322c2:	d105      	bne.n	4322d0 <__aeabi_d2iz+0x48>
  4322c4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4322c8:	bf08      	it	eq
  4322ca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4322ce:	4770      	bx	lr
  4322d0:	f04f 0000 	mov.w	r0, #0
  4322d4:	4770      	bx	lr
  4322d6:	bf00      	nop

004322d8 <__aeabi_d2f>:
  4322d8:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4322dc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  4322e0:	bf24      	itt	cs
  4322e2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  4322e6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  4322ea:	d90d      	bls.n	432308 <__aeabi_d2f+0x30>
  4322ec:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  4322f0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  4322f4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  4322f8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  4322fc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  432300:	bf08      	it	eq
  432302:	f020 0001 	biceq.w	r0, r0, #1
  432306:	4770      	bx	lr
  432308:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  43230c:	d121      	bne.n	432352 <__aeabi_d2f+0x7a>
  43230e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  432312:	bfbc      	itt	lt
  432314:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  432318:	4770      	bxlt	lr
  43231a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  43231e:	ea4f 5252 	mov.w	r2, r2, lsr #21
  432322:	f1c2 0218 	rsb	r2, r2, #24
  432326:	f1c2 0c20 	rsb	ip, r2, #32
  43232a:	fa10 f30c 	lsls.w	r3, r0, ip
  43232e:	fa20 f002 	lsr.w	r0, r0, r2
  432332:	bf18      	it	ne
  432334:	f040 0001 	orrne.w	r0, r0, #1
  432338:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  43233c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  432340:	fa03 fc0c 	lsl.w	ip, r3, ip
  432344:	ea40 000c 	orr.w	r0, r0, ip
  432348:	fa23 f302 	lsr.w	r3, r3, r2
  43234c:	ea4f 0343 	mov.w	r3, r3, lsl #1
  432350:	e7cc      	b.n	4322ec <__aeabi_d2f+0x14>
  432352:	ea7f 5362 	mvns.w	r3, r2, asr #21
  432356:	d107      	bne.n	432368 <__aeabi_d2f+0x90>
  432358:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  43235c:	bf1e      	ittt	ne
  43235e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  432362:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  432366:	4770      	bxne	lr
  432368:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  43236c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  432370:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  432374:	4770      	bx	lr
  432376:	bf00      	nop

00432378 <__aeabi_frsub>:
  432378:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  43237c:	e002      	b.n	432384 <__addsf3>
  43237e:	bf00      	nop

00432380 <__aeabi_fsub>:
  432380:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00432384 <__addsf3>:
  432384:	0042      	lsls	r2, r0, #1
  432386:	bf1f      	itttt	ne
  432388:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  43238c:	ea92 0f03 	teqne	r2, r3
  432390:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  432394:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  432398:	d06a      	beq.n	432470 <__addsf3+0xec>
  43239a:	ea4f 6212 	mov.w	r2, r2, lsr #24
  43239e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  4323a2:	bfc1      	itttt	gt
  4323a4:	18d2      	addgt	r2, r2, r3
  4323a6:	4041      	eorgt	r1, r0
  4323a8:	4048      	eorgt	r0, r1
  4323aa:	4041      	eorgt	r1, r0
  4323ac:	bfb8      	it	lt
  4323ae:	425b      	neglt	r3, r3
  4323b0:	2b19      	cmp	r3, #25
  4323b2:	bf88      	it	hi
  4323b4:	4770      	bxhi	lr
  4323b6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  4323ba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4323be:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  4323c2:	bf18      	it	ne
  4323c4:	4240      	negne	r0, r0
  4323c6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4323ca:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  4323ce:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  4323d2:	bf18      	it	ne
  4323d4:	4249      	negne	r1, r1
  4323d6:	ea92 0f03 	teq	r2, r3
  4323da:	d03f      	beq.n	43245c <__addsf3+0xd8>
  4323dc:	f1a2 0201 	sub.w	r2, r2, #1
  4323e0:	fa41 fc03 	asr.w	ip, r1, r3
  4323e4:	eb10 000c 	adds.w	r0, r0, ip
  4323e8:	f1c3 0320 	rsb	r3, r3, #32
  4323ec:	fa01 f103 	lsl.w	r1, r1, r3
  4323f0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  4323f4:	d502      	bpl.n	4323fc <__addsf3+0x78>
  4323f6:	4249      	negs	r1, r1
  4323f8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  4323fc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  432400:	d313      	bcc.n	43242a <__addsf3+0xa6>
  432402:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  432406:	d306      	bcc.n	432416 <__addsf3+0x92>
  432408:	0840      	lsrs	r0, r0, #1
  43240a:	ea4f 0131 	mov.w	r1, r1, rrx
  43240e:	f102 0201 	add.w	r2, r2, #1
  432412:	2afe      	cmp	r2, #254	; 0xfe
  432414:	d251      	bcs.n	4324ba <__addsf3+0x136>
  432416:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  43241a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  43241e:	bf08      	it	eq
  432420:	f020 0001 	biceq.w	r0, r0, #1
  432424:	ea40 0003 	orr.w	r0, r0, r3
  432428:	4770      	bx	lr
  43242a:	0049      	lsls	r1, r1, #1
  43242c:	eb40 0000 	adc.w	r0, r0, r0
  432430:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  432434:	f1a2 0201 	sub.w	r2, r2, #1
  432438:	d1ed      	bne.n	432416 <__addsf3+0x92>
  43243a:	fab0 fc80 	clz	ip, r0
  43243e:	f1ac 0c08 	sub.w	ip, ip, #8
  432442:	ebb2 020c 	subs.w	r2, r2, ip
  432446:	fa00 f00c 	lsl.w	r0, r0, ip
  43244a:	bfaa      	itet	ge
  43244c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  432450:	4252      	neglt	r2, r2
  432452:	4318      	orrge	r0, r3
  432454:	bfbc      	itt	lt
  432456:	40d0      	lsrlt	r0, r2
  432458:	4318      	orrlt	r0, r3
  43245a:	4770      	bx	lr
  43245c:	f092 0f00 	teq	r2, #0
  432460:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  432464:	bf06      	itte	eq
  432466:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  43246a:	3201      	addeq	r2, #1
  43246c:	3b01      	subne	r3, #1
  43246e:	e7b5      	b.n	4323dc <__addsf3+0x58>
  432470:	ea4f 0341 	mov.w	r3, r1, lsl #1
  432474:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  432478:	bf18      	it	ne
  43247a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  43247e:	d021      	beq.n	4324c4 <__addsf3+0x140>
  432480:	ea92 0f03 	teq	r2, r3
  432484:	d004      	beq.n	432490 <__addsf3+0x10c>
  432486:	f092 0f00 	teq	r2, #0
  43248a:	bf08      	it	eq
  43248c:	4608      	moveq	r0, r1
  43248e:	4770      	bx	lr
  432490:	ea90 0f01 	teq	r0, r1
  432494:	bf1c      	itt	ne
  432496:	2000      	movne	r0, #0
  432498:	4770      	bxne	lr
  43249a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  43249e:	d104      	bne.n	4324aa <__addsf3+0x126>
  4324a0:	0040      	lsls	r0, r0, #1
  4324a2:	bf28      	it	cs
  4324a4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  4324a8:	4770      	bx	lr
  4324aa:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  4324ae:	bf3c      	itt	cc
  4324b0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  4324b4:	4770      	bxcc	lr
  4324b6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  4324ba:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  4324be:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4324c2:	4770      	bx	lr
  4324c4:	ea7f 6222 	mvns.w	r2, r2, asr #24
  4324c8:	bf16      	itet	ne
  4324ca:	4608      	movne	r0, r1
  4324cc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  4324d0:	4601      	movne	r1, r0
  4324d2:	0242      	lsls	r2, r0, #9
  4324d4:	bf06      	itte	eq
  4324d6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  4324da:	ea90 0f01 	teqeq	r0, r1
  4324de:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  4324e2:	4770      	bx	lr

004324e4 <__aeabi_ui2f>:
  4324e4:	f04f 0300 	mov.w	r3, #0
  4324e8:	e004      	b.n	4324f4 <__aeabi_i2f+0x8>
  4324ea:	bf00      	nop

004324ec <__aeabi_i2f>:
  4324ec:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  4324f0:	bf48      	it	mi
  4324f2:	4240      	negmi	r0, r0
  4324f4:	ea5f 0c00 	movs.w	ip, r0
  4324f8:	bf08      	it	eq
  4324fa:	4770      	bxeq	lr
  4324fc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  432500:	4601      	mov	r1, r0
  432502:	f04f 0000 	mov.w	r0, #0
  432506:	e01c      	b.n	432542 <__aeabi_l2f+0x2a>

00432508 <__aeabi_ul2f>:
  432508:	ea50 0201 	orrs.w	r2, r0, r1
  43250c:	bf08      	it	eq
  43250e:	4770      	bxeq	lr
  432510:	f04f 0300 	mov.w	r3, #0
  432514:	e00a      	b.n	43252c <__aeabi_l2f+0x14>
  432516:	bf00      	nop

00432518 <__aeabi_l2f>:
  432518:	ea50 0201 	orrs.w	r2, r0, r1
  43251c:	bf08      	it	eq
  43251e:	4770      	bxeq	lr
  432520:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  432524:	d502      	bpl.n	43252c <__aeabi_l2f+0x14>
  432526:	4240      	negs	r0, r0
  432528:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  43252c:	ea5f 0c01 	movs.w	ip, r1
  432530:	bf02      	ittt	eq
  432532:	4684      	moveq	ip, r0
  432534:	4601      	moveq	r1, r0
  432536:	2000      	moveq	r0, #0
  432538:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  43253c:	bf08      	it	eq
  43253e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  432542:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  432546:	fabc f28c 	clz	r2, ip
  43254a:	3a08      	subs	r2, #8
  43254c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  432550:	db10      	blt.n	432574 <__aeabi_l2f+0x5c>
  432552:	fa01 fc02 	lsl.w	ip, r1, r2
  432556:	4463      	add	r3, ip
  432558:	fa00 fc02 	lsl.w	ip, r0, r2
  43255c:	f1c2 0220 	rsb	r2, r2, #32
  432560:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  432564:	fa20 f202 	lsr.w	r2, r0, r2
  432568:	eb43 0002 	adc.w	r0, r3, r2
  43256c:	bf08      	it	eq
  43256e:	f020 0001 	biceq.w	r0, r0, #1
  432572:	4770      	bx	lr
  432574:	f102 0220 	add.w	r2, r2, #32
  432578:	fa01 fc02 	lsl.w	ip, r1, r2
  43257c:	f1c2 0220 	rsb	r2, r2, #32
  432580:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  432584:	fa21 f202 	lsr.w	r2, r1, r2
  432588:	eb43 0002 	adc.w	r0, r3, r2
  43258c:	bf08      	it	eq
  43258e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  432592:	4770      	bx	lr

00432594 <__aeabi_fmul>:
  432594:	f04f 0cff 	mov.w	ip, #255	; 0xff
  432598:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  43259c:	bf1e      	ittt	ne
  43259e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  4325a2:	ea92 0f0c 	teqne	r2, ip
  4325a6:	ea93 0f0c 	teqne	r3, ip
  4325aa:	d06f      	beq.n	43268c <__aeabi_fmul+0xf8>
  4325ac:	441a      	add	r2, r3
  4325ae:	ea80 0c01 	eor.w	ip, r0, r1
  4325b2:	0240      	lsls	r0, r0, #9
  4325b4:	bf18      	it	ne
  4325b6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  4325ba:	d01e      	beq.n	4325fa <__aeabi_fmul+0x66>
  4325bc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  4325c0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  4325c4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  4325c8:	fba0 3101 	umull	r3, r1, r0, r1
  4325cc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  4325d0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  4325d4:	bf3e      	ittt	cc
  4325d6:	0049      	lslcc	r1, r1, #1
  4325d8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  4325dc:	005b      	lslcc	r3, r3, #1
  4325de:	ea40 0001 	orr.w	r0, r0, r1
  4325e2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  4325e6:	2afd      	cmp	r2, #253	; 0xfd
  4325e8:	d81d      	bhi.n	432626 <__aeabi_fmul+0x92>
  4325ea:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  4325ee:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  4325f2:	bf08      	it	eq
  4325f4:	f020 0001 	biceq.w	r0, r0, #1
  4325f8:	4770      	bx	lr
  4325fa:	f090 0f00 	teq	r0, #0
  4325fe:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  432602:	bf08      	it	eq
  432604:	0249      	lsleq	r1, r1, #9
  432606:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  43260a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  43260e:	3a7f      	subs	r2, #127	; 0x7f
  432610:	bfc2      	ittt	gt
  432612:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  432616:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  43261a:	4770      	bxgt	lr
  43261c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  432620:	f04f 0300 	mov.w	r3, #0
  432624:	3a01      	subs	r2, #1
  432626:	dc5d      	bgt.n	4326e4 <__aeabi_fmul+0x150>
  432628:	f112 0f19 	cmn.w	r2, #25
  43262c:	bfdc      	itt	le
  43262e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  432632:	4770      	bxle	lr
  432634:	f1c2 0200 	rsb	r2, r2, #0
  432638:	0041      	lsls	r1, r0, #1
  43263a:	fa21 f102 	lsr.w	r1, r1, r2
  43263e:	f1c2 0220 	rsb	r2, r2, #32
  432642:	fa00 fc02 	lsl.w	ip, r0, r2
  432646:	ea5f 0031 	movs.w	r0, r1, rrx
  43264a:	f140 0000 	adc.w	r0, r0, #0
  43264e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  432652:	bf08      	it	eq
  432654:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  432658:	4770      	bx	lr
  43265a:	f092 0f00 	teq	r2, #0
  43265e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  432662:	bf02      	ittt	eq
  432664:	0040      	lsleq	r0, r0, #1
  432666:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  43266a:	3a01      	subeq	r2, #1
  43266c:	d0f9      	beq.n	432662 <__aeabi_fmul+0xce>
  43266e:	ea40 000c 	orr.w	r0, r0, ip
  432672:	f093 0f00 	teq	r3, #0
  432676:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  43267a:	bf02      	ittt	eq
  43267c:	0049      	lsleq	r1, r1, #1
  43267e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  432682:	3b01      	subeq	r3, #1
  432684:	d0f9      	beq.n	43267a <__aeabi_fmul+0xe6>
  432686:	ea41 010c 	orr.w	r1, r1, ip
  43268a:	e78f      	b.n	4325ac <__aeabi_fmul+0x18>
  43268c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  432690:	ea92 0f0c 	teq	r2, ip
  432694:	bf18      	it	ne
  432696:	ea93 0f0c 	teqne	r3, ip
  43269a:	d00a      	beq.n	4326b2 <__aeabi_fmul+0x11e>
  43269c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  4326a0:	bf18      	it	ne
  4326a2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  4326a6:	d1d8      	bne.n	43265a <__aeabi_fmul+0xc6>
  4326a8:	ea80 0001 	eor.w	r0, r0, r1
  4326ac:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  4326b0:	4770      	bx	lr
  4326b2:	f090 0f00 	teq	r0, #0
  4326b6:	bf17      	itett	ne
  4326b8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  4326bc:	4608      	moveq	r0, r1
  4326be:	f091 0f00 	teqne	r1, #0
  4326c2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  4326c6:	d014      	beq.n	4326f2 <__aeabi_fmul+0x15e>
  4326c8:	ea92 0f0c 	teq	r2, ip
  4326cc:	d101      	bne.n	4326d2 <__aeabi_fmul+0x13e>
  4326ce:	0242      	lsls	r2, r0, #9
  4326d0:	d10f      	bne.n	4326f2 <__aeabi_fmul+0x15e>
  4326d2:	ea93 0f0c 	teq	r3, ip
  4326d6:	d103      	bne.n	4326e0 <__aeabi_fmul+0x14c>
  4326d8:	024b      	lsls	r3, r1, #9
  4326da:	bf18      	it	ne
  4326dc:	4608      	movne	r0, r1
  4326de:	d108      	bne.n	4326f2 <__aeabi_fmul+0x15e>
  4326e0:	ea80 0001 	eor.w	r0, r0, r1
  4326e4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  4326e8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4326ec:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4326f0:	4770      	bx	lr
  4326f2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4326f6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  4326fa:	4770      	bx	lr

004326fc <__aeabi_fdiv>:
  4326fc:	f04f 0cff 	mov.w	ip, #255	; 0xff
  432700:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  432704:	bf1e      	ittt	ne
  432706:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  43270a:	ea92 0f0c 	teqne	r2, ip
  43270e:	ea93 0f0c 	teqne	r3, ip
  432712:	d069      	beq.n	4327e8 <__aeabi_fdiv+0xec>
  432714:	eba2 0203 	sub.w	r2, r2, r3
  432718:	ea80 0c01 	eor.w	ip, r0, r1
  43271c:	0249      	lsls	r1, r1, #9
  43271e:	ea4f 2040 	mov.w	r0, r0, lsl #9
  432722:	d037      	beq.n	432794 <__aeabi_fdiv+0x98>
  432724:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  432728:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  43272c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  432730:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  432734:	428b      	cmp	r3, r1
  432736:	bf38      	it	cc
  432738:	005b      	lslcc	r3, r3, #1
  43273a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  43273e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  432742:	428b      	cmp	r3, r1
  432744:	bf24      	itt	cs
  432746:	1a5b      	subcs	r3, r3, r1
  432748:	ea40 000c 	orrcs.w	r0, r0, ip
  43274c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  432750:	bf24      	itt	cs
  432752:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  432756:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  43275a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  43275e:	bf24      	itt	cs
  432760:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  432764:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  432768:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  43276c:	bf24      	itt	cs
  43276e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  432772:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  432776:	011b      	lsls	r3, r3, #4
  432778:	bf18      	it	ne
  43277a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  43277e:	d1e0      	bne.n	432742 <__aeabi_fdiv+0x46>
  432780:	2afd      	cmp	r2, #253	; 0xfd
  432782:	f63f af50 	bhi.w	432626 <__aeabi_fmul+0x92>
  432786:	428b      	cmp	r3, r1
  432788:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  43278c:	bf08      	it	eq
  43278e:	f020 0001 	biceq.w	r0, r0, #1
  432792:	4770      	bx	lr
  432794:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  432798:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  43279c:	327f      	adds	r2, #127	; 0x7f
  43279e:	bfc2      	ittt	gt
  4327a0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  4327a4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  4327a8:	4770      	bxgt	lr
  4327aa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4327ae:	f04f 0300 	mov.w	r3, #0
  4327b2:	3a01      	subs	r2, #1
  4327b4:	e737      	b.n	432626 <__aeabi_fmul+0x92>
  4327b6:	f092 0f00 	teq	r2, #0
  4327ba:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  4327be:	bf02      	ittt	eq
  4327c0:	0040      	lsleq	r0, r0, #1
  4327c2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  4327c6:	3a01      	subeq	r2, #1
  4327c8:	d0f9      	beq.n	4327be <__aeabi_fdiv+0xc2>
  4327ca:	ea40 000c 	orr.w	r0, r0, ip
  4327ce:	f093 0f00 	teq	r3, #0
  4327d2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  4327d6:	bf02      	ittt	eq
  4327d8:	0049      	lsleq	r1, r1, #1
  4327da:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  4327de:	3b01      	subeq	r3, #1
  4327e0:	d0f9      	beq.n	4327d6 <__aeabi_fdiv+0xda>
  4327e2:	ea41 010c 	orr.w	r1, r1, ip
  4327e6:	e795      	b.n	432714 <__aeabi_fdiv+0x18>
  4327e8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  4327ec:	ea92 0f0c 	teq	r2, ip
  4327f0:	d108      	bne.n	432804 <__aeabi_fdiv+0x108>
  4327f2:	0242      	lsls	r2, r0, #9
  4327f4:	f47f af7d 	bne.w	4326f2 <__aeabi_fmul+0x15e>
  4327f8:	ea93 0f0c 	teq	r3, ip
  4327fc:	f47f af70 	bne.w	4326e0 <__aeabi_fmul+0x14c>
  432800:	4608      	mov	r0, r1
  432802:	e776      	b.n	4326f2 <__aeabi_fmul+0x15e>
  432804:	ea93 0f0c 	teq	r3, ip
  432808:	d104      	bne.n	432814 <__aeabi_fdiv+0x118>
  43280a:	024b      	lsls	r3, r1, #9
  43280c:	f43f af4c 	beq.w	4326a8 <__aeabi_fmul+0x114>
  432810:	4608      	mov	r0, r1
  432812:	e76e      	b.n	4326f2 <__aeabi_fmul+0x15e>
  432814:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  432818:	bf18      	it	ne
  43281a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  43281e:	d1ca      	bne.n	4327b6 <__aeabi_fdiv+0xba>
  432820:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  432824:	f47f af5c 	bne.w	4326e0 <__aeabi_fmul+0x14c>
  432828:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  43282c:	f47f af3c 	bne.w	4326a8 <__aeabi_fmul+0x114>
  432830:	e75f      	b.n	4326f2 <__aeabi_fmul+0x15e>
  432832:	bf00      	nop

00432834 <__aeabi_uldivmod>:
  432834:	b953      	cbnz	r3, 43284c <__aeabi_uldivmod+0x18>
  432836:	b94a      	cbnz	r2, 43284c <__aeabi_uldivmod+0x18>
  432838:	2900      	cmp	r1, #0
  43283a:	bf08      	it	eq
  43283c:	2800      	cmpeq	r0, #0
  43283e:	bf1c      	itt	ne
  432840:	f04f 31ff 	movne.w	r1, #4294967295
  432844:	f04f 30ff 	movne.w	r0, #4294967295
  432848:	f7ff b8ca 	b.w	4319e0 <__aeabi_idiv0>
  43284c:	b082      	sub	sp, #8
  43284e:	46ec      	mov	ip, sp
  432850:	e92d 5000 	stmdb	sp!, {ip, lr}
  432854:	f000 f81e 	bl	432894 <__gnu_uldivmod_helper>
  432858:	f8dd e004 	ldr.w	lr, [sp, #4]
  43285c:	b002      	add	sp, #8
  43285e:	bc0c      	pop	{r2, r3}
  432860:	4770      	bx	lr
  432862:	bf00      	nop

00432864 <__gnu_ldivmod_helper>:
  432864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  432868:	9c06      	ldr	r4, [sp, #24]
  43286a:	4615      	mov	r5, r2
  43286c:	4606      	mov	r6, r0
  43286e:	460f      	mov	r7, r1
  432870:	4698      	mov	r8, r3
  432872:	f000 ffe3 	bl	43383c <__divdi3>
  432876:	fb05 f301 	mul.w	r3, r5, r1
  43287a:	fb00 3808 	mla	r8, r0, r8, r3
  43287e:	fba5 2300 	umull	r2, r3, r5, r0
  432882:	1ab2      	subs	r2, r6, r2
  432884:	4443      	add	r3, r8
  432886:	eb67 0303 	sbc.w	r3, r7, r3
  43288a:	e9c4 2300 	strd	r2, r3, [r4]
  43288e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  432892:	bf00      	nop

00432894 <__gnu_uldivmod_helper>:
  432894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  432898:	9c06      	ldr	r4, [sp, #24]
  43289a:	4690      	mov	r8, r2
  43289c:	4606      	mov	r6, r0
  43289e:	460f      	mov	r7, r1
  4328a0:	461d      	mov	r5, r3
  4328a2:	f001 f919 	bl	433ad8 <__udivdi3>
  4328a6:	fb00 f505 	mul.w	r5, r0, r5
  4328aa:	fba0 2308 	umull	r2, r3, r0, r8
  4328ae:	fb08 5501 	mla	r5, r8, r1, r5
  4328b2:	1ab2      	subs	r2, r6, r2
  4328b4:	442b      	add	r3, r5
  4328b6:	eb67 0303 	sbc.w	r3, r7, r3
  4328ba:	e9c4 2300 	strd	r2, r3, [r4]
  4328be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4328c2:	bf00      	nop

004328c4 <selfrel_offset31>:
  4328c4:	6803      	ldr	r3, [r0, #0]
  4328c6:	005a      	lsls	r2, r3, #1
  4328c8:	bf4c      	ite	mi
  4328ca:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
  4328ce:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
  4328d2:	4418      	add	r0, r3
  4328d4:	4770      	bx	lr
  4328d6:	bf00      	nop

004328d8 <search_EIT_table>:
  4328d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4328dc:	b083      	sub	sp, #12
  4328de:	b399      	cbz	r1, 432948 <search_EIT_table+0x70>
  4328e0:	1e4b      	subs	r3, r1, #1
  4328e2:	4617      	mov	r7, r2
  4328e4:	4605      	mov	r5, r0
  4328e6:	9301      	str	r3, [sp, #4]
  4328e8:	4698      	mov	r8, r3
  4328ea:	2600      	movs	r6, #0
  4328ec:	eb06 0408 	add.w	r4, r6, r8
  4328f0:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
  4328f4:	1064      	asrs	r4, r4, #1
  4328f6:	ea4f 0ac4 	mov.w	sl, r4, lsl #3
  4328fa:	eb05 0b0a 	add.w	fp, r5, sl
  4328fe:	4658      	mov	r0, fp
  432900:	f7ff ffe0 	bl	4328c4 <selfrel_offset31>
  432904:	9b01      	ldr	r3, [sp, #4]
  432906:	4681      	mov	r9, r0
  432908:	42a3      	cmp	r3, r4
  43290a:	f10a 0008 	add.w	r0, sl, #8
  43290e:	4428      	add	r0, r5
  432910:	d00e      	beq.n	432930 <search_EIT_table+0x58>
  432912:	f7ff ffd7 	bl	4328c4 <selfrel_offset31>
  432916:	45b9      	cmp	r9, r7
  432918:	f100 30ff 	add.w	r0, r0, #4294967295
  43291c:	d904      	bls.n	432928 <search_EIT_table+0x50>
  43291e:	42b4      	cmp	r4, r6
  432920:	d00c      	beq.n	43293c <search_EIT_table+0x64>
  432922:	f104 38ff 	add.w	r8, r4, #4294967295
  432926:	e7e1      	b.n	4328ec <search_EIT_table+0x14>
  432928:	42b8      	cmp	r0, r7
  43292a:	d203      	bcs.n	432934 <search_EIT_table+0x5c>
  43292c:	1c66      	adds	r6, r4, #1
  43292e:	e7dd      	b.n	4328ec <search_EIT_table+0x14>
  432930:	45b9      	cmp	r9, r7
  432932:	d8f4      	bhi.n	43291e <search_EIT_table+0x46>
  432934:	4658      	mov	r0, fp
  432936:	b003      	add	sp, #12
  432938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  43293c:	f04f 0b00 	mov.w	fp, #0
  432940:	4658      	mov	r0, fp
  432942:	b003      	add	sp, #12
  432944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  432948:	468b      	mov	fp, r1
  43294a:	4658      	mov	r0, fp
  43294c:	b003      	add	sp, #12
  43294e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  432952:	bf00      	nop

00432954 <__gnu_unwind_get_pr_addr>:
  432954:	2801      	cmp	r0, #1
  432956:	d007      	beq.n	432968 <__gnu_unwind_get_pr_addr+0x14>
  432958:	2802      	cmp	r0, #2
  43295a:	d007      	beq.n	43296c <__gnu_unwind_get_pr_addr+0x18>
  43295c:	4b04      	ldr	r3, [pc, #16]	; (432970 <__gnu_unwind_get_pr_addr+0x1c>)
  43295e:	2800      	cmp	r0, #0
  432960:	bf0c      	ite	eq
  432962:	4618      	moveq	r0, r3
  432964:	2000      	movne	r0, #0
  432966:	4770      	bx	lr
  432968:	4802      	ldr	r0, [pc, #8]	; (432974 <__gnu_unwind_get_pr_addr+0x20>)
  43296a:	4770      	bx	lr
  43296c:	4802      	ldr	r0, [pc, #8]	; (432978 <__gnu_unwind_get_pr_addr+0x24>)
  43296e:	4770      	bx	lr
  432970:	00433061 	.word	0x00433061
  432974:	00433065 	.word	0x00433065
  432978:	00433069 	.word	0x00433069

0043297c <get_eit_entry>:
  43297c:	b530      	push	{r4, r5, lr}
  43297e:	4b24      	ldr	r3, [pc, #144]	; (432a10 <get_eit_entry+0x94>)
  432980:	b083      	sub	sp, #12
  432982:	4604      	mov	r4, r0
  432984:	1e8d      	subs	r5, r1, #2
  432986:	b37b      	cbz	r3, 4329e8 <get_eit_entry+0x6c>
  432988:	4628      	mov	r0, r5
  43298a:	a901      	add	r1, sp, #4
  43298c:	f3af 8000 	nop.w
  432990:	b320      	cbz	r0, 4329dc <get_eit_entry+0x60>
  432992:	9901      	ldr	r1, [sp, #4]
  432994:	462a      	mov	r2, r5
  432996:	f7ff ff9f 	bl	4328d8 <search_EIT_table>
  43299a:	4605      	mov	r5, r0
  43299c:	b1f0      	cbz	r0, 4329dc <get_eit_entry+0x60>
  43299e:	f7ff ff91 	bl	4328c4 <selfrel_offset31>
  4329a2:	686b      	ldr	r3, [r5, #4]
  4329a4:	64a0      	str	r0, [r4, #72]	; 0x48
  4329a6:	2b01      	cmp	r3, #1
  4329a8:	d012      	beq.n	4329d0 <get_eit_entry+0x54>
  4329aa:	2b00      	cmp	r3, #0
  4329ac:	f105 0004 	add.w	r0, r5, #4
  4329b0:	db20      	blt.n	4329f4 <get_eit_entry+0x78>
  4329b2:	f7ff ff87 	bl	4328c4 <selfrel_offset31>
  4329b6:	2300      	movs	r3, #0
  4329b8:	64e0      	str	r0, [r4, #76]	; 0x4c
  4329ba:	6523      	str	r3, [r4, #80]	; 0x50
  4329bc:	6803      	ldr	r3, [r0, #0]
  4329be:	2b00      	cmp	r3, #0
  4329c0:	db1c      	blt.n	4329fc <get_eit_entry+0x80>
  4329c2:	f7ff ff7f 	bl	4328c4 <selfrel_offset31>
  4329c6:	2300      	movs	r3, #0
  4329c8:	6120      	str	r0, [r4, #16]
  4329ca:	4618      	mov	r0, r3
  4329cc:	b003      	add	sp, #12
  4329ce:	bd30      	pop	{r4, r5, pc}
  4329d0:	2300      	movs	r3, #0
  4329d2:	6123      	str	r3, [r4, #16]
  4329d4:	2305      	movs	r3, #5
  4329d6:	4618      	mov	r0, r3
  4329d8:	b003      	add	sp, #12
  4329da:	bd30      	pop	{r4, r5, pc}
  4329dc:	2300      	movs	r3, #0
  4329de:	6123      	str	r3, [r4, #16]
  4329e0:	2309      	movs	r3, #9
  4329e2:	4618      	mov	r0, r3
  4329e4:	b003      	add	sp, #12
  4329e6:	bd30      	pop	{r4, r5, pc}
  4329e8:	490a      	ldr	r1, [pc, #40]	; (432a14 <get_eit_entry+0x98>)
  4329ea:	480b      	ldr	r0, [pc, #44]	; (432a18 <get_eit_entry+0x9c>)
  4329ec:	1a09      	subs	r1, r1, r0
  4329ee:	10c9      	asrs	r1, r1, #3
  4329f0:	9101      	str	r1, [sp, #4]
  4329f2:	e7cf      	b.n	432994 <get_eit_entry+0x18>
  4329f4:	2301      	movs	r3, #1
  4329f6:	64e0      	str	r0, [r4, #76]	; 0x4c
  4329f8:	6523      	str	r3, [r4, #80]	; 0x50
  4329fa:	e7df      	b.n	4329bc <get_eit_entry+0x40>
  4329fc:	f3c3 6003 	ubfx	r0, r3, #24, #4
  432a00:	f7ff ffa8 	bl	432954 <__gnu_unwind_get_pr_addr>
  432a04:	2800      	cmp	r0, #0
  432a06:	6120      	str	r0, [r4, #16]
  432a08:	bf0c      	ite	eq
  432a0a:	2309      	moveq	r3, #9
  432a0c:	2300      	movne	r3, #0
  432a0e:	e7dc      	b.n	4329ca <get_eit_entry+0x4e>
  432a10:	00000000 	.word	0x00000000
  432a14:	0044103c 	.word	0x0044103c
  432a18:	00440764 	.word	0x00440764

00432a1c <restore_non_core_regs>:
  432a1c:	6803      	ldr	r3, [r0, #0]
  432a1e:	07da      	lsls	r2, r3, #31
  432a20:	b510      	push	{r4, lr}
  432a22:	4604      	mov	r4, r0
  432a24:	d406      	bmi.n	432a34 <restore_non_core_regs+0x18>
  432a26:	079b      	lsls	r3, r3, #30
  432a28:	f100 0048 	add.w	r0, r0, #72	; 0x48
  432a2c:	d509      	bpl.n	432a42 <restore_non_core_regs+0x26>
  432a2e:	f000 fc85 	bl	43333c <__gnu_Unwind_Restore_VFP_D>
  432a32:	6823      	ldr	r3, [r4, #0]
  432a34:	0759      	lsls	r1, r3, #29
  432a36:	d509      	bpl.n	432a4c <restore_non_core_regs+0x30>
  432a38:	071a      	lsls	r2, r3, #28
  432a3a:	d50e      	bpl.n	432a5a <restore_non_core_regs+0x3e>
  432a3c:	06db      	lsls	r3, r3, #27
  432a3e:	d513      	bpl.n	432a68 <restore_non_core_regs+0x4c>
  432a40:	bd10      	pop	{r4, pc}
  432a42:	f000 fc73 	bl	43332c <__gnu_Unwind_Restore_VFP>
  432a46:	6823      	ldr	r3, [r4, #0]
  432a48:	0759      	lsls	r1, r3, #29
  432a4a:	d4f5      	bmi.n	432a38 <restore_non_core_regs+0x1c>
  432a4c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
  432a50:	f000 fc7c 	bl	43334c <__gnu_Unwind_Restore_VFP_D_16_to_31>
  432a54:	6823      	ldr	r3, [r4, #0]
  432a56:	071a      	lsls	r2, r3, #28
  432a58:	d4f0      	bmi.n	432a3c <restore_non_core_regs+0x20>
  432a5a:	f504 70a8 	add.w	r0, r4, #336	; 0x150
  432a5e:	f000 fc7d 	bl	43335c <__gnu_Unwind_Restore_WMMXD>
  432a62:	6823      	ldr	r3, [r4, #0]
  432a64:	06db      	lsls	r3, r3, #27
  432a66:	d4eb      	bmi.n	432a40 <restore_non_core_regs+0x24>
  432a68:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
  432a6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  432a70:	f000 bcb8 	b.w	4333e4 <__gnu_Unwind_Restore_WMMXC>

00432a74 <_Unwind_decode_typeinfo_ptr.isra.0>:
  432a74:	6803      	ldr	r3, [r0, #0]
  432a76:	b10b      	cbz	r3, 432a7c <_Unwind_decode_typeinfo_ptr.isra.0+0x8>
  432a78:	4418      	add	r0, r3
  432a7a:	4770      	bx	lr
  432a7c:	4618      	mov	r0, r3
  432a7e:	4770      	bx	lr

00432a80 <__gnu_unwind_24bit.isra.1>:
  432a80:	2009      	movs	r0, #9
  432a82:	4770      	bx	lr

00432a84 <_Unwind_DebugHook>:
  432a84:	4770      	bx	lr
  432a86:	bf00      	nop

00432a88 <unwind_phase2>:
  432a88:	b570      	push	{r4, r5, r6, lr}
  432a8a:	4604      	mov	r4, r0
  432a8c:	460d      	mov	r5, r1
  432a8e:	e008      	b.n	432aa2 <unwind_phase2+0x1a>
  432a90:	6c2b      	ldr	r3, [r5, #64]	; 0x40
  432a92:	6163      	str	r3, [r4, #20]
  432a94:	2001      	movs	r0, #1
  432a96:	6923      	ldr	r3, [r4, #16]
  432a98:	4621      	mov	r1, r4
  432a9a:	462a      	mov	r2, r5
  432a9c:	4798      	blx	r3
  432a9e:	2808      	cmp	r0, #8
  432aa0:	d108      	bne.n	432ab4 <unwind_phase2+0x2c>
  432aa2:	4620      	mov	r0, r4
  432aa4:	6c29      	ldr	r1, [r5, #64]	; 0x40
  432aa6:	f7ff ff69 	bl	43297c <get_eit_entry>
  432aaa:	4606      	mov	r6, r0
  432aac:	2800      	cmp	r0, #0
  432aae:	d0ef      	beq.n	432a90 <unwind_phase2+0x8>
  432ab0:	f001 f948 	bl	433d44 <abort>
  432ab4:	2807      	cmp	r0, #7
  432ab6:	d1fb      	bne.n	432ab0 <unwind_phase2+0x28>
  432ab8:	4630      	mov	r0, r6
  432aba:	6c29      	ldr	r1, [r5, #64]	; 0x40
  432abc:	f7ff ffe2 	bl	432a84 <_Unwind_DebugHook>
  432ac0:	1d28      	adds	r0, r5, #4
  432ac2:	f000 fc27 	bl	433314 <__restore_core_regs>
  432ac6:	bf00      	nop

00432ac8 <unwind_phase2_forced>:
  432ac8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  432acc:	1d0c      	adds	r4, r1, #4
  432ace:	4606      	mov	r6, r0
  432ad0:	4617      	mov	r7, r2
  432ad2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  432ad4:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
  432ad8:	ad03      	add	r5, sp, #12
  432ada:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  432adc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  432ade:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  432ae0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  432ae2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  432ae4:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
  432ae8:	ac02      	add	r4, sp, #8
  432aea:	f04f 0e00 	mov.w	lr, #0
  432aee:	f8d6 800c 	ldr.w	r8, [r6, #12]
  432af2:	f8d6 9018 	ldr.w	r9, [r6, #24]
  432af6:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  432afa:	4630      	mov	r0, r6
  432afc:	6c21      	ldr	r1, [r4, #64]	; 0x40
  432afe:	f8c4 e000 	str.w	lr, [r4]
  432b02:	f7ff ff3b 	bl	43297c <get_eit_entry>
  432b06:	2f00      	cmp	r7, #0
  432b08:	4605      	mov	r5, r0
  432b0a:	bf0c      	ite	eq
  432b0c:	2709      	moveq	r7, #9
  432b0e:	270a      	movne	r7, #10
  432b10:	b17d      	cbz	r5, 432b32 <unwind_phase2_forced+0x6a>
  432b12:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  432b14:	f047 0110 	orr.w	r1, r7, #16
  432b18:	e88d 0210 	stmia.w	sp, {r4, r9}
  432b1c:	2001      	movs	r0, #1
  432b1e:	6463      	str	r3, [r4, #68]	; 0x44
  432b20:	4632      	mov	r2, r6
  432b22:	4633      	mov	r3, r6
  432b24:	47c0      	blx	r8
  432b26:	bb78      	cbnz	r0, 432b88 <unwind_phase2_forced+0xc0>
  432b28:	4628      	mov	r0, r5
  432b2a:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
  432b2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  432b32:	6c23      	ldr	r3, [r4, #64]	; 0x40
  432b34:	6173      	str	r3, [r6, #20]
  432b36:	4621      	mov	r1, r4
  432b38:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  432b3c:	a87a      	add	r0, sp, #488	; 0x1e8
  432b3e:	f002 f9cb 	bl	434ed8 <memcpy>
  432b42:	6933      	ldr	r3, [r6, #16]
  432b44:	4631      	mov	r1, r6
  432b46:	aa7a      	add	r2, sp, #488	; 0x1e8
  432b48:	4638      	mov	r0, r7
  432b4a:	4798      	blx	r3
  432b4c:	9b88      	ldr	r3, [sp, #544]	; 0x220
  432b4e:	4682      	mov	sl, r0
  432b50:	e88d 0210 	stmia.w	sp, {r4, r9}
  432b54:	4639      	mov	r1, r7
  432b56:	6463      	str	r3, [r4, #68]	; 0x44
  432b58:	2001      	movs	r0, #1
  432b5a:	4632      	mov	r2, r6
  432b5c:	4633      	mov	r3, r6
  432b5e:	47c0      	blx	r8
  432b60:	b990      	cbnz	r0, 432b88 <unwind_phase2_forced+0xc0>
  432b62:	4620      	mov	r0, r4
  432b64:	a97a      	add	r1, sp, #488	; 0x1e8
  432b66:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  432b6a:	f002 f9b5 	bl	434ed8 <memcpy>
  432b6e:	f1ba 0f08 	cmp.w	sl, #8
  432b72:	d106      	bne.n	432b82 <unwind_phase2_forced+0xba>
  432b74:	4630      	mov	r0, r6
  432b76:	6c21      	ldr	r1, [r4, #64]	; 0x40
  432b78:	f7ff ff00 	bl	43297c <get_eit_entry>
  432b7c:	2709      	movs	r7, #9
  432b7e:	4605      	mov	r5, r0
  432b80:	e7c6      	b.n	432b10 <unwind_phase2_forced+0x48>
  432b82:	f1ba 0f07 	cmp.w	sl, #7
  432b86:	d004      	beq.n	432b92 <unwind_phase2_forced+0xca>
  432b88:	2009      	movs	r0, #9
  432b8a:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
  432b8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  432b92:	4628      	mov	r0, r5
  432b94:	6c21      	ldr	r1, [r4, #64]	; 0x40
  432b96:	f7ff ff75 	bl	432a84 <_Unwind_DebugHook>
  432b9a:	a803      	add	r0, sp, #12
  432b9c:	f000 fbba 	bl	433314 <__restore_core_regs>

00432ba0 <_Unwind_GetCFA>:
  432ba0:	6c40      	ldr	r0, [r0, #68]	; 0x44
  432ba2:	4770      	bx	lr

00432ba4 <__gnu_Unwind_RaiseException>:
  432ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
  432ba6:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  432ba8:	640b      	str	r3, [r1, #64]	; 0x40
  432baa:	1d0e      	adds	r6, r1, #4
  432bac:	460f      	mov	r7, r1
  432bae:	4604      	mov	r4, r0
  432bb0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
  432bb2:	b0f9      	sub	sp, #484	; 0x1e4
  432bb4:	ad01      	add	r5, sp, #4
  432bb6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  432bb8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
  432bba:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  432bbc:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
  432bbe:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  432bc0:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  432bc4:	f04f 36ff 	mov.w	r6, #4294967295
  432bc8:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  432bcc:	9600      	str	r6, [sp, #0]
  432bce:	e006      	b.n	432bde <__gnu_Unwind_RaiseException+0x3a>
  432bd0:	6923      	ldr	r3, [r4, #16]
  432bd2:	4621      	mov	r1, r4
  432bd4:	466a      	mov	r2, sp
  432bd6:	4798      	blx	r3
  432bd8:	2808      	cmp	r0, #8
  432bda:	4605      	mov	r5, r0
  432bdc:	d108      	bne.n	432bf0 <__gnu_Unwind_RaiseException+0x4c>
  432bde:	4620      	mov	r0, r4
  432be0:	9910      	ldr	r1, [sp, #64]	; 0x40
  432be2:	f7ff fecb 	bl	43297c <get_eit_entry>
  432be6:	2800      	cmp	r0, #0
  432be8:	d0f2      	beq.n	432bd0 <__gnu_Unwind_RaiseException+0x2c>
  432bea:	2009      	movs	r0, #9
  432bec:	b079      	add	sp, #484	; 0x1e4
  432bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
  432bf0:	4668      	mov	r0, sp
  432bf2:	f7ff ff13 	bl	432a1c <restore_non_core_regs>
  432bf6:	2d06      	cmp	r5, #6
  432bf8:	d1f7      	bne.n	432bea <__gnu_Unwind_RaiseException+0x46>
  432bfa:	4620      	mov	r0, r4
  432bfc:	4639      	mov	r1, r7
  432bfe:	f7ff ff43 	bl	432a88 <unwind_phase2>
  432c02:	bf00      	nop

00432c04 <__gnu_Unwind_ForcedUnwind>:
  432c04:	b430      	push	{r4, r5}
  432c06:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
  432c08:	60c1      	str	r1, [r0, #12]
  432c0a:	6182      	str	r2, [r0, #24]
  432c0c:	4619      	mov	r1, r3
  432c0e:	641d      	str	r5, [r3, #64]	; 0x40
  432c10:	2200      	movs	r2, #0
  432c12:	bc30      	pop	{r4, r5}
  432c14:	e758      	b.n	432ac8 <unwind_phase2_forced>
  432c16:	bf00      	nop

00432c18 <__gnu_Unwind_Resume>:
  432c18:	b570      	push	{r4, r5, r6, lr}
  432c1a:	68c6      	ldr	r6, [r0, #12]
  432c1c:	6943      	ldr	r3, [r0, #20]
  432c1e:	640b      	str	r3, [r1, #64]	; 0x40
  432c20:	4604      	mov	r4, r0
  432c22:	460d      	mov	r5, r1
  432c24:	b126      	cbz	r6, 432c30 <__gnu_Unwind_Resume+0x18>
  432c26:	2201      	movs	r2, #1
  432c28:	f7ff ff4e 	bl	432ac8 <unwind_phase2_forced>
  432c2c:	f001 f88a 	bl	433d44 <abort>
  432c30:	6903      	ldr	r3, [r0, #16]
  432c32:	4621      	mov	r1, r4
  432c34:	2002      	movs	r0, #2
  432c36:	462a      	mov	r2, r5
  432c38:	4798      	blx	r3
  432c3a:	2807      	cmp	r0, #7
  432c3c:	d007      	beq.n	432c4e <__gnu_Unwind_Resume+0x36>
  432c3e:	2808      	cmp	r0, #8
  432c40:	d103      	bne.n	432c4a <__gnu_Unwind_Resume+0x32>
  432c42:	4620      	mov	r0, r4
  432c44:	4629      	mov	r1, r5
  432c46:	f7ff ff1f 	bl	432a88 <unwind_phase2>
  432c4a:	f001 f87b 	bl	433d44 <abort>
  432c4e:	4630      	mov	r0, r6
  432c50:	6c29      	ldr	r1, [r5, #64]	; 0x40
  432c52:	f7ff ff17 	bl	432a84 <_Unwind_DebugHook>
  432c56:	1d28      	adds	r0, r5, #4
  432c58:	f000 fb5c 	bl	433314 <__restore_core_regs>

00432c5c <__gnu_Unwind_Resume_or_Rethrow>:
  432c5c:	68c2      	ldr	r2, [r0, #12]
  432c5e:	b11a      	cbz	r2, 432c68 <__gnu_Unwind_Resume_or_Rethrow+0xc>
  432c60:	6bca      	ldr	r2, [r1, #60]	; 0x3c
  432c62:	640a      	str	r2, [r1, #64]	; 0x40
  432c64:	2200      	movs	r2, #0
  432c66:	e72f      	b.n	432ac8 <unwind_phase2_forced>
  432c68:	e79c      	b.n	432ba4 <__gnu_Unwind_RaiseException>
  432c6a:	bf00      	nop

00432c6c <_Unwind_Complete>:
  432c6c:	4770      	bx	lr
  432c6e:	bf00      	nop

00432c70 <_Unwind_DeleteException>:
  432c70:	6883      	ldr	r3, [r0, #8]
  432c72:	b113      	cbz	r3, 432c7a <_Unwind_DeleteException+0xa>
  432c74:	4601      	mov	r1, r0
  432c76:	2001      	movs	r0, #1
  432c78:	4718      	bx	r3
  432c7a:	4770      	bx	lr

00432c7c <_Unwind_VRS_Get>:
  432c7c:	b500      	push	{lr}
  432c7e:	2904      	cmp	r1, #4
  432c80:	d807      	bhi.n	432c92 <_Unwind_VRS_Get+0x16>
  432c82:	e8df f001 	tbb	[pc, r1]
  432c86:	0903      	.short	0x0903
  432c88:	0906      	.short	0x0906
  432c8a:	09          	.byte	0x09
  432c8b:	00          	.byte	0x00
  432c8c:	b90b      	cbnz	r3, 432c92 <_Unwind_VRS_Get+0x16>
  432c8e:	2a0f      	cmp	r2, #15
  432c90:	d905      	bls.n	432c9e <_Unwind_VRS_Get+0x22>
  432c92:	2002      	movs	r0, #2
  432c94:	f85d fb04 	ldr.w	pc, [sp], #4
  432c98:	2001      	movs	r0, #1
  432c9a:	f85d fb04 	ldr.w	pc, [sp], #4
  432c9e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  432ca2:	4618      	mov	r0, r3
  432ca4:	6853      	ldr	r3, [r2, #4]
  432ca6:	9a01      	ldr	r2, [sp, #4]
  432ca8:	6013      	str	r3, [r2, #0]
  432caa:	f85d fb04 	ldr.w	pc, [sp], #4
  432cae:	bf00      	nop

00432cb0 <_Unwind_GetGR>:
  432cb0:	b500      	push	{lr}
  432cb2:	b085      	sub	sp, #20
  432cb4:	460a      	mov	r2, r1
  432cb6:	ab03      	add	r3, sp, #12
  432cb8:	2100      	movs	r1, #0
  432cba:	9300      	str	r3, [sp, #0]
  432cbc:	460b      	mov	r3, r1
  432cbe:	f7ff ffdd 	bl	432c7c <_Unwind_VRS_Get>
  432cc2:	9803      	ldr	r0, [sp, #12]
  432cc4:	b005      	add	sp, #20
  432cc6:	f85d fb04 	ldr.w	pc, [sp], #4
  432cca:	bf00      	nop

00432ccc <_Unwind_VRS_Set>:
  432ccc:	b500      	push	{lr}
  432cce:	2904      	cmp	r1, #4
  432cd0:	d807      	bhi.n	432ce2 <_Unwind_VRS_Set+0x16>
  432cd2:	e8df f001 	tbb	[pc, r1]
  432cd6:	0903      	.short	0x0903
  432cd8:	0906      	.short	0x0906
  432cda:	09          	.byte	0x09
  432cdb:	00          	.byte	0x00
  432cdc:	b90b      	cbnz	r3, 432ce2 <_Unwind_VRS_Set+0x16>
  432cde:	2a0f      	cmp	r2, #15
  432ce0:	d905      	bls.n	432cee <_Unwind_VRS_Set+0x22>
  432ce2:	2002      	movs	r0, #2
  432ce4:	f85d fb04 	ldr.w	pc, [sp], #4
  432ce8:	2001      	movs	r0, #1
  432cea:	f85d fb04 	ldr.w	pc, [sp], #4
  432cee:	9901      	ldr	r1, [sp, #4]
  432cf0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  432cf4:	6809      	ldr	r1, [r1, #0]
  432cf6:	6051      	str	r1, [r2, #4]
  432cf8:	4618      	mov	r0, r3
  432cfa:	f85d fb04 	ldr.w	pc, [sp], #4
  432cfe:	bf00      	nop

00432d00 <_Unwind_SetGR>:
  432d00:	b510      	push	{r4, lr}
  432d02:	b084      	sub	sp, #16
  432d04:	ab04      	add	r3, sp, #16
  432d06:	460c      	mov	r4, r1
  432d08:	f843 2d04 	str.w	r2, [r3, #-4]!
  432d0c:	2100      	movs	r1, #0
  432d0e:	9300      	str	r3, [sp, #0]
  432d10:	4622      	mov	r2, r4
  432d12:	460b      	mov	r3, r1
  432d14:	f7ff ffda 	bl	432ccc <_Unwind_VRS_Set>
  432d18:	b004      	add	sp, #16
  432d1a:	bd10      	pop	{r4, pc}

00432d1c <__gnu_Unwind_Backtrace>:
  432d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
  432d1e:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
  432d20:	6413      	str	r3, [r2, #64]	; 0x40
  432d22:	1d15      	adds	r5, r2, #4
  432d24:	4607      	mov	r7, r0
  432d26:	460e      	mov	r6, r1
  432d28:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  432d2a:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
  432d2e:	ac17      	add	r4, sp, #92	; 0x5c
  432d30:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  432d32:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  432d34:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  432d36:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  432d38:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  432d3a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
  432d3e:	f04f 35ff 	mov.w	r5, #4294967295
  432d42:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  432d46:	9516      	str	r5, [sp, #88]	; 0x58
  432d48:	e010      	b.n	432d6c <__gnu_Unwind_Backtrace+0x50>
  432d4a:	a816      	add	r0, sp, #88	; 0x58
  432d4c:	f7ff ffd8 	bl	432d00 <_Unwind_SetGR>
  432d50:	4631      	mov	r1, r6
  432d52:	a816      	add	r0, sp, #88	; 0x58
  432d54:	47b8      	blx	r7
  432d56:	4669      	mov	r1, sp
  432d58:	aa16      	add	r2, sp, #88	; 0x58
  432d5a:	b978      	cbnz	r0, 432d7c <__gnu_Unwind_Backtrace+0x60>
  432d5c:	9b04      	ldr	r3, [sp, #16]
  432d5e:	2008      	movs	r0, #8
  432d60:	4798      	blx	r3
  432d62:	2805      	cmp	r0, #5
  432d64:	4604      	mov	r4, r0
  432d66:	d00a      	beq.n	432d7e <__gnu_Unwind_Backtrace+0x62>
  432d68:	2809      	cmp	r0, #9
  432d6a:	d007      	beq.n	432d7c <__gnu_Unwind_Backtrace+0x60>
  432d6c:	9926      	ldr	r1, [sp, #152]	; 0x98
  432d6e:	4668      	mov	r0, sp
  432d70:	f7ff fe04 	bl	43297c <get_eit_entry>
  432d74:	466a      	mov	r2, sp
  432d76:	210c      	movs	r1, #12
  432d78:	2800      	cmp	r0, #0
  432d7a:	d0e6      	beq.n	432d4a <__gnu_Unwind_Backtrace+0x2e>
  432d7c:	2409      	movs	r4, #9
  432d7e:	a816      	add	r0, sp, #88	; 0x58
  432d80:	f7ff fe4c 	bl	432a1c <restore_non_core_regs>
  432d84:	4620      	mov	r0, r4
  432d86:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
  432d8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

00432d8c <__gnu_unwind_pr_common>:
  432d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  432d90:	460d      	mov	r5, r1
  432d92:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
  432d94:	b08b      	sub	sp, #44	; 0x2c
  432d96:	1d0c      	adds	r4, r1, #4
  432d98:	6809      	ldr	r1, [r1, #0]
  432d9a:	9107      	str	r1, [sp, #28]
  432d9c:	4690      	mov	r8, r2
  432d9e:	9408      	str	r4, [sp, #32]
  432da0:	f000 0903 	and.w	r9, r0, #3
  432da4:	461e      	mov	r6, r3
  432da6:	2b00      	cmp	r3, #0
  432da8:	d164      	bne.n	432e74 <__gnu_unwind_pr_common+0xe8>
  432daa:	0209      	lsls	r1, r1, #8
  432dac:	2303      	movs	r3, #3
  432dae:	9107      	str	r1, [sp, #28]
  432db0:	f88d 6025 	strb.w	r6, [sp, #37]	; 0x25
  432db4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
  432db8:	6d2b      	ldr	r3, [r5, #80]	; 0x50
  432dba:	f1b9 0f02 	cmp.w	r9, #2
  432dbe:	bf08      	it	eq
  432dc0:	6bac      	ldreq	r4, [r5, #56]	; 0x38
  432dc2:	f013 0301 	ands.w	r3, r3, #1
  432dc6:	d143      	bne.n	432e50 <__gnu_unwind_pr_common+0xc4>
  432dc8:	f000 0008 	and.w	r0, r0, #8
  432dcc:	b2c2      	uxtb	r2, r0
  432dce:	9203      	str	r2, [sp, #12]
  432dd0:	9301      	str	r3, [sp, #4]
  432dd2:	6827      	ldr	r7, [r4, #0]
  432dd4:	2f00      	cmp	r7, #0
  432dd6:	d03d      	beq.n	432e54 <__gnu_unwind_pr_common+0xc8>
  432dd8:	2e02      	cmp	r6, #2
  432dda:	d047      	beq.n	432e6c <__gnu_unwind_pr_common+0xe0>
  432ddc:	8827      	ldrh	r7, [r4, #0]
  432dde:	f8b4 a002 	ldrh.w	sl, [r4, #2]
  432de2:	3404      	adds	r4, #4
  432de4:	6cab      	ldr	r3, [r5, #72]	; 0x48
  432de6:	f02a 0b01 	bic.w	fp, sl, #1
  432dea:	4640      	mov	r0, r8
  432dec:	210f      	movs	r1, #15
  432dee:	449b      	add	fp, r3
  432df0:	f7ff ff5e 	bl	432cb0 <_Unwind_GetGR>
  432df4:	4583      	cmp	fp, r0
  432df6:	d837      	bhi.n	432e68 <__gnu_unwind_pr_common+0xdc>
  432df8:	f027 0301 	bic.w	r3, r7, #1
  432dfc:	449b      	add	fp, r3
  432dfe:	4558      	cmp	r0, fp
  432e00:	bf2c      	ite	cs
  432e02:	2000      	movcs	r0, #0
  432e04:	2001      	movcc	r0, #1
  432e06:	f00a 0a01 	and.w	sl, sl, #1
  432e0a:	f007 0701 	and.w	r7, r7, #1
  432e0e:	ea47 0a4a 	orr.w	sl, r7, sl, lsl #1
  432e12:	f1ba 0f01 	cmp.w	sl, #1
  432e16:	d043      	beq.n	432ea0 <__gnu_unwind_pr_common+0x114>
  432e18:	d33a      	bcc.n	432e90 <__gnu_unwind_pr_common+0x104>
  432e1a:	f1ba 0f02 	cmp.w	sl, #2
  432e1e:	d11f      	bne.n	432e60 <__gnu_unwind_pr_common+0xd4>
  432e20:	6823      	ldr	r3, [r4, #0]
  432e22:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
  432e26:	9202      	str	r2, [sp, #8]
  432e28:	f1b9 0f00 	cmp.w	r9, #0
  432e2c:	d17b      	bne.n	432f26 <__gnu_unwind_pr_common+0x19a>
  432e2e:	b138      	cbz	r0, 432e40 <__gnu_unwind_pr_common+0xb4>
  432e30:	9a03      	ldr	r2, [sp, #12]
  432e32:	2a00      	cmp	r2, #0
  432e34:	f000 8083 	beq.w	432f3e <__gnu_unwind_pr_common+0x1b2>
  432e38:	9a02      	ldr	r2, [sp, #8]
  432e3a:	2a00      	cmp	r2, #0
  432e3c:	f000 80a6 	beq.w	432f8c <__gnu_unwind_pr_common+0x200>
  432e40:	2b00      	cmp	r3, #0
  432e42:	db7a      	blt.n	432f3a <__gnu_unwind_pr_common+0x1ae>
  432e44:	9b02      	ldr	r3, [sp, #8]
  432e46:	f103 0a01 	add.w	sl, r3, #1
  432e4a:	eb04 048a 	add.w	r4, r4, sl, lsl #2
  432e4e:	e7c0      	b.n	432dd2 <__gnu_unwind_pr_common+0x46>
  432e50:	2300      	movs	r3, #0
  432e52:	9301      	str	r3, [sp, #4]
  432e54:	2e02      	cmp	r6, #2
  432e56:	dd40      	ble.n	432eda <__gnu_unwind_pr_common+0x14e>
  432e58:	f7ff fe12 	bl	432a80 <__gnu_unwind_24bit.isra.1>
  432e5c:	2800      	cmp	r0, #0
  432e5e:	d042      	beq.n	432ee6 <__gnu_unwind_pr_common+0x15a>
  432e60:	2009      	movs	r0, #9
  432e62:	b00b      	add	sp, #44	; 0x2c
  432e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  432e68:	2000      	movs	r0, #0
  432e6a:	e7cc      	b.n	432e06 <__gnu_unwind_pr_common+0x7a>
  432e6c:	f8d4 a004 	ldr.w	sl, [r4, #4]
  432e70:	3408      	adds	r4, #8
  432e72:	e7b7      	b.n	432de4 <__gnu_unwind_pr_common+0x58>
  432e74:	2b02      	cmp	r3, #2
  432e76:	dc9f      	bgt.n	432db8 <__gnu_unwind_pr_common+0x2c>
  432e78:	0c0b      	lsrs	r3, r1, #16
  432e7a:	b2df      	uxtb	r7, r3
  432e7c:	0409      	lsls	r1, r1, #16
  432e7e:	2202      	movs	r2, #2
  432e80:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
  432e84:	eb04 0487 	add.w	r4, r4, r7, lsl #2
  432e88:	9107      	str	r1, [sp, #28]
  432e8a:	f88d 2024 	strb.w	r2, [sp, #36]	; 0x24
  432e8e:	e793      	b.n	432db8 <__gnu_unwind_pr_common+0x2c>
  432e90:	f1b9 0f00 	cmp.w	r9, #0
  432e94:	d002      	beq.n	432e9c <__gnu_unwind_pr_common+0x110>
  432e96:	2800      	cmp	r0, #0
  432e98:	f040 80ad 	bne.w	432ff6 <__gnu_unwind_pr_common+0x26a>
  432e9c:	3404      	adds	r4, #4
  432e9e:	e798      	b.n	432dd2 <__gnu_unwind_pr_common+0x46>
  432ea0:	f1b9 0f00 	cmp.w	r9, #0
  432ea4:	d126      	bne.n	432ef4 <__gnu_unwind_pr_common+0x168>
  432ea6:	b1b0      	cbz	r0, 432ed6 <__gnu_unwind_pr_common+0x14a>
  432ea8:	e894 000c 	ldmia.w	r4, {r2, r3}
  432eac:	0fd7      	lsrs	r7, r2, #31
  432eae:	1c9a      	adds	r2, r3, #2
  432eb0:	d0d6      	beq.n	432e60 <__gnu_unwind_pr_common+0xd4>
  432eb2:	f105 0258 	add.w	r2, r5, #88	; 0x58
  432eb6:	3301      	adds	r3, #1
  432eb8:	9206      	str	r2, [sp, #24]
  432eba:	f000 8092 	beq.w	432fe2 <__gnu_unwind_pr_common+0x256>
  432ebe:	1d20      	adds	r0, r4, #4
  432ec0:	f7ff fdd8 	bl	432a74 <_Unwind_decode_typeinfo_ptr.isra.0>
  432ec4:	463a      	mov	r2, r7
  432ec6:	4601      	mov	r1, r0
  432ec8:	ab06      	add	r3, sp, #24
  432eca:	4628      	mov	r0, r5
  432ecc:	f3af 8000 	nop.w
  432ed0:	2800      	cmp	r0, #0
  432ed2:	f040 80b5 	bne.w	433040 <__gnu_unwind_pr_common+0x2b4>
  432ed6:	3408      	adds	r4, #8
  432ed8:	e77b      	b.n	432dd2 <__gnu_unwind_pr_common+0x46>
  432eda:	4640      	mov	r0, r8
  432edc:	a907      	add	r1, sp, #28
  432ede:	f000 fb1b 	bl	433518 <__gnu_unwind_execute>
  432ee2:	2800      	cmp	r0, #0
  432ee4:	d1bc      	bne.n	432e60 <__gnu_unwind_pr_common+0xd4>
  432ee6:	9b01      	ldr	r3, [sp, #4]
  432ee8:	2b00      	cmp	r3, #0
  432eea:	d159      	bne.n	432fa0 <__gnu_unwind_pr_common+0x214>
  432eec:	2008      	movs	r0, #8
  432eee:	b00b      	add	sp, #44	; 0x2c
  432ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  432ef4:	4640      	mov	r0, r8
  432ef6:	210d      	movs	r1, #13
  432ef8:	6a2f      	ldr	r7, [r5, #32]
  432efa:	f7ff fed9 	bl	432cb0 <_Unwind_GetGR>
  432efe:	4287      	cmp	r7, r0
  432f00:	d1e9      	bne.n	432ed6 <__gnu_unwind_pr_common+0x14a>
  432f02:	6aab      	ldr	r3, [r5, #40]	; 0x28
  432f04:	429c      	cmp	r4, r3
  432f06:	d1e6      	bne.n	432ed6 <__gnu_unwind_pr_common+0x14a>
  432f08:	4620      	mov	r0, r4
  432f0a:	f7ff fcdb 	bl	4328c4 <selfrel_offset31>
  432f0e:	210f      	movs	r1, #15
  432f10:	4602      	mov	r2, r0
  432f12:	4640      	mov	r0, r8
  432f14:	f7ff fef4 	bl	432d00 <_Unwind_SetGR>
  432f18:	4640      	mov	r0, r8
  432f1a:	462a      	mov	r2, r5
  432f1c:	2100      	movs	r1, #0
  432f1e:	f7ff feef 	bl	432d00 <_Unwind_SetGR>
  432f22:	2007      	movs	r0, #7
  432f24:	e79d      	b.n	432e62 <__gnu_unwind_pr_common+0xd6>
  432f26:	4640      	mov	r0, r8
  432f28:	210d      	movs	r1, #13
  432f2a:	6a2f      	ldr	r7, [r5, #32]
  432f2c:	f7ff fec0 	bl	432cb0 <_Unwind_GetGR>
  432f30:	4287      	cmp	r7, r0
  432f32:	d045      	beq.n	432fc0 <__gnu_unwind_pr_common+0x234>
  432f34:	6823      	ldr	r3, [r4, #0]
  432f36:	2b00      	cmp	r3, #0
  432f38:	da84      	bge.n	432e44 <__gnu_unwind_pr_common+0xb8>
  432f3a:	3404      	adds	r4, #4
  432f3c:	e782      	b.n	432e44 <__gnu_unwind_pr_common+0xb8>
  432f3e:	9b02      	ldr	r3, [sp, #8]
  432f40:	b323      	cbz	r3, 432f8c <__gnu_unwind_pr_common+0x200>
  432f42:	f105 0358 	add.w	r3, r5, #88	; 0x58
  432f46:	9605      	str	r6, [sp, #20]
  432f48:	f104 0a04 	add.w	sl, r4, #4
  432f4c:	9f03      	ldr	r7, [sp, #12]
  432f4e:	f8dd b008 	ldr.w	fp, [sp, #8]
  432f52:	f8cd 9010 	str.w	r9, [sp, #16]
  432f56:	461e      	mov	r6, r3
  432f58:	e002      	b.n	432f60 <__gnu_unwind_pr_common+0x1d4>
  432f5a:	45d9      	cmp	r9, fp
  432f5c:	464f      	mov	r7, r9
  432f5e:	d015      	beq.n	432f8c <__gnu_unwind_pr_common+0x200>
  432f60:	4650      	mov	r0, sl
  432f62:	9606      	str	r6, [sp, #24]
  432f64:	f7ff fd86 	bl	432a74 <_Unwind_decode_typeinfo_ptr.isra.0>
  432f68:	2200      	movs	r2, #0
  432f6a:	4601      	mov	r1, r0
  432f6c:	ab06      	add	r3, sp, #24
  432f6e:	4628      	mov	r0, r5
  432f70:	f3af 8000 	nop.w
  432f74:	f107 0901 	add.w	r9, r7, #1
  432f78:	f10a 0a04 	add.w	sl, sl, #4
  432f7c:	2800      	cmp	r0, #0
  432f7e:	d0ec      	beq.n	432f5a <__gnu_unwind_pr_common+0x1ce>
  432f80:	9b02      	ldr	r3, [sp, #8]
  432f82:	f8dd 9010 	ldr.w	r9, [sp, #16]
  432f86:	9e05      	ldr	r6, [sp, #20]
  432f88:	429f      	cmp	r7, r3
  432f8a:	d1d3      	bne.n	432f34 <__gnu_unwind_pr_common+0x1a8>
  432f8c:	4640      	mov	r0, r8
  432f8e:	210d      	movs	r1, #13
  432f90:	f7ff fe8e 	bl	432cb0 <_Unwind_GetGR>
  432f94:	9b06      	ldr	r3, [sp, #24]
  432f96:	6228      	str	r0, [r5, #32]
  432f98:	62ac      	str	r4, [r5, #40]	; 0x28
  432f9a:	626b      	str	r3, [r5, #36]	; 0x24
  432f9c:	2006      	movs	r0, #6
  432f9e:	e760      	b.n	432e62 <__gnu_unwind_pr_common+0xd6>
  432fa0:	210f      	movs	r1, #15
  432fa2:	4640      	mov	r0, r8
  432fa4:	f7ff fe84 	bl	432cb0 <_Unwind_GetGR>
  432fa8:	210e      	movs	r1, #14
  432faa:	4602      	mov	r2, r0
  432fac:	4640      	mov	r0, r8
  432fae:	f7ff fea7 	bl	432d00 <_Unwind_SetGR>
  432fb2:	4640      	mov	r0, r8
  432fb4:	210f      	movs	r1, #15
  432fb6:	4a29      	ldr	r2, [pc, #164]	; (43305c <__gnu_unwind_pr_common+0x2d0>)
  432fb8:	f7ff fea2 	bl	432d00 <_Unwind_SetGR>
  432fbc:	2007      	movs	r0, #7
  432fbe:	e750      	b.n	432e62 <__gnu_unwind_pr_common+0xd6>
  432fc0:	6aab      	ldr	r3, [r5, #40]	; 0x28
  432fc2:	429c      	cmp	r4, r3
  432fc4:	d1b6      	bne.n	432f34 <__gnu_unwind_pr_common+0x1a8>
  432fc6:	2204      	movs	r2, #4
  432fc8:	2700      	movs	r7, #0
  432fca:	18a3      	adds	r3, r4, r2
  432fcc:	9902      	ldr	r1, [sp, #8]
  432fce:	62a9      	str	r1, [r5, #40]	; 0x28
  432fd0:	62ef      	str	r7, [r5, #44]	; 0x2c
  432fd2:	632a      	str	r2, [r5, #48]	; 0x30
  432fd4:	636b      	str	r3, [r5, #52]	; 0x34
  432fd6:	6823      	ldr	r3, [r4, #0]
  432fd8:	42bb      	cmp	r3, r7
  432fda:	db1f      	blt.n	43301c <__gnu_unwind_pr_common+0x290>
  432fdc:	2301      	movs	r3, #1
  432fde:	9301      	str	r3, [sp, #4]
  432fe0:	e730      	b.n	432e44 <__gnu_unwind_pr_common+0xb8>
  432fe2:	4640      	mov	r0, r8
  432fe4:	210d      	movs	r1, #13
  432fe6:	f7ff fe63 	bl	432cb0 <_Unwind_GetGR>
  432fea:	6228      	str	r0, [r5, #32]
  432fec:	9b06      	ldr	r3, [sp, #24]
  432fee:	626b      	str	r3, [r5, #36]	; 0x24
  432ff0:	62ac      	str	r4, [r5, #40]	; 0x28
  432ff2:	2006      	movs	r0, #6
  432ff4:	e735      	b.n	432e62 <__gnu_unwind_pr_common+0xd6>
  432ff6:	4620      	mov	r0, r4
  432ff8:	f7ff fc64 	bl	4328c4 <selfrel_offset31>
  432ffc:	3404      	adds	r4, #4
  432ffe:	4606      	mov	r6, r0
  433000:	63ac      	str	r4, [r5, #56]	; 0x38
  433002:	4628      	mov	r0, r5
  433004:	f3af 8000 	nop.w
  433008:	2800      	cmp	r0, #0
  43300a:	f43f af29 	beq.w	432e60 <__gnu_unwind_pr_common+0xd4>
  43300e:	4640      	mov	r0, r8
  433010:	4632      	mov	r2, r6
  433012:	210f      	movs	r1, #15
  433014:	f7ff fe74 	bl	432d00 <_Unwind_SetGR>
  433018:	2007      	movs	r0, #7
  43301a:	e722      	b.n	432e62 <__gnu_unwind_pr_common+0xd6>
  43301c:	4608      	mov	r0, r1
  43301e:	3001      	adds	r0, #1
  433020:	eb04 0080 	add.w	r0, r4, r0, lsl #2
  433024:	f7ff fc4e 	bl	4328c4 <selfrel_offset31>
  433028:	210f      	movs	r1, #15
  43302a:	4602      	mov	r2, r0
  43302c:	4640      	mov	r0, r8
  43302e:	f7ff fe67 	bl	432d00 <_Unwind_SetGR>
  433032:	4640      	mov	r0, r8
  433034:	4639      	mov	r1, r7
  433036:	462a      	mov	r2, r5
  433038:	f7ff fe62 	bl	432d00 <_Unwind_SetGR>
  43303c:	2007      	movs	r0, #7
  43303e:	e710      	b.n	432e62 <__gnu_unwind_pr_common+0xd6>
  433040:	4607      	mov	r7, r0
  433042:	210d      	movs	r1, #13
  433044:	4640      	mov	r0, r8
  433046:	f7ff fe33 	bl	432cb0 <_Unwind_GetGR>
  43304a:	2f02      	cmp	r7, #2
  43304c:	6228      	str	r0, [r5, #32]
  43304e:	d1cd      	bne.n	432fec <__gnu_unwind_pr_common+0x260>
  433050:	462b      	mov	r3, r5
  433052:	9a06      	ldr	r2, [sp, #24]
  433054:	f843 2f2c 	str.w	r2, [r3, #44]!
  433058:	626b      	str	r3, [r5, #36]	; 0x24
  43305a:	e7c9      	b.n	432ff0 <__gnu_unwind_pr_common+0x264>
  43305c:	00000000 	.word	0x00000000

00433060 <__aeabi_unwind_cpp_pr0>:
  433060:	2300      	movs	r3, #0
  433062:	e693      	b.n	432d8c <__gnu_unwind_pr_common>

00433064 <__aeabi_unwind_cpp_pr1>:
  433064:	2301      	movs	r3, #1
  433066:	e691      	b.n	432d8c <__gnu_unwind_pr_common>

00433068 <__aeabi_unwind_cpp_pr2>:
  433068:	2302      	movs	r3, #2
  43306a:	e68f      	b.n	432d8c <__gnu_unwind_pr_common>

0043306c <_Unwind_VRS_Pop>:
  43306c:	b5f0      	push	{r4, r5, r6, r7, lr}
  43306e:	4605      	mov	r5, r0
  433070:	b0c5      	sub	sp, #276	; 0x114
  433072:	2904      	cmp	r1, #4
  433074:	d80c      	bhi.n	433090 <_Unwind_VRS_Pop+0x24>
  433076:	e8df f001 	tbb	[pc, r1]
  43307a:	0356      	.short	0x0356
  43307c:	300b      	.short	0x300b
  43307e:	0e          	.byte	0x0e
  43307f:	00          	.byte	0x00
  433080:	2b01      	cmp	r3, #1
  433082:	ea4f 4412 	mov.w	r4, r2, lsr #16
  433086:	b296      	uxth	r6, r2
  433088:	d065      	beq.n	433156 <_Unwind_VRS_Pop+0xea>
  43308a:	2b05      	cmp	r3, #5
  43308c:	f000 8084 	beq.w	433198 <_Unwind_VRS_Pop+0x12c>
  433090:	2002      	movs	r0, #2
  433092:	b045      	add	sp, #276	; 0x114
  433094:	bdf0      	pop	{r4, r5, r6, r7, pc}
  433096:	2b00      	cmp	r3, #0
  433098:	d1fa      	bne.n	433090 <_Unwind_VRS_Pop+0x24>
  43309a:	2a10      	cmp	r2, #16
  43309c:	d8f8      	bhi.n	433090 <_Unwind_VRS_Pop+0x24>
  43309e:	682b      	ldr	r3, [r5, #0]
  4330a0:	06dc      	lsls	r4, r3, #27
  4330a2:	f100 80eb 	bmi.w	43327c <_Unwind_VRS_Pop+0x210>
  4330a6:	ae22      	add	r6, sp, #136	; 0x88
  4330a8:	4630      	mov	r0, r6
  4330aa:	9201      	str	r2, [sp, #4]
  4330ac:	f000 f9a4 	bl	4333f8 <__gnu_Unwind_Save_WMMXC>
  4330b0:	6ba8      	ldr	r0, [r5, #56]	; 0x38
  4330b2:	9a01      	ldr	r2, [sp, #4]
  4330b4:	2300      	movs	r3, #0
  4330b6:	2401      	movs	r4, #1
  4330b8:	fa04 f103 	lsl.w	r1, r4, r3
  4330bc:	4211      	tst	r1, r2
  4330be:	d003      	beq.n	4330c8 <_Unwind_VRS_Pop+0x5c>
  4330c0:	6801      	ldr	r1, [r0, #0]
  4330c2:	f846 1023 	str.w	r1, [r6, r3, lsl #2]
  4330c6:	3004      	adds	r0, #4
  4330c8:	3301      	adds	r3, #1
  4330ca:	2b04      	cmp	r3, #4
  4330cc:	d1f4      	bne.n	4330b8 <_Unwind_VRS_Pop+0x4c>
  4330ce:	63a8      	str	r0, [r5, #56]	; 0x38
  4330d0:	4630      	mov	r0, r6
  4330d2:	f000 f987 	bl	4333e4 <__gnu_Unwind_Restore_WMMXC>
  4330d6:	2000      	movs	r0, #0
  4330d8:	e7db      	b.n	433092 <_Unwind_VRS_Pop+0x26>
  4330da:	2b03      	cmp	r3, #3
  4330dc:	d1d8      	bne.n	433090 <_Unwind_VRS_Pop+0x24>
  4330de:	0c14      	lsrs	r4, r2, #16
  4330e0:	b297      	uxth	r7, r2
  4330e2:	193b      	adds	r3, r7, r4
  4330e4:	2b10      	cmp	r3, #16
  4330e6:	d8d3      	bhi.n	433090 <_Unwind_VRS_Pop+0x24>
  4330e8:	682b      	ldr	r3, [r5, #0]
  4330ea:	071e      	lsls	r6, r3, #28
  4330ec:	f100 80e6 	bmi.w	4332bc <_Unwind_VRS_Pop+0x250>
  4330f0:	ae22      	add	r6, sp, #136	; 0x88
  4330f2:	4630      	mov	r0, r6
  4330f4:	007f      	lsls	r7, r7, #1
  4330f6:	f000 f953 	bl	4333a0 <__gnu_Unwind_Save_WMMXD>
  4330fa:	eb06 02c4 	add.w	r2, r6, r4, lsl #3
  4330fe:	1e7b      	subs	r3, r7, #1
  433100:	6bac      	ldr	r4, [r5, #56]	; 0x38
  433102:	b157      	cbz	r7, 43311a <_Unwind_VRS_Pop+0xae>
  433104:	3a04      	subs	r2, #4
  433106:	4621      	mov	r1, r4
  433108:	f851 0b04 	ldr.w	r0, [r1], #4
  43310c:	f842 0f04 	str.w	r0, [r2, #4]!
  433110:	3b01      	subs	r3, #1
  433112:	1c58      	adds	r0, r3, #1
  433114:	d1f8      	bne.n	433108 <_Unwind_VRS_Pop+0x9c>
  433116:	eb04 0487 	add.w	r4, r4, r7, lsl #2
  43311a:	4630      	mov	r0, r6
  43311c:	63ac      	str	r4, [r5, #56]	; 0x38
  43311e:	f000 f91d 	bl	43335c <__gnu_Unwind_Restore_WMMXD>
  433122:	2000      	movs	r0, #0
  433124:	e7b5      	b.n	433092 <_Unwind_VRS_Pop+0x26>
  433126:	2b00      	cmp	r3, #0
  433128:	d1b2      	bne.n	433090 <_Unwind_VRS_Pop+0x24>
  43312a:	6bac      	ldr	r4, [r5, #56]	; 0x38
  43312c:	b297      	uxth	r7, r2
  43312e:	1d28      	adds	r0, r5, #4
  433130:	2601      	movs	r6, #1
  433132:	fa06 f103 	lsl.w	r1, r6, r3
  433136:	4239      	tst	r1, r7
  433138:	f103 0301 	add.w	r3, r3, #1
  43313c:	d002      	beq.n	433144 <_Unwind_VRS_Pop+0xd8>
  43313e:	6821      	ldr	r1, [r4, #0]
  433140:	6001      	str	r1, [r0, #0]
  433142:	3404      	adds	r4, #4
  433144:	2b10      	cmp	r3, #16
  433146:	f100 0004 	add.w	r0, r0, #4
  43314a:	d1f2      	bne.n	433132 <_Unwind_VRS_Pop+0xc6>
  43314c:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
  433150:	d120      	bne.n	433194 <_Unwind_VRS_Pop+0x128>
  433152:	63ac      	str	r4, [r5, #56]	; 0x38
  433154:	e79d      	b.n	433092 <_Unwind_VRS_Pop+0x26>
  433156:	1932      	adds	r2, r6, r4
  433158:	2a10      	cmp	r2, #16
  43315a:	d899      	bhi.n	433090 <_Unwind_VRS_Pop+0x24>
  43315c:	2c0f      	cmp	r4, #15
  43315e:	d897      	bhi.n	433090 <_Unwind_VRS_Pop+0x24>
  433160:	6829      	ldr	r1, [r5, #0]
  433162:	07c8      	lsls	r0, r1, #31
  433164:	f04f 0700 	mov.w	r7, #0
  433168:	d455      	bmi.n	433216 <_Unwind_VRS_Pop+0x1aa>
  43316a:	a822      	add	r0, sp, #136	; 0x88
  43316c:	9301      	str	r3, [sp, #4]
  43316e:	f000 f8e1 	bl	433334 <__gnu_Unwind_Save_VFP>
  433172:	9b01      	ldr	r3, [sp, #4]
  433174:	e019      	b.n	4331aa <_Unwind_VRS_Pop+0x13e>
  433176:	4608      	mov	r0, r1
  433178:	4637      	mov	r7, r6
  43317a:	2b01      	cmp	r3, #1
  43317c:	f000 8098 	beq.w	4332b0 <_Unwind_VRS_Pop+0x244>
  433180:	2c0f      	cmp	r4, #15
  433182:	63a8      	str	r0, [r5, #56]	; 0x38
  433184:	d802      	bhi.n	43318c <_Unwind_VRS_Pop+0x120>
  433186:	a822      	add	r0, sp, #136	; 0x88
  433188:	f000 f8d8 	bl	43333c <__gnu_Unwind_Restore_VFP_D>
  43318c:	b117      	cbz	r7, 433194 <_Unwind_VRS_Pop+0x128>
  43318e:	a802      	add	r0, sp, #8
  433190:	f000 f8dc 	bl	43334c <__gnu_Unwind_Restore_VFP_D_16_to_31>
  433194:	2000      	movs	r0, #0
  433196:	e77c      	b.n	433092 <_Unwind_VRS_Pop+0x26>
  433198:	1937      	adds	r7, r6, r4
  43319a:	2f20      	cmp	r7, #32
  43319c:	f63f af78 	bhi.w	433090 <_Unwind_VRS_Pop+0x24>
  4331a0:	2c0f      	cmp	r4, #15
  4331a2:	d930      	bls.n	433206 <_Unwind_VRS_Pop+0x19a>
  4331a4:	4637      	mov	r7, r6
  4331a6:	2e00      	cmp	r6, #0
  4331a8:	d145      	bne.n	433236 <_Unwind_VRS_Pop+0x1ca>
  4331aa:	6ba9      	ldr	r1, [r5, #56]	; 0x38
  4331ac:	4632      	mov	r2, r6
  4331ae:	2e00      	cmp	r6, #0
  4331b0:	d0e1      	beq.n	433176 <_Unwind_VRS_Pop+0x10a>
  4331b2:	2700      	movs	r7, #0
  4331b4:	a844      	add	r0, sp, #272	; 0x110
  4331b6:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  4331ba:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
  4331be:	f10c 32ff 	add.w	r2, ip, #4294967295
  4331c2:	388c      	subs	r0, #140	; 0x8c
  4331c4:	468e      	mov	lr, r1
  4331c6:	f85e 6b04 	ldr.w	r6, [lr], #4
  4331ca:	f840 6f04 	str.w	r6, [r0, #4]!
  4331ce:	3a01      	subs	r2, #1
  4331d0:	1c56      	adds	r6, r2, #1
  4331d2:	d1f8      	bne.n	4331c6 <_Unwind_VRS_Pop+0x15a>
  4331d4:	eb01 008c 	add.w	r0, r1, ip, lsl #2
  4331d8:	2f00      	cmp	r7, #0
  4331da:	d0ce      	beq.n	43317a <_Unwind_VRS_Pop+0x10e>
  4331dc:	2c10      	cmp	r4, #16
  4331de:	4622      	mov	r2, r4
  4331e0:	a944      	add	r1, sp, #272	; 0x110
  4331e2:	bf38      	it	cc
  4331e4:	2210      	movcc	r2, #16
  4331e6:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  4331ea:	f5a2 72c4 	sub.w	r2, r2, #392	; 0x188
  4331ee:	4601      	mov	r1, r0
  4331f0:	0078      	lsls	r0, r7, #1
  4331f2:	3a04      	subs	r2, #4
  4331f4:	eb01 0080 	add.w	r0, r1, r0, lsl #2
  4331f8:	f851 6b04 	ldr.w	r6, [r1], #4
  4331fc:	f842 6f04 	str.w	r6, [r2, #4]!
  433200:	4281      	cmp	r1, r0
  433202:	d1f9      	bne.n	4331f8 <_Unwind_VRS_Pop+0x18c>
  433204:	e7b9      	b.n	43317a <_Unwind_VRS_Pop+0x10e>
  433206:	2f10      	cmp	r7, #16
  433208:	d942      	bls.n	433290 <_Unwind_VRS_Pop+0x224>
  43320a:	682a      	ldr	r2, [r5, #0]
  43320c:	07d0      	lsls	r0, r2, #31
  43320e:	f1a7 0710 	sub.w	r7, r7, #16
  433212:	4611      	mov	r1, r2
  433214:	d510      	bpl.n	433238 <_Unwind_VRS_Pop+0x1cc>
  433216:	f021 0201 	bic.w	r2, r1, #1
  43321a:	2b05      	cmp	r3, #5
  43321c:	602a      	str	r2, [r5, #0]
  43321e:	9301      	str	r3, [sp, #4]
  433220:	4628      	mov	r0, r5
  433222:	d05b      	beq.n	4332dc <_Unwind_VRS_Pop+0x270>
  433224:	f021 0103 	bic.w	r1, r1, #3
  433228:	f840 1b48 	str.w	r1, [r0], #72
  43322c:	f000 f882 	bl	433334 <__gnu_Unwind_Save_VFP>
  433230:	9b01      	ldr	r3, [sp, #4]
  433232:	2f00      	cmp	r7, #0
  433234:	d04a      	beq.n	4332cc <_Unwind_VRS_Pop+0x260>
  433236:	682a      	ldr	r2, [r5, #0]
  433238:	0751      	lsls	r1, r2, #29
  43323a:	d45b      	bmi.n	4332f4 <_Unwind_VRS_Pop+0x288>
  43323c:	2b01      	cmp	r3, #1
  43323e:	d063      	beq.n	433308 <_Unwind_VRS_Pop+0x29c>
  433240:	2c0f      	cmp	r4, #15
  433242:	d804      	bhi.n	43324e <_Unwind_VRS_Pop+0x1e2>
  433244:	a822      	add	r0, sp, #136	; 0x88
  433246:	9301      	str	r3, [sp, #4]
  433248:	f000 f87c 	bl	433344 <__gnu_Unwind_Save_VFP_D>
  43324c:	9b01      	ldr	r3, [sp, #4]
  43324e:	2f00      	cmp	r7, #0
  433250:	d0ab      	beq.n	4331aa <_Unwind_VRS_Pop+0x13e>
  433252:	a802      	add	r0, sp, #8
  433254:	9301      	str	r3, [sp, #4]
  433256:	f000 f87d 	bl	433354 <__gnu_Unwind_Save_VFP_D_16_to_31>
  43325a:	9b01      	ldr	r3, [sp, #4]
  43325c:	6ba9      	ldr	r1, [r5, #56]	; 0x38
  43325e:	f1c4 0210 	rsb	r2, r4, #16
  433262:	2a00      	cmp	r2, #0
  433264:	dca6      	bgt.n	4331b4 <_Unwind_VRS_Pop+0x148>
  433266:	2c10      	cmp	r4, #16
  433268:	4622      	mov	r2, r4
  43326a:	a844      	add	r0, sp, #272	; 0x110
  43326c:	bf38      	it	cc
  43326e:	2210      	movcc	r2, #16
  433270:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
  433274:	f5a2 72c4 	sub.w	r2, r2, #392	; 0x188
  433278:	0078      	lsls	r0, r7, #1
  43327a:	e7ba      	b.n	4331f2 <_Unwind_VRS_Pop+0x186>
  43327c:	f023 0310 	bic.w	r3, r3, #16
  433280:	602b      	str	r3, [r5, #0]
  433282:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
  433286:	9201      	str	r2, [sp, #4]
  433288:	f000 f8b6 	bl	4333f8 <__gnu_Unwind_Save_WMMXC>
  43328c:	9a01      	ldr	r2, [sp, #4]
  43328e:	e70a      	b.n	4330a6 <_Unwind_VRS_Pop+0x3a>
  433290:	6829      	ldr	r1, [r5, #0]
  433292:	07c8      	lsls	r0, r1, #31
  433294:	d51d      	bpl.n	4332d2 <_Unwind_VRS_Pop+0x266>
  433296:	f021 0201 	bic.w	r2, r1, #1
  43329a:	4628      	mov	r0, r5
  43329c:	f042 0202 	orr.w	r2, r2, #2
  4332a0:	f840 2b48 	str.w	r2, [r0], #72
  4332a4:	9301      	str	r3, [sp, #4]
  4332a6:	2700      	movs	r7, #0
  4332a8:	f000 f84c 	bl	433344 <__gnu_Unwind_Save_VFP_D>
  4332ac:	9b01      	ldr	r3, [sp, #4]
  4332ae:	e7c9      	b.n	433244 <_Unwind_VRS_Pop+0x1d8>
  4332b0:	3004      	adds	r0, #4
  4332b2:	63a8      	str	r0, [r5, #56]	; 0x38
  4332b4:	a822      	add	r0, sp, #136	; 0x88
  4332b6:	f000 f839 	bl	43332c <__gnu_Unwind_Restore_VFP>
  4332ba:	e76b      	b.n	433194 <_Unwind_VRS_Pop+0x128>
  4332bc:	f023 0308 	bic.w	r3, r3, #8
  4332c0:	602b      	str	r3, [r5, #0]
  4332c2:	f505 70a8 	add.w	r0, r5, #336	; 0x150
  4332c6:	f000 f86b 	bl	4333a0 <__gnu_Unwind_Save_WMMXD>
  4332ca:	e711      	b.n	4330f0 <_Unwind_VRS_Pop+0x84>
  4332cc:	2b01      	cmp	r3, #1
  4332ce:	f43f af4c 	beq.w	43316a <_Unwind_VRS_Pop+0xfe>
  4332d2:	2c0f      	cmp	r4, #15
  4332d4:	bf98      	it	ls
  4332d6:	2700      	movls	r7, #0
  4332d8:	d9b4      	bls.n	433244 <_Unwind_VRS_Pop+0x1d8>
  4332da:	e766      	b.n	4331aa <_Unwind_VRS_Pop+0x13e>
  4332dc:	f042 0202 	orr.w	r2, r2, #2
  4332e0:	f840 2b48 	str.w	r2, [r0], #72
  4332e4:	f000 f82e 	bl	433344 <__gnu_Unwind_Save_VFP_D>
  4332e8:	9b01      	ldr	r3, [sp, #4]
  4332ea:	2f00      	cmp	r7, #0
  4332ec:	d0aa      	beq.n	433244 <_Unwind_VRS_Pop+0x1d8>
  4332ee:	682a      	ldr	r2, [r5, #0]
  4332f0:	0751      	lsls	r1, r2, #29
  4332f2:	d5a5      	bpl.n	433240 <_Unwind_VRS_Pop+0x1d4>
  4332f4:	4628      	mov	r0, r5
  4332f6:	f022 0204 	bic.w	r2, r2, #4
  4332fa:	f840 2bd0 	str.w	r2, [r0], #208
  4332fe:	9301      	str	r3, [sp, #4]
  433300:	f000 f828 	bl	433354 <__gnu_Unwind_Save_VFP_D_16_to_31>
  433304:	9b01      	ldr	r3, [sp, #4]
  433306:	e799      	b.n	43323c <_Unwind_VRS_Pop+0x1d0>
  433308:	a822      	add	r0, sp, #136	; 0x88
  43330a:	9301      	str	r3, [sp, #4]
  43330c:	f000 f812 	bl	433334 <__gnu_Unwind_Save_VFP>
  433310:	9b01      	ldr	r3, [sp, #4]
  433312:	e7a3      	b.n	43325c <_Unwind_VRS_Pop+0x1f0>

00433314 <__restore_core_regs>:
  433314:	f100 0134 	add.w	r1, r0, #52	; 0x34
  433318:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
  43331c:	469c      	mov	ip, r3
  43331e:	46a6      	mov	lr, r4
  433320:	f84c 5d04 	str.w	r5, [ip, #-4]!
  433324:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
  433328:	46e5      	mov	sp, ip
  43332a:	bd00      	pop	{pc}

0043332c <__gnu_Unwind_Restore_VFP>:
  43332c:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
  433330:	4770      	bx	lr
  433332:	bf00      	nop

00433334 <__gnu_Unwind_Save_VFP>:
  433334:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
  433338:	4770      	bx	lr
  43333a:	bf00      	nop

0043333c <__gnu_Unwind_Restore_VFP_D>:
  43333c:	ec90 0b20 	vldmia	r0, {d0-d15}
  433340:	4770      	bx	lr
  433342:	bf00      	nop

00433344 <__gnu_Unwind_Save_VFP_D>:
  433344:	ec80 0b20 	vstmia	r0, {d0-d15}
  433348:	4770      	bx	lr
  43334a:	bf00      	nop

0043334c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
  43334c:	ecd0 0b20 	vldmia	r0, {d16-d31}
  433350:	4770      	bx	lr
  433352:	bf00      	nop

00433354 <__gnu_Unwind_Save_VFP_D_16_to_31>:
  433354:	ecc0 0b20 	vstmia	r0, {d16-d31}
  433358:	4770      	bx	lr
  43335a:	bf00      	nop

0043335c <__gnu_Unwind_Restore_WMMXD>:
  43335c:	ecf0 0102 	ldfe	f0, [r0], #8
  433360:	ecf0 1102 	ldfe	f1, [r0], #8
  433364:	ecf0 2102 	ldfe	f2, [r0], #8
  433368:	ecf0 3102 	ldfe	f3, [r0], #8
  43336c:	ecf0 4102 	ldfe	f4, [r0], #8
  433370:	ecf0 5102 	ldfe	f5, [r0], #8
  433374:	ecf0 6102 	ldfe	f6, [r0], #8
  433378:	ecf0 7102 	ldfe	f7, [r0], #8
  43337c:	ecf0 8102 	ldfp	f0, [r0], #8
  433380:	ecf0 9102 	ldfp	f1, [r0], #8
  433384:	ecf0 a102 	ldfp	f2, [r0], #8
  433388:	ecf0 b102 	ldfp	f3, [r0], #8
  43338c:	ecf0 c102 	ldfp	f4, [r0], #8
  433390:	ecf0 d102 	ldfp	f5, [r0], #8
  433394:	ecf0 e102 	ldfp	f6, [r0], #8
  433398:	ecf0 f102 	ldfp	f7, [r0], #8
  43339c:	4770      	bx	lr
  43339e:	bf00      	nop

004333a0 <__gnu_Unwind_Save_WMMXD>:
  4333a0:	ece0 0102 	stfe	f0, [r0], #8
  4333a4:	ece0 1102 	stfe	f1, [r0], #8
  4333a8:	ece0 2102 	stfe	f2, [r0], #8
  4333ac:	ece0 3102 	stfe	f3, [r0], #8
  4333b0:	ece0 4102 	stfe	f4, [r0], #8
  4333b4:	ece0 5102 	stfe	f5, [r0], #8
  4333b8:	ece0 6102 	stfe	f6, [r0], #8
  4333bc:	ece0 7102 	stfe	f7, [r0], #8
  4333c0:	ece0 8102 	stfp	f0, [r0], #8
  4333c4:	ece0 9102 	stfp	f1, [r0], #8
  4333c8:	ece0 a102 	stfp	f2, [r0], #8
  4333cc:	ece0 b102 	stfp	f3, [r0], #8
  4333d0:	ece0 c102 	stfp	f4, [r0], #8
  4333d4:	ece0 d102 	stfp	f5, [r0], #8
  4333d8:	ece0 e102 	stfp	f6, [r0], #8
  4333dc:	ece0 f102 	stfp	f7, [r0], #8
  4333e0:	4770      	bx	lr
  4333e2:	bf00      	nop

004333e4 <__gnu_Unwind_Restore_WMMXC>:
  4333e4:	fcb0 8101 	ldc2	1, cr8, [r0], #4
  4333e8:	fcb0 9101 	ldc2	1, cr9, [r0], #4
  4333ec:	fcb0 a101 	ldc2	1, cr10, [r0], #4
  4333f0:	fcb0 b101 	ldc2	1, cr11, [r0], #4
  4333f4:	4770      	bx	lr
  4333f6:	bf00      	nop

004333f8 <__gnu_Unwind_Save_WMMXC>:
  4333f8:	fca0 8101 	stc2	1, cr8, [r0], #4
  4333fc:	fca0 9101 	stc2	1, cr9, [r0], #4
  433400:	fca0 a101 	stc2	1, cr10, [r0], #4
  433404:	fca0 b101 	stc2	1, cr11, [r0], #4
  433408:	4770      	bx	lr
  43340a:	bf00      	nop

0043340c <_Unwind_RaiseException>:
  43340c:	46ec      	mov	ip, sp
  43340e:	b500      	push	{lr}
  433410:	e92d 5000 	stmdb	sp!, {ip, lr}
  433414:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
  433418:	f04f 0300 	mov.w	r3, #0
  43341c:	e92d 000c 	stmdb	sp!, {r2, r3}
  433420:	a901      	add	r1, sp, #4
  433422:	f7ff fbbf 	bl	432ba4 <__gnu_Unwind_RaiseException>
  433426:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
  43342a:	b012      	add	sp, #72	; 0x48
  43342c:	4770      	bx	lr
  43342e:	bf00      	nop

00433430 <_Unwind_Resume>:
  433430:	46ec      	mov	ip, sp
  433432:	b500      	push	{lr}
  433434:	e92d 5000 	stmdb	sp!, {ip, lr}
  433438:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
  43343c:	f04f 0300 	mov.w	r3, #0
  433440:	e92d 000c 	stmdb	sp!, {r2, r3}
  433444:	a901      	add	r1, sp, #4
  433446:	f7ff fbe7 	bl	432c18 <__gnu_Unwind_Resume>
  43344a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
  43344e:	b012      	add	sp, #72	; 0x48
  433450:	4770      	bx	lr
  433452:	bf00      	nop

00433454 <_Unwind_Resume_or_Rethrow>:
  433454:	46ec      	mov	ip, sp
  433456:	b500      	push	{lr}
  433458:	e92d 5000 	stmdb	sp!, {ip, lr}
  43345c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
  433460:	f04f 0300 	mov.w	r3, #0
  433464:	e92d 000c 	stmdb	sp!, {r2, r3}
  433468:	a901      	add	r1, sp, #4
  43346a:	f7ff fbf7 	bl	432c5c <__gnu_Unwind_Resume_or_Rethrow>
  43346e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
  433472:	b012      	add	sp, #72	; 0x48
  433474:	4770      	bx	lr
  433476:	bf00      	nop

00433478 <_Unwind_ForcedUnwind>:
  433478:	46ec      	mov	ip, sp
  43347a:	b500      	push	{lr}
  43347c:	e92d 5000 	stmdb	sp!, {ip, lr}
  433480:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
  433484:	f04f 0300 	mov.w	r3, #0
  433488:	e92d 000c 	stmdb	sp!, {r2, r3}
  43348c:	ab01      	add	r3, sp, #4
  43348e:	f7ff fbb9 	bl	432c04 <__gnu_Unwind_ForcedUnwind>
  433492:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
  433496:	b012      	add	sp, #72	; 0x48
  433498:	4770      	bx	lr
  43349a:	bf00      	nop

0043349c <_Unwind_Backtrace>:
  43349c:	46ec      	mov	ip, sp
  43349e:	b500      	push	{lr}
  4334a0:	e92d 5000 	stmdb	sp!, {ip, lr}
  4334a4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
  4334a8:	f04f 0300 	mov.w	r3, #0
  4334ac:	e92d 000c 	stmdb	sp!, {r2, r3}
  4334b0:	aa01      	add	r2, sp, #4
  4334b2:	f7ff fc33 	bl	432d1c <__gnu_Unwind_Backtrace>
  4334b6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
  4334ba:	b012      	add	sp, #72	; 0x48
  4334bc:	4770      	bx	lr
  4334be:	bf00      	nop

004334c0 <next_unwind_byte>:
  4334c0:	7a03      	ldrb	r3, [r0, #8]
  4334c2:	b91b      	cbnz	r3, 4334cc <next_unwind_byte+0xc>
  4334c4:	7a43      	ldrb	r3, [r0, #9]
  4334c6:	b943      	cbnz	r3, 4334da <next_unwind_byte+0x1a>
  4334c8:	20b0      	movs	r0, #176	; 0xb0
  4334ca:	4770      	bx	lr
  4334cc:	1e5a      	subs	r2, r3, #1
  4334ce:	6803      	ldr	r3, [r0, #0]
  4334d0:	7202      	strb	r2, [r0, #8]
  4334d2:	021a      	lsls	r2, r3, #8
  4334d4:	6002      	str	r2, [r0, #0]
  4334d6:	0e18      	lsrs	r0, r3, #24
  4334d8:	4770      	bx	lr
  4334da:	6842      	ldr	r2, [r0, #4]
  4334dc:	3b01      	subs	r3, #1
  4334de:	b410      	push	{r4}
  4334e0:	7243      	strb	r3, [r0, #9]
  4334e2:	6813      	ldr	r3, [r2, #0]
  4334e4:	2103      	movs	r1, #3
  4334e6:	1d14      	adds	r4, r2, #4
  4334e8:	7201      	strb	r1, [r0, #8]
  4334ea:	021a      	lsls	r2, r3, #8
  4334ec:	6044      	str	r4, [r0, #4]
  4334ee:	6002      	str	r2, [r0, #0]
  4334f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4334f4:	0e18      	lsrs	r0, r3, #24
  4334f6:	4770      	bx	lr

004334f8 <_Unwind_GetGR.constprop.0>:
  4334f8:	b500      	push	{lr}
  4334fa:	b085      	sub	sp, #20
  4334fc:	ab03      	add	r3, sp, #12
  4334fe:	2100      	movs	r1, #0
  433500:	9300      	str	r3, [sp, #0]
  433502:	220c      	movs	r2, #12
  433504:	460b      	mov	r3, r1
  433506:	f7ff fbb9 	bl	432c7c <_Unwind_VRS_Get>
  43350a:	9803      	ldr	r0, [sp, #12]
  43350c:	b005      	add	sp, #20
  43350e:	f85d fb04 	ldr.w	pc, [sp], #4
  433512:	bf00      	nop

00433514 <unwind_UCB_from_context>:
  433514:	e7f0      	b.n	4334f8 <_Unwind_GetGR.constprop.0>
  433516:	bf00      	nop

00433518 <__gnu_unwind_execute>:
  433518:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  43351c:	4606      	mov	r6, r0
  43351e:	b085      	sub	sp, #20
  433520:	460d      	mov	r5, r1
  433522:	f04f 0800 	mov.w	r8, #0
  433526:	4628      	mov	r0, r5
  433528:	f7ff ffca 	bl	4334c0 <next_unwind_byte>
  43352c:	28b0      	cmp	r0, #176	; 0xb0
  43352e:	4604      	mov	r4, r0
  433530:	f000 80b5 	beq.w	43369e <__gnu_unwind_execute+0x186>
  433534:	f020 017f 	bic.w	r1, r0, #127	; 0x7f
  433538:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
  43353c:	d020      	beq.n	433580 <__gnu_unwind_execute+0x68>
  43353e:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
  433542:	2b80      	cmp	r3, #128	; 0x80
  433544:	d07a      	beq.n	43363c <__gnu_unwind_execute+0x124>
  433546:	2b90      	cmp	r3, #144	; 0x90
  433548:	d036      	beq.n	4335b8 <__gnu_unwind_execute+0xa0>
  43354a:	2ba0      	cmp	r3, #160	; 0xa0
  43354c:	d049      	beq.n	4335e2 <__gnu_unwind_execute+0xca>
  43354e:	2bb0      	cmp	r3, #176	; 0xb0
  433550:	d05c      	beq.n	43360c <__gnu_unwind_execute+0xf4>
  433552:	2bc0      	cmp	r3, #192	; 0xc0
  433554:	f000 8089 	beq.w	43366a <__gnu_unwind_execute+0x152>
  433558:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
  43355c:	2bd0      	cmp	r3, #208	; 0xd0
  43355e:	d10b      	bne.n	433578 <__gnu_unwind_execute+0x60>
  433560:	f000 0207 	and.w	r2, r0, #7
  433564:	3201      	adds	r2, #1
  433566:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
  43356a:	4630      	mov	r0, r6
  43356c:	2101      	movs	r1, #1
  43356e:	2305      	movs	r3, #5
  433570:	f7ff fd7c 	bl	43306c <_Unwind_VRS_Pop>
  433574:	2800      	cmp	r0, #0
  433576:	d0d6      	beq.n	433526 <__gnu_unwind_execute+0xe>
  433578:	2009      	movs	r0, #9
  43357a:	b005      	add	sp, #20
  43357c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  433580:	f10d 090c 	add.w	r9, sp, #12
  433584:	460b      	mov	r3, r1
  433586:	0087      	lsls	r7, r0, #2
  433588:	f8cd 9000 	str.w	r9, [sp]
  43358c:	4630      	mov	r0, r6
  43358e:	220d      	movs	r2, #13
  433590:	f7ff fb74 	bl	432c7c <_Unwind_VRS_Get>
  433594:	b2ff      	uxtb	r7, r7
  433596:	9b03      	ldr	r3, [sp, #12]
  433598:	f8cd 9000 	str.w	r9, [sp]
  43359c:	3704      	adds	r7, #4
  43359e:	0660      	lsls	r0, r4, #25
  4335a0:	f04f 0100 	mov.w	r1, #0
  4335a4:	bf4c      	ite	mi
  4335a6:	1bdf      	submi	r7, r3, r7
  4335a8:	18ff      	addpl	r7, r7, r3
  4335aa:	4630      	mov	r0, r6
  4335ac:	460b      	mov	r3, r1
  4335ae:	220d      	movs	r2, #13
  4335b0:	9703      	str	r7, [sp, #12]
  4335b2:	f7ff fb8b 	bl	432ccc <_Unwind_VRS_Set>
  4335b6:	e7b6      	b.n	433526 <__gnu_unwind_execute+0xe>
  4335b8:	f000 030d 	and.w	r3, r0, #13
  4335bc:	2b0d      	cmp	r3, #13
  4335be:	d0db      	beq.n	433578 <__gnu_unwind_execute+0x60>
  4335c0:	af03      	add	r7, sp, #12
  4335c2:	2100      	movs	r1, #0
  4335c4:	f000 020f 	and.w	r2, r0, #15
  4335c8:	460b      	mov	r3, r1
  4335ca:	9700      	str	r7, [sp, #0]
  4335cc:	4630      	mov	r0, r6
  4335ce:	f7ff fb55 	bl	432c7c <_Unwind_VRS_Get>
  4335d2:	2100      	movs	r1, #0
  4335d4:	9700      	str	r7, [sp, #0]
  4335d6:	460b      	mov	r3, r1
  4335d8:	4630      	mov	r0, r6
  4335da:	220d      	movs	r2, #13
  4335dc:	f7ff fb76 	bl	432ccc <_Unwind_VRS_Set>
  4335e0:	e7a1      	b.n	433526 <__gnu_unwind_execute+0xe>
  4335e2:	43c3      	mvns	r3, r0
  4335e4:	f003 0307 	and.w	r3, r3, #7
  4335e8:	f44f 627f 	mov.w	r2, #4080	; 0xff0
  4335ec:	411a      	asrs	r2, r3
  4335ee:	0701      	lsls	r1, r0, #28
  4335f0:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
  4335f4:	f04f 0100 	mov.w	r1, #0
  4335f8:	bf48      	it	mi
  4335fa:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
  4335fe:	460b      	mov	r3, r1
  433600:	4630      	mov	r0, r6
  433602:	f7ff fd33 	bl	43306c <_Unwind_VRS_Pop>
  433606:	2800      	cmp	r0, #0
  433608:	d1b6      	bne.n	433578 <__gnu_unwind_execute+0x60>
  43360a:	e78c      	b.n	433526 <__gnu_unwind_execute+0xe>
  43360c:	28b1      	cmp	r0, #177	; 0xb1
  43360e:	d04c      	beq.n	4336aa <__gnu_unwind_execute+0x192>
  433610:	28b2      	cmp	r0, #178	; 0xb2
  433612:	d05d      	beq.n	4336d0 <__gnu_unwind_execute+0x1b8>
  433614:	28b3      	cmp	r0, #179	; 0xb3
  433616:	f000 808a 	beq.w	43372e <__gnu_unwind_execute+0x216>
  43361a:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
  43361e:	2bb4      	cmp	r3, #180	; 0xb4
  433620:	d0aa      	beq.n	433578 <__gnu_unwind_execute+0x60>
  433622:	f000 0207 	and.w	r2, r0, #7
  433626:	3201      	adds	r2, #1
  433628:	2101      	movs	r1, #1
  43362a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
  43362e:	460b      	mov	r3, r1
  433630:	4630      	mov	r0, r6
  433632:	f7ff fd1b 	bl	43306c <_Unwind_VRS_Pop>
  433636:	2800      	cmp	r0, #0
  433638:	d19e      	bne.n	433578 <__gnu_unwind_execute+0x60>
  43363a:	e774      	b.n	433526 <__gnu_unwind_execute+0xe>
  43363c:	4628      	mov	r0, r5
  43363e:	f7ff ff3f 	bl	4334c0 <next_unwind_byte>
  433642:	0224      	lsls	r4, r4, #8
  433644:	4320      	orrs	r0, r4
  433646:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  43364a:	d095      	beq.n	433578 <__gnu_unwind_execute+0x60>
  43364c:	0104      	lsls	r4, r0, #4
  43364e:	2100      	movs	r1, #0
  433650:	b2a2      	uxth	r2, r4
  433652:	460b      	mov	r3, r1
  433654:	4630      	mov	r0, r6
  433656:	f7ff fd09 	bl	43306c <_Unwind_VRS_Pop>
  43365a:	2800      	cmp	r0, #0
  43365c:	d18c      	bne.n	433578 <__gnu_unwind_execute+0x60>
  43365e:	f414 4f00 	tst.w	r4, #32768	; 0x8000
  433662:	bf18      	it	ne
  433664:	f04f 0801 	movne.w	r8, #1
  433668:	e75d      	b.n	433526 <__gnu_unwind_execute+0xe>
  43366a:	28c6      	cmp	r0, #198	; 0xc6
  43366c:	d072      	beq.n	433754 <__gnu_unwind_execute+0x23c>
  43366e:	28c7      	cmp	r0, #199	; 0xc7
  433670:	d07a      	beq.n	433768 <__gnu_unwind_execute+0x250>
  433672:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
  433676:	2bc0      	cmp	r3, #192	; 0xc0
  433678:	f000 8089 	beq.w	43378e <__gnu_unwind_execute+0x276>
  43367c:	28c8      	cmp	r0, #200	; 0xc8
  43367e:	f000 80a5 	beq.w	4337cc <__gnu_unwind_execute+0x2b4>
  433682:	28c9      	cmp	r0, #201	; 0xc9
  433684:	f47f af78 	bne.w	433578 <__gnu_unwind_execute+0x60>
  433688:	4628      	mov	r0, r5
  43368a:	f7ff ff19 	bl	4334c0 <next_unwind_byte>
  43368e:	f000 020f 	and.w	r2, r0, #15
  433692:	3201      	adds	r2, #1
  433694:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
  433698:	ea42 3200 	orr.w	r2, r2, r0, lsl #12
  43369c:	e765      	b.n	43356a <__gnu_unwind_execute+0x52>
  43369e:	f1b8 0f00 	cmp.w	r8, #0
  4336a2:	f000 8082 	beq.w	4337aa <__gnu_unwind_execute+0x292>
  4336a6:	2000      	movs	r0, #0
  4336a8:	e767      	b.n	43357a <__gnu_unwind_execute+0x62>
  4336aa:	4628      	mov	r0, r5
  4336ac:	f7ff ff08 	bl	4334c0 <next_unwind_byte>
  4336b0:	4602      	mov	r2, r0
  4336b2:	2800      	cmp	r0, #0
  4336b4:	f43f af60 	beq.w	433578 <__gnu_unwind_execute+0x60>
  4336b8:	f010 01f0 	ands.w	r1, r0, #240	; 0xf0
  4336bc:	f47f af5c 	bne.w	433578 <__gnu_unwind_execute+0x60>
  4336c0:	4630      	mov	r0, r6
  4336c2:	460b      	mov	r3, r1
  4336c4:	f7ff fcd2 	bl	43306c <_Unwind_VRS_Pop>
  4336c8:	2800      	cmp	r0, #0
  4336ca:	f47f af55 	bne.w	433578 <__gnu_unwind_execute+0x60>
  4336ce:	e72a      	b.n	433526 <__gnu_unwind_execute+0xe>
  4336d0:	2100      	movs	r1, #0
  4336d2:	f10d 090c 	add.w	r9, sp, #12
  4336d6:	220d      	movs	r2, #13
  4336d8:	460b      	mov	r3, r1
  4336da:	f8cd 9000 	str.w	r9, [sp]
  4336de:	4630      	mov	r0, r6
  4336e0:	f7ff facc 	bl	432c7c <_Unwind_VRS_Get>
  4336e4:	4628      	mov	r0, r5
  4336e6:	f7ff feeb 	bl	4334c0 <next_unwind_byte>
  4336ea:	0602      	lsls	r2, r0, #24
  4336ec:	f04f 0402 	mov.w	r4, #2
  4336f0:	d50c      	bpl.n	43370c <__gnu_unwind_execute+0x1f4>
  4336f2:	9b03      	ldr	r3, [sp, #12]
  4336f4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  4336f8:	40a0      	lsls	r0, r4
  4336fa:	4403      	add	r3, r0
  4336fc:	4628      	mov	r0, r5
  4336fe:	9303      	str	r3, [sp, #12]
  433700:	f7ff fede 	bl	4334c0 <next_unwind_byte>
  433704:	0603      	lsls	r3, r0, #24
  433706:	f104 0407 	add.w	r4, r4, #7
  43370a:	d4f2      	bmi.n	4336f2 <__gnu_unwind_execute+0x1da>
  43370c:	9b03      	ldr	r3, [sp, #12]
  43370e:	f8cd 9000 	str.w	r9, [sp]
  433712:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  433716:	40a0      	lsls	r0, r4
  433718:	f503 7301 	add.w	r3, r3, #516	; 0x204
  43371c:	2100      	movs	r1, #0
  43371e:	181c      	adds	r4, r3, r0
  433720:	220d      	movs	r2, #13
  433722:	460b      	mov	r3, r1
  433724:	4630      	mov	r0, r6
  433726:	9403      	str	r4, [sp, #12]
  433728:	f7ff fad0 	bl	432ccc <_Unwind_VRS_Set>
  43372c:	e6fb      	b.n	433526 <__gnu_unwind_execute+0xe>
  43372e:	4628      	mov	r0, r5
  433730:	f7ff fec6 	bl	4334c0 <next_unwind_byte>
  433734:	f000 020f 	and.w	r2, r0, #15
  433738:	3201      	adds	r2, #1
  43373a:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
  43373e:	2101      	movs	r1, #1
  433740:	ea42 3200 	orr.w	r2, r2, r0, lsl #12
  433744:	460b      	mov	r3, r1
  433746:	4630      	mov	r0, r6
  433748:	f7ff fc90 	bl	43306c <_Unwind_VRS_Pop>
  43374c:	2800      	cmp	r0, #0
  43374e:	f47f af13 	bne.w	433578 <__gnu_unwind_execute+0x60>
  433752:	e6e8      	b.n	433526 <__gnu_unwind_execute+0xe>
  433754:	4628      	mov	r0, r5
  433756:	f7ff feb3 	bl	4334c0 <next_unwind_byte>
  43375a:	f000 020f 	and.w	r2, r0, #15
  43375e:	3201      	adds	r2, #1
  433760:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
  433764:	2103      	movs	r1, #3
  433766:	e7eb      	b.n	433740 <__gnu_unwind_execute+0x228>
  433768:	4628      	mov	r0, r5
  43376a:	f7ff fea9 	bl	4334c0 <next_unwind_byte>
  43376e:	4602      	mov	r2, r0
  433770:	2800      	cmp	r0, #0
  433772:	f43f af01 	beq.w	433578 <__gnu_unwind_execute+0x60>
  433776:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
  43377a:	f47f aefd 	bne.w	433578 <__gnu_unwind_execute+0x60>
  43377e:	4630      	mov	r0, r6
  433780:	2104      	movs	r1, #4
  433782:	f7ff fc73 	bl	43306c <_Unwind_VRS_Pop>
  433786:	2800      	cmp	r0, #0
  433788:	f47f aef6 	bne.w	433578 <__gnu_unwind_execute+0x60>
  43378c:	e6cb      	b.n	433526 <__gnu_unwind_execute+0xe>
  43378e:	f000 020f 	and.w	r2, r0, #15
  433792:	3201      	adds	r2, #1
  433794:	2103      	movs	r1, #3
  433796:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
  43379a:	460b      	mov	r3, r1
  43379c:	4630      	mov	r0, r6
  43379e:	f7ff fc65 	bl	43306c <_Unwind_VRS_Pop>
  4337a2:	2800      	cmp	r0, #0
  4337a4:	f47f aee8 	bne.w	433578 <__gnu_unwind_execute+0x60>
  4337a8:	e6bd      	b.n	433526 <__gnu_unwind_execute+0xe>
  4337aa:	ac03      	add	r4, sp, #12
  4337ac:	4641      	mov	r1, r8
  4337ae:	220e      	movs	r2, #14
  4337b0:	4643      	mov	r3, r8
  4337b2:	9400      	str	r4, [sp, #0]
  4337b4:	4630      	mov	r0, r6
  4337b6:	f7ff fa61 	bl	432c7c <_Unwind_VRS_Get>
  4337ba:	9400      	str	r4, [sp, #0]
  4337bc:	4630      	mov	r0, r6
  4337be:	4641      	mov	r1, r8
  4337c0:	220f      	movs	r2, #15
  4337c2:	4643      	mov	r3, r8
  4337c4:	f7ff fa82 	bl	432ccc <_Unwind_VRS_Set>
  4337c8:	4640      	mov	r0, r8
  4337ca:	e6d6      	b.n	43357a <__gnu_unwind_execute+0x62>
  4337cc:	4628      	mov	r0, r5
  4337ce:	f7ff fe77 	bl	4334c0 <next_unwind_byte>
  4337d2:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
  4337d6:	f000 030f 	and.w	r3, r0, #15
  4337da:	3210      	adds	r2, #16
  4337dc:	3301      	adds	r3, #1
  4337de:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
  4337e2:	e6c2      	b.n	43356a <__gnu_unwind_execute+0x52>

004337e4 <__gnu_unwind_frame>:
  4337e4:	b510      	push	{r4, lr}
  4337e6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4337e8:	b084      	sub	sp, #16
  4337ea:	685a      	ldr	r2, [r3, #4]
  4337ec:	2003      	movs	r0, #3
  4337ee:	f88d 000c 	strb.w	r0, [sp, #12]
  4337f2:	79dc      	ldrb	r4, [r3, #7]
  4337f4:	f88d 400d 	strb.w	r4, [sp, #13]
  4337f8:	0212      	lsls	r2, r2, #8
  4337fa:	3308      	adds	r3, #8
  4337fc:	4608      	mov	r0, r1
  4337fe:	a901      	add	r1, sp, #4
  433800:	9201      	str	r2, [sp, #4]
  433802:	9302      	str	r3, [sp, #8]
  433804:	f7ff fe88 	bl	433518 <__gnu_unwind_execute>
  433808:	b004      	add	sp, #16
  43380a:	bd10      	pop	{r4, pc}

0043380c <_Unwind_GetRegionStart>:
  43380c:	b508      	push	{r3, lr}
  43380e:	f7ff fe81 	bl	433514 <unwind_UCB_from_context>
  433812:	6c80      	ldr	r0, [r0, #72]	; 0x48
  433814:	bd08      	pop	{r3, pc}
  433816:	bf00      	nop

00433818 <_Unwind_GetLanguageSpecificData>:
  433818:	b508      	push	{r3, lr}
  43381a:	f7ff fe7b 	bl	433514 <unwind_UCB_from_context>
  43381e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  433820:	79d8      	ldrb	r0, [r3, #7]
  433822:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  433826:	3008      	adds	r0, #8
  433828:	bd08      	pop	{r3, pc}
  43382a:	bf00      	nop

0043382c <_Unwind_GetDataRelBase>:
  43382c:	b508      	push	{r3, lr}
  43382e:	f000 fa89 	bl	433d44 <abort>
  433832:	bf00      	nop

00433834 <_Unwind_GetTextRelBase>:
  433834:	b508      	push	{r3, lr}
  433836:	f000 fa85 	bl	433d44 <abort>
  43383a:	bf00      	nop

0043383c <__divdi3>:
  43383c:	2900      	cmp	r1, #0
  43383e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  433842:	f2c0 80a6 	blt.w	433992 <__divdi3+0x156>
  433846:	2600      	movs	r6, #0
  433848:	2b00      	cmp	r3, #0
  43384a:	f2c0 809c 	blt.w	433986 <__divdi3+0x14a>
  43384e:	4688      	mov	r8, r1
  433850:	4694      	mov	ip, r2
  433852:	469e      	mov	lr, r3
  433854:	4615      	mov	r5, r2
  433856:	4604      	mov	r4, r0
  433858:	460f      	mov	r7, r1
  43385a:	2b00      	cmp	r3, #0
  43385c:	d13d      	bne.n	4338da <__divdi3+0x9e>
  43385e:	428a      	cmp	r2, r1
  433860:	d959      	bls.n	433916 <__divdi3+0xda>
  433862:	fab2 f382 	clz	r3, r2
  433866:	b13b      	cbz	r3, 433878 <__divdi3+0x3c>
  433868:	f1c3 0220 	rsb	r2, r3, #32
  43386c:	409f      	lsls	r7, r3
  43386e:	fa20 f202 	lsr.w	r2, r0, r2
  433872:	409d      	lsls	r5, r3
  433874:	4317      	orrs	r7, r2
  433876:	409c      	lsls	r4, r3
  433878:	0c29      	lsrs	r1, r5, #16
  43387a:	0c22      	lsrs	r2, r4, #16
  43387c:	fbb7 fef1 	udiv	lr, r7, r1
  433880:	b2a8      	uxth	r0, r5
  433882:	fb01 771e 	mls	r7, r1, lr, r7
  433886:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
  43388a:	fb00 f30e 	mul.w	r3, r0, lr
  43388e:	42bb      	cmp	r3, r7
  433890:	d90a      	bls.n	4338a8 <__divdi3+0x6c>
  433892:	197f      	adds	r7, r7, r5
  433894:	f10e 32ff 	add.w	r2, lr, #4294967295
  433898:	f080 8105 	bcs.w	433aa6 <__divdi3+0x26a>
  43389c:	42bb      	cmp	r3, r7
  43389e:	f240 8102 	bls.w	433aa6 <__divdi3+0x26a>
  4338a2:	f1ae 0e02 	sub.w	lr, lr, #2
  4338a6:	442f      	add	r7, r5
  4338a8:	1aff      	subs	r7, r7, r3
  4338aa:	b2a4      	uxth	r4, r4
  4338ac:	fbb7 f3f1 	udiv	r3, r7, r1
  4338b0:	fb01 7713 	mls	r7, r1, r3, r7
  4338b4:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  4338b8:	fb00 f003 	mul.w	r0, r0, r3
  4338bc:	42b8      	cmp	r0, r7
  4338be:	d908      	bls.n	4338d2 <__divdi3+0x96>
  4338c0:	197f      	adds	r7, r7, r5
  4338c2:	f103 32ff 	add.w	r2, r3, #4294967295
  4338c6:	f080 80f0 	bcs.w	433aaa <__divdi3+0x26e>
  4338ca:	42b8      	cmp	r0, r7
  4338cc:	f240 80ed 	bls.w	433aaa <__divdi3+0x26e>
  4338d0:	3b02      	subs	r3, #2
  4338d2:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
  4338d6:	2200      	movs	r2, #0
  4338d8:	e003      	b.n	4338e2 <__divdi3+0xa6>
  4338da:	428b      	cmp	r3, r1
  4338dc:	d90f      	bls.n	4338fe <__divdi3+0xc2>
  4338de:	2200      	movs	r2, #0
  4338e0:	4613      	mov	r3, r2
  4338e2:	1c34      	adds	r4, r6, #0
  4338e4:	bf18      	it	ne
  4338e6:	2401      	movne	r4, #1
  4338e8:	4260      	negs	r0, r4
  4338ea:	f04f 0500 	mov.w	r5, #0
  4338ee:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
  4338f2:	4058      	eors	r0, r3
  4338f4:	4051      	eors	r1, r2
  4338f6:	1900      	adds	r0, r0, r4
  4338f8:	4169      	adcs	r1, r5
  4338fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4338fe:	fab3 f283 	clz	r2, r3
  433902:	2a00      	cmp	r2, #0
  433904:	f040 8086 	bne.w	433a14 <__divdi3+0x1d8>
  433908:	428b      	cmp	r3, r1
  43390a:	d302      	bcc.n	433912 <__divdi3+0xd6>
  43390c:	4584      	cmp	ip, r0
  43390e:	f200 80db 	bhi.w	433ac8 <__divdi3+0x28c>
  433912:	2301      	movs	r3, #1
  433914:	e7e5      	b.n	4338e2 <__divdi3+0xa6>
  433916:	b912      	cbnz	r2, 43391e <__divdi3+0xe2>
  433918:	2301      	movs	r3, #1
  43391a:	fbb3 f5f2 	udiv	r5, r3, r2
  43391e:	fab5 f085 	clz	r0, r5
  433922:	2800      	cmp	r0, #0
  433924:	d13b      	bne.n	43399e <__divdi3+0x162>
  433926:	1b78      	subs	r0, r7, r5
  433928:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  43392c:	fa1f fc85 	uxth.w	ip, r5
  433930:	2201      	movs	r2, #1
  433932:	fbb0 f8fe 	udiv	r8, r0, lr
  433936:	0c21      	lsrs	r1, r4, #16
  433938:	fb0e 0718 	mls	r7, lr, r8, r0
  43393c:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
  433940:	fb0c f308 	mul.w	r3, ip, r8
  433944:	42bb      	cmp	r3, r7
  433946:	d907      	bls.n	433958 <__divdi3+0x11c>
  433948:	197f      	adds	r7, r7, r5
  43394a:	f108 31ff 	add.w	r1, r8, #4294967295
  43394e:	d202      	bcs.n	433956 <__divdi3+0x11a>
  433950:	42bb      	cmp	r3, r7
  433952:	f200 80bd 	bhi.w	433ad0 <__divdi3+0x294>
  433956:	4688      	mov	r8, r1
  433958:	1aff      	subs	r7, r7, r3
  43395a:	b2a4      	uxth	r4, r4
  43395c:	fbb7 f3fe 	udiv	r3, r7, lr
  433960:	fb0e 7713 	mls	r7, lr, r3, r7
  433964:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  433968:	fb0c fc03 	mul.w	ip, ip, r3
  43396c:	45bc      	cmp	ip, r7
  43396e:	d907      	bls.n	433980 <__divdi3+0x144>
  433970:	197f      	adds	r7, r7, r5
  433972:	f103 31ff 	add.w	r1, r3, #4294967295
  433976:	d202      	bcs.n	43397e <__divdi3+0x142>
  433978:	45bc      	cmp	ip, r7
  43397a:	f200 80a7 	bhi.w	433acc <__divdi3+0x290>
  43397e:	460b      	mov	r3, r1
  433980:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  433984:	e7ad      	b.n	4338e2 <__divdi3+0xa6>
  433986:	4252      	negs	r2, r2
  433988:	ea6f 0606 	mvn.w	r6, r6
  43398c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  433990:	e75d      	b.n	43384e <__divdi3+0x12>
  433992:	4240      	negs	r0, r0
  433994:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  433998:	f04f 36ff 	mov.w	r6, #4294967295
  43399c:	e754      	b.n	433848 <__divdi3+0xc>
  43399e:	f1c0 0220 	rsb	r2, r0, #32
  4339a2:	fa24 f102 	lsr.w	r1, r4, r2
  4339a6:	fa07 f300 	lsl.w	r3, r7, r0
  4339aa:	4085      	lsls	r5, r0
  4339ac:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  4339b0:	40d7      	lsrs	r7, r2
  4339b2:	4319      	orrs	r1, r3
  4339b4:	fbb7 f2fe 	udiv	r2, r7, lr
  4339b8:	0c0b      	lsrs	r3, r1, #16
  4339ba:	fb0e 7712 	mls	r7, lr, r2, r7
  4339be:	fa1f fc85 	uxth.w	ip, r5
  4339c2:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
  4339c6:	fb0c f702 	mul.w	r7, ip, r2
  4339ca:	429f      	cmp	r7, r3
  4339cc:	fa04 f400 	lsl.w	r4, r4, r0
  4339d0:	d907      	bls.n	4339e2 <__divdi3+0x1a6>
  4339d2:	195b      	adds	r3, r3, r5
  4339d4:	f102 30ff 	add.w	r0, r2, #4294967295
  4339d8:	d274      	bcs.n	433ac4 <__divdi3+0x288>
  4339da:	429f      	cmp	r7, r3
  4339dc:	d972      	bls.n	433ac4 <__divdi3+0x288>
  4339de:	3a02      	subs	r2, #2
  4339e0:	442b      	add	r3, r5
  4339e2:	1bdf      	subs	r7, r3, r7
  4339e4:	b289      	uxth	r1, r1
  4339e6:	fbb7 f8fe 	udiv	r8, r7, lr
  4339ea:	fb0e 7318 	mls	r3, lr, r8, r7
  4339ee:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
  4339f2:	fb0c f708 	mul.w	r7, ip, r8
  4339f6:	429f      	cmp	r7, r3
  4339f8:	d908      	bls.n	433a0c <__divdi3+0x1d0>
  4339fa:	195b      	adds	r3, r3, r5
  4339fc:	f108 31ff 	add.w	r1, r8, #4294967295
  433a00:	d25c      	bcs.n	433abc <__divdi3+0x280>
  433a02:	429f      	cmp	r7, r3
  433a04:	d95a      	bls.n	433abc <__divdi3+0x280>
  433a06:	f1a8 0802 	sub.w	r8, r8, #2
  433a0a:	442b      	add	r3, r5
  433a0c:	1bd8      	subs	r0, r3, r7
  433a0e:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
  433a12:	e78e      	b.n	433932 <__divdi3+0xf6>
  433a14:	f1c2 0320 	rsb	r3, r2, #32
  433a18:	fa2c f103 	lsr.w	r1, ip, r3
  433a1c:	fa0e fe02 	lsl.w	lr, lr, r2
  433a20:	fa20 f703 	lsr.w	r7, r0, r3
  433a24:	ea41 0e0e 	orr.w	lr, r1, lr
  433a28:	fa08 f002 	lsl.w	r0, r8, r2
  433a2c:	fa28 f103 	lsr.w	r1, r8, r3
  433a30:	ea4f 451e 	mov.w	r5, lr, lsr #16
  433a34:	4338      	orrs	r0, r7
  433a36:	fbb1 f8f5 	udiv	r8, r1, r5
  433a3a:	0c03      	lsrs	r3, r0, #16
  433a3c:	fb05 1118 	mls	r1, r5, r8, r1
  433a40:	fa1f f78e 	uxth.w	r7, lr
  433a44:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  433a48:	fb07 f308 	mul.w	r3, r7, r8
  433a4c:	428b      	cmp	r3, r1
  433a4e:	fa0c fc02 	lsl.w	ip, ip, r2
  433a52:	d909      	bls.n	433a68 <__divdi3+0x22c>
  433a54:	eb11 010e 	adds.w	r1, r1, lr
  433a58:	f108 39ff 	add.w	r9, r8, #4294967295
  433a5c:	d230      	bcs.n	433ac0 <__divdi3+0x284>
  433a5e:	428b      	cmp	r3, r1
  433a60:	d92e      	bls.n	433ac0 <__divdi3+0x284>
  433a62:	f1a8 0802 	sub.w	r8, r8, #2
  433a66:	4471      	add	r1, lr
  433a68:	1ac9      	subs	r1, r1, r3
  433a6a:	b280      	uxth	r0, r0
  433a6c:	fbb1 f3f5 	udiv	r3, r1, r5
  433a70:	fb05 1113 	mls	r1, r5, r3, r1
  433a74:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  433a78:	fb07 f703 	mul.w	r7, r7, r3
  433a7c:	428f      	cmp	r7, r1
  433a7e:	d908      	bls.n	433a92 <__divdi3+0x256>
  433a80:	eb11 010e 	adds.w	r1, r1, lr
  433a84:	f103 30ff 	add.w	r0, r3, #4294967295
  433a88:	d216      	bcs.n	433ab8 <__divdi3+0x27c>
  433a8a:	428f      	cmp	r7, r1
  433a8c:	d914      	bls.n	433ab8 <__divdi3+0x27c>
  433a8e:	3b02      	subs	r3, #2
  433a90:	4471      	add	r1, lr
  433a92:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  433a96:	1bc9      	subs	r1, r1, r7
  433a98:	fba3 890c 	umull	r8, r9, r3, ip
  433a9c:	4549      	cmp	r1, r9
  433a9e:	d309      	bcc.n	433ab4 <__divdi3+0x278>
  433aa0:	d005      	beq.n	433aae <__divdi3+0x272>
  433aa2:	2200      	movs	r2, #0
  433aa4:	e71d      	b.n	4338e2 <__divdi3+0xa6>
  433aa6:	4696      	mov	lr, r2
  433aa8:	e6fe      	b.n	4338a8 <__divdi3+0x6c>
  433aaa:	4613      	mov	r3, r2
  433aac:	e711      	b.n	4338d2 <__divdi3+0x96>
  433aae:	4094      	lsls	r4, r2
  433ab0:	4544      	cmp	r4, r8
  433ab2:	d2f6      	bcs.n	433aa2 <__divdi3+0x266>
  433ab4:	3b01      	subs	r3, #1
  433ab6:	e7f4      	b.n	433aa2 <__divdi3+0x266>
  433ab8:	4603      	mov	r3, r0
  433aba:	e7ea      	b.n	433a92 <__divdi3+0x256>
  433abc:	4688      	mov	r8, r1
  433abe:	e7a5      	b.n	433a0c <__divdi3+0x1d0>
  433ac0:	46c8      	mov	r8, r9
  433ac2:	e7d1      	b.n	433a68 <__divdi3+0x22c>
  433ac4:	4602      	mov	r2, r0
  433ac6:	e78c      	b.n	4339e2 <__divdi3+0x1a6>
  433ac8:	4613      	mov	r3, r2
  433aca:	e70a      	b.n	4338e2 <__divdi3+0xa6>
  433acc:	3b02      	subs	r3, #2
  433ace:	e757      	b.n	433980 <__divdi3+0x144>
  433ad0:	f1a8 0802 	sub.w	r8, r8, #2
  433ad4:	442f      	add	r7, r5
  433ad6:	e73f      	b.n	433958 <__divdi3+0x11c>

00433ad8 <__udivdi3>:
  433ad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  433adc:	2b00      	cmp	r3, #0
  433ade:	d144      	bne.n	433b6a <__udivdi3+0x92>
  433ae0:	428a      	cmp	r2, r1
  433ae2:	4615      	mov	r5, r2
  433ae4:	4604      	mov	r4, r0
  433ae6:	d94f      	bls.n	433b88 <__udivdi3+0xb0>
  433ae8:	fab2 f782 	clz	r7, r2
  433aec:	460e      	mov	r6, r1
  433aee:	b14f      	cbz	r7, 433b04 <__udivdi3+0x2c>
  433af0:	f1c7 0320 	rsb	r3, r7, #32
  433af4:	40b9      	lsls	r1, r7
  433af6:	fa20 f603 	lsr.w	r6, r0, r3
  433afa:	fa02 f507 	lsl.w	r5, r2, r7
  433afe:	430e      	orrs	r6, r1
  433b00:	fa00 f407 	lsl.w	r4, r0, r7
  433b04:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  433b08:	0c23      	lsrs	r3, r4, #16
  433b0a:	fbb6 f0fe 	udiv	r0, r6, lr
  433b0e:	b2af      	uxth	r7, r5
  433b10:	fb0e 6110 	mls	r1, lr, r0, r6
  433b14:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  433b18:	fb07 f100 	mul.w	r1, r7, r0
  433b1c:	4299      	cmp	r1, r3
  433b1e:	d909      	bls.n	433b34 <__udivdi3+0x5c>
  433b20:	195b      	adds	r3, r3, r5
  433b22:	f100 32ff 	add.w	r2, r0, #4294967295
  433b26:	f080 80ec 	bcs.w	433d02 <__udivdi3+0x22a>
  433b2a:	4299      	cmp	r1, r3
  433b2c:	f240 80e9 	bls.w	433d02 <__udivdi3+0x22a>
  433b30:	3802      	subs	r0, #2
  433b32:	442b      	add	r3, r5
  433b34:	1a5a      	subs	r2, r3, r1
  433b36:	b2a4      	uxth	r4, r4
  433b38:	fbb2 f3fe 	udiv	r3, r2, lr
  433b3c:	fb0e 2213 	mls	r2, lr, r3, r2
  433b40:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  433b44:	fb07 f703 	mul.w	r7, r7, r3
  433b48:	4297      	cmp	r7, r2
  433b4a:	d908      	bls.n	433b5e <__udivdi3+0x86>
  433b4c:	1952      	adds	r2, r2, r5
  433b4e:	f103 31ff 	add.w	r1, r3, #4294967295
  433b52:	f080 80d8 	bcs.w	433d06 <__udivdi3+0x22e>
  433b56:	4297      	cmp	r7, r2
  433b58:	f240 80d5 	bls.w	433d06 <__udivdi3+0x22e>
  433b5c:	3b02      	subs	r3, #2
  433b5e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  433b62:	2600      	movs	r6, #0
  433b64:	4631      	mov	r1, r6
  433b66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433b6a:	428b      	cmp	r3, r1
  433b6c:	d847      	bhi.n	433bfe <__udivdi3+0x126>
  433b6e:	fab3 f683 	clz	r6, r3
  433b72:	2e00      	cmp	r6, #0
  433b74:	d148      	bne.n	433c08 <__udivdi3+0x130>
  433b76:	428b      	cmp	r3, r1
  433b78:	d302      	bcc.n	433b80 <__udivdi3+0xa8>
  433b7a:	4282      	cmp	r2, r0
  433b7c:	f200 80cd 	bhi.w	433d1a <__udivdi3+0x242>
  433b80:	2001      	movs	r0, #1
  433b82:	4631      	mov	r1, r6
  433b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433b88:	b912      	cbnz	r2, 433b90 <__udivdi3+0xb8>
  433b8a:	2501      	movs	r5, #1
  433b8c:	fbb5 f5f2 	udiv	r5, r5, r2
  433b90:	fab5 f885 	clz	r8, r5
  433b94:	f1b8 0f00 	cmp.w	r8, #0
  433b98:	d177      	bne.n	433c8a <__udivdi3+0x1b2>
  433b9a:	1b4a      	subs	r2, r1, r5
  433b9c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  433ba0:	b2af      	uxth	r7, r5
  433ba2:	2601      	movs	r6, #1
  433ba4:	fbb2 f0fe 	udiv	r0, r2, lr
  433ba8:	0c23      	lsrs	r3, r4, #16
  433baa:	fb0e 2110 	mls	r1, lr, r0, r2
  433bae:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  433bb2:	fb07 f300 	mul.w	r3, r7, r0
  433bb6:	428b      	cmp	r3, r1
  433bb8:	d907      	bls.n	433bca <__udivdi3+0xf2>
  433bba:	1949      	adds	r1, r1, r5
  433bbc:	f100 32ff 	add.w	r2, r0, #4294967295
  433bc0:	d202      	bcs.n	433bc8 <__udivdi3+0xf0>
  433bc2:	428b      	cmp	r3, r1
  433bc4:	f200 80ba 	bhi.w	433d3c <__udivdi3+0x264>
  433bc8:	4610      	mov	r0, r2
  433bca:	1ac9      	subs	r1, r1, r3
  433bcc:	b2a4      	uxth	r4, r4
  433bce:	fbb1 f3fe 	udiv	r3, r1, lr
  433bd2:	fb0e 1113 	mls	r1, lr, r3, r1
  433bd6:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
  433bda:	fb07 f703 	mul.w	r7, r7, r3
  433bde:	42a7      	cmp	r7, r4
  433be0:	d908      	bls.n	433bf4 <__udivdi3+0x11c>
  433be2:	1964      	adds	r4, r4, r5
  433be4:	f103 32ff 	add.w	r2, r3, #4294967295
  433be8:	f080 808f 	bcs.w	433d0a <__udivdi3+0x232>
  433bec:	42a7      	cmp	r7, r4
  433bee:	f240 808c 	bls.w	433d0a <__udivdi3+0x232>
  433bf2:	3b02      	subs	r3, #2
  433bf4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  433bf8:	4631      	mov	r1, r6
  433bfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433bfe:	2600      	movs	r6, #0
  433c00:	4630      	mov	r0, r6
  433c02:	4631      	mov	r1, r6
  433c04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433c08:	f1c6 0420 	rsb	r4, r6, #32
  433c0c:	fa22 f504 	lsr.w	r5, r2, r4
  433c10:	40b3      	lsls	r3, r6
  433c12:	432b      	orrs	r3, r5
  433c14:	fa20 fc04 	lsr.w	ip, r0, r4
  433c18:	fa01 f706 	lsl.w	r7, r1, r6
  433c1c:	fa21 f504 	lsr.w	r5, r1, r4
  433c20:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  433c24:	ea4c 0707 	orr.w	r7, ip, r7
  433c28:	fbb5 f8fe 	udiv	r8, r5, lr
  433c2c:	0c39      	lsrs	r1, r7, #16
  433c2e:	fb0e 5518 	mls	r5, lr, r8, r5
  433c32:	fa1f fc83 	uxth.w	ip, r3
  433c36:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
  433c3a:	fb0c f108 	mul.w	r1, ip, r8
  433c3e:	42a9      	cmp	r1, r5
  433c40:	fa02 f206 	lsl.w	r2, r2, r6
  433c44:	d904      	bls.n	433c50 <__udivdi3+0x178>
  433c46:	18ed      	adds	r5, r5, r3
  433c48:	f108 34ff 	add.w	r4, r8, #4294967295
  433c4c:	d367      	bcc.n	433d1e <__udivdi3+0x246>
  433c4e:	46a0      	mov	r8, r4
  433c50:	1a6d      	subs	r5, r5, r1
  433c52:	b2bf      	uxth	r7, r7
  433c54:	fbb5 f4fe 	udiv	r4, r5, lr
  433c58:	fb0e 5514 	mls	r5, lr, r4, r5
  433c5c:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
  433c60:	fb0c fc04 	mul.w	ip, ip, r4
  433c64:	458c      	cmp	ip, r1
  433c66:	d904      	bls.n	433c72 <__udivdi3+0x19a>
  433c68:	18c9      	adds	r1, r1, r3
  433c6a:	f104 35ff 	add.w	r5, r4, #4294967295
  433c6e:	d35c      	bcc.n	433d2a <__udivdi3+0x252>
  433c70:	462c      	mov	r4, r5
  433c72:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
  433c76:	ebcc 0101 	rsb	r1, ip, r1
  433c7a:	fba4 2302 	umull	r2, r3, r4, r2
  433c7e:	4299      	cmp	r1, r3
  433c80:	d348      	bcc.n	433d14 <__udivdi3+0x23c>
  433c82:	d044      	beq.n	433d0e <__udivdi3+0x236>
  433c84:	4620      	mov	r0, r4
  433c86:	2600      	movs	r6, #0
  433c88:	e76c      	b.n	433b64 <__udivdi3+0x8c>
  433c8a:	f1c8 0420 	rsb	r4, r8, #32
  433c8e:	fa01 f308 	lsl.w	r3, r1, r8
  433c92:	fa05 f508 	lsl.w	r5, r5, r8
  433c96:	fa20 f704 	lsr.w	r7, r0, r4
  433c9a:	40e1      	lsrs	r1, r4
  433c9c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  433ca0:	431f      	orrs	r7, r3
  433ca2:	fbb1 f6fe 	udiv	r6, r1, lr
  433ca6:	0c3a      	lsrs	r2, r7, #16
  433ca8:	fb0e 1116 	mls	r1, lr, r6, r1
  433cac:	fa1f fc85 	uxth.w	ip, r5
  433cb0:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
  433cb4:	fb0c f206 	mul.w	r2, ip, r6
  433cb8:	429a      	cmp	r2, r3
  433cba:	fa00 f408 	lsl.w	r4, r0, r8
  433cbe:	d907      	bls.n	433cd0 <__udivdi3+0x1f8>
  433cc0:	195b      	adds	r3, r3, r5
  433cc2:	f106 31ff 	add.w	r1, r6, #4294967295
  433cc6:	d237      	bcs.n	433d38 <__udivdi3+0x260>
  433cc8:	429a      	cmp	r2, r3
  433cca:	d935      	bls.n	433d38 <__udivdi3+0x260>
  433ccc:	3e02      	subs	r6, #2
  433cce:	442b      	add	r3, r5
  433cd0:	1a9b      	subs	r3, r3, r2
  433cd2:	b2bf      	uxth	r7, r7
  433cd4:	fbb3 f0fe 	udiv	r0, r3, lr
  433cd8:	fb0e 3310 	mls	r3, lr, r0, r3
  433cdc:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
  433ce0:	fb0c f100 	mul.w	r1, ip, r0
  433ce4:	4299      	cmp	r1, r3
  433ce6:	d907      	bls.n	433cf8 <__udivdi3+0x220>
  433ce8:	195b      	adds	r3, r3, r5
  433cea:	f100 32ff 	add.w	r2, r0, #4294967295
  433cee:	d221      	bcs.n	433d34 <__udivdi3+0x25c>
  433cf0:	4299      	cmp	r1, r3
  433cf2:	d91f      	bls.n	433d34 <__udivdi3+0x25c>
  433cf4:	3802      	subs	r0, #2
  433cf6:	442b      	add	r3, r5
  433cf8:	1a5a      	subs	r2, r3, r1
  433cfa:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
  433cfe:	4667      	mov	r7, ip
  433d00:	e750      	b.n	433ba4 <__udivdi3+0xcc>
  433d02:	4610      	mov	r0, r2
  433d04:	e716      	b.n	433b34 <__udivdi3+0x5c>
  433d06:	460b      	mov	r3, r1
  433d08:	e729      	b.n	433b5e <__udivdi3+0x86>
  433d0a:	4613      	mov	r3, r2
  433d0c:	e772      	b.n	433bf4 <__udivdi3+0x11c>
  433d0e:	40b0      	lsls	r0, r6
  433d10:	4290      	cmp	r0, r2
  433d12:	d2b7      	bcs.n	433c84 <__udivdi3+0x1ac>
  433d14:	1e60      	subs	r0, r4, #1
  433d16:	2600      	movs	r6, #0
  433d18:	e724      	b.n	433b64 <__udivdi3+0x8c>
  433d1a:	4630      	mov	r0, r6
  433d1c:	e722      	b.n	433b64 <__udivdi3+0x8c>
  433d1e:	42a9      	cmp	r1, r5
  433d20:	d995      	bls.n	433c4e <__udivdi3+0x176>
  433d22:	f1a8 0802 	sub.w	r8, r8, #2
  433d26:	441d      	add	r5, r3
  433d28:	e792      	b.n	433c50 <__udivdi3+0x178>
  433d2a:	458c      	cmp	ip, r1
  433d2c:	d9a0      	bls.n	433c70 <__udivdi3+0x198>
  433d2e:	3c02      	subs	r4, #2
  433d30:	4419      	add	r1, r3
  433d32:	e79e      	b.n	433c72 <__udivdi3+0x19a>
  433d34:	4610      	mov	r0, r2
  433d36:	e7df      	b.n	433cf8 <__udivdi3+0x220>
  433d38:	460e      	mov	r6, r1
  433d3a:	e7c9      	b.n	433cd0 <__udivdi3+0x1f8>
  433d3c:	3802      	subs	r0, #2
  433d3e:	4429      	add	r1, r5
  433d40:	e743      	b.n	433bca <__udivdi3+0xf2>
  433d42:	bf00      	nop

00433d44 <abort>:
  433d44:	b508      	push	{r3, lr}
  433d46:	2006      	movs	r0, #6
  433d48:	f001 fc52 	bl	4355f0 <raise>
  433d4c:	2001      	movs	r0, #1
  433d4e:	f7cf f9dd 	bl	40310c <_exit>
  433d52:	bf00      	nop

00433d54 <__assert_func>:
  433d54:	b500      	push	{lr}
  433d56:	4c0a      	ldr	r4, [pc, #40]	; (433d80 <__assert_func+0x2c>)
  433d58:	6824      	ldr	r4, [r4, #0]
  433d5a:	4605      	mov	r5, r0
  433d5c:	b085      	sub	sp, #20
  433d5e:	68e0      	ldr	r0, [r4, #12]
  433d60:	b152      	cbz	r2, 433d78 <__assert_func+0x24>
  433d62:	4c08      	ldr	r4, [pc, #32]	; (433d84 <__assert_func+0x30>)
  433d64:	9202      	str	r2, [sp, #8]
  433d66:	e88d 0012 	stmia.w	sp, {r1, r4}
  433d6a:	461a      	mov	r2, r3
  433d6c:	4906      	ldr	r1, [pc, #24]	; (433d88 <__assert_func+0x34>)
  433d6e:	462b      	mov	r3, r5
  433d70:	f000 f9d0 	bl	434114 <fiprintf>
  433d74:	f7ff ffe6 	bl	433d44 <abort>
  433d78:	4c04      	ldr	r4, [pc, #16]	; (433d8c <__assert_func+0x38>)
  433d7a:	4622      	mov	r2, r4
  433d7c:	e7f2      	b.n	433d64 <__assert_func+0x10>
  433d7e:	bf00      	nop
  433d80:	200012d0 	.word	0x200012d0
  433d84:	0044040c 	.word	0x0044040c
  433d88:	0044041c 	.word	0x0044041c
  433d8c:	00440418 	.word	0x00440418

00433d90 <calloc>:
  433d90:	4b02      	ldr	r3, [pc, #8]	; (433d9c <calloc+0xc>)
  433d92:	460a      	mov	r2, r1
  433d94:	4601      	mov	r1, r0
  433d96:	6818      	ldr	r0, [r3, #0]
  433d98:	f000 b802 	b.w	433da0 <_calloc_r>
  433d9c:	200012d0 	.word	0x200012d0

00433da0 <_calloc_r>:
  433da0:	b510      	push	{r4, lr}
  433da2:	fb02 f101 	mul.w	r1, r2, r1
  433da6:	f000 fd89 	bl	4348bc <_malloc_r>
  433daa:	4604      	mov	r4, r0
  433dac:	b168      	cbz	r0, 433dca <_calloc_r+0x2a>
  433dae:	f850 2c04 	ldr.w	r2, [r0, #-4]
  433db2:	f022 0203 	bic.w	r2, r2, #3
  433db6:	3a04      	subs	r2, #4
  433db8:	2a24      	cmp	r2, #36	; 0x24
  433dba:	d818      	bhi.n	433dee <_calloc_r+0x4e>
  433dbc:	2a13      	cmp	r2, #19
  433dbe:	d806      	bhi.n	433dce <_calloc_r+0x2e>
  433dc0:	4603      	mov	r3, r0
  433dc2:	2200      	movs	r2, #0
  433dc4:	601a      	str	r2, [r3, #0]
  433dc6:	605a      	str	r2, [r3, #4]
  433dc8:	609a      	str	r2, [r3, #8]
  433dca:	4620      	mov	r0, r4
  433dcc:	bd10      	pop	{r4, pc}
  433dce:	2300      	movs	r3, #0
  433dd0:	2a1b      	cmp	r2, #27
  433dd2:	6003      	str	r3, [r0, #0]
  433dd4:	6043      	str	r3, [r0, #4]
  433dd6:	d90f      	bls.n	433df8 <_calloc_r+0x58>
  433dd8:	2a24      	cmp	r2, #36	; 0x24
  433dda:	6083      	str	r3, [r0, #8]
  433ddc:	60c3      	str	r3, [r0, #12]
  433dde:	bf05      	ittet	eq
  433de0:	6103      	streq	r3, [r0, #16]
  433de2:	6143      	streq	r3, [r0, #20]
  433de4:	f100 0310 	addne.w	r3, r0, #16
  433de8:	f100 0318 	addeq.w	r3, r0, #24
  433dec:	e7e9      	b.n	433dc2 <_calloc_r+0x22>
  433dee:	2100      	movs	r1, #0
  433df0:	f001 f970 	bl	4350d4 <memset>
  433df4:	4620      	mov	r0, r4
  433df6:	bd10      	pop	{r4, pc}
  433df8:	f100 0308 	add.w	r3, r0, #8
  433dfc:	e7e1      	b.n	433dc2 <_calloc_r+0x22>
  433dfe:	bf00      	nop

00433e00 <_fclose_r>:
  433e00:	2900      	cmp	r1, #0
  433e02:	d03d      	beq.n	433e80 <_fclose_r+0x80>
  433e04:	b570      	push	{r4, r5, r6, lr}
  433e06:	4605      	mov	r5, r0
  433e08:	460c      	mov	r4, r1
  433e0a:	b108      	cbz	r0, 433e10 <_fclose_r+0x10>
  433e0c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  433e0e:	b37b      	cbz	r3, 433e70 <_fclose_r+0x70>
  433e10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  433e14:	b90b      	cbnz	r3, 433e1a <_fclose_r+0x1a>
  433e16:	2000      	movs	r0, #0
  433e18:	bd70      	pop	{r4, r5, r6, pc}
  433e1a:	4628      	mov	r0, r5
  433e1c:	4621      	mov	r1, r4
  433e1e:	f000 f831 	bl	433e84 <__sflush_r>
  433e22:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  433e24:	4606      	mov	r6, r0
  433e26:	b133      	cbz	r3, 433e36 <_fclose_r+0x36>
  433e28:	4628      	mov	r0, r5
  433e2a:	69e1      	ldr	r1, [r4, #28]
  433e2c:	4798      	blx	r3
  433e2e:	2800      	cmp	r0, #0
  433e30:	bfb8      	it	lt
  433e32:	f04f 36ff 	movlt.w	r6, #4294967295
  433e36:	89a3      	ldrh	r3, [r4, #12]
  433e38:	061b      	lsls	r3, r3, #24
  433e3a:	d41c      	bmi.n	433e76 <_fclose_r+0x76>
  433e3c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  433e3e:	b141      	cbz	r1, 433e52 <_fclose_r+0x52>
  433e40:	f104 0340 	add.w	r3, r4, #64	; 0x40
  433e44:	4299      	cmp	r1, r3
  433e46:	d002      	beq.n	433e4e <_fclose_r+0x4e>
  433e48:	4628      	mov	r0, r5
  433e4a:	f000 f9d9 	bl	434200 <_free_r>
  433e4e:	2300      	movs	r3, #0
  433e50:	6323      	str	r3, [r4, #48]	; 0x30
  433e52:	6c61      	ldr	r1, [r4, #68]	; 0x44
  433e54:	b121      	cbz	r1, 433e60 <_fclose_r+0x60>
  433e56:	4628      	mov	r0, r5
  433e58:	f000 f9d2 	bl	434200 <_free_r>
  433e5c:	2300      	movs	r3, #0
  433e5e:	6463      	str	r3, [r4, #68]	; 0x44
  433e60:	f000 f954 	bl	43410c <__sfp_lock_acquire>
  433e64:	2300      	movs	r3, #0
  433e66:	81a3      	strh	r3, [r4, #12]
  433e68:	f000 f952 	bl	434110 <__sfp_lock_release>
  433e6c:	4630      	mov	r0, r6
  433e6e:	bd70      	pop	{r4, r5, r6, pc}
  433e70:	f000 f946 	bl	434100 <__sinit>
  433e74:	e7cc      	b.n	433e10 <_fclose_r+0x10>
  433e76:	4628      	mov	r0, r5
  433e78:	6921      	ldr	r1, [r4, #16]
  433e7a:	f000 f9c1 	bl	434200 <_free_r>
  433e7e:	e7dd      	b.n	433e3c <_fclose_r+0x3c>
  433e80:	2000      	movs	r0, #0
  433e82:	4770      	bx	lr

00433e84 <__sflush_r>:
  433e84:	898b      	ldrh	r3, [r1, #12]
  433e86:	b29a      	uxth	r2, r3
  433e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  433e8c:	460d      	mov	r5, r1
  433e8e:	0711      	lsls	r1, r2, #28
  433e90:	4680      	mov	r8, r0
  433e92:	d43c      	bmi.n	433f0e <__sflush_r+0x8a>
  433e94:	686a      	ldr	r2, [r5, #4]
  433e96:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  433e9a:	2a00      	cmp	r2, #0
  433e9c:	81ab      	strh	r3, [r5, #12]
  433e9e:	dd65      	ble.n	433f6c <__sflush_r+0xe8>
  433ea0:	6aae      	ldr	r6, [r5, #40]	; 0x28
  433ea2:	2e00      	cmp	r6, #0
  433ea4:	d04b      	beq.n	433f3e <__sflush_r+0xba>
  433ea6:	b29b      	uxth	r3, r3
  433ea8:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  433eac:	2100      	movs	r1, #0
  433eae:	b292      	uxth	r2, r2
  433eb0:	f8d8 4000 	ldr.w	r4, [r8]
  433eb4:	f8c8 1000 	str.w	r1, [r8]
  433eb8:	2a00      	cmp	r2, #0
  433eba:	d05b      	beq.n	433f74 <__sflush_r+0xf0>
  433ebc:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  433ebe:	075f      	lsls	r7, r3, #29
  433ec0:	d505      	bpl.n	433ece <__sflush_r+0x4a>
  433ec2:	6869      	ldr	r1, [r5, #4]
  433ec4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  433ec6:	1a52      	subs	r2, r2, r1
  433ec8:	b10b      	cbz	r3, 433ece <__sflush_r+0x4a>
  433eca:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  433ecc:	1ad2      	subs	r2, r2, r3
  433ece:	4640      	mov	r0, r8
  433ed0:	69e9      	ldr	r1, [r5, #28]
  433ed2:	2300      	movs	r3, #0
  433ed4:	47b0      	blx	r6
  433ed6:	1c46      	adds	r6, r0, #1
  433ed8:	d056      	beq.n	433f88 <__sflush_r+0x104>
  433eda:	89ab      	ldrh	r3, [r5, #12]
  433edc:	692a      	ldr	r2, [r5, #16]
  433ede:	602a      	str	r2, [r5, #0]
  433ee0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  433ee4:	b29b      	uxth	r3, r3
  433ee6:	2200      	movs	r2, #0
  433ee8:	606a      	str	r2, [r5, #4]
  433eea:	04da      	lsls	r2, r3, #19
  433eec:	81ab      	strh	r3, [r5, #12]
  433eee:	d43b      	bmi.n	433f68 <__sflush_r+0xe4>
  433ef0:	6b29      	ldr	r1, [r5, #48]	; 0x30
  433ef2:	f8c8 4000 	str.w	r4, [r8]
  433ef6:	b311      	cbz	r1, 433f3e <__sflush_r+0xba>
  433ef8:	f105 0340 	add.w	r3, r5, #64	; 0x40
  433efc:	4299      	cmp	r1, r3
  433efe:	d002      	beq.n	433f06 <__sflush_r+0x82>
  433f00:	4640      	mov	r0, r8
  433f02:	f000 f97d 	bl	434200 <_free_r>
  433f06:	2000      	movs	r0, #0
  433f08:	6328      	str	r0, [r5, #48]	; 0x30
  433f0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433f0e:	692e      	ldr	r6, [r5, #16]
  433f10:	b1ae      	cbz	r6, 433f3e <__sflush_r+0xba>
  433f12:	682c      	ldr	r4, [r5, #0]
  433f14:	602e      	str	r6, [r5, #0]
  433f16:	0791      	lsls	r1, r2, #30
  433f18:	bf0c      	ite	eq
  433f1a:	696b      	ldreq	r3, [r5, #20]
  433f1c:	2300      	movne	r3, #0
  433f1e:	1ba4      	subs	r4, r4, r6
  433f20:	60ab      	str	r3, [r5, #8]
  433f22:	e00a      	b.n	433f3a <__sflush_r+0xb6>
  433f24:	4632      	mov	r2, r6
  433f26:	4623      	mov	r3, r4
  433f28:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  433f2a:	69e9      	ldr	r1, [r5, #28]
  433f2c:	4640      	mov	r0, r8
  433f2e:	47b8      	blx	r7
  433f30:	2800      	cmp	r0, #0
  433f32:	eba4 0400 	sub.w	r4, r4, r0
  433f36:	4406      	add	r6, r0
  433f38:	dd04      	ble.n	433f44 <__sflush_r+0xc0>
  433f3a:	2c00      	cmp	r4, #0
  433f3c:	dcf2      	bgt.n	433f24 <__sflush_r+0xa0>
  433f3e:	2000      	movs	r0, #0
  433f40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433f44:	89ab      	ldrh	r3, [r5, #12]
  433f46:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  433f4a:	81ab      	strh	r3, [r5, #12]
  433f4c:	f04f 30ff 	mov.w	r0, #4294967295
  433f50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433f54:	89ab      	ldrh	r3, [r5, #12]
  433f56:	692a      	ldr	r2, [r5, #16]
  433f58:	6069      	str	r1, [r5, #4]
  433f5a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  433f5e:	b29b      	uxth	r3, r3
  433f60:	81ab      	strh	r3, [r5, #12]
  433f62:	04db      	lsls	r3, r3, #19
  433f64:	602a      	str	r2, [r5, #0]
  433f66:	d5c3      	bpl.n	433ef0 <__sflush_r+0x6c>
  433f68:	6528      	str	r0, [r5, #80]	; 0x50
  433f6a:	e7c1      	b.n	433ef0 <__sflush_r+0x6c>
  433f6c:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  433f6e:	2a00      	cmp	r2, #0
  433f70:	dc96      	bgt.n	433ea0 <__sflush_r+0x1c>
  433f72:	e7e4      	b.n	433f3e <__sflush_r+0xba>
  433f74:	2301      	movs	r3, #1
  433f76:	4640      	mov	r0, r8
  433f78:	69e9      	ldr	r1, [r5, #28]
  433f7a:	47b0      	blx	r6
  433f7c:	1c43      	adds	r3, r0, #1
  433f7e:	4602      	mov	r2, r0
  433f80:	d019      	beq.n	433fb6 <__sflush_r+0x132>
  433f82:	89ab      	ldrh	r3, [r5, #12]
  433f84:	6aae      	ldr	r6, [r5, #40]	; 0x28
  433f86:	e79a      	b.n	433ebe <__sflush_r+0x3a>
  433f88:	f8d8 1000 	ldr.w	r1, [r8]
  433f8c:	2900      	cmp	r1, #0
  433f8e:	d0e1      	beq.n	433f54 <__sflush_r+0xd0>
  433f90:	291d      	cmp	r1, #29
  433f92:	d007      	beq.n	433fa4 <__sflush_r+0x120>
  433f94:	2916      	cmp	r1, #22
  433f96:	d005      	beq.n	433fa4 <__sflush_r+0x120>
  433f98:	89ab      	ldrh	r3, [r5, #12]
  433f9a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  433f9e:	81ab      	strh	r3, [r5, #12]
  433fa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433fa4:	89ab      	ldrh	r3, [r5, #12]
  433fa6:	692a      	ldr	r2, [r5, #16]
  433fa8:	602a      	str	r2, [r5, #0]
  433faa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  433fae:	2200      	movs	r2, #0
  433fb0:	81ab      	strh	r3, [r5, #12]
  433fb2:	606a      	str	r2, [r5, #4]
  433fb4:	e79c      	b.n	433ef0 <__sflush_r+0x6c>
  433fb6:	f8d8 3000 	ldr.w	r3, [r8]
  433fba:	2b00      	cmp	r3, #0
  433fbc:	d0e1      	beq.n	433f82 <__sflush_r+0xfe>
  433fbe:	2b1d      	cmp	r3, #29
  433fc0:	d007      	beq.n	433fd2 <__sflush_r+0x14e>
  433fc2:	2b16      	cmp	r3, #22
  433fc4:	d005      	beq.n	433fd2 <__sflush_r+0x14e>
  433fc6:	89ab      	ldrh	r3, [r5, #12]
  433fc8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  433fcc:	81ab      	strh	r3, [r5, #12]
  433fce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  433fd2:	f8c8 4000 	str.w	r4, [r8]
  433fd6:	e7b2      	b.n	433f3e <__sflush_r+0xba>

00433fd8 <_fflush_r>:
  433fd8:	b510      	push	{r4, lr}
  433fda:	4604      	mov	r4, r0
  433fdc:	b082      	sub	sp, #8
  433fde:	b108      	cbz	r0, 433fe4 <_fflush_r+0xc>
  433fe0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  433fe2:	b153      	cbz	r3, 433ffa <_fflush_r+0x22>
  433fe4:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  433fe8:	b908      	cbnz	r0, 433fee <_fflush_r+0x16>
  433fea:	b002      	add	sp, #8
  433fec:	bd10      	pop	{r4, pc}
  433fee:	4620      	mov	r0, r4
  433ff0:	b002      	add	sp, #8
  433ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  433ff6:	f7ff bf45 	b.w	433e84 <__sflush_r>
  433ffa:	9101      	str	r1, [sp, #4]
  433ffc:	f000 f880 	bl	434100 <__sinit>
  434000:	9901      	ldr	r1, [sp, #4]
  434002:	e7ef      	b.n	433fe4 <_fflush_r+0xc>

00434004 <_cleanup_r>:
  434004:	4901      	ldr	r1, [pc, #4]	; (43400c <_cleanup_r+0x8>)
  434006:	f000 bb73 	b.w	4346f0 <_fwalk_reent>
  43400a:	bf00      	nop
  43400c:	00433e01 	.word	0x00433e01

00434010 <__sinit.part.1>:
  434010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  434014:	4b35      	ldr	r3, [pc, #212]	; (4340ec <__sinit.part.1+0xdc>)
  434016:	6845      	ldr	r5, [r0, #4]
  434018:	63c3      	str	r3, [r0, #60]	; 0x3c
  43401a:	2400      	movs	r4, #0
  43401c:	4607      	mov	r7, r0
  43401e:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  434022:	2304      	movs	r3, #4
  434024:	2103      	movs	r1, #3
  434026:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  43402a:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  43402e:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  434032:	b083      	sub	sp, #12
  434034:	602c      	str	r4, [r5, #0]
  434036:	606c      	str	r4, [r5, #4]
  434038:	60ac      	str	r4, [r5, #8]
  43403a:	666c      	str	r4, [r5, #100]	; 0x64
  43403c:	81ec      	strh	r4, [r5, #14]
  43403e:	612c      	str	r4, [r5, #16]
  434040:	616c      	str	r4, [r5, #20]
  434042:	61ac      	str	r4, [r5, #24]
  434044:	81ab      	strh	r3, [r5, #12]
  434046:	4621      	mov	r1, r4
  434048:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  43404c:	2208      	movs	r2, #8
  43404e:	f001 f841 	bl	4350d4 <memset>
  434052:	68be      	ldr	r6, [r7, #8]
  434054:	f8df b098 	ldr.w	fp, [pc, #152]	; 4340f0 <__sinit.part.1+0xe0>
  434058:	f8df a098 	ldr.w	sl, [pc, #152]	; 4340f4 <__sinit.part.1+0xe4>
  43405c:	f8df 9098 	ldr.w	r9, [pc, #152]	; 4340f8 <__sinit.part.1+0xe8>
  434060:	f8df 8098 	ldr.w	r8, [pc, #152]	; 4340fc <__sinit.part.1+0xec>
  434064:	f8c5 b020 	str.w	fp, [r5, #32]
  434068:	2301      	movs	r3, #1
  43406a:	2209      	movs	r2, #9
  43406c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  434070:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  434074:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  434078:	61ed      	str	r5, [r5, #28]
  43407a:	4621      	mov	r1, r4
  43407c:	81f3      	strh	r3, [r6, #14]
  43407e:	81b2      	strh	r2, [r6, #12]
  434080:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  434084:	6034      	str	r4, [r6, #0]
  434086:	6074      	str	r4, [r6, #4]
  434088:	60b4      	str	r4, [r6, #8]
  43408a:	6674      	str	r4, [r6, #100]	; 0x64
  43408c:	6134      	str	r4, [r6, #16]
  43408e:	6174      	str	r4, [r6, #20]
  434090:	61b4      	str	r4, [r6, #24]
  434092:	2208      	movs	r2, #8
  434094:	9301      	str	r3, [sp, #4]
  434096:	f001 f81d 	bl	4350d4 <memset>
  43409a:	68fd      	ldr	r5, [r7, #12]
  43409c:	61f6      	str	r6, [r6, #28]
  43409e:	2012      	movs	r0, #18
  4340a0:	2202      	movs	r2, #2
  4340a2:	f8c6 b020 	str.w	fp, [r6, #32]
  4340a6:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  4340aa:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  4340ae:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  4340b2:	4621      	mov	r1, r4
  4340b4:	81a8      	strh	r0, [r5, #12]
  4340b6:	81ea      	strh	r2, [r5, #14]
  4340b8:	602c      	str	r4, [r5, #0]
  4340ba:	606c      	str	r4, [r5, #4]
  4340bc:	60ac      	str	r4, [r5, #8]
  4340be:	666c      	str	r4, [r5, #100]	; 0x64
  4340c0:	612c      	str	r4, [r5, #16]
  4340c2:	616c      	str	r4, [r5, #20]
  4340c4:	61ac      	str	r4, [r5, #24]
  4340c6:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  4340ca:	2208      	movs	r2, #8
  4340cc:	f001 f802 	bl	4350d4 <memset>
  4340d0:	9b01      	ldr	r3, [sp, #4]
  4340d2:	61ed      	str	r5, [r5, #28]
  4340d4:	f8c5 b020 	str.w	fp, [r5, #32]
  4340d8:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  4340dc:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4340e0:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4340e4:	63bb      	str	r3, [r7, #56]	; 0x38
  4340e6:	b003      	add	sp, #12
  4340e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4340ec:	00434005 	.word	0x00434005
  4340f0:	00435715 	.word	0x00435715
  4340f4:	00435739 	.word	0x00435739
  4340f8:	00435771 	.word	0x00435771
  4340fc:	00435791 	.word	0x00435791

00434100 <__sinit>:
  434100:	6b83      	ldr	r3, [r0, #56]	; 0x38
  434102:	b103      	cbz	r3, 434106 <__sinit+0x6>
  434104:	4770      	bx	lr
  434106:	f7ff bf83 	b.w	434010 <__sinit.part.1>
  43410a:	bf00      	nop

0043410c <__sfp_lock_acquire>:
  43410c:	4770      	bx	lr
  43410e:	bf00      	nop

00434110 <__sfp_lock_release>:
  434110:	4770      	bx	lr
  434112:	bf00      	nop

00434114 <fiprintf>:
  434114:	b40e      	push	{r1, r2, r3}
  434116:	b510      	push	{r4, lr}
  434118:	b083      	sub	sp, #12
  43411a:	ab05      	add	r3, sp, #20
  43411c:	4c06      	ldr	r4, [pc, #24]	; (434138 <fiprintf+0x24>)
  43411e:	f853 2b04 	ldr.w	r2, [r3], #4
  434122:	9301      	str	r3, [sp, #4]
  434124:	4601      	mov	r1, r0
  434126:	6820      	ldr	r0, [r4, #0]
  434128:	f002 fe88 	bl	436e3c <_vfiprintf_r>
  43412c:	b003      	add	sp, #12
  43412e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  434132:	b003      	add	sp, #12
  434134:	4770      	bx	lr
  434136:	bf00      	nop
  434138:	200012d0 	.word	0x200012d0

0043413c <fprintf>:
  43413c:	b40e      	push	{r1, r2, r3}
  43413e:	b510      	push	{r4, lr}
  434140:	b083      	sub	sp, #12
  434142:	ab05      	add	r3, sp, #20
  434144:	4c06      	ldr	r4, [pc, #24]	; (434160 <fprintf+0x24>)
  434146:	f853 2b04 	ldr.w	r2, [r3], #4
  43414a:	9301      	str	r3, [sp, #4]
  43414c:	4601      	mov	r1, r0
  43414e:	6820      	ldr	r0, [r4, #0]
  434150:	f003 fcb8 	bl	437ac4 <_vfprintf_r>
  434154:	b003      	add	sp, #12
  434156:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  43415a:	b003      	add	sp, #12
  43415c:	4770      	bx	lr
  43415e:	bf00      	nop
  434160:	200012d0 	.word	0x200012d0

00434164 <_malloc_trim_r>:
  434164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  434166:	4f23      	ldr	r7, [pc, #140]	; (4341f4 <_malloc_trim_r+0x90>)
  434168:	460c      	mov	r4, r1
  43416a:	4606      	mov	r6, r0
  43416c:	f001 f800 	bl	435170 <__malloc_lock>
  434170:	68bb      	ldr	r3, [r7, #8]
  434172:	685d      	ldr	r5, [r3, #4]
  434174:	f025 0503 	bic.w	r5, r5, #3
  434178:	1b29      	subs	r1, r5, r4
  43417a:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  43417e:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  434182:	f021 010f 	bic.w	r1, r1, #15
  434186:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  43418a:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  43418e:	db07      	blt.n	4341a0 <_malloc_trim_r+0x3c>
  434190:	4630      	mov	r0, r6
  434192:	2100      	movs	r1, #0
  434194:	f001 f9ee 	bl	435574 <_sbrk_r>
  434198:	68bb      	ldr	r3, [r7, #8]
  43419a:	442b      	add	r3, r5
  43419c:	4298      	cmp	r0, r3
  43419e:	d004      	beq.n	4341aa <_malloc_trim_r+0x46>
  4341a0:	4630      	mov	r0, r6
  4341a2:	f000 ffe7 	bl	435174 <__malloc_unlock>
  4341a6:	2000      	movs	r0, #0
  4341a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4341aa:	4630      	mov	r0, r6
  4341ac:	4261      	negs	r1, r4
  4341ae:	f001 f9e1 	bl	435574 <_sbrk_r>
  4341b2:	3001      	adds	r0, #1
  4341b4:	d00d      	beq.n	4341d2 <_malloc_trim_r+0x6e>
  4341b6:	4b10      	ldr	r3, [pc, #64]	; (4341f8 <_malloc_trim_r+0x94>)
  4341b8:	68ba      	ldr	r2, [r7, #8]
  4341ba:	6819      	ldr	r1, [r3, #0]
  4341bc:	1b2d      	subs	r5, r5, r4
  4341be:	f045 0501 	orr.w	r5, r5, #1
  4341c2:	4630      	mov	r0, r6
  4341c4:	1b09      	subs	r1, r1, r4
  4341c6:	6055      	str	r5, [r2, #4]
  4341c8:	6019      	str	r1, [r3, #0]
  4341ca:	f000 ffd3 	bl	435174 <__malloc_unlock>
  4341ce:	2001      	movs	r0, #1
  4341d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4341d2:	4630      	mov	r0, r6
  4341d4:	2100      	movs	r1, #0
  4341d6:	f001 f9cd 	bl	435574 <_sbrk_r>
  4341da:	68ba      	ldr	r2, [r7, #8]
  4341dc:	1a83      	subs	r3, r0, r2
  4341de:	2b0f      	cmp	r3, #15
  4341e0:	ddde      	ble.n	4341a0 <_malloc_trim_r+0x3c>
  4341e2:	4c06      	ldr	r4, [pc, #24]	; (4341fc <_malloc_trim_r+0x98>)
  4341e4:	4904      	ldr	r1, [pc, #16]	; (4341f8 <_malloc_trim_r+0x94>)
  4341e6:	6824      	ldr	r4, [r4, #0]
  4341e8:	f043 0301 	orr.w	r3, r3, #1
  4341ec:	1b00      	subs	r0, r0, r4
  4341ee:	6053      	str	r3, [r2, #4]
  4341f0:	6008      	str	r0, [r1, #0]
  4341f2:	e7d5      	b.n	4341a0 <_malloc_trim_r+0x3c>
  4341f4:	200012d4 	.word	0x200012d4
  4341f8:	20002f18 	.word	0x20002f18
  4341fc:	200016e0 	.word	0x200016e0

00434200 <_free_r>:
  434200:	2900      	cmp	r1, #0
  434202:	d04e      	beq.n	4342a2 <_free_r+0xa2>
  434204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  434208:	460c      	mov	r4, r1
  43420a:	4680      	mov	r8, r0
  43420c:	f000 ffb0 	bl	435170 <__malloc_lock>
  434210:	f854 7c04 	ldr.w	r7, [r4, #-4]
  434214:	4962      	ldr	r1, [pc, #392]	; (4343a0 <_free_r+0x1a0>)
  434216:	f027 0201 	bic.w	r2, r7, #1
  43421a:	f1a4 0508 	sub.w	r5, r4, #8
  43421e:	18ab      	adds	r3, r5, r2
  434220:	688e      	ldr	r6, [r1, #8]
  434222:	6858      	ldr	r0, [r3, #4]
  434224:	429e      	cmp	r6, r3
  434226:	f020 0003 	bic.w	r0, r0, #3
  43422a:	d05a      	beq.n	4342e2 <_free_r+0xe2>
  43422c:	07fe      	lsls	r6, r7, #31
  43422e:	6058      	str	r0, [r3, #4]
  434230:	d40b      	bmi.n	43424a <_free_r+0x4a>
  434232:	f854 7c08 	ldr.w	r7, [r4, #-8]
  434236:	1bed      	subs	r5, r5, r7
  434238:	f101 0e08 	add.w	lr, r1, #8
  43423c:	68ac      	ldr	r4, [r5, #8]
  43423e:	4574      	cmp	r4, lr
  434240:	443a      	add	r2, r7
  434242:	d067      	beq.n	434314 <_free_r+0x114>
  434244:	68ef      	ldr	r7, [r5, #12]
  434246:	60e7      	str	r7, [r4, #12]
  434248:	60bc      	str	r4, [r7, #8]
  43424a:	181c      	adds	r4, r3, r0
  43424c:	6864      	ldr	r4, [r4, #4]
  43424e:	07e4      	lsls	r4, r4, #31
  434250:	d40c      	bmi.n	43426c <_free_r+0x6c>
  434252:	4f54      	ldr	r7, [pc, #336]	; (4343a4 <_free_r+0x1a4>)
  434254:	689c      	ldr	r4, [r3, #8]
  434256:	42bc      	cmp	r4, r7
  434258:	4402      	add	r2, r0
  43425a:	d07c      	beq.n	434356 <_free_r+0x156>
  43425c:	68d8      	ldr	r0, [r3, #12]
  43425e:	60e0      	str	r0, [r4, #12]
  434260:	f042 0301 	orr.w	r3, r2, #1
  434264:	6084      	str	r4, [r0, #8]
  434266:	606b      	str	r3, [r5, #4]
  434268:	50aa      	str	r2, [r5, r2]
  43426a:	e003      	b.n	434274 <_free_r+0x74>
  43426c:	f042 0301 	orr.w	r3, r2, #1
  434270:	606b      	str	r3, [r5, #4]
  434272:	50aa      	str	r2, [r5, r2]
  434274:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  434278:	d214      	bcs.n	4342a4 <_free_r+0xa4>
  43427a:	08d2      	lsrs	r2, r2, #3
  43427c:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  434280:	6848      	ldr	r0, [r1, #4]
  434282:	689f      	ldr	r7, [r3, #8]
  434284:	60af      	str	r7, [r5, #8]
  434286:	1092      	asrs	r2, r2, #2
  434288:	2401      	movs	r4, #1
  43428a:	fa04 f202 	lsl.w	r2, r4, r2
  43428e:	4310      	orrs	r0, r2
  434290:	60eb      	str	r3, [r5, #12]
  434292:	6048      	str	r0, [r1, #4]
  434294:	609d      	str	r5, [r3, #8]
  434296:	60fd      	str	r5, [r7, #12]
  434298:	4640      	mov	r0, r8
  43429a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  43429e:	f000 bf69 	b.w	435174 <__malloc_unlock>
  4342a2:	4770      	bx	lr
  4342a4:	0a53      	lsrs	r3, r2, #9
  4342a6:	2b04      	cmp	r3, #4
  4342a8:	d847      	bhi.n	43433a <_free_r+0x13a>
  4342aa:	0993      	lsrs	r3, r2, #6
  4342ac:	f103 0438 	add.w	r4, r3, #56	; 0x38
  4342b0:	0060      	lsls	r0, r4, #1
  4342b2:	eb01 0080 	add.w	r0, r1, r0, lsl #2
  4342b6:	493a      	ldr	r1, [pc, #232]	; (4343a0 <_free_r+0x1a0>)
  4342b8:	6883      	ldr	r3, [r0, #8]
  4342ba:	4283      	cmp	r3, r0
  4342bc:	d043      	beq.n	434346 <_free_r+0x146>
  4342be:	6859      	ldr	r1, [r3, #4]
  4342c0:	f021 0103 	bic.w	r1, r1, #3
  4342c4:	4291      	cmp	r1, r2
  4342c6:	d902      	bls.n	4342ce <_free_r+0xce>
  4342c8:	689b      	ldr	r3, [r3, #8]
  4342ca:	4298      	cmp	r0, r3
  4342cc:	d1f7      	bne.n	4342be <_free_r+0xbe>
  4342ce:	68da      	ldr	r2, [r3, #12]
  4342d0:	60ea      	str	r2, [r5, #12]
  4342d2:	60ab      	str	r3, [r5, #8]
  4342d4:	4640      	mov	r0, r8
  4342d6:	6095      	str	r5, [r2, #8]
  4342d8:	60dd      	str	r5, [r3, #12]
  4342da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4342de:	f000 bf49 	b.w	435174 <__malloc_unlock>
  4342e2:	07ff      	lsls	r7, r7, #31
  4342e4:	4402      	add	r2, r0
  4342e6:	d407      	bmi.n	4342f8 <_free_r+0xf8>
  4342e8:	f854 3c08 	ldr.w	r3, [r4, #-8]
  4342ec:	1aed      	subs	r5, r5, r3
  4342ee:	441a      	add	r2, r3
  4342f0:	68a8      	ldr	r0, [r5, #8]
  4342f2:	68eb      	ldr	r3, [r5, #12]
  4342f4:	60c3      	str	r3, [r0, #12]
  4342f6:	6098      	str	r0, [r3, #8]
  4342f8:	4b2b      	ldr	r3, [pc, #172]	; (4343a8 <_free_r+0x1a8>)
  4342fa:	681b      	ldr	r3, [r3, #0]
  4342fc:	f042 0001 	orr.w	r0, r2, #1
  434300:	429a      	cmp	r2, r3
  434302:	6068      	str	r0, [r5, #4]
  434304:	608d      	str	r5, [r1, #8]
  434306:	d3c7      	bcc.n	434298 <_free_r+0x98>
  434308:	4b28      	ldr	r3, [pc, #160]	; (4343ac <_free_r+0x1ac>)
  43430a:	4640      	mov	r0, r8
  43430c:	6819      	ldr	r1, [r3, #0]
  43430e:	f7ff ff29 	bl	434164 <_malloc_trim_r>
  434312:	e7c1      	b.n	434298 <_free_r+0x98>
  434314:	1819      	adds	r1, r3, r0
  434316:	6849      	ldr	r1, [r1, #4]
  434318:	07c9      	lsls	r1, r1, #31
  43431a:	d409      	bmi.n	434330 <_free_r+0x130>
  43431c:	68d9      	ldr	r1, [r3, #12]
  43431e:	689b      	ldr	r3, [r3, #8]
  434320:	4402      	add	r2, r0
  434322:	f042 0001 	orr.w	r0, r2, #1
  434326:	60d9      	str	r1, [r3, #12]
  434328:	608b      	str	r3, [r1, #8]
  43432a:	6068      	str	r0, [r5, #4]
  43432c:	50aa      	str	r2, [r5, r2]
  43432e:	e7b3      	b.n	434298 <_free_r+0x98>
  434330:	f042 0301 	orr.w	r3, r2, #1
  434334:	606b      	str	r3, [r5, #4]
  434336:	50aa      	str	r2, [r5, r2]
  434338:	e7ae      	b.n	434298 <_free_r+0x98>
  43433a:	2b14      	cmp	r3, #20
  43433c:	d814      	bhi.n	434368 <_free_r+0x168>
  43433e:	f103 045b 	add.w	r4, r3, #91	; 0x5b
  434342:	0060      	lsls	r0, r4, #1
  434344:	e7b5      	b.n	4342b2 <_free_r+0xb2>
  434346:	684a      	ldr	r2, [r1, #4]
  434348:	10a4      	asrs	r4, r4, #2
  43434a:	2001      	movs	r0, #1
  43434c:	40a0      	lsls	r0, r4
  43434e:	4302      	orrs	r2, r0
  434350:	604a      	str	r2, [r1, #4]
  434352:	461a      	mov	r2, r3
  434354:	e7bc      	b.n	4342d0 <_free_r+0xd0>
  434356:	f042 0301 	orr.w	r3, r2, #1
  43435a:	614d      	str	r5, [r1, #20]
  43435c:	610d      	str	r5, [r1, #16]
  43435e:	60ec      	str	r4, [r5, #12]
  434360:	60ac      	str	r4, [r5, #8]
  434362:	606b      	str	r3, [r5, #4]
  434364:	50aa      	str	r2, [r5, r2]
  434366:	e797      	b.n	434298 <_free_r+0x98>
  434368:	2b54      	cmp	r3, #84	; 0x54
  43436a:	d804      	bhi.n	434376 <_free_r+0x176>
  43436c:	0b13      	lsrs	r3, r2, #12
  43436e:	f103 046e 	add.w	r4, r3, #110	; 0x6e
  434372:	0060      	lsls	r0, r4, #1
  434374:	e79d      	b.n	4342b2 <_free_r+0xb2>
  434376:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  43437a:	d804      	bhi.n	434386 <_free_r+0x186>
  43437c:	0bd3      	lsrs	r3, r2, #15
  43437e:	f103 0477 	add.w	r4, r3, #119	; 0x77
  434382:	0060      	lsls	r0, r4, #1
  434384:	e795      	b.n	4342b2 <_free_r+0xb2>
  434386:	f240 5054 	movw	r0, #1364	; 0x554
  43438a:	4283      	cmp	r3, r0
  43438c:	d804      	bhi.n	434398 <_free_r+0x198>
  43438e:	0c93      	lsrs	r3, r2, #18
  434390:	f103 047c 	add.w	r4, r3, #124	; 0x7c
  434394:	0060      	lsls	r0, r4, #1
  434396:	e78c      	b.n	4342b2 <_free_r+0xb2>
  434398:	20fc      	movs	r0, #252	; 0xfc
  43439a:	247e      	movs	r4, #126	; 0x7e
  43439c:	e789      	b.n	4342b2 <_free_r+0xb2>
  43439e:	bf00      	nop
  4343a0:	200012d4 	.word	0x200012d4
  4343a4:	200012dc 	.word	0x200012dc
  4343a8:	200016dc 	.word	0x200016dc
  4343ac:	20002f14 	.word	0x20002f14

004343b0 <_fstat_r>:
  4343b0:	b538      	push	{r3, r4, r5, lr}
  4343b2:	4c08      	ldr	r4, [pc, #32]	; (4343d4 <_fstat_r+0x24>)
  4343b4:	2300      	movs	r3, #0
  4343b6:	4605      	mov	r5, r0
  4343b8:	4608      	mov	r0, r1
  4343ba:	4611      	mov	r1, r2
  4343bc:	6023      	str	r3, [r4, #0]
  4343be:	f7ce fe7b 	bl	4030b8 <_fstat>
  4343c2:	1c43      	adds	r3, r0, #1
  4343c4:	d000      	beq.n	4343c8 <_fstat_r+0x18>
  4343c6:	bd38      	pop	{r3, r4, r5, pc}
  4343c8:	6823      	ldr	r3, [r4, #0]
  4343ca:	2b00      	cmp	r3, #0
  4343cc:	d0fb      	beq.n	4343c6 <_fstat_r+0x16>
  4343ce:	602b      	str	r3, [r5, #0]
  4343d0:	bd38      	pop	{r3, r4, r5, pc}
  4343d2:	bf00      	nop
  4343d4:	20002f50 	.word	0x20002f50

004343d8 <__sfvwrite_r>:
  4343d8:	6893      	ldr	r3, [r2, #8]
  4343da:	2b00      	cmp	r3, #0
  4343dc:	d07a      	beq.n	4344d4 <__sfvwrite_r+0xfc>
  4343de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4343e2:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  4343e6:	f01e 0f08 	tst.w	lr, #8
  4343ea:	b083      	sub	sp, #12
  4343ec:	460c      	mov	r4, r1
  4343ee:	4681      	mov	r9, r0
  4343f0:	4616      	mov	r6, r2
  4343f2:	d026      	beq.n	434442 <__sfvwrite_r+0x6a>
  4343f4:	690b      	ldr	r3, [r1, #16]
  4343f6:	b323      	cbz	r3, 434442 <__sfvwrite_r+0x6a>
  4343f8:	f00e 0802 	and.w	r8, lr, #2
  4343fc:	fa1f f088 	uxth.w	r0, r8
  434400:	6835      	ldr	r5, [r6, #0]
  434402:	b370      	cbz	r0, 434462 <__sfvwrite_r+0x8a>
  434404:	f04f 0a00 	mov.w	sl, #0
  434408:	f8df b2e0 	ldr.w	fp, [pc, #736]	; 4346ec <__sfvwrite_r+0x314>
  43440c:	46d0      	mov	r8, sl
  43440e:	45d8      	cmp	r8, fp
  434410:	4643      	mov	r3, r8
  434412:	4652      	mov	r2, sl
  434414:	bf28      	it	cs
  434416:	465b      	movcs	r3, fp
  434418:	4648      	mov	r0, r9
  43441a:	f1b8 0f00 	cmp.w	r8, #0
  43441e:	d053      	beq.n	4344c8 <__sfvwrite_r+0xf0>
  434420:	69e1      	ldr	r1, [r4, #28]
  434422:	6a67      	ldr	r7, [r4, #36]	; 0x24
  434424:	47b8      	blx	r7
  434426:	2800      	cmp	r0, #0
  434428:	dd73      	ble.n	434512 <__sfvwrite_r+0x13a>
  43442a:	68b3      	ldr	r3, [r6, #8]
  43442c:	1a1b      	subs	r3, r3, r0
  43442e:	4482      	add	sl, r0
  434430:	ebc0 0808 	rsb	r8, r0, r8
  434434:	60b3      	str	r3, [r6, #8]
  434436:	2b00      	cmp	r3, #0
  434438:	d1e9      	bne.n	43440e <__sfvwrite_r+0x36>
  43443a:	2000      	movs	r0, #0
  43443c:	b003      	add	sp, #12
  43443e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  434442:	4648      	mov	r0, r9
  434444:	4621      	mov	r1, r4
  434446:	f004 fdd5 	bl	438ff4 <__swsetup_r>
  43444a:	2800      	cmp	r0, #0
  43444c:	f040 8145 	bne.w	4346da <__sfvwrite_r+0x302>
  434450:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  434454:	6835      	ldr	r5, [r6, #0]
  434456:	f00e 0802 	and.w	r8, lr, #2
  43445a:	fa1f f088 	uxth.w	r0, r8
  43445e:	2800      	cmp	r0, #0
  434460:	d1d0      	bne.n	434404 <__sfvwrite_r+0x2c>
  434462:	f01e 0b01 	ands.w	fp, lr, #1
  434466:	d15d      	bne.n	434524 <__sfvwrite_r+0x14c>
  434468:	46d8      	mov	r8, fp
  43446a:	f1b8 0f00 	cmp.w	r8, #0
  43446e:	d025      	beq.n	4344bc <__sfvwrite_r+0xe4>
  434470:	f41e 7f00 	tst.w	lr, #512	; 0x200
  434474:	68a7      	ldr	r7, [r4, #8]
  434476:	d02f      	beq.n	4344d8 <__sfvwrite_r+0x100>
  434478:	45b8      	cmp	r8, r7
  43447a:	46ba      	mov	sl, r7
  43447c:	f0c0 80a9 	bcc.w	4345d2 <__sfvwrite_r+0x1fa>
  434480:	f41e 6f90 	tst.w	lr, #1152	; 0x480
  434484:	f040 80b6 	bne.w	4345f4 <__sfvwrite_r+0x21c>
  434488:	6820      	ldr	r0, [r4, #0]
  43448a:	4652      	mov	r2, sl
  43448c:	4659      	mov	r1, fp
  43448e:	f000 fdbd 	bl	43500c <memmove>
  434492:	68a0      	ldr	r0, [r4, #8]
  434494:	6822      	ldr	r2, [r4, #0]
  434496:	1bc0      	subs	r0, r0, r7
  434498:	eb02 030a 	add.w	r3, r2, sl
  43449c:	60a0      	str	r0, [r4, #8]
  43449e:	6023      	str	r3, [r4, #0]
  4344a0:	4640      	mov	r0, r8
  4344a2:	68b3      	ldr	r3, [r6, #8]
  4344a4:	1a1b      	subs	r3, r3, r0
  4344a6:	4483      	add	fp, r0
  4344a8:	ebc0 0808 	rsb	r8, r0, r8
  4344ac:	60b3      	str	r3, [r6, #8]
  4344ae:	2b00      	cmp	r3, #0
  4344b0:	d0c3      	beq.n	43443a <__sfvwrite_r+0x62>
  4344b2:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  4344b6:	f1b8 0f00 	cmp.w	r8, #0
  4344ba:	d1d9      	bne.n	434470 <__sfvwrite_r+0x98>
  4344bc:	f8d5 b000 	ldr.w	fp, [r5]
  4344c0:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4344c4:	3508      	adds	r5, #8
  4344c6:	e7d0      	b.n	43446a <__sfvwrite_r+0x92>
  4344c8:	f8d5 a000 	ldr.w	sl, [r5]
  4344cc:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4344d0:	3508      	adds	r5, #8
  4344d2:	e79c      	b.n	43440e <__sfvwrite_r+0x36>
  4344d4:	2000      	movs	r0, #0
  4344d6:	4770      	bx	lr
  4344d8:	6820      	ldr	r0, [r4, #0]
  4344da:	6923      	ldr	r3, [r4, #16]
  4344dc:	4298      	cmp	r0, r3
  4344de:	d803      	bhi.n	4344e8 <__sfvwrite_r+0x110>
  4344e0:	6962      	ldr	r2, [r4, #20]
  4344e2:	4590      	cmp	r8, r2
  4344e4:	f080 80b9 	bcs.w	43465a <__sfvwrite_r+0x282>
  4344e8:	4547      	cmp	r7, r8
  4344ea:	bf28      	it	cs
  4344ec:	4647      	movcs	r7, r8
  4344ee:	463a      	mov	r2, r7
  4344f0:	4659      	mov	r1, fp
  4344f2:	f000 fd8b 	bl	43500c <memmove>
  4344f6:	68a3      	ldr	r3, [r4, #8]
  4344f8:	6822      	ldr	r2, [r4, #0]
  4344fa:	1bdb      	subs	r3, r3, r7
  4344fc:	443a      	add	r2, r7
  4344fe:	60a3      	str	r3, [r4, #8]
  434500:	6022      	str	r2, [r4, #0]
  434502:	2b00      	cmp	r3, #0
  434504:	d14a      	bne.n	43459c <__sfvwrite_r+0x1c4>
  434506:	4648      	mov	r0, r9
  434508:	4621      	mov	r1, r4
  43450a:	f7ff fd65 	bl	433fd8 <_fflush_r>
  43450e:	2800      	cmp	r0, #0
  434510:	d044      	beq.n	43459c <__sfvwrite_r+0x1c4>
  434512:	89a3      	ldrh	r3, [r4, #12]
  434514:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  434518:	f04f 30ff 	mov.w	r0, #4294967295
  43451c:	81a3      	strh	r3, [r4, #12]
  43451e:	b003      	add	sp, #12
  434520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  434524:	4680      	mov	r8, r0
  434526:	9000      	str	r0, [sp, #0]
  434528:	4683      	mov	fp, r0
  43452a:	4682      	mov	sl, r0
  43452c:	f1ba 0f00 	cmp.w	sl, #0
  434530:	d02c      	beq.n	43458c <__sfvwrite_r+0x1b4>
  434532:	9b00      	ldr	r3, [sp, #0]
  434534:	2b00      	cmp	r3, #0
  434536:	d050      	beq.n	4345da <__sfvwrite_r+0x202>
  434538:	6820      	ldr	r0, [r4, #0]
  43453a:	6921      	ldr	r1, [r4, #16]
  43453c:	f8d4 e008 	ldr.w	lr, [r4, #8]
  434540:	6962      	ldr	r2, [r4, #20]
  434542:	45d0      	cmp	r8, sl
  434544:	4643      	mov	r3, r8
  434546:	bf28      	it	cs
  434548:	4653      	movcs	r3, sl
  43454a:	4288      	cmp	r0, r1
  43454c:	461f      	mov	r7, r3
  43454e:	d904      	bls.n	43455a <__sfvwrite_r+0x182>
  434550:	eb0e 0c02 	add.w	ip, lr, r2
  434554:	4563      	cmp	r3, ip
  434556:	f300 8092 	bgt.w	43467e <__sfvwrite_r+0x2a6>
  43455a:	4293      	cmp	r3, r2
  43455c:	db20      	blt.n	4345a0 <__sfvwrite_r+0x1c8>
  43455e:	4613      	mov	r3, r2
  434560:	6a67      	ldr	r7, [r4, #36]	; 0x24
  434562:	69e1      	ldr	r1, [r4, #28]
  434564:	4648      	mov	r0, r9
  434566:	465a      	mov	r2, fp
  434568:	47b8      	blx	r7
  43456a:	1e07      	subs	r7, r0, #0
  43456c:	ddd1      	ble.n	434512 <__sfvwrite_r+0x13a>
  43456e:	ebb8 0807 	subs.w	r8, r8, r7
  434572:	d025      	beq.n	4345c0 <__sfvwrite_r+0x1e8>
  434574:	68b3      	ldr	r3, [r6, #8]
  434576:	1bdb      	subs	r3, r3, r7
  434578:	44bb      	add	fp, r7
  43457a:	ebc7 0a0a 	rsb	sl, r7, sl
  43457e:	60b3      	str	r3, [r6, #8]
  434580:	2b00      	cmp	r3, #0
  434582:	f43f af5a 	beq.w	43443a <__sfvwrite_r+0x62>
  434586:	f1ba 0f00 	cmp.w	sl, #0
  43458a:	d1d2      	bne.n	434532 <__sfvwrite_r+0x15a>
  43458c:	2300      	movs	r3, #0
  43458e:	f8d5 b000 	ldr.w	fp, [r5]
  434592:	f8d5 a004 	ldr.w	sl, [r5, #4]
  434596:	9300      	str	r3, [sp, #0]
  434598:	3508      	adds	r5, #8
  43459a:	e7c7      	b.n	43452c <__sfvwrite_r+0x154>
  43459c:	4638      	mov	r0, r7
  43459e:	e780      	b.n	4344a2 <__sfvwrite_r+0xca>
  4345a0:	461a      	mov	r2, r3
  4345a2:	4659      	mov	r1, fp
  4345a4:	9301      	str	r3, [sp, #4]
  4345a6:	f000 fd31 	bl	43500c <memmove>
  4345aa:	68a2      	ldr	r2, [r4, #8]
  4345ac:	6821      	ldr	r1, [r4, #0]
  4345ae:	9b01      	ldr	r3, [sp, #4]
  4345b0:	ebb8 0807 	subs.w	r8, r8, r7
  4345b4:	eba2 0203 	sub.w	r2, r2, r3
  4345b8:	440b      	add	r3, r1
  4345ba:	60a2      	str	r2, [r4, #8]
  4345bc:	6023      	str	r3, [r4, #0]
  4345be:	d1d9      	bne.n	434574 <__sfvwrite_r+0x19c>
  4345c0:	4648      	mov	r0, r9
  4345c2:	4621      	mov	r1, r4
  4345c4:	f7ff fd08 	bl	433fd8 <_fflush_r>
  4345c8:	2800      	cmp	r0, #0
  4345ca:	d1a2      	bne.n	434512 <__sfvwrite_r+0x13a>
  4345cc:	f8cd 8000 	str.w	r8, [sp]
  4345d0:	e7d0      	b.n	434574 <__sfvwrite_r+0x19c>
  4345d2:	6820      	ldr	r0, [r4, #0]
  4345d4:	4647      	mov	r7, r8
  4345d6:	46c2      	mov	sl, r8
  4345d8:	e757      	b.n	43448a <__sfvwrite_r+0xb2>
  4345da:	4658      	mov	r0, fp
  4345dc:	210a      	movs	r1, #10
  4345de:	4652      	mov	r2, sl
  4345e0:	f000 fbfe 	bl	434de0 <memchr>
  4345e4:	2800      	cmp	r0, #0
  4345e6:	d073      	beq.n	4346d0 <__sfvwrite_r+0x2f8>
  4345e8:	3001      	adds	r0, #1
  4345ea:	2301      	movs	r3, #1
  4345ec:	ebcb 0800 	rsb	r8, fp, r0
  4345f0:	9300      	str	r3, [sp, #0]
  4345f2:	e7a1      	b.n	434538 <__sfvwrite_r+0x160>
  4345f4:	6967      	ldr	r7, [r4, #20]
  4345f6:	6921      	ldr	r1, [r4, #16]
  4345f8:	6823      	ldr	r3, [r4, #0]
  4345fa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  4345fe:	1a5b      	subs	r3, r3, r1
  434600:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  434604:	1c58      	adds	r0, r3, #1
  434606:	107f      	asrs	r7, r7, #1
  434608:	4440      	add	r0, r8
  43460a:	4287      	cmp	r7, r0
  43460c:	463a      	mov	r2, r7
  43460e:	bf3c      	itt	cc
  434610:	4607      	movcc	r7, r0
  434612:	463a      	movcc	r2, r7
  434614:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  434618:	9300      	str	r3, [sp, #0]
  43461a:	d046      	beq.n	4346aa <__sfvwrite_r+0x2d2>
  43461c:	4611      	mov	r1, r2
  43461e:	4648      	mov	r0, r9
  434620:	f000 f94c 	bl	4348bc <_malloc_r>
  434624:	9b00      	ldr	r3, [sp, #0]
  434626:	4682      	mov	sl, r0
  434628:	2800      	cmp	r0, #0
  43462a:	d059      	beq.n	4346e0 <__sfvwrite_r+0x308>
  43462c:	461a      	mov	r2, r3
  43462e:	6921      	ldr	r1, [r4, #16]
  434630:	9300      	str	r3, [sp, #0]
  434632:	f000 fc51 	bl	434ed8 <memcpy>
  434636:	89a2      	ldrh	r2, [r4, #12]
  434638:	9b00      	ldr	r3, [sp, #0]
  43463a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  43463e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  434642:	81a2      	strh	r2, [r4, #12]
  434644:	eb0a 0003 	add.w	r0, sl, r3
  434648:	1afb      	subs	r3, r7, r3
  43464a:	f8c4 a010 	str.w	sl, [r4, #16]
  43464e:	6167      	str	r7, [r4, #20]
  434650:	6020      	str	r0, [r4, #0]
  434652:	60a3      	str	r3, [r4, #8]
  434654:	4647      	mov	r7, r8
  434656:	46c2      	mov	sl, r8
  434658:	e717      	b.n	43448a <__sfvwrite_r+0xb2>
  43465a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  43465e:	4543      	cmp	r3, r8
  434660:	bf28      	it	cs
  434662:	4643      	movcs	r3, r8
  434664:	6a67      	ldr	r7, [r4, #36]	; 0x24
  434666:	fb93 f3f2 	sdiv	r3, r3, r2
  43466a:	4648      	mov	r0, r9
  43466c:	fb03 f302 	mul.w	r3, r3, r2
  434670:	69e1      	ldr	r1, [r4, #28]
  434672:	465a      	mov	r2, fp
  434674:	47b8      	blx	r7
  434676:	2800      	cmp	r0, #0
  434678:	f73f af13 	bgt.w	4344a2 <__sfvwrite_r+0xca>
  43467c:	e749      	b.n	434512 <__sfvwrite_r+0x13a>
  43467e:	4662      	mov	r2, ip
  434680:	4659      	mov	r1, fp
  434682:	f8cd c004 	str.w	ip, [sp, #4]
  434686:	f000 fcc1 	bl	43500c <memmove>
  43468a:	6823      	ldr	r3, [r4, #0]
  43468c:	f8dd c004 	ldr.w	ip, [sp, #4]
  434690:	4463      	add	r3, ip
  434692:	6023      	str	r3, [r4, #0]
  434694:	4648      	mov	r0, r9
  434696:	4621      	mov	r1, r4
  434698:	f7ff fc9e 	bl	433fd8 <_fflush_r>
  43469c:	f8dd c004 	ldr.w	ip, [sp, #4]
  4346a0:	2800      	cmp	r0, #0
  4346a2:	f47f af36 	bne.w	434512 <__sfvwrite_r+0x13a>
  4346a6:	4667      	mov	r7, ip
  4346a8:	e761      	b.n	43456e <__sfvwrite_r+0x196>
  4346aa:	4648      	mov	r0, r9
  4346ac:	f000 fd6c 	bl	435188 <_realloc_r>
  4346b0:	9b00      	ldr	r3, [sp, #0]
  4346b2:	4682      	mov	sl, r0
  4346b4:	2800      	cmp	r0, #0
  4346b6:	d1c5      	bne.n	434644 <__sfvwrite_r+0x26c>
  4346b8:	4648      	mov	r0, r9
  4346ba:	6921      	ldr	r1, [r4, #16]
  4346bc:	f7ff fda0 	bl	434200 <_free_r>
  4346c0:	89a3      	ldrh	r3, [r4, #12]
  4346c2:	220c      	movs	r2, #12
  4346c4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4346c8:	b29b      	uxth	r3, r3
  4346ca:	f8c9 2000 	str.w	r2, [r9]
  4346ce:	e721      	b.n	434514 <__sfvwrite_r+0x13c>
  4346d0:	2301      	movs	r3, #1
  4346d2:	f10a 0801 	add.w	r8, sl, #1
  4346d6:	9300      	str	r3, [sp, #0]
  4346d8:	e72e      	b.n	434538 <__sfvwrite_r+0x160>
  4346da:	f04f 30ff 	mov.w	r0, #4294967295
  4346de:	e6ad      	b.n	43443c <__sfvwrite_r+0x64>
  4346e0:	230c      	movs	r3, #12
  4346e2:	f8c9 3000 	str.w	r3, [r9]
  4346e6:	89a3      	ldrh	r3, [r4, #12]
  4346e8:	e714      	b.n	434514 <__sfvwrite_r+0x13c>
  4346ea:	bf00      	nop
  4346ec:	7ffffc00 	.word	0x7ffffc00

004346f0 <_fwalk_reent>:
  4346f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4346f4:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4346f8:	d01f      	beq.n	43473a <_fwalk_reent+0x4a>
  4346fa:	4688      	mov	r8, r1
  4346fc:	4606      	mov	r6, r0
  4346fe:	f04f 0900 	mov.w	r9, #0
  434702:	687d      	ldr	r5, [r7, #4]
  434704:	68bc      	ldr	r4, [r7, #8]
  434706:	3d01      	subs	r5, #1
  434708:	d411      	bmi.n	43472e <_fwalk_reent+0x3e>
  43470a:	89a3      	ldrh	r3, [r4, #12]
  43470c:	2b01      	cmp	r3, #1
  43470e:	f105 35ff 	add.w	r5, r5, #4294967295
  434712:	d908      	bls.n	434726 <_fwalk_reent+0x36>
  434714:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  434718:	3301      	adds	r3, #1
  43471a:	4621      	mov	r1, r4
  43471c:	4630      	mov	r0, r6
  43471e:	d002      	beq.n	434726 <_fwalk_reent+0x36>
  434720:	47c0      	blx	r8
  434722:	ea49 0900 	orr.w	r9, r9, r0
  434726:	1c6b      	adds	r3, r5, #1
  434728:	f104 0468 	add.w	r4, r4, #104	; 0x68
  43472c:	d1ed      	bne.n	43470a <_fwalk_reent+0x1a>
  43472e:	683f      	ldr	r7, [r7, #0]
  434730:	2f00      	cmp	r7, #0
  434732:	d1e6      	bne.n	434702 <_fwalk_reent+0x12>
  434734:	4648      	mov	r0, r9
  434736:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  43473a:	46b9      	mov	r9, r7
  43473c:	4648      	mov	r0, r9
  43473e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  434742:	bf00      	nop

00434744 <__libc_init_array>:
  434744:	b570      	push	{r4, r5, r6, lr}
  434746:	4e0f      	ldr	r6, [pc, #60]	; (434784 <__libc_init_array+0x40>)
  434748:	4d0f      	ldr	r5, [pc, #60]	; (434788 <__libc_init_array+0x44>)
  43474a:	1b76      	subs	r6, r6, r5
  43474c:	10b6      	asrs	r6, r6, #2
  43474e:	bf18      	it	ne
  434750:	2400      	movne	r4, #0
  434752:	d005      	beq.n	434760 <__libc_init_array+0x1c>
  434754:	3401      	adds	r4, #1
  434756:	f855 3b04 	ldr.w	r3, [r5], #4
  43475a:	4798      	blx	r3
  43475c:	42a6      	cmp	r6, r4
  43475e:	d1f9      	bne.n	434754 <__libc_init_array+0x10>
  434760:	4e0a      	ldr	r6, [pc, #40]	; (43478c <__libc_init_array+0x48>)
  434762:	4d0b      	ldr	r5, [pc, #44]	; (434790 <__libc_init_array+0x4c>)
  434764:	1b76      	subs	r6, r6, r5
  434766:	f00b ffdd 	bl	440724 <_init>
  43476a:	10b6      	asrs	r6, r6, #2
  43476c:	bf18      	it	ne
  43476e:	2400      	movne	r4, #0
  434770:	d006      	beq.n	434780 <__libc_init_array+0x3c>
  434772:	3401      	adds	r4, #1
  434774:	f855 3b04 	ldr.w	r3, [r5], #4
  434778:	4798      	blx	r3
  43477a:	42a6      	cmp	r6, r4
  43477c:	d1f9      	bne.n	434772 <__libc_init_array+0x2e>
  43477e:	bd70      	pop	{r4, r5, r6, pc}
  434780:	bd70      	pop	{r4, r5, r6, pc}
  434782:	bf00      	nop
  434784:	00440730 	.word	0x00440730
  434788:	00440730 	.word	0x00440730
  43478c:	00440738 	.word	0x00440738
  434790:	00440730 	.word	0x00440730

00434794 <iprintf>:
  434794:	b40f      	push	{r0, r1, r2, r3}
  434796:	b500      	push	{lr}
  434798:	4907      	ldr	r1, [pc, #28]	; (4347b8 <iprintf+0x24>)
  43479a:	b083      	sub	sp, #12
  43479c:	ab04      	add	r3, sp, #16
  43479e:	6808      	ldr	r0, [r1, #0]
  4347a0:	f853 2b04 	ldr.w	r2, [r3], #4
  4347a4:	6881      	ldr	r1, [r0, #8]
  4347a6:	9301      	str	r3, [sp, #4]
  4347a8:	f002 fb48 	bl	436e3c <_vfiprintf_r>
  4347ac:	b003      	add	sp, #12
  4347ae:	f85d eb04 	ldr.w	lr, [sp], #4
  4347b2:	b004      	add	sp, #16
  4347b4:	4770      	bx	lr
  4347b6:	bf00      	nop
  4347b8:	200012d0 	.word	0x200012d0

004347bc <__smakebuf_r>:
  4347bc:	898b      	ldrh	r3, [r1, #12]
  4347be:	b29a      	uxth	r2, r3
  4347c0:	f012 0f02 	tst.w	r2, #2
  4347c4:	d13c      	bne.n	434840 <__smakebuf_r+0x84>
  4347c6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4347c8:	460c      	mov	r4, r1
  4347ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4347ce:	2900      	cmp	r1, #0
  4347d0:	b091      	sub	sp, #68	; 0x44
  4347d2:	4605      	mov	r5, r0
  4347d4:	db19      	blt.n	43480a <__smakebuf_r+0x4e>
  4347d6:	aa01      	add	r2, sp, #4
  4347d8:	f7ff fdea 	bl	4343b0 <_fstat_r>
  4347dc:	2800      	cmp	r0, #0
  4347de:	db12      	blt.n	434806 <__smakebuf_r+0x4a>
  4347e0:	9b02      	ldr	r3, [sp, #8]
  4347e2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  4347e6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  4347ea:	f5a3 5700 	sub.w	r7, r3, #8192	; 0x2000
  4347ee:	fab7 f787 	clz	r7, r7
  4347f2:	ea4f 1757 	mov.w	r7, r7, lsr #5
  4347f6:	d02a      	beq.n	43484e <__smakebuf_r+0x92>
  4347f8:	89a3      	ldrh	r3, [r4, #12]
  4347fa:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4347fe:	81a3      	strh	r3, [r4, #12]
  434800:	f44f 6680 	mov.w	r6, #1024	; 0x400
  434804:	e00b      	b.n	43481e <__smakebuf_r+0x62>
  434806:	89a3      	ldrh	r3, [r4, #12]
  434808:	b29a      	uxth	r2, r3
  43480a:	f012 0f80 	tst.w	r2, #128	; 0x80
  43480e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  434812:	81a3      	strh	r3, [r4, #12]
  434814:	bf0c      	ite	eq
  434816:	f44f 6680 	moveq.w	r6, #1024	; 0x400
  43481a:	2640      	movne	r6, #64	; 0x40
  43481c:	2700      	movs	r7, #0
  43481e:	4628      	mov	r0, r5
  434820:	4631      	mov	r1, r6
  434822:	f000 f84b 	bl	4348bc <_malloc_r>
  434826:	89a3      	ldrh	r3, [r4, #12]
  434828:	b340      	cbz	r0, 43487c <__smakebuf_r+0xc0>
  43482a:	4a1a      	ldr	r2, [pc, #104]	; (434894 <__smakebuf_r+0xd8>)
  43482c:	63ea      	str	r2, [r5, #60]	; 0x3c
  43482e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  434832:	81a3      	strh	r3, [r4, #12]
  434834:	6020      	str	r0, [r4, #0]
  434836:	6120      	str	r0, [r4, #16]
  434838:	6166      	str	r6, [r4, #20]
  43483a:	b99f      	cbnz	r7, 434864 <__smakebuf_r+0xa8>
  43483c:	b011      	add	sp, #68	; 0x44
  43483e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  434840:	f101 0343 	add.w	r3, r1, #67	; 0x43
  434844:	2201      	movs	r2, #1
  434846:	600b      	str	r3, [r1, #0]
  434848:	610b      	str	r3, [r1, #16]
  43484a:	614a      	str	r2, [r1, #20]
  43484c:	4770      	bx	lr
  43484e:	4b12      	ldr	r3, [pc, #72]	; (434898 <__smakebuf_r+0xdc>)
  434850:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  434852:	429a      	cmp	r2, r3
  434854:	d1d0      	bne.n	4347f8 <__smakebuf_r+0x3c>
  434856:	89a3      	ldrh	r3, [r4, #12]
  434858:	f44f 6680 	mov.w	r6, #1024	; 0x400
  43485c:	4333      	orrs	r3, r6
  43485e:	81a3      	strh	r3, [r4, #12]
  434860:	64e6      	str	r6, [r4, #76]	; 0x4c
  434862:	e7dc      	b.n	43481e <__smakebuf_r+0x62>
  434864:	4628      	mov	r0, r5
  434866:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  43486a:	f005 fca7 	bl	43a1bc <_isatty_r>
  43486e:	2800      	cmp	r0, #0
  434870:	d0e4      	beq.n	43483c <__smakebuf_r+0x80>
  434872:	89a3      	ldrh	r3, [r4, #12]
  434874:	f043 0301 	orr.w	r3, r3, #1
  434878:	81a3      	strh	r3, [r4, #12]
  43487a:	e7df      	b.n	43483c <__smakebuf_r+0x80>
  43487c:	059a      	lsls	r2, r3, #22
  43487e:	d4dd      	bmi.n	43483c <__smakebuf_r+0x80>
  434880:	f104 0243 	add.w	r2, r4, #67	; 0x43
  434884:	f043 0302 	orr.w	r3, r3, #2
  434888:	2101      	movs	r1, #1
  43488a:	81a3      	strh	r3, [r4, #12]
  43488c:	6022      	str	r2, [r4, #0]
  43488e:	6122      	str	r2, [r4, #16]
  434890:	6161      	str	r1, [r4, #20]
  434892:	e7d3      	b.n	43483c <__smakebuf_r+0x80>
  434894:	00434005 	.word	0x00434005
  434898:	00435771 	.word	0x00435771

0043489c <malloc>:
  43489c:	4b02      	ldr	r3, [pc, #8]	; (4348a8 <malloc+0xc>)
  43489e:	4601      	mov	r1, r0
  4348a0:	6818      	ldr	r0, [r3, #0]
  4348a2:	f000 b80b 	b.w	4348bc <_malloc_r>
  4348a6:	bf00      	nop
  4348a8:	200012d0 	.word	0x200012d0

004348ac <free>:
  4348ac:	4b02      	ldr	r3, [pc, #8]	; (4348b8 <free+0xc>)
  4348ae:	4601      	mov	r1, r0
  4348b0:	6818      	ldr	r0, [r3, #0]
  4348b2:	f7ff bca5 	b.w	434200 <_free_r>
  4348b6:	bf00      	nop
  4348b8:	200012d0 	.word	0x200012d0

004348bc <_malloc_r>:
  4348bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4348c0:	f101 050b 	add.w	r5, r1, #11
  4348c4:	2d16      	cmp	r5, #22
  4348c6:	b083      	sub	sp, #12
  4348c8:	4606      	mov	r6, r0
  4348ca:	d927      	bls.n	43491c <_malloc_r+0x60>
  4348cc:	f035 0507 	bics.w	r5, r5, #7
  4348d0:	f100 80b6 	bmi.w	434a40 <_malloc_r+0x184>
  4348d4:	42a9      	cmp	r1, r5
  4348d6:	f200 80b3 	bhi.w	434a40 <_malloc_r+0x184>
  4348da:	f000 fc49 	bl	435170 <__malloc_lock>
  4348de:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  4348e2:	d222      	bcs.n	43492a <_malloc_r+0x6e>
  4348e4:	4fc2      	ldr	r7, [pc, #776]	; (434bf0 <_malloc_r+0x334>)
  4348e6:	08e8      	lsrs	r0, r5, #3
  4348e8:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
  4348ec:	68dc      	ldr	r4, [r3, #12]
  4348ee:	429c      	cmp	r4, r3
  4348f0:	f000 81c8 	beq.w	434c84 <_malloc_r+0x3c8>
  4348f4:	6863      	ldr	r3, [r4, #4]
  4348f6:	68e1      	ldr	r1, [r4, #12]
  4348f8:	68a5      	ldr	r5, [r4, #8]
  4348fa:	f023 0303 	bic.w	r3, r3, #3
  4348fe:	4423      	add	r3, r4
  434900:	4630      	mov	r0, r6
  434902:	685a      	ldr	r2, [r3, #4]
  434904:	60e9      	str	r1, [r5, #12]
  434906:	f042 0201 	orr.w	r2, r2, #1
  43490a:	608d      	str	r5, [r1, #8]
  43490c:	605a      	str	r2, [r3, #4]
  43490e:	f000 fc31 	bl	435174 <__malloc_unlock>
  434912:	3408      	adds	r4, #8
  434914:	4620      	mov	r0, r4
  434916:	b003      	add	sp, #12
  434918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  43491c:	2910      	cmp	r1, #16
  43491e:	f200 808f 	bhi.w	434a40 <_malloc_r+0x184>
  434922:	f000 fc25 	bl	435170 <__malloc_lock>
  434926:	2510      	movs	r5, #16
  434928:	e7dc      	b.n	4348e4 <_malloc_r+0x28>
  43492a:	0a68      	lsrs	r0, r5, #9
  43492c:	f000 808f 	beq.w	434a4e <_malloc_r+0x192>
  434930:	2804      	cmp	r0, #4
  434932:	f200 8154 	bhi.w	434bde <_malloc_r+0x322>
  434936:	09a8      	lsrs	r0, r5, #6
  434938:	3038      	adds	r0, #56	; 0x38
  43493a:	0041      	lsls	r1, r0, #1
  43493c:	4fac      	ldr	r7, [pc, #688]	; (434bf0 <_malloc_r+0x334>)
  43493e:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  434942:	68cc      	ldr	r4, [r1, #12]
  434944:	42a1      	cmp	r1, r4
  434946:	d106      	bne.n	434956 <_malloc_r+0x9a>
  434948:	e00c      	b.n	434964 <_malloc_r+0xa8>
  43494a:	2a00      	cmp	r2, #0
  43494c:	f280 8082 	bge.w	434a54 <_malloc_r+0x198>
  434950:	68e4      	ldr	r4, [r4, #12]
  434952:	42a1      	cmp	r1, r4
  434954:	d006      	beq.n	434964 <_malloc_r+0xa8>
  434956:	6863      	ldr	r3, [r4, #4]
  434958:	f023 0303 	bic.w	r3, r3, #3
  43495c:	1b5a      	subs	r2, r3, r5
  43495e:	2a0f      	cmp	r2, #15
  434960:	ddf3      	ble.n	43494a <_malloc_r+0x8e>
  434962:	3801      	subs	r0, #1
  434964:	3001      	adds	r0, #1
  434966:	49a2      	ldr	r1, [pc, #648]	; (434bf0 <_malloc_r+0x334>)
  434968:	693c      	ldr	r4, [r7, #16]
  43496a:	f101 0e08 	add.w	lr, r1, #8
  43496e:	4574      	cmp	r4, lr
  434970:	f000 817d 	beq.w	434c6e <_malloc_r+0x3b2>
  434974:	6863      	ldr	r3, [r4, #4]
  434976:	f023 0303 	bic.w	r3, r3, #3
  43497a:	1b5a      	subs	r2, r3, r5
  43497c:	2a0f      	cmp	r2, #15
  43497e:	f300 8163 	bgt.w	434c48 <_malloc_r+0x38c>
  434982:	2a00      	cmp	r2, #0
  434984:	f8c1 e014 	str.w	lr, [r1, #20]
  434988:	f8c1 e010 	str.w	lr, [r1, #16]
  43498c:	da73      	bge.n	434a76 <_malloc_r+0x1ba>
  43498e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  434992:	f080 8139 	bcs.w	434c08 <_malloc_r+0x34c>
  434996:	08db      	lsrs	r3, r3, #3
  434998:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  43499c:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  4349a0:	684a      	ldr	r2, [r1, #4]
  4349a2:	f8d8 9008 	ldr.w	r9, [r8, #8]
  4349a6:	f8c4 9008 	str.w	r9, [r4, #8]
  4349aa:	2301      	movs	r3, #1
  4349ac:	fa03 f30c 	lsl.w	r3, r3, ip
  4349b0:	4313      	orrs	r3, r2
  4349b2:	f8c4 800c 	str.w	r8, [r4, #12]
  4349b6:	604b      	str	r3, [r1, #4]
  4349b8:	f8c8 4008 	str.w	r4, [r8, #8]
  4349bc:	f8c9 400c 	str.w	r4, [r9, #12]
  4349c0:	1082      	asrs	r2, r0, #2
  4349c2:	2401      	movs	r4, #1
  4349c4:	4094      	lsls	r4, r2
  4349c6:	429c      	cmp	r4, r3
  4349c8:	d862      	bhi.n	434a90 <_malloc_r+0x1d4>
  4349ca:	4223      	tst	r3, r4
  4349cc:	d106      	bne.n	4349dc <_malloc_r+0x120>
  4349ce:	f020 0003 	bic.w	r0, r0, #3
  4349d2:	0064      	lsls	r4, r4, #1
  4349d4:	4223      	tst	r3, r4
  4349d6:	f100 0004 	add.w	r0, r0, #4
  4349da:	d0fa      	beq.n	4349d2 <_malloc_r+0x116>
  4349dc:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
  4349e0:	46c4      	mov	ip, r8
  4349e2:	4681      	mov	r9, r0
  4349e4:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4349e8:	459c      	cmp	ip, r3
  4349ea:	d107      	bne.n	4349fc <_malloc_r+0x140>
  4349ec:	e141      	b.n	434c72 <_malloc_r+0x3b6>
  4349ee:	2900      	cmp	r1, #0
  4349f0:	f280 8151 	bge.w	434c96 <_malloc_r+0x3da>
  4349f4:	68db      	ldr	r3, [r3, #12]
  4349f6:	459c      	cmp	ip, r3
  4349f8:	f000 813b 	beq.w	434c72 <_malloc_r+0x3b6>
  4349fc:	685a      	ldr	r2, [r3, #4]
  4349fe:	f022 0203 	bic.w	r2, r2, #3
  434a02:	1b51      	subs	r1, r2, r5
  434a04:	290f      	cmp	r1, #15
  434a06:	ddf2      	ble.n	4349ee <_malloc_r+0x132>
  434a08:	461c      	mov	r4, r3
  434a0a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  434a0e:	f854 8f08 	ldr.w	r8, [r4, #8]!
  434a12:	195a      	adds	r2, r3, r5
  434a14:	f045 0901 	orr.w	r9, r5, #1
  434a18:	f041 0501 	orr.w	r5, r1, #1
  434a1c:	f8c3 9004 	str.w	r9, [r3, #4]
  434a20:	4630      	mov	r0, r6
  434a22:	f8c8 c00c 	str.w	ip, [r8, #12]
  434a26:	f8cc 8008 	str.w	r8, [ip, #8]
  434a2a:	617a      	str	r2, [r7, #20]
  434a2c:	613a      	str	r2, [r7, #16]
  434a2e:	f8c2 e00c 	str.w	lr, [r2, #12]
  434a32:	f8c2 e008 	str.w	lr, [r2, #8]
  434a36:	6055      	str	r5, [r2, #4]
  434a38:	5051      	str	r1, [r2, r1]
  434a3a:	f000 fb9b 	bl	435174 <__malloc_unlock>
  434a3e:	e769      	b.n	434914 <_malloc_r+0x58>
  434a40:	2400      	movs	r4, #0
  434a42:	230c      	movs	r3, #12
  434a44:	4620      	mov	r0, r4
  434a46:	6033      	str	r3, [r6, #0]
  434a48:	b003      	add	sp, #12
  434a4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  434a4e:	217e      	movs	r1, #126	; 0x7e
  434a50:	203f      	movs	r0, #63	; 0x3f
  434a52:	e773      	b.n	43493c <_malloc_r+0x80>
  434a54:	4423      	add	r3, r4
  434a56:	68e1      	ldr	r1, [r4, #12]
  434a58:	685a      	ldr	r2, [r3, #4]
  434a5a:	68a5      	ldr	r5, [r4, #8]
  434a5c:	f042 0201 	orr.w	r2, r2, #1
  434a60:	60e9      	str	r1, [r5, #12]
  434a62:	4630      	mov	r0, r6
  434a64:	608d      	str	r5, [r1, #8]
  434a66:	605a      	str	r2, [r3, #4]
  434a68:	f000 fb84 	bl	435174 <__malloc_unlock>
  434a6c:	3408      	adds	r4, #8
  434a6e:	4620      	mov	r0, r4
  434a70:	b003      	add	sp, #12
  434a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  434a76:	4423      	add	r3, r4
  434a78:	4630      	mov	r0, r6
  434a7a:	685a      	ldr	r2, [r3, #4]
  434a7c:	f042 0201 	orr.w	r2, r2, #1
  434a80:	605a      	str	r2, [r3, #4]
  434a82:	f000 fb77 	bl	435174 <__malloc_unlock>
  434a86:	3408      	adds	r4, #8
  434a88:	4620      	mov	r0, r4
  434a8a:	b003      	add	sp, #12
  434a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  434a90:	68bc      	ldr	r4, [r7, #8]
  434a92:	6863      	ldr	r3, [r4, #4]
  434a94:	f023 0803 	bic.w	r8, r3, #3
  434a98:	4545      	cmp	r5, r8
  434a9a:	d804      	bhi.n	434aa6 <_malloc_r+0x1ea>
  434a9c:	ebc5 0308 	rsb	r3, r5, r8
  434aa0:	2b0f      	cmp	r3, #15
  434aa2:	f300 808c 	bgt.w	434bbe <_malloc_r+0x302>
  434aa6:	4b53      	ldr	r3, [pc, #332]	; (434bf4 <_malloc_r+0x338>)
  434aa8:	f8df a158 	ldr.w	sl, [pc, #344]	; 434c04 <_malloc_r+0x348>
  434aac:	681a      	ldr	r2, [r3, #0]
  434aae:	f8da 3000 	ldr.w	r3, [sl]
  434ab2:	3301      	adds	r3, #1
  434ab4:	442a      	add	r2, r5
  434ab6:	eb04 0b08 	add.w	fp, r4, r8
  434aba:	f000 8150 	beq.w	434d5e <_malloc_r+0x4a2>
  434abe:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  434ac2:	320f      	adds	r2, #15
  434ac4:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  434ac8:	f022 020f 	bic.w	r2, r2, #15
  434acc:	4611      	mov	r1, r2
  434ace:	4630      	mov	r0, r6
  434ad0:	9201      	str	r2, [sp, #4]
  434ad2:	f000 fd4f 	bl	435574 <_sbrk_r>
  434ad6:	f1b0 3fff 	cmp.w	r0, #4294967295
  434ada:	4681      	mov	r9, r0
  434adc:	9a01      	ldr	r2, [sp, #4]
  434ade:	f000 8147 	beq.w	434d70 <_malloc_r+0x4b4>
  434ae2:	4583      	cmp	fp, r0
  434ae4:	f200 80ee 	bhi.w	434cc4 <_malloc_r+0x408>
  434ae8:	4b43      	ldr	r3, [pc, #268]	; (434bf8 <_malloc_r+0x33c>)
  434aea:	6819      	ldr	r1, [r3, #0]
  434aec:	45cb      	cmp	fp, r9
  434aee:	4411      	add	r1, r2
  434af0:	6019      	str	r1, [r3, #0]
  434af2:	f000 8142 	beq.w	434d7a <_malloc_r+0x4be>
  434af6:	f8da 0000 	ldr.w	r0, [sl]
  434afa:	f8df e108 	ldr.w	lr, [pc, #264]	; 434c04 <_malloc_r+0x348>
  434afe:	3001      	adds	r0, #1
  434b00:	bf1b      	ittet	ne
  434b02:	ebcb 0b09 	rsbne	fp, fp, r9
  434b06:	4459      	addne	r1, fp
  434b08:	f8ce 9000 	streq.w	r9, [lr]
  434b0c:	6019      	strne	r1, [r3, #0]
  434b0e:	f019 0107 	ands.w	r1, r9, #7
  434b12:	f000 8107 	beq.w	434d24 <_malloc_r+0x468>
  434b16:	f1c1 0008 	rsb	r0, r1, #8
  434b1a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  434b1e:	4481      	add	r9, r0
  434b20:	3108      	adds	r1, #8
  434b22:	444a      	add	r2, r9
  434b24:	f3c2 020b 	ubfx	r2, r2, #0, #12
  434b28:	ebc2 0a01 	rsb	sl, r2, r1
  434b2c:	4651      	mov	r1, sl
  434b2e:	4630      	mov	r0, r6
  434b30:	9301      	str	r3, [sp, #4]
  434b32:	f000 fd1f 	bl	435574 <_sbrk_r>
  434b36:	1c43      	adds	r3, r0, #1
  434b38:	9b01      	ldr	r3, [sp, #4]
  434b3a:	f000 812c 	beq.w	434d96 <_malloc_r+0x4da>
  434b3e:	ebc9 0200 	rsb	r2, r9, r0
  434b42:	4452      	add	r2, sl
  434b44:	f042 0201 	orr.w	r2, r2, #1
  434b48:	6819      	ldr	r1, [r3, #0]
  434b4a:	f8c7 9008 	str.w	r9, [r7, #8]
  434b4e:	4451      	add	r1, sl
  434b50:	42bc      	cmp	r4, r7
  434b52:	f8c9 2004 	str.w	r2, [r9, #4]
  434b56:	6019      	str	r1, [r3, #0]
  434b58:	f8df a09c 	ldr.w	sl, [pc, #156]	; 434bf8 <_malloc_r+0x33c>
  434b5c:	d016      	beq.n	434b8c <_malloc_r+0x2d0>
  434b5e:	f1b8 0f0f 	cmp.w	r8, #15
  434b62:	f240 80ee 	bls.w	434d42 <_malloc_r+0x486>
  434b66:	6862      	ldr	r2, [r4, #4]
  434b68:	f1a8 030c 	sub.w	r3, r8, #12
  434b6c:	f023 0307 	bic.w	r3, r3, #7
  434b70:	18e0      	adds	r0, r4, r3
  434b72:	f002 0201 	and.w	r2, r2, #1
  434b76:	f04f 0e05 	mov.w	lr, #5
  434b7a:	431a      	orrs	r2, r3
  434b7c:	2b0f      	cmp	r3, #15
  434b7e:	6062      	str	r2, [r4, #4]
  434b80:	f8c0 e004 	str.w	lr, [r0, #4]
  434b84:	f8c0 e008 	str.w	lr, [r0, #8]
  434b88:	f200 8109 	bhi.w	434d9e <_malloc_r+0x4e2>
  434b8c:	4b1b      	ldr	r3, [pc, #108]	; (434bfc <_malloc_r+0x340>)
  434b8e:	68bc      	ldr	r4, [r7, #8]
  434b90:	681a      	ldr	r2, [r3, #0]
  434b92:	4291      	cmp	r1, r2
  434b94:	bf88      	it	hi
  434b96:	6019      	strhi	r1, [r3, #0]
  434b98:	4b19      	ldr	r3, [pc, #100]	; (434c00 <_malloc_r+0x344>)
  434b9a:	681a      	ldr	r2, [r3, #0]
  434b9c:	4291      	cmp	r1, r2
  434b9e:	6862      	ldr	r2, [r4, #4]
  434ba0:	bf88      	it	hi
  434ba2:	6019      	strhi	r1, [r3, #0]
  434ba4:	f022 0203 	bic.w	r2, r2, #3
  434ba8:	4295      	cmp	r5, r2
  434baa:	eba2 0305 	sub.w	r3, r2, r5
  434bae:	d801      	bhi.n	434bb4 <_malloc_r+0x2f8>
  434bb0:	2b0f      	cmp	r3, #15
  434bb2:	dc04      	bgt.n	434bbe <_malloc_r+0x302>
  434bb4:	4630      	mov	r0, r6
  434bb6:	f000 fadd 	bl	435174 <__malloc_unlock>
  434bba:	2400      	movs	r4, #0
  434bbc:	e6aa      	b.n	434914 <_malloc_r+0x58>
  434bbe:	1962      	adds	r2, r4, r5
  434bc0:	f043 0301 	orr.w	r3, r3, #1
  434bc4:	f045 0501 	orr.w	r5, r5, #1
  434bc8:	6065      	str	r5, [r4, #4]
  434bca:	4630      	mov	r0, r6
  434bcc:	60ba      	str	r2, [r7, #8]
  434bce:	6053      	str	r3, [r2, #4]
  434bd0:	f000 fad0 	bl	435174 <__malloc_unlock>
  434bd4:	3408      	adds	r4, #8
  434bd6:	4620      	mov	r0, r4
  434bd8:	b003      	add	sp, #12
  434bda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  434bde:	2814      	cmp	r0, #20
  434be0:	d968      	bls.n	434cb4 <_malloc_r+0x3f8>
  434be2:	2854      	cmp	r0, #84	; 0x54
  434be4:	f200 8097 	bhi.w	434d16 <_malloc_r+0x45a>
  434be8:	0b28      	lsrs	r0, r5, #12
  434bea:	306e      	adds	r0, #110	; 0x6e
  434bec:	0041      	lsls	r1, r0, #1
  434bee:	e6a5      	b.n	43493c <_malloc_r+0x80>
  434bf0:	200012d4 	.word	0x200012d4
  434bf4:	20002f14 	.word	0x20002f14
  434bf8:	20002f18 	.word	0x20002f18
  434bfc:	20002f10 	.word	0x20002f10
  434c00:	20002f0c 	.word	0x20002f0c
  434c04:	200016e0 	.word	0x200016e0
  434c08:	0a5a      	lsrs	r2, r3, #9
  434c0a:	2a04      	cmp	r2, #4
  434c0c:	d955      	bls.n	434cba <_malloc_r+0x3fe>
  434c0e:	2a14      	cmp	r2, #20
  434c10:	f200 80a7 	bhi.w	434d62 <_malloc_r+0x4a6>
  434c14:	325b      	adds	r2, #91	; 0x5b
  434c16:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  434c1a:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
  434c1e:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 434ddc <_malloc_r+0x520>
  434c22:	f8dc 1008 	ldr.w	r1, [ip, #8]
  434c26:	4561      	cmp	r1, ip
  434c28:	d07f      	beq.n	434d2a <_malloc_r+0x46e>
  434c2a:	684a      	ldr	r2, [r1, #4]
  434c2c:	f022 0203 	bic.w	r2, r2, #3
  434c30:	4293      	cmp	r3, r2
  434c32:	d202      	bcs.n	434c3a <_malloc_r+0x37e>
  434c34:	6889      	ldr	r1, [r1, #8]
  434c36:	458c      	cmp	ip, r1
  434c38:	d1f7      	bne.n	434c2a <_malloc_r+0x36e>
  434c3a:	68ca      	ldr	r2, [r1, #12]
  434c3c:	687b      	ldr	r3, [r7, #4]
  434c3e:	60e2      	str	r2, [r4, #12]
  434c40:	60a1      	str	r1, [r4, #8]
  434c42:	6094      	str	r4, [r2, #8]
  434c44:	60cc      	str	r4, [r1, #12]
  434c46:	e6bb      	b.n	4349c0 <_malloc_r+0x104>
  434c48:	1963      	adds	r3, r4, r5
  434c4a:	f042 0701 	orr.w	r7, r2, #1
  434c4e:	f045 0501 	orr.w	r5, r5, #1
  434c52:	6065      	str	r5, [r4, #4]
  434c54:	4630      	mov	r0, r6
  434c56:	614b      	str	r3, [r1, #20]
  434c58:	610b      	str	r3, [r1, #16]
  434c5a:	f8c3 e00c 	str.w	lr, [r3, #12]
  434c5e:	f8c3 e008 	str.w	lr, [r3, #8]
  434c62:	605f      	str	r7, [r3, #4]
  434c64:	509a      	str	r2, [r3, r2]
  434c66:	3408      	adds	r4, #8
  434c68:	f000 fa84 	bl	435174 <__malloc_unlock>
  434c6c:	e652      	b.n	434914 <_malloc_r+0x58>
  434c6e:	684b      	ldr	r3, [r1, #4]
  434c70:	e6a6      	b.n	4349c0 <_malloc_r+0x104>
  434c72:	f109 0901 	add.w	r9, r9, #1
  434c76:	f019 0f03 	tst.w	r9, #3
  434c7a:	f10c 0c08 	add.w	ip, ip, #8
  434c7e:	f47f aeb1 	bne.w	4349e4 <_malloc_r+0x128>
  434c82:	e02c      	b.n	434cde <_malloc_r+0x422>
  434c84:	f104 0308 	add.w	r3, r4, #8
  434c88:	6964      	ldr	r4, [r4, #20]
  434c8a:	42a3      	cmp	r3, r4
  434c8c:	bf08      	it	eq
  434c8e:	3002      	addeq	r0, #2
  434c90:	f43f ae69 	beq.w	434966 <_malloc_r+0xaa>
  434c94:	e62e      	b.n	4348f4 <_malloc_r+0x38>
  434c96:	441a      	add	r2, r3
  434c98:	461c      	mov	r4, r3
  434c9a:	6851      	ldr	r1, [r2, #4]
  434c9c:	68db      	ldr	r3, [r3, #12]
  434c9e:	f854 5f08 	ldr.w	r5, [r4, #8]!
  434ca2:	f041 0101 	orr.w	r1, r1, #1
  434ca6:	6051      	str	r1, [r2, #4]
  434ca8:	4630      	mov	r0, r6
  434caa:	60eb      	str	r3, [r5, #12]
  434cac:	609d      	str	r5, [r3, #8]
  434cae:	f000 fa61 	bl	435174 <__malloc_unlock>
  434cb2:	e62f      	b.n	434914 <_malloc_r+0x58>
  434cb4:	305b      	adds	r0, #91	; 0x5b
  434cb6:	0041      	lsls	r1, r0, #1
  434cb8:	e640      	b.n	43493c <_malloc_r+0x80>
  434cba:	099a      	lsrs	r2, r3, #6
  434cbc:	3238      	adds	r2, #56	; 0x38
  434cbe:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  434cc2:	e7aa      	b.n	434c1a <_malloc_r+0x35e>
  434cc4:	42bc      	cmp	r4, r7
  434cc6:	4b45      	ldr	r3, [pc, #276]	; (434ddc <_malloc_r+0x520>)
  434cc8:	f43f af0e 	beq.w	434ae8 <_malloc_r+0x22c>
  434ccc:	689c      	ldr	r4, [r3, #8]
  434cce:	6862      	ldr	r2, [r4, #4]
  434cd0:	f022 0203 	bic.w	r2, r2, #3
  434cd4:	e768      	b.n	434ba8 <_malloc_r+0x2ec>
  434cd6:	f8d8 8000 	ldr.w	r8, [r8]
  434cda:	4598      	cmp	r8, r3
  434cdc:	d17c      	bne.n	434dd8 <_malloc_r+0x51c>
  434cde:	f010 0f03 	tst.w	r0, #3
  434ce2:	f1a8 0308 	sub.w	r3, r8, #8
  434ce6:	f100 30ff 	add.w	r0, r0, #4294967295
  434cea:	d1f4      	bne.n	434cd6 <_malloc_r+0x41a>
  434cec:	687b      	ldr	r3, [r7, #4]
  434cee:	ea23 0304 	bic.w	r3, r3, r4
  434cf2:	607b      	str	r3, [r7, #4]
  434cf4:	0064      	lsls	r4, r4, #1
  434cf6:	429c      	cmp	r4, r3
  434cf8:	f63f aeca 	bhi.w	434a90 <_malloc_r+0x1d4>
  434cfc:	2c00      	cmp	r4, #0
  434cfe:	f43f aec7 	beq.w	434a90 <_malloc_r+0x1d4>
  434d02:	4223      	tst	r3, r4
  434d04:	4648      	mov	r0, r9
  434d06:	f47f ae69 	bne.w	4349dc <_malloc_r+0x120>
  434d0a:	0064      	lsls	r4, r4, #1
  434d0c:	4223      	tst	r3, r4
  434d0e:	f100 0004 	add.w	r0, r0, #4
  434d12:	d0fa      	beq.n	434d0a <_malloc_r+0x44e>
  434d14:	e662      	b.n	4349dc <_malloc_r+0x120>
  434d16:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
  434d1a:	d818      	bhi.n	434d4e <_malloc_r+0x492>
  434d1c:	0be8      	lsrs	r0, r5, #15
  434d1e:	3077      	adds	r0, #119	; 0x77
  434d20:	0041      	lsls	r1, r0, #1
  434d22:	e60b      	b.n	43493c <_malloc_r+0x80>
  434d24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  434d28:	e6fb      	b.n	434b22 <_malloc_r+0x266>
  434d2a:	f8d8 3004 	ldr.w	r3, [r8, #4]
  434d2e:	1092      	asrs	r2, r2, #2
  434d30:	f04f 0c01 	mov.w	ip, #1
  434d34:	fa0c f202 	lsl.w	r2, ip, r2
  434d38:	4313      	orrs	r3, r2
  434d3a:	f8c8 3004 	str.w	r3, [r8, #4]
  434d3e:	460a      	mov	r2, r1
  434d40:	e77d      	b.n	434c3e <_malloc_r+0x382>
  434d42:	2301      	movs	r3, #1
  434d44:	f8c9 3004 	str.w	r3, [r9, #4]
  434d48:	464c      	mov	r4, r9
  434d4a:	2200      	movs	r2, #0
  434d4c:	e72c      	b.n	434ba8 <_malloc_r+0x2ec>
  434d4e:	f240 5354 	movw	r3, #1364	; 0x554
  434d52:	4298      	cmp	r0, r3
  434d54:	d81c      	bhi.n	434d90 <_malloc_r+0x4d4>
  434d56:	0ca8      	lsrs	r0, r5, #18
  434d58:	307c      	adds	r0, #124	; 0x7c
  434d5a:	0041      	lsls	r1, r0, #1
  434d5c:	e5ee      	b.n	43493c <_malloc_r+0x80>
  434d5e:	3210      	adds	r2, #16
  434d60:	e6b4      	b.n	434acc <_malloc_r+0x210>
  434d62:	2a54      	cmp	r2, #84	; 0x54
  434d64:	d823      	bhi.n	434dae <_malloc_r+0x4f2>
  434d66:	0b1a      	lsrs	r2, r3, #12
  434d68:	326e      	adds	r2, #110	; 0x6e
  434d6a:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  434d6e:	e754      	b.n	434c1a <_malloc_r+0x35e>
  434d70:	68bc      	ldr	r4, [r7, #8]
  434d72:	6862      	ldr	r2, [r4, #4]
  434d74:	f022 0203 	bic.w	r2, r2, #3
  434d78:	e716      	b.n	434ba8 <_malloc_r+0x2ec>
  434d7a:	f3cb 000b 	ubfx	r0, fp, #0, #12
  434d7e:	2800      	cmp	r0, #0
  434d80:	f47f aeb9 	bne.w	434af6 <_malloc_r+0x23a>
  434d84:	4442      	add	r2, r8
  434d86:	68bb      	ldr	r3, [r7, #8]
  434d88:	f042 0201 	orr.w	r2, r2, #1
  434d8c:	605a      	str	r2, [r3, #4]
  434d8e:	e6fd      	b.n	434b8c <_malloc_r+0x2d0>
  434d90:	21fc      	movs	r1, #252	; 0xfc
  434d92:	207e      	movs	r0, #126	; 0x7e
  434d94:	e5d2      	b.n	43493c <_malloc_r+0x80>
  434d96:	2201      	movs	r2, #1
  434d98:	f04f 0a00 	mov.w	sl, #0
  434d9c:	e6d4      	b.n	434b48 <_malloc_r+0x28c>
  434d9e:	f104 0108 	add.w	r1, r4, #8
  434da2:	4630      	mov	r0, r6
  434da4:	f7ff fa2c 	bl	434200 <_free_r>
  434da8:	f8da 1000 	ldr.w	r1, [sl]
  434dac:	e6ee      	b.n	434b8c <_malloc_r+0x2d0>
  434dae:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  434db2:	d804      	bhi.n	434dbe <_malloc_r+0x502>
  434db4:	0bda      	lsrs	r2, r3, #15
  434db6:	3277      	adds	r2, #119	; 0x77
  434db8:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  434dbc:	e72d      	b.n	434c1a <_malloc_r+0x35e>
  434dbe:	f240 5154 	movw	r1, #1364	; 0x554
  434dc2:	428a      	cmp	r2, r1
  434dc4:	d804      	bhi.n	434dd0 <_malloc_r+0x514>
  434dc6:	0c9a      	lsrs	r2, r3, #18
  434dc8:	327c      	adds	r2, #124	; 0x7c
  434dca:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  434dce:	e724      	b.n	434c1a <_malloc_r+0x35e>
  434dd0:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
  434dd4:	227e      	movs	r2, #126	; 0x7e
  434dd6:	e720      	b.n	434c1a <_malloc_r+0x35e>
  434dd8:	687b      	ldr	r3, [r7, #4]
  434dda:	e78b      	b.n	434cf4 <_malloc_r+0x438>
  434ddc:	200012d4 	.word	0x200012d4

00434de0 <memchr>:
  434de0:	0783      	lsls	r3, r0, #30
  434de2:	b470      	push	{r4, r5, r6}
  434de4:	b2c9      	uxtb	r1, r1
  434de6:	d040      	beq.n	434e6a <memchr+0x8a>
  434de8:	1e54      	subs	r4, r2, #1
  434dea:	2a00      	cmp	r2, #0
  434dec:	d03f      	beq.n	434e6e <memchr+0x8e>
  434dee:	7803      	ldrb	r3, [r0, #0]
  434df0:	428b      	cmp	r3, r1
  434df2:	bf18      	it	ne
  434df4:	1c43      	addne	r3, r0, #1
  434df6:	d106      	bne.n	434e06 <memchr+0x26>
  434df8:	e01d      	b.n	434e36 <memchr+0x56>
  434dfa:	b1f4      	cbz	r4, 434e3a <memchr+0x5a>
  434dfc:	7802      	ldrb	r2, [r0, #0]
  434dfe:	428a      	cmp	r2, r1
  434e00:	f104 34ff 	add.w	r4, r4, #4294967295
  434e04:	d017      	beq.n	434e36 <memchr+0x56>
  434e06:	f013 0f03 	tst.w	r3, #3
  434e0a:	4618      	mov	r0, r3
  434e0c:	f103 0301 	add.w	r3, r3, #1
  434e10:	d1f3      	bne.n	434dfa <memchr+0x1a>
  434e12:	2c03      	cmp	r4, #3
  434e14:	d814      	bhi.n	434e40 <memchr+0x60>
  434e16:	b184      	cbz	r4, 434e3a <memchr+0x5a>
  434e18:	7803      	ldrb	r3, [r0, #0]
  434e1a:	428b      	cmp	r3, r1
  434e1c:	d00b      	beq.n	434e36 <memchr+0x56>
  434e1e:	1905      	adds	r5, r0, r4
  434e20:	1c43      	adds	r3, r0, #1
  434e22:	e002      	b.n	434e2a <memchr+0x4a>
  434e24:	7802      	ldrb	r2, [r0, #0]
  434e26:	428a      	cmp	r2, r1
  434e28:	d005      	beq.n	434e36 <memchr+0x56>
  434e2a:	42ab      	cmp	r3, r5
  434e2c:	4618      	mov	r0, r3
  434e2e:	f103 0301 	add.w	r3, r3, #1
  434e32:	d1f7      	bne.n	434e24 <memchr+0x44>
  434e34:	2000      	movs	r0, #0
  434e36:	bc70      	pop	{r4, r5, r6}
  434e38:	4770      	bx	lr
  434e3a:	4620      	mov	r0, r4
  434e3c:	bc70      	pop	{r4, r5, r6}
  434e3e:	4770      	bx	lr
  434e40:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  434e44:	4602      	mov	r2, r0
  434e46:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  434e4a:	4610      	mov	r0, r2
  434e4c:	3204      	adds	r2, #4
  434e4e:	6803      	ldr	r3, [r0, #0]
  434e50:	4073      	eors	r3, r6
  434e52:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
  434e56:	ea25 0303 	bic.w	r3, r5, r3
  434e5a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  434e5e:	d1da      	bne.n	434e16 <memchr+0x36>
  434e60:	3c04      	subs	r4, #4
  434e62:	2c03      	cmp	r4, #3
  434e64:	4610      	mov	r0, r2
  434e66:	d8f0      	bhi.n	434e4a <memchr+0x6a>
  434e68:	e7d5      	b.n	434e16 <memchr+0x36>
  434e6a:	4614      	mov	r4, r2
  434e6c:	e7d1      	b.n	434e12 <memchr+0x32>
  434e6e:	4610      	mov	r0, r2
  434e70:	e7e1      	b.n	434e36 <memchr+0x56>
  434e72:	bf00      	nop

00434e74 <memcmp>:
  434e74:	2a03      	cmp	r2, #3
  434e76:	b470      	push	{r4, r5, r6}
  434e78:	d926      	bls.n	434ec8 <memcmp+0x54>
  434e7a:	ea40 0301 	orr.w	r3, r0, r1
  434e7e:	079b      	lsls	r3, r3, #30
  434e80:	d011      	beq.n	434ea6 <memcmp+0x32>
  434e82:	7804      	ldrb	r4, [r0, #0]
  434e84:	780d      	ldrb	r5, [r1, #0]
  434e86:	42ac      	cmp	r4, r5
  434e88:	d122      	bne.n	434ed0 <memcmp+0x5c>
  434e8a:	4402      	add	r2, r0
  434e8c:	1c43      	adds	r3, r0, #1
  434e8e:	e005      	b.n	434e9c <memcmp+0x28>
  434e90:	f813 4b01 	ldrb.w	r4, [r3], #1
  434e94:	f811 5f01 	ldrb.w	r5, [r1, #1]!
  434e98:	42ac      	cmp	r4, r5
  434e9a:	d119      	bne.n	434ed0 <memcmp+0x5c>
  434e9c:	4293      	cmp	r3, r2
  434e9e:	d1f7      	bne.n	434e90 <memcmp+0x1c>
  434ea0:	2000      	movs	r0, #0
  434ea2:	bc70      	pop	{r4, r5, r6}
  434ea4:	4770      	bx	lr
  434ea6:	460c      	mov	r4, r1
  434ea8:	4603      	mov	r3, r0
  434eaa:	681e      	ldr	r6, [r3, #0]
  434eac:	6825      	ldr	r5, [r4, #0]
  434eae:	42ae      	cmp	r6, r5
  434eb0:	4618      	mov	r0, r3
  434eb2:	4621      	mov	r1, r4
  434eb4:	f103 0304 	add.w	r3, r3, #4
  434eb8:	f104 0404 	add.w	r4, r4, #4
  434ebc:	d104      	bne.n	434ec8 <memcmp+0x54>
  434ebe:	3a04      	subs	r2, #4
  434ec0:	2a03      	cmp	r2, #3
  434ec2:	4618      	mov	r0, r3
  434ec4:	4621      	mov	r1, r4
  434ec6:	d8f0      	bhi.n	434eaa <memcmp+0x36>
  434ec8:	2a00      	cmp	r2, #0
  434eca:	d1da      	bne.n	434e82 <memcmp+0xe>
  434ecc:	4610      	mov	r0, r2
  434ece:	e7e8      	b.n	434ea2 <memcmp+0x2e>
  434ed0:	1b60      	subs	r0, r4, r5
  434ed2:	bc70      	pop	{r4, r5, r6}
  434ed4:	4770      	bx	lr
  434ed6:	bf00      	nop

00434ed8 <memcpy>:
  434ed8:	4684      	mov	ip, r0
  434eda:	ea41 0300 	orr.w	r3, r1, r0
  434ede:	f013 0303 	ands.w	r3, r3, #3
  434ee2:	d16d      	bne.n	434fc0 <memcpy+0xe8>
  434ee4:	3a40      	subs	r2, #64	; 0x40
  434ee6:	d341      	bcc.n	434f6c <memcpy+0x94>
  434ee8:	f851 3b04 	ldr.w	r3, [r1], #4
  434eec:	f840 3b04 	str.w	r3, [r0], #4
  434ef0:	f851 3b04 	ldr.w	r3, [r1], #4
  434ef4:	f840 3b04 	str.w	r3, [r0], #4
  434ef8:	f851 3b04 	ldr.w	r3, [r1], #4
  434efc:	f840 3b04 	str.w	r3, [r0], #4
  434f00:	f851 3b04 	ldr.w	r3, [r1], #4
  434f04:	f840 3b04 	str.w	r3, [r0], #4
  434f08:	f851 3b04 	ldr.w	r3, [r1], #4
  434f0c:	f840 3b04 	str.w	r3, [r0], #4
  434f10:	f851 3b04 	ldr.w	r3, [r1], #4
  434f14:	f840 3b04 	str.w	r3, [r0], #4
  434f18:	f851 3b04 	ldr.w	r3, [r1], #4
  434f1c:	f840 3b04 	str.w	r3, [r0], #4
  434f20:	f851 3b04 	ldr.w	r3, [r1], #4
  434f24:	f840 3b04 	str.w	r3, [r0], #4
  434f28:	f851 3b04 	ldr.w	r3, [r1], #4
  434f2c:	f840 3b04 	str.w	r3, [r0], #4
  434f30:	f851 3b04 	ldr.w	r3, [r1], #4
  434f34:	f840 3b04 	str.w	r3, [r0], #4
  434f38:	f851 3b04 	ldr.w	r3, [r1], #4
  434f3c:	f840 3b04 	str.w	r3, [r0], #4
  434f40:	f851 3b04 	ldr.w	r3, [r1], #4
  434f44:	f840 3b04 	str.w	r3, [r0], #4
  434f48:	f851 3b04 	ldr.w	r3, [r1], #4
  434f4c:	f840 3b04 	str.w	r3, [r0], #4
  434f50:	f851 3b04 	ldr.w	r3, [r1], #4
  434f54:	f840 3b04 	str.w	r3, [r0], #4
  434f58:	f851 3b04 	ldr.w	r3, [r1], #4
  434f5c:	f840 3b04 	str.w	r3, [r0], #4
  434f60:	f851 3b04 	ldr.w	r3, [r1], #4
  434f64:	f840 3b04 	str.w	r3, [r0], #4
  434f68:	3a40      	subs	r2, #64	; 0x40
  434f6a:	d2bd      	bcs.n	434ee8 <memcpy+0x10>
  434f6c:	3230      	adds	r2, #48	; 0x30
  434f6e:	d311      	bcc.n	434f94 <memcpy+0xbc>
  434f70:	f851 3b04 	ldr.w	r3, [r1], #4
  434f74:	f840 3b04 	str.w	r3, [r0], #4
  434f78:	f851 3b04 	ldr.w	r3, [r1], #4
  434f7c:	f840 3b04 	str.w	r3, [r0], #4
  434f80:	f851 3b04 	ldr.w	r3, [r1], #4
  434f84:	f840 3b04 	str.w	r3, [r0], #4
  434f88:	f851 3b04 	ldr.w	r3, [r1], #4
  434f8c:	f840 3b04 	str.w	r3, [r0], #4
  434f90:	3a10      	subs	r2, #16
  434f92:	d2ed      	bcs.n	434f70 <memcpy+0x98>
  434f94:	320c      	adds	r2, #12
  434f96:	d305      	bcc.n	434fa4 <memcpy+0xcc>
  434f98:	f851 3b04 	ldr.w	r3, [r1], #4
  434f9c:	f840 3b04 	str.w	r3, [r0], #4
  434fa0:	3a04      	subs	r2, #4
  434fa2:	d2f9      	bcs.n	434f98 <memcpy+0xc0>
  434fa4:	3204      	adds	r2, #4
  434fa6:	d008      	beq.n	434fba <memcpy+0xe2>
  434fa8:	07d2      	lsls	r2, r2, #31
  434faa:	bf1c      	itt	ne
  434fac:	f811 3b01 	ldrbne.w	r3, [r1], #1
  434fb0:	f800 3b01 	strbne.w	r3, [r0], #1
  434fb4:	d301      	bcc.n	434fba <memcpy+0xe2>
  434fb6:	880b      	ldrh	r3, [r1, #0]
  434fb8:	8003      	strh	r3, [r0, #0]
  434fba:	4660      	mov	r0, ip
  434fbc:	4770      	bx	lr
  434fbe:	bf00      	nop
  434fc0:	2a08      	cmp	r2, #8
  434fc2:	d313      	bcc.n	434fec <memcpy+0x114>
  434fc4:	078b      	lsls	r3, r1, #30
  434fc6:	d08d      	beq.n	434ee4 <memcpy+0xc>
  434fc8:	f010 0303 	ands.w	r3, r0, #3
  434fcc:	d08a      	beq.n	434ee4 <memcpy+0xc>
  434fce:	f1c3 0304 	rsb	r3, r3, #4
  434fd2:	1ad2      	subs	r2, r2, r3
  434fd4:	07db      	lsls	r3, r3, #31
  434fd6:	bf1c      	itt	ne
  434fd8:	f811 3b01 	ldrbne.w	r3, [r1], #1
  434fdc:	f800 3b01 	strbne.w	r3, [r0], #1
  434fe0:	d380      	bcc.n	434ee4 <memcpy+0xc>
  434fe2:	f831 3b02 	ldrh.w	r3, [r1], #2
  434fe6:	f820 3b02 	strh.w	r3, [r0], #2
  434fea:	e77b      	b.n	434ee4 <memcpy+0xc>
  434fec:	3a04      	subs	r2, #4
  434fee:	d3d9      	bcc.n	434fa4 <memcpy+0xcc>
  434ff0:	3a01      	subs	r2, #1
  434ff2:	f811 3b01 	ldrb.w	r3, [r1], #1
  434ff6:	f800 3b01 	strb.w	r3, [r0], #1
  434ffa:	d2f9      	bcs.n	434ff0 <memcpy+0x118>
  434ffc:	780b      	ldrb	r3, [r1, #0]
  434ffe:	7003      	strb	r3, [r0, #0]
  435000:	784b      	ldrb	r3, [r1, #1]
  435002:	7043      	strb	r3, [r0, #1]
  435004:	788b      	ldrb	r3, [r1, #2]
  435006:	7083      	strb	r3, [r0, #2]
  435008:	4660      	mov	r0, ip
  43500a:	4770      	bx	lr

0043500c <memmove>:
  43500c:	4288      	cmp	r0, r1
  43500e:	b5f0      	push	{r4, r5, r6, r7, lr}
  435010:	d90d      	bls.n	43502e <memmove+0x22>
  435012:	188b      	adds	r3, r1, r2
  435014:	4298      	cmp	r0, r3
  435016:	d20a      	bcs.n	43502e <memmove+0x22>
  435018:	1881      	adds	r1, r0, r2
  43501a:	2a00      	cmp	r2, #0
  43501c:	d054      	beq.n	4350c8 <memmove+0xbc>
  43501e:	1a9a      	subs	r2, r3, r2
  435020:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  435024:	f801 4d01 	strb.w	r4, [r1, #-1]!
  435028:	4293      	cmp	r3, r2
  43502a:	d1f9      	bne.n	435020 <memmove+0x14>
  43502c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  43502e:	2a0f      	cmp	r2, #15
  435030:	d948      	bls.n	4350c4 <memmove+0xb8>
  435032:	ea40 0301 	orr.w	r3, r0, r1
  435036:	079b      	lsls	r3, r3, #30
  435038:	d147      	bne.n	4350ca <memmove+0xbe>
  43503a:	f100 0410 	add.w	r4, r0, #16
  43503e:	f101 0310 	add.w	r3, r1, #16
  435042:	4615      	mov	r5, r2
  435044:	f853 6c10 	ldr.w	r6, [r3, #-16]
  435048:	f844 6c10 	str.w	r6, [r4, #-16]
  43504c:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  435050:	f844 6c0c 	str.w	r6, [r4, #-12]
  435054:	f853 6c08 	ldr.w	r6, [r3, #-8]
  435058:	f844 6c08 	str.w	r6, [r4, #-8]
  43505c:	3d10      	subs	r5, #16
  43505e:	f853 6c04 	ldr.w	r6, [r3, #-4]
  435062:	f844 6c04 	str.w	r6, [r4, #-4]
  435066:	2d0f      	cmp	r5, #15
  435068:	f103 0310 	add.w	r3, r3, #16
  43506c:	f104 0410 	add.w	r4, r4, #16
  435070:	d8e8      	bhi.n	435044 <memmove+0x38>
  435072:	f1a2 0310 	sub.w	r3, r2, #16
  435076:	f023 030f 	bic.w	r3, r3, #15
  43507a:	f002 0e0f 	and.w	lr, r2, #15
  43507e:	3310      	adds	r3, #16
  435080:	f1be 0f03 	cmp.w	lr, #3
  435084:	4419      	add	r1, r3
  435086:	4403      	add	r3, r0
  435088:	d921      	bls.n	4350ce <memmove+0xc2>
  43508a:	1f1e      	subs	r6, r3, #4
  43508c:	460d      	mov	r5, r1
  43508e:	4674      	mov	r4, lr
  435090:	3c04      	subs	r4, #4
  435092:	f855 7b04 	ldr.w	r7, [r5], #4
  435096:	f846 7f04 	str.w	r7, [r6, #4]!
  43509a:	2c03      	cmp	r4, #3
  43509c:	d8f8      	bhi.n	435090 <memmove+0x84>
  43509e:	f1ae 0404 	sub.w	r4, lr, #4
  4350a2:	f024 0403 	bic.w	r4, r4, #3
  4350a6:	3404      	adds	r4, #4
  4350a8:	4423      	add	r3, r4
  4350aa:	4421      	add	r1, r4
  4350ac:	f002 0203 	and.w	r2, r2, #3
  4350b0:	b152      	cbz	r2, 4350c8 <memmove+0xbc>
  4350b2:	3b01      	subs	r3, #1
  4350b4:	440a      	add	r2, r1
  4350b6:	f811 4b01 	ldrb.w	r4, [r1], #1
  4350ba:	f803 4f01 	strb.w	r4, [r3, #1]!
  4350be:	4291      	cmp	r1, r2
  4350c0:	d1f9      	bne.n	4350b6 <memmove+0xaa>
  4350c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4350c4:	4603      	mov	r3, r0
  4350c6:	e7f3      	b.n	4350b0 <memmove+0xa4>
  4350c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4350ca:	4603      	mov	r3, r0
  4350cc:	e7f1      	b.n	4350b2 <memmove+0xa6>
  4350ce:	4672      	mov	r2, lr
  4350d0:	e7ee      	b.n	4350b0 <memmove+0xa4>
  4350d2:	bf00      	nop

004350d4 <memset>:
  4350d4:	b470      	push	{r4, r5, r6}
  4350d6:	0784      	lsls	r4, r0, #30
  4350d8:	d046      	beq.n	435168 <memset+0x94>
  4350da:	1e54      	subs	r4, r2, #1
  4350dc:	2a00      	cmp	r2, #0
  4350de:	d041      	beq.n	435164 <memset+0x90>
  4350e0:	b2cd      	uxtb	r5, r1
  4350e2:	4603      	mov	r3, r0
  4350e4:	e002      	b.n	4350ec <memset+0x18>
  4350e6:	1e62      	subs	r2, r4, #1
  4350e8:	b3e4      	cbz	r4, 435164 <memset+0x90>
  4350ea:	4614      	mov	r4, r2
  4350ec:	f803 5b01 	strb.w	r5, [r3], #1
  4350f0:	079a      	lsls	r2, r3, #30
  4350f2:	d1f8      	bne.n	4350e6 <memset+0x12>
  4350f4:	2c03      	cmp	r4, #3
  4350f6:	d92e      	bls.n	435156 <memset+0x82>
  4350f8:	b2cd      	uxtb	r5, r1
  4350fa:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4350fe:	2c0f      	cmp	r4, #15
  435100:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  435104:	d919      	bls.n	43513a <memset+0x66>
  435106:	f103 0210 	add.w	r2, r3, #16
  43510a:	4626      	mov	r6, r4
  43510c:	3e10      	subs	r6, #16
  43510e:	2e0f      	cmp	r6, #15
  435110:	f842 5c10 	str.w	r5, [r2, #-16]
  435114:	f842 5c0c 	str.w	r5, [r2, #-12]
  435118:	f842 5c08 	str.w	r5, [r2, #-8]
  43511c:	f842 5c04 	str.w	r5, [r2, #-4]
  435120:	f102 0210 	add.w	r2, r2, #16
  435124:	d8f2      	bhi.n	43510c <memset+0x38>
  435126:	f1a4 0210 	sub.w	r2, r4, #16
  43512a:	f022 020f 	bic.w	r2, r2, #15
  43512e:	f004 040f 	and.w	r4, r4, #15
  435132:	3210      	adds	r2, #16
  435134:	2c03      	cmp	r4, #3
  435136:	4413      	add	r3, r2
  435138:	d90d      	bls.n	435156 <memset+0x82>
  43513a:	461e      	mov	r6, r3
  43513c:	4622      	mov	r2, r4
  43513e:	3a04      	subs	r2, #4
  435140:	2a03      	cmp	r2, #3
  435142:	f846 5b04 	str.w	r5, [r6], #4
  435146:	d8fa      	bhi.n	43513e <memset+0x6a>
  435148:	1f22      	subs	r2, r4, #4
  43514a:	f022 0203 	bic.w	r2, r2, #3
  43514e:	3204      	adds	r2, #4
  435150:	4413      	add	r3, r2
  435152:	f004 0403 	and.w	r4, r4, #3
  435156:	b12c      	cbz	r4, 435164 <memset+0x90>
  435158:	b2c9      	uxtb	r1, r1
  43515a:	441c      	add	r4, r3
  43515c:	f803 1b01 	strb.w	r1, [r3], #1
  435160:	42a3      	cmp	r3, r4
  435162:	d1fb      	bne.n	43515c <memset+0x88>
  435164:	bc70      	pop	{r4, r5, r6}
  435166:	4770      	bx	lr
  435168:	4614      	mov	r4, r2
  43516a:	4603      	mov	r3, r0
  43516c:	e7c2      	b.n	4350f4 <memset+0x20>
  43516e:	bf00      	nop

00435170 <__malloc_lock>:
  435170:	4770      	bx	lr
  435172:	bf00      	nop

00435174 <__malloc_unlock>:
  435174:	4770      	bx	lr
  435176:	bf00      	nop

00435178 <realloc>:
  435178:	4b02      	ldr	r3, [pc, #8]	; (435184 <realloc+0xc>)
  43517a:	460a      	mov	r2, r1
  43517c:	4601      	mov	r1, r0
  43517e:	6818      	ldr	r0, [r3, #0]
  435180:	f000 b802 	b.w	435188 <_realloc_r>
  435184:	200012d0 	.word	0x200012d0

00435188 <_realloc_r>:
  435188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43518c:	4617      	mov	r7, r2
  43518e:	b083      	sub	sp, #12
  435190:	460e      	mov	r6, r1
  435192:	2900      	cmp	r1, #0
  435194:	f000 80e7 	beq.w	435366 <_realloc_r+0x1de>
  435198:	4681      	mov	r9, r0
  43519a:	f107 050b 	add.w	r5, r7, #11
  43519e:	f7ff ffe7 	bl	435170 <__malloc_lock>
  4351a2:	f856 3c04 	ldr.w	r3, [r6, #-4]
  4351a6:	2d16      	cmp	r5, #22
  4351a8:	f023 0403 	bic.w	r4, r3, #3
  4351ac:	f1a6 0808 	sub.w	r8, r6, #8
  4351b0:	d84c      	bhi.n	43524c <_realloc_r+0xc4>
  4351b2:	2210      	movs	r2, #16
  4351b4:	4615      	mov	r5, r2
  4351b6:	42af      	cmp	r7, r5
  4351b8:	d84d      	bhi.n	435256 <_realloc_r+0xce>
  4351ba:	4294      	cmp	r4, r2
  4351bc:	f280 8084 	bge.w	4352c8 <_realloc_r+0x140>
  4351c0:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 435570 <_realloc_r+0x3e8>
  4351c4:	f8db 0008 	ldr.w	r0, [fp, #8]
  4351c8:	eb08 0104 	add.w	r1, r8, r4
  4351cc:	4288      	cmp	r0, r1
  4351ce:	f000 80d6 	beq.w	43537e <_realloc_r+0x1f6>
  4351d2:	6848      	ldr	r0, [r1, #4]
  4351d4:	f020 0e01 	bic.w	lr, r0, #1
  4351d8:	448e      	add	lr, r1
  4351da:	f8de e004 	ldr.w	lr, [lr, #4]
  4351de:	f01e 0f01 	tst.w	lr, #1
  4351e2:	d13f      	bne.n	435264 <_realloc_r+0xdc>
  4351e4:	f020 0003 	bic.w	r0, r0, #3
  4351e8:	4420      	add	r0, r4
  4351ea:	4290      	cmp	r0, r2
  4351ec:	f280 80c1 	bge.w	435372 <_realloc_r+0x1ea>
  4351f0:	07db      	lsls	r3, r3, #31
  4351f2:	f100 808f 	bmi.w	435314 <_realloc_r+0x18c>
  4351f6:	f856 3c08 	ldr.w	r3, [r6, #-8]
  4351fa:	ebc3 0a08 	rsb	sl, r3, r8
  4351fe:	f8da 3004 	ldr.w	r3, [sl, #4]
  435202:	f023 0303 	bic.w	r3, r3, #3
  435206:	eb00 0e03 	add.w	lr, r0, r3
  43520a:	4596      	cmp	lr, r2
  43520c:	db34      	blt.n	435278 <_realloc_r+0xf0>
  43520e:	68cb      	ldr	r3, [r1, #12]
  435210:	688a      	ldr	r2, [r1, #8]
  435212:	4657      	mov	r7, sl
  435214:	60d3      	str	r3, [r2, #12]
  435216:	609a      	str	r2, [r3, #8]
  435218:	f857 1f08 	ldr.w	r1, [r7, #8]!
  43521c:	f8da 300c 	ldr.w	r3, [sl, #12]
  435220:	60cb      	str	r3, [r1, #12]
  435222:	1f22      	subs	r2, r4, #4
  435224:	2a24      	cmp	r2, #36	; 0x24
  435226:	6099      	str	r1, [r3, #8]
  435228:	f200 8136 	bhi.w	435498 <_realloc_r+0x310>
  43522c:	2a13      	cmp	r2, #19
  43522e:	f240 80fd 	bls.w	43542c <_realloc_r+0x2a4>
  435232:	6833      	ldr	r3, [r6, #0]
  435234:	f8ca 3008 	str.w	r3, [sl, #8]
  435238:	6873      	ldr	r3, [r6, #4]
  43523a:	f8ca 300c 	str.w	r3, [sl, #12]
  43523e:	2a1b      	cmp	r2, #27
  435240:	f200 8140 	bhi.w	4354c4 <_realloc_r+0x33c>
  435244:	3608      	adds	r6, #8
  435246:	f10a 0310 	add.w	r3, sl, #16
  43524a:	e0f0      	b.n	43542e <_realloc_r+0x2a6>
  43524c:	f025 0507 	bic.w	r5, r5, #7
  435250:	2d00      	cmp	r5, #0
  435252:	462a      	mov	r2, r5
  435254:	daaf      	bge.n	4351b6 <_realloc_r+0x2e>
  435256:	230c      	movs	r3, #12
  435258:	2000      	movs	r0, #0
  43525a:	f8c9 3000 	str.w	r3, [r9]
  43525e:	b003      	add	sp, #12
  435260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  435264:	07d9      	lsls	r1, r3, #31
  435266:	d455      	bmi.n	435314 <_realloc_r+0x18c>
  435268:	f856 3c08 	ldr.w	r3, [r6, #-8]
  43526c:	ebc3 0a08 	rsb	sl, r3, r8
  435270:	f8da 3004 	ldr.w	r3, [sl, #4]
  435274:	f023 0303 	bic.w	r3, r3, #3
  435278:	4423      	add	r3, r4
  43527a:	4293      	cmp	r3, r2
  43527c:	db4a      	blt.n	435314 <_realloc_r+0x18c>
  43527e:	4657      	mov	r7, sl
  435280:	f8da 100c 	ldr.w	r1, [sl, #12]
  435284:	f857 0f08 	ldr.w	r0, [r7, #8]!
  435288:	1f22      	subs	r2, r4, #4
  43528a:	2a24      	cmp	r2, #36	; 0x24
  43528c:	60c1      	str	r1, [r0, #12]
  43528e:	6088      	str	r0, [r1, #8]
  435290:	f200 810e 	bhi.w	4354b0 <_realloc_r+0x328>
  435294:	2a13      	cmp	r2, #19
  435296:	f240 8109 	bls.w	4354ac <_realloc_r+0x324>
  43529a:	6831      	ldr	r1, [r6, #0]
  43529c:	f8ca 1008 	str.w	r1, [sl, #8]
  4352a0:	6871      	ldr	r1, [r6, #4]
  4352a2:	f8ca 100c 	str.w	r1, [sl, #12]
  4352a6:	2a1b      	cmp	r2, #27
  4352a8:	f200 8121 	bhi.w	4354ee <_realloc_r+0x366>
  4352ac:	3608      	adds	r6, #8
  4352ae:	f10a 0210 	add.w	r2, sl, #16
  4352b2:	6831      	ldr	r1, [r6, #0]
  4352b4:	6011      	str	r1, [r2, #0]
  4352b6:	6871      	ldr	r1, [r6, #4]
  4352b8:	6051      	str	r1, [r2, #4]
  4352ba:	68b1      	ldr	r1, [r6, #8]
  4352bc:	6091      	str	r1, [r2, #8]
  4352be:	461c      	mov	r4, r3
  4352c0:	f8da 3004 	ldr.w	r3, [sl, #4]
  4352c4:	463e      	mov	r6, r7
  4352c6:	46d0      	mov	r8, sl
  4352c8:	1b62      	subs	r2, r4, r5
  4352ca:	2a0f      	cmp	r2, #15
  4352cc:	f003 0301 	and.w	r3, r3, #1
  4352d0:	d80e      	bhi.n	4352f0 <_realloc_r+0x168>
  4352d2:	4323      	orrs	r3, r4
  4352d4:	4444      	add	r4, r8
  4352d6:	f8c8 3004 	str.w	r3, [r8, #4]
  4352da:	6863      	ldr	r3, [r4, #4]
  4352dc:	f043 0301 	orr.w	r3, r3, #1
  4352e0:	6063      	str	r3, [r4, #4]
  4352e2:	4648      	mov	r0, r9
  4352e4:	f7ff ff46 	bl	435174 <__malloc_unlock>
  4352e8:	4630      	mov	r0, r6
  4352ea:	b003      	add	sp, #12
  4352ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4352f0:	eb08 0105 	add.w	r1, r8, r5
  4352f4:	431d      	orrs	r5, r3
  4352f6:	f042 0301 	orr.w	r3, r2, #1
  4352fa:	440a      	add	r2, r1
  4352fc:	f8c8 5004 	str.w	r5, [r8, #4]
  435300:	604b      	str	r3, [r1, #4]
  435302:	6853      	ldr	r3, [r2, #4]
  435304:	f043 0301 	orr.w	r3, r3, #1
  435308:	3108      	adds	r1, #8
  43530a:	6053      	str	r3, [r2, #4]
  43530c:	4648      	mov	r0, r9
  43530e:	f7fe ff77 	bl	434200 <_free_r>
  435312:	e7e6      	b.n	4352e2 <_realloc_r+0x15a>
  435314:	4639      	mov	r1, r7
  435316:	4648      	mov	r0, r9
  435318:	f7ff fad0 	bl	4348bc <_malloc_r>
  43531c:	4607      	mov	r7, r0
  43531e:	b1d8      	cbz	r0, 435358 <_realloc_r+0x1d0>
  435320:	f856 3c04 	ldr.w	r3, [r6, #-4]
  435324:	f023 0201 	bic.w	r2, r3, #1
  435328:	4442      	add	r2, r8
  43532a:	f1a0 0108 	sub.w	r1, r0, #8
  43532e:	4291      	cmp	r1, r2
  435330:	f000 80ac 	beq.w	43548c <_realloc_r+0x304>
  435334:	1f22      	subs	r2, r4, #4
  435336:	2a24      	cmp	r2, #36	; 0x24
  435338:	f200 8099 	bhi.w	43546e <_realloc_r+0x2e6>
  43533c:	2a13      	cmp	r2, #19
  43533e:	d86a      	bhi.n	435416 <_realloc_r+0x28e>
  435340:	4603      	mov	r3, r0
  435342:	4632      	mov	r2, r6
  435344:	6811      	ldr	r1, [r2, #0]
  435346:	6019      	str	r1, [r3, #0]
  435348:	6851      	ldr	r1, [r2, #4]
  43534a:	6059      	str	r1, [r3, #4]
  43534c:	6892      	ldr	r2, [r2, #8]
  43534e:	609a      	str	r2, [r3, #8]
  435350:	4631      	mov	r1, r6
  435352:	4648      	mov	r0, r9
  435354:	f7fe ff54 	bl	434200 <_free_r>
  435358:	4648      	mov	r0, r9
  43535a:	f7ff ff0b 	bl	435174 <__malloc_unlock>
  43535e:	4638      	mov	r0, r7
  435360:	b003      	add	sp, #12
  435362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  435366:	4611      	mov	r1, r2
  435368:	b003      	add	sp, #12
  43536a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43536e:	f7ff baa5 	b.w	4348bc <_malloc_r>
  435372:	68ca      	ldr	r2, [r1, #12]
  435374:	6889      	ldr	r1, [r1, #8]
  435376:	4604      	mov	r4, r0
  435378:	60ca      	str	r2, [r1, #12]
  43537a:	6091      	str	r1, [r2, #8]
  43537c:	e7a4      	b.n	4352c8 <_realloc_r+0x140>
  43537e:	6841      	ldr	r1, [r0, #4]
  435380:	f021 0103 	bic.w	r1, r1, #3
  435384:	4421      	add	r1, r4
  435386:	f105 0010 	add.w	r0, r5, #16
  43538a:	4281      	cmp	r1, r0
  43538c:	da5b      	bge.n	435446 <_realloc_r+0x2be>
  43538e:	07db      	lsls	r3, r3, #31
  435390:	d4c0      	bmi.n	435314 <_realloc_r+0x18c>
  435392:	f856 3c08 	ldr.w	r3, [r6, #-8]
  435396:	ebc3 0a08 	rsb	sl, r3, r8
  43539a:	f8da 3004 	ldr.w	r3, [sl, #4]
  43539e:	f023 0303 	bic.w	r3, r3, #3
  4353a2:	eb01 0c03 	add.w	ip, r1, r3
  4353a6:	4560      	cmp	r0, ip
  4353a8:	f73f af66 	bgt.w	435278 <_realloc_r+0xf0>
  4353ac:	4657      	mov	r7, sl
  4353ae:	f8da 300c 	ldr.w	r3, [sl, #12]
  4353b2:	f857 1f08 	ldr.w	r1, [r7, #8]!
  4353b6:	1f22      	subs	r2, r4, #4
  4353b8:	2a24      	cmp	r2, #36	; 0x24
  4353ba:	60cb      	str	r3, [r1, #12]
  4353bc:	6099      	str	r1, [r3, #8]
  4353be:	f200 80b8 	bhi.w	435532 <_realloc_r+0x3aa>
  4353c2:	2a13      	cmp	r2, #19
  4353c4:	f240 80a9 	bls.w	43551a <_realloc_r+0x392>
  4353c8:	6833      	ldr	r3, [r6, #0]
  4353ca:	f8ca 3008 	str.w	r3, [sl, #8]
  4353ce:	6873      	ldr	r3, [r6, #4]
  4353d0:	f8ca 300c 	str.w	r3, [sl, #12]
  4353d4:	2a1b      	cmp	r2, #27
  4353d6:	f200 80b5 	bhi.w	435544 <_realloc_r+0x3bc>
  4353da:	3608      	adds	r6, #8
  4353dc:	f10a 0310 	add.w	r3, sl, #16
  4353e0:	6832      	ldr	r2, [r6, #0]
  4353e2:	601a      	str	r2, [r3, #0]
  4353e4:	6872      	ldr	r2, [r6, #4]
  4353e6:	605a      	str	r2, [r3, #4]
  4353e8:	68b2      	ldr	r2, [r6, #8]
  4353ea:	609a      	str	r2, [r3, #8]
  4353ec:	eb0a 0205 	add.w	r2, sl, r5
  4353f0:	ebc5 030c 	rsb	r3, r5, ip
  4353f4:	f043 0301 	orr.w	r3, r3, #1
  4353f8:	f8cb 2008 	str.w	r2, [fp, #8]
  4353fc:	6053      	str	r3, [r2, #4]
  4353fe:	f8da 3004 	ldr.w	r3, [sl, #4]
  435402:	f003 0301 	and.w	r3, r3, #1
  435406:	431d      	orrs	r5, r3
  435408:	4648      	mov	r0, r9
  43540a:	f8ca 5004 	str.w	r5, [sl, #4]
  43540e:	f7ff feb1 	bl	435174 <__malloc_unlock>
  435412:	4638      	mov	r0, r7
  435414:	e769      	b.n	4352ea <_realloc_r+0x162>
  435416:	6833      	ldr	r3, [r6, #0]
  435418:	6003      	str	r3, [r0, #0]
  43541a:	6873      	ldr	r3, [r6, #4]
  43541c:	6043      	str	r3, [r0, #4]
  43541e:	2a1b      	cmp	r2, #27
  435420:	d829      	bhi.n	435476 <_realloc_r+0x2ee>
  435422:	f100 0308 	add.w	r3, r0, #8
  435426:	f106 0208 	add.w	r2, r6, #8
  43542a:	e78b      	b.n	435344 <_realloc_r+0x1bc>
  43542c:	463b      	mov	r3, r7
  43542e:	6832      	ldr	r2, [r6, #0]
  435430:	601a      	str	r2, [r3, #0]
  435432:	6872      	ldr	r2, [r6, #4]
  435434:	605a      	str	r2, [r3, #4]
  435436:	68b2      	ldr	r2, [r6, #8]
  435438:	609a      	str	r2, [r3, #8]
  43543a:	463e      	mov	r6, r7
  43543c:	4674      	mov	r4, lr
  43543e:	f8da 3004 	ldr.w	r3, [sl, #4]
  435442:	46d0      	mov	r8, sl
  435444:	e740      	b.n	4352c8 <_realloc_r+0x140>
  435446:	eb08 0205 	add.w	r2, r8, r5
  43544a:	1b4b      	subs	r3, r1, r5
  43544c:	f043 0301 	orr.w	r3, r3, #1
  435450:	f8cb 2008 	str.w	r2, [fp, #8]
  435454:	6053      	str	r3, [r2, #4]
  435456:	f856 3c04 	ldr.w	r3, [r6, #-4]
  43545a:	f003 0301 	and.w	r3, r3, #1
  43545e:	431d      	orrs	r5, r3
  435460:	4648      	mov	r0, r9
  435462:	f846 5c04 	str.w	r5, [r6, #-4]
  435466:	f7ff fe85 	bl	435174 <__malloc_unlock>
  43546a:	4630      	mov	r0, r6
  43546c:	e73d      	b.n	4352ea <_realloc_r+0x162>
  43546e:	4631      	mov	r1, r6
  435470:	f7ff fdcc 	bl	43500c <memmove>
  435474:	e76c      	b.n	435350 <_realloc_r+0x1c8>
  435476:	68b3      	ldr	r3, [r6, #8]
  435478:	6083      	str	r3, [r0, #8]
  43547a:	68f3      	ldr	r3, [r6, #12]
  43547c:	60c3      	str	r3, [r0, #12]
  43547e:	2a24      	cmp	r2, #36	; 0x24
  435480:	d02c      	beq.n	4354dc <_realloc_r+0x354>
  435482:	f100 0310 	add.w	r3, r0, #16
  435486:	f106 0210 	add.w	r2, r6, #16
  43548a:	e75b      	b.n	435344 <_realloc_r+0x1bc>
  43548c:	f850 2c04 	ldr.w	r2, [r0, #-4]
  435490:	f022 0203 	bic.w	r2, r2, #3
  435494:	4414      	add	r4, r2
  435496:	e717      	b.n	4352c8 <_realloc_r+0x140>
  435498:	4631      	mov	r1, r6
  43549a:	4638      	mov	r0, r7
  43549c:	4674      	mov	r4, lr
  43549e:	463e      	mov	r6, r7
  4354a0:	f7ff fdb4 	bl	43500c <memmove>
  4354a4:	46d0      	mov	r8, sl
  4354a6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4354aa:	e70d      	b.n	4352c8 <_realloc_r+0x140>
  4354ac:	463a      	mov	r2, r7
  4354ae:	e700      	b.n	4352b2 <_realloc_r+0x12a>
  4354b0:	4631      	mov	r1, r6
  4354b2:	4638      	mov	r0, r7
  4354b4:	461c      	mov	r4, r3
  4354b6:	463e      	mov	r6, r7
  4354b8:	f7ff fda8 	bl	43500c <memmove>
  4354bc:	46d0      	mov	r8, sl
  4354be:	f8da 3004 	ldr.w	r3, [sl, #4]
  4354c2:	e701      	b.n	4352c8 <_realloc_r+0x140>
  4354c4:	68b3      	ldr	r3, [r6, #8]
  4354c6:	f8ca 3010 	str.w	r3, [sl, #16]
  4354ca:	68f3      	ldr	r3, [r6, #12]
  4354cc:	f8ca 3014 	str.w	r3, [sl, #20]
  4354d0:	2a24      	cmp	r2, #36	; 0x24
  4354d2:	d018      	beq.n	435506 <_realloc_r+0x37e>
  4354d4:	3610      	adds	r6, #16
  4354d6:	f10a 0318 	add.w	r3, sl, #24
  4354da:	e7a8      	b.n	43542e <_realloc_r+0x2a6>
  4354dc:	6933      	ldr	r3, [r6, #16]
  4354de:	6103      	str	r3, [r0, #16]
  4354e0:	6973      	ldr	r3, [r6, #20]
  4354e2:	6143      	str	r3, [r0, #20]
  4354e4:	f106 0218 	add.w	r2, r6, #24
  4354e8:	f100 0318 	add.w	r3, r0, #24
  4354ec:	e72a      	b.n	435344 <_realloc_r+0x1bc>
  4354ee:	68b1      	ldr	r1, [r6, #8]
  4354f0:	f8ca 1010 	str.w	r1, [sl, #16]
  4354f4:	68f1      	ldr	r1, [r6, #12]
  4354f6:	f8ca 1014 	str.w	r1, [sl, #20]
  4354fa:	2a24      	cmp	r2, #36	; 0x24
  4354fc:	d00f      	beq.n	43551e <_realloc_r+0x396>
  4354fe:	3610      	adds	r6, #16
  435500:	f10a 0218 	add.w	r2, sl, #24
  435504:	e6d5      	b.n	4352b2 <_realloc_r+0x12a>
  435506:	6933      	ldr	r3, [r6, #16]
  435508:	f8ca 3018 	str.w	r3, [sl, #24]
  43550c:	6973      	ldr	r3, [r6, #20]
  43550e:	f8ca 301c 	str.w	r3, [sl, #28]
  435512:	3618      	adds	r6, #24
  435514:	f10a 0320 	add.w	r3, sl, #32
  435518:	e789      	b.n	43542e <_realloc_r+0x2a6>
  43551a:	463b      	mov	r3, r7
  43551c:	e760      	b.n	4353e0 <_realloc_r+0x258>
  43551e:	6932      	ldr	r2, [r6, #16]
  435520:	f8ca 2018 	str.w	r2, [sl, #24]
  435524:	6972      	ldr	r2, [r6, #20]
  435526:	f8ca 201c 	str.w	r2, [sl, #28]
  43552a:	3618      	adds	r6, #24
  43552c:	f10a 0220 	add.w	r2, sl, #32
  435530:	e6bf      	b.n	4352b2 <_realloc_r+0x12a>
  435532:	4631      	mov	r1, r6
  435534:	4638      	mov	r0, r7
  435536:	f8cd c004 	str.w	ip, [sp, #4]
  43553a:	f7ff fd67 	bl	43500c <memmove>
  43553e:	f8dd c004 	ldr.w	ip, [sp, #4]
  435542:	e753      	b.n	4353ec <_realloc_r+0x264>
  435544:	68b3      	ldr	r3, [r6, #8]
  435546:	f8ca 3010 	str.w	r3, [sl, #16]
  43554a:	68f3      	ldr	r3, [r6, #12]
  43554c:	f8ca 3014 	str.w	r3, [sl, #20]
  435550:	2a24      	cmp	r2, #36	; 0x24
  435552:	d003      	beq.n	43555c <_realloc_r+0x3d4>
  435554:	3610      	adds	r6, #16
  435556:	f10a 0318 	add.w	r3, sl, #24
  43555a:	e741      	b.n	4353e0 <_realloc_r+0x258>
  43555c:	6933      	ldr	r3, [r6, #16]
  43555e:	f8ca 3018 	str.w	r3, [sl, #24]
  435562:	6973      	ldr	r3, [r6, #20]
  435564:	f8ca 301c 	str.w	r3, [sl, #28]
  435568:	3618      	adds	r6, #24
  43556a:	f10a 0320 	add.w	r3, sl, #32
  43556e:	e737      	b.n	4353e0 <_realloc_r+0x258>
  435570:	200012d4 	.word	0x200012d4

00435574 <_sbrk_r>:
  435574:	b538      	push	{r3, r4, r5, lr}
  435576:	4c07      	ldr	r4, [pc, #28]	; (435594 <_sbrk_r+0x20>)
  435578:	2300      	movs	r3, #0
  43557a:	4605      	mov	r5, r0
  43557c:	4608      	mov	r0, r1
  43557e:	6023      	str	r3, [r4, #0]
  435580:	f7cd fd62 	bl	403048 <_sbrk>
  435584:	1c43      	adds	r3, r0, #1
  435586:	d000      	beq.n	43558a <_sbrk_r+0x16>
  435588:	bd38      	pop	{r3, r4, r5, pc}
  43558a:	6823      	ldr	r3, [r4, #0]
  43558c:	2b00      	cmp	r3, #0
  43558e:	d0fb      	beq.n	435588 <_sbrk_r+0x14>
  435590:	602b      	str	r3, [r5, #0]
  435592:	bd38      	pop	{r3, r4, r5, pc}
  435594:	20002f50 	.word	0x20002f50

00435598 <_raise_r>:
  435598:	291f      	cmp	r1, #31
  43559a:	b538      	push	{r3, r4, r5, lr}
  43559c:	d822      	bhi.n	4355e4 <_raise_r+0x4c>
  43559e:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
  4355a2:	4605      	mov	r5, r0
  4355a4:	460c      	mov	r4, r1
  4355a6:	b19a      	cbz	r2, 4355d0 <_raise_r+0x38>
  4355a8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
  4355ac:	b183      	cbz	r3, 4355d0 <_raise_r+0x38>
  4355ae:	2b01      	cmp	r3, #1
  4355b0:	d00c      	beq.n	4355cc <_raise_r+0x34>
  4355b2:	1c59      	adds	r1, r3, #1
  4355b4:	d006      	beq.n	4355c4 <_raise_r+0x2c>
  4355b6:	2500      	movs	r5, #0
  4355b8:	4620      	mov	r0, r4
  4355ba:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
  4355be:	4798      	blx	r3
  4355c0:	4628      	mov	r0, r5
  4355c2:	bd38      	pop	{r3, r4, r5, pc}
  4355c4:	2316      	movs	r3, #22
  4355c6:	6003      	str	r3, [r0, #0]
  4355c8:	2001      	movs	r0, #1
  4355ca:	bd38      	pop	{r3, r4, r5, pc}
  4355cc:	2000      	movs	r0, #0
  4355ce:	bd38      	pop	{r3, r4, r5, pc}
  4355d0:	4628      	mov	r0, r5
  4355d2:	f000 f829 	bl	435628 <_getpid_r>
  4355d6:	4622      	mov	r2, r4
  4355d8:	4601      	mov	r1, r0
  4355da:	4628      	mov	r0, r5
  4355dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4355e0:	f000 b80e 	b.w	435600 <_kill_r>
  4355e4:	2316      	movs	r3, #22
  4355e6:	6003      	str	r3, [r0, #0]
  4355e8:	f04f 30ff 	mov.w	r0, #4294967295
  4355ec:	bd38      	pop	{r3, r4, r5, pc}
  4355ee:	bf00      	nop

004355f0 <raise>:
  4355f0:	4b02      	ldr	r3, [pc, #8]	; (4355fc <raise+0xc>)
  4355f2:	4601      	mov	r1, r0
  4355f4:	6818      	ldr	r0, [r3, #0]
  4355f6:	f7ff bfcf 	b.w	435598 <_raise_r>
  4355fa:	bf00      	nop
  4355fc:	200012d0 	.word	0x200012d0

00435600 <_kill_r>:
  435600:	b538      	push	{r3, r4, r5, lr}
  435602:	4c08      	ldr	r4, [pc, #32]	; (435624 <_kill_r+0x24>)
  435604:	2300      	movs	r3, #0
  435606:	4605      	mov	r5, r0
  435608:	4608      	mov	r0, r1
  43560a:	4611      	mov	r1, r2
  43560c:	6023      	str	r3, [r4, #0]
  43560e:	f7cd fd8b 	bl	403128 <_kill>
  435612:	1c43      	adds	r3, r0, #1
  435614:	d000      	beq.n	435618 <_kill_r+0x18>
  435616:	bd38      	pop	{r3, r4, r5, pc}
  435618:	6823      	ldr	r3, [r4, #0]
  43561a:	2b00      	cmp	r3, #0
  43561c:	d0fb      	beq.n	435616 <_kill_r+0x16>
  43561e:	602b      	str	r3, [r5, #0]
  435620:	bd38      	pop	{r3, r4, r5, pc}
  435622:	bf00      	nop
  435624:	20002f50 	.word	0x20002f50

00435628 <_getpid_r>:
  435628:	f7cd bd8a 	b.w	403140 <_getpid>

0043562c <snprintf>:
  43562c:	b40c      	push	{r2, r3}
  43562e:	b5f0      	push	{r4, r5, r6, r7, lr}
  435630:	4b24      	ldr	r3, [pc, #144]	; (4356c4 <snprintf+0x98>)
  435632:	2900      	cmp	r1, #0
  435634:	b09d      	sub	sp, #116	; 0x74
  435636:	681d      	ldr	r5, [r3, #0]
  435638:	db3e      	blt.n	4356b8 <snprintf+0x8c>
  43563a:	f44f 7302 	mov.w	r3, #520	; 0x208
  43563e:	460c      	mov	r4, r1
  435640:	9002      	str	r0, [sp, #8]
  435642:	9006      	str	r0, [sp, #24]
  435644:	f8ad 3014 	strh.w	r3, [sp, #20]
  435648:	ae23      	add	r6, sp, #140	; 0x8c
  43564a:	d017      	beq.n	43567c <snprintf+0x50>
  43564c:	1e4c      	subs	r4, r1, #1
  43564e:	9a22      	ldr	r2, [sp, #136]	; 0x88
  435650:	9404      	str	r4, [sp, #16]
  435652:	4633      	mov	r3, r6
  435654:	f64f 77ff 	movw	r7, #65535	; 0xffff
  435658:	4628      	mov	r0, r5
  43565a:	a902      	add	r1, sp, #8
  43565c:	9407      	str	r4, [sp, #28]
  43565e:	9601      	str	r6, [sp, #4]
  435660:	f8ad 7016 	strh.w	r7, [sp, #22]
  435664:	f000 f958 	bl	435918 <_svfprintf_r>
  435668:	1c42      	adds	r2, r0, #1
  43566a:	db22      	blt.n	4356b2 <snprintf+0x86>
  43566c:	9b02      	ldr	r3, [sp, #8]
  43566e:	2200      	movs	r2, #0
  435670:	701a      	strb	r2, [r3, #0]
  435672:	b01d      	add	sp, #116	; 0x74
  435674:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  435678:	b002      	add	sp, #8
  43567a:	4770      	bx	lr
  43567c:	4633      	mov	r3, r6
  43567e:	f64f 77ff 	movw	r7, #65535	; 0xffff
  435682:	4628      	mov	r0, r5
  435684:	a902      	add	r1, sp, #8
  435686:	9a22      	ldr	r2, [sp, #136]	; 0x88
  435688:	9404      	str	r4, [sp, #16]
  43568a:	9407      	str	r4, [sp, #28]
  43568c:	9601      	str	r6, [sp, #4]
  43568e:	f8ad 7016 	strh.w	r7, [sp, #22]
  435692:	f000 f941 	bl	435918 <_svfprintf_r>
  435696:	1c43      	adds	r3, r0, #1
  435698:	db04      	blt.n	4356a4 <snprintf+0x78>
  43569a:	b01d      	add	sp, #116	; 0x74
  43569c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4356a0:	b002      	add	sp, #8
  4356a2:	4770      	bx	lr
  4356a4:	238b      	movs	r3, #139	; 0x8b
  4356a6:	602b      	str	r3, [r5, #0]
  4356a8:	b01d      	add	sp, #116	; 0x74
  4356aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4356ae:	b002      	add	sp, #8
  4356b0:	4770      	bx	lr
  4356b2:	238b      	movs	r3, #139	; 0x8b
  4356b4:	602b      	str	r3, [r5, #0]
  4356b6:	e7d9      	b.n	43566c <snprintf+0x40>
  4356b8:	238b      	movs	r3, #139	; 0x8b
  4356ba:	602b      	str	r3, [r5, #0]
  4356bc:	f04f 30ff 	mov.w	r0, #4294967295
  4356c0:	e7eb      	b.n	43569a <snprintf+0x6e>
  4356c2:	bf00      	nop
  4356c4:	200012d0 	.word	0x200012d0

004356c8 <sprintf>:
  4356c8:	b40e      	push	{r1, r2, r3}
  4356ca:	b5f0      	push	{r4, r5, r6, r7, lr}
  4356cc:	b09c      	sub	sp, #112	; 0x70
  4356ce:	ab21      	add	r3, sp, #132	; 0x84
  4356d0:	490f      	ldr	r1, [pc, #60]	; (435710 <sprintf+0x48>)
  4356d2:	f853 2b04 	ldr.w	r2, [r3], #4
  4356d6:	9301      	str	r3, [sp, #4]
  4356d8:	4605      	mov	r5, r0
  4356da:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4356de:	6808      	ldr	r0, [r1, #0]
  4356e0:	9502      	str	r5, [sp, #8]
  4356e2:	f44f 7702 	mov.w	r7, #520	; 0x208
  4356e6:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4356ea:	a902      	add	r1, sp, #8
  4356ec:	9506      	str	r5, [sp, #24]
  4356ee:	f8ad 7014 	strh.w	r7, [sp, #20]
  4356f2:	9404      	str	r4, [sp, #16]
  4356f4:	9407      	str	r4, [sp, #28]
  4356f6:	f8ad 6016 	strh.w	r6, [sp, #22]
  4356fa:	f000 f90d 	bl	435918 <_svfprintf_r>
  4356fe:	9b02      	ldr	r3, [sp, #8]
  435700:	2200      	movs	r2, #0
  435702:	701a      	strb	r2, [r3, #0]
  435704:	b01c      	add	sp, #112	; 0x70
  435706:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  43570a:	b003      	add	sp, #12
  43570c:	4770      	bx	lr
  43570e:	bf00      	nop
  435710:	200012d0 	.word	0x200012d0

00435714 <__sread>:
  435714:	b510      	push	{r4, lr}
  435716:	460c      	mov	r4, r1
  435718:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  43571c:	f005 f876 	bl	43a80c <_read_r>
  435720:	2800      	cmp	r0, #0
  435722:	db03      	blt.n	43572c <__sread+0x18>
  435724:	6d23      	ldr	r3, [r4, #80]	; 0x50
  435726:	4403      	add	r3, r0
  435728:	6523      	str	r3, [r4, #80]	; 0x50
  43572a:	bd10      	pop	{r4, pc}
  43572c:	89a3      	ldrh	r3, [r4, #12]
  43572e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  435732:	81a3      	strh	r3, [r4, #12]
  435734:	bd10      	pop	{r4, pc}
  435736:	bf00      	nop

00435738 <__swrite>:
  435738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  43573c:	4616      	mov	r6, r2
  43573e:	898a      	ldrh	r2, [r1, #12]
  435740:	461d      	mov	r5, r3
  435742:	05d3      	lsls	r3, r2, #23
  435744:	460c      	mov	r4, r1
  435746:	4607      	mov	r7, r0
  435748:	d506      	bpl.n	435758 <__swrite+0x20>
  43574a:	2200      	movs	r2, #0
  43574c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  435750:	2302      	movs	r3, #2
  435752:	f004 fd53 	bl	43a1fc <_lseek_r>
  435756:	89a2      	ldrh	r2, [r4, #12]
  435758:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  43575c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  435760:	81a2      	strh	r2, [r4, #12]
  435762:	4638      	mov	r0, r7
  435764:	4632      	mov	r2, r6
  435766:	462b      	mov	r3, r5
  435768:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  43576c:	f003 bc2e 	b.w	438fcc <_write_r>

00435770 <__sseek>:
  435770:	b510      	push	{r4, lr}
  435772:	460c      	mov	r4, r1
  435774:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  435778:	f004 fd40 	bl	43a1fc <_lseek_r>
  43577c:	89a3      	ldrh	r3, [r4, #12]
  43577e:	1c42      	adds	r2, r0, #1
  435780:	bf0e      	itee	eq
  435782:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  435786:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  43578a:	6520      	strne	r0, [r4, #80]	; 0x50
  43578c:	81a3      	strh	r3, [r4, #12]
  43578e:	bd10      	pop	{r4, pc}

00435790 <__sclose>:
  435790:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  435794:	f003 bca0 	b.w	4390d8 <_close_r>

00435798 <strcpy>:
  435798:	ea80 0201 	eor.w	r2, r0, r1
  43579c:	4684      	mov	ip, r0
  43579e:	f012 0f03 	tst.w	r2, #3
  4357a2:	d14f      	bne.n	435844 <strcpy+0xac>
  4357a4:	f011 0f03 	tst.w	r1, #3
  4357a8:	d132      	bne.n	435810 <strcpy+0x78>
  4357aa:	f84d 4d04 	str.w	r4, [sp, #-4]!
  4357ae:	f011 0f04 	tst.w	r1, #4
  4357b2:	f851 3b04 	ldr.w	r3, [r1], #4
  4357b6:	d00b      	beq.n	4357d0 <strcpy+0x38>
  4357b8:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  4357bc:	439a      	bics	r2, r3
  4357be:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4357c2:	bf04      	itt	eq
  4357c4:	f84c 3b04 	streq.w	r3, [ip], #4
  4357c8:	f851 3b04 	ldreq.w	r3, [r1], #4
  4357cc:	d116      	bne.n	4357fc <strcpy+0x64>
  4357ce:	bf00      	nop
  4357d0:	f851 4b04 	ldr.w	r4, [r1], #4
  4357d4:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  4357d8:	439a      	bics	r2, r3
  4357da:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4357de:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
  4357e2:	d10b      	bne.n	4357fc <strcpy+0x64>
  4357e4:	f84c 3b04 	str.w	r3, [ip], #4
  4357e8:	43a2      	bics	r2, r4
  4357ea:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4357ee:	bf04      	itt	eq
  4357f0:	f851 3b04 	ldreq.w	r3, [r1], #4
  4357f4:	f84c 4b04 	streq.w	r4, [ip], #4
  4357f8:	d0ea      	beq.n	4357d0 <strcpy+0x38>
  4357fa:	4623      	mov	r3, r4
  4357fc:	f80c 3b01 	strb.w	r3, [ip], #1
  435800:	f013 0fff 	tst.w	r3, #255	; 0xff
  435804:	ea4f 2333 	mov.w	r3, r3, ror #8
  435808:	d1f8      	bne.n	4357fc <strcpy+0x64>
  43580a:	f85d 4b04 	ldr.w	r4, [sp], #4
  43580e:	4770      	bx	lr
  435810:	f011 0f01 	tst.w	r1, #1
  435814:	d006      	beq.n	435824 <strcpy+0x8c>
  435816:	f811 2b01 	ldrb.w	r2, [r1], #1
  43581a:	f80c 2b01 	strb.w	r2, [ip], #1
  43581e:	2a00      	cmp	r2, #0
  435820:	bf08      	it	eq
  435822:	4770      	bxeq	lr
  435824:	f011 0f02 	tst.w	r1, #2
  435828:	d0bf      	beq.n	4357aa <strcpy+0x12>
  43582a:	f831 2b02 	ldrh.w	r2, [r1], #2
  43582e:	f012 0fff 	tst.w	r2, #255	; 0xff
  435832:	bf16      	itet	ne
  435834:	f82c 2b02 	strhne.w	r2, [ip], #2
  435838:	f88c 2000 	strbeq.w	r2, [ip]
  43583c:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
  435840:	d1b3      	bne.n	4357aa <strcpy+0x12>
  435842:	4770      	bx	lr
  435844:	f811 2b01 	ldrb.w	r2, [r1], #1
  435848:	f80c 2b01 	strb.w	r2, [ip], #1
  43584c:	2a00      	cmp	r2, #0
  43584e:	d1f9      	bne.n	435844 <strcpy+0xac>
  435850:	4770      	bx	lr
  435852:	bf00      	nop

00435854 <strlen>:
  435854:	f020 0103 	bic.w	r1, r0, #3
  435858:	f010 0003 	ands.w	r0, r0, #3
  43585c:	f1c0 0000 	rsb	r0, r0, #0
  435860:	f851 3b04 	ldr.w	r3, [r1], #4
  435864:	f100 0c04 	add.w	ip, r0, #4
  435868:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  43586c:	f06f 0200 	mvn.w	r2, #0
  435870:	bf1c      	itt	ne
  435872:	fa22 f20c 	lsrne.w	r2, r2, ip
  435876:	4313      	orrne	r3, r2
  435878:	f04f 0c01 	mov.w	ip, #1
  43587c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  435880:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  435884:	eba3 020c 	sub.w	r2, r3, ip
  435888:	ea22 0203 	bic.w	r2, r2, r3
  43588c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  435890:	bf04      	itt	eq
  435892:	f851 3b04 	ldreq.w	r3, [r1], #4
  435896:	3004      	addeq	r0, #4
  435898:	d0f4      	beq.n	435884 <strlen+0x30>
  43589a:	f1c2 0100 	rsb	r1, r2, #0
  43589e:	ea02 0201 	and.w	r2, r2, r1
  4358a2:	fab2 f282 	clz	r2, r2
  4358a6:	f1c2 021f 	rsb	r2, r2, #31
  4358aa:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4358ae:	4770      	bx	lr

004358b0 <strncpy>:
  4358b0:	ea40 0301 	orr.w	r3, r0, r1
  4358b4:	079b      	lsls	r3, r3, #30
  4358b6:	b470      	push	{r4, r5, r6}
  4358b8:	d12b      	bne.n	435912 <strncpy+0x62>
  4358ba:	2a03      	cmp	r2, #3
  4358bc:	d929      	bls.n	435912 <strncpy+0x62>
  4358be:	460c      	mov	r4, r1
  4358c0:	4603      	mov	r3, r0
  4358c2:	4621      	mov	r1, r4
  4358c4:	f854 6b04 	ldr.w	r6, [r4], #4
  4358c8:	f1a6 3501 	sub.w	r5, r6, #16843009	; 0x1010101
  4358cc:	ea25 0506 	bic.w	r5, r5, r6
  4358d0:	f015 3f80 	tst.w	r5, #2155905152	; 0x80808080
  4358d4:	d105      	bne.n	4358e2 <strncpy+0x32>
  4358d6:	3a04      	subs	r2, #4
  4358d8:	2a03      	cmp	r2, #3
  4358da:	f843 6b04 	str.w	r6, [r3], #4
  4358de:	4621      	mov	r1, r4
  4358e0:	d8ef      	bhi.n	4358c2 <strncpy+0x12>
  4358e2:	b1a2      	cbz	r2, 43590e <strncpy+0x5e>
  4358e4:	780c      	ldrb	r4, [r1, #0]
  4358e6:	701c      	strb	r4, [r3, #0]
  4358e8:	3a01      	subs	r2, #1
  4358ea:	3301      	adds	r3, #1
  4358ec:	3101      	adds	r1, #1
  4358ee:	b13c      	cbz	r4, 435900 <strncpy+0x50>
  4358f0:	b16a      	cbz	r2, 43590e <strncpy+0x5e>
  4358f2:	f811 4b01 	ldrb.w	r4, [r1], #1
  4358f6:	f803 4b01 	strb.w	r4, [r3], #1
  4358fa:	3a01      	subs	r2, #1
  4358fc:	2c00      	cmp	r4, #0
  4358fe:	d1f7      	bne.n	4358f0 <strncpy+0x40>
  435900:	b12a      	cbz	r2, 43590e <strncpy+0x5e>
  435902:	441a      	add	r2, r3
  435904:	2100      	movs	r1, #0
  435906:	f803 1b01 	strb.w	r1, [r3], #1
  43590a:	4293      	cmp	r3, r2
  43590c:	d1fb      	bne.n	435906 <strncpy+0x56>
  43590e:	bc70      	pop	{r4, r5, r6}
  435910:	4770      	bx	lr
  435912:	4603      	mov	r3, r0
  435914:	e7e5      	b.n	4358e2 <strncpy+0x32>
  435916:	bf00      	nop

00435918 <_svfprintf_r>:
  435918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43591c:	b0c1      	sub	sp, #260	; 0x104
  43591e:	4689      	mov	r9, r1
  435920:	920a      	str	r2, [sp, #40]	; 0x28
  435922:	930e      	str	r3, [sp, #56]	; 0x38
  435924:	9008      	str	r0, [sp, #32]
  435926:	f004 fc65 	bl	43a1f4 <_localeconv_r>
  43592a:	6803      	ldr	r3, [r0, #0]
  43592c:	9317      	str	r3, [sp, #92]	; 0x5c
  43592e:	4618      	mov	r0, r3
  435930:	f7ff ff90 	bl	435854 <strlen>
  435934:	f8b9 300c 	ldrh.w	r3, [r9, #12]
  435938:	9018      	str	r0, [sp, #96]	; 0x60
  43593a:	061a      	lsls	r2, r3, #24
  43593c:	d504      	bpl.n	435948 <_svfprintf_r+0x30>
  43593e:	f8d9 3010 	ldr.w	r3, [r9, #16]
  435942:	2b00      	cmp	r3, #0
  435944:	f001 808c 	beq.w	436a60 <_svfprintf_r+0x1148>
  435948:	2300      	movs	r3, #0
  43594a:	af30      	add	r7, sp, #192	; 0xc0
  43594c:	9313      	str	r3, [sp, #76]	; 0x4c
  43594e:	9325      	str	r3, [sp, #148]	; 0x94
  435950:	9324      	str	r3, [sp, #144]	; 0x90
  435952:	9316      	str	r3, [sp, #88]	; 0x58
  435954:	9319      	str	r3, [sp, #100]	; 0x64
  435956:	930b      	str	r3, [sp, #44]	; 0x2c
  435958:	9723      	str	r7, [sp, #140]	; 0x8c
  43595a:	9314      	str	r3, [sp, #80]	; 0x50
  43595c:	9315      	str	r3, [sp, #84]	; 0x54
  43595e:	463c      	mov	r4, r7
  435960:	464e      	mov	r6, r9
  435962:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  435964:	782b      	ldrb	r3, [r5, #0]
  435966:	2b00      	cmp	r3, #0
  435968:	f000 80a9 	beq.w	435abe <_svfprintf_r+0x1a6>
  43596c:	2b25      	cmp	r3, #37	; 0x25
  43596e:	d102      	bne.n	435976 <_svfprintf_r+0x5e>
  435970:	e0a5      	b.n	435abe <_svfprintf_r+0x1a6>
  435972:	2b25      	cmp	r3, #37	; 0x25
  435974:	d003      	beq.n	43597e <_svfprintf_r+0x66>
  435976:	f815 3f01 	ldrb.w	r3, [r5, #1]!
  43597a:	2b00      	cmp	r3, #0
  43597c:	d1f9      	bne.n	435972 <_svfprintf_r+0x5a>
  43597e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  435980:	1aeb      	subs	r3, r5, r3
  435982:	b173      	cbz	r3, 4359a2 <_svfprintf_r+0x8a>
  435984:	9a24      	ldr	r2, [sp, #144]	; 0x90
  435986:	9925      	ldr	r1, [sp, #148]	; 0x94
  435988:	980a      	ldr	r0, [sp, #40]	; 0x28
  43598a:	6020      	str	r0, [r4, #0]
  43598c:	3201      	adds	r2, #1
  43598e:	4419      	add	r1, r3
  435990:	2a07      	cmp	r2, #7
  435992:	6063      	str	r3, [r4, #4]
  435994:	9125      	str	r1, [sp, #148]	; 0x94
  435996:	9224      	str	r2, [sp, #144]	; 0x90
  435998:	dc72      	bgt.n	435a80 <_svfprintf_r+0x168>
  43599a:	3408      	adds	r4, #8
  43599c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  43599e:	441a      	add	r2, r3
  4359a0:	920b      	str	r2, [sp, #44]	; 0x2c
  4359a2:	782b      	ldrb	r3, [r5, #0]
  4359a4:	2b00      	cmp	r3, #0
  4359a6:	f000 87b5 	beq.w	436914 <_svfprintf_r+0xffc>
  4359aa:	2300      	movs	r3, #0
  4359ac:	1c69      	adds	r1, r5, #1
  4359ae:	786d      	ldrb	r5, [r5, #1]
  4359b0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  4359b4:	461a      	mov	r2, r3
  4359b6:	930c      	str	r3, [sp, #48]	; 0x30
  4359b8:	9307      	str	r3, [sp, #28]
  4359ba:	f04f 3aff 	mov.w	sl, #4294967295
  4359be:	1c4b      	adds	r3, r1, #1
  4359c0:	f1a5 0120 	sub.w	r1, r5, #32
  4359c4:	2958      	cmp	r1, #88	; 0x58
  4359c6:	f200 83d9 	bhi.w	43617c <_svfprintf_r+0x864>
  4359ca:	e8df f011 	tbh	[pc, r1, lsl #1]
  4359ce:	0270      	.short	0x0270
  4359d0:	03d703d7 	.word	0x03d703d7
  4359d4:	03d70374 	.word	0x03d70374
  4359d8:	03d703d7 	.word	0x03d703d7
  4359dc:	03d703d7 	.word	0x03d703d7
  4359e0:	02f003d7 	.word	0x02f003d7
  4359e4:	03d7020d 	.word	0x03d7020d
  4359e8:	021101f4 	.word	0x021101f4
  4359ec:	037b03d7 	.word	0x037b03d7
  4359f0:	02ba02ba 	.word	0x02ba02ba
  4359f4:	02ba02ba 	.word	0x02ba02ba
  4359f8:	02ba02ba 	.word	0x02ba02ba
  4359fc:	02ba02ba 	.word	0x02ba02ba
  435a00:	03d702ba 	.word	0x03d702ba
  435a04:	03d703d7 	.word	0x03d703d7
  435a08:	03d703d7 	.word	0x03d703d7
  435a0c:	03d703d7 	.word	0x03d703d7
  435a10:	03d703d7 	.word	0x03d703d7
  435a14:	02c903d7 	.word	0x02c903d7
  435a18:	03d7038b 	.word	0x03d7038b
  435a1c:	03d7038b 	.word	0x03d7038b
  435a20:	03d703d7 	.word	0x03d703d7
  435a24:	036d03d7 	.word	0x036d03d7
  435a28:	03d703d7 	.word	0x03d703d7
  435a2c:	03d70305 	.word	0x03d70305
  435a30:	03d703d7 	.word	0x03d703d7
  435a34:	03d703d7 	.word	0x03d703d7
  435a38:	03d70323 	.word	0x03d70323
  435a3c:	033d03d7 	.word	0x033d03d7
  435a40:	03d703d7 	.word	0x03d703d7
  435a44:	03d703d7 	.word	0x03d703d7
  435a48:	03d703d7 	.word	0x03d703d7
  435a4c:	03d703d7 	.word	0x03d703d7
  435a50:	03d703d7 	.word	0x03d703d7
  435a54:	022c0358 	.word	0x022c0358
  435a58:	038b038b 	.word	0x038b038b
  435a5c:	02fe038b 	.word	0x02fe038b
  435a60:	03d7022c 	.word	0x03d7022c
  435a64:	02e603d7 	.word	0x02e603d7
  435a68:	027e03d7 	.word	0x027e03d7
  435a6c:	03c001fb 	.word	0x03c001fb
  435a70:	03d70277 	.word	0x03d70277
  435a74:	03d70292 	.word	0x03d70292
  435a78:	03d7007a 	.word	0x03d7007a
  435a7c:	024a03d7 	.word	0x024a03d7
  435a80:	9808      	ldr	r0, [sp, #32]
  435a82:	9307      	str	r3, [sp, #28]
  435a84:	4631      	mov	r1, r6
  435a86:	aa23      	add	r2, sp, #140	; 0x8c
  435a88:	f004 ff00 	bl	43a88c <__ssprint_r>
  435a8c:	b950      	cbnz	r0, 435aa4 <_svfprintf_r+0x18c>
  435a8e:	463c      	mov	r4, r7
  435a90:	9b07      	ldr	r3, [sp, #28]
  435a92:	e783      	b.n	43599c <_svfprintf_r+0x84>
  435a94:	9808      	ldr	r0, [sp, #32]
  435a96:	4631      	mov	r1, r6
  435a98:	aa23      	add	r2, sp, #140	; 0x8c
  435a9a:	f004 fef7 	bl	43a88c <__ssprint_r>
  435a9e:	2800      	cmp	r0, #0
  435aa0:	f000 8185 	beq.w	435dae <_svfprintf_r+0x496>
  435aa4:	46b1      	mov	r9, r6
  435aa6:	f8b9 300c 	ldrh.w	r3, [r9, #12]
  435aaa:	f013 0f40 	tst.w	r3, #64	; 0x40
  435aae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  435ab0:	bf18      	it	ne
  435ab2:	f04f 33ff 	movne.w	r3, #4294967295
  435ab6:	4618      	mov	r0, r3
  435ab8:	b041      	add	sp, #260	; 0x104
  435aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  435abe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  435ac0:	e76f      	b.n	4359a2 <_svfprintf_r+0x8a>
  435ac2:	930a      	str	r3, [sp, #40]	; 0x28
  435ac4:	9b07      	ldr	r3, [sp, #28]
  435ac6:	0698      	lsls	r0, r3, #26
  435ac8:	f140 82ad 	bpl.w	436026 <_svfprintf_r+0x70e>
  435acc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  435ace:	f103 0907 	add.w	r9, r3, #7
  435ad2:	f029 0307 	bic.w	r3, r9, #7
  435ad6:	f103 0208 	add.w	r2, r3, #8
  435ada:	e9d3 8900 	ldrd	r8, r9, [r3]
  435ade:	920e      	str	r2, [sp, #56]	; 0x38
  435ae0:	2301      	movs	r3, #1
  435ae2:	f04f 0c00 	mov.w	ip, #0
  435ae6:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
  435aea:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  435aee:	f1ba 0f00 	cmp.w	sl, #0
  435af2:	db03      	blt.n	435afc <_svfprintf_r+0x1e4>
  435af4:	9a07      	ldr	r2, [sp, #28]
  435af6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  435afa:	9207      	str	r2, [sp, #28]
  435afc:	ea58 0209 	orrs.w	r2, r8, r9
  435b00:	f040 834c 	bne.w	43619c <_svfprintf_r+0x884>
  435b04:	f1ba 0f00 	cmp.w	sl, #0
  435b08:	f000 8451 	beq.w	4363ae <_svfprintf_r+0xa96>
  435b0c:	2b01      	cmp	r3, #1
  435b0e:	f000 834f 	beq.w	4361b0 <_svfprintf_r+0x898>
  435b12:	2b02      	cmp	r3, #2
  435b14:	f000 8490 	beq.w	436438 <_svfprintf_r+0xb20>
  435b18:	4639      	mov	r1, r7
  435b1a:	ea4f 02d8 	mov.w	r2, r8, lsr #3
  435b1e:	ea42 7249 	orr.w	r2, r2, r9, lsl #29
  435b22:	ea4f 00d9 	mov.w	r0, r9, lsr #3
  435b26:	f008 0307 	and.w	r3, r8, #7
  435b2a:	4681      	mov	r9, r0
  435b2c:	4690      	mov	r8, r2
  435b2e:	3330      	adds	r3, #48	; 0x30
  435b30:	ea58 0209 	orrs.w	r2, r8, r9
  435b34:	f801 3d01 	strb.w	r3, [r1, #-1]!
  435b38:	d1ef      	bne.n	435b1a <_svfprintf_r+0x202>
  435b3a:	9a07      	ldr	r2, [sp, #28]
  435b3c:	9110      	str	r1, [sp, #64]	; 0x40
  435b3e:	07d2      	lsls	r2, r2, #31
  435b40:	f100 8544 	bmi.w	4365cc <_svfprintf_r+0xcb4>
  435b44:	1a7b      	subs	r3, r7, r1
  435b46:	930d      	str	r3, [sp, #52]	; 0x34
  435b48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  435b4a:	4592      	cmp	sl, r2
  435b4c:	4653      	mov	r3, sl
  435b4e:	bfb8      	it	lt
  435b50:	4613      	movlt	r3, r2
  435b52:	9309      	str	r3, [sp, #36]	; 0x24
  435b54:	2300      	movs	r3, #0
  435b56:	9312      	str	r3, [sp, #72]	; 0x48
  435b58:	f1bc 0f00 	cmp.w	ip, #0
  435b5c:	d002      	beq.n	435b64 <_svfprintf_r+0x24c>
  435b5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  435b60:	3301      	adds	r3, #1
  435b62:	9309      	str	r3, [sp, #36]	; 0x24
  435b64:	9b07      	ldr	r3, [sp, #28]
  435b66:	f013 0302 	ands.w	r3, r3, #2
  435b6a:	930f      	str	r3, [sp, #60]	; 0x3c
  435b6c:	d002      	beq.n	435b74 <_svfprintf_r+0x25c>
  435b6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  435b70:	3302      	adds	r3, #2
  435b72:	9309      	str	r3, [sp, #36]	; 0x24
  435b74:	9b07      	ldr	r3, [sp, #28]
  435b76:	f013 0984 	ands.w	r9, r3, #132	; 0x84
  435b7a:	f040 830c 	bne.w	436196 <_svfprintf_r+0x87e>
  435b7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  435b80:	9a09      	ldr	r2, [sp, #36]	; 0x24
  435b82:	ebc2 0803 	rsb	r8, r2, r3
  435b86:	f1b8 0f00 	cmp.w	r8, #0
  435b8a:	f340 8304 	ble.w	436196 <_svfprintf_r+0x87e>
  435b8e:	f1b8 0f10 	cmp.w	r8, #16
  435b92:	9925      	ldr	r1, [sp, #148]	; 0x94
  435b94:	9a24      	ldr	r2, [sp, #144]	; 0x90
  435b96:	f8df a544 	ldr.w	sl, [pc, #1348]	; 4360dc <_svfprintf_r+0x7c4>
  435b9a:	dd29      	ble.n	435bf0 <_svfprintf_r+0x2d8>
  435b9c:	4653      	mov	r3, sl
  435b9e:	f04f 0b10 	mov.w	fp, #16
  435ba2:	46c2      	mov	sl, r8
  435ba4:	46a8      	mov	r8, r5
  435ba6:	461d      	mov	r5, r3
  435ba8:	e006      	b.n	435bb8 <_svfprintf_r+0x2a0>
  435baa:	f1aa 0a10 	sub.w	sl, sl, #16
  435bae:	f1ba 0f10 	cmp.w	sl, #16
  435bb2:	f104 0408 	add.w	r4, r4, #8
  435bb6:	dd17      	ble.n	435be8 <_svfprintf_r+0x2d0>
  435bb8:	3201      	adds	r2, #1
  435bba:	3110      	adds	r1, #16
  435bbc:	2a07      	cmp	r2, #7
  435bbe:	9125      	str	r1, [sp, #148]	; 0x94
  435bc0:	9224      	str	r2, [sp, #144]	; 0x90
  435bc2:	e884 0820 	stmia.w	r4, {r5, fp}
  435bc6:	ddf0      	ble.n	435baa <_svfprintf_r+0x292>
  435bc8:	9808      	ldr	r0, [sp, #32]
  435bca:	4631      	mov	r1, r6
  435bcc:	aa23      	add	r2, sp, #140	; 0x8c
  435bce:	f004 fe5d 	bl	43a88c <__ssprint_r>
  435bd2:	2800      	cmp	r0, #0
  435bd4:	f47f af66 	bne.w	435aa4 <_svfprintf_r+0x18c>
  435bd8:	f1aa 0a10 	sub.w	sl, sl, #16
  435bdc:	f1ba 0f10 	cmp.w	sl, #16
  435be0:	9925      	ldr	r1, [sp, #148]	; 0x94
  435be2:	9a24      	ldr	r2, [sp, #144]	; 0x90
  435be4:	463c      	mov	r4, r7
  435be6:	dce7      	bgt.n	435bb8 <_svfprintf_r+0x2a0>
  435be8:	462b      	mov	r3, r5
  435bea:	4645      	mov	r5, r8
  435bec:	46d0      	mov	r8, sl
  435bee:	469a      	mov	sl, r3
  435bf0:	3201      	adds	r2, #1
  435bf2:	eb08 0b01 	add.w	fp, r8, r1
  435bf6:	2a07      	cmp	r2, #7
  435bf8:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  435bfc:	9224      	str	r2, [sp, #144]	; 0x90
  435bfe:	f8c4 a000 	str.w	sl, [r4]
  435c02:	f8c4 8004 	str.w	r8, [r4, #4]
  435c06:	f300 847b 	bgt.w	436500 <_svfprintf_r+0xbe8>
  435c0a:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  435c0e:	3408      	adds	r4, #8
  435c10:	f1bc 0f00 	cmp.w	ip, #0
  435c14:	d00f      	beq.n	435c36 <_svfprintf_r+0x31e>
  435c16:	9b24      	ldr	r3, [sp, #144]	; 0x90
  435c18:	3301      	adds	r3, #1
  435c1a:	f10b 0b01 	add.w	fp, fp, #1
  435c1e:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  435c22:	2201      	movs	r2, #1
  435c24:	2b07      	cmp	r3, #7
  435c26:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  435c2a:	9324      	str	r3, [sp, #144]	; 0x90
  435c2c:	e884 0006 	stmia.w	r4, {r1, r2}
  435c30:	f300 83da 	bgt.w	4363e8 <_svfprintf_r+0xad0>
  435c34:	3408      	adds	r4, #8
  435c36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  435c38:	b173      	cbz	r3, 435c58 <_svfprintf_r+0x340>
  435c3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  435c3c:	3301      	adds	r3, #1
  435c3e:	f10b 0b02 	add.w	fp, fp, #2
  435c42:	a91c      	add	r1, sp, #112	; 0x70
  435c44:	2202      	movs	r2, #2
  435c46:	2b07      	cmp	r3, #7
  435c48:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  435c4c:	9324      	str	r3, [sp, #144]	; 0x90
  435c4e:	e884 0006 	stmia.w	r4, {r1, r2}
  435c52:	f300 83d5 	bgt.w	436400 <_svfprintf_r+0xae8>
  435c56:	3408      	adds	r4, #8
  435c58:	f1b9 0f80 	cmp.w	r9, #128	; 0x80
  435c5c:	f000 8311 	beq.w	436282 <_svfprintf_r+0x96a>
  435c60:	9b11      	ldr	r3, [sp, #68]	; 0x44
  435c62:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  435c64:	ebc2 0a03 	rsb	sl, r2, r3
  435c68:	f1ba 0f00 	cmp.w	sl, #0
  435c6c:	dd3c      	ble.n	435ce8 <_svfprintf_r+0x3d0>
  435c6e:	f1ba 0f10 	cmp.w	sl, #16
  435c72:	9a24      	ldr	r2, [sp, #144]	; 0x90
  435c74:	f8df 9468 	ldr.w	r9, [pc, #1128]	; 4360e0 <_svfprintf_r+0x7c8>
  435c78:	dd2b      	ble.n	435cd2 <_svfprintf_r+0x3ba>
  435c7a:	4649      	mov	r1, r9
  435c7c:	465b      	mov	r3, fp
  435c7e:	46a9      	mov	r9, r5
  435c80:	f04f 0810 	mov.w	r8, #16
  435c84:	f8dd b020 	ldr.w	fp, [sp, #32]
  435c88:	460d      	mov	r5, r1
  435c8a:	e006      	b.n	435c9a <_svfprintf_r+0x382>
  435c8c:	f1aa 0a10 	sub.w	sl, sl, #16
  435c90:	f1ba 0f10 	cmp.w	sl, #16
  435c94:	f104 0408 	add.w	r4, r4, #8
  435c98:	dd17      	ble.n	435cca <_svfprintf_r+0x3b2>
  435c9a:	3201      	adds	r2, #1
  435c9c:	3310      	adds	r3, #16
  435c9e:	2a07      	cmp	r2, #7
  435ca0:	9325      	str	r3, [sp, #148]	; 0x94
  435ca2:	9224      	str	r2, [sp, #144]	; 0x90
  435ca4:	e884 0120 	stmia.w	r4, {r5, r8}
  435ca8:	ddf0      	ble.n	435c8c <_svfprintf_r+0x374>
  435caa:	4658      	mov	r0, fp
  435cac:	4631      	mov	r1, r6
  435cae:	aa23      	add	r2, sp, #140	; 0x8c
  435cb0:	f004 fdec 	bl	43a88c <__ssprint_r>
  435cb4:	2800      	cmp	r0, #0
  435cb6:	f47f aef5 	bne.w	435aa4 <_svfprintf_r+0x18c>
  435cba:	f1aa 0a10 	sub.w	sl, sl, #16
  435cbe:	f1ba 0f10 	cmp.w	sl, #16
  435cc2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  435cc4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  435cc6:	463c      	mov	r4, r7
  435cc8:	dce7      	bgt.n	435c9a <_svfprintf_r+0x382>
  435cca:	469b      	mov	fp, r3
  435ccc:	462b      	mov	r3, r5
  435cce:	464d      	mov	r5, r9
  435cd0:	4699      	mov	r9, r3
  435cd2:	3201      	adds	r2, #1
  435cd4:	44d3      	add	fp, sl
  435cd6:	2a07      	cmp	r2, #7
  435cd8:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  435cdc:	9224      	str	r2, [sp, #144]	; 0x90
  435cde:	e884 0600 	stmia.w	r4, {r9, sl}
  435ce2:	f300 8375 	bgt.w	4363d0 <_svfprintf_r+0xab8>
  435ce6:	3408      	adds	r4, #8
  435ce8:	9b07      	ldr	r3, [sp, #28]
  435cea:	05d9      	lsls	r1, r3, #23
  435cec:	f100 826c 	bmi.w	4361c8 <_svfprintf_r+0x8b0>
  435cf0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  435cf2:	990d      	ldr	r1, [sp, #52]	; 0x34
  435cf4:	9a10      	ldr	r2, [sp, #64]	; 0x40
  435cf6:	6022      	str	r2, [r4, #0]
  435cf8:	3301      	adds	r3, #1
  435cfa:	448b      	add	fp, r1
  435cfc:	2b07      	cmp	r3, #7
  435cfe:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  435d02:	6061      	str	r1, [r4, #4]
  435d04:	9324      	str	r3, [sp, #144]	; 0x90
  435d06:	f300 8346 	bgt.w	436396 <_svfprintf_r+0xa7e>
  435d0a:	3408      	adds	r4, #8
  435d0c:	9b07      	ldr	r3, [sp, #28]
  435d0e:	075a      	lsls	r2, r3, #29
  435d10:	d541      	bpl.n	435d96 <_svfprintf_r+0x47e>
  435d12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  435d14:	9a09      	ldr	r2, [sp, #36]	; 0x24
  435d16:	1a9d      	subs	r5, r3, r2
  435d18:	2d00      	cmp	r5, #0
  435d1a:	dd3c      	ble.n	435d96 <_svfprintf_r+0x47e>
  435d1c:	2d10      	cmp	r5, #16
  435d1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  435d20:	f8df a3b8 	ldr.w	sl, [pc, #952]	; 4360dc <_svfprintf_r+0x7c4>
  435d24:	dd23      	ble.n	435d6e <_svfprintf_r+0x456>
  435d26:	f04f 0810 	mov.w	r8, #16
  435d2a:	465a      	mov	r2, fp
  435d2c:	f8dd 9020 	ldr.w	r9, [sp, #32]
  435d30:	e004      	b.n	435d3c <_svfprintf_r+0x424>
  435d32:	3d10      	subs	r5, #16
  435d34:	2d10      	cmp	r5, #16
  435d36:	f104 0408 	add.w	r4, r4, #8
  435d3a:	dd17      	ble.n	435d6c <_svfprintf_r+0x454>
  435d3c:	3301      	adds	r3, #1
  435d3e:	3210      	adds	r2, #16
  435d40:	2b07      	cmp	r3, #7
  435d42:	9225      	str	r2, [sp, #148]	; 0x94
  435d44:	9324      	str	r3, [sp, #144]	; 0x90
  435d46:	f8c4 a000 	str.w	sl, [r4]
  435d4a:	f8c4 8004 	str.w	r8, [r4, #4]
  435d4e:	ddf0      	ble.n	435d32 <_svfprintf_r+0x41a>
  435d50:	4648      	mov	r0, r9
  435d52:	4631      	mov	r1, r6
  435d54:	aa23      	add	r2, sp, #140	; 0x8c
  435d56:	f004 fd99 	bl	43a88c <__ssprint_r>
  435d5a:	2800      	cmp	r0, #0
  435d5c:	f47f aea2 	bne.w	435aa4 <_svfprintf_r+0x18c>
  435d60:	3d10      	subs	r5, #16
  435d62:	2d10      	cmp	r5, #16
  435d64:	9a25      	ldr	r2, [sp, #148]	; 0x94
  435d66:	9b24      	ldr	r3, [sp, #144]	; 0x90
  435d68:	463c      	mov	r4, r7
  435d6a:	dce7      	bgt.n	435d3c <_svfprintf_r+0x424>
  435d6c:	4693      	mov	fp, r2
  435d6e:	3301      	adds	r3, #1
  435d70:	44ab      	add	fp, r5
  435d72:	2b07      	cmp	r3, #7
  435d74:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  435d78:	9324      	str	r3, [sp, #144]	; 0x90
  435d7a:	f8c4 a000 	str.w	sl, [r4]
  435d7e:	6065      	str	r5, [r4, #4]
  435d80:	dd09      	ble.n	435d96 <_svfprintf_r+0x47e>
  435d82:	9808      	ldr	r0, [sp, #32]
  435d84:	4631      	mov	r1, r6
  435d86:	aa23      	add	r2, sp, #140	; 0x8c
  435d88:	f004 fd80 	bl	43a88c <__ssprint_r>
  435d8c:	2800      	cmp	r0, #0
  435d8e:	f47f ae89 	bne.w	435aa4 <_svfprintf_r+0x18c>
  435d92:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  435d96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  435d98:	9a09      	ldr	r2, [sp, #36]	; 0x24
  435d9a:	990c      	ldr	r1, [sp, #48]	; 0x30
  435d9c:	428a      	cmp	r2, r1
  435d9e:	bfac      	ite	ge
  435da0:	189b      	addge	r3, r3, r2
  435da2:	185b      	addlt	r3, r3, r1
  435da4:	930b      	str	r3, [sp, #44]	; 0x2c
  435da6:	f1bb 0f00 	cmp.w	fp, #0
  435daa:	f47f ae73 	bne.w	435a94 <_svfprintf_r+0x17c>
  435dae:	2300      	movs	r3, #0
  435db0:	9324      	str	r3, [sp, #144]	; 0x90
  435db2:	463c      	mov	r4, r7
  435db4:	e5d5      	b.n	435962 <_svfprintf_r+0x4a>
  435db6:	4619      	mov	r1, r3
  435db8:	9807      	ldr	r0, [sp, #28]
  435dba:	781d      	ldrb	r5, [r3, #0]
  435dbc:	f040 0004 	orr.w	r0, r0, #4
  435dc0:	9007      	str	r0, [sp, #28]
  435dc2:	e5fc      	b.n	4359be <_svfprintf_r+0xa6>
  435dc4:	930a      	str	r3, [sp, #40]	; 0x28
  435dc6:	9b07      	ldr	r3, [sp, #28]
  435dc8:	f013 0320 	ands.w	r3, r3, #32
  435dcc:	f000 810e 	beq.w	435fec <_svfprintf_r+0x6d4>
  435dd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  435dd2:	f103 0907 	add.w	r9, r3, #7
  435dd6:	f029 0307 	bic.w	r3, r9, #7
  435dda:	f103 0208 	add.w	r2, r3, #8
  435dde:	e9d3 8900 	ldrd	r8, r9, [r3]
  435de2:	920e      	str	r2, [sp, #56]	; 0x38
  435de4:	2300      	movs	r3, #0
  435de6:	e67c      	b.n	435ae2 <_svfprintf_r+0x1ca>
  435de8:	781d      	ldrb	r5, [r3, #0]
  435dea:	4619      	mov	r1, r3
  435dec:	222b      	movs	r2, #43	; 0x2b
  435dee:	e5e6      	b.n	4359be <_svfprintf_r+0xa6>
  435df0:	781d      	ldrb	r5, [r3, #0]
  435df2:	2d2a      	cmp	r5, #42	; 0x2a
  435df4:	f103 0101 	add.w	r1, r3, #1
  435df8:	f000 87ad 	beq.w	436d56 <_svfprintf_r+0x143e>
  435dfc:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  435e00:	2809      	cmp	r0, #9
  435e02:	460b      	mov	r3, r1
  435e04:	f04f 0a00 	mov.w	sl, #0
  435e08:	f63f adda 	bhi.w	4359c0 <_svfprintf_r+0xa8>
  435e0c:	f813 5b01 	ldrb.w	r5, [r3], #1
  435e10:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
  435e14:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
  435e18:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  435e1c:	2809      	cmp	r0, #9
  435e1e:	d9f5      	bls.n	435e0c <_svfprintf_r+0x4f4>
  435e20:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
  435e24:	e5cc      	b.n	4359c0 <_svfprintf_r+0xa8>
  435e26:	930a      	str	r3, [sp, #40]	; 0x28
  435e28:	9b07      	ldr	r3, [sp, #28]
  435e2a:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  435e2e:	069b      	lsls	r3, r3, #26
  435e30:	f140 80a1 	bpl.w	435f76 <_svfprintf_r+0x65e>
  435e34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  435e36:	f103 0907 	add.w	r9, r3, #7
  435e3a:	f029 0907 	bic.w	r9, r9, #7
  435e3e:	e9d9 2300 	ldrd	r2, r3, [r9]
  435e42:	f109 0108 	add.w	r1, r9, #8
  435e46:	910e      	str	r1, [sp, #56]	; 0x38
  435e48:	4690      	mov	r8, r2
  435e4a:	4699      	mov	r9, r3
  435e4c:	2a00      	cmp	r2, #0
  435e4e:	f173 0300 	sbcs.w	r3, r3, #0
  435e52:	f2c0 840b 	blt.w	43666c <_svfprintf_r+0xd54>
  435e56:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  435e5a:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  435e5e:	2301      	movs	r3, #1
  435e60:	e645      	b.n	435aee <_svfprintf_r+0x1d6>
  435e62:	930a      	str	r3, [sp, #40]	; 0x28
  435e64:	4b9b      	ldr	r3, [pc, #620]	; (4360d4 <_svfprintf_r+0x7bc>)
  435e66:	9316      	str	r3, [sp, #88]	; 0x58
  435e68:	9b07      	ldr	r3, [sp, #28]
  435e6a:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  435e6e:	069b      	lsls	r3, r3, #26
  435e70:	f140 80f3 	bpl.w	43605a <_svfprintf_r+0x742>
  435e74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  435e76:	f103 0907 	add.w	r9, r3, #7
  435e7a:	f029 0307 	bic.w	r3, r9, #7
  435e7e:	e9d3 8900 	ldrd	r8, r9, [r3]
  435e82:	f103 0208 	add.w	r2, r3, #8
  435e86:	920e      	str	r2, [sp, #56]	; 0x38
  435e88:	9b07      	ldr	r3, [sp, #28]
  435e8a:	07d9      	lsls	r1, r3, #31
  435e8c:	f140 80f5 	bpl.w	43607a <_svfprintf_r+0x762>
  435e90:	ea58 0309 	orrs.w	r3, r8, r9
  435e94:	f000 80f1 	beq.w	43607a <_svfprintf_r+0x762>
  435e98:	9a07      	ldr	r2, [sp, #28]
  435e9a:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
  435e9e:	2330      	movs	r3, #48	; 0x30
  435ea0:	f042 0202 	orr.w	r2, r2, #2
  435ea4:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  435ea8:	9207      	str	r2, [sp, #28]
  435eaa:	2302      	movs	r3, #2
  435eac:	e619      	b.n	435ae2 <_svfprintf_r+0x1ca>
  435eae:	781d      	ldrb	r5, [r3, #0]
  435eb0:	4619      	mov	r1, r3
  435eb2:	2a00      	cmp	r2, #0
  435eb4:	f47f ad83 	bne.w	4359be <_svfprintf_r+0xa6>
  435eb8:	2220      	movs	r2, #32
  435eba:	e580      	b.n	4359be <_svfprintf_r+0xa6>
  435ebc:	9907      	ldr	r1, [sp, #28]
  435ebe:	f041 0120 	orr.w	r1, r1, #32
  435ec2:	9107      	str	r1, [sp, #28]
  435ec4:	781d      	ldrb	r5, [r3, #0]
  435ec6:	4619      	mov	r1, r3
  435ec8:	e579      	b.n	4359be <_svfprintf_r+0xa6>
  435eca:	930a      	str	r3, [sp, #40]	; 0x28
  435ecc:	9b07      	ldr	r3, [sp, #28]
  435ece:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  435ed2:	069a      	lsls	r2, r3, #26
  435ed4:	f140 84a1 	bpl.w	43681a <_svfprintf_r+0xf02>
  435ed8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  435eda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  435edc:	ea4f 79e1 	mov.w	r9, r1, asr #31
  435ee0:	6813      	ldr	r3, [r2, #0]
  435ee2:	4608      	mov	r0, r1
  435ee4:	4688      	mov	r8, r1
  435ee6:	3204      	adds	r2, #4
  435ee8:	4649      	mov	r1, r9
  435eea:	920e      	str	r2, [sp, #56]	; 0x38
  435eec:	e9c3 0100 	strd	r0, r1, [r3]
  435ef0:	e537      	b.n	435962 <_svfprintf_r+0x4a>
  435ef2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  435ef4:	930a      	str	r3, [sp, #40]	; 0x28
  435ef6:	6813      	ldr	r3, [r2, #0]
  435ef8:	9310      	str	r3, [sp, #64]	; 0x40
  435efa:	f04f 0b00 	mov.w	fp, #0
  435efe:	f88d b06f 	strb.w	fp, [sp, #111]	; 0x6f
  435f02:	f102 0904 	add.w	r9, r2, #4
  435f06:	2b00      	cmp	r3, #0
  435f08:	f000 863b 	beq.w	436b82 <_svfprintf_r+0x126a>
  435f0c:	f1ba 0f00 	cmp.w	sl, #0
  435f10:	9810      	ldr	r0, [sp, #64]	; 0x40
  435f12:	f2c0 85e9 	blt.w	436ae8 <_svfprintf_r+0x11d0>
  435f16:	4659      	mov	r1, fp
  435f18:	4652      	mov	r2, sl
  435f1a:	f7fe ff61 	bl	434de0 <memchr>
  435f1e:	2800      	cmp	r0, #0
  435f20:	f000 866c 	beq.w	436bfc <_svfprintf_r+0x12e4>
  435f24:	9b10      	ldr	r3, [sp, #64]	; 0x40
  435f26:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  435f2a:	1ac3      	subs	r3, r0, r3
  435f2c:	930d      	str	r3, [sp, #52]	; 0x34
  435f2e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  435f32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  435f36:	9309      	str	r3, [sp, #36]	; 0x24
  435f38:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
  435f3c:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  435f40:	e60a      	b.n	435b58 <_svfprintf_r+0x240>
  435f42:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  435f46:	2100      	movs	r1, #0
  435f48:	f813 5b01 	ldrb.w	r5, [r3], #1
  435f4c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  435f50:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  435f54:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  435f58:	2809      	cmp	r0, #9
  435f5a:	d9f5      	bls.n	435f48 <_svfprintf_r+0x630>
  435f5c:	910c      	str	r1, [sp, #48]	; 0x30
  435f5e:	e52f      	b.n	4359c0 <_svfprintf_r+0xa8>
  435f60:	930a      	str	r3, [sp, #40]	; 0x28
  435f62:	9b07      	ldr	r3, [sp, #28]
  435f64:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  435f68:	f043 0310 	orr.w	r3, r3, #16
  435f6c:	9307      	str	r3, [sp, #28]
  435f6e:	9b07      	ldr	r3, [sp, #28]
  435f70:	069b      	lsls	r3, r3, #26
  435f72:	f53f af5f 	bmi.w	435e34 <_svfprintf_r+0x51c>
  435f76:	9b07      	ldr	r3, [sp, #28]
  435f78:	06d8      	lsls	r0, r3, #27
  435f7a:	f100 8368 	bmi.w	43664e <_svfprintf_r+0xd36>
  435f7e:	9b07      	ldr	r3, [sp, #28]
  435f80:	0659      	lsls	r1, r3, #25
  435f82:	f140 8364 	bpl.w	43664e <_svfprintf_r+0xd36>
  435f86:	990e      	ldr	r1, [sp, #56]	; 0x38
  435f88:	f9b1 8000 	ldrsh.w	r8, [r1]
  435f8c:	3104      	adds	r1, #4
  435f8e:	ea4f 79e8 	mov.w	r9, r8, asr #31
  435f92:	4642      	mov	r2, r8
  435f94:	464b      	mov	r3, r9
  435f96:	910e      	str	r1, [sp, #56]	; 0x38
  435f98:	e758      	b.n	435e4c <_svfprintf_r+0x534>
  435f9a:	781d      	ldrb	r5, [r3, #0]
  435f9c:	9907      	ldr	r1, [sp, #28]
  435f9e:	2d6c      	cmp	r5, #108	; 0x6c
  435fa0:	f000 84cb 	beq.w	43693a <_svfprintf_r+0x1022>
  435fa4:	f041 0110 	orr.w	r1, r1, #16
  435fa8:	9107      	str	r1, [sp, #28]
  435faa:	4619      	mov	r1, r3
  435fac:	e507      	b.n	4359be <_svfprintf_r+0xa6>
  435fae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  435fb0:	6829      	ldr	r1, [r5, #0]
  435fb2:	910c      	str	r1, [sp, #48]	; 0x30
  435fb4:	4608      	mov	r0, r1
  435fb6:	2800      	cmp	r0, #0
  435fb8:	4629      	mov	r1, r5
  435fba:	f101 0104 	add.w	r1, r1, #4
  435fbe:	f2c0 84b5 	blt.w	43692c <_svfprintf_r+0x1014>
  435fc2:	910e      	str	r1, [sp, #56]	; 0x38
  435fc4:	781d      	ldrb	r5, [r3, #0]
  435fc6:	4619      	mov	r1, r3
  435fc8:	e4f9      	b.n	4359be <_svfprintf_r+0xa6>
  435fca:	9907      	ldr	r1, [sp, #28]
  435fcc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
  435fd0:	9107      	str	r1, [sp, #28]
  435fd2:	781d      	ldrb	r5, [r3, #0]
  435fd4:	4619      	mov	r1, r3
  435fd6:	e4f2      	b.n	4359be <_svfprintf_r+0xa6>
  435fd8:	930a      	str	r3, [sp, #40]	; 0x28
  435fda:	9b07      	ldr	r3, [sp, #28]
  435fdc:	f043 0310 	orr.w	r3, r3, #16
  435fe0:	9307      	str	r3, [sp, #28]
  435fe2:	9b07      	ldr	r3, [sp, #28]
  435fe4:	f013 0320 	ands.w	r3, r3, #32
  435fe8:	f47f aef2 	bne.w	435dd0 <_svfprintf_r+0x4b8>
  435fec:	9a07      	ldr	r2, [sp, #28]
  435fee:	f012 0210 	ands.w	r2, r2, #16
  435ff2:	f040 8319 	bne.w	436628 <_svfprintf_r+0xd10>
  435ff6:	9b07      	ldr	r3, [sp, #28]
  435ff8:	f013 0340 	ands.w	r3, r3, #64	; 0x40
  435ffc:	f000 8314 	beq.w	436628 <_svfprintf_r+0xd10>
  436000:	990e      	ldr	r1, [sp, #56]	; 0x38
  436002:	4613      	mov	r3, r2
  436004:	460a      	mov	r2, r1
  436006:	3204      	adds	r2, #4
  436008:	f8b1 8000 	ldrh.w	r8, [r1]
  43600c:	920e      	str	r2, [sp, #56]	; 0x38
  43600e:	f04f 0900 	mov.w	r9, #0
  436012:	e566      	b.n	435ae2 <_svfprintf_r+0x1ca>
  436014:	930a      	str	r3, [sp, #40]	; 0x28
  436016:	9b07      	ldr	r3, [sp, #28]
  436018:	f043 0310 	orr.w	r3, r3, #16
  43601c:	9307      	str	r3, [sp, #28]
  43601e:	9b07      	ldr	r3, [sp, #28]
  436020:	0698      	lsls	r0, r3, #26
  436022:	f53f ad53 	bmi.w	435acc <_svfprintf_r+0x1b4>
  436026:	9b07      	ldr	r3, [sp, #28]
  436028:	06d9      	lsls	r1, r3, #27
  43602a:	f100 8306 	bmi.w	43663a <_svfprintf_r+0xd22>
  43602e:	9b07      	ldr	r3, [sp, #28]
  436030:	065a      	lsls	r2, r3, #25
  436032:	f140 8302 	bpl.w	43663a <_svfprintf_r+0xd22>
  436036:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  436038:	f8b2 8000 	ldrh.w	r8, [r2]
  43603c:	3204      	adds	r2, #4
  43603e:	f04f 0900 	mov.w	r9, #0
  436042:	2301      	movs	r3, #1
  436044:	920e      	str	r2, [sp, #56]	; 0x38
  436046:	e54c      	b.n	435ae2 <_svfprintf_r+0x1ca>
  436048:	930a      	str	r3, [sp, #40]	; 0x28
  43604a:	4b23      	ldr	r3, [pc, #140]	; (4360d8 <_svfprintf_r+0x7c0>)
  43604c:	9316      	str	r3, [sp, #88]	; 0x58
  43604e:	9b07      	ldr	r3, [sp, #28]
  436050:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  436054:	069b      	lsls	r3, r3, #26
  436056:	f53f af0d 	bmi.w	435e74 <_svfprintf_r+0x55c>
  43605a:	9b07      	ldr	r3, [sp, #28]
  43605c:	06d8      	lsls	r0, r3, #27
  43605e:	f140 83cd 	bpl.w	4367fc <_svfprintf_r+0xee4>
  436062:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  436064:	4613      	mov	r3, r2
  436066:	681b      	ldr	r3, [r3, #0]
  436068:	4698      	mov	r8, r3
  43606a:	9b07      	ldr	r3, [sp, #28]
  43606c:	3204      	adds	r2, #4
  43606e:	07d9      	lsls	r1, r3, #31
  436070:	920e      	str	r2, [sp, #56]	; 0x38
  436072:	f04f 0900 	mov.w	r9, #0
  436076:	f53f af0b 	bmi.w	435e90 <_svfprintf_r+0x578>
  43607a:	2302      	movs	r3, #2
  43607c:	e531      	b.n	435ae2 <_svfprintf_r+0x1ca>
  43607e:	990e      	ldr	r1, [sp, #56]	; 0x38
  436080:	930a      	str	r3, [sp, #40]	; 0x28
  436082:	680a      	ldr	r2, [r1, #0]
  436084:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  436088:	2300      	movs	r3, #0
  43608a:	2201      	movs	r2, #1
  43608c:	3104      	adds	r1, #4
  43608e:	469c      	mov	ip, r3
  436090:	9209      	str	r2, [sp, #36]	; 0x24
  436092:	910e      	str	r1, [sp, #56]	; 0x38
  436094:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  436098:	ab26      	add	r3, sp, #152	; 0x98
  43609a:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
  43609e:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
  4360a2:	920d      	str	r2, [sp, #52]	; 0x34
  4360a4:	9310      	str	r3, [sp, #64]	; 0x40
  4360a6:	e55d      	b.n	435b64 <_svfprintf_r+0x24c>
  4360a8:	9907      	ldr	r1, [sp, #28]
  4360aa:	f041 0108 	orr.w	r1, r1, #8
  4360ae:	9107      	str	r1, [sp, #28]
  4360b0:	781d      	ldrb	r5, [r3, #0]
  4360b2:	4619      	mov	r1, r3
  4360b4:	e483      	b.n	4359be <_svfprintf_r+0xa6>
  4360b6:	9907      	ldr	r1, [sp, #28]
  4360b8:	f041 0101 	orr.w	r1, r1, #1
  4360bc:	9107      	str	r1, [sp, #28]
  4360be:	781d      	ldrb	r5, [r3, #0]
  4360c0:	4619      	mov	r1, r3
  4360c2:	e47c      	b.n	4359be <_svfprintf_r+0xa6>
  4360c4:	9907      	ldr	r1, [sp, #28]
  4360c6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  4360ca:	9107      	str	r1, [sp, #28]
  4360cc:	781d      	ldrb	r5, [r3, #0]
  4360ce:	4619      	mov	r1, r3
  4360d0:	e475      	b.n	4359be <_svfprintf_r+0xa6>
  4360d2:	bf00      	nop
  4360d4:	00440498 	.word	0x00440498
  4360d8:	00440484 	.word	0x00440484
  4360dc:	00440464 	.word	0x00440464
  4360e0:	00440454 	.word	0x00440454
  4360e4:	930a      	str	r3, [sp, #40]	; 0x28
  4360e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4360e8:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  4360ec:	f103 0907 	add.w	r9, r3, #7
  4360f0:	f029 0307 	bic.w	r3, r9, #7
  4360f4:	f103 0208 	add.w	r2, r3, #8
  4360f8:	920e      	str	r2, [sp, #56]	; 0x38
  4360fa:	681a      	ldr	r2, [r3, #0]
  4360fc:	9214      	str	r2, [sp, #80]	; 0x50
  4360fe:	685b      	ldr	r3, [r3, #4]
  436100:	9315      	str	r3, [sp, #84]	; 0x54
  436102:	9915      	ldr	r1, [sp, #84]	; 0x54
  436104:	9814      	ldr	r0, [sp, #80]	; 0x50
  436106:	f004 fb95 	bl	43a834 <__fpclassifyd>
  43610a:	2801      	cmp	r0, #1
  43610c:	46d3      	mov	fp, sl
  43610e:	9814      	ldr	r0, [sp, #80]	; 0x50
  436110:	9915      	ldr	r1, [sp, #84]	; 0x54
  436112:	f040 8359 	bne.w	4367c8 <_svfprintf_r+0xeb0>
  436116:	2200      	movs	r2, #0
  436118:	2300      	movs	r3, #0
  43611a:	f7fc f88d 	bl	432238 <__aeabi_dcmplt>
  43611e:	2800      	cmp	r0, #0
  436120:	f040 8564 	bne.w	436bec <_svfprintf_r+0x12d4>
  436124:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  436128:	9b07      	ldr	r3, [sp, #28]
  43612a:	4abe      	ldr	r2, [pc, #760]	; (436424 <_svfprintf_r+0xb0c>)
  43612c:	f8df e300 	ldr.w	lr, [pc, #768]	; 436430 <_svfprintf_r+0xb18>
  436130:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  436134:	9307      	str	r3, [sp, #28]
  436136:	4613      	mov	r3, r2
  436138:	2103      	movs	r1, #3
  43613a:	2000      	movs	r0, #0
  43613c:	2d47      	cmp	r5, #71	; 0x47
  43613e:	bfd8      	it	le
  436140:	4673      	movle	r3, lr
  436142:	9109      	str	r1, [sp, #36]	; 0x24
  436144:	9011      	str	r0, [sp, #68]	; 0x44
  436146:	9310      	str	r3, [sp, #64]	; 0x40
  436148:	910d      	str	r1, [sp, #52]	; 0x34
  43614a:	9012      	str	r0, [sp, #72]	; 0x48
  43614c:	e504      	b.n	435b58 <_svfprintf_r+0x240>
  43614e:	980e      	ldr	r0, [sp, #56]	; 0x38
  436150:	9907      	ldr	r1, [sp, #28]
  436152:	930a      	str	r3, [sp, #40]	; 0x28
  436154:	2230      	movs	r2, #48	; 0x30
  436156:	6803      	ldr	r3, [r0, #0]
  436158:	f88d 2070 	strb.w	r2, [sp, #112]	; 0x70
  43615c:	4602      	mov	r2, r0
  43615e:	2578      	movs	r5, #120	; 0x78
  436160:	f041 0102 	orr.w	r1, r1, #2
  436164:	3204      	adds	r2, #4
  436166:	4698      	mov	r8, r3
  436168:	4baf      	ldr	r3, [pc, #700]	; (436428 <_svfprintf_r+0xb10>)
  43616a:	9316      	str	r3, [sp, #88]	; 0x58
  43616c:	9107      	str	r1, [sp, #28]
  43616e:	920e      	str	r2, [sp, #56]	; 0x38
  436170:	f04f 0900 	mov.w	r9, #0
  436174:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
  436178:	2302      	movs	r3, #2
  43617a:	e4b2      	b.n	435ae2 <_svfprintf_r+0x1ca>
  43617c:	930a      	str	r3, [sp, #40]	; 0x28
  43617e:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  436182:	2d00      	cmp	r5, #0
  436184:	f000 83c6 	beq.w	436914 <_svfprintf_r+0xffc>
  436188:	2300      	movs	r3, #0
  43618a:	2201      	movs	r2, #1
  43618c:	469c      	mov	ip, r3
  43618e:	9209      	str	r2, [sp, #36]	; 0x24
  436190:	f88d 5098 	strb.w	r5, [sp, #152]	; 0x98
  436194:	e77e      	b.n	436094 <_svfprintf_r+0x77c>
  436196:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  43619a:	e539      	b.n	435c10 <_svfprintf_r+0x2f8>
  43619c:	2b01      	cmp	r3, #1
  43619e:	f47f acb8 	bne.w	435b12 <_svfprintf_r+0x1fa>
  4361a2:	f1b9 0f00 	cmp.w	r9, #0
  4361a6:	bf08      	it	eq
  4361a8:	f1b8 0f0a 	cmpeq.w	r8, #10
  4361ac:	f080 821c 	bcs.w	4365e8 <_svfprintf_r+0xcd0>
  4361b0:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
  4361b4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4361b8:	f80b 8d41 	strb.w	r8, [fp, #-65]!
  4361bc:	ebcb 0307 	rsb	r3, fp, r7
  4361c0:	930d      	str	r3, [sp, #52]	; 0x34
  4361c2:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
  4361c6:	e4bf      	b.n	435b48 <_svfprintf_r+0x230>
  4361c8:	2d65      	cmp	r5, #101	; 0x65
  4361ca:	f340 80a0 	ble.w	43630e <_svfprintf_r+0x9f6>
  4361ce:	9814      	ldr	r0, [sp, #80]	; 0x50
  4361d0:	9915      	ldr	r1, [sp, #84]	; 0x54
  4361d2:	2200      	movs	r2, #0
  4361d4:	2300      	movs	r3, #0
  4361d6:	f7fc f825 	bl	432224 <__aeabi_dcmpeq>
  4361da:	2800      	cmp	r0, #0
  4361dc:	f000 8145 	beq.w	43646a <_svfprintf_r+0xb52>
  4361e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4361e2:	4a92      	ldr	r2, [pc, #584]	; (43642c <_svfprintf_r+0xb14>)
  4361e4:	6022      	str	r2, [r4, #0]
  4361e6:	3301      	adds	r3, #1
  4361e8:	f10b 0b01 	add.w	fp, fp, #1
  4361ec:	2201      	movs	r2, #1
  4361ee:	2b07      	cmp	r3, #7
  4361f0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  4361f4:	9324      	str	r3, [sp, #144]	; 0x90
  4361f6:	6062      	str	r2, [r4, #4]
  4361f8:	f300 8334 	bgt.w	436864 <_svfprintf_r+0xf4c>
  4361fc:	3408      	adds	r4, #8
  4361fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  436200:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  436202:	4293      	cmp	r3, r2
  436204:	db03      	blt.n	43620e <_svfprintf_r+0x8f6>
  436206:	9b07      	ldr	r3, [sp, #28]
  436208:	07da      	lsls	r2, r3, #31
  43620a:	f57f ad7f 	bpl.w	435d0c <_svfprintf_r+0x3f4>
  43620e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  436210:	9918      	ldr	r1, [sp, #96]	; 0x60
  436212:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  436214:	6022      	str	r2, [r4, #0]
  436216:	3301      	adds	r3, #1
  436218:	448b      	add	fp, r1
  43621a:	2b07      	cmp	r3, #7
  43621c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436220:	6061      	str	r1, [r4, #4]
  436222:	9324      	str	r3, [sp, #144]	; 0x90
  436224:	f300 8390 	bgt.w	436948 <_svfprintf_r+0x1030>
  436228:	3408      	adds	r4, #8
  43622a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  43622c:	1e5d      	subs	r5, r3, #1
  43622e:	2d00      	cmp	r5, #0
  436230:	f77f ad6c 	ble.w	435d0c <_svfprintf_r+0x3f4>
  436234:	2d10      	cmp	r5, #16
  436236:	9b24      	ldr	r3, [sp, #144]	; 0x90
  436238:	f8df 91f8 	ldr.w	r9, [pc, #504]	; 436434 <_svfprintf_r+0xb1c>
  43623c:	f340 81ba 	ble.w	4365b4 <_svfprintf_r+0xc9c>
  436240:	f04f 0810 	mov.w	r8, #16
  436244:	465a      	mov	r2, fp
  436246:	f8dd a020 	ldr.w	sl, [sp, #32]
  43624a:	e004      	b.n	436256 <_svfprintf_r+0x93e>
  43624c:	3408      	adds	r4, #8
  43624e:	3d10      	subs	r5, #16
  436250:	2d10      	cmp	r5, #16
  436252:	f340 81ae 	ble.w	4365b2 <_svfprintf_r+0xc9a>
  436256:	3301      	adds	r3, #1
  436258:	3210      	adds	r2, #16
  43625a:	2b07      	cmp	r3, #7
  43625c:	9225      	str	r2, [sp, #148]	; 0x94
  43625e:	9324      	str	r3, [sp, #144]	; 0x90
  436260:	f8c4 9000 	str.w	r9, [r4]
  436264:	f8c4 8004 	str.w	r8, [r4, #4]
  436268:	ddf0      	ble.n	43624c <_svfprintf_r+0x934>
  43626a:	4650      	mov	r0, sl
  43626c:	4631      	mov	r1, r6
  43626e:	aa23      	add	r2, sp, #140	; 0x8c
  436270:	f004 fb0c 	bl	43a88c <__ssprint_r>
  436274:	2800      	cmp	r0, #0
  436276:	f47f ac15 	bne.w	435aa4 <_svfprintf_r+0x18c>
  43627a:	9a25      	ldr	r2, [sp, #148]	; 0x94
  43627c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  43627e:	463c      	mov	r4, r7
  436280:	e7e5      	b.n	43624e <_svfprintf_r+0x936>
  436282:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  436284:	9a09      	ldr	r2, [sp, #36]	; 0x24
  436286:	ebc2 0a03 	rsb	sl, r2, r3
  43628a:	f1ba 0f00 	cmp.w	sl, #0
  43628e:	f77f ace7 	ble.w	435c60 <_svfprintf_r+0x348>
  436292:	f1ba 0f10 	cmp.w	sl, #16
  436296:	9a24      	ldr	r2, [sp, #144]	; 0x90
  436298:	f8df 9198 	ldr.w	r9, [pc, #408]	; 436434 <_svfprintf_r+0xb1c>
  43629c:	dd2b      	ble.n	4362f6 <_svfprintf_r+0x9de>
  43629e:	4649      	mov	r1, r9
  4362a0:	465b      	mov	r3, fp
  4362a2:	46a9      	mov	r9, r5
  4362a4:	f04f 0810 	mov.w	r8, #16
  4362a8:	f8dd b020 	ldr.w	fp, [sp, #32]
  4362ac:	460d      	mov	r5, r1
  4362ae:	e006      	b.n	4362be <_svfprintf_r+0x9a6>
  4362b0:	f1aa 0a10 	sub.w	sl, sl, #16
  4362b4:	f1ba 0f10 	cmp.w	sl, #16
  4362b8:	f104 0408 	add.w	r4, r4, #8
  4362bc:	dd17      	ble.n	4362ee <_svfprintf_r+0x9d6>
  4362be:	3201      	adds	r2, #1
  4362c0:	3310      	adds	r3, #16
  4362c2:	2a07      	cmp	r2, #7
  4362c4:	9325      	str	r3, [sp, #148]	; 0x94
  4362c6:	9224      	str	r2, [sp, #144]	; 0x90
  4362c8:	e884 0120 	stmia.w	r4, {r5, r8}
  4362cc:	ddf0      	ble.n	4362b0 <_svfprintf_r+0x998>
  4362ce:	4658      	mov	r0, fp
  4362d0:	4631      	mov	r1, r6
  4362d2:	aa23      	add	r2, sp, #140	; 0x8c
  4362d4:	f004 fada 	bl	43a88c <__ssprint_r>
  4362d8:	2800      	cmp	r0, #0
  4362da:	f47f abe3 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4362de:	f1aa 0a10 	sub.w	sl, sl, #16
  4362e2:	f1ba 0f10 	cmp.w	sl, #16
  4362e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4362e8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4362ea:	463c      	mov	r4, r7
  4362ec:	dce7      	bgt.n	4362be <_svfprintf_r+0x9a6>
  4362ee:	469b      	mov	fp, r3
  4362f0:	462b      	mov	r3, r5
  4362f2:	464d      	mov	r5, r9
  4362f4:	4699      	mov	r9, r3
  4362f6:	3201      	adds	r2, #1
  4362f8:	44d3      	add	fp, sl
  4362fa:	2a07      	cmp	r2, #7
  4362fc:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436300:	9224      	str	r2, [sp, #144]	; 0x90
  436302:	e884 0600 	stmia.w	r4, {r9, sl}
  436306:	f300 8252 	bgt.w	4367ae <_svfprintf_r+0xe96>
  43630a:	3408      	adds	r4, #8
  43630c:	e4a8      	b.n	435c60 <_svfprintf_r+0x348>
  43630e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  436310:	9d24      	ldr	r5, [sp, #144]	; 0x90
  436312:	2b01      	cmp	r3, #1
  436314:	f340 8220 	ble.w	436758 <_svfprintf_r+0xe40>
  436318:	9b10      	ldr	r3, [sp, #64]	; 0x40
  43631a:	6023      	str	r3, [r4, #0]
  43631c:	3501      	adds	r5, #1
  43631e:	f10b 0301 	add.w	r3, fp, #1
  436322:	2201      	movs	r2, #1
  436324:	2d07      	cmp	r5, #7
  436326:	9325      	str	r3, [sp, #148]	; 0x94
  436328:	9524      	str	r5, [sp, #144]	; 0x90
  43632a:	6062      	str	r2, [r4, #4]
  43632c:	f300 8226 	bgt.w	43677c <_svfprintf_r+0xe64>
  436330:	3408      	adds	r4, #8
  436332:	9918      	ldr	r1, [sp, #96]	; 0x60
  436334:	6061      	str	r1, [r4, #4]
  436336:	3501      	adds	r5, #1
  436338:	eb03 0b01 	add.w	fp, r3, r1
  43633c:	2d07      	cmp	r5, #7
  43633e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  436340:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436344:	9524      	str	r5, [sp, #144]	; 0x90
  436346:	6023      	str	r3, [r4, #0]
  436348:	f300 8224 	bgt.w	436794 <_svfprintf_r+0xe7c>
  43634c:	3408      	adds	r4, #8
  43634e:	2300      	movs	r3, #0
  436350:	9814      	ldr	r0, [sp, #80]	; 0x50
  436352:	9915      	ldr	r1, [sp, #84]	; 0x54
  436354:	2200      	movs	r2, #0
  436356:	f7fb ff65 	bl	432224 <__aeabi_dcmpeq>
  43635a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  43635c:	2800      	cmp	r0, #0
  43635e:	f040 80de 	bne.w	43651e <_svfprintf_r+0xc06>
  436362:	9a10      	ldr	r2, [sp, #64]	; 0x40
  436364:	3b01      	subs	r3, #1
  436366:	3501      	adds	r5, #1
  436368:	3201      	adds	r2, #1
  43636a:	449b      	add	fp, r3
  43636c:	2d07      	cmp	r5, #7
  43636e:	9524      	str	r5, [sp, #144]	; 0x90
  436370:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436374:	6022      	str	r2, [r4, #0]
  436376:	6063      	str	r3, [r4, #4]
  436378:	f300 810e 	bgt.w	436598 <_svfprintf_r+0xc80>
  43637c:	3408      	adds	r4, #8
  43637e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  436380:	6062      	str	r2, [r4, #4]
  436382:	3501      	adds	r5, #1
  436384:	4493      	add	fp, r2
  436386:	ab1f      	add	r3, sp, #124	; 0x7c
  436388:	2d07      	cmp	r5, #7
  43638a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  43638e:	9524      	str	r5, [sp, #144]	; 0x90
  436390:	6023      	str	r3, [r4, #0]
  436392:	f77f acba 	ble.w	435d0a <_svfprintf_r+0x3f2>
  436396:	9808      	ldr	r0, [sp, #32]
  436398:	4631      	mov	r1, r6
  43639a:	aa23      	add	r2, sp, #140	; 0x8c
  43639c:	f004 fa76 	bl	43a88c <__ssprint_r>
  4363a0:	2800      	cmp	r0, #0
  4363a2:	f47f ab7f 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4363a6:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  4363aa:	463c      	mov	r4, r7
  4363ac:	e4ae      	b.n	435d0c <_svfprintf_r+0x3f4>
  4363ae:	2b00      	cmp	r3, #0
  4363b0:	d132      	bne.n	436418 <_svfprintf_r+0xb00>
  4363b2:	9b07      	ldr	r3, [sp, #28]
  4363b4:	07d8      	lsls	r0, r3, #31
  4363b6:	d52f      	bpl.n	436418 <_svfprintf_r+0xb00>
  4363b8:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
  4363bc:	2330      	movs	r3, #48	; 0x30
  4363be:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  4363c2:	ebcb 0307 	rsb	r3, fp, r7
  4363c6:	930d      	str	r3, [sp, #52]	; 0x34
  4363c8:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
  4363cc:	f7ff bbbc 	b.w	435b48 <_svfprintf_r+0x230>
  4363d0:	9808      	ldr	r0, [sp, #32]
  4363d2:	4631      	mov	r1, r6
  4363d4:	aa23      	add	r2, sp, #140	; 0x8c
  4363d6:	f004 fa59 	bl	43a88c <__ssprint_r>
  4363da:	2800      	cmp	r0, #0
  4363dc:	f47f ab62 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4363e0:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  4363e4:	463c      	mov	r4, r7
  4363e6:	e47f      	b.n	435ce8 <_svfprintf_r+0x3d0>
  4363e8:	9808      	ldr	r0, [sp, #32]
  4363ea:	4631      	mov	r1, r6
  4363ec:	aa23      	add	r2, sp, #140	; 0x8c
  4363ee:	f004 fa4d 	bl	43a88c <__ssprint_r>
  4363f2:	2800      	cmp	r0, #0
  4363f4:	f47f ab56 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4363f8:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  4363fc:	463c      	mov	r4, r7
  4363fe:	e41a      	b.n	435c36 <_svfprintf_r+0x31e>
  436400:	9808      	ldr	r0, [sp, #32]
  436402:	4631      	mov	r1, r6
  436404:	aa23      	add	r2, sp, #140	; 0x8c
  436406:	f004 fa41 	bl	43a88c <__ssprint_r>
  43640a:	2800      	cmp	r0, #0
  43640c:	f47f ab4a 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436410:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  436414:	463c      	mov	r4, r7
  436416:	e41f      	b.n	435c58 <_svfprintf_r+0x340>
  436418:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  43641c:	9710      	str	r7, [sp, #64]	; 0x40
  43641e:	f7ff bb93 	b.w	435b48 <_svfprintf_r+0x230>
  436422:	bf00      	nop
  436424:	00440478 	.word	0x00440478
  436428:	00440498 	.word	0x00440498
  43642c:	0043faa4 	.word	0x0043faa4
  436430:	00440474 	.word	0x00440474
  436434:	00440454 	.word	0x00440454
  436438:	9816      	ldr	r0, [sp, #88]	; 0x58
  43643a:	46bb      	mov	fp, r7
  43643c:	ea4f 1318 	mov.w	r3, r8, lsr #4
  436440:	f008 010f 	and.w	r1, r8, #15
  436444:	ea43 7309 	orr.w	r3, r3, r9, lsl #28
  436448:	ea4f 1219 	mov.w	r2, r9, lsr #4
  43644c:	4698      	mov	r8, r3
  43644e:	4691      	mov	r9, r2
  436450:	5c43      	ldrb	r3, [r0, r1]
  436452:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  436456:	ea58 0309 	orrs.w	r3, r8, r9
  43645a:	d1ef      	bne.n	43643c <_svfprintf_r+0xb24>
  43645c:	465b      	mov	r3, fp
  43645e:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
  436462:	1afb      	subs	r3, r7, r3
  436464:	930d      	str	r3, [sp, #52]	; 0x34
  436466:	f7ff bb6f 	b.w	435b48 <_svfprintf_r+0x230>
  43646a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  43646c:	2d00      	cmp	r5, #0
  43646e:	f340 8205 	ble.w	43687c <_svfprintf_r+0xf64>
  436472:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  436474:	9912      	ldr	r1, [sp, #72]	; 0x48
  436476:	428a      	cmp	r2, r1
  436478:	4613      	mov	r3, r2
  43647a:	bfa8      	it	ge
  43647c:	460b      	movge	r3, r1
  43647e:	461d      	mov	r5, r3
  436480:	9910      	ldr	r1, [sp, #64]	; 0x40
  436482:	2d00      	cmp	r5, #0
  436484:	eb01 0a02 	add.w	sl, r1, r2
  436488:	dd0b      	ble.n	4364a2 <_svfprintf_r+0xb8a>
  43648a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  43648c:	6021      	str	r1, [r4, #0]
  43648e:	3301      	adds	r3, #1
  436490:	44ab      	add	fp, r5
  436492:	2b07      	cmp	r3, #7
  436494:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436498:	6065      	str	r5, [r4, #4]
  43649a:	9324      	str	r3, [sp, #144]	; 0x90
  43649c:	f300 834d 	bgt.w	436b3a <_svfprintf_r+0x1222>
  4364a0:	3408      	adds	r4, #8
  4364a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4364a4:	2d00      	cmp	r5, #0
  4364a6:	bfa8      	it	ge
  4364a8:	1b5b      	subge	r3, r3, r5
  4364aa:	2b00      	cmp	r3, #0
  4364ac:	461d      	mov	r5, r3
  4364ae:	f340 80f5 	ble.w	43669c <_svfprintf_r+0xd84>
  4364b2:	2d10      	cmp	r5, #16
  4364b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4364b6:	f8df 95f4 	ldr.w	r9, [pc, #1524]	; 436aac <_svfprintf_r+0x1194>
  4364ba:	f340 81c6 	ble.w	43684a <_svfprintf_r+0xf32>
  4364be:	465a      	mov	r2, fp
  4364c0:	f04f 0810 	mov.w	r8, #16
  4364c4:	f8dd b020 	ldr.w	fp, [sp, #32]
  4364c8:	e004      	b.n	4364d4 <_svfprintf_r+0xbbc>
  4364ca:	3408      	adds	r4, #8
  4364cc:	3d10      	subs	r5, #16
  4364ce:	2d10      	cmp	r5, #16
  4364d0:	f340 81ba 	ble.w	436848 <_svfprintf_r+0xf30>
  4364d4:	3301      	adds	r3, #1
  4364d6:	3210      	adds	r2, #16
  4364d8:	2b07      	cmp	r3, #7
  4364da:	9225      	str	r2, [sp, #148]	; 0x94
  4364dc:	9324      	str	r3, [sp, #144]	; 0x90
  4364de:	f8c4 9000 	str.w	r9, [r4]
  4364e2:	f8c4 8004 	str.w	r8, [r4, #4]
  4364e6:	ddf0      	ble.n	4364ca <_svfprintf_r+0xbb2>
  4364e8:	4658      	mov	r0, fp
  4364ea:	4631      	mov	r1, r6
  4364ec:	aa23      	add	r2, sp, #140	; 0x8c
  4364ee:	f004 f9cd 	bl	43a88c <__ssprint_r>
  4364f2:	2800      	cmp	r0, #0
  4364f4:	f47f aad6 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4364f8:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4364fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4364fc:	463c      	mov	r4, r7
  4364fe:	e7e5      	b.n	4364cc <_svfprintf_r+0xbb4>
  436500:	9808      	ldr	r0, [sp, #32]
  436502:	4631      	mov	r1, r6
  436504:	aa23      	add	r2, sp, #140	; 0x8c
  436506:	f004 f9c1 	bl	43a88c <__ssprint_r>
  43650a:	2800      	cmp	r0, #0
  43650c:	f47f aaca 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436510:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  436514:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  436518:	463c      	mov	r4, r7
  43651a:	f7ff bb79 	b.w	435c10 <_svfprintf_r+0x2f8>
  43651e:	f103 38ff 	add.w	r8, r3, #4294967295
  436522:	f1b8 0f00 	cmp.w	r8, #0
  436526:	f77f af2a 	ble.w	43637e <_svfprintf_r+0xa66>
  43652a:	f1b8 0f10 	cmp.w	r8, #16
  43652e:	f8df 957c 	ldr.w	r9, [pc, #1404]	; 436aac <_svfprintf_r+0x1194>
  436532:	dd25      	ble.n	436580 <_svfprintf_r+0xc68>
  436534:	465b      	mov	r3, fp
  436536:	f04f 0a10 	mov.w	sl, #16
  43653a:	f8dd b020 	ldr.w	fp, [sp, #32]
  43653e:	e006      	b.n	43654e <_svfprintf_r+0xc36>
  436540:	f1a8 0810 	sub.w	r8, r8, #16
  436544:	f1b8 0f10 	cmp.w	r8, #16
  436548:	f104 0408 	add.w	r4, r4, #8
  43654c:	dd17      	ble.n	43657e <_svfprintf_r+0xc66>
  43654e:	3501      	adds	r5, #1
  436550:	3310      	adds	r3, #16
  436552:	2d07      	cmp	r5, #7
  436554:	9325      	str	r3, [sp, #148]	; 0x94
  436556:	9524      	str	r5, [sp, #144]	; 0x90
  436558:	e884 0600 	stmia.w	r4, {r9, sl}
  43655c:	ddf0      	ble.n	436540 <_svfprintf_r+0xc28>
  43655e:	4658      	mov	r0, fp
  436560:	4631      	mov	r1, r6
  436562:	aa23      	add	r2, sp, #140	; 0x8c
  436564:	f004 f992 	bl	43a88c <__ssprint_r>
  436568:	2800      	cmp	r0, #0
  43656a:	f47f aa9b 	bne.w	435aa4 <_svfprintf_r+0x18c>
  43656e:	f1a8 0810 	sub.w	r8, r8, #16
  436572:	f1b8 0f10 	cmp.w	r8, #16
  436576:	9b25      	ldr	r3, [sp, #148]	; 0x94
  436578:	9d24      	ldr	r5, [sp, #144]	; 0x90
  43657a:	463c      	mov	r4, r7
  43657c:	dce7      	bgt.n	43654e <_svfprintf_r+0xc36>
  43657e:	469b      	mov	fp, r3
  436580:	3501      	adds	r5, #1
  436582:	44c3      	add	fp, r8
  436584:	2d07      	cmp	r5, #7
  436586:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  43658a:	9524      	str	r5, [sp, #144]	; 0x90
  43658c:	f8c4 9000 	str.w	r9, [r4]
  436590:	f8c4 8004 	str.w	r8, [r4, #4]
  436594:	f77f aef2 	ble.w	43637c <_svfprintf_r+0xa64>
  436598:	9808      	ldr	r0, [sp, #32]
  43659a:	4631      	mov	r1, r6
  43659c:	aa23      	add	r2, sp, #140	; 0x8c
  43659e:	f004 f975 	bl	43a88c <__ssprint_r>
  4365a2:	2800      	cmp	r0, #0
  4365a4:	f47f aa7e 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4365a8:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  4365ac:	9d24      	ldr	r5, [sp, #144]	; 0x90
  4365ae:	463c      	mov	r4, r7
  4365b0:	e6e5      	b.n	43637e <_svfprintf_r+0xa66>
  4365b2:	4693      	mov	fp, r2
  4365b4:	3301      	adds	r3, #1
  4365b6:	44ab      	add	fp, r5
  4365b8:	2b07      	cmp	r3, #7
  4365ba:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  4365be:	9324      	str	r3, [sp, #144]	; 0x90
  4365c0:	f8c4 9000 	str.w	r9, [r4]
  4365c4:	6065      	str	r5, [r4, #4]
  4365c6:	f77f aba0 	ble.w	435d0a <_svfprintf_r+0x3f2>
  4365ca:	e6e4      	b.n	436396 <_svfprintf_r+0xa7e>
  4365cc:	2b30      	cmp	r3, #48	; 0x30
  4365ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4365d0:	f43f af47 	beq.w	436462 <_svfprintf_r+0xb4a>
  4365d4:	3b01      	subs	r3, #1
  4365d6:	461a      	mov	r2, r3
  4365d8:	9310      	str	r3, [sp, #64]	; 0x40
  4365da:	1aba      	subs	r2, r7, r2
  4365dc:	2330      	movs	r3, #48	; 0x30
  4365de:	920d      	str	r2, [sp, #52]	; 0x34
  4365e0:	f801 3c01 	strb.w	r3, [r1, #-1]
  4365e4:	f7ff bab0 	b.w	435b48 <_svfprintf_r+0x230>
  4365e8:	46bb      	mov	fp, r7
  4365ea:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  4365ee:	4640      	mov	r0, r8
  4365f0:	4649      	mov	r1, r9
  4365f2:	220a      	movs	r2, #10
  4365f4:	2300      	movs	r3, #0
  4365f6:	f7fc f91d 	bl	432834 <__aeabi_uldivmod>
  4365fa:	3230      	adds	r2, #48	; 0x30
  4365fc:	4640      	mov	r0, r8
  4365fe:	4649      	mov	r1, r9
  436600:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  436604:	2300      	movs	r3, #0
  436606:	220a      	movs	r2, #10
  436608:	f7fc f914 	bl	432834 <__aeabi_uldivmod>
  43660c:	4680      	mov	r8, r0
  43660e:	4689      	mov	r9, r1
  436610:	ea58 0309 	orrs.w	r3, r8, r9
  436614:	d1eb      	bne.n	4365ee <_svfprintf_r+0xcd6>
  436616:	465b      	mov	r3, fp
  436618:	1afb      	subs	r3, r7, r3
  43661a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  43661e:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
  436622:	930d      	str	r3, [sp, #52]	; 0x34
  436624:	f7ff ba90 	b.w	435b48 <_svfprintf_r+0x230>
  436628:	990e      	ldr	r1, [sp, #56]	; 0x38
  43662a:	680a      	ldr	r2, [r1, #0]
  43662c:	3104      	adds	r1, #4
  43662e:	910e      	str	r1, [sp, #56]	; 0x38
  436630:	4690      	mov	r8, r2
  436632:	f04f 0900 	mov.w	r9, #0
  436636:	f7ff ba54 	b.w	435ae2 <_svfprintf_r+0x1ca>
  43663a:	990e      	ldr	r1, [sp, #56]	; 0x38
  43663c:	680a      	ldr	r2, [r1, #0]
  43663e:	3104      	adds	r1, #4
  436640:	2301      	movs	r3, #1
  436642:	910e      	str	r1, [sp, #56]	; 0x38
  436644:	4690      	mov	r8, r2
  436646:	f04f 0900 	mov.w	r9, #0
  43664a:	f7ff ba4a 	b.w	435ae2 <_svfprintf_r+0x1ca>
  43664e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  436650:	6813      	ldr	r3, [r2, #0]
  436652:	4698      	mov	r8, r3
  436654:	ea4f 79e3 	mov.w	r9, r3, asr #31
  436658:	4613      	mov	r3, r2
  43665a:	3304      	adds	r3, #4
  43665c:	4642      	mov	r2, r8
  43665e:	930e      	str	r3, [sp, #56]	; 0x38
  436660:	2a00      	cmp	r2, #0
  436662:	464b      	mov	r3, r9
  436664:	f173 0300 	sbcs.w	r3, r3, #0
  436668:	f6bf abf5 	bge.w	435e56 <_svfprintf_r+0x53e>
  43666c:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
  436670:	f1d8 0800 	rsbs	r8, r8, #0
  436674:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
  436678:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
  43667c:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  436680:	2301      	movs	r3, #1
  436682:	f7ff ba34 	b.w	435aee <_svfprintf_r+0x1d6>
  436686:	9808      	ldr	r0, [sp, #32]
  436688:	4631      	mov	r1, r6
  43668a:	aa23      	add	r2, sp, #140	; 0x8c
  43668c:	f004 f8fe 	bl	43a88c <__ssprint_r>
  436690:	2800      	cmp	r0, #0
  436692:	f47f aa07 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436696:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  43669a:	463c      	mov	r4, r7
  43669c:	9a10      	ldr	r2, [sp, #64]	; 0x40
  43669e:	9912      	ldr	r1, [sp, #72]	; 0x48
  4366a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4366a2:	440a      	add	r2, r1
  4366a4:	4690      	mov	r8, r2
  4366a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4366a8:	4293      	cmp	r3, r2
  4366aa:	db46      	blt.n	43673a <_svfprintf_r+0xe22>
  4366ac:	9a07      	ldr	r2, [sp, #28]
  4366ae:	07d0      	lsls	r0, r2, #31
  4366b0:	d443      	bmi.n	43673a <_svfprintf_r+0xe22>
  4366b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4366b4:	ebc8 050a 	rsb	r5, r8, sl
  4366b8:	1ad3      	subs	r3, r2, r3
  4366ba:	429d      	cmp	r5, r3
  4366bc:	bfa8      	it	ge
  4366be:	461d      	movge	r5, r3
  4366c0:	2d00      	cmp	r5, #0
  4366c2:	dd0c      	ble.n	4366de <_svfprintf_r+0xdc6>
  4366c4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4366c6:	f8c4 8000 	str.w	r8, [r4]
  4366ca:	3201      	adds	r2, #1
  4366cc:	44ab      	add	fp, r5
  4366ce:	2a07      	cmp	r2, #7
  4366d0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  4366d4:	6065      	str	r5, [r4, #4]
  4366d6:	9224      	str	r2, [sp, #144]	; 0x90
  4366d8:	f300 8267 	bgt.w	436baa <_svfprintf_r+0x1292>
  4366dc:	3408      	adds	r4, #8
  4366de:	2d00      	cmp	r5, #0
  4366e0:	bfac      	ite	ge
  4366e2:	1b5d      	subge	r5, r3, r5
  4366e4:	461d      	movlt	r5, r3
  4366e6:	2d00      	cmp	r5, #0
  4366e8:	f77f ab10 	ble.w	435d0c <_svfprintf_r+0x3f4>
  4366ec:	2d10      	cmp	r5, #16
  4366ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4366f0:	f8df 93b8 	ldr.w	r9, [pc, #952]	; 436aac <_svfprintf_r+0x1194>
  4366f4:	f77f af5e 	ble.w	4365b4 <_svfprintf_r+0xc9c>
  4366f8:	f04f 0810 	mov.w	r8, #16
  4366fc:	465a      	mov	r2, fp
  4366fe:	f8dd a020 	ldr.w	sl, [sp, #32]
  436702:	e004      	b.n	43670e <_svfprintf_r+0xdf6>
  436704:	3408      	adds	r4, #8
  436706:	3d10      	subs	r5, #16
  436708:	2d10      	cmp	r5, #16
  43670a:	f77f af52 	ble.w	4365b2 <_svfprintf_r+0xc9a>
  43670e:	3301      	adds	r3, #1
  436710:	3210      	adds	r2, #16
  436712:	2b07      	cmp	r3, #7
  436714:	9225      	str	r2, [sp, #148]	; 0x94
  436716:	9324      	str	r3, [sp, #144]	; 0x90
  436718:	f8c4 9000 	str.w	r9, [r4]
  43671c:	f8c4 8004 	str.w	r8, [r4, #4]
  436720:	ddf0      	ble.n	436704 <_svfprintf_r+0xdec>
  436722:	4650      	mov	r0, sl
  436724:	4631      	mov	r1, r6
  436726:	aa23      	add	r2, sp, #140	; 0x8c
  436728:	f004 f8b0 	bl	43a88c <__ssprint_r>
  43672c:	2800      	cmp	r0, #0
  43672e:	f47f a9b9 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436732:	9a25      	ldr	r2, [sp, #148]	; 0x94
  436734:	9b24      	ldr	r3, [sp, #144]	; 0x90
  436736:	463c      	mov	r4, r7
  436738:	e7e5      	b.n	436706 <_svfprintf_r+0xdee>
  43673a:	9a24      	ldr	r2, [sp, #144]	; 0x90
  43673c:	9818      	ldr	r0, [sp, #96]	; 0x60
  43673e:	9917      	ldr	r1, [sp, #92]	; 0x5c
  436740:	6021      	str	r1, [r4, #0]
  436742:	3201      	adds	r2, #1
  436744:	4483      	add	fp, r0
  436746:	2a07      	cmp	r2, #7
  436748:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  43674c:	6060      	str	r0, [r4, #4]
  43674e:	9224      	str	r2, [sp, #144]	; 0x90
  436750:	f300 820a 	bgt.w	436b68 <_svfprintf_r+0x1250>
  436754:	3408      	adds	r4, #8
  436756:	e7ac      	b.n	4366b2 <_svfprintf_r+0xd9a>
  436758:	9b07      	ldr	r3, [sp, #28]
  43675a:	07d9      	lsls	r1, r3, #31
  43675c:	f53f addc 	bmi.w	436318 <_svfprintf_r+0xa00>
  436760:	9b10      	ldr	r3, [sp, #64]	; 0x40
  436762:	6023      	str	r3, [r4, #0]
  436764:	3501      	adds	r5, #1
  436766:	f10b 0b01 	add.w	fp, fp, #1
  43676a:	2301      	movs	r3, #1
  43676c:	2d07      	cmp	r5, #7
  43676e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436772:	9524      	str	r5, [sp, #144]	; 0x90
  436774:	6063      	str	r3, [r4, #4]
  436776:	f77f ae01 	ble.w	43637c <_svfprintf_r+0xa64>
  43677a:	e70d      	b.n	436598 <_svfprintf_r+0xc80>
  43677c:	9808      	ldr	r0, [sp, #32]
  43677e:	4631      	mov	r1, r6
  436780:	aa23      	add	r2, sp, #140	; 0x8c
  436782:	f004 f883 	bl	43a88c <__ssprint_r>
  436786:	2800      	cmp	r0, #0
  436788:	f47f a98c 	bne.w	435aa4 <_svfprintf_r+0x18c>
  43678c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  43678e:	9d24      	ldr	r5, [sp, #144]	; 0x90
  436790:	463c      	mov	r4, r7
  436792:	e5ce      	b.n	436332 <_svfprintf_r+0xa1a>
  436794:	9808      	ldr	r0, [sp, #32]
  436796:	4631      	mov	r1, r6
  436798:	aa23      	add	r2, sp, #140	; 0x8c
  43679a:	f004 f877 	bl	43a88c <__ssprint_r>
  43679e:	2800      	cmp	r0, #0
  4367a0:	f47f a980 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4367a4:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  4367a8:	9d24      	ldr	r5, [sp, #144]	; 0x90
  4367aa:	463c      	mov	r4, r7
  4367ac:	e5cf      	b.n	43634e <_svfprintf_r+0xa36>
  4367ae:	9808      	ldr	r0, [sp, #32]
  4367b0:	4631      	mov	r1, r6
  4367b2:	aa23      	add	r2, sp, #140	; 0x8c
  4367b4:	f004 f86a 	bl	43a88c <__ssprint_r>
  4367b8:	2800      	cmp	r0, #0
  4367ba:	f47f a973 	bne.w	435aa4 <_svfprintf_r+0x18c>
  4367be:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  4367c2:	463c      	mov	r4, r7
  4367c4:	f7ff ba4c 	b.w	435c60 <_svfprintf_r+0x348>
  4367c8:	f004 f834 	bl	43a834 <__fpclassifyd>
  4367cc:	2800      	cmp	r0, #0
  4367ce:	f040 80c7 	bne.w	436960 <_svfprintf_r+0x1048>
  4367d2:	4686      	mov	lr, r0
  4367d4:	4ab2      	ldr	r2, [pc, #712]	; (436aa0 <_svfprintf_r+0x1188>)
  4367d6:	4bb3      	ldr	r3, [pc, #716]	; (436aa4 <_svfprintf_r+0x118c>)
  4367d8:	9011      	str	r0, [sp, #68]	; 0x44
  4367da:	9807      	ldr	r0, [sp, #28]
  4367dc:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  4367e0:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
  4367e4:	2103      	movs	r1, #3
  4367e6:	f020 0080 	bic.w	r0, r0, #128	; 0x80
  4367ea:	2d47      	cmp	r5, #71	; 0x47
  4367ec:	bfd8      	it	le
  4367ee:	461a      	movle	r2, r3
  4367f0:	9109      	str	r1, [sp, #36]	; 0x24
  4367f2:	9007      	str	r0, [sp, #28]
  4367f4:	9210      	str	r2, [sp, #64]	; 0x40
  4367f6:	910d      	str	r1, [sp, #52]	; 0x34
  4367f8:	f7ff b9ae 	b.w	435b58 <_svfprintf_r+0x240>
  4367fc:	9b07      	ldr	r3, [sp, #28]
  4367fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  436800:	f013 0f40 	tst.w	r3, #64	; 0x40
  436804:	4613      	mov	r3, r2
  436806:	f43f ac2e 	beq.w	436066 <_svfprintf_r+0x74e>
  43680a:	3304      	adds	r3, #4
  43680c:	f8b2 8000 	ldrh.w	r8, [r2]
  436810:	930e      	str	r3, [sp, #56]	; 0x38
  436812:	f04f 0900 	mov.w	r9, #0
  436816:	f7ff bb37 	b.w	435e88 <_svfprintf_r+0x570>
  43681a:	9b07      	ldr	r3, [sp, #28]
  43681c:	06db      	lsls	r3, r3, #27
  43681e:	d40b      	bmi.n	436838 <_svfprintf_r+0xf20>
  436820:	9b07      	ldr	r3, [sp, #28]
  436822:	065d      	lsls	r5, r3, #25
  436824:	d508      	bpl.n	436838 <_svfprintf_r+0xf20>
  436826:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  436828:	6813      	ldr	r3, [r2, #0]
  43682a:	3204      	adds	r2, #4
  43682c:	920e      	str	r2, [sp, #56]	; 0x38
  43682e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  436832:	801a      	strh	r2, [r3, #0]
  436834:	f7ff b895 	b.w	435962 <_svfprintf_r+0x4a>
  436838:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  43683a:	6813      	ldr	r3, [r2, #0]
  43683c:	3204      	adds	r2, #4
  43683e:	920e      	str	r2, [sp, #56]	; 0x38
  436840:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  436842:	601a      	str	r2, [r3, #0]
  436844:	f7ff b88d 	b.w	435962 <_svfprintf_r+0x4a>
  436848:	4693      	mov	fp, r2
  43684a:	3301      	adds	r3, #1
  43684c:	44ab      	add	fp, r5
  43684e:	2b07      	cmp	r3, #7
  436850:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436854:	9324      	str	r3, [sp, #144]	; 0x90
  436856:	f8c4 9000 	str.w	r9, [r4]
  43685a:	6065      	str	r5, [r4, #4]
  43685c:	f73f af13 	bgt.w	436686 <_svfprintf_r+0xd6e>
  436860:	3408      	adds	r4, #8
  436862:	e71b      	b.n	43669c <_svfprintf_r+0xd84>
  436864:	9808      	ldr	r0, [sp, #32]
  436866:	4631      	mov	r1, r6
  436868:	aa23      	add	r2, sp, #140	; 0x8c
  43686a:	f004 f80f 	bl	43a88c <__ssprint_r>
  43686e:	2800      	cmp	r0, #0
  436870:	f47f a918 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436874:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  436878:	463c      	mov	r4, r7
  43687a:	e4c0      	b.n	4361fe <_svfprintf_r+0x8e6>
  43687c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  43687e:	4a8a      	ldr	r2, [pc, #552]	; (436aa8 <_svfprintf_r+0x1190>)
  436880:	6022      	str	r2, [r4, #0]
  436882:	3301      	adds	r3, #1
  436884:	f10b 0b01 	add.w	fp, fp, #1
  436888:	2201      	movs	r2, #1
  43688a:	2b07      	cmp	r3, #7
  43688c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436890:	9324      	str	r3, [sp, #144]	; 0x90
  436892:	6062      	str	r2, [r4, #4]
  436894:	f300 80f4 	bgt.w	436a80 <_svfprintf_r+0x1168>
  436898:	3408      	adds	r4, #8
  43689a:	b92d      	cbnz	r5, 4368a8 <_svfprintf_r+0xf90>
  43689c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  43689e:	b91b      	cbnz	r3, 4368a8 <_svfprintf_r+0xf90>
  4368a0:	9b07      	ldr	r3, [sp, #28]
  4368a2:	07db      	lsls	r3, r3, #31
  4368a4:	f57f aa32 	bpl.w	435d0c <_svfprintf_r+0x3f4>
  4368a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4368aa:	9818      	ldr	r0, [sp, #96]	; 0x60
  4368ac:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  4368ae:	6022      	str	r2, [r4, #0]
  4368b0:	3301      	adds	r3, #1
  4368b2:	eb0b 0100 	add.w	r1, fp, r0
  4368b6:	2b07      	cmp	r3, #7
  4368b8:	9125      	str	r1, [sp, #148]	; 0x94
  4368ba:	6060      	str	r0, [r4, #4]
  4368bc:	9324      	str	r3, [sp, #144]	; 0x90
  4368be:	f300 81f3 	bgt.w	436ca8 <_svfprintf_r+0x1390>
  4368c2:	f104 0208 	add.w	r2, r4, #8
  4368c6:	426d      	negs	r5, r5
  4368c8:	2d00      	cmp	r5, #0
  4368ca:	f340 80fc 	ble.w	436ac6 <_svfprintf_r+0x11ae>
  4368ce:	2d10      	cmp	r5, #16
  4368d0:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 436aac <_svfprintf_r+0x1194>
  4368d4:	f340 813d 	ble.w	436b52 <_svfprintf_r+0x123a>
  4368d8:	2410      	movs	r4, #16
  4368da:	f8dd 8020 	ldr.w	r8, [sp, #32]
  4368de:	e004      	b.n	4368ea <_svfprintf_r+0xfd2>
  4368e0:	3208      	adds	r2, #8
  4368e2:	3d10      	subs	r5, #16
  4368e4:	2d10      	cmp	r5, #16
  4368e6:	f340 8134 	ble.w	436b52 <_svfprintf_r+0x123a>
  4368ea:	3301      	adds	r3, #1
  4368ec:	3110      	adds	r1, #16
  4368ee:	2b07      	cmp	r3, #7
  4368f0:	9125      	str	r1, [sp, #148]	; 0x94
  4368f2:	9324      	str	r3, [sp, #144]	; 0x90
  4368f4:	f8c2 9000 	str.w	r9, [r2]
  4368f8:	6054      	str	r4, [r2, #4]
  4368fa:	ddf1      	ble.n	4368e0 <_svfprintf_r+0xfc8>
  4368fc:	4640      	mov	r0, r8
  4368fe:	4631      	mov	r1, r6
  436900:	aa23      	add	r2, sp, #140	; 0x8c
  436902:	f003 ffc3 	bl	43a88c <__ssprint_r>
  436906:	2800      	cmp	r0, #0
  436908:	f47f a8cc 	bne.w	435aa4 <_svfprintf_r+0x18c>
  43690c:	9925      	ldr	r1, [sp, #148]	; 0x94
  43690e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  436910:	463a      	mov	r2, r7
  436912:	e7e6      	b.n	4368e2 <_svfprintf_r+0xfca>
  436914:	9b25      	ldr	r3, [sp, #148]	; 0x94
  436916:	46b1      	mov	r9, r6
  436918:	2b00      	cmp	r3, #0
  43691a:	f43f a8c4 	beq.w	435aa6 <_svfprintf_r+0x18e>
  43691e:	9808      	ldr	r0, [sp, #32]
  436920:	4631      	mov	r1, r6
  436922:	aa23      	add	r2, sp, #140	; 0x8c
  436924:	f003 ffb2 	bl	43a88c <__ssprint_r>
  436928:	f7ff b8bd 	b.w	435aa6 <_svfprintf_r+0x18e>
  43692c:	980c      	ldr	r0, [sp, #48]	; 0x30
  43692e:	910e      	str	r1, [sp, #56]	; 0x38
  436930:	4240      	negs	r0, r0
  436932:	900c      	str	r0, [sp, #48]	; 0x30
  436934:	4619      	mov	r1, r3
  436936:	f7ff ba3f 	b.w	435db8 <_svfprintf_r+0x4a0>
  43693a:	f041 0120 	orr.w	r1, r1, #32
  43693e:	9107      	str	r1, [sp, #28]
  436940:	785d      	ldrb	r5, [r3, #1]
  436942:	1c59      	adds	r1, r3, #1
  436944:	f7ff b83b 	b.w	4359be <_svfprintf_r+0xa6>
  436948:	9808      	ldr	r0, [sp, #32]
  43694a:	4631      	mov	r1, r6
  43694c:	aa23      	add	r2, sp, #140	; 0x8c
  43694e:	f003 ff9d 	bl	43a88c <__ssprint_r>
  436952:	2800      	cmp	r0, #0
  436954:	f47f a8a6 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436958:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  43695c:	463c      	mov	r4, r7
  43695e:	e464      	b.n	43622a <_svfprintf_r+0x912>
  436960:	f025 0320 	bic.w	r3, r5, #32
  436964:	f1ba 3fff 	cmp.w	sl, #4294967295
  436968:	930d      	str	r3, [sp, #52]	; 0x34
  43696a:	f000 8096 	beq.w	436a9a <_svfprintf_r+0x1182>
  43696e:	2b47      	cmp	r3, #71	; 0x47
  436970:	d105      	bne.n	43697e <_svfprintf_r+0x1066>
  436972:	f1ba 0f00 	cmp.w	sl, #0
  436976:	bf14      	ite	ne
  436978:	46d3      	movne	fp, sl
  43697a:	f04f 0b01 	moveq.w	fp, #1
  43697e:	9b07      	ldr	r3, [sp, #28]
  436980:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  436984:	9311      	str	r3, [sp, #68]	; 0x44
  436986:	9b15      	ldr	r3, [sp, #84]	; 0x54
  436988:	f1b3 0a00 	subs.w	sl, r3, #0
  43698c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  43698e:	9309      	str	r3, [sp, #36]	; 0x24
  436990:	bfbb      	ittet	lt
  436992:	4653      	movlt	r3, sl
  436994:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
  436998:	2300      	movge	r3, #0
  43699a:	232d      	movlt	r3, #45	; 0x2d
  43699c:	2d66      	cmp	r5, #102	; 0x66
  43699e:	930f      	str	r3, [sp, #60]	; 0x3c
  4369a0:	f000 80ac 	beq.w	436afc <_svfprintf_r+0x11e4>
  4369a4:	2d46      	cmp	r5, #70	; 0x46
  4369a6:	f000 80a9 	beq.w	436afc <_svfprintf_r+0x11e4>
  4369aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4369ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4369ae:	2b45      	cmp	r3, #69	; 0x45
  4369b0:	bf0c      	ite	eq
  4369b2:	f10b 0901 	addeq.w	r9, fp, #1
  4369b6:	46d9      	movne	r9, fp
  4369b8:	2002      	movs	r0, #2
  4369ba:	a91d      	add	r1, sp, #116	; 0x74
  4369bc:	e88d 0201 	stmia.w	sp, {r0, r9}
  4369c0:	9102      	str	r1, [sp, #8]
  4369c2:	a81e      	add	r0, sp, #120	; 0x78
  4369c4:	a921      	add	r1, sp, #132	; 0x84
  4369c6:	9003      	str	r0, [sp, #12]
  4369c8:	4653      	mov	r3, sl
  4369ca:	9104      	str	r1, [sp, #16]
  4369cc:	9808      	ldr	r0, [sp, #32]
  4369ce:	f002 fc2b 	bl	439228 <_dtoa_r>
  4369d2:	2d67      	cmp	r5, #103	; 0x67
  4369d4:	9010      	str	r0, [sp, #64]	; 0x40
  4369d6:	d002      	beq.n	4369de <_svfprintf_r+0x10c6>
  4369d8:	2d47      	cmp	r5, #71	; 0x47
  4369da:	f040 809f 	bne.w	436b1c <_svfprintf_r+0x1204>
  4369de:	9b07      	ldr	r3, [sp, #28]
  4369e0:	07db      	lsls	r3, r3, #31
  4369e2:	f140 8189 	bpl.w	436cf8 <_svfprintf_r+0x13e0>
  4369e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4369e8:	eb03 0809 	add.w	r8, r3, r9
  4369ec:	9809      	ldr	r0, [sp, #36]	; 0x24
  4369ee:	4651      	mov	r1, sl
  4369f0:	2200      	movs	r2, #0
  4369f2:	2300      	movs	r3, #0
  4369f4:	f7fb fc16 	bl	432224 <__aeabi_dcmpeq>
  4369f8:	2800      	cmp	r0, #0
  4369fa:	f040 80fd 	bne.w	436bf8 <_svfprintf_r+0x12e0>
  4369fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
  436a00:	4598      	cmp	r8, r3
  436a02:	d906      	bls.n	436a12 <_svfprintf_r+0x10fa>
  436a04:	2130      	movs	r1, #48	; 0x30
  436a06:	1c5a      	adds	r2, r3, #1
  436a08:	9221      	str	r2, [sp, #132]	; 0x84
  436a0a:	7019      	strb	r1, [r3, #0]
  436a0c:	9b21      	ldr	r3, [sp, #132]	; 0x84
  436a0e:	4598      	cmp	r8, r3
  436a10:	d8f9      	bhi.n	436a06 <_svfprintf_r+0x10ee>
  436a12:	9a10      	ldr	r2, [sp, #64]	; 0x40
  436a14:	1a9b      	subs	r3, r3, r2
  436a16:	9313      	str	r3, [sp, #76]	; 0x4c
  436a18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  436a1a:	2b47      	cmp	r3, #71	; 0x47
  436a1c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  436a1e:	f000 80de 	beq.w	436bde <_svfprintf_r+0x12c6>
  436a22:	2d65      	cmp	r5, #101	; 0x65
  436a24:	f340 80f8 	ble.w	436c18 <_svfprintf_r+0x1300>
  436a28:	2d66      	cmp	r5, #102	; 0x66
  436a2a:	9312      	str	r3, [sp, #72]	; 0x48
  436a2c:	f000 8157 	beq.w	436cde <_svfprintf_r+0x13c6>
  436a30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  436a32:	9a12      	ldr	r2, [sp, #72]	; 0x48
  436a34:	4293      	cmp	r3, r2
  436a36:	f300 8144 	bgt.w	436cc2 <_svfprintf_r+0x13aa>
  436a3a:	9b07      	ldr	r3, [sp, #28]
  436a3c:	07d9      	lsls	r1, r3, #31
  436a3e:	f100 8173 	bmi.w	436d28 <_svfprintf_r+0x1410>
  436a42:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  436a46:	920d      	str	r2, [sp, #52]	; 0x34
  436a48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  436a4a:	2a00      	cmp	r2, #0
  436a4c:	f040 80bc 	bne.w	436bc8 <_svfprintf_r+0x12b0>
  436a50:	9309      	str	r3, [sp, #36]	; 0x24
  436a52:	9b11      	ldr	r3, [sp, #68]	; 0x44
  436a54:	9307      	str	r3, [sp, #28]
  436a56:	9211      	str	r2, [sp, #68]	; 0x44
  436a58:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  436a5c:	f7ff b87c 	b.w	435b58 <_svfprintf_r+0x240>
  436a60:	9808      	ldr	r0, [sp, #32]
  436a62:	2140      	movs	r1, #64	; 0x40
  436a64:	f7fd ff2a 	bl	4348bc <_malloc_r>
  436a68:	f8c9 0000 	str.w	r0, [r9]
  436a6c:	f8c9 0010 	str.w	r0, [r9, #16]
  436a70:	2800      	cmp	r0, #0
  436a72:	f000 818c 	beq.w	436d8e <_svfprintf_r+0x1476>
  436a76:	2340      	movs	r3, #64	; 0x40
  436a78:	f8c9 3014 	str.w	r3, [r9, #20]
  436a7c:	f7fe bf64 	b.w	435948 <_svfprintf_r+0x30>
  436a80:	9808      	ldr	r0, [sp, #32]
  436a82:	4631      	mov	r1, r6
  436a84:	aa23      	add	r2, sp, #140	; 0x8c
  436a86:	f003 ff01 	bl	43a88c <__ssprint_r>
  436a8a:	2800      	cmp	r0, #0
  436a8c:	f47f a80a 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436a90:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  436a92:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  436a96:	463c      	mov	r4, r7
  436a98:	e6ff      	b.n	43689a <_svfprintf_r+0xf82>
  436a9a:	f04f 0b06 	mov.w	fp, #6
  436a9e:	e76e      	b.n	43697e <_svfprintf_r+0x1066>
  436aa0:	00440480 	.word	0x00440480
  436aa4:	0044047c 	.word	0x0044047c
  436aa8:	0043faa4 	.word	0x0043faa4
  436aac:	00440454 	.word	0x00440454
  436ab0:	9808      	ldr	r0, [sp, #32]
  436ab2:	4631      	mov	r1, r6
  436ab4:	aa23      	add	r2, sp, #140	; 0x8c
  436ab6:	f003 fee9 	bl	43a88c <__ssprint_r>
  436aba:	2800      	cmp	r0, #0
  436abc:	f47e aff2 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436ac0:	9925      	ldr	r1, [sp, #148]	; 0x94
  436ac2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  436ac4:	463a      	mov	r2, r7
  436ac6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
  436ac8:	6054      	str	r4, [r2, #4]
  436aca:	3301      	adds	r3, #1
  436acc:	eb01 0b04 	add.w	fp, r1, r4
  436ad0:	2b07      	cmp	r3, #7
  436ad2:	9910      	ldr	r1, [sp, #64]	; 0x40
  436ad4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  436ad8:	9324      	str	r3, [sp, #144]	; 0x90
  436ada:	6011      	str	r1, [r2, #0]
  436adc:	f73f ac5b 	bgt.w	436396 <_svfprintf_r+0xa7e>
  436ae0:	f102 0408 	add.w	r4, r2, #8
  436ae4:	f7ff b912 	b.w	435d0c <_svfprintf_r+0x3f4>
  436ae8:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  436aec:	f7fe feb2 	bl	435854 <strlen>
  436af0:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  436af4:	900d      	str	r0, [sp, #52]	; 0x34
  436af6:	4603      	mov	r3, r0
  436af8:	f7ff ba1b 	b.w	435f32 <_svfprintf_r+0x61a>
  436afc:	2003      	movs	r0, #3
  436afe:	a91d      	add	r1, sp, #116	; 0x74
  436b00:	e88d 0801 	stmia.w	sp, {r0, fp}
  436b04:	9102      	str	r1, [sp, #8]
  436b06:	a81e      	add	r0, sp, #120	; 0x78
  436b08:	a921      	add	r1, sp, #132	; 0x84
  436b0a:	9003      	str	r0, [sp, #12]
  436b0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  436b0e:	9104      	str	r1, [sp, #16]
  436b10:	4653      	mov	r3, sl
  436b12:	9808      	ldr	r0, [sp, #32]
  436b14:	f002 fb88 	bl	439228 <_dtoa_r>
  436b18:	46d9      	mov	r9, fp
  436b1a:	9010      	str	r0, [sp, #64]	; 0x40
  436b1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  436b1e:	eb03 0809 	add.w	r8, r3, r9
  436b22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  436b24:	2b46      	cmp	r3, #70	; 0x46
  436b26:	f47f af61 	bne.w	4369ec <_svfprintf_r+0x10d4>
  436b2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  436b2c:	781b      	ldrb	r3, [r3, #0]
  436b2e:	2b30      	cmp	r3, #48	; 0x30
  436b30:	f000 80e4 	beq.w	436cfc <_svfprintf_r+0x13e4>
  436b34:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  436b36:	4498      	add	r8, r3
  436b38:	e758      	b.n	4369ec <_svfprintf_r+0x10d4>
  436b3a:	9808      	ldr	r0, [sp, #32]
  436b3c:	4631      	mov	r1, r6
  436b3e:	aa23      	add	r2, sp, #140	; 0x8c
  436b40:	f003 fea4 	bl	43a88c <__ssprint_r>
  436b44:	2800      	cmp	r0, #0
  436b46:	f47e afad 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436b4a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  436b4e:	463c      	mov	r4, r7
  436b50:	e4a7      	b.n	4364a2 <_svfprintf_r+0xb8a>
  436b52:	3301      	adds	r3, #1
  436b54:	4429      	add	r1, r5
  436b56:	2b07      	cmp	r3, #7
  436b58:	9125      	str	r1, [sp, #148]	; 0x94
  436b5a:	9324      	str	r3, [sp, #144]	; 0x90
  436b5c:	f8c2 9000 	str.w	r9, [r2]
  436b60:	6055      	str	r5, [r2, #4]
  436b62:	dca5      	bgt.n	436ab0 <_svfprintf_r+0x1198>
  436b64:	3208      	adds	r2, #8
  436b66:	e7ae      	b.n	436ac6 <_svfprintf_r+0x11ae>
  436b68:	9808      	ldr	r0, [sp, #32]
  436b6a:	4631      	mov	r1, r6
  436b6c:	aa23      	add	r2, sp, #140	; 0x8c
  436b6e:	f003 fe8d 	bl	43a88c <__ssprint_r>
  436b72:	2800      	cmp	r0, #0
  436b74:	f47e af96 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436b78:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  436b7a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  436b7e:	463c      	mov	r4, r7
  436b80:	e597      	b.n	4366b2 <_svfprintf_r+0xd9a>
  436b82:	4653      	mov	r3, sl
  436b84:	2b06      	cmp	r3, #6
  436b86:	bf28      	it	cs
  436b88:	2306      	movcs	r3, #6
  436b8a:	930d      	str	r3, [sp, #52]	; 0x34
  436b8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  436b90:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  436b94:	9309      	str	r3, [sp, #36]	; 0x24
  436b96:	4b83      	ldr	r3, [pc, #524]	; (436da4 <_svfprintf_r+0x148c>)
  436b98:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  436b9c:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
  436ba0:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
  436ba4:	9310      	str	r3, [sp, #64]	; 0x40
  436ba6:	f7fe bfd7 	b.w	435b58 <_svfprintf_r+0x240>
  436baa:	9808      	ldr	r0, [sp, #32]
  436bac:	4631      	mov	r1, r6
  436bae:	aa23      	add	r2, sp, #140	; 0x8c
  436bb0:	f003 fe6c 	bl	43a88c <__ssprint_r>
  436bb4:	2800      	cmp	r0, #0
  436bb6:	f47e af75 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436bba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  436bbc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  436bbe:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
  436bc2:	1ad3      	subs	r3, r2, r3
  436bc4:	463c      	mov	r4, r7
  436bc6:	e58a      	b.n	4366de <_svfprintf_r+0xdc6>
  436bc8:	9309      	str	r3, [sp, #36]	; 0x24
  436bca:	9b11      	ldr	r3, [sp, #68]	; 0x44
  436bcc:	9307      	str	r3, [sp, #28]
  436bce:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
  436bd2:	2300      	movs	r3, #0
  436bd4:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
  436bd8:	9311      	str	r3, [sp, #68]	; 0x44
  436bda:	f7fe bfc0 	b.w	435b5e <_svfprintf_r+0x246>
  436bde:	1cda      	adds	r2, r3, #3
  436be0:	db19      	blt.n	436c16 <_svfprintf_r+0x12fe>
  436be2:	459b      	cmp	fp, r3
  436be4:	db17      	blt.n	436c16 <_svfprintf_r+0x12fe>
  436be6:	9312      	str	r3, [sp, #72]	; 0x48
  436be8:	2567      	movs	r5, #103	; 0x67
  436bea:	e721      	b.n	436a30 <_svfprintf_r+0x1118>
  436bec:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
  436bf0:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
  436bf4:	f7ff ba98 	b.w	436128 <_svfprintf_r+0x810>
  436bf8:	4643      	mov	r3, r8
  436bfa:	e70a      	b.n	436a12 <_svfprintf_r+0x10fa>
  436bfc:	ea2a 73ea 	bic.w	r3, sl, sl, asr #31
  436c00:	9011      	str	r0, [sp, #68]	; 0x44
  436c02:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  436c06:	9012      	str	r0, [sp, #72]	; 0x48
  436c08:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
  436c0c:	9309      	str	r3, [sp, #36]	; 0x24
  436c0e:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  436c12:	f7fe bfa1 	b.w	435b58 <_svfprintf_r+0x240>
  436c16:	3d02      	subs	r5, #2
  436c18:	3b01      	subs	r3, #1
  436c1a:	2b00      	cmp	r3, #0
  436c1c:	931d      	str	r3, [sp, #116]	; 0x74
  436c1e:	bfba      	itte	lt
  436c20:	425b      	neglt	r3, r3
  436c22:	222d      	movlt	r2, #45	; 0x2d
  436c24:	222b      	movge	r2, #43	; 0x2b
  436c26:	2b09      	cmp	r3, #9
  436c28:	f88d 507c 	strb.w	r5, [sp, #124]	; 0x7c
  436c2c:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  436c30:	dd72      	ble.n	436d18 <_svfprintf_r+0x1400>
  436c32:	f10d 0e8b 	add.w	lr, sp, #139	; 0x8b
  436c36:	4670      	mov	r0, lr
  436c38:	4a5b      	ldr	r2, [pc, #364]	; (436da8 <_svfprintf_r+0x1490>)
  436c3a:	fb82 2103 	smull	r2, r1, r2, r3
  436c3e:	17da      	asrs	r2, r3, #31
  436c40:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
  436c44:	eb02 0182 	add.w	r1, r2, r2, lsl #2
  436c48:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
  436c4c:	f103 0130 	add.w	r1, r3, #48	; 0x30
  436c50:	2a09      	cmp	r2, #9
  436c52:	4613      	mov	r3, r2
  436c54:	f800 1d01 	strb.w	r1, [r0, #-1]!
  436c58:	dcee      	bgt.n	436c38 <_svfprintf_r+0x1320>
  436c5a:	4602      	mov	r2, r0
  436c5c:	3330      	adds	r3, #48	; 0x30
  436c5e:	b2d9      	uxtb	r1, r3
  436c60:	f802 1d01 	strb.w	r1, [r2, #-1]!
  436c64:	4596      	cmp	lr, r2
  436c66:	f240 8099 	bls.w	436d9c <_svfprintf_r+0x1484>
  436c6a:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  436c6e:	4603      	mov	r3, r0
  436c70:	e001      	b.n	436c76 <_svfprintf_r+0x135e>
  436c72:	f813 1b01 	ldrb.w	r1, [r3], #1
  436c76:	f802 1b01 	strb.w	r1, [r2], #1
  436c7a:	4573      	cmp	r3, lr
  436c7c:	d1f9      	bne.n	436c72 <_svfprintf_r+0x135a>
  436c7e:	ab23      	add	r3, sp, #140	; 0x8c
  436c80:	1a1b      	subs	r3, r3, r0
  436c82:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  436c86:	4413      	add	r3, r2
  436c88:	aa1f      	add	r2, sp, #124	; 0x7c
  436c8a:	1a9b      	subs	r3, r3, r2
  436c8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  436c8e:	9319      	str	r3, [sp, #100]	; 0x64
  436c90:	2a01      	cmp	r2, #1
  436c92:	4413      	add	r3, r2
  436c94:	930d      	str	r3, [sp, #52]	; 0x34
  436c96:	dd6b      	ble.n	436d70 <_svfprintf_r+0x1458>
  436c98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  436c9a:	2200      	movs	r2, #0
  436c9c:	3301      	adds	r3, #1
  436c9e:	930d      	str	r3, [sp, #52]	; 0x34
  436ca0:	9212      	str	r2, [sp, #72]	; 0x48
  436ca2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  436ca6:	e6cf      	b.n	436a48 <_svfprintf_r+0x1130>
  436ca8:	9808      	ldr	r0, [sp, #32]
  436caa:	4631      	mov	r1, r6
  436cac:	aa23      	add	r2, sp, #140	; 0x8c
  436cae:	f003 fded 	bl	43a88c <__ssprint_r>
  436cb2:	2800      	cmp	r0, #0
  436cb4:	f47e aef6 	bne.w	435aa4 <_svfprintf_r+0x18c>
  436cb8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  436cba:	9925      	ldr	r1, [sp, #148]	; 0x94
  436cbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  436cbe:	463a      	mov	r2, r7
  436cc0:	e601      	b.n	4368c6 <_svfprintf_r+0xfae>
  436cc2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  436cc4:	2b00      	cmp	r3, #0
  436cc6:	bfd8      	it	le
  436cc8:	f1c3 0802 	rsble	r8, r3, #2
  436ccc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  436cce:	bfc8      	it	gt
  436cd0:	f04f 0801 	movgt.w	r8, #1
  436cd4:	4443      	add	r3, r8
  436cd6:	930d      	str	r3, [sp, #52]	; 0x34
  436cd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  436cdc:	e6b4      	b.n	436a48 <_svfprintf_r+0x1130>
  436cde:	2b00      	cmp	r3, #0
  436ce0:	dd30      	ble.n	436d44 <_svfprintf_r+0x142c>
  436ce2:	f1bb 0f00 	cmp.w	fp, #0
  436ce6:	d125      	bne.n	436d34 <_svfprintf_r+0x141c>
  436ce8:	9b07      	ldr	r3, [sp, #28]
  436cea:	07db      	lsls	r3, r3, #31
  436cec:	d422      	bmi.n	436d34 <_svfprintf_r+0x141c>
  436cee:	9a12      	ldr	r2, [sp, #72]	; 0x48
  436cf0:	920d      	str	r2, [sp, #52]	; 0x34
  436cf2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  436cf6:	e6a7      	b.n	436a48 <_svfprintf_r+0x1130>
  436cf8:	9b21      	ldr	r3, [sp, #132]	; 0x84
  436cfa:	e68a      	b.n	436a12 <_svfprintf_r+0x10fa>
  436cfc:	9809      	ldr	r0, [sp, #36]	; 0x24
  436cfe:	4651      	mov	r1, sl
  436d00:	2200      	movs	r2, #0
  436d02:	2300      	movs	r3, #0
  436d04:	f7fb fa8e 	bl	432224 <__aeabi_dcmpeq>
  436d08:	2800      	cmp	r0, #0
  436d0a:	f47f af13 	bne.w	436b34 <_svfprintf_r+0x121c>
  436d0e:	f1c9 0301 	rsb	r3, r9, #1
  436d12:	931d      	str	r3, [sp, #116]	; 0x74
  436d14:	4498      	add	r8, r3
  436d16:	e669      	b.n	4369ec <_svfprintf_r+0x10d4>
  436d18:	3330      	adds	r3, #48	; 0x30
  436d1a:	2230      	movs	r2, #48	; 0x30
  436d1c:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  436d20:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  436d24:	ab20      	add	r3, sp, #128	; 0x80
  436d26:	e7af      	b.n	436c88 <_svfprintf_r+0x1370>
  436d28:	9b12      	ldr	r3, [sp, #72]	; 0x48
  436d2a:	3301      	adds	r3, #1
  436d2c:	930d      	str	r3, [sp, #52]	; 0x34
  436d2e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  436d32:	e689      	b.n	436a48 <_svfprintf_r+0x1130>
  436d34:	9b12      	ldr	r3, [sp, #72]	; 0x48
  436d36:	f10b 0801 	add.w	r8, fp, #1
  436d3a:	4443      	add	r3, r8
  436d3c:	930d      	str	r3, [sp, #52]	; 0x34
  436d3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  436d42:	e681      	b.n	436a48 <_svfprintf_r+0x1130>
  436d44:	f1bb 0f00 	cmp.w	fp, #0
  436d48:	d11b      	bne.n	436d82 <_svfprintf_r+0x146a>
  436d4a:	9b07      	ldr	r3, [sp, #28]
  436d4c:	07d8      	lsls	r0, r3, #31
  436d4e:	d418      	bmi.n	436d82 <_svfprintf_r+0x146a>
  436d50:	2301      	movs	r3, #1
  436d52:	930d      	str	r3, [sp, #52]	; 0x34
  436d54:	e678      	b.n	436a48 <_svfprintf_r+0x1130>
  436d56:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  436d58:	f8d5 a000 	ldr.w	sl, [r5]
  436d5c:	4628      	mov	r0, r5
  436d5e:	3004      	adds	r0, #4
  436d60:	f1ba 0f00 	cmp.w	sl, #0
  436d64:	785d      	ldrb	r5, [r3, #1]
  436d66:	900e      	str	r0, [sp, #56]	; 0x38
  436d68:	f6be ae29 	bge.w	4359be <_svfprintf_r+0xa6>
  436d6c:	f7fe be25 	b.w	4359ba <_svfprintf_r+0xa2>
  436d70:	9b07      	ldr	r3, [sp, #28]
  436d72:	f013 0301 	ands.w	r3, r3, #1
  436d76:	d18f      	bne.n	436c98 <_svfprintf_r+0x1380>
  436d78:	9312      	str	r3, [sp, #72]	; 0x48
  436d7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  436d7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  436d80:	e662      	b.n	436a48 <_svfprintf_r+0x1130>
  436d82:	f10b 0302 	add.w	r3, fp, #2
  436d86:	930d      	str	r3, [sp, #52]	; 0x34
  436d88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  436d8c:	e65c      	b.n	436a48 <_svfprintf_r+0x1130>
  436d8e:	9a08      	ldr	r2, [sp, #32]
  436d90:	230c      	movs	r3, #12
  436d92:	6013      	str	r3, [r2, #0]
  436d94:	f04f 30ff 	mov.w	r0, #4294967295
  436d98:	f7fe be8e 	b.w	435ab8 <_svfprintf_r+0x1a0>
  436d9c:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  436da0:	e772      	b.n	436c88 <_svfprintf_r+0x1370>
  436da2:	bf00      	nop
  436da4:	004404ac 	.word	0x004404ac
  436da8:	66666667 	.word	0x66666667

00436dac <__sprint_r.part.0>:
  436dac:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  436dae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  436db2:	049c      	lsls	r4, r3, #18
  436db4:	460f      	mov	r7, r1
  436db6:	4692      	mov	sl, r2
  436db8:	d52b      	bpl.n	436e12 <__sprint_r.part.0+0x66>
  436dba:	6893      	ldr	r3, [r2, #8]
  436dbc:	6812      	ldr	r2, [r2, #0]
  436dbe:	b333      	cbz	r3, 436e0e <__sprint_r.part.0+0x62>
  436dc0:	4680      	mov	r8, r0
  436dc2:	f102 0908 	add.w	r9, r2, #8
  436dc6:	e919 0060 	ldmdb	r9, {r5, r6}
  436dca:	08b6      	lsrs	r6, r6, #2
  436dcc:	d017      	beq.n	436dfe <__sprint_r.part.0+0x52>
  436dce:	3d04      	subs	r5, #4
  436dd0:	2400      	movs	r4, #0
  436dd2:	e001      	b.n	436dd8 <__sprint_r.part.0+0x2c>
  436dd4:	42a6      	cmp	r6, r4
  436dd6:	d010      	beq.n	436dfa <__sprint_r.part.0+0x4e>
  436dd8:	4640      	mov	r0, r8
  436dda:	f855 1f04 	ldr.w	r1, [r5, #4]!
  436dde:	463a      	mov	r2, r7
  436de0:	f003 f9da 	bl	43a198 <_fputwc_r>
  436de4:	1c43      	adds	r3, r0, #1
  436de6:	f104 0401 	add.w	r4, r4, #1
  436dea:	d1f3      	bne.n	436dd4 <__sprint_r.part.0+0x28>
  436dec:	2300      	movs	r3, #0
  436dee:	f8ca 3008 	str.w	r3, [sl, #8]
  436df2:	f8ca 3004 	str.w	r3, [sl, #4]
  436df6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  436dfa:	f8da 3008 	ldr.w	r3, [sl, #8]
  436dfe:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  436e02:	f8ca 3008 	str.w	r3, [sl, #8]
  436e06:	f109 0908 	add.w	r9, r9, #8
  436e0a:	2b00      	cmp	r3, #0
  436e0c:	d1db      	bne.n	436dc6 <__sprint_r.part.0+0x1a>
  436e0e:	2000      	movs	r0, #0
  436e10:	e7ec      	b.n	436dec <__sprint_r.part.0+0x40>
  436e12:	f7fd fae1 	bl	4343d8 <__sfvwrite_r>
  436e16:	2300      	movs	r3, #0
  436e18:	f8ca 3008 	str.w	r3, [sl, #8]
  436e1c:	f8ca 3004 	str.w	r3, [sl, #4]
  436e20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00436e24 <__sprint_r>:
  436e24:	6893      	ldr	r3, [r2, #8]
  436e26:	b410      	push	{r4}
  436e28:	b11b      	cbz	r3, 436e32 <__sprint_r+0xe>
  436e2a:	f85d 4b04 	ldr.w	r4, [sp], #4
  436e2e:	f7ff bfbd 	b.w	436dac <__sprint_r.part.0>
  436e32:	4618      	mov	r0, r3
  436e34:	6053      	str	r3, [r2, #4]
  436e36:	f85d 4b04 	ldr.w	r4, [sp], #4
  436e3a:	4770      	bx	lr

00436e3c <_vfiprintf_r>:
  436e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  436e40:	b0ab      	sub	sp, #172	; 0xac
  436e42:	461c      	mov	r4, r3
  436e44:	9100      	str	r1, [sp, #0]
  436e46:	4693      	mov	fp, r2
  436e48:	9304      	str	r3, [sp, #16]
  436e4a:	9001      	str	r0, [sp, #4]
  436e4c:	b118      	cbz	r0, 436e56 <_vfiprintf_r+0x1a>
  436e4e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  436e50:	2b00      	cmp	r3, #0
  436e52:	f000 80e3 	beq.w	43701c <_vfiprintf_r+0x1e0>
  436e56:	9b00      	ldr	r3, [sp, #0]
  436e58:	8999      	ldrh	r1, [r3, #12]
  436e5a:	b28a      	uxth	r2, r1
  436e5c:	0490      	lsls	r0, r2, #18
  436e5e:	d408      	bmi.n	436e72 <_vfiprintf_r+0x36>
  436e60:	4618      	mov	r0, r3
  436e62:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  436e64:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  436e68:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  436e6c:	8182      	strh	r2, [r0, #12]
  436e6e:	6643      	str	r3, [r0, #100]	; 0x64
  436e70:	b292      	uxth	r2, r2
  436e72:	0711      	lsls	r1, r2, #28
  436e74:	f140 80b2 	bpl.w	436fdc <_vfiprintf_r+0x1a0>
  436e78:	9b00      	ldr	r3, [sp, #0]
  436e7a:	691b      	ldr	r3, [r3, #16]
  436e7c:	2b00      	cmp	r3, #0
  436e7e:	f000 80ad 	beq.w	436fdc <_vfiprintf_r+0x1a0>
  436e82:	f002 021a 	and.w	r2, r2, #26
  436e86:	2a0a      	cmp	r2, #10
  436e88:	f000 80b4 	beq.w	436ff4 <_vfiprintf_r+0x1b8>
  436e8c:	2300      	movs	r3, #0
  436e8e:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
  436e92:	9309      	str	r3, [sp, #36]	; 0x24
  436e94:	930f      	str	r3, [sp, #60]	; 0x3c
  436e96:	930e      	str	r3, [sp, #56]	; 0x38
  436e98:	9302      	str	r3, [sp, #8]
  436e9a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  436e9e:	4654      	mov	r4, sl
  436ea0:	f89b 3000 	ldrb.w	r3, [fp]
  436ea4:	2b00      	cmp	r3, #0
  436ea6:	f000 84a3 	beq.w	4377f0 <_vfiprintf_r+0x9b4>
  436eaa:	2b25      	cmp	r3, #37	; 0x25
  436eac:	f000 84a0 	beq.w	4377f0 <_vfiprintf_r+0x9b4>
  436eb0:	465a      	mov	r2, fp
  436eb2:	e001      	b.n	436eb8 <_vfiprintf_r+0x7c>
  436eb4:	2b25      	cmp	r3, #37	; 0x25
  436eb6:	d003      	beq.n	436ec0 <_vfiprintf_r+0x84>
  436eb8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  436ebc:	2b00      	cmp	r3, #0
  436ebe:	d1f9      	bne.n	436eb4 <_vfiprintf_r+0x78>
  436ec0:	ebcb 0602 	rsb	r6, fp, r2
  436ec4:	4615      	mov	r5, r2
  436ec6:	b196      	cbz	r6, 436eee <_vfiprintf_r+0xb2>
  436ec8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  436eca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  436ecc:	f8c4 b000 	str.w	fp, [r4]
  436ed0:	3301      	adds	r3, #1
  436ed2:	4432      	add	r2, r6
  436ed4:	2b07      	cmp	r3, #7
  436ed6:	6066      	str	r6, [r4, #4]
  436ed8:	920f      	str	r2, [sp, #60]	; 0x3c
  436eda:	930e      	str	r3, [sp, #56]	; 0x38
  436edc:	dd79      	ble.n	436fd2 <_vfiprintf_r+0x196>
  436ede:	2a00      	cmp	r2, #0
  436ee0:	f040 84af 	bne.w	437842 <_vfiprintf_r+0xa06>
  436ee4:	9b02      	ldr	r3, [sp, #8]
  436ee6:	920e      	str	r2, [sp, #56]	; 0x38
  436ee8:	4433      	add	r3, r6
  436eea:	4654      	mov	r4, sl
  436eec:	9302      	str	r3, [sp, #8]
  436eee:	782b      	ldrb	r3, [r5, #0]
  436ef0:	2b00      	cmp	r3, #0
  436ef2:	f000 8360 	beq.w	4375b6 <_vfiprintf_r+0x77a>
  436ef6:	2100      	movs	r1, #0
  436ef8:	f04f 0300 	mov.w	r3, #0
  436efc:	f04f 3cff 	mov.w	ip, #4294967295
  436f00:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  436f04:	1c68      	adds	r0, r5, #1
  436f06:	786b      	ldrb	r3, [r5, #1]
  436f08:	4688      	mov	r8, r1
  436f0a:	460d      	mov	r5, r1
  436f0c:	4666      	mov	r6, ip
  436f0e:	f100 0b01 	add.w	fp, r0, #1
  436f12:	f1a3 0220 	sub.w	r2, r3, #32
  436f16:	2a58      	cmp	r2, #88	; 0x58
  436f18:	f200 82ab 	bhi.w	437472 <_vfiprintf_r+0x636>
  436f1c:	e8df f012 	tbh	[pc, r2, lsl #1]
  436f20:	02a9029b 	.word	0x02a9029b
  436f24:	02a302a9 	.word	0x02a302a9
  436f28:	02a902a9 	.word	0x02a902a9
  436f2c:	02a902a9 	.word	0x02a902a9
  436f30:	02a902a9 	.word	0x02a902a9
  436f34:	02620255 	.word	0x02620255
  436f38:	010d02a9 	.word	0x010d02a9
  436f3c:	02a9026e 	.word	0x02a9026e
  436f40:	012f0129 	.word	0x012f0129
  436f44:	012f012f 	.word	0x012f012f
  436f48:	012f012f 	.word	0x012f012f
  436f4c:	012f012f 	.word	0x012f012f
  436f50:	012f012f 	.word	0x012f012f
  436f54:	02a902a9 	.word	0x02a902a9
  436f58:	02a902a9 	.word	0x02a902a9
  436f5c:	02a902a9 	.word	0x02a902a9
  436f60:	02a902a9 	.word	0x02a902a9
  436f64:	02a902a9 	.word	0x02a902a9
  436f68:	02a9013d 	.word	0x02a9013d
  436f6c:	02a902a9 	.word	0x02a902a9
  436f70:	02a902a9 	.word	0x02a902a9
  436f74:	02a902a9 	.word	0x02a902a9
  436f78:	02a902a9 	.word	0x02a902a9
  436f7c:	017402a9 	.word	0x017402a9
  436f80:	02a902a9 	.word	0x02a902a9
  436f84:	02a902a9 	.word	0x02a902a9
  436f88:	018b02a9 	.word	0x018b02a9
  436f8c:	02a902a9 	.word	0x02a902a9
  436f90:	02a901a3 	.word	0x02a901a3
  436f94:	02a902a9 	.word	0x02a902a9
  436f98:	02a902a9 	.word	0x02a902a9
  436f9c:	02a902a9 	.word	0x02a902a9
  436fa0:	02a902a9 	.word	0x02a902a9
  436fa4:	01c702a9 	.word	0x01c702a9
  436fa8:	02a901da 	.word	0x02a901da
  436fac:	02a902a9 	.word	0x02a902a9
  436fb0:	01da0123 	.word	0x01da0123
  436fb4:	02a902a9 	.word	0x02a902a9
  436fb8:	02a9024c 	.word	0x02a9024c
  436fbc:	0113028a 	.word	0x0113028a
  436fc0:	020701f3 	.word	0x020701f3
  436fc4:	020d02a9 	.word	0x020d02a9
  436fc8:	008102a9 	.word	0x008102a9
  436fcc:	02a902a9 	.word	0x02a902a9
  436fd0:	0233      	.short	0x0233
  436fd2:	3408      	adds	r4, #8
  436fd4:	9b02      	ldr	r3, [sp, #8]
  436fd6:	4433      	add	r3, r6
  436fd8:	9302      	str	r3, [sp, #8]
  436fda:	e788      	b.n	436eee <_vfiprintf_r+0xb2>
  436fdc:	9801      	ldr	r0, [sp, #4]
  436fde:	9900      	ldr	r1, [sp, #0]
  436fe0:	f002 f808 	bl	438ff4 <__swsetup_r>
  436fe4:	b9a8      	cbnz	r0, 437012 <_vfiprintf_r+0x1d6>
  436fe6:	9b00      	ldr	r3, [sp, #0]
  436fe8:	899a      	ldrh	r2, [r3, #12]
  436fea:	f002 021a 	and.w	r2, r2, #26
  436fee:	2a0a      	cmp	r2, #10
  436ff0:	f47f af4c 	bne.w	436e8c <_vfiprintf_r+0x50>
  436ff4:	9b00      	ldr	r3, [sp, #0]
  436ff6:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
  436ffa:	2b00      	cmp	r3, #0
  436ffc:	f6ff af46 	blt.w	436e8c <_vfiprintf_r+0x50>
  437000:	9801      	ldr	r0, [sp, #4]
  437002:	9900      	ldr	r1, [sp, #0]
  437004:	465a      	mov	r2, fp
  437006:	4623      	mov	r3, r4
  437008:	f000 fd20 	bl	437a4c <__sbprintf>
  43700c:	b02b      	add	sp, #172	; 0xac
  43700e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  437012:	f04f 30ff 	mov.w	r0, #4294967295
  437016:	b02b      	add	sp, #172	; 0xac
  437018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  43701c:	f7fd f870 	bl	434100 <__sinit>
  437020:	e719      	b.n	436e56 <_vfiprintf_r+0x1a>
  437022:	f018 0f20 	tst.w	r8, #32
  437026:	9503      	str	r5, [sp, #12]
  437028:	46b4      	mov	ip, r6
  43702a:	f000 810c 	beq.w	437246 <_vfiprintf_r+0x40a>
  43702e:	9b04      	ldr	r3, [sp, #16]
  437030:	3307      	adds	r3, #7
  437032:	f023 0307 	bic.w	r3, r3, #7
  437036:	f103 0208 	add.w	r2, r3, #8
  43703a:	e9d3 6700 	ldrd	r6, r7, [r3]
  43703e:	9204      	str	r2, [sp, #16]
  437040:	2301      	movs	r3, #1
  437042:	f04f 0200 	mov.w	r2, #0
  437046:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  43704a:	46e1      	mov	r9, ip
  43704c:	2500      	movs	r5, #0
  43704e:	f1bc 0f00 	cmp.w	ip, #0
  437052:	bfa8      	it	ge
  437054:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  437058:	ea56 0207 	orrs.w	r2, r6, r7
  43705c:	f040 80c4 	bne.w	4371e8 <_vfiprintf_r+0x3ac>
  437060:	f1bc 0f00 	cmp.w	ip, #0
  437064:	f000 8381 	beq.w	43776a <_vfiprintf_r+0x92e>
  437068:	2b01      	cmp	r3, #1
  43706a:	f000 80c5 	beq.w	4371f8 <_vfiprintf_r+0x3bc>
  43706e:	2b02      	cmp	r3, #2
  437070:	f000 8387 	beq.w	437782 <_vfiprintf_r+0x946>
  437074:	4651      	mov	r1, sl
  437076:	08f2      	lsrs	r2, r6, #3
  437078:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  43707c:	08f8      	lsrs	r0, r7, #3
  43707e:	f006 0307 	and.w	r3, r6, #7
  437082:	4607      	mov	r7, r0
  437084:	4616      	mov	r6, r2
  437086:	3330      	adds	r3, #48	; 0x30
  437088:	ea56 0207 	orrs.w	r2, r6, r7
  43708c:	f801 3d01 	strb.w	r3, [r1, #-1]!
  437090:	d1f1      	bne.n	437076 <_vfiprintf_r+0x23a>
  437092:	f018 0f01 	tst.w	r8, #1
  437096:	9107      	str	r1, [sp, #28]
  437098:	f040 83fc 	bne.w	437894 <_vfiprintf_r+0xa58>
  43709c:	ebc1 090a 	rsb	r9, r1, sl
  4370a0:	45e1      	cmp	r9, ip
  4370a2:	464e      	mov	r6, r9
  4370a4:	bfb8      	it	lt
  4370a6:	4666      	movlt	r6, ip
  4370a8:	b105      	cbz	r5, 4370ac <_vfiprintf_r+0x270>
  4370aa:	3601      	adds	r6, #1
  4370ac:	f018 0302 	ands.w	r3, r8, #2
  4370b0:	9305      	str	r3, [sp, #20]
  4370b2:	bf18      	it	ne
  4370b4:	3602      	addne	r6, #2
  4370b6:	f018 0384 	ands.w	r3, r8, #132	; 0x84
  4370ba:	9306      	str	r3, [sp, #24]
  4370bc:	f040 81fa 	bne.w	4374b4 <_vfiprintf_r+0x678>
  4370c0:	9b03      	ldr	r3, [sp, #12]
  4370c2:	1b9d      	subs	r5, r3, r6
  4370c4:	2d00      	cmp	r5, #0
  4370c6:	f340 81f5 	ble.w	4374b4 <_vfiprintf_r+0x678>
  4370ca:	2d10      	cmp	r5, #16
  4370cc:	f340 848c 	ble.w	4379e8 <_vfiprintf_r+0xbac>
  4370d0:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  4370d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4370d6:	4fc6      	ldr	r7, [pc, #792]	; (4373f0 <_vfiprintf_r+0x5b4>)
  4370d8:	4620      	mov	r0, r4
  4370da:	2310      	movs	r3, #16
  4370dc:	4664      	mov	r4, ip
  4370de:	4671      	mov	r1, lr
  4370e0:	4684      	mov	ip, r0
  4370e2:	e007      	b.n	4370f4 <_vfiprintf_r+0x2b8>
  4370e4:	f101 0e02 	add.w	lr, r1, #2
  4370e8:	f10c 0c08 	add.w	ip, ip, #8
  4370ec:	4601      	mov	r1, r0
  4370ee:	3d10      	subs	r5, #16
  4370f0:	2d10      	cmp	r5, #16
  4370f2:	dd13      	ble.n	43711c <_vfiprintf_r+0x2e0>
  4370f4:	1c48      	adds	r0, r1, #1
  4370f6:	3210      	adds	r2, #16
  4370f8:	2807      	cmp	r0, #7
  4370fa:	920f      	str	r2, [sp, #60]	; 0x3c
  4370fc:	f8cc 7000 	str.w	r7, [ip]
  437100:	f8cc 3004 	str.w	r3, [ip, #4]
  437104:	900e      	str	r0, [sp, #56]	; 0x38
  437106:	dded      	ble.n	4370e4 <_vfiprintf_r+0x2a8>
  437108:	2a00      	cmp	r2, #0
  43710a:	f040 81c3 	bne.w	437494 <_vfiprintf_r+0x658>
  43710e:	3d10      	subs	r5, #16
  437110:	2d10      	cmp	r5, #16
  437112:	4611      	mov	r1, r2
  437114:	f04f 0e01 	mov.w	lr, #1
  437118:	46d4      	mov	ip, sl
  43711a:	dceb      	bgt.n	4370f4 <_vfiprintf_r+0x2b8>
  43711c:	4663      	mov	r3, ip
  43711e:	4671      	mov	r1, lr
  437120:	46a4      	mov	ip, r4
  437122:	461c      	mov	r4, r3
  437124:	442a      	add	r2, r5
  437126:	2907      	cmp	r1, #7
  437128:	920f      	str	r2, [sp, #60]	; 0x3c
  43712a:	6027      	str	r7, [r4, #0]
  43712c:	6065      	str	r5, [r4, #4]
  43712e:	910e      	str	r1, [sp, #56]	; 0x38
  437130:	f300 8346 	bgt.w	4377c0 <_vfiprintf_r+0x984>
  437134:	3408      	adds	r4, #8
  437136:	1c48      	adds	r0, r1, #1
  437138:	e1bf      	b.n	4374ba <_vfiprintf_r+0x67e>
  43713a:	4658      	mov	r0, fp
  43713c:	f048 0804 	orr.w	r8, r8, #4
  437140:	f89b 3000 	ldrb.w	r3, [fp]
  437144:	e6e3      	b.n	436f0e <_vfiprintf_r+0xd2>
  437146:	f018 0320 	ands.w	r3, r8, #32
  43714a:	9503      	str	r5, [sp, #12]
  43714c:	46b4      	mov	ip, r6
  43714e:	d062      	beq.n	437216 <_vfiprintf_r+0x3da>
  437150:	9b04      	ldr	r3, [sp, #16]
  437152:	3307      	adds	r3, #7
  437154:	f023 0307 	bic.w	r3, r3, #7
  437158:	f103 0208 	add.w	r2, r3, #8
  43715c:	e9d3 6700 	ldrd	r6, r7, [r3]
  437160:	9204      	str	r2, [sp, #16]
  437162:	2300      	movs	r3, #0
  437164:	e76d      	b.n	437042 <_vfiprintf_r+0x206>
  437166:	f048 0840 	orr.w	r8, r8, #64	; 0x40
  43716a:	f89b 3000 	ldrb.w	r3, [fp]
  43716e:	4658      	mov	r0, fp
  437170:	e6cd      	b.n	436f0e <_vfiprintf_r+0xd2>
  437172:	f048 0880 	orr.w	r8, r8, #128	; 0x80
  437176:	f89b 3000 	ldrb.w	r3, [fp]
  43717a:	4658      	mov	r0, fp
  43717c:	e6c7      	b.n	436f0e <_vfiprintf_r+0xd2>
  43717e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  437182:	2500      	movs	r5, #0
  437184:	f81b 3b01 	ldrb.w	r3, [fp], #1
  437188:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  43718c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  437190:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  437194:	2a09      	cmp	r2, #9
  437196:	d9f5      	bls.n	437184 <_vfiprintf_r+0x348>
  437198:	e6bb      	b.n	436f12 <_vfiprintf_r+0xd6>
  43719a:	f048 0810 	orr.w	r8, r8, #16
  43719e:	f018 0f20 	tst.w	r8, #32
  4371a2:	9503      	str	r5, [sp, #12]
  4371a4:	46b4      	mov	ip, r6
  4371a6:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4371aa:	f000 809b 	beq.w	4372e4 <_vfiprintf_r+0x4a8>
  4371ae:	9904      	ldr	r1, [sp, #16]
  4371b0:	3107      	adds	r1, #7
  4371b2:	f021 0107 	bic.w	r1, r1, #7
  4371b6:	e9d1 2300 	ldrd	r2, r3, [r1]
  4371ba:	3108      	adds	r1, #8
  4371bc:	9104      	str	r1, [sp, #16]
  4371be:	4616      	mov	r6, r2
  4371c0:	461f      	mov	r7, r3
  4371c2:	2a00      	cmp	r2, #0
  4371c4:	f173 0300 	sbcs.w	r3, r3, #0
  4371c8:	f2c0 83a6 	blt.w	437918 <_vfiprintf_r+0xadc>
  4371cc:	f1bc 0f00 	cmp.w	ip, #0
  4371d0:	bfa8      	it	ge
  4371d2:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  4371d6:	ea56 0207 	orrs.w	r2, r6, r7
  4371da:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  4371de:	46e1      	mov	r9, ip
  4371e0:	f04f 0301 	mov.w	r3, #1
  4371e4:	f43f af3c 	beq.w	437060 <_vfiprintf_r+0x224>
  4371e8:	2b01      	cmp	r3, #1
  4371ea:	f47f af40 	bne.w	43706e <_vfiprintf_r+0x232>
  4371ee:	2f00      	cmp	r7, #0
  4371f0:	bf08      	it	eq
  4371f2:	2e0a      	cmpeq	r6, #10
  4371f4:	f080 8334 	bcs.w	437860 <_vfiprintf_r+0xa24>
  4371f8:	ab2a      	add	r3, sp, #168	; 0xa8
  4371fa:	3630      	adds	r6, #48	; 0x30
  4371fc:	f803 6d41 	strb.w	r6, [r3, #-65]!
  437200:	ebc3 090a 	rsb	r9, r3, sl
  437204:	9307      	str	r3, [sp, #28]
  437206:	e74b      	b.n	4370a0 <_vfiprintf_r+0x264>
  437208:	f048 0810 	orr.w	r8, r8, #16
  43720c:	f018 0320 	ands.w	r3, r8, #32
  437210:	9503      	str	r5, [sp, #12]
  437212:	46b4      	mov	ip, r6
  437214:	d19c      	bne.n	437150 <_vfiprintf_r+0x314>
  437216:	f018 0210 	ands.w	r2, r8, #16
  43721a:	f040 82f7 	bne.w	43780c <_vfiprintf_r+0x9d0>
  43721e:	f018 0340 	ands.w	r3, r8, #64	; 0x40
  437222:	f000 82f3 	beq.w	43780c <_vfiprintf_r+0x9d0>
  437226:	9904      	ldr	r1, [sp, #16]
  437228:	4613      	mov	r3, r2
  43722a:	460a      	mov	r2, r1
  43722c:	3204      	adds	r2, #4
  43722e:	880e      	ldrh	r6, [r1, #0]
  437230:	9204      	str	r2, [sp, #16]
  437232:	2700      	movs	r7, #0
  437234:	e705      	b.n	437042 <_vfiprintf_r+0x206>
  437236:	f048 0810 	orr.w	r8, r8, #16
  43723a:	f018 0f20 	tst.w	r8, #32
  43723e:	9503      	str	r5, [sp, #12]
  437240:	46b4      	mov	ip, r6
  437242:	f47f aef4 	bne.w	43702e <_vfiprintf_r+0x1f2>
  437246:	9a04      	ldr	r2, [sp, #16]
  437248:	f018 0f10 	tst.w	r8, #16
  43724c:	4613      	mov	r3, r2
  43724e:	f040 82e4 	bne.w	43781a <_vfiprintf_r+0x9de>
  437252:	f018 0f40 	tst.w	r8, #64	; 0x40
  437256:	f000 82e0 	beq.w	43781a <_vfiprintf_r+0x9de>
  43725a:	8816      	ldrh	r6, [r2, #0]
  43725c:	3204      	adds	r2, #4
  43725e:	2700      	movs	r7, #0
  437260:	2301      	movs	r3, #1
  437262:	9204      	str	r2, [sp, #16]
  437264:	e6ed      	b.n	437042 <_vfiprintf_r+0x206>
  437266:	4a63      	ldr	r2, [pc, #396]	; (4373f4 <_vfiprintf_r+0x5b8>)
  437268:	9503      	str	r5, [sp, #12]
  43726a:	f018 0f20 	tst.w	r8, #32
  43726e:	46b4      	mov	ip, r6
  437270:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  437274:	9209      	str	r2, [sp, #36]	; 0x24
  437276:	f000 8090 	beq.w	43739a <_vfiprintf_r+0x55e>
  43727a:	9a04      	ldr	r2, [sp, #16]
  43727c:	3207      	adds	r2, #7
  43727e:	f022 0207 	bic.w	r2, r2, #7
  437282:	e9d2 6700 	ldrd	r6, r7, [r2]
  437286:	f102 0108 	add.w	r1, r2, #8
  43728a:	9104      	str	r1, [sp, #16]
  43728c:	f018 0f01 	tst.w	r8, #1
  437290:	f000 8290 	beq.w	4377b4 <_vfiprintf_r+0x978>
  437294:	ea56 0207 	orrs.w	r2, r6, r7
  437298:	f000 828c 	beq.w	4377b4 <_vfiprintf_r+0x978>
  43729c:	2230      	movs	r2, #48	; 0x30
  43729e:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  4372a2:	f048 0802 	orr.w	r8, r8, #2
  4372a6:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  4372aa:	2302      	movs	r3, #2
  4372ac:	e6c9      	b.n	437042 <_vfiprintf_r+0x206>
  4372ae:	9a04      	ldr	r2, [sp, #16]
  4372b0:	9503      	str	r5, [sp, #12]
  4372b2:	6813      	ldr	r3, [r2, #0]
  4372b4:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  4372b8:	4613      	mov	r3, r2
  4372ba:	3304      	adds	r3, #4
  4372bc:	2601      	movs	r6, #1
  4372be:	f04f 0100 	mov.w	r1, #0
  4372c2:	9304      	str	r3, [sp, #16]
  4372c4:	ab10      	add	r3, sp, #64	; 0x40
  4372c6:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4372ca:	46b1      	mov	r9, r6
  4372cc:	9307      	str	r3, [sp, #28]
  4372ce:	f04f 0c00 	mov.w	ip, #0
  4372d2:	e6eb      	b.n	4370ac <_vfiprintf_r+0x270>
  4372d4:	f018 0f20 	tst.w	r8, #32
  4372d8:	9503      	str	r5, [sp, #12]
  4372da:	46b4      	mov	ip, r6
  4372dc:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4372e0:	f47f af65 	bne.w	4371ae <_vfiprintf_r+0x372>
  4372e4:	f018 0f10 	tst.w	r8, #16
  4372e8:	f040 82a2 	bne.w	437830 <_vfiprintf_r+0x9f4>
  4372ec:	f018 0f40 	tst.w	r8, #64	; 0x40
  4372f0:	f000 829e 	beq.w	437830 <_vfiprintf_r+0x9f4>
  4372f4:	9904      	ldr	r1, [sp, #16]
  4372f6:	f9b1 6000 	ldrsh.w	r6, [r1]
  4372fa:	3104      	adds	r1, #4
  4372fc:	17f7      	asrs	r7, r6, #31
  4372fe:	4632      	mov	r2, r6
  437300:	463b      	mov	r3, r7
  437302:	9104      	str	r1, [sp, #16]
  437304:	e75d      	b.n	4371c2 <_vfiprintf_r+0x386>
  437306:	9904      	ldr	r1, [sp, #16]
  437308:	9503      	str	r5, [sp, #12]
  43730a:	2330      	movs	r3, #48	; 0x30
  43730c:	460a      	mov	r2, r1
  43730e:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  437312:	2378      	movs	r3, #120	; 0x78
  437314:	3204      	adds	r2, #4
  437316:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  43731a:	4b37      	ldr	r3, [pc, #220]	; (4373f8 <_vfiprintf_r+0x5bc>)
  43731c:	9309      	str	r3, [sp, #36]	; 0x24
  43731e:	46b4      	mov	ip, r6
  437320:	f048 0802 	orr.w	r8, r8, #2
  437324:	680e      	ldr	r6, [r1, #0]
  437326:	9204      	str	r2, [sp, #16]
  437328:	2700      	movs	r7, #0
  43732a:	2302      	movs	r3, #2
  43732c:	e689      	b.n	437042 <_vfiprintf_r+0x206>
  43732e:	f048 0820 	orr.w	r8, r8, #32
  437332:	f89b 3000 	ldrb.w	r3, [fp]
  437336:	4658      	mov	r0, fp
  437338:	e5e9      	b.n	436f0e <_vfiprintf_r+0xd2>
  43733a:	9a04      	ldr	r2, [sp, #16]
  43733c:	9503      	str	r5, [sp, #12]
  43733e:	6813      	ldr	r3, [r2, #0]
  437340:	9307      	str	r3, [sp, #28]
  437342:	f04f 0100 	mov.w	r1, #0
  437346:	46b4      	mov	ip, r6
  437348:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  43734c:	1d16      	adds	r6, r2, #4
  43734e:	2b00      	cmp	r3, #0
  437350:	f000 8350 	beq.w	4379f4 <_vfiprintf_r+0xbb8>
  437354:	f1bc 0f00 	cmp.w	ip, #0
  437358:	f2c0 832a 	blt.w	4379b0 <_vfiprintf_r+0xb74>
  43735c:	9d07      	ldr	r5, [sp, #28]
  43735e:	f8cd c010 	str.w	ip, [sp, #16]
  437362:	4662      	mov	r2, ip
  437364:	4628      	mov	r0, r5
  437366:	2100      	movs	r1, #0
  437368:	f7fd fd3a 	bl	434de0 <memchr>
  43736c:	f8dd c010 	ldr.w	ip, [sp, #16]
  437370:	2800      	cmp	r0, #0
  437372:	f000 8350 	beq.w	437a16 <_vfiprintf_r+0xbda>
  437376:	ebc5 0900 	rsb	r9, r5, r0
  43737a:	9604      	str	r6, [sp, #16]
  43737c:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  437380:	f04f 0c00 	mov.w	ip, #0
  437384:	e68c      	b.n	4370a0 <_vfiprintf_r+0x264>
  437386:	4a1c      	ldr	r2, [pc, #112]	; (4373f8 <_vfiprintf_r+0x5bc>)
  437388:	9503      	str	r5, [sp, #12]
  43738a:	f018 0f20 	tst.w	r8, #32
  43738e:	46b4      	mov	ip, r6
  437390:	9209      	str	r2, [sp, #36]	; 0x24
  437392:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  437396:	f47f af70 	bne.w	43727a <_vfiprintf_r+0x43e>
  43739a:	9904      	ldr	r1, [sp, #16]
  43739c:	f018 0f10 	tst.w	r8, #16
  4373a0:	460a      	mov	r2, r1
  4373a2:	f040 8240 	bne.w	437826 <_vfiprintf_r+0x9ea>
  4373a6:	f018 0f40 	tst.w	r8, #64	; 0x40
  4373aa:	f000 823c 	beq.w	437826 <_vfiprintf_r+0x9ea>
  4373ae:	3204      	adds	r2, #4
  4373b0:	880e      	ldrh	r6, [r1, #0]
  4373b2:	9204      	str	r2, [sp, #16]
  4373b4:	2700      	movs	r7, #0
  4373b6:	e769      	b.n	43728c <_vfiprintf_r+0x450>
  4373b8:	f89b 3000 	ldrb.w	r3, [fp]
  4373bc:	2b6c      	cmp	r3, #108	; 0x6c
  4373be:	f000 82ea 	beq.w	437996 <_vfiprintf_r+0xb5a>
  4373c2:	f048 0810 	orr.w	r8, r8, #16
  4373c6:	4658      	mov	r0, fp
  4373c8:	e5a1      	b.n	436f0e <_vfiprintf_r+0xd2>
  4373ca:	9a04      	ldr	r2, [sp, #16]
  4373cc:	6815      	ldr	r5, [r2, #0]
  4373ce:	4613      	mov	r3, r2
  4373d0:	2d00      	cmp	r5, #0
  4373d2:	f103 0304 	add.w	r3, r3, #4
  4373d6:	f2c0 82e6 	blt.w	4379a6 <_vfiprintf_r+0xb6a>
  4373da:	9304      	str	r3, [sp, #16]
  4373dc:	f89b 3000 	ldrb.w	r3, [fp]
  4373e0:	4658      	mov	r0, fp
  4373e2:	e594      	b.n	436f0e <_vfiprintf_r+0xd2>
  4373e4:	f89b 3000 	ldrb.w	r3, [fp]
  4373e8:	4658      	mov	r0, fp
  4373ea:	212b      	movs	r1, #43	; 0x2b
  4373ec:	e58f      	b.n	436f0e <_vfiprintf_r+0xd2>
  4373ee:	bf00      	nop
  4373f0:	004404c4 	.word	0x004404c4
  4373f4:	00440484 	.word	0x00440484
  4373f8:	00440498 	.word	0x00440498
  4373fc:	f89b 3000 	ldrb.w	r3, [fp]
  437400:	2b2a      	cmp	r3, #42	; 0x2a
  437402:	f10b 0001 	add.w	r0, fp, #1
  437406:	f000 830f 	beq.w	437a28 <_vfiprintf_r+0xbec>
  43740a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  43740e:	2a09      	cmp	r2, #9
  437410:	4683      	mov	fp, r0
  437412:	f04f 0600 	mov.w	r6, #0
  437416:	f63f ad7c 	bhi.w	436f12 <_vfiprintf_r+0xd6>
  43741a:	f81b 3b01 	ldrb.w	r3, [fp], #1
  43741e:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  437422:	eb02 0646 	add.w	r6, r2, r6, lsl #1
  437426:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  43742a:	2a09      	cmp	r2, #9
  43742c:	d9f5      	bls.n	43741a <_vfiprintf_r+0x5de>
  43742e:	ea46 76e6 	orr.w	r6, r6, r6, asr #31
  437432:	e56e      	b.n	436f12 <_vfiprintf_r+0xd6>
  437434:	f018 0f20 	tst.w	r8, #32
  437438:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  43743c:	f000 8283 	beq.w	437946 <_vfiprintf_r+0xb0a>
  437440:	9a04      	ldr	r2, [sp, #16]
  437442:	9902      	ldr	r1, [sp, #8]
  437444:	6813      	ldr	r3, [r2, #0]
  437446:	17cf      	asrs	r7, r1, #31
  437448:	4608      	mov	r0, r1
  43744a:	3204      	adds	r2, #4
  43744c:	4639      	mov	r1, r7
  43744e:	9204      	str	r2, [sp, #16]
  437450:	e9c3 0100 	strd	r0, r1, [r3]
  437454:	e524      	b.n	436ea0 <_vfiprintf_r+0x64>
  437456:	4658      	mov	r0, fp
  437458:	f89b 3000 	ldrb.w	r3, [fp]
  43745c:	2900      	cmp	r1, #0
  43745e:	f47f ad56 	bne.w	436f0e <_vfiprintf_r+0xd2>
  437462:	2120      	movs	r1, #32
  437464:	e553      	b.n	436f0e <_vfiprintf_r+0xd2>
  437466:	f048 0801 	orr.w	r8, r8, #1
  43746a:	4658      	mov	r0, fp
  43746c:	f89b 3000 	ldrb.w	r3, [fp]
  437470:	e54d      	b.n	436f0e <_vfiprintf_r+0xd2>
  437472:	9503      	str	r5, [sp, #12]
  437474:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  437478:	2b00      	cmp	r3, #0
  43747a:	f000 809c 	beq.w	4375b6 <_vfiprintf_r+0x77a>
  43747e:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  437482:	f04f 0300 	mov.w	r3, #0
  437486:	2601      	movs	r6, #1
  437488:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  43748c:	ab10      	add	r3, sp, #64	; 0x40
  43748e:	46b1      	mov	r9, r6
  437490:	9307      	str	r3, [sp, #28]
  437492:	e71c      	b.n	4372ce <_vfiprintf_r+0x492>
  437494:	9801      	ldr	r0, [sp, #4]
  437496:	9900      	ldr	r1, [sp, #0]
  437498:	9308      	str	r3, [sp, #32]
  43749a:	aa0d      	add	r2, sp, #52	; 0x34
  43749c:	f7ff fc86 	bl	436dac <__sprint_r.part.0>
  4374a0:	2800      	cmp	r0, #0
  4374a2:	f040 808f 	bne.w	4375c4 <_vfiprintf_r+0x788>
  4374a6:	990e      	ldr	r1, [sp, #56]	; 0x38
  4374a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4374aa:	9b08      	ldr	r3, [sp, #32]
  4374ac:	f101 0e01 	add.w	lr, r1, #1
  4374b0:	46d4      	mov	ip, sl
  4374b2:	e61c      	b.n	4370ee <_vfiprintf_r+0x2b2>
  4374b4:	990e      	ldr	r1, [sp, #56]	; 0x38
  4374b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4374b8:	1c48      	adds	r0, r1, #1
  4374ba:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  4374be:	b16b      	cbz	r3, 4374dc <_vfiprintf_r+0x6a0>
  4374c0:	3201      	adds	r2, #1
  4374c2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
  4374c6:	2101      	movs	r1, #1
  4374c8:	2807      	cmp	r0, #7
  4374ca:	920f      	str	r2, [sp, #60]	; 0x3c
  4374cc:	900e      	str	r0, [sp, #56]	; 0x38
  4374ce:	6023      	str	r3, [r4, #0]
  4374d0:	6061      	str	r1, [r4, #4]
  4374d2:	f300 8134 	bgt.w	43773e <_vfiprintf_r+0x902>
  4374d6:	4601      	mov	r1, r0
  4374d8:	3408      	adds	r4, #8
  4374da:	3001      	adds	r0, #1
  4374dc:	9b05      	ldr	r3, [sp, #20]
  4374de:	b163      	cbz	r3, 4374fa <_vfiprintf_r+0x6be>
  4374e0:	3202      	adds	r2, #2
  4374e2:	a90c      	add	r1, sp, #48	; 0x30
  4374e4:	2302      	movs	r3, #2
  4374e6:	2807      	cmp	r0, #7
  4374e8:	920f      	str	r2, [sp, #60]	; 0x3c
  4374ea:	900e      	str	r0, [sp, #56]	; 0x38
  4374ec:	e884 000a 	stmia.w	r4, {r1, r3}
  4374f0:	f300 8134 	bgt.w	43775c <_vfiprintf_r+0x920>
  4374f4:	4601      	mov	r1, r0
  4374f6:	3408      	adds	r4, #8
  4374f8:	3001      	adds	r0, #1
  4374fa:	9b06      	ldr	r3, [sp, #24]
  4374fc:	2b80      	cmp	r3, #128	; 0x80
  4374fe:	f000 80d4 	beq.w	4376aa <_vfiprintf_r+0x86e>
  437502:	ebc9 070c 	rsb	r7, r9, ip
  437506:	2f00      	cmp	r7, #0
  437508:	dd2b      	ble.n	437562 <_vfiprintf_r+0x726>
  43750a:	2f10      	cmp	r7, #16
  43750c:	4daa      	ldr	r5, [pc, #680]	; (4377b8 <_vfiprintf_r+0x97c>)
  43750e:	dd1f      	ble.n	437550 <_vfiprintf_r+0x714>
  437510:	46a6      	mov	lr, r4
  437512:	2310      	movs	r3, #16
  437514:	9c01      	ldr	r4, [sp, #4]
  437516:	e007      	b.n	437528 <_vfiprintf_r+0x6ec>
  437518:	f101 0c02 	add.w	ip, r1, #2
  43751c:	f10e 0e08 	add.w	lr, lr, #8
  437520:	4601      	mov	r1, r0
  437522:	3f10      	subs	r7, #16
  437524:	2f10      	cmp	r7, #16
  437526:	dd11      	ble.n	43754c <_vfiprintf_r+0x710>
  437528:	1c48      	adds	r0, r1, #1
  43752a:	3210      	adds	r2, #16
  43752c:	2807      	cmp	r0, #7
  43752e:	920f      	str	r2, [sp, #60]	; 0x3c
  437530:	f8ce 5000 	str.w	r5, [lr]
  437534:	f8ce 3004 	str.w	r3, [lr, #4]
  437538:	900e      	str	r0, [sp, #56]	; 0x38
  43753a:	dded      	ble.n	437518 <_vfiprintf_r+0x6dc>
  43753c:	bb6a      	cbnz	r2, 43759a <_vfiprintf_r+0x75e>
  43753e:	3f10      	subs	r7, #16
  437540:	2f10      	cmp	r7, #16
  437542:	f04f 0c01 	mov.w	ip, #1
  437546:	4611      	mov	r1, r2
  437548:	46d6      	mov	lr, sl
  43754a:	dced      	bgt.n	437528 <_vfiprintf_r+0x6ec>
  43754c:	4674      	mov	r4, lr
  43754e:	4660      	mov	r0, ip
  437550:	443a      	add	r2, r7
  437552:	2807      	cmp	r0, #7
  437554:	920f      	str	r2, [sp, #60]	; 0x3c
  437556:	e884 00a0 	stmia.w	r4, {r5, r7}
  43755a:	900e      	str	r0, [sp, #56]	; 0x38
  43755c:	dc3b      	bgt.n	4375d6 <_vfiprintf_r+0x79a>
  43755e:	3408      	adds	r4, #8
  437560:	3001      	adds	r0, #1
  437562:	eb02 0309 	add.w	r3, r2, r9
  437566:	9a07      	ldr	r2, [sp, #28]
  437568:	930f      	str	r3, [sp, #60]	; 0x3c
  43756a:	2807      	cmp	r0, #7
  43756c:	e884 0204 	stmia.w	r4, {r2, r9}
  437570:	900e      	str	r0, [sp, #56]	; 0x38
  437572:	dd3d      	ble.n	4375f0 <_vfiprintf_r+0x7b4>
  437574:	2b00      	cmp	r3, #0
  437576:	f040 813e 	bne.w	4377f6 <_vfiprintf_r+0x9ba>
  43757a:	f018 0f04 	tst.w	r8, #4
  43757e:	930e      	str	r3, [sp, #56]	; 0x38
  437580:	f040 812f 	bne.w	4377e2 <_vfiprintf_r+0x9a6>
  437584:	9b02      	ldr	r3, [sp, #8]
  437586:	9a03      	ldr	r2, [sp, #12]
  437588:	4296      	cmp	r6, r2
  43758a:	bfac      	ite	ge
  43758c:	199b      	addge	r3, r3, r6
  43758e:	189b      	addlt	r3, r3, r2
  437590:	9302      	str	r3, [sp, #8]
  437592:	2300      	movs	r3, #0
  437594:	930e      	str	r3, [sp, #56]	; 0x38
  437596:	4654      	mov	r4, sl
  437598:	e482      	b.n	436ea0 <_vfiprintf_r+0x64>
  43759a:	4620      	mov	r0, r4
  43759c:	9900      	ldr	r1, [sp, #0]
  43759e:	9305      	str	r3, [sp, #20]
  4375a0:	aa0d      	add	r2, sp, #52	; 0x34
  4375a2:	f7ff fc03 	bl	436dac <__sprint_r.part.0>
  4375a6:	b968      	cbnz	r0, 4375c4 <_vfiprintf_r+0x788>
  4375a8:	990e      	ldr	r1, [sp, #56]	; 0x38
  4375aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4375ac:	9b05      	ldr	r3, [sp, #20]
  4375ae:	f101 0c01 	add.w	ip, r1, #1
  4375b2:	46d6      	mov	lr, sl
  4375b4:	e7b5      	b.n	437522 <_vfiprintf_r+0x6e6>
  4375b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4375b8:	b123      	cbz	r3, 4375c4 <_vfiprintf_r+0x788>
  4375ba:	9801      	ldr	r0, [sp, #4]
  4375bc:	9900      	ldr	r1, [sp, #0]
  4375be:	aa0d      	add	r2, sp, #52	; 0x34
  4375c0:	f7ff fbf4 	bl	436dac <__sprint_r.part.0>
  4375c4:	9b00      	ldr	r3, [sp, #0]
  4375c6:	899b      	ldrh	r3, [r3, #12]
  4375c8:	065b      	lsls	r3, r3, #25
  4375ca:	f53f ad22 	bmi.w	437012 <_vfiprintf_r+0x1d6>
  4375ce:	9802      	ldr	r0, [sp, #8]
  4375d0:	b02b      	add	sp, #172	; 0xac
  4375d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4375d6:	2a00      	cmp	r2, #0
  4375d8:	f040 8191 	bne.w	4378fe <_vfiprintf_r+0xac2>
  4375dc:	2201      	movs	r2, #1
  4375de:	9907      	ldr	r1, [sp, #28]
  4375e0:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
  4375e4:	464b      	mov	r3, r9
  4375e6:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4375ea:	911a      	str	r1, [sp, #104]	; 0x68
  4375ec:	920e      	str	r2, [sp, #56]	; 0x38
  4375ee:	4654      	mov	r4, sl
  4375f0:	f104 0208 	add.w	r2, r4, #8
  4375f4:	f018 0f04 	tst.w	r8, #4
  4375f8:	d039      	beq.n	43766e <_vfiprintf_r+0x832>
  4375fa:	9903      	ldr	r1, [sp, #12]
  4375fc:	1b8d      	subs	r5, r1, r6
  4375fe:	2d00      	cmp	r5, #0
  437600:	dd35      	ble.n	43766e <_vfiprintf_r+0x832>
  437602:	2d10      	cmp	r5, #16
  437604:	f340 8202 	ble.w	437a0c <_vfiprintf_r+0xbd0>
  437608:	980e      	ldr	r0, [sp, #56]	; 0x38
  43760a:	4f6c      	ldr	r7, [pc, #432]	; (4377bc <_vfiprintf_r+0x980>)
  43760c:	f8dd 8004 	ldr.w	r8, [sp, #4]
  437610:	f8dd 9000 	ldr.w	r9, [sp]
  437614:	2410      	movs	r4, #16
  437616:	e006      	b.n	437626 <_vfiprintf_r+0x7ea>
  437618:	f100 0e02 	add.w	lr, r0, #2
  43761c:	3208      	adds	r2, #8
  43761e:	4608      	mov	r0, r1
  437620:	3d10      	subs	r5, #16
  437622:	2d10      	cmp	r5, #16
  437624:	dd10      	ble.n	437648 <_vfiprintf_r+0x80c>
  437626:	1c41      	adds	r1, r0, #1
  437628:	3310      	adds	r3, #16
  43762a:	2907      	cmp	r1, #7
  43762c:	930f      	str	r3, [sp, #60]	; 0x3c
  43762e:	6017      	str	r7, [r2, #0]
  437630:	6054      	str	r4, [r2, #4]
  437632:	910e      	str	r1, [sp, #56]	; 0x38
  437634:	ddf0      	ble.n	437618 <_vfiprintf_r+0x7dc>
  437636:	2b00      	cmp	r3, #0
  437638:	d12a      	bne.n	437690 <_vfiprintf_r+0x854>
  43763a:	3d10      	subs	r5, #16
  43763c:	2d10      	cmp	r5, #16
  43763e:	f04f 0e01 	mov.w	lr, #1
  437642:	4618      	mov	r0, r3
  437644:	4652      	mov	r2, sl
  437646:	dcee      	bgt.n	437626 <_vfiprintf_r+0x7ea>
  437648:	442b      	add	r3, r5
  43764a:	f1be 0f07 	cmp.w	lr, #7
  43764e:	930f      	str	r3, [sp, #60]	; 0x3c
  437650:	6017      	str	r7, [r2, #0]
  437652:	6055      	str	r5, [r2, #4]
  437654:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  437658:	dd09      	ble.n	43766e <_vfiprintf_r+0x832>
  43765a:	2b00      	cmp	r3, #0
  43765c:	d092      	beq.n	437584 <_vfiprintf_r+0x748>
  43765e:	9801      	ldr	r0, [sp, #4]
  437660:	9900      	ldr	r1, [sp, #0]
  437662:	aa0d      	add	r2, sp, #52	; 0x34
  437664:	f7ff fba2 	bl	436dac <__sprint_r.part.0>
  437668:	2800      	cmp	r0, #0
  43766a:	d1ab      	bne.n	4375c4 <_vfiprintf_r+0x788>
  43766c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  43766e:	9a02      	ldr	r2, [sp, #8]
  437670:	9903      	ldr	r1, [sp, #12]
  437672:	428e      	cmp	r6, r1
  437674:	bfac      	ite	ge
  437676:	1992      	addge	r2, r2, r6
  437678:	1852      	addlt	r2, r2, r1
  43767a:	9202      	str	r2, [sp, #8]
  43767c:	2b00      	cmp	r3, #0
  43767e:	d088      	beq.n	437592 <_vfiprintf_r+0x756>
  437680:	9801      	ldr	r0, [sp, #4]
  437682:	9900      	ldr	r1, [sp, #0]
  437684:	aa0d      	add	r2, sp, #52	; 0x34
  437686:	f7ff fb91 	bl	436dac <__sprint_r.part.0>
  43768a:	2800      	cmp	r0, #0
  43768c:	d081      	beq.n	437592 <_vfiprintf_r+0x756>
  43768e:	e799      	b.n	4375c4 <_vfiprintf_r+0x788>
  437690:	4640      	mov	r0, r8
  437692:	4649      	mov	r1, r9
  437694:	aa0d      	add	r2, sp, #52	; 0x34
  437696:	f7ff fb89 	bl	436dac <__sprint_r.part.0>
  43769a:	2800      	cmp	r0, #0
  43769c:	d192      	bne.n	4375c4 <_vfiprintf_r+0x788>
  43769e:	980e      	ldr	r0, [sp, #56]	; 0x38
  4376a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4376a2:	f100 0e01 	add.w	lr, r0, #1
  4376a6:	4652      	mov	r2, sl
  4376a8:	e7ba      	b.n	437620 <_vfiprintf_r+0x7e4>
  4376aa:	9b03      	ldr	r3, [sp, #12]
  4376ac:	1b9f      	subs	r7, r3, r6
  4376ae:	2f00      	cmp	r7, #0
  4376b0:	f77f af27 	ble.w	437502 <_vfiprintf_r+0x6c6>
  4376b4:	2f10      	cmp	r7, #16
  4376b6:	4d40      	ldr	r5, [pc, #256]	; (4377b8 <_vfiprintf_r+0x97c>)
  4376b8:	f340 81b4 	ble.w	437a24 <_vfiprintf_r+0xbe8>
  4376bc:	4620      	mov	r0, r4
  4376be:	2310      	movs	r3, #16
  4376c0:	4664      	mov	r4, ip
  4376c2:	4684      	mov	ip, r0
  4376c4:	e007      	b.n	4376d6 <_vfiprintf_r+0x89a>
  4376c6:	f101 0e02 	add.w	lr, r1, #2
  4376ca:	f10c 0c08 	add.w	ip, ip, #8
  4376ce:	4601      	mov	r1, r0
  4376d0:	3f10      	subs	r7, #16
  4376d2:	2f10      	cmp	r7, #16
  4376d4:	dd11      	ble.n	4376fa <_vfiprintf_r+0x8be>
  4376d6:	1c48      	adds	r0, r1, #1
  4376d8:	3210      	adds	r2, #16
  4376da:	2807      	cmp	r0, #7
  4376dc:	920f      	str	r2, [sp, #60]	; 0x3c
  4376de:	f8cc 5000 	str.w	r5, [ip]
  4376e2:	f8cc 3004 	str.w	r3, [ip, #4]
  4376e6:	900e      	str	r0, [sp, #56]	; 0x38
  4376e8:	dded      	ble.n	4376c6 <_vfiprintf_r+0x88a>
  4376ea:	b9c2      	cbnz	r2, 43771e <_vfiprintf_r+0x8e2>
  4376ec:	3f10      	subs	r7, #16
  4376ee:	2f10      	cmp	r7, #16
  4376f0:	f04f 0e01 	mov.w	lr, #1
  4376f4:	4611      	mov	r1, r2
  4376f6:	46d4      	mov	ip, sl
  4376f8:	dced      	bgt.n	4376d6 <_vfiprintf_r+0x89a>
  4376fa:	4663      	mov	r3, ip
  4376fc:	46a4      	mov	ip, r4
  4376fe:	461c      	mov	r4, r3
  437700:	443a      	add	r2, r7
  437702:	f1be 0f07 	cmp.w	lr, #7
  437706:	920f      	str	r2, [sp, #60]	; 0x3c
  437708:	e884 00a0 	stmia.w	r4, {r5, r7}
  43770c:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  437710:	f300 80ef 	bgt.w	4378f2 <_vfiprintf_r+0xab6>
  437714:	3408      	adds	r4, #8
  437716:	f10e 0001 	add.w	r0, lr, #1
  43771a:	4671      	mov	r1, lr
  43771c:	e6f1      	b.n	437502 <_vfiprintf_r+0x6c6>
  43771e:	9801      	ldr	r0, [sp, #4]
  437720:	9900      	ldr	r1, [sp, #0]
  437722:	9305      	str	r3, [sp, #20]
  437724:	aa0d      	add	r2, sp, #52	; 0x34
  437726:	f7ff fb41 	bl	436dac <__sprint_r.part.0>
  43772a:	2800      	cmp	r0, #0
  43772c:	f47f af4a 	bne.w	4375c4 <_vfiprintf_r+0x788>
  437730:	990e      	ldr	r1, [sp, #56]	; 0x38
  437732:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  437734:	9b05      	ldr	r3, [sp, #20]
  437736:	f101 0e01 	add.w	lr, r1, #1
  43773a:	46d4      	mov	ip, sl
  43773c:	e7c8      	b.n	4376d0 <_vfiprintf_r+0x894>
  43773e:	2a00      	cmp	r2, #0
  437740:	f040 80c6 	bne.w	4378d0 <_vfiprintf_r+0xa94>
  437744:	9b05      	ldr	r3, [sp, #20]
  437746:	2b00      	cmp	r3, #0
  437748:	f000 8086 	beq.w	437858 <_vfiprintf_r+0xa1c>
  43774c:	aa0c      	add	r2, sp, #48	; 0x30
  43774e:	2302      	movs	r3, #2
  437750:	921a      	str	r2, [sp, #104]	; 0x68
  437752:	4608      	mov	r0, r1
  437754:	931b      	str	r3, [sp, #108]	; 0x6c
  437756:	461a      	mov	r2, r3
  437758:	4654      	mov	r4, sl
  43775a:	e6cb      	b.n	4374f4 <_vfiprintf_r+0x6b8>
  43775c:	2a00      	cmp	r2, #0
  43775e:	f040 80a6 	bne.w	4378ae <_vfiprintf_r+0xa72>
  437762:	2001      	movs	r0, #1
  437764:	4611      	mov	r1, r2
  437766:	4654      	mov	r4, sl
  437768:	e6c7      	b.n	4374fa <_vfiprintf_r+0x6be>
  43776a:	bb03      	cbnz	r3, 4377ae <_vfiprintf_r+0x972>
  43776c:	f018 0f01 	tst.w	r8, #1
  437770:	d01d      	beq.n	4377ae <_vfiprintf_r+0x972>
  437772:	ab2a      	add	r3, sp, #168	; 0xa8
  437774:	2230      	movs	r2, #48	; 0x30
  437776:	f803 2d41 	strb.w	r2, [r3, #-65]!
  43777a:	ebc3 090a 	rsb	r9, r3, sl
  43777e:	9307      	str	r3, [sp, #28]
  437780:	e48e      	b.n	4370a0 <_vfiprintf_r+0x264>
  437782:	9809      	ldr	r0, [sp, #36]	; 0x24
  437784:	46d1      	mov	r9, sl
  437786:	0933      	lsrs	r3, r6, #4
  437788:	f006 010f 	and.w	r1, r6, #15
  43778c:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  437790:	093a      	lsrs	r2, r7, #4
  437792:	461e      	mov	r6, r3
  437794:	4617      	mov	r7, r2
  437796:	5c43      	ldrb	r3, [r0, r1]
  437798:	f809 3d01 	strb.w	r3, [r9, #-1]!
  43779c:	ea56 0307 	orrs.w	r3, r6, r7
  4377a0:	d1f1      	bne.n	437786 <_vfiprintf_r+0x94a>
  4377a2:	464b      	mov	r3, r9
  4377a4:	f8cd 901c 	str.w	r9, [sp, #28]
  4377a8:	ebc3 090a 	rsb	r9, r3, sl
  4377ac:	e478      	b.n	4370a0 <_vfiprintf_r+0x264>
  4377ae:	f8cd a01c 	str.w	sl, [sp, #28]
  4377b2:	e475      	b.n	4370a0 <_vfiprintf_r+0x264>
  4377b4:	2302      	movs	r3, #2
  4377b6:	e444      	b.n	437042 <_vfiprintf_r+0x206>
  4377b8:	004404b4 	.word	0x004404b4
  4377bc:	004404c4 	.word	0x004404c4
  4377c0:	2a00      	cmp	r2, #0
  4377c2:	f040 80d7 	bne.w	437974 <_vfiprintf_r+0xb38>
  4377c6:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  4377ca:	2b00      	cmp	r3, #0
  4377cc:	f000 80ae 	beq.w	43792c <_vfiprintf_r+0xaf0>
  4377d0:	2301      	movs	r3, #1
  4377d2:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  4377d6:	4618      	mov	r0, r3
  4377d8:	931b      	str	r3, [sp, #108]	; 0x6c
  4377da:	461a      	mov	r2, r3
  4377dc:	911a      	str	r1, [sp, #104]	; 0x68
  4377de:	4654      	mov	r4, sl
  4377e0:	e679      	b.n	4374d6 <_vfiprintf_r+0x69a>
  4377e2:	9a03      	ldr	r2, [sp, #12]
  4377e4:	1b95      	subs	r5, r2, r6
  4377e6:	2d00      	cmp	r5, #0
  4377e8:	4652      	mov	r2, sl
  4377ea:	f73f af0a 	bgt.w	437602 <_vfiprintf_r+0x7c6>
  4377ee:	e6c9      	b.n	437584 <_vfiprintf_r+0x748>
  4377f0:	465d      	mov	r5, fp
  4377f2:	f7ff bb7c 	b.w	436eee <_vfiprintf_r+0xb2>
  4377f6:	9801      	ldr	r0, [sp, #4]
  4377f8:	9900      	ldr	r1, [sp, #0]
  4377fa:	aa0d      	add	r2, sp, #52	; 0x34
  4377fc:	f7ff fad6 	bl	436dac <__sprint_r.part.0>
  437800:	2800      	cmp	r0, #0
  437802:	f47f aedf 	bne.w	4375c4 <_vfiprintf_r+0x788>
  437806:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  437808:	4652      	mov	r2, sl
  43780a:	e6f3      	b.n	4375f4 <_vfiprintf_r+0x7b8>
  43780c:	9904      	ldr	r1, [sp, #16]
  43780e:	460a      	mov	r2, r1
  437810:	3204      	adds	r2, #4
  437812:	680e      	ldr	r6, [r1, #0]
  437814:	9204      	str	r2, [sp, #16]
  437816:	2700      	movs	r7, #0
  437818:	e413      	b.n	437042 <_vfiprintf_r+0x206>
  43781a:	3204      	adds	r2, #4
  43781c:	681e      	ldr	r6, [r3, #0]
  43781e:	9204      	str	r2, [sp, #16]
  437820:	2301      	movs	r3, #1
  437822:	2700      	movs	r7, #0
  437824:	e40d      	b.n	437042 <_vfiprintf_r+0x206>
  437826:	6816      	ldr	r6, [r2, #0]
  437828:	3204      	adds	r2, #4
  43782a:	9204      	str	r2, [sp, #16]
  43782c:	2700      	movs	r7, #0
  43782e:	e52d      	b.n	43728c <_vfiprintf_r+0x450>
  437830:	9a04      	ldr	r2, [sp, #16]
  437832:	6816      	ldr	r6, [r2, #0]
  437834:	4613      	mov	r3, r2
  437836:	3304      	adds	r3, #4
  437838:	17f7      	asrs	r7, r6, #31
  43783a:	9304      	str	r3, [sp, #16]
  43783c:	4632      	mov	r2, r6
  43783e:	463b      	mov	r3, r7
  437840:	e4bf      	b.n	4371c2 <_vfiprintf_r+0x386>
  437842:	9801      	ldr	r0, [sp, #4]
  437844:	9900      	ldr	r1, [sp, #0]
  437846:	aa0d      	add	r2, sp, #52	; 0x34
  437848:	f7ff fab0 	bl	436dac <__sprint_r.part.0>
  43784c:	2800      	cmp	r0, #0
  43784e:	f47f aeb9 	bne.w	4375c4 <_vfiprintf_r+0x788>
  437852:	4654      	mov	r4, sl
  437854:	f7ff bbbe 	b.w	436fd4 <_vfiprintf_r+0x198>
  437858:	4608      	mov	r0, r1
  43785a:	4654      	mov	r4, sl
  43785c:	4611      	mov	r1, r2
  43785e:	e64c      	b.n	4374fa <_vfiprintf_r+0x6be>
  437860:	46d1      	mov	r9, sl
  437862:	f8cd c014 	str.w	ip, [sp, #20]
  437866:	4630      	mov	r0, r6
  437868:	4639      	mov	r1, r7
  43786a:	220a      	movs	r2, #10
  43786c:	2300      	movs	r3, #0
  43786e:	f7fa ffe1 	bl	432834 <__aeabi_uldivmod>
  437872:	3230      	adds	r2, #48	; 0x30
  437874:	4630      	mov	r0, r6
  437876:	4639      	mov	r1, r7
  437878:	f809 2d01 	strb.w	r2, [r9, #-1]!
  43787c:	2300      	movs	r3, #0
  43787e:	220a      	movs	r2, #10
  437880:	f7fa ffd8 	bl	432834 <__aeabi_uldivmod>
  437884:	4606      	mov	r6, r0
  437886:	460f      	mov	r7, r1
  437888:	ea56 0307 	orrs.w	r3, r6, r7
  43788c:	d1eb      	bne.n	437866 <_vfiprintf_r+0xa2a>
  43788e:	f8dd c014 	ldr.w	ip, [sp, #20]
  437892:	e786      	b.n	4377a2 <_vfiprintf_r+0x966>
  437894:	2b30      	cmp	r3, #48	; 0x30
  437896:	9b07      	ldr	r3, [sp, #28]
  437898:	d086      	beq.n	4377a8 <_vfiprintf_r+0x96c>
  43789a:	3b01      	subs	r3, #1
  43789c:	461a      	mov	r2, r3
  43789e:	9307      	str	r3, [sp, #28]
  4378a0:	2330      	movs	r3, #48	; 0x30
  4378a2:	ebc2 090a 	rsb	r9, r2, sl
  4378a6:	f801 3c01 	strb.w	r3, [r1, #-1]
  4378aa:	f7ff bbf9 	b.w	4370a0 <_vfiprintf_r+0x264>
  4378ae:	9801      	ldr	r0, [sp, #4]
  4378b0:	9900      	ldr	r1, [sp, #0]
  4378b2:	f8cd c014 	str.w	ip, [sp, #20]
  4378b6:	aa0d      	add	r2, sp, #52	; 0x34
  4378b8:	f7ff fa78 	bl	436dac <__sprint_r.part.0>
  4378bc:	2800      	cmp	r0, #0
  4378be:	f47f ae81 	bne.w	4375c4 <_vfiprintf_r+0x788>
  4378c2:	990e      	ldr	r1, [sp, #56]	; 0x38
  4378c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4378c6:	f8dd c014 	ldr.w	ip, [sp, #20]
  4378ca:	1c48      	adds	r0, r1, #1
  4378cc:	4654      	mov	r4, sl
  4378ce:	e614      	b.n	4374fa <_vfiprintf_r+0x6be>
  4378d0:	9801      	ldr	r0, [sp, #4]
  4378d2:	9900      	ldr	r1, [sp, #0]
  4378d4:	f8cd c020 	str.w	ip, [sp, #32]
  4378d8:	aa0d      	add	r2, sp, #52	; 0x34
  4378da:	f7ff fa67 	bl	436dac <__sprint_r.part.0>
  4378de:	2800      	cmp	r0, #0
  4378e0:	f47f ae70 	bne.w	4375c4 <_vfiprintf_r+0x788>
  4378e4:	990e      	ldr	r1, [sp, #56]	; 0x38
  4378e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4378e8:	f8dd c020 	ldr.w	ip, [sp, #32]
  4378ec:	1c48      	adds	r0, r1, #1
  4378ee:	4654      	mov	r4, sl
  4378f0:	e5f4      	b.n	4374dc <_vfiprintf_r+0x6a0>
  4378f2:	2a00      	cmp	r2, #0
  4378f4:	d167      	bne.n	4379c6 <_vfiprintf_r+0xb8a>
  4378f6:	2001      	movs	r0, #1
  4378f8:	4611      	mov	r1, r2
  4378fa:	4654      	mov	r4, sl
  4378fc:	e601      	b.n	437502 <_vfiprintf_r+0x6c6>
  4378fe:	9801      	ldr	r0, [sp, #4]
  437900:	9900      	ldr	r1, [sp, #0]
  437902:	aa0d      	add	r2, sp, #52	; 0x34
  437904:	f7ff fa52 	bl	436dac <__sprint_r.part.0>
  437908:	2800      	cmp	r0, #0
  43790a:	f47f ae5b 	bne.w	4375c4 <_vfiprintf_r+0x788>
  43790e:	980e      	ldr	r0, [sp, #56]	; 0x38
  437910:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  437912:	3001      	adds	r0, #1
  437914:	4654      	mov	r4, sl
  437916:	e624      	b.n	437562 <_vfiprintf_r+0x726>
  437918:	252d      	movs	r5, #45	; 0x2d
  43791a:	4276      	negs	r6, r6
  43791c:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  437920:	f88d 502f 	strb.w	r5, [sp, #47]	; 0x2f
  437924:	46e1      	mov	r9, ip
  437926:	2301      	movs	r3, #1
  437928:	f7ff bb91 	b.w	43704e <_vfiprintf_r+0x212>
  43792c:	9b05      	ldr	r3, [sp, #20]
  43792e:	4611      	mov	r1, r2
  437930:	2001      	movs	r0, #1
  437932:	4654      	mov	r4, sl
  437934:	2b00      	cmp	r3, #0
  437936:	f43f ade4 	beq.w	437502 <_vfiprintf_r+0x6c6>
  43793a:	aa0c      	add	r2, sp, #48	; 0x30
  43793c:	2302      	movs	r3, #2
  43793e:	e88a 000c 	stmia.w	sl, {r2, r3}
  437942:	461a      	mov	r2, r3
  437944:	e5d6      	b.n	4374f4 <_vfiprintf_r+0x6b8>
  437946:	f018 0f10 	tst.w	r8, #16
  43794a:	d10b      	bne.n	437964 <_vfiprintf_r+0xb28>
  43794c:	f018 0f40 	tst.w	r8, #64	; 0x40
  437950:	d008      	beq.n	437964 <_vfiprintf_r+0xb28>
  437952:	9a04      	ldr	r2, [sp, #16]
  437954:	6813      	ldr	r3, [r2, #0]
  437956:	3204      	adds	r2, #4
  437958:	9204      	str	r2, [sp, #16]
  43795a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  43795e:	801a      	strh	r2, [r3, #0]
  437960:	f7ff ba9e 	b.w	436ea0 <_vfiprintf_r+0x64>
  437964:	9a04      	ldr	r2, [sp, #16]
  437966:	6813      	ldr	r3, [r2, #0]
  437968:	3204      	adds	r2, #4
  43796a:	9204      	str	r2, [sp, #16]
  43796c:	9a02      	ldr	r2, [sp, #8]
  43796e:	601a      	str	r2, [r3, #0]
  437970:	f7ff ba96 	b.w	436ea0 <_vfiprintf_r+0x64>
  437974:	9801      	ldr	r0, [sp, #4]
  437976:	9900      	ldr	r1, [sp, #0]
  437978:	f8cd c020 	str.w	ip, [sp, #32]
  43797c:	aa0d      	add	r2, sp, #52	; 0x34
  43797e:	f7ff fa15 	bl	436dac <__sprint_r.part.0>
  437982:	2800      	cmp	r0, #0
  437984:	f47f ae1e 	bne.w	4375c4 <_vfiprintf_r+0x788>
  437988:	990e      	ldr	r1, [sp, #56]	; 0x38
  43798a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  43798c:	f8dd c020 	ldr.w	ip, [sp, #32]
  437990:	1c48      	adds	r0, r1, #1
  437992:	4654      	mov	r4, sl
  437994:	e591      	b.n	4374ba <_vfiprintf_r+0x67e>
  437996:	f048 0820 	orr.w	r8, r8, #32
  43799a:	f10b 0001 	add.w	r0, fp, #1
  43799e:	f89b 3001 	ldrb.w	r3, [fp, #1]
  4379a2:	f7ff bab4 	b.w	436f0e <_vfiprintf_r+0xd2>
  4379a6:	426d      	negs	r5, r5
  4379a8:	9304      	str	r3, [sp, #16]
  4379aa:	4658      	mov	r0, fp
  4379ac:	f7ff bbc6 	b.w	43713c <_vfiprintf_r+0x300>
  4379b0:	9807      	ldr	r0, [sp, #28]
  4379b2:	9604      	str	r6, [sp, #16]
  4379b4:	f7fd ff4e 	bl	435854 <strlen>
  4379b8:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  4379bc:	4681      	mov	r9, r0
  4379be:	f04f 0c00 	mov.w	ip, #0
  4379c2:	f7ff bb6d 	b.w	4370a0 <_vfiprintf_r+0x264>
  4379c6:	9801      	ldr	r0, [sp, #4]
  4379c8:	9900      	ldr	r1, [sp, #0]
  4379ca:	f8cd c014 	str.w	ip, [sp, #20]
  4379ce:	aa0d      	add	r2, sp, #52	; 0x34
  4379d0:	f7ff f9ec 	bl	436dac <__sprint_r.part.0>
  4379d4:	2800      	cmp	r0, #0
  4379d6:	f47f adf5 	bne.w	4375c4 <_vfiprintf_r+0x788>
  4379da:	990e      	ldr	r1, [sp, #56]	; 0x38
  4379dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4379de:	f8dd c014 	ldr.w	ip, [sp, #20]
  4379e2:	1c48      	adds	r0, r1, #1
  4379e4:	4654      	mov	r4, sl
  4379e6:	e58c      	b.n	437502 <_vfiprintf_r+0x6c6>
  4379e8:	990e      	ldr	r1, [sp, #56]	; 0x38
  4379ea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4379ec:	4f15      	ldr	r7, [pc, #84]	; (437a44 <_vfiprintf_r+0xc08>)
  4379ee:	3101      	adds	r1, #1
  4379f0:	f7ff bb98 	b.w	437124 <_vfiprintf_r+0x2e8>
  4379f4:	f1bc 0f06 	cmp.w	ip, #6
  4379f8:	bf28      	it	cs
  4379fa:	f04f 0c06 	movcs.w	ip, #6
  4379fe:	4b12      	ldr	r3, [pc, #72]	; (437a48 <_vfiprintf_r+0xc0c>)
  437a00:	9604      	str	r6, [sp, #16]
  437a02:	46e1      	mov	r9, ip
  437a04:	ea2c 76ec 	bic.w	r6, ip, ip, asr #31
  437a08:	9307      	str	r3, [sp, #28]
  437a0a:	e460      	b.n	4372ce <_vfiprintf_r+0x492>
  437a0c:	990e      	ldr	r1, [sp, #56]	; 0x38
  437a0e:	4f0d      	ldr	r7, [pc, #52]	; (437a44 <_vfiprintf_r+0xc08>)
  437a10:	f101 0e01 	add.w	lr, r1, #1
  437a14:	e618      	b.n	437648 <_vfiprintf_r+0x80c>
  437a16:	46e1      	mov	r9, ip
  437a18:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  437a1c:	9604      	str	r6, [sp, #16]
  437a1e:	4684      	mov	ip, r0
  437a20:	f7ff bb3e 	b.w	4370a0 <_vfiprintf_r+0x264>
  437a24:	4686      	mov	lr, r0
  437a26:	e66b      	b.n	437700 <_vfiprintf_r+0x8c4>
  437a28:	9a04      	ldr	r2, [sp, #16]
  437a2a:	f89b 3001 	ldrb.w	r3, [fp, #1]
  437a2e:	6816      	ldr	r6, [r2, #0]
  437a30:	3204      	adds	r2, #4
  437a32:	2e00      	cmp	r6, #0
  437a34:	9204      	str	r2, [sp, #16]
  437a36:	f6bf aa6a 	bge.w	436f0e <_vfiprintf_r+0xd2>
  437a3a:	f04f 36ff 	mov.w	r6, #4294967295
  437a3e:	f7ff ba66 	b.w	436f0e <_vfiprintf_r+0xd2>
  437a42:	bf00      	nop
  437a44:	004404c4 	.word	0x004404c4
  437a48:	004404ac 	.word	0x004404ac

00437a4c <__sbprintf>:
  437a4c:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
  437a50:	460c      	mov	r4, r1
  437a52:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  437a56:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  437a5a:	69e7      	ldr	r7, [r4, #28]
  437a5c:	6e49      	ldr	r1, [r1, #100]	; 0x64
  437a5e:	f8b4 900e 	ldrh.w	r9, [r4, #14]
  437a62:	9119      	str	r1, [sp, #100]	; 0x64
  437a64:	ad1a      	add	r5, sp, #104	; 0x68
  437a66:	f44f 6680 	mov.w	r6, #1024	; 0x400
  437a6a:	f02e 0e02 	bic.w	lr, lr, #2
  437a6e:	f04f 0c00 	mov.w	ip, #0
  437a72:	9707      	str	r7, [sp, #28]
  437a74:	4669      	mov	r1, sp
  437a76:	6a67      	ldr	r7, [r4, #36]	; 0x24
  437a78:	9500      	str	r5, [sp, #0]
  437a7a:	9504      	str	r5, [sp, #16]
  437a7c:	9602      	str	r6, [sp, #8]
  437a7e:	9605      	str	r6, [sp, #20]
  437a80:	f8ad e00c 	strh.w	lr, [sp, #12]
  437a84:	f8ad 900e 	strh.w	r9, [sp, #14]
  437a88:	9709      	str	r7, [sp, #36]	; 0x24
  437a8a:	f8cd c018 	str.w	ip, [sp, #24]
  437a8e:	4606      	mov	r6, r0
  437a90:	f7ff f9d4 	bl	436e3c <_vfiprintf_r>
  437a94:	1e05      	subs	r5, r0, #0
  437a96:	db07      	blt.n	437aa8 <__sbprintf+0x5c>
  437a98:	4630      	mov	r0, r6
  437a9a:	4669      	mov	r1, sp
  437a9c:	f7fc fa9c 	bl	433fd8 <_fflush_r>
  437aa0:	2800      	cmp	r0, #0
  437aa2:	bf18      	it	ne
  437aa4:	f04f 35ff 	movne.w	r5, #4294967295
  437aa8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  437aac:	065b      	lsls	r3, r3, #25
  437aae:	d503      	bpl.n	437ab8 <__sbprintf+0x6c>
  437ab0:	89a3      	ldrh	r3, [r4, #12]
  437ab2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  437ab6:	81a3      	strh	r3, [r4, #12]
  437ab8:	4628      	mov	r0, r5
  437aba:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  437abe:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
  437ac2:	bf00      	nop

00437ac4 <_vfprintf_r>:
  437ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  437ac8:	b0bf      	sub	sp, #252	; 0xfc
  437aca:	461c      	mov	r4, r3
  437acc:	4689      	mov	r9, r1
  437ace:	9208      	str	r2, [sp, #32]
  437ad0:	4607      	mov	r7, r0
  437ad2:	f002 fb8f 	bl	43a1f4 <_localeconv_r>
  437ad6:	6803      	ldr	r3, [r0, #0]
  437ad8:	9315      	str	r3, [sp, #84]	; 0x54
  437ada:	4618      	mov	r0, r3
  437adc:	f7fd feba 	bl	435854 <strlen>
  437ae0:	940c      	str	r4, [sp, #48]	; 0x30
  437ae2:	9016      	str	r0, [sp, #88]	; 0x58
  437ae4:	b11f      	cbz	r7, 437aee <_vfprintf_r+0x2a>
  437ae6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
  437ae8:	2b00      	cmp	r3, #0
  437aea:	f000 80f3 	beq.w	437cd4 <_vfprintf_r+0x210>
  437aee:	f8b9 200c 	ldrh.w	r2, [r9, #12]
  437af2:	b293      	uxth	r3, r2
  437af4:	049d      	lsls	r5, r3, #18
  437af6:	d40a      	bmi.n	437b0e <_vfprintf_r+0x4a>
  437af8:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
  437afc:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
  437b00:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  437b04:	f8a9 300c 	strh.w	r3, [r9, #12]
  437b08:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
  437b0c:	b29b      	uxth	r3, r3
  437b0e:	0718      	lsls	r0, r3, #28
  437b10:	f140 80aa 	bpl.w	437c68 <_vfprintf_r+0x1a4>
  437b14:	f8d9 2010 	ldr.w	r2, [r9, #16]
  437b18:	2a00      	cmp	r2, #0
  437b1a:	f000 80a5 	beq.w	437c68 <_vfprintf_r+0x1a4>
  437b1e:	f003 031a 	and.w	r3, r3, #26
  437b22:	2b0a      	cmp	r3, #10
  437b24:	f000 80ac 	beq.w	437c80 <_vfprintf_r+0x1bc>
  437b28:	2300      	movs	r3, #0
  437b2a:	461a      	mov	r2, r3
  437b2c:	9311      	str	r3, [sp, #68]	; 0x44
  437b2e:	9323      	str	r3, [sp, #140]	; 0x8c
  437b30:	9322      	str	r3, [sp, #136]	; 0x88
  437b32:	9314      	str	r3, [sp, #80]	; 0x50
  437b34:	9317      	str	r3, [sp, #92]	; 0x5c
  437b36:	9309      	str	r3, [sp, #36]	; 0x24
  437b38:	ab2e      	add	r3, sp, #184	; 0xb8
  437b3a:	469c      	mov	ip, r3
  437b3c:	9321      	str	r3, [sp, #132]	; 0x84
  437b3e:	9212      	str	r2, [sp, #72]	; 0x48
  437b40:	9213      	str	r2, [sp, #76]	; 0x4c
  437b42:	4664      	mov	r4, ip
  437b44:	46b8      	mov	r8, r7
  437b46:	9d08      	ldr	r5, [sp, #32]
  437b48:	782b      	ldrb	r3, [r5, #0]
  437b4a:	2b00      	cmp	r3, #0
  437b4c:	f000 80c6 	beq.w	437cdc <_vfprintf_r+0x218>
  437b50:	2b25      	cmp	r3, #37	; 0x25
  437b52:	d102      	bne.n	437b5a <_vfprintf_r+0x96>
  437b54:	e0c2      	b.n	437cdc <_vfprintf_r+0x218>
  437b56:	2b25      	cmp	r3, #37	; 0x25
  437b58:	d003      	beq.n	437b62 <_vfprintf_r+0x9e>
  437b5a:	f815 3f01 	ldrb.w	r3, [r5, #1]!
  437b5e:	2b00      	cmp	r3, #0
  437b60:	d1f9      	bne.n	437b56 <_vfprintf_r+0x92>
  437b62:	9b08      	ldr	r3, [sp, #32]
  437b64:	1aee      	subs	r6, r5, r3
  437b66:	b17e      	cbz	r6, 437b88 <_vfprintf_r+0xc4>
  437b68:	9b22      	ldr	r3, [sp, #136]	; 0x88
  437b6a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  437b6c:	9908      	ldr	r1, [sp, #32]
  437b6e:	6021      	str	r1, [r4, #0]
  437b70:	3301      	adds	r3, #1
  437b72:	4432      	add	r2, r6
  437b74:	2b07      	cmp	r3, #7
  437b76:	6066      	str	r6, [r4, #4]
  437b78:	9223      	str	r2, [sp, #140]	; 0x8c
  437b7a:	9322      	str	r3, [sp, #136]	; 0x88
  437b7c:	f300 8093 	bgt.w	437ca6 <_vfprintf_r+0x1e2>
  437b80:	3408      	adds	r4, #8
  437b82:	9b09      	ldr	r3, [sp, #36]	; 0x24
  437b84:	4433      	add	r3, r6
  437b86:	9309      	str	r3, [sp, #36]	; 0x24
  437b88:	782b      	ldrb	r3, [r5, #0]
  437b8a:	2b00      	cmp	r3, #0
  437b8c:	f000 8093 	beq.w	437cb6 <_vfprintf_r+0x1f2>
  437b90:	2300      	movs	r3, #0
  437b92:	1c69      	adds	r1, r5, #1
  437b94:	f04f 3aff 	mov.w	sl, #4294967295
  437b98:	786d      	ldrb	r5, [r5, #1]
  437b9a:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
  437b9e:	461a      	mov	r2, r3
  437ba0:	930a      	str	r3, [sp, #40]	; 0x28
  437ba2:	9306      	str	r3, [sp, #24]
  437ba4:	4656      	mov	r6, sl
  437ba6:	1c4b      	adds	r3, r1, #1
  437ba8:	f1a5 0120 	sub.w	r1, r5, #32
  437bac:	2958      	cmp	r1, #88	; 0x58
  437bae:	f200 83c1 	bhi.w	438334 <_vfprintf_r+0x870>
  437bb2:	e8df f011 	tbh	[pc, r1, lsl #1]
  437bb6:	0256      	.short	0x0256
  437bb8:	03bf03bf 	.word	0x03bf03bf
  437bbc:	03bf02f6 	.word	0x03bf02f6
  437bc0:	03bf03bf 	.word	0x03bf03bf
  437bc4:	03bf03bf 	.word	0x03bf03bf
  437bc8:	02fd03bf 	.word	0x02fd03bf
  437bcc:	03bf02c6 	.word	0x03bf02c6
  437bd0:	034701f2 	.word	0x034701f2
  437bd4:	02ca03bf 	.word	0x02ca03bf
  437bd8:	02d102d1 	.word	0x02d102d1
  437bdc:	02d102d1 	.word	0x02d102d1
  437be0:	02d102d1 	.word	0x02d102d1
  437be4:	02d102d1 	.word	0x02d102d1
  437be8:	03bf02d1 	.word	0x03bf02d1
  437bec:	03bf03bf 	.word	0x03bf03bf
  437bf0:	03bf03bf 	.word	0x03bf03bf
  437bf4:	03bf03bf 	.word	0x03bf03bf
  437bf8:	03bf03bf 	.word	0x03bf03bf
  437bfc:	026b03bf 	.word	0x026b03bf
  437c00:	03bf028d 	.word	0x03bf028d
  437c04:	03bf028d 	.word	0x03bf028d
  437c08:	03bf03bf 	.word	0x03bf03bf
  437c0c:	02bf03bf 	.word	0x02bf03bf
  437c10:	03bf03bf 	.word	0x03bf03bf
  437c14:	03bf0362 	.word	0x03bf0362
  437c18:	03bf03bf 	.word	0x03bf03bf
  437c1c:	03bf03bf 	.word	0x03bf03bf
  437c20:	03bf03a9 	.word	0x03bf03a9
  437c24:	037f03bf 	.word	0x037f03bf
  437c28:	03bf03bf 	.word	0x03bf03bf
  437c2c:	03bf03bf 	.word	0x03bf03bf
  437c30:	03bf03bf 	.word	0x03bf03bf
  437c34:	03bf03bf 	.word	0x03bf03bf
  437c38:	03bf03bf 	.word	0x03bf03bf
  437c3c:	030b0394 	.word	0x030b0394
  437c40:	028d028d 	.word	0x028d028d
  437c44:	0324028d 	.word	0x0324028d
  437c48:	03bf030b 	.word	0x03bf030b
  437c4c:	032b03bf 	.word	0x032b03bf
  437c50:	033503bf 	.word	0x033503bf
  437c54:	02e001f9 	.word	0x02e001f9
  437c58:	03bf025d 	.word	0x03bf025d
  437c5c:	03bf020b 	.word	0x03bf020b
  437c60:	03bf0095 	.word	0x03bf0095
  437c64:	023003bf 	.word	0x023003bf
  437c68:	4638      	mov	r0, r7
  437c6a:	4649      	mov	r1, r9
  437c6c:	f001 f9c2 	bl	438ff4 <__swsetup_r>
  437c70:	b9a0      	cbnz	r0, 437c9c <_vfprintf_r+0x1d8>
  437c72:	f8b9 300c 	ldrh.w	r3, [r9, #12]
  437c76:	f003 031a 	and.w	r3, r3, #26
  437c7a:	2b0a      	cmp	r3, #10
  437c7c:	f47f af54 	bne.w	437b28 <_vfprintf_r+0x64>
  437c80:	f9b9 300e 	ldrsh.w	r3, [r9, #14]
  437c84:	2b00      	cmp	r3, #0
  437c86:	f6ff af4f 	blt.w	437b28 <_vfprintf_r+0x64>
  437c8a:	4638      	mov	r0, r7
  437c8c:	4649      	mov	r1, r9
  437c8e:	9a08      	ldr	r2, [sp, #32]
  437c90:	4623      	mov	r3, r4
  437c92:	f001 f90b 	bl	438eac <__sbprintf>
  437c96:	b03f      	add	sp, #252	; 0xfc
  437c98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  437c9c:	f04f 30ff 	mov.w	r0, #4294967295
  437ca0:	b03f      	add	sp, #252	; 0xfc
  437ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  437ca6:	4640      	mov	r0, r8
  437ca8:	4649      	mov	r1, r9
  437caa:	aa21      	add	r2, sp, #132	; 0x84
  437cac:	f7ff f8ba 	bl	436e24 <__sprint_r>
  437cb0:	b940      	cbnz	r0, 437cc4 <_vfprintf_r+0x200>
  437cb2:	ac2e      	add	r4, sp, #184	; 0xb8
  437cb4:	e765      	b.n	437b82 <_vfprintf_r+0xbe>
  437cb6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  437cb8:	b123      	cbz	r3, 437cc4 <_vfprintf_r+0x200>
  437cba:	4640      	mov	r0, r8
  437cbc:	4649      	mov	r1, r9
  437cbe:	aa21      	add	r2, sp, #132	; 0x84
  437cc0:	f7ff f8b0 	bl	436e24 <__sprint_r>
  437cc4:	f8b9 300c 	ldrh.w	r3, [r9, #12]
  437cc8:	065a      	lsls	r2, r3, #25
  437cca:	d4e7      	bmi.n	437c9c <_vfprintf_r+0x1d8>
  437ccc:	9809      	ldr	r0, [sp, #36]	; 0x24
  437cce:	b03f      	add	sp, #252	; 0xfc
  437cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  437cd4:	4638      	mov	r0, r7
  437cd6:	f7fc fa13 	bl	434100 <__sinit>
  437cda:	e708      	b.n	437aee <_vfprintf_r+0x2a>
  437cdc:	9d08      	ldr	r5, [sp, #32]
  437cde:	e753      	b.n	437b88 <_vfprintf_r+0xc4>
  437ce0:	9308      	str	r3, [sp, #32]
  437ce2:	9b06      	ldr	r3, [sp, #24]
  437ce4:	46b2      	mov	sl, r6
  437ce6:	069e      	lsls	r6, r3, #26
  437ce8:	f140 8318 	bpl.w	43831c <_vfprintf_r+0x858>
  437cec:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  437cee:	3707      	adds	r7, #7
  437cf0:	f027 0307 	bic.w	r3, r7, #7
  437cf4:	f103 0208 	add.w	r2, r3, #8
  437cf8:	e9d3 6700 	ldrd	r6, r7, [r3]
  437cfc:	920c      	str	r2, [sp, #48]	; 0x30
  437cfe:	2301      	movs	r3, #1
  437d00:	f04f 0c00 	mov.w	ip, #0
  437d04:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
  437d08:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  437d0c:	f1ba 0f00 	cmp.w	sl, #0
  437d10:	db03      	blt.n	437d1a <_vfprintf_r+0x256>
  437d12:	9a06      	ldr	r2, [sp, #24]
  437d14:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  437d18:	9206      	str	r2, [sp, #24]
  437d1a:	ea56 0207 	orrs.w	r2, r6, r7
  437d1e:	f040 8319 	bne.w	438354 <_vfprintf_r+0x890>
  437d22:	f1ba 0f00 	cmp.w	sl, #0
  437d26:	f000 8416 	beq.w	438556 <_vfprintf_r+0xa92>
  437d2a:	2b01      	cmp	r3, #1
  437d2c:	f000 831a 	beq.w	438364 <_vfprintf_r+0x8a0>
  437d30:	2b02      	cmp	r3, #2
  437d32:	f000 844c 	beq.w	4385ce <_vfprintf_r+0xb0a>
  437d36:	a92e      	add	r1, sp, #184	; 0xb8
  437d38:	08f2      	lsrs	r2, r6, #3
  437d3a:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  437d3e:	08f8      	lsrs	r0, r7, #3
  437d40:	f006 0307 	and.w	r3, r6, #7
  437d44:	4607      	mov	r7, r0
  437d46:	4616      	mov	r6, r2
  437d48:	3330      	adds	r3, #48	; 0x30
  437d4a:	ea56 0207 	orrs.w	r2, r6, r7
  437d4e:	f801 3d01 	strb.w	r3, [r1, #-1]!
  437d52:	d1f1      	bne.n	437d38 <_vfprintf_r+0x274>
  437d54:	9a06      	ldr	r2, [sp, #24]
  437d56:	910e      	str	r1, [sp, #56]	; 0x38
  437d58:	07d0      	lsls	r0, r2, #31
  437d5a:	f100 850d 	bmi.w	438778 <_vfprintf_r+0xcb4>
  437d5e:	ab2e      	add	r3, sp, #184	; 0xb8
  437d60:	1a5b      	subs	r3, r3, r1
  437d62:	930b      	str	r3, [sp, #44]	; 0x2c
  437d64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  437d66:	4592      	cmp	sl, r2
  437d68:	4653      	mov	r3, sl
  437d6a:	bfb8      	it	lt
  437d6c:	4613      	movlt	r3, r2
  437d6e:	9307      	str	r3, [sp, #28]
  437d70:	2300      	movs	r3, #0
  437d72:	9310      	str	r3, [sp, #64]	; 0x40
  437d74:	f1bc 0f00 	cmp.w	ip, #0
  437d78:	d002      	beq.n	437d80 <_vfprintf_r+0x2bc>
  437d7a:	9b07      	ldr	r3, [sp, #28]
  437d7c:	3301      	adds	r3, #1
  437d7e:	9307      	str	r3, [sp, #28]
  437d80:	9b06      	ldr	r3, [sp, #24]
  437d82:	f013 0302 	ands.w	r3, r3, #2
  437d86:	930d      	str	r3, [sp, #52]	; 0x34
  437d88:	d002      	beq.n	437d90 <_vfprintf_r+0x2cc>
  437d8a:	9b07      	ldr	r3, [sp, #28]
  437d8c:	3302      	adds	r3, #2
  437d8e:	9307      	str	r3, [sp, #28]
  437d90:	9b06      	ldr	r3, [sp, #24]
  437d92:	f013 0684 	ands.w	r6, r3, #132	; 0x84
  437d96:	f040 82da 	bne.w	43834e <_vfprintf_r+0x88a>
  437d9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  437d9c:	9a07      	ldr	r2, [sp, #28]
  437d9e:	ebc2 0a03 	rsb	sl, r2, r3
  437da2:	f1ba 0f00 	cmp.w	sl, #0
  437da6:	f340 82d2 	ble.w	43834e <_vfprintf_r+0x88a>
  437daa:	f1ba 0f10 	cmp.w	sl, #16
  437dae:	9923      	ldr	r1, [sp, #140]	; 0x8c
  437db0:	9a22      	ldr	r2, [sp, #136]	; 0x88
  437db2:	4fb3      	ldr	r7, [pc, #716]	; (438080 <_vfprintf_r+0x5bc>)
  437db4:	bfc8      	it	gt
  437db6:	f04f 0b10 	movgt.w	fp, #16
  437dba:	dc07      	bgt.n	437dcc <_vfprintf_r+0x308>
  437dbc:	e01e      	b.n	437dfc <_vfprintf_r+0x338>
  437dbe:	f1aa 0a10 	sub.w	sl, sl, #16
  437dc2:	f1ba 0f10 	cmp.w	sl, #16
  437dc6:	f104 0408 	add.w	r4, r4, #8
  437dca:	dd17      	ble.n	437dfc <_vfprintf_r+0x338>
  437dcc:	3201      	adds	r2, #1
  437dce:	3110      	adds	r1, #16
  437dd0:	2a07      	cmp	r2, #7
  437dd2:	9123      	str	r1, [sp, #140]	; 0x8c
  437dd4:	9222      	str	r2, [sp, #136]	; 0x88
  437dd6:	e884 0880 	stmia.w	r4, {r7, fp}
  437dda:	ddf0      	ble.n	437dbe <_vfprintf_r+0x2fa>
  437ddc:	4640      	mov	r0, r8
  437dde:	4649      	mov	r1, r9
  437de0:	aa21      	add	r2, sp, #132	; 0x84
  437de2:	f7ff f81f 	bl	436e24 <__sprint_r>
  437de6:	2800      	cmp	r0, #0
  437de8:	f47f af6c 	bne.w	437cc4 <_vfprintf_r+0x200>
  437dec:	f1aa 0a10 	sub.w	sl, sl, #16
  437df0:	f1ba 0f10 	cmp.w	sl, #16
  437df4:	9923      	ldr	r1, [sp, #140]	; 0x8c
  437df6:	9a22      	ldr	r2, [sp, #136]	; 0x88
  437df8:	ac2e      	add	r4, sp, #184	; 0xb8
  437dfa:	dce7      	bgt.n	437dcc <_vfprintf_r+0x308>
  437dfc:	3201      	adds	r2, #1
  437dfe:	eb0a 0b01 	add.w	fp, sl, r1
  437e02:	2a07      	cmp	r2, #7
  437e04:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  437e08:	9222      	str	r2, [sp, #136]	; 0x88
  437e0a:	e884 0480 	stmia.w	r4, {r7, sl}
  437e0e:	f300 8443 	bgt.w	438698 <_vfprintf_r+0xbd4>
  437e12:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  437e16:	3408      	adds	r4, #8
  437e18:	f1bc 0f00 	cmp.w	ip, #0
  437e1c:	d00f      	beq.n	437e3e <_vfprintf_r+0x37a>
  437e1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
  437e20:	3301      	adds	r3, #1
  437e22:	f10b 0b01 	add.w	fp, fp, #1
  437e26:	f10d 0167 	add.w	r1, sp, #103	; 0x67
  437e2a:	2201      	movs	r2, #1
  437e2c:	2b07      	cmp	r3, #7
  437e2e:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  437e32:	9322      	str	r3, [sp, #136]	; 0x88
  437e34:	e884 0006 	stmia.w	r4, {r1, r2}
  437e38:	f300 83b7 	bgt.w	4385aa <_vfprintf_r+0xae6>
  437e3c:	3408      	adds	r4, #8
  437e3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  437e40:	b173      	cbz	r3, 437e60 <_vfprintf_r+0x39c>
  437e42:	9b22      	ldr	r3, [sp, #136]	; 0x88
  437e44:	3301      	adds	r3, #1
  437e46:	f10b 0b02 	add.w	fp, fp, #2
  437e4a:	a91a      	add	r1, sp, #104	; 0x68
  437e4c:	2202      	movs	r2, #2
  437e4e:	2b07      	cmp	r3, #7
  437e50:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  437e54:	9322      	str	r3, [sp, #136]	; 0x88
  437e56:	e884 0006 	stmia.w	r4, {r1, r2}
  437e5a:	f300 839a 	bgt.w	438592 <_vfprintf_r+0xace>
  437e5e:	3408      	adds	r4, #8
  437e60:	2e80      	cmp	r6, #128	; 0x80
  437e62:	f000 82ea 	beq.w	43843a <_vfprintf_r+0x976>
  437e66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  437e68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  437e6a:	ebc2 0a03 	rsb	sl, r2, r3
  437e6e:	f1ba 0f00 	cmp.w	sl, #0
  437e72:	dd32      	ble.n	437eda <_vfprintf_r+0x416>
  437e74:	f1ba 0f10 	cmp.w	sl, #16
  437e78:	9a22      	ldr	r2, [sp, #136]	; 0x88
  437e7a:	4f82      	ldr	r7, [pc, #520]	; (438084 <_vfprintf_r+0x5c0>)
  437e7c:	dd22      	ble.n	437ec4 <_vfprintf_r+0x400>
  437e7e:	2610      	movs	r6, #16
  437e80:	465b      	mov	r3, fp
  437e82:	e006      	b.n	437e92 <_vfprintf_r+0x3ce>
  437e84:	f1aa 0a10 	sub.w	sl, sl, #16
  437e88:	f1ba 0f10 	cmp.w	sl, #16
  437e8c:	f104 0408 	add.w	r4, r4, #8
  437e90:	dd17      	ble.n	437ec2 <_vfprintf_r+0x3fe>
  437e92:	3201      	adds	r2, #1
  437e94:	3310      	adds	r3, #16
  437e96:	2a07      	cmp	r2, #7
  437e98:	9323      	str	r3, [sp, #140]	; 0x8c
  437e9a:	9222      	str	r2, [sp, #136]	; 0x88
  437e9c:	6027      	str	r7, [r4, #0]
  437e9e:	6066      	str	r6, [r4, #4]
  437ea0:	ddf0      	ble.n	437e84 <_vfprintf_r+0x3c0>
  437ea2:	4640      	mov	r0, r8
  437ea4:	4649      	mov	r1, r9
  437ea6:	aa21      	add	r2, sp, #132	; 0x84
  437ea8:	f7fe ffbc 	bl	436e24 <__sprint_r>
  437eac:	2800      	cmp	r0, #0
  437eae:	f47f af09 	bne.w	437cc4 <_vfprintf_r+0x200>
  437eb2:	f1aa 0a10 	sub.w	sl, sl, #16
  437eb6:	f1ba 0f10 	cmp.w	sl, #16
  437eba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  437ebc:	9a22      	ldr	r2, [sp, #136]	; 0x88
  437ebe:	ac2e      	add	r4, sp, #184	; 0xb8
  437ec0:	dce7      	bgt.n	437e92 <_vfprintf_r+0x3ce>
  437ec2:	469b      	mov	fp, r3
  437ec4:	3201      	adds	r2, #1
  437ec6:	44d3      	add	fp, sl
  437ec8:	2a07      	cmp	r2, #7
  437eca:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  437ece:	9222      	str	r2, [sp, #136]	; 0x88
  437ed0:	e884 0480 	stmia.w	r4, {r7, sl}
  437ed4:	f300 8351 	bgt.w	43857a <_vfprintf_r+0xab6>
  437ed8:	3408      	adds	r4, #8
  437eda:	9b06      	ldr	r3, [sp, #24]
  437edc:	05db      	lsls	r3, r3, #23
  437ede:	f100 8255 	bmi.w	43838c <_vfprintf_r+0x8c8>
  437ee2:	9b22      	ldr	r3, [sp, #136]	; 0x88
  437ee4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  437ee6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  437ee8:	6022      	str	r2, [r4, #0]
  437eea:	3301      	adds	r3, #1
  437eec:	448b      	add	fp, r1
  437eee:	2b07      	cmp	r3, #7
  437ef0:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  437ef4:	6061      	str	r1, [r4, #4]
  437ef6:	9322      	str	r3, [sp, #136]	; 0x88
  437ef8:	f300 8317 	bgt.w	43852a <_vfprintf_r+0xa66>
  437efc:	3408      	adds	r4, #8
  437efe:	9b06      	ldr	r3, [sp, #24]
  437f00:	0759      	lsls	r1, r3, #29
  437f02:	d53a      	bpl.n	437f7a <_vfprintf_r+0x4b6>
  437f04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  437f06:	9a07      	ldr	r2, [sp, #28]
  437f08:	1a9d      	subs	r5, r3, r2
  437f0a:	2d00      	cmp	r5, #0
  437f0c:	dd35      	ble.n	437f7a <_vfprintf_r+0x4b6>
  437f0e:	2d10      	cmp	r5, #16
  437f10:	9b22      	ldr	r3, [sp, #136]	; 0x88
  437f12:	4f5b      	ldr	r7, [pc, #364]	; (438080 <_vfprintf_r+0x5bc>)
  437f14:	dd1e      	ble.n	437f54 <_vfprintf_r+0x490>
  437f16:	2610      	movs	r6, #16
  437f18:	465a      	mov	r2, fp
  437f1a:	e004      	b.n	437f26 <_vfprintf_r+0x462>
  437f1c:	3d10      	subs	r5, #16
  437f1e:	2d10      	cmp	r5, #16
  437f20:	f104 0408 	add.w	r4, r4, #8
  437f24:	dd15      	ble.n	437f52 <_vfprintf_r+0x48e>
  437f26:	3301      	adds	r3, #1
  437f28:	3210      	adds	r2, #16
  437f2a:	2b07      	cmp	r3, #7
  437f2c:	9223      	str	r2, [sp, #140]	; 0x8c
  437f2e:	9322      	str	r3, [sp, #136]	; 0x88
  437f30:	6027      	str	r7, [r4, #0]
  437f32:	6066      	str	r6, [r4, #4]
  437f34:	ddf2      	ble.n	437f1c <_vfprintf_r+0x458>
  437f36:	4640      	mov	r0, r8
  437f38:	4649      	mov	r1, r9
  437f3a:	aa21      	add	r2, sp, #132	; 0x84
  437f3c:	f7fe ff72 	bl	436e24 <__sprint_r>
  437f40:	2800      	cmp	r0, #0
  437f42:	f47f aebf 	bne.w	437cc4 <_vfprintf_r+0x200>
  437f46:	3d10      	subs	r5, #16
  437f48:	2d10      	cmp	r5, #16
  437f4a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  437f4c:	9b22      	ldr	r3, [sp, #136]	; 0x88
  437f4e:	ac2e      	add	r4, sp, #184	; 0xb8
  437f50:	dce9      	bgt.n	437f26 <_vfprintf_r+0x462>
  437f52:	4693      	mov	fp, r2
  437f54:	3301      	adds	r3, #1
  437f56:	44ab      	add	fp, r5
  437f58:	2b07      	cmp	r3, #7
  437f5a:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  437f5e:	9322      	str	r3, [sp, #136]	; 0x88
  437f60:	6027      	str	r7, [r4, #0]
  437f62:	6065      	str	r5, [r4, #4]
  437f64:	dd09      	ble.n	437f7a <_vfprintf_r+0x4b6>
  437f66:	4640      	mov	r0, r8
  437f68:	4649      	mov	r1, r9
  437f6a:	aa21      	add	r2, sp, #132	; 0x84
  437f6c:	f7fe ff5a 	bl	436e24 <__sprint_r>
  437f70:	2800      	cmp	r0, #0
  437f72:	f47f aea7 	bne.w	437cc4 <_vfprintf_r+0x200>
  437f76:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  437f7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  437f7c:	9a07      	ldr	r2, [sp, #28]
  437f7e:	990a      	ldr	r1, [sp, #40]	; 0x28
  437f80:	428a      	cmp	r2, r1
  437f82:	bfac      	ite	ge
  437f84:	189b      	addge	r3, r3, r2
  437f86:	185b      	addlt	r3, r3, r1
  437f88:	9309      	str	r3, [sp, #36]	; 0x24
  437f8a:	f1bb 0f00 	cmp.w	fp, #0
  437f8e:	f040 82d8 	bne.w	438542 <_vfprintf_r+0xa7e>
  437f92:	2300      	movs	r3, #0
  437f94:	9322      	str	r3, [sp, #136]	; 0x88
  437f96:	ac2e      	add	r4, sp, #184	; 0xb8
  437f98:	e5d5      	b.n	437b46 <_vfprintf_r+0x82>
  437f9a:	4619      	mov	r1, r3
  437f9c:	9806      	ldr	r0, [sp, #24]
  437f9e:	781d      	ldrb	r5, [r3, #0]
  437fa0:	f040 0004 	orr.w	r0, r0, #4
  437fa4:	9006      	str	r0, [sp, #24]
  437fa6:	e5fe      	b.n	437ba6 <_vfprintf_r+0xe2>
  437fa8:	9308      	str	r3, [sp, #32]
  437faa:	9b06      	ldr	r3, [sp, #24]
  437fac:	f013 0320 	ands.w	r3, r3, #32
  437fb0:	46b2      	mov	sl, r6
  437fb2:	f000 816d 	beq.w	438290 <_vfprintf_r+0x7cc>
  437fb6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  437fb8:	3707      	adds	r7, #7
  437fba:	f027 0307 	bic.w	r3, r7, #7
  437fbe:	f103 0208 	add.w	r2, r3, #8
  437fc2:	e9d3 6700 	ldrd	r6, r7, [r3]
  437fc6:	920c      	str	r2, [sp, #48]	; 0x30
  437fc8:	2300      	movs	r3, #0
  437fca:	e699      	b.n	437d00 <_vfprintf_r+0x23c>
  437fcc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  437fce:	9308      	str	r3, [sp, #32]
  437fd0:	6813      	ldr	r3, [r2, #0]
  437fd2:	930e      	str	r3, [sp, #56]	; 0x38
  437fd4:	f04f 0b00 	mov.w	fp, #0
  437fd8:	f88d b067 	strb.w	fp, [sp, #103]	; 0x67
  437fdc:	1d17      	adds	r7, r2, #4
  437fde:	2b00      	cmp	r3, #0
  437fe0:	f000 864f 	beq.w	438c82 <_vfprintf_r+0x11be>
  437fe4:	2e00      	cmp	r6, #0
  437fe6:	980e      	ldr	r0, [sp, #56]	; 0x38
  437fe8:	f2c0 8601 	blt.w	438bee <_vfprintf_r+0x112a>
  437fec:	4659      	mov	r1, fp
  437fee:	4632      	mov	r2, r6
  437ff0:	f7fc fef6 	bl	434de0 <memchr>
  437ff4:	2800      	cmp	r0, #0
  437ff6:	f000 8680 	beq.w	438cfa <_vfprintf_r+0x1236>
  437ffa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  437ffc:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  438000:	1ac3      	subs	r3, r0, r3
  438002:	930b      	str	r3, [sp, #44]	; 0x2c
  438004:	970c      	str	r7, [sp, #48]	; 0x30
  438006:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  43800a:	9307      	str	r3, [sp, #28]
  43800c:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
  438010:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  438014:	e6ae      	b.n	437d74 <_vfprintf_r+0x2b0>
  438016:	9308      	str	r3, [sp, #32]
  438018:	4b1b      	ldr	r3, [pc, #108]	; (438088 <_vfprintf_r+0x5c4>)
  43801a:	9314      	str	r3, [sp, #80]	; 0x50
  43801c:	9b06      	ldr	r3, [sp, #24]
  43801e:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
  438022:	0699      	lsls	r1, r3, #26
  438024:	46b2      	mov	sl, r6
  438026:	f140 814f 	bpl.w	4382c8 <_vfprintf_r+0x804>
  43802a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  43802c:	3707      	adds	r7, #7
  43802e:	f027 0307 	bic.w	r3, r7, #7
  438032:	e9d3 6700 	ldrd	r6, r7, [r3]
  438036:	f103 0208 	add.w	r2, r3, #8
  43803a:	920c      	str	r2, [sp, #48]	; 0x30
  43803c:	9b06      	ldr	r3, [sp, #24]
  43803e:	07db      	lsls	r3, r3, #31
  438040:	f140 82de 	bpl.w	438600 <_vfprintf_r+0xb3c>
  438044:	ea56 0307 	orrs.w	r3, r6, r7
  438048:	f000 82da 	beq.w	438600 <_vfprintf_r+0xb3c>
  43804c:	9a06      	ldr	r2, [sp, #24]
  43804e:	f88d 5069 	strb.w	r5, [sp, #105]	; 0x69
  438052:	2330      	movs	r3, #48	; 0x30
  438054:	f042 0202 	orr.w	r2, r2, #2
  438058:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
  43805c:	9206      	str	r2, [sp, #24]
  43805e:	2302      	movs	r3, #2
  438060:	e64e      	b.n	437d00 <_vfprintf_r+0x23c>
  438062:	781d      	ldrb	r5, [r3, #0]
  438064:	4619      	mov	r1, r3
  438066:	2a00      	cmp	r2, #0
  438068:	f47f ad9d 	bne.w	437ba6 <_vfprintf_r+0xe2>
  43806c:	2220      	movs	r2, #32
  43806e:	e59a      	b.n	437ba6 <_vfprintf_r+0xe2>
  438070:	9906      	ldr	r1, [sp, #24]
  438072:	f041 0120 	orr.w	r1, r1, #32
  438076:	9106      	str	r1, [sp, #24]
  438078:	781d      	ldrb	r5, [r3, #0]
  43807a:	4619      	mov	r1, r3
  43807c:	e593      	b.n	437ba6 <_vfprintf_r+0xe2>
  43807e:	bf00      	nop
  438080:	004404e4 	.word	0x004404e4
  438084:	004404d4 	.word	0x004404d4
  438088:	00440498 	.word	0x00440498
  43808c:	9308      	str	r3, [sp, #32]
  43808e:	9b06      	ldr	r3, [sp, #24]
  438090:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
  438094:	f043 0310 	orr.w	r3, r3, #16
  438098:	9306      	str	r3, [sp, #24]
  43809a:	9b06      	ldr	r3, [sp, #24]
  43809c:	0699      	lsls	r1, r3, #26
  43809e:	46b2      	mov	sl, r6
  4380a0:	f140 809c 	bpl.w	4381dc <_vfprintf_r+0x718>
  4380a4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4380a6:	3707      	adds	r7, #7
  4380a8:	f027 0707 	bic.w	r7, r7, #7
  4380ac:	e9d7 2300 	ldrd	r2, r3, [r7]
  4380b0:	f107 0108 	add.w	r1, r7, #8
  4380b4:	910c      	str	r1, [sp, #48]	; 0x30
  4380b6:	4616      	mov	r6, r2
  4380b8:	461f      	mov	r7, r3
  4380ba:	2a00      	cmp	r2, #0
  4380bc:	f173 0300 	sbcs.w	r3, r3, #0
  4380c0:	f2c0 8415 	blt.w	4388ee <_vfprintf_r+0xe2a>
  4380c4:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  4380c8:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  4380cc:	2301      	movs	r3, #1
  4380ce:	e61d      	b.n	437d0c <_vfprintf_r+0x248>
  4380d0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4380d2:	9308      	str	r3, [sp, #32]
  4380d4:	3707      	adds	r7, #7
  4380d6:	f027 0307 	bic.w	r3, r7, #7
  4380da:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
  4380de:	f103 0208 	add.w	r2, r3, #8
  4380e2:	920c      	str	r2, [sp, #48]	; 0x30
  4380e4:	681a      	ldr	r2, [r3, #0]
  4380e6:	9212      	str	r2, [sp, #72]	; 0x48
  4380e8:	685b      	ldr	r3, [r3, #4]
  4380ea:	9313      	str	r3, [sp, #76]	; 0x4c
  4380ec:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4380ee:	9812      	ldr	r0, [sp, #72]	; 0x48
  4380f0:	f002 fba0 	bl	43a834 <__fpclassifyd>
  4380f4:	2801      	cmp	r0, #1
  4380f6:	46b3      	mov	fp, r6
  4380f8:	9812      	ldr	r0, [sp, #72]	; 0x48
  4380fa:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4380fc:	f040 8406 	bne.w	43890c <_vfprintf_r+0xe48>
  438100:	2200      	movs	r2, #0
  438102:	2300      	movs	r3, #0
  438104:	f7fa f898 	bl	432238 <__aeabi_dcmplt>
  438108:	2800      	cmp	r0, #0
  43810a:	f040 85ee 	bne.w	438cea <_vfprintf_r+0x1226>
  43810e:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  438112:	9e06      	ldr	r6, [sp, #24]
  438114:	4a99      	ldr	r2, [pc, #612]	; (43837c <_vfprintf_r+0x8b8>)
  438116:	4b9a      	ldr	r3, [pc, #616]	; (438380 <_vfprintf_r+0x8bc>)
  438118:	2103      	movs	r1, #3
  43811a:	2000      	movs	r0, #0
  43811c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  438120:	2d47      	cmp	r5, #71	; 0x47
  438122:	bfd8      	it	le
  438124:	461a      	movle	r2, r3
  438126:	9107      	str	r1, [sp, #28]
  438128:	900f      	str	r0, [sp, #60]	; 0x3c
  43812a:	9606      	str	r6, [sp, #24]
  43812c:	920e      	str	r2, [sp, #56]	; 0x38
  43812e:	910b      	str	r1, [sp, #44]	; 0x2c
  438130:	9010      	str	r0, [sp, #64]	; 0x40
  438132:	e61f      	b.n	437d74 <_vfprintf_r+0x2b0>
  438134:	9906      	ldr	r1, [sp, #24]
  438136:	f041 0108 	orr.w	r1, r1, #8
  43813a:	9106      	str	r1, [sp, #24]
  43813c:	781d      	ldrb	r5, [r3, #0]
  43813e:	4619      	mov	r1, r3
  438140:	e531      	b.n	437ba6 <_vfprintf_r+0xe2>
  438142:	781d      	ldrb	r5, [r3, #0]
  438144:	4619      	mov	r1, r3
  438146:	222b      	movs	r2, #43	; 0x2b
  438148:	e52d      	b.n	437ba6 <_vfprintf_r+0xe2>
  43814a:	9906      	ldr	r1, [sp, #24]
  43814c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  438150:	9106      	str	r1, [sp, #24]
  438152:	781d      	ldrb	r5, [r3, #0]
  438154:	4619      	mov	r1, r3
  438156:	e526      	b.n	437ba6 <_vfprintf_r+0xe2>
  438158:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  43815c:	2100      	movs	r1, #0
  43815e:	f813 5b01 	ldrb.w	r5, [r3], #1
  438162:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  438166:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  43816a:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  43816e:	2809      	cmp	r0, #9
  438170:	d9f5      	bls.n	43815e <_vfprintf_r+0x69a>
  438172:	910a      	str	r1, [sp, #40]	; 0x28
  438174:	e518      	b.n	437ba8 <_vfprintf_r+0xe4>
  438176:	990c      	ldr	r1, [sp, #48]	; 0x30
  438178:	9308      	str	r3, [sp, #32]
  43817a:	2330      	movs	r3, #48	; 0x30
  43817c:	9a06      	ldr	r2, [sp, #24]
  43817e:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
  438182:	460b      	mov	r3, r1
  438184:	3304      	adds	r3, #4
  438186:	2578      	movs	r5, #120	; 0x78
  438188:	f042 0202 	orr.w	r2, r2, #2
  43818c:	930c      	str	r3, [sp, #48]	; 0x30
  43818e:	4b7d      	ldr	r3, [pc, #500]	; (438384 <_vfprintf_r+0x8c0>)
  438190:	9314      	str	r3, [sp, #80]	; 0x50
  438192:	46b2      	mov	sl, r6
  438194:	9206      	str	r2, [sp, #24]
  438196:	680e      	ldr	r6, [r1, #0]
  438198:	f88d 5069 	strb.w	r5, [sp, #105]	; 0x69
  43819c:	2700      	movs	r7, #0
  43819e:	2302      	movs	r3, #2
  4381a0:	e5ae      	b.n	437d00 <_vfprintf_r+0x23c>
  4381a2:	9906      	ldr	r1, [sp, #24]
  4381a4:	f041 0101 	orr.w	r1, r1, #1
  4381a8:	9106      	str	r1, [sp, #24]
  4381aa:	781d      	ldrb	r5, [r3, #0]
  4381ac:	4619      	mov	r1, r3
  4381ae:	e4fa      	b.n	437ba6 <_vfprintf_r+0xe2>
  4381b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  4381b2:	6829      	ldr	r1, [r5, #0]
  4381b4:	910a      	str	r1, [sp, #40]	; 0x28
  4381b6:	4608      	mov	r0, r1
  4381b8:	2800      	cmp	r0, #0
  4381ba:	4629      	mov	r1, r5
  4381bc:	f101 0104 	add.w	r1, r1, #4
  4381c0:	f2c0 84e3 	blt.w	438b8a <_vfprintf_r+0x10c6>
  4381c4:	910c      	str	r1, [sp, #48]	; 0x30
  4381c6:	781d      	ldrb	r5, [r3, #0]
  4381c8:	4619      	mov	r1, r3
  4381ca:	e4ec      	b.n	437ba6 <_vfprintf_r+0xe2>
  4381cc:	9308      	str	r3, [sp, #32]
  4381ce:	9b06      	ldr	r3, [sp, #24]
  4381d0:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
  4381d4:	0699      	lsls	r1, r3, #26
  4381d6:	46b2      	mov	sl, r6
  4381d8:	f53f af64 	bmi.w	4380a4 <_vfprintf_r+0x5e0>
  4381dc:	9b06      	ldr	r3, [sp, #24]
  4381de:	06da      	lsls	r2, r3, #27
  4381e0:	f100 8292 	bmi.w	438708 <_vfprintf_r+0xc44>
  4381e4:	9b06      	ldr	r3, [sp, #24]
  4381e6:	065b      	lsls	r3, r3, #25
  4381e8:	f140 828e 	bpl.w	438708 <_vfprintf_r+0xc44>
  4381ec:	990c      	ldr	r1, [sp, #48]	; 0x30
  4381ee:	f9b1 6000 	ldrsh.w	r6, [r1]
  4381f2:	3104      	adds	r1, #4
  4381f4:	17f7      	asrs	r7, r6, #31
  4381f6:	4632      	mov	r2, r6
  4381f8:	463b      	mov	r3, r7
  4381fa:	910c      	str	r1, [sp, #48]	; 0x30
  4381fc:	e75d      	b.n	4380ba <_vfprintf_r+0x5f6>
  4381fe:	9906      	ldr	r1, [sp, #24]
  438200:	f041 0140 	orr.w	r1, r1, #64	; 0x40
  438204:	9106      	str	r1, [sp, #24]
  438206:	781d      	ldrb	r5, [r3, #0]
  438208:	4619      	mov	r1, r3
  43820a:	e4cc      	b.n	437ba6 <_vfprintf_r+0xe2>
  43820c:	781d      	ldrb	r5, [r3, #0]
  43820e:	9906      	ldr	r1, [sp, #24]
  438210:	2d6c      	cmp	r5, #108	; 0x6c
  438212:	f000 84b3 	beq.w	438b7c <_vfprintf_r+0x10b8>
  438216:	f041 0110 	orr.w	r1, r1, #16
  43821a:	9106      	str	r1, [sp, #24]
  43821c:	4619      	mov	r1, r3
  43821e:	e4c2      	b.n	437ba6 <_vfprintf_r+0xe2>
  438220:	9308      	str	r3, [sp, #32]
  438222:	9b06      	ldr	r3, [sp, #24]
  438224:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
  438228:	069a      	lsls	r2, r3, #26
  43822a:	f140 8400 	bpl.w	438a2e <_vfprintf_r+0xf6a>
  43822e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  438230:	9909      	ldr	r1, [sp, #36]	; 0x24
  438232:	6813      	ldr	r3, [r2, #0]
  438234:	17cf      	asrs	r7, r1, #31
  438236:	4608      	mov	r0, r1
  438238:	3204      	adds	r2, #4
  43823a:	4639      	mov	r1, r7
  43823c:	920c      	str	r2, [sp, #48]	; 0x30
  43823e:	e9c3 0100 	strd	r0, r1, [r3]
  438242:	e480      	b.n	437b46 <_vfprintf_r+0x82>
  438244:	781d      	ldrb	r5, [r3, #0]
  438246:	2d2a      	cmp	r5, #42	; 0x2a
  438248:	f103 0101 	add.w	r1, r3, #1
  43824c:	f000 860e 	beq.w	438e6c <_vfprintf_r+0x13a8>
  438250:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  438254:	2809      	cmp	r0, #9
  438256:	460b      	mov	r3, r1
  438258:	f04f 0600 	mov.w	r6, #0
  43825c:	f63f aca4 	bhi.w	437ba8 <_vfprintf_r+0xe4>
  438260:	f813 5b01 	ldrb.w	r5, [r3], #1
  438264:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  438268:	eb00 0646 	add.w	r6, r0, r6, lsl #1
  43826c:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
  438270:	2809      	cmp	r0, #9
  438272:	d9f5      	bls.n	438260 <_vfprintf_r+0x79c>
  438274:	ea46 76e6 	orr.w	r6, r6, r6, asr #31
  438278:	e496      	b.n	437ba8 <_vfprintf_r+0xe4>
  43827a:	9308      	str	r3, [sp, #32]
  43827c:	9b06      	ldr	r3, [sp, #24]
  43827e:	f043 0310 	orr.w	r3, r3, #16
  438282:	9306      	str	r3, [sp, #24]
  438284:	9b06      	ldr	r3, [sp, #24]
  438286:	f013 0320 	ands.w	r3, r3, #32
  43828a:	46b2      	mov	sl, r6
  43828c:	f47f ae93 	bne.w	437fb6 <_vfprintf_r+0x4f2>
  438290:	9a06      	ldr	r2, [sp, #24]
  438292:	f012 0210 	ands.w	r2, r2, #16
  438296:	f040 8240 	bne.w	43871a <_vfprintf_r+0xc56>
  43829a:	9b06      	ldr	r3, [sp, #24]
  43829c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
  4382a0:	f000 823b 	beq.w	43871a <_vfprintf_r+0xc56>
  4382a4:	990c      	ldr	r1, [sp, #48]	; 0x30
  4382a6:	4613      	mov	r3, r2
  4382a8:	460a      	mov	r2, r1
  4382aa:	3204      	adds	r2, #4
  4382ac:	880e      	ldrh	r6, [r1, #0]
  4382ae:	920c      	str	r2, [sp, #48]	; 0x30
  4382b0:	2700      	movs	r7, #0
  4382b2:	e525      	b.n	437d00 <_vfprintf_r+0x23c>
  4382b4:	9308      	str	r3, [sp, #32]
  4382b6:	4b34      	ldr	r3, [pc, #208]	; (438388 <_vfprintf_r+0x8c4>)
  4382b8:	9314      	str	r3, [sp, #80]	; 0x50
  4382ba:	9b06      	ldr	r3, [sp, #24]
  4382bc:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
  4382c0:	0699      	lsls	r1, r3, #26
  4382c2:	46b2      	mov	sl, r6
  4382c4:	f53f aeb1 	bmi.w	43802a <_vfprintf_r+0x566>
  4382c8:	9b06      	ldr	r3, [sp, #24]
  4382ca:	06da      	lsls	r2, r3, #27
  4382cc:	f140 83c6 	bpl.w	438a5c <_vfprintf_r+0xf98>
  4382d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4382d2:	4613      	mov	r3, r2
  4382d4:	3304      	adds	r3, #4
  4382d6:	6816      	ldr	r6, [r2, #0]
  4382d8:	930c      	str	r3, [sp, #48]	; 0x30
  4382da:	2700      	movs	r7, #0
  4382dc:	e6ae      	b.n	43803c <_vfprintf_r+0x578>
  4382de:	990c      	ldr	r1, [sp, #48]	; 0x30
  4382e0:	9308      	str	r3, [sp, #32]
  4382e2:	680a      	ldr	r2, [r1, #0]
  4382e4:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
  4382e8:	2300      	movs	r3, #0
  4382ea:	2201      	movs	r2, #1
  4382ec:	3104      	adds	r1, #4
  4382ee:	469c      	mov	ip, r3
  4382f0:	9207      	str	r2, [sp, #28]
  4382f2:	910c      	str	r1, [sp, #48]	; 0x30
  4382f4:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
  4382f8:	ab24      	add	r3, sp, #144	; 0x90
  4382fa:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
  4382fe:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  438302:	920b      	str	r2, [sp, #44]	; 0x2c
  438304:	930e      	str	r3, [sp, #56]	; 0x38
  438306:	e53b      	b.n	437d80 <_vfprintf_r+0x2bc>
  438308:	9308      	str	r3, [sp, #32]
  43830a:	9b06      	ldr	r3, [sp, #24]
  43830c:	f043 0310 	orr.w	r3, r3, #16
  438310:	9306      	str	r3, [sp, #24]
  438312:	9b06      	ldr	r3, [sp, #24]
  438314:	46b2      	mov	sl, r6
  438316:	069e      	lsls	r6, r3, #26
  438318:	f53f ace8 	bmi.w	437cec <_vfprintf_r+0x228>
  43831c:	9b06      	ldr	r3, [sp, #24]
  43831e:	06d8      	lsls	r0, r3, #27
  438320:	f140 8377 	bpl.w	438a12 <_vfprintf_r+0xf4e>
  438324:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  438326:	4613      	mov	r3, r2
  438328:	3204      	adds	r2, #4
  43832a:	681e      	ldr	r6, [r3, #0]
  43832c:	920c      	str	r2, [sp, #48]	; 0x30
  43832e:	2301      	movs	r3, #1
  438330:	2700      	movs	r7, #0
  438332:	e4e5      	b.n	437d00 <_vfprintf_r+0x23c>
  438334:	9308      	str	r3, [sp, #32]
  438336:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
  43833a:	2d00      	cmp	r5, #0
  43833c:	f43f acbb 	beq.w	437cb6 <_vfprintf_r+0x1f2>
  438340:	2300      	movs	r3, #0
  438342:	2201      	movs	r2, #1
  438344:	469c      	mov	ip, r3
  438346:	9207      	str	r2, [sp, #28]
  438348:	f88d 5090 	strb.w	r5, [sp, #144]	; 0x90
  43834c:	e7d2      	b.n	4382f4 <_vfprintf_r+0x830>
  43834e:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  438352:	e561      	b.n	437e18 <_vfprintf_r+0x354>
  438354:	2b01      	cmp	r3, #1
  438356:	f47f aceb 	bne.w	437d30 <_vfprintf_r+0x26c>
  43835a:	2f00      	cmp	r7, #0
  43835c:	bf08      	it	eq
  43835e:	2e0a      	cmpeq	r6, #10
  438360:	f080 81ef 	bcs.w	438742 <_vfprintf_r+0xc7e>
  438364:	f10d 0bf8 	add.w	fp, sp, #248	; 0xf8
  438368:	3630      	adds	r6, #48	; 0x30
  43836a:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  43836e:	ab2e      	add	r3, sp, #184	; 0xb8
  438370:	ebcb 0303 	rsb	r3, fp, r3
  438374:	930b      	str	r3, [sp, #44]	; 0x2c
  438376:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
  43837a:	e4f3      	b.n	437d64 <_vfprintf_r+0x2a0>
  43837c:	00440478 	.word	0x00440478
  438380:	00440474 	.word	0x00440474
  438384:	00440498 	.word	0x00440498
  438388:	00440484 	.word	0x00440484
  43838c:	2d65      	cmp	r5, #101	; 0x65
  43838e:	f340 808a 	ble.w	4384a6 <_vfprintf_r+0x9e2>
  438392:	9812      	ldr	r0, [sp, #72]	; 0x48
  438394:	9913      	ldr	r1, [sp, #76]	; 0x4c
  438396:	2200      	movs	r2, #0
  438398:	2300      	movs	r3, #0
  43839a:	f7f9 ff43 	bl	432224 <__aeabi_dcmpeq>
  43839e:	2800      	cmp	r0, #0
  4383a0:	f000 8131 	beq.w	438606 <_vfprintf_r+0xb42>
  4383a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4383a6:	4aba      	ldr	r2, [pc, #744]	; (438690 <_vfprintf_r+0xbcc>)
  4383a8:	6022      	str	r2, [r4, #0]
  4383aa:	3301      	adds	r3, #1
  4383ac:	f10b 0b01 	add.w	fp, fp, #1
  4383b0:	2201      	movs	r2, #1
  4383b2:	2b07      	cmp	r3, #7
  4383b4:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  4383b8:	9322      	str	r3, [sp, #136]	; 0x88
  4383ba:	6062      	str	r2, [r4, #4]
  4383bc:	f300 8367 	bgt.w	438a8e <_vfprintf_r+0xfca>
  4383c0:	3408      	adds	r4, #8
  4383c2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  4383c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4383c6:	4293      	cmp	r3, r2
  4383c8:	db03      	blt.n	4383d2 <_vfprintf_r+0x90e>
  4383ca:	9b06      	ldr	r3, [sp, #24]
  4383cc:	07df      	lsls	r7, r3, #31
  4383ce:	f57f ad96 	bpl.w	437efe <_vfprintf_r+0x43a>
  4383d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4383d4:	9916      	ldr	r1, [sp, #88]	; 0x58
  4383d6:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4383d8:	6022      	str	r2, [r4, #0]
  4383da:	3301      	adds	r3, #1
  4383dc:	448b      	add	fp, r1
  4383de:	2b07      	cmp	r3, #7
  4383e0:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  4383e4:	6061      	str	r1, [r4, #4]
  4383e6:	9322      	str	r3, [sp, #136]	; 0x88
  4383e8:	f300 83d6 	bgt.w	438b98 <_vfprintf_r+0x10d4>
  4383ec:	3408      	adds	r4, #8
  4383ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4383f0:	1e5d      	subs	r5, r3, #1
  4383f2:	2d00      	cmp	r5, #0
  4383f4:	f77f ad83 	ble.w	437efe <_vfprintf_r+0x43a>
  4383f8:	2d10      	cmp	r5, #16
  4383fa:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4383fc:	4fa5      	ldr	r7, [pc, #660]	; (438694 <_vfprintf_r+0xbd0>)
  4383fe:	f340 8195 	ble.w	43872c <_vfprintf_r+0xc68>
  438402:	2610      	movs	r6, #16
  438404:	465a      	mov	r2, fp
  438406:	e004      	b.n	438412 <_vfprintf_r+0x94e>
  438408:	3408      	adds	r4, #8
  43840a:	3d10      	subs	r5, #16
  43840c:	2d10      	cmp	r5, #16
  43840e:	f340 818c 	ble.w	43872a <_vfprintf_r+0xc66>
  438412:	3301      	adds	r3, #1
  438414:	3210      	adds	r2, #16
  438416:	2b07      	cmp	r3, #7
  438418:	9223      	str	r2, [sp, #140]	; 0x8c
  43841a:	9322      	str	r3, [sp, #136]	; 0x88
  43841c:	6027      	str	r7, [r4, #0]
  43841e:	6066      	str	r6, [r4, #4]
  438420:	ddf2      	ble.n	438408 <_vfprintf_r+0x944>
  438422:	4640      	mov	r0, r8
  438424:	4649      	mov	r1, r9
  438426:	aa21      	add	r2, sp, #132	; 0x84
  438428:	f7fe fcfc 	bl	436e24 <__sprint_r>
  43842c:	2800      	cmp	r0, #0
  43842e:	f47f ac49 	bne.w	437cc4 <_vfprintf_r+0x200>
  438432:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  438434:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438436:	ac2e      	add	r4, sp, #184	; 0xb8
  438438:	e7e7      	b.n	43840a <_vfprintf_r+0x946>
  43843a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  43843c:	9a07      	ldr	r2, [sp, #28]
  43843e:	1a9e      	subs	r6, r3, r2
  438440:	2e00      	cmp	r6, #0
  438442:	f77f ad10 	ble.w	437e66 <_vfprintf_r+0x3a2>
  438446:	2e10      	cmp	r6, #16
  438448:	9a22      	ldr	r2, [sp, #136]	; 0x88
  43844a:	4f92      	ldr	r7, [pc, #584]	; (438694 <_vfprintf_r+0xbd0>)
  43844c:	dd1f      	ble.n	43848e <_vfprintf_r+0x9ca>
  43844e:	f04f 0a10 	mov.w	sl, #16
  438452:	465b      	mov	r3, fp
  438454:	e004      	b.n	438460 <_vfprintf_r+0x99c>
  438456:	3e10      	subs	r6, #16
  438458:	2e10      	cmp	r6, #16
  43845a:	f104 0408 	add.w	r4, r4, #8
  43845e:	dd15      	ble.n	43848c <_vfprintf_r+0x9c8>
  438460:	3201      	adds	r2, #1
  438462:	3310      	adds	r3, #16
  438464:	2a07      	cmp	r2, #7
  438466:	9323      	str	r3, [sp, #140]	; 0x8c
  438468:	9222      	str	r2, [sp, #136]	; 0x88
  43846a:	e884 0480 	stmia.w	r4, {r7, sl}
  43846e:	ddf2      	ble.n	438456 <_vfprintf_r+0x992>
  438470:	4640      	mov	r0, r8
  438472:	4649      	mov	r1, r9
  438474:	aa21      	add	r2, sp, #132	; 0x84
  438476:	f7fe fcd5 	bl	436e24 <__sprint_r>
  43847a:	2800      	cmp	r0, #0
  43847c:	f47f ac22 	bne.w	437cc4 <_vfprintf_r+0x200>
  438480:	3e10      	subs	r6, #16
  438482:	2e10      	cmp	r6, #16
  438484:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  438486:	9a22      	ldr	r2, [sp, #136]	; 0x88
  438488:	ac2e      	add	r4, sp, #184	; 0xb8
  43848a:	dce9      	bgt.n	438460 <_vfprintf_r+0x99c>
  43848c:	469b      	mov	fp, r3
  43848e:	3201      	adds	r2, #1
  438490:	44b3      	add	fp, r6
  438492:	2a07      	cmp	r2, #7
  438494:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  438498:	9222      	str	r2, [sp, #136]	; 0x88
  43849a:	6027      	str	r7, [r4, #0]
  43849c:	6066      	str	r6, [r4, #4]
  43849e:	f300 8219 	bgt.w	4388d4 <_vfprintf_r+0xe10>
  4384a2:	3408      	adds	r4, #8
  4384a4:	e4df      	b.n	437e66 <_vfprintf_r+0x3a2>
  4384a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4384a8:	9d22      	ldr	r5, [sp, #136]	; 0x88
  4384aa:	2b01      	cmp	r3, #1
  4384ac:	f340 81d4 	ble.w	438858 <_vfprintf_r+0xd94>
  4384b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4384b2:	6023      	str	r3, [r4, #0]
  4384b4:	3501      	adds	r5, #1
  4384b6:	f10b 0601 	add.w	r6, fp, #1
  4384ba:	2301      	movs	r3, #1
  4384bc:	2d07      	cmp	r5, #7
  4384be:	9623      	str	r6, [sp, #140]	; 0x8c
  4384c0:	9522      	str	r5, [sp, #136]	; 0x88
  4384c2:	6063      	str	r3, [r4, #4]
  4384c4:	f300 81e4 	bgt.w	438890 <_vfprintf_r+0xdcc>
  4384c8:	3408      	adds	r4, #8
  4384ca:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4384cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4384ce:	6023      	str	r3, [r4, #0]
  4384d0:	3501      	adds	r5, #1
  4384d2:	4416      	add	r6, r2
  4384d4:	2d07      	cmp	r5, #7
  4384d6:	9623      	str	r6, [sp, #140]	; 0x8c
  4384d8:	9522      	str	r5, [sp, #136]	; 0x88
  4384da:	6062      	str	r2, [r4, #4]
  4384dc:	f300 81e4 	bgt.w	4388a8 <_vfprintf_r+0xde4>
  4384e0:	3408      	adds	r4, #8
  4384e2:	2300      	movs	r3, #0
  4384e4:	9812      	ldr	r0, [sp, #72]	; 0x48
  4384e6:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4384e8:	2200      	movs	r2, #0
  4384ea:	f7f9 fe9b 	bl	432224 <__aeabi_dcmpeq>
  4384ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4384f0:	2800      	cmp	r0, #0
  4384f2:	f040 80e0 	bne.w	4386b6 <_vfprintf_r+0xbf2>
  4384f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4384f8:	3b01      	subs	r3, #1
  4384fa:	3501      	adds	r5, #1
  4384fc:	3201      	adds	r2, #1
  4384fe:	441e      	add	r6, r3
  438500:	2d07      	cmp	r5, #7
  438502:	9522      	str	r5, [sp, #136]	; 0x88
  438504:	9623      	str	r6, [sp, #140]	; 0x8c
  438506:	6022      	str	r2, [r4, #0]
  438508:	6063      	str	r3, [r4, #4]
  43850a:	f300 81b5 	bgt.w	438878 <_vfprintf_r+0xdb4>
  43850e:	3408      	adds	r4, #8
  438510:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  438512:	6062      	str	r2, [r4, #4]
  438514:	3501      	adds	r5, #1
  438516:	eb06 0b02 	add.w	fp, r6, r2
  43851a:	ab1d      	add	r3, sp, #116	; 0x74
  43851c:	2d07      	cmp	r5, #7
  43851e:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  438522:	9522      	str	r5, [sp, #136]	; 0x88
  438524:	6023      	str	r3, [r4, #0]
  438526:	f77f ace9 	ble.w	437efc <_vfprintf_r+0x438>
  43852a:	4640      	mov	r0, r8
  43852c:	4649      	mov	r1, r9
  43852e:	aa21      	add	r2, sp, #132	; 0x84
  438530:	f7fe fc78 	bl	436e24 <__sprint_r>
  438534:	2800      	cmp	r0, #0
  438536:	f47f abc5 	bne.w	437cc4 <_vfprintf_r+0x200>
  43853a:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  43853e:	ac2e      	add	r4, sp, #184	; 0xb8
  438540:	e4dd      	b.n	437efe <_vfprintf_r+0x43a>
  438542:	4640      	mov	r0, r8
  438544:	4649      	mov	r1, r9
  438546:	aa21      	add	r2, sp, #132	; 0x84
  438548:	f7fe fc6c 	bl	436e24 <__sprint_r>
  43854c:	2800      	cmp	r0, #0
  43854e:	f43f ad20 	beq.w	437f92 <_vfprintf_r+0x4ce>
  438552:	f7ff bbb7 	b.w	437cc4 <_vfprintf_r+0x200>
  438556:	2b00      	cmp	r3, #0
  438558:	d133      	bne.n	4385c2 <_vfprintf_r+0xafe>
  43855a:	9b06      	ldr	r3, [sp, #24]
  43855c:	07da      	lsls	r2, r3, #31
  43855e:	d530      	bpl.n	4385c2 <_vfprintf_r+0xafe>
  438560:	f10d 0bf8 	add.w	fp, sp, #248	; 0xf8
  438564:	2330      	movs	r3, #48	; 0x30
  438566:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  43856a:	ab2e      	add	r3, sp, #184	; 0xb8
  43856c:	ebcb 0303 	rsb	r3, fp, r3
  438570:	930b      	str	r3, [sp, #44]	; 0x2c
  438572:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
  438576:	f7ff bbf5 	b.w	437d64 <_vfprintf_r+0x2a0>
  43857a:	4640      	mov	r0, r8
  43857c:	4649      	mov	r1, r9
  43857e:	aa21      	add	r2, sp, #132	; 0x84
  438580:	f7fe fc50 	bl	436e24 <__sprint_r>
  438584:	2800      	cmp	r0, #0
  438586:	f47f ab9d 	bne.w	437cc4 <_vfprintf_r+0x200>
  43858a:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  43858e:	ac2e      	add	r4, sp, #184	; 0xb8
  438590:	e4a3      	b.n	437eda <_vfprintf_r+0x416>
  438592:	4640      	mov	r0, r8
  438594:	4649      	mov	r1, r9
  438596:	aa21      	add	r2, sp, #132	; 0x84
  438598:	f7fe fc44 	bl	436e24 <__sprint_r>
  43859c:	2800      	cmp	r0, #0
  43859e:	f47f ab91 	bne.w	437cc4 <_vfprintf_r+0x200>
  4385a2:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  4385a6:	ac2e      	add	r4, sp, #184	; 0xb8
  4385a8:	e45a      	b.n	437e60 <_vfprintf_r+0x39c>
  4385aa:	4640      	mov	r0, r8
  4385ac:	4649      	mov	r1, r9
  4385ae:	aa21      	add	r2, sp, #132	; 0x84
  4385b0:	f7fe fc38 	bl	436e24 <__sprint_r>
  4385b4:	2800      	cmp	r0, #0
  4385b6:	f47f ab85 	bne.w	437cc4 <_vfprintf_r+0x200>
  4385ba:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  4385be:	ac2e      	add	r4, sp, #184	; 0xb8
  4385c0:	e43d      	b.n	437e3e <_vfprintf_r+0x37a>
  4385c2:	ab2e      	add	r3, sp, #184	; 0xb8
  4385c4:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
  4385c8:	930e      	str	r3, [sp, #56]	; 0x38
  4385ca:	f7ff bbcb 	b.w	437d64 <_vfprintf_r+0x2a0>
  4385ce:	9814      	ldr	r0, [sp, #80]	; 0x50
  4385d0:	f10d 0bb8 	add.w	fp, sp, #184	; 0xb8
  4385d4:	0933      	lsrs	r3, r6, #4
  4385d6:	f006 010f 	and.w	r1, r6, #15
  4385da:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  4385de:	093a      	lsrs	r2, r7, #4
  4385e0:	461e      	mov	r6, r3
  4385e2:	4617      	mov	r7, r2
  4385e4:	5c43      	ldrb	r3, [r0, r1]
  4385e6:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  4385ea:	ea56 0307 	orrs.w	r3, r6, r7
  4385ee:	d1f1      	bne.n	4385d4 <_vfprintf_r+0xb10>
  4385f0:	465a      	mov	r2, fp
  4385f2:	ab2e      	add	r3, sp, #184	; 0xb8
  4385f4:	1a9b      	subs	r3, r3, r2
  4385f6:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
  4385fa:	930b      	str	r3, [sp, #44]	; 0x2c
  4385fc:	f7ff bbb2 	b.w	437d64 <_vfprintf_r+0x2a0>
  438600:	2302      	movs	r3, #2
  438602:	f7ff bb7d 	b.w	437d00 <_vfprintf_r+0x23c>
  438606:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
  438608:	2d00      	cmp	r5, #0
  43860a:	f340 824c 	ble.w	438aa6 <_vfprintf_r+0xfe2>
  43860e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  438610:	9910      	ldr	r1, [sp, #64]	; 0x40
  438612:	428a      	cmp	r2, r1
  438614:	4613      	mov	r3, r2
  438616:	bfa8      	it	ge
  438618:	460b      	movge	r3, r1
  43861a:	461d      	mov	r5, r3
  43861c:	990e      	ldr	r1, [sp, #56]	; 0x38
  43861e:	2d00      	cmp	r5, #0
  438620:	eb01 0a02 	add.w	sl, r1, r2
  438624:	dd0b      	ble.n	43863e <_vfprintf_r+0xb7a>
  438626:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438628:	6021      	str	r1, [r4, #0]
  43862a:	3301      	adds	r3, #1
  43862c:	44ab      	add	fp, r5
  43862e:	2b07      	cmp	r3, #7
  438630:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  438634:	6065      	str	r5, [r4, #4]
  438636:	9322      	str	r3, [sp, #136]	; 0x88
  438638:	f300 8300 	bgt.w	438c3c <_vfprintf_r+0x1178>
  43863c:	3408      	adds	r4, #8
  43863e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  438640:	2d00      	cmp	r5, #0
  438642:	bfa8      	it	ge
  438644:	1b5b      	subge	r3, r3, r5
  438646:	2b00      	cmp	r3, #0
  438648:	461d      	mov	r5, r3
  43864a:	f340 80af 	ble.w	4387ac <_vfprintf_r+0xce8>
  43864e:	2d10      	cmp	r5, #16
  438650:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438652:	4f10      	ldr	r7, [pc, #64]	; (438694 <_vfprintf_r+0xbd0>)
  438654:	f340 820f 	ble.w	438a76 <_vfprintf_r+0xfb2>
  438658:	2610      	movs	r6, #16
  43865a:	465a      	mov	r2, fp
  43865c:	e004      	b.n	438668 <_vfprintf_r+0xba4>
  43865e:	3408      	adds	r4, #8
  438660:	3d10      	subs	r5, #16
  438662:	2d10      	cmp	r5, #16
  438664:	f340 8206 	ble.w	438a74 <_vfprintf_r+0xfb0>
  438668:	3301      	adds	r3, #1
  43866a:	3210      	adds	r2, #16
  43866c:	2b07      	cmp	r3, #7
  43866e:	9223      	str	r2, [sp, #140]	; 0x8c
  438670:	9322      	str	r3, [sp, #136]	; 0x88
  438672:	6027      	str	r7, [r4, #0]
  438674:	6066      	str	r6, [r4, #4]
  438676:	ddf2      	ble.n	43865e <_vfprintf_r+0xb9a>
  438678:	4640      	mov	r0, r8
  43867a:	4649      	mov	r1, r9
  43867c:	aa21      	add	r2, sp, #132	; 0x84
  43867e:	f7fe fbd1 	bl	436e24 <__sprint_r>
  438682:	2800      	cmp	r0, #0
  438684:	f47f ab1e 	bne.w	437cc4 <_vfprintf_r+0x200>
  438688:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  43868a:	9b22      	ldr	r3, [sp, #136]	; 0x88
  43868c:	ac2e      	add	r4, sp, #184	; 0xb8
  43868e:	e7e7      	b.n	438660 <_vfprintf_r+0xb9c>
  438690:	0043faa4 	.word	0x0043faa4
  438694:	004404d4 	.word	0x004404d4
  438698:	4640      	mov	r0, r8
  43869a:	4649      	mov	r1, r9
  43869c:	aa21      	add	r2, sp, #132	; 0x84
  43869e:	f7fe fbc1 	bl	436e24 <__sprint_r>
  4386a2:	2800      	cmp	r0, #0
  4386a4:	f47f ab0e 	bne.w	437cc4 <_vfprintf_r+0x200>
  4386a8:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  4386ac:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  4386b0:	ac2e      	add	r4, sp, #184	; 0xb8
  4386b2:	f7ff bbb1 	b.w	437e18 <_vfprintf_r+0x354>
  4386b6:	f103 3aff 	add.w	sl, r3, #4294967295
  4386ba:	f1ba 0f00 	cmp.w	sl, #0
  4386be:	f77f af27 	ble.w	438510 <_vfprintf_r+0xa4c>
  4386c2:	f1ba 0f10 	cmp.w	sl, #16
  4386c6:	4f90      	ldr	r7, [pc, #576]	; (438908 <_vfprintf_r+0xe44>)
  4386c8:	bfc8      	it	gt
  4386ca:	f04f 0b10 	movgt.w	fp, #16
  4386ce:	dc07      	bgt.n	4386e0 <_vfprintf_r+0xc1c>
  4386d0:	e0f6      	b.n	4388c0 <_vfprintf_r+0xdfc>
  4386d2:	3408      	adds	r4, #8
  4386d4:	f1aa 0a10 	sub.w	sl, sl, #16
  4386d8:	f1ba 0f10 	cmp.w	sl, #16
  4386dc:	f340 80f0 	ble.w	4388c0 <_vfprintf_r+0xdfc>
  4386e0:	3501      	adds	r5, #1
  4386e2:	3610      	adds	r6, #16
  4386e4:	2d07      	cmp	r5, #7
  4386e6:	9623      	str	r6, [sp, #140]	; 0x8c
  4386e8:	9522      	str	r5, [sp, #136]	; 0x88
  4386ea:	e884 0880 	stmia.w	r4, {r7, fp}
  4386ee:	ddf0      	ble.n	4386d2 <_vfprintf_r+0xc0e>
  4386f0:	4640      	mov	r0, r8
  4386f2:	4649      	mov	r1, r9
  4386f4:	aa21      	add	r2, sp, #132	; 0x84
  4386f6:	f7fe fb95 	bl	436e24 <__sprint_r>
  4386fa:	2800      	cmp	r0, #0
  4386fc:	f47f aae2 	bne.w	437cc4 <_vfprintf_r+0x200>
  438700:	9e23      	ldr	r6, [sp, #140]	; 0x8c
  438702:	9d22      	ldr	r5, [sp, #136]	; 0x88
  438704:	ac2e      	add	r4, sp, #184	; 0xb8
  438706:	e7e5      	b.n	4386d4 <_vfprintf_r+0xc10>
  438708:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  43870a:	6816      	ldr	r6, [r2, #0]
  43870c:	4613      	mov	r3, r2
  43870e:	3304      	adds	r3, #4
  438710:	17f7      	asrs	r7, r6, #31
  438712:	930c      	str	r3, [sp, #48]	; 0x30
  438714:	4632      	mov	r2, r6
  438716:	463b      	mov	r3, r7
  438718:	e4cf      	b.n	4380ba <_vfprintf_r+0x5f6>
  43871a:	990c      	ldr	r1, [sp, #48]	; 0x30
  43871c:	460a      	mov	r2, r1
  43871e:	3204      	adds	r2, #4
  438720:	680e      	ldr	r6, [r1, #0]
  438722:	920c      	str	r2, [sp, #48]	; 0x30
  438724:	2700      	movs	r7, #0
  438726:	f7ff baeb 	b.w	437d00 <_vfprintf_r+0x23c>
  43872a:	4693      	mov	fp, r2
  43872c:	3301      	adds	r3, #1
  43872e:	44ab      	add	fp, r5
  438730:	2b07      	cmp	r3, #7
  438732:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  438736:	9322      	str	r3, [sp, #136]	; 0x88
  438738:	6027      	str	r7, [r4, #0]
  43873a:	6065      	str	r5, [r4, #4]
  43873c:	f77f abde 	ble.w	437efc <_vfprintf_r+0x438>
  438740:	e6f3      	b.n	43852a <_vfprintf_r+0xa66>
  438742:	f10d 0bb8 	add.w	fp, sp, #184	; 0xb8
  438746:	f8cd c01c 	str.w	ip, [sp, #28]
  43874a:	4630      	mov	r0, r6
  43874c:	4639      	mov	r1, r7
  43874e:	220a      	movs	r2, #10
  438750:	2300      	movs	r3, #0
  438752:	f7fa f86f 	bl	432834 <__aeabi_uldivmod>
  438756:	3230      	adds	r2, #48	; 0x30
  438758:	4630      	mov	r0, r6
  43875a:	4639      	mov	r1, r7
  43875c:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  438760:	2300      	movs	r3, #0
  438762:	220a      	movs	r2, #10
  438764:	f7fa f866 	bl	432834 <__aeabi_uldivmod>
  438768:	4606      	mov	r6, r0
  43876a:	460f      	mov	r7, r1
  43876c:	ea56 0307 	orrs.w	r3, r6, r7
  438770:	d1eb      	bne.n	43874a <_vfprintf_r+0xc86>
  438772:	f8dd c01c 	ldr.w	ip, [sp, #28]
  438776:	e73b      	b.n	4385f0 <_vfprintf_r+0xb2c>
  438778:	2b30      	cmp	r3, #48	; 0x30
  43877a:	f000 8219 	beq.w	438bb0 <_vfprintf_r+0x10ec>
  43877e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  438780:	3b01      	subs	r3, #1
  438782:	461a      	mov	r2, r3
  438784:	a82e      	add	r0, sp, #184	; 0xb8
  438786:	930e      	str	r3, [sp, #56]	; 0x38
  438788:	1a82      	subs	r2, r0, r2
  43878a:	2330      	movs	r3, #48	; 0x30
  43878c:	920b      	str	r2, [sp, #44]	; 0x2c
  43878e:	f801 3c01 	strb.w	r3, [r1, #-1]
  438792:	f7ff bae7 	b.w	437d64 <_vfprintf_r+0x2a0>
  438796:	4640      	mov	r0, r8
  438798:	4649      	mov	r1, r9
  43879a:	aa21      	add	r2, sp, #132	; 0x84
  43879c:	f7fe fb42 	bl	436e24 <__sprint_r>
  4387a0:	2800      	cmp	r0, #0
  4387a2:	f47f aa8f 	bne.w	437cc4 <_vfprintf_r+0x200>
  4387a6:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  4387aa:	ac2e      	add	r4, sp, #184	; 0xb8
  4387ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4387ae:	9910      	ldr	r1, [sp, #64]	; 0x40
  4387b0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  4387b2:	440a      	add	r2, r1
  4387b4:	4616      	mov	r6, r2
  4387b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4387b8:	4293      	cmp	r3, r2
  4387ba:	db3e      	blt.n	43883a <_vfprintf_r+0xd76>
  4387bc:	9a06      	ldr	r2, [sp, #24]
  4387be:	07d5      	lsls	r5, r2, #31
  4387c0:	d43b      	bmi.n	43883a <_vfprintf_r+0xd76>
  4387c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4387c4:	ebc6 050a 	rsb	r5, r6, sl
  4387c8:	1ad3      	subs	r3, r2, r3
  4387ca:	429d      	cmp	r5, r3
  4387cc:	bfa8      	it	ge
  4387ce:	461d      	movge	r5, r3
  4387d0:	2d00      	cmp	r5, #0
  4387d2:	462f      	mov	r7, r5
  4387d4:	dd0b      	ble.n	4387ee <_vfprintf_r+0xd2a>
  4387d6:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4387d8:	6026      	str	r6, [r4, #0]
  4387da:	3201      	adds	r2, #1
  4387dc:	44ab      	add	fp, r5
  4387de:	2a07      	cmp	r2, #7
  4387e0:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  4387e4:	6065      	str	r5, [r4, #4]
  4387e6:	9222      	str	r2, [sp, #136]	; 0x88
  4387e8:	f300 825e 	bgt.w	438ca8 <_vfprintf_r+0x11e4>
  4387ec:	3408      	adds	r4, #8
  4387ee:	2f00      	cmp	r7, #0
  4387f0:	bfac      	ite	ge
  4387f2:	1bdd      	subge	r5, r3, r7
  4387f4:	461d      	movlt	r5, r3
  4387f6:	2d00      	cmp	r5, #0
  4387f8:	f77f ab81 	ble.w	437efe <_vfprintf_r+0x43a>
  4387fc:	2d10      	cmp	r5, #16
  4387fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438800:	4f41      	ldr	r7, [pc, #260]	; (438908 <_vfprintf_r+0xe44>)
  438802:	dd93      	ble.n	43872c <_vfprintf_r+0xc68>
  438804:	2610      	movs	r6, #16
  438806:	465a      	mov	r2, fp
  438808:	e003      	b.n	438812 <_vfprintf_r+0xd4e>
  43880a:	3408      	adds	r4, #8
  43880c:	3d10      	subs	r5, #16
  43880e:	2d10      	cmp	r5, #16
  438810:	dd8b      	ble.n	43872a <_vfprintf_r+0xc66>
  438812:	3301      	adds	r3, #1
  438814:	3210      	adds	r2, #16
  438816:	2b07      	cmp	r3, #7
  438818:	9223      	str	r2, [sp, #140]	; 0x8c
  43881a:	9322      	str	r3, [sp, #136]	; 0x88
  43881c:	6027      	str	r7, [r4, #0]
  43881e:	6066      	str	r6, [r4, #4]
  438820:	ddf3      	ble.n	43880a <_vfprintf_r+0xd46>
  438822:	4640      	mov	r0, r8
  438824:	4649      	mov	r1, r9
  438826:	aa21      	add	r2, sp, #132	; 0x84
  438828:	f7fe fafc 	bl	436e24 <__sprint_r>
  43882c:	2800      	cmp	r0, #0
  43882e:	f47f aa49 	bne.w	437cc4 <_vfprintf_r+0x200>
  438832:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  438834:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438836:	ac2e      	add	r4, sp, #184	; 0xb8
  438838:	e7e8      	b.n	43880c <_vfprintf_r+0xd48>
  43883a:	9a22      	ldr	r2, [sp, #136]	; 0x88
  43883c:	9816      	ldr	r0, [sp, #88]	; 0x58
  43883e:	9915      	ldr	r1, [sp, #84]	; 0x54
  438840:	6021      	str	r1, [r4, #0]
  438842:	3201      	adds	r2, #1
  438844:	4483      	add	fp, r0
  438846:	2a07      	cmp	r2, #7
  438848:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  43884c:	6060      	str	r0, [r4, #4]
  43884e:	9222      	str	r2, [sp, #136]	; 0x88
  438850:	f300 820a 	bgt.w	438c68 <_vfprintf_r+0x11a4>
  438854:	3408      	adds	r4, #8
  438856:	e7b4      	b.n	4387c2 <_vfprintf_r+0xcfe>
  438858:	9b06      	ldr	r3, [sp, #24]
  43885a:	07d8      	lsls	r0, r3, #31
  43885c:	f53f ae28 	bmi.w	4384b0 <_vfprintf_r+0x9ec>
  438860:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  438862:	6023      	str	r3, [r4, #0]
  438864:	3501      	adds	r5, #1
  438866:	f10b 0601 	add.w	r6, fp, #1
  43886a:	2301      	movs	r3, #1
  43886c:	2d07      	cmp	r5, #7
  43886e:	9623      	str	r6, [sp, #140]	; 0x8c
  438870:	9522      	str	r5, [sp, #136]	; 0x88
  438872:	6063      	str	r3, [r4, #4]
  438874:	f77f ae4b 	ble.w	43850e <_vfprintf_r+0xa4a>
  438878:	4640      	mov	r0, r8
  43887a:	4649      	mov	r1, r9
  43887c:	aa21      	add	r2, sp, #132	; 0x84
  43887e:	f7fe fad1 	bl	436e24 <__sprint_r>
  438882:	2800      	cmp	r0, #0
  438884:	f47f aa1e 	bne.w	437cc4 <_vfprintf_r+0x200>
  438888:	9e23      	ldr	r6, [sp, #140]	; 0x8c
  43888a:	9d22      	ldr	r5, [sp, #136]	; 0x88
  43888c:	ac2e      	add	r4, sp, #184	; 0xb8
  43888e:	e63f      	b.n	438510 <_vfprintf_r+0xa4c>
  438890:	4640      	mov	r0, r8
  438892:	4649      	mov	r1, r9
  438894:	aa21      	add	r2, sp, #132	; 0x84
  438896:	f7fe fac5 	bl	436e24 <__sprint_r>
  43889a:	2800      	cmp	r0, #0
  43889c:	f47f aa12 	bne.w	437cc4 <_vfprintf_r+0x200>
  4388a0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
  4388a2:	9d22      	ldr	r5, [sp, #136]	; 0x88
  4388a4:	ac2e      	add	r4, sp, #184	; 0xb8
  4388a6:	e610      	b.n	4384ca <_vfprintf_r+0xa06>
  4388a8:	4640      	mov	r0, r8
  4388aa:	4649      	mov	r1, r9
  4388ac:	aa21      	add	r2, sp, #132	; 0x84
  4388ae:	f7fe fab9 	bl	436e24 <__sprint_r>
  4388b2:	2800      	cmp	r0, #0
  4388b4:	f47f aa06 	bne.w	437cc4 <_vfprintf_r+0x200>
  4388b8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
  4388ba:	9d22      	ldr	r5, [sp, #136]	; 0x88
  4388bc:	ac2e      	add	r4, sp, #184	; 0xb8
  4388be:	e610      	b.n	4384e2 <_vfprintf_r+0xa1e>
  4388c0:	3501      	adds	r5, #1
  4388c2:	4456      	add	r6, sl
  4388c4:	2d07      	cmp	r5, #7
  4388c6:	9623      	str	r6, [sp, #140]	; 0x8c
  4388c8:	9522      	str	r5, [sp, #136]	; 0x88
  4388ca:	e884 0480 	stmia.w	r4, {r7, sl}
  4388ce:	f77f ae1e 	ble.w	43850e <_vfprintf_r+0xa4a>
  4388d2:	e7d1      	b.n	438878 <_vfprintf_r+0xdb4>
  4388d4:	4640      	mov	r0, r8
  4388d6:	4649      	mov	r1, r9
  4388d8:	aa21      	add	r2, sp, #132	; 0x84
  4388da:	f7fe faa3 	bl	436e24 <__sprint_r>
  4388de:	2800      	cmp	r0, #0
  4388e0:	f47f a9f0 	bne.w	437cc4 <_vfprintf_r+0x200>
  4388e4:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  4388e8:	ac2e      	add	r4, sp, #184	; 0xb8
  4388ea:	f7ff babc 	b.w	437e66 <_vfprintf_r+0x3a2>
  4388ee:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
  4388f2:	4276      	negs	r6, r6
  4388f4:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  4388f8:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
  4388fc:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  438900:	2301      	movs	r3, #1
  438902:	f7ff ba03 	b.w	437d0c <_vfprintf_r+0x248>
  438906:	bf00      	nop
  438908:	004404d4 	.word	0x004404d4
  43890c:	f001 ff92 	bl	43a834 <__fpclassifyd>
  438910:	2800      	cmp	r0, #0
  438912:	f000 810d 	beq.w	438b30 <_vfprintf_r+0x106c>
  438916:	f025 0320 	bic.w	r3, r5, #32
  43891a:	f1b6 3fff 	cmp.w	r6, #4294967295
  43891e:	930b      	str	r3, [sp, #44]	; 0x2c
  438920:	f000 8258 	beq.w	438dd4 <_vfprintf_r+0x1310>
  438924:	2b47      	cmp	r3, #71	; 0x47
  438926:	d104      	bne.n	438932 <_vfprintf_r+0xe6e>
  438928:	2e00      	cmp	r6, #0
  43892a:	bf14      	ite	ne
  43892c:	46b3      	movne	fp, r6
  43892e:	f04f 0b01 	moveq.w	fp, #1
  438932:	9b06      	ldr	r3, [sp, #24]
  438934:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  438938:	930f      	str	r3, [sp, #60]	; 0x3c
  43893a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  43893c:	f1b3 0a00 	subs.w	sl, r3, #0
  438940:	9b12      	ldr	r3, [sp, #72]	; 0x48
  438942:	9307      	str	r3, [sp, #28]
  438944:	bfbb      	ittet	lt
  438946:	4653      	movlt	r3, sl
  438948:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
  43894c:	2300      	movge	r3, #0
  43894e:	232d      	movlt	r3, #45	; 0x2d
  438950:	2d66      	cmp	r5, #102	; 0x66
  438952:	930d      	str	r3, [sp, #52]	; 0x34
  438954:	f000 8154 	beq.w	438c00 <_vfprintf_r+0x113c>
  438958:	2d46      	cmp	r5, #70	; 0x46
  43895a:	f000 8151 	beq.w	438c00 <_vfprintf_r+0x113c>
  43895e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  438960:	9a07      	ldr	r2, [sp, #28]
  438962:	2b45      	cmp	r3, #69	; 0x45
  438964:	bf0c      	ite	eq
  438966:	f10b 0701 	addeq.w	r7, fp, #1
  43896a:	465f      	movne	r7, fp
  43896c:	2002      	movs	r0, #2
  43896e:	a91b      	add	r1, sp, #108	; 0x6c
  438970:	e88d 0081 	stmia.w	sp, {r0, r7}
  438974:	9102      	str	r1, [sp, #8]
  438976:	a81c      	add	r0, sp, #112	; 0x70
  438978:	a91f      	add	r1, sp, #124	; 0x7c
  43897a:	9003      	str	r0, [sp, #12]
  43897c:	4653      	mov	r3, sl
  43897e:	9104      	str	r1, [sp, #16]
  438980:	4640      	mov	r0, r8
  438982:	f000 fc51 	bl	439228 <_dtoa_r>
  438986:	2d67      	cmp	r5, #103	; 0x67
  438988:	900e      	str	r0, [sp, #56]	; 0x38
  43898a:	d002      	beq.n	438992 <_vfprintf_r+0xece>
  43898c:	2d47      	cmp	r5, #71	; 0x47
  43898e:	f040 8147 	bne.w	438c20 <_vfprintf_r+0x115c>
  438992:	9b06      	ldr	r3, [sp, #24]
  438994:	07db      	lsls	r3, r3, #31
  438996:	f140 823a 	bpl.w	438e0e <_vfprintf_r+0x134a>
  43899a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  43899c:	19de      	adds	r6, r3, r7
  43899e:	9807      	ldr	r0, [sp, #28]
  4389a0:	4651      	mov	r1, sl
  4389a2:	2200      	movs	r2, #0
  4389a4:	2300      	movs	r3, #0
  4389a6:	f7f9 fc3d 	bl	432224 <__aeabi_dcmpeq>
  4389aa:	2800      	cmp	r0, #0
  4389ac:	f040 81a3 	bne.w	438cf6 <_vfprintf_r+0x1232>
  4389b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4389b2:	429e      	cmp	r6, r3
  4389b4:	d906      	bls.n	4389c4 <_vfprintf_r+0xf00>
  4389b6:	2130      	movs	r1, #48	; 0x30
  4389b8:	1c5a      	adds	r2, r3, #1
  4389ba:	921f      	str	r2, [sp, #124]	; 0x7c
  4389bc:	7019      	strb	r1, [r3, #0]
  4389be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4389c0:	429e      	cmp	r6, r3
  4389c2:	d8f9      	bhi.n	4389b8 <_vfprintf_r+0xef4>
  4389c4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4389c6:	1a9b      	subs	r3, r3, r2
  4389c8:	9311      	str	r3, [sp, #68]	; 0x44
  4389ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4389cc:	2b47      	cmp	r3, #71	; 0x47
  4389ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  4389d0:	f000 8179 	beq.w	438cc6 <_vfprintf_r+0x1202>
  4389d4:	2d65      	cmp	r5, #101	; 0x65
  4389d6:	f340 819c 	ble.w	438d12 <_vfprintf_r+0x124e>
  4389da:	2d66      	cmp	r5, #102	; 0x66
  4389dc:	9310      	str	r3, [sp, #64]	; 0x40
  4389de:	f000 8209 	beq.w	438df4 <_vfprintf_r+0x1330>
  4389e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4389e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
  4389e6:	4293      	cmp	r3, r2
  4389e8:	f300 81f7 	bgt.w	438dda <_vfprintf_r+0x1316>
  4389ec:	9b06      	ldr	r3, [sp, #24]
  4389ee:	07d9      	lsls	r1, r3, #31
  4389f0:	f100 8217 	bmi.w	438e22 <_vfprintf_r+0x135e>
  4389f4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4389f8:	920b      	str	r2, [sp, #44]	; 0x2c
  4389fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4389fc:	2a00      	cmp	r2, #0
  4389fe:	f040 8169 	bne.w	438cd4 <_vfprintf_r+0x1210>
  438a02:	9307      	str	r3, [sp, #28]
  438a04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  438a06:	9306      	str	r3, [sp, #24]
  438a08:	920f      	str	r2, [sp, #60]	; 0x3c
  438a0a:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  438a0e:	f7ff b9b1 	b.w	437d74 <_vfprintf_r+0x2b0>
  438a12:	9b06      	ldr	r3, [sp, #24]
  438a14:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  438a16:	f013 0f40 	tst.w	r3, #64	; 0x40
  438a1a:	4613      	mov	r3, r2
  438a1c:	f43f ac84 	beq.w	438328 <_vfprintf_r+0x864>
  438a20:	8816      	ldrh	r6, [r2, #0]
  438a22:	3204      	adds	r2, #4
  438a24:	2700      	movs	r7, #0
  438a26:	2301      	movs	r3, #1
  438a28:	920c      	str	r2, [sp, #48]	; 0x30
  438a2a:	f7ff b969 	b.w	437d00 <_vfprintf_r+0x23c>
  438a2e:	9b06      	ldr	r3, [sp, #24]
  438a30:	06db      	lsls	r3, r3, #27
  438a32:	d40b      	bmi.n	438a4c <_vfprintf_r+0xf88>
  438a34:	9b06      	ldr	r3, [sp, #24]
  438a36:	065f      	lsls	r7, r3, #25
  438a38:	d508      	bpl.n	438a4c <_vfprintf_r+0xf88>
  438a3a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  438a3c:	6813      	ldr	r3, [r2, #0]
  438a3e:	3204      	adds	r2, #4
  438a40:	920c      	str	r2, [sp, #48]	; 0x30
  438a42:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  438a46:	801a      	strh	r2, [r3, #0]
  438a48:	f7ff b87d 	b.w	437b46 <_vfprintf_r+0x82>
  438a4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  438a4e:	6813      	ldr	r3, [r2, #0]
  438a50:	3204      	adds	r2, #4
  438a52:	920c      	str	r2, [sp, #48]	; 0x30
  438a54:	9a09      	ldr	r2, [sp, #36]	; 0x24
  438a56:	601a      	str	r2, [r3, #0]
  438a58:	f7ff b875 	b.w	437b46 <_vfprintf_r+0x82>
  438a5c:	9b06      	ldr	r3, [sp, #24]
  438a5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  438a60:	f013 0f40 	tst.w	r3, #64	; 0x40
  438a64:	4613      	mov	r3, r2
  438a66:	d076      	beq.n	438b56 <_vfprintf_r+0x1092>
  438a68:	3304      	adds	r3, #4
  438a6a:	8816      	ldrh	r6, [r2, #0]
  438a6c:	930c      	str	r3, [sp, #48]	; 0x30
  438a6e:	2700      	movs	r7, #0
  438a70:	f7ff bae4 	b.w	43803c <_vfprintf_r+0x578>
  438a74:	4693      	mov	fp, r2
  438a76:	3301      	adds	r3, #1
  438a78:	44ab      	add	fp, r5
  438a7a:	2b07      	cmp	r3, #7
  438a7c:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  438a80:	9322      	str	r3, [sp, #136]	; 0x88
  438a82:	6027      	str	r7, [r4, #0]
  438a84:	6065      	str	r5, [r4, #4]
  438a86:	f73f ae86 	bgt.w	438796 <_vfprintf_r+0xcd2>
  438a8a:	3408      	adds	r4, #8
  438a8c:	e68e      	b.n	4387ac <_vfprintf_r+0xce8>
  438a8e:	4640      	mov	r0, r8
  438a90:	4649      	mov	r1, r9
  438a92:	aa21      	add	r2, sp, #132	; 0x84
  438a94:	f7fe f9c6 	bl	436e24 <__sprint_r>
  438a98:	2800      	cmp	r0, #0
  438a9a:	f47f a913 	bne.w	437cc4 <_vfprintf_r+0x200>
  438a9e:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  438aa2:	ac2e      	add	r4, sp, #184	; 0xb8
  438aa4:	e48d      	b.n	4383c2 <_vfprintf_r+0x8fe>
  438aa6:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438aa8:	4ab0      	ldr	r2, [pc, #704]	; (438d6c <_vfprintf_r+0x12a8>)
  438aaa:	6022      	str	r2, [r4, #0]
  438aac:	3301      	adds	r3, #1
  438aae:	f10b 0b01 	add.w	fp, fp, #1
  438ab2:	2201      	movs	r2, #1
  438ab4:	2b07      	cmp	r3, #7
  438ab6:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  438aba:	9322      	str	r3, [sp, #136]	; 0x88
  438abc:	6062      	str	r2, [r4, #4]
  438abe:	dc50      	bgt.n	438b62 <_vfprintf_r+0x109e>
  438ac0:	3408      	adds	r4, #8
  438ac2:	b92d      	cbnz	r5, 438ad0 <_vfprintf_r+0x100c>
  438ac4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  438ac6:	b91b      	cbnz	r3, 438ad0 <_vfprintf_r+0x100c>
  438ac8:	9b06      	ldr	r3, [sp, #24]
  438aca:	07de      	lsls	r6, r3, #31
  438acc:	f57f aa17 	bpl.w	437efe <_vfprintf_r+0x43a>
  438ad0:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438ad2:	9916      	ldr	r1, [sp, #88]	; 0x58
  438ad4:	9a15      	ldr	r2, [sp, #84]	; 0x54
  438ad6:	6022      	str	r2, [r4, #0]
  438ad8:	3301      	adds	r3, #1
  438ada:	eb0b 0201 	add.w	r2, fp, r1
  438ade:	2b07      	cmp	r3, #7
  438ae0:	9223      	str	r2, [sp, #140]	; 0x8c
  438ae2:	6061      	str	r1, [r4, #4]
  438ae4:	9322      	str	r3, [sp, #136]	; 0x88
  438ae6:	f300 8168 	bgt.w	438dba <_vfprintf_r+0x12f6>
  438aea:	3408      	adds	r4, #8
  438aec:	426d      	negs	r5, r5
  438aee:	2d00      	cmp	r5, #0
  438af0:	dd6f      	ble.n	438bd2 <_vfprintf_r+0x110e>
  438af2:	2d10      	cmp	r5, #16
  438af4:	4f9e      	ldr	r7, [pc, #632]	; (438d70 <_vfprintf_r+0x12ac>)
  438af6:	bfc8      	it	gt
  438af8:	2610      	movgt	r6, #16
  438afa:	dc05      	bgt.n	438b08 <_vfprintf_r+0x1044>
  438afc:	e0aa      	b.n	438c54 <_vfprintf_r+0x1190>
  438afe:	3408      	adds	r4, #8
  438b00:	3d10      	subs	r5, #16
  438b02:	2d10      	cmp	r5, #16
  438b04:	f340 80a6 	ble.w	438c54 <_vfprintf_r+0x1190>
  438b08:	3301      	adds	r3, #1
  438b0a:	3210      	adds	r2, #16
  438b0c:	2b07      	cmp	r3, #7
  438b0e:	9223      	str	r2, [sp, #140]	; 0x8c
  438b10:	9322      	str	r3, [sp, #136]	; 0x88
  438b12:	6027      	str	r7, [r4, #0]
  438b14:	6066      	str	r6, [r4, #4]
  438b16:	ddf2      	ble.n	438afe <_vfprintf_r+0x103a>
  438b18:	4640      	mov	r0, r8
  438b1a:	4649      	mov	r1, r9
  438b1c:	aa21      	add	r2, sp, #132	; 0x84
  438b1e:	f7fe f981 	bl	436e24 <__sprint_r>
  438b22:	2800      	cmp	r0, #0
  438b24:	f47f a8ce 	bne.w	437cc4 <_vfprintf_r+0x200>
  438b28:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  438b2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438b2c:	ac2e      	add	r4, sp, #184	; 0xb8
  438b2e:	e7e7      	b.n	438b00 <_vfprintf_r+0x103c>
  438b30:	9e06      	ldr	r6, [sp, #24]
  438b32:	4a90      	ldr	r2, [pc, #576]	; (438d74 <_vfprintf_r+0x12b0>)
  438b34:	4b90      	ldr	r3, [pc, #576]	; (438d78 <_vfprintf_r+0x12b4>)
  438b36:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  438b3a:	900f      	str	r0, [sp, #60]	; 0x3c
  438b3c:	2103      	movs	r1, #3
  438b3e:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  438b42:	2d47      	cmp	r5, #71	; 0x47
  438b44:	bfd8      	it	le
  438b46:	461a      	movle	r2, r3
  438b48:	9107      	str	r1, [sp, #28]
  438b4a:	9606      	str	r6, [sp, #24]
  438b4c:	9010      	str	r0, [sp, #64]	; 0x40
  438b4e:	920e      	str	r2, [sp, #56]	; 0x38
  438b50:	910b      	str	r1, [sp, #44]	; 0x2c
  438b52:	f7ff b90f 	b.w	437d74 <_vfprintf_r+0x2b0>
  438b56:	3304      	adds	r3, #4
  438b58:	6816      	ldr	r6, [r2, #0]
  438b5a:	930c      	str	r3, [sp, #48]	; 0x30
  438b5c:	2700      	movs	r7, #0
  438b5e:	f7ff ba6d 	b.w	43803c <_vfprintf_r+0x578>
  438b62:	4640      	mov	r0, r8
  438b64:	4649      	mov	r1, r9
  438b66:	aa21      	add	r2, sp, #132	; 0x84
  438b68:	f7fe f95c 	bl	436e24 <__sprint_r>
  438b6c:	2800      	cmp	r0, #0
  438b6e:	f47f a8a9 	bne.w	437cc4 <_vfprintf_r+0x200>
  438b72:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
  438b74:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  438b78:	ac2e      	add	r4, sp, #184	; 0xb8
  438b7a:	e7a2      	b.n	438ac2 <_vfprintf_r+0xffe>
  438b7c:	f041 0120 	orr.w	r1, r1, #32
  438b80:	9106      	str	r1, [sp, #24]
  438b82:	785d      	ldrb	r5, [r3, #1]
  438b84:	1c59      	adds	r1, r3, #1
  438b86:	f7ff b80e 	b.w	437ba6 <_vfprintf_r+0xe2>
  438b8a:	980a      	ldr	r0, [sp, #40]	; 0x28
  438b8c:	910c      	str	r1, [sp, #48]	; 0x30
  438b8e:	4240      	negs	r0, r0
  438b90:	900a      	str	r0, [sp, #40]	; 0x28
  438b92:	4619      	mov	r1, r3
  438b94:	f7ff ba02 	b.w	437f9c <_vfprintf_r+0x4d8>
  438b98:	4640      	mov	r0, r8
  438b9a:	4649      	mov	r1, r9
  438b9c:	aa21      	add	r2, sp, #132	; 0x84
  438b9e:	f7fe f941 	bl	436e24 <__sprint_r>
  438ba2:	2800      	cmp	r0, #0
  438ba4:	f47f a88e 	bne.w	437cc4 <_vfprintf_r+0x200>
  438ba8:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  438bac:	ac2e      	add	r4, sp, #184	; 0xb8
  438bae:	e41e      	b.n	4383ee <_vfprintf_r+0x92a>
  438bb0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  438bb2:	ab2e      	add	r3, sp, #184	; 0xb8
  438bb4:	1a9b      	subs	r3, r3, r2
  438bb6:	930b      	str	r3, [sp, #44]	; 0x2c
  438bb8:	f7ff b8d4 	b.w	437d64 <_vfprintf_r+0x2a0>
  438bbc:	4640      	mov	r0, r8
  438bbe:	4649      	mov	r1, r9
  438bc0:	aa21      	add	r2, sp, #132	; 0x84
  438bc2:	f7fe f92f 	bl	436e24 <__sprint_r>
  438bc6:	2800      	cmp	r0, #0
  438bc8:	f47f a87c 	bne.w	437cc4 <_vfprintf_r+0x200>
  438bcc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  438bce:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438bd0:	ac2e      	add	r4, sp, #184	; 0xb8
  438bd2:	9811      	ldr	r0, [sp, #68]	; 0x44
  438bd4:	6060      	str	r0, [r4, #4]
  438bd6:	3301      	adds	r3, #1
  438bd8:	eb02 0b00 	add.w	fp, r2, r0
  438bdc:	2b07      	cmp	r3, #7
  438bde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  438be0:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
  438be4:	9322      	str	r3, [sp, #136]	; 0x88
  438be6:	6022      	str	r2, [r4, #0]
  438be8:	f77f a988 	ble.w	437efc <_vfprintf_r+0x438>
  438bec:	e49d      	b.n	43852a <_vfprintf_r+0xa66>
  438bee:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  438bf2:	f7fc fe2f 	bl	435854 <strlen>
  438bf6:	970c      	str	r7, [sp, #48]	; 0x30
  438bf8:	900b      	str	r0, [sp, #44]	; 0x2c
  438bfa:	4603      	mov	r3, r0
  438bfc:	f7ff ba03 	b.w	438006 <_vfprintf_r+0x542>
  438c00:	2003      	movs	r0, #3
  438c02:	a91b      	add	r1, sp, #108	; 0x6c
  438c04:	e88d 0801 	stmia.w	sp, {r0, fp}
  438c08:	9102      	str	r1, [sp, #8]
  438c0a:	a81c      	add	r0, sp, #112	; 0x70
  438c0c:	a91f      	add	r1, sp, #124	; 0x7c
  438c0e:	9003      	str	r0, [sp, #12]
  438c10:	9a07      	ldr	r2, [sp, #28]
  438c12:	9104      	str	r1, [sp, #16]
  438c14:	4653      	mov	r3, sl
  438c16:	4640      	mov	r0, r8
  438c18:	f000 fb06 	bl	439228 <_dtoa_r>
  438c1c:	465f      	mov	r7, fp
  438c1e:	900e      	str	r0, [sp, #56]	; 0x38
  438c20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  438c22:	19de      	adds	r6, r3, r7
  438c24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  438c26:	2b46      	cmp	r3, #70	; 0x46
  438c28:	f47f aeb9 	bne.w	43899e <_vfprintf_r+0xeda>
  438c2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  438c2e:	781b      	ldrb	r3, [r3, #0]
  438c30:	2b30      	cmp	r3, #48	; 0x30
  438c32:	f000 80fc 	beq.w	438e2e <_vfprintf_r+0x136a>
  438c36:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
  438c38:	443e      	add	r6, r7
  438c3a:	e6b0      	b.n	43899e <_vfprintf_r+0xeda>
  438c3c:	4640      	mov	r0, r8
  438c3e:	4649      	mov	r1, r9
  438c40:	aa21      	add	r2, sp, #132	; 0x84
  438c42:	f7fe f8ef 	bl	436e24 <__sprint_r>
  438c46:	2800      	cmp	r0, #0
  438c48:	f47f a83c 	bne.w	437cc4 <_vfprintf_r+0x200>
  438c4c:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  438c50:	ac2e      	add	r4, sp, #184	; 0xb8
  438c52:	e4f4      	b.n	43863e <_vfprintf_r+0xb7a>
  438c54:	3301      	adds	r3, #1
  438c56:	442a      	add	r2, r5
  438c58:	2b07      	cmp	r3, #7
  438c5a:	9223      	str	r2, [sp, #140]	; 0x8c
  438c5c:	9322      	str	r3, [sp, #136]	; 0x88
  438c5e:	6027      	str	r7, [r4, #0]
  438c60:	6065      	str	r5, [r4, #4]
  438c62:	dcab      	bgt.n	438bbc <_vfprintf_r+0x10f8>
  438c64:	3408      	adds	r4, #8
  438c66:	e7b4      	b.n	438bd2 <_vfprintf_r+0x110e>
  438c68:	4640      	mov	r0, r8
  438c6a:	4649      	mov	r1, r9
  438c6c:	aa21      	add	r2, sp, #132	; 0x84
  438c6e:	f7fe f8d9 	bl	436e24 <__sprint_r>
  438c72:	2800      	cmp	r0, #0
  438c74:	f47f a826 	bne.w	437cc4 <_vfprintf_r+0x200>
  438c78:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  438c7a:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  438c7e:	ac2e      	add	r4, sp, #184	; 0xb8
  438c80:	e59f      	b.n	4387c2 <_vfprintf_r+0xcfe>
  438c82:	2e06      	cmp	r6, #6
  438c84:	4633      	mov	r3, r6
  438c86:	bf28      	it	cs
  438c88:	2306      	movcs	r3, #6
  438c8a:	930b      	str	r3, [sp, #44]	; 0x2c
  438c8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  438c90:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
  438c94:	9307      	str	r3, [sp, #28]
  438c96:	4b39      	ldr	r3, [pc, #228]	; (438d7c <_vfprintf_r+0x12b8>)
  438c98:	970c      	str	r7, [sp, #48]	; 0x30
  438c9a:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
  438c9e:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  438ca2:	930e      	str	r3, [sp, #56]	; 0x38
  438ca4:	f7ff b866 	b.w	437d74 <_vfprintf_r+0x2b0>
  438ca8:	4640      	mov	r0, r8
  438caa:	4649      	mov	r1, r9
  438cac:	aa21      	add	r2, sp, #132	; 0x84
  438cae:	f7fe f8b9 	bl	436e24 <__sprint_r>
  438cb2:	2800      	cmp	r0, #0
  438cb4:	f47f a806 	bne.w	437cc4 <_vfprintf_r+0x200>
  438cb8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  438cba:	9a11      	ldr	r2, [sp, #68]	; 0x44
  438cbc:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
  438cc0:	1ad3      	subs	r3, r2, r3
  438cc2:	ac2e      	add	r4, sp, #184	; 0xb8
  438cc4:	e593      	b.n	4387ee <_vfprintf_r+0xd2a>
  438cc6:	1cdf      	adds	r7, r3, #3
  438cc8:	db22      	blt.n	438d10 <_vfprintf_r+0x124c>
  438cca:	459b      	cmp	fp, r3
  438ccc:	db20      	blt.n	438d10 <_vfprintf_r+0x124c>
  438cce:	9310      	str	r3, [sp, #64]	; 0x40
  438cd0:	2567      	movs	r5, #103	; 0x67
  438cd2:	e686      	b.n	4389e2 <_vfprintf_r+0xf1e>
  438cd4:	9307      	str	r3, [sp, #28]
  438cd6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  438cd8:	9306      	str	r3, [sp, #24]
  438cda:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
  438cde:	2300      	movs	r3, #0
  438ce0:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
  438ce4:	930f      	str	r3, [sp, #60]	; 0x3c
  438ce6:	f7ff b848 	b.w	437d7a <_vfprintf_r+0x2b6>
  438cea:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
  438cee:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
  438cf2:	f7ff ba0e 	b.w	438112 <_vfprintf_r+0x64e>
  438cf6:	4633      	mov	r3, r6
  438cf8:	e664      	b.n	4389c4 <_vfprintf_r+0xf00>
  438cfa:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
  438cfe:	900f      	str	r0, [sp, #60]	; 0x3c
  438d00:	970c      	str	r7, [sp, #48]	; 0x30
  438d02:	9010      	str	r0, [sp, #64]	; 0x40
  438d04:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
  438d08:	9307      	str	r3, [sp, #28]
  438d0a:	960b      	str	r6, [sp, #44]	; 0x2c
  438d0c:	f7ff b832 	b.w	437d74 <_vfprintf_r+0x2b0>
  438d10:	3d02      	subs	r5, #2
  438d12:	3b01      	subs	r3, #1
  438d14:	2b00      	cmp	r3, #0
  438d16:	931b      	str	r3, [sp, #108]	; 0x6c
  438d18:	bfba      	itte	lt
  438d1a:	425b      	neglt	r3, r3
  438d1c:	222d      	movlt	r2, #45	; 0x2d
  438d1e:	222b      	movge	r2, #43	; 0x2b
  438d20:	2b09      	cmp	r3, #9
  438d22:	f88d 5074 	strb.w	r5, [sp, #116]	; 0x74
  438d26:	f88d 2075 	strb.w	r2, [sp, #117]	; 0x75
  438d2a:	dd72      	ble.n	438e12 <_vfprintf_r+0x134e>
  438d2c:	f10d 0683 	add.w	r6, sp, #131	; 0x83
  438d30:	4630      	mov	r0, r6
  438d32:	4a13      	ldr	r2, [pc, #76]	; (438d80 <_vfprintf_r+0x12bc>)
  438d34:	fb82 2103 	smull	r2, r1, r2, r3
  438d38:	17da      	asrs	r2, r3, #31
  438d3a:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
  438d3e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
  438d42:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
  438d46:	f103 0130 	add.w	r1, r3, #48	; 0x30
  438d4a:	2a09      	cmp	r2, #9
  438d4c:	4613      	mov	r3, r2
  438d4e:	f800 1d01 	strb.w	r1, [r0, #-1]!
  438d52:	dcee      	bgt.n	438d32 <_vfprintf_r+0x126e>
  438d54:	4602      	mov	r2, r0
  438d56:	3330      	adds	r3, #48	; 0x30
  438d58:	b2d9      	uxtb	r1, r3
  438d5a:	f802 1d01 	strb.w	r1, [r2, #-1]!
  438d5e:	4296      	cmp	r6, r2
  438d60:	f240 80a0 	bls.w	438ea4 <_vfprintf_r+0x13e0>
  438d64:	f10d 0276 	add.w	r2, sp, #118	; 0x76
  438d68:	4603      	mov	r3, r0
  438d6a:	e00d      	b.n	438d88 <_vfprintf_r+0x12c4>
  438d6c:	0043faa4 	.word	0x0043faa4
  438d70:	004404d4 	.word	0x004404d4
  438d74:	00440480 	.word	0x00440480
  438d78:	0044047c 	.word	0x0044047c
  438d7c:	004404ac 	.word	0x004404ac
  438d80:	66666667 	.word	0x66666667
  438d84:	f813 1b01 	ldrb.w	r1, [r3], #1
  438d88:	f802 1b01 	strb.w	r1, [r2], #1
  438d8c:	42b3      	cmp	r3, r6
  438d8e:	d1f9      	bne.n	438d84 <_vfprintf_r+0x12c0>
  438d90:	ab21      	add	r3, sp, #132	; 0x84
  438d92:	1a1b      	subs	r3, r3, r0
  438d94:	f10d 0276 	add.w	r2, sp, #118	; 0x76
  438d98:	4413      	add	r3, r2
  438d9a:	aa1d      	add	r2, sp, #116	; 0x74
  438d9c:	1a9b      	subs	r3, r3, r2
  438d9e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  438da0:	9317      	str	r3, [sp, #92]	; 0x5c
  438da2:	2a01      	cmp	r2, #1
  438da4:	4413      	add	r3, r2
  438da6:	930b      	str	r3, [sp, #44]	; 0x2c
  438da8:	dd6d      	ble.n	438e86 <_vfprintf_r+0x13c2>
  438daa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  438dac:	2200      	movs	r2, #0
  438dae:	3301      	adds	r3, #1
  438db0:	930b      	str	r3, [sp, #44]	; 0x2c
  438db2:	9210      	str	r2, [sp, #64]	; 0x40
  438db4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  438db8:	e61f      	b.n	4389fa <_vfprintf_r+0xf36>
  438dba:	4640      	mov	r0, r8
  438dbc:	4649      	mov	r1, r9
  438dbe:	aa21      	add	r2, sp, #132	; 0x84
  438dc0:	f7fe f830 	bl	436e24 <__sprint_r>
  438dc4:	2800      	cmp	r0, #0
  438dc6:	f47e af7d 	bne.w	437cc4 <_vfprintf_r+0x200>
  438dca:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
  438dcc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  438dce:	9b22      	ldr	r3, [sp, #136]	; 0x88
  438dd0:	ac2e      	add	r4, sp, #184	; 0xb8
  438dd2:	e68b      	b.n	438aec <_vfprintf_r+0x1028>
  438dd4:	f04f 0b06 	mov.w	fp, #6
  438dd8:	e5ab      	b.n	438932 <_vfprintf_r+0xe6e>
  438dda:	9b10      	ldr	r3, [sp, #64]	; 0x40
  438ddc:	2b00      	cmp	r3, #0
  438dde:	bfd8      	it	le
  438de0:	f1c3 0602 	rsble	r6, r3, #2
  438de4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  438de6:	bfc8      	it	gt
  438de8:	2601      	movgt	r6, #1
  438dea:	18f3      	adds	r3, r6, r3
  438dec:	930b      	str	r3, [sp, #44]	; 0x2c
  438dee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  438df2:	e602      	b.n	4389fa <_vfprintf_r+0xf36>
  438df4:	2b00      	cmp	r3, #0
  438df6:	dd30      	ble.n	438e5a <_vfprintf_r+0x1396>
  438df8:	f1bb 0f00 	cmp.w	fp, #0
  438dfc:	d125      	bne.n	438e4a <_vfprintf_r+0x1386>
  438dfe:	9b06      	ldr	r3, [sp, #24]
  438e00:	07de      	lsls	r6, r3, #31
  438e02:	d422      	bmi.n	438e4a <_vfprintf_r+0x1386>
  438e04:	9a10      	ldr	r2, [sp, #64]	; 0x40
  438e06:	920b      	str	r2, [sp, #44]	; 0x2c
  438e08:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  438e0c:	e5f5      	b.n	4389fa <_vfprintf_r+0xf36>
  438e0e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  438e10:	e5d8      	b.n	4389c4 <_vfprintf_r+0xf00>
  438e12:	3330      	adds	r3, #48	; 0x30
  438e14:	2230      	movs	r2, #48	; 0x30
  438e16:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  438e1a:	f88d 2076 	strb.w	r2, [sp, #118]	; 0x76
  438e1e:	ab1e      	add	r3, sp, #120	; 0x78
  438e20:	e7bb      	b.n	438d9a <_vfprintf_r+0x12d6>
  438e22:	9b10      	ldr	r3, [sp, #64]	; 0x40
  438e24:	3301      	adds	r3, #1
  438e26:	930b      	str	r3, [sp, #44]	; 0x2c
  438e28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  438e2c:	e5e5      	b.n	4389fa <_vfprintf_r+0xf36>
  438e2e:	9807      	ldr	r0, [sp, #28]
  438e30:	4651      	mov	r1, sl
  438e32:	2200      	movs	r2, #0
  438e34:	2300      	movs	r3, #0
  438e36:	f7f9 f9f5 	bl	432224 <__aeabi_dcmpeq>
  438e3a:	2800      	cmp	r0, #0
  438e3c:	f47f aefb 	bne.w	438c36 <_vfprintf_r+0x1172>
  438e40:	f1c7 0701 	rsb	r7, r7, #1
  438e44:	971b      	str	r7, [sp, #108]	; 0x6c
  438e46:	443e      	add	r6, r7
  438e48:	e5a9      	b.n	43899e <_vfprintf_r+0xeda>
  438e4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  438e4c:	f10b 0601 	add.w	r6, fp, #1
  438e50:	4433      	add	r3, r6
  438e52:	930b      	str	r3, [sp, #44]	; 0x2c
  438e54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  438e58:	e5cf      	b.n	4389fa <_vfprintf_r+0xf36>
  438e5a:	f1bb 0f00 	cmp.w	fp, #0
  438e5e:	d11b      	bne.n	438e98 <_vfprintf_r+0x13d4>
  438e60:	9b06      	ldr	r3, [sp, #24]
  438e62:	07d8      	lsls	r0, r3, #31
  438e64:	d418      	bmi.n	438e98 <_vfprintf_r+0x13d4>
  438e66:	2301      	movs	r3, #1
  438e68:	930b      	str	r3, [sp, #44]	; 0x2c
  438e6a:	e5c6      	b.n	4389fa <_vfprintf_r+0xf36>
  438e6c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  438e6e:	682e      	ldr	r6, [r5, #0]
  438e70:	4628      	mov	r0, r5
  438e72:	3004      	adds	r0, #4
  438e74:	2e00      	cmp	r6, #0
  438e76:	785d      	ldrb	r5, [r3, #1]
  438e78:	900c      	str	r0, [sp, #48]	; 0x30
  438e7a:	f6be ae94 	bge.w	437ba6 <_vfprintf_r+0xe2>
  438e7e:	f04f 36ff 	mov.w	r6, #4294967295
  438e82:	f7fe be90 	b.w	437ba6 <_vfprintf_r+0xe2>
  438e86:	9b06      	ldr	r3, [sp, #24]
  438e88:	f013 0301 	ands.w	r3, r3, #1
  438e8c:	d18d      	bne.n	438daa <_vfprintf_r+0x12e6>
  438e8e:	9310      	str	r3, [sp, #64]	; 0x40
  438e90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  438e92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  438e96:	e5b0      	b.n	4389fa <_vfprintf_r+0xf36>
  438e98:	f10b 0302 	add.w	r3, fp, #2
  438e9c:	930b      	str	r3, [sp, #44]	; 0x2c
  438e9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  438ea2:	e5aa      	b.n	4389fa <_vfprintf_r+0xf36>
  438ea4:	f10d 0376 	add.w	r3, sp, #118	; 0x76
  438ea8:	e777      	b.n	438d9a <_vfprintf_r+0x12d6>
  438eaa:	bf00      	nop

00438eac <__sbprintf>:
  438eac:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
  438eb0:	460c      	mov	r4, r1
  438eb2:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  438eb6:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  438eba:	69e7      	ldr	r7, [r4, #28]
  438ebc:	6e49      	ldr	r1, [r1, #100]	; 0x64
  438ebe:	f8b4 900e 	ldrh.w	r9, [r4, #14]
  438ec2:	9119      	str	r1, [sp, #100]	; 0x64
  438ec4:	ad1a      	add	r5, sp, #104	; 0x68
  438ec6:	f44f 6680 	mov.w	r6, #1024	; 0x400
  438eca:	f02e 0e02 	bic.w	lr, lr, #2
  438ece:	f04f 0c00 	mov.w	ip, #0
  438ed2:	9707      	str	r7, [sp, #28]
  438ed4:	4669      	mov	r1, sp
  438ed6:	6a67      	ldr	r7, [r4, #36]	; 0x24
  438ed8:	9500      	str	r5, [sp, #0]
  438eda:	9504      	str	r5, [sp, #16]
  438edc:	9602      	str	r6, [sp, #8]
  438ede:	9605      	str	r6, [sp, #20]
  438ee0:	f8ad e00c 	strh.w	lr, [sp, #12]
  438ee4:	f8ad 900e 	strh.w	r9, [sp, #14]
  438ee8:	9709      	str	r7, [sp, #36]	; 0x24
  438eea:	f8cd c018 	str.w	ip, [sp, #24]
  438eee:	4606      	mov	r6, r0
  438ef0:	f7fe fde8 	bl	437ac4 <_vfprintf_r>
  438ef4:	1e05      	subs	r5, r0, #0
  438ef6:	db07      	blt.n	438f08 <__sbprintf+0x5c>
  438ef8:	4630      	mov	r0, r6
  438efa:	4669      	mov	r1, sp
  438efc:	f7fb f86c 	bl	433fd8 <_fflush_r>
  438f00:	2800      	cmp	r0, #0
  438f02:	bf18      	it	ne
  438f04:	f04f 35ff 	movne.w	r5, #4294967295
  438f08:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  438f0c:	065b      	lsls	r3, r3, #25
  438f0e:	d503      	bpl.n	438f18 <__sbprintf+0x6c>
  438f10:	89a3      	ldrh	r3, [r4, #12]
  438f12:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  438f16:	81a3      	strh	r3, [r4, #12]
  438f18:	4628      	mov	r0, r5
  438f1a:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  438f1e:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
  438f22:	bf00      	nop

00438f24 <__swbuf_r>:
  438f24:	b570      	push	{r4, r5, r6, lr}
  438f26:	460d      	mov	r5, r1
  438f28:	4614      	mov	r4, r2
  438f2a:	4606      	mov	r6, r0
  438f2c:	b110      	cbz	r0, 438f34 <__swbuf_r+0x10>
  438f2e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  438f30:	2b00      	cmp	r3, #0
  438f32:	d048      	beq.n	438fc6 <__swbuf_r+0xa2>
  438f34:	89a2      	ldrh	r2, [r4, #12]
  438f36:	69a3      	ldr	r3, [r4, #24]
  438f38:	60a3      	str	r3, [r4, #8]
  438f3a:	b291      	uxth	r1, r2
  438f3c:	0708      	lsls	r0, r1, #28
  438f3e:	d538      	bpl.n	438fb2 <__swbuf_r+0x8e>
  438f40:	6923      	ldr	r3, [r4, #16]
  438f42:	2b00      	cmp	r3, #0
  438f44:	d035      	beq.n	438fb2 <__swbuf_r+0x8e>
  438f46:	0489      	lsls	r1, r1, #18
  438f48:	b2ed      	uxtb	r5, r5
  438f4a:	d515      	bpl.n	438f78 <__swbuf_r+0x54>
  438f4c:	6822      	ldr	r2, [r4, #0]
  438f4e:	6961      	ldr	r1, [r4, #20]
  438f50:	1ad3      	subs	r3, r2, r3
  438f52:	428b      	cmp	r3, r1
  438f54:	da1c      	bge.n	438f90 <__swbuf_r+0x6c>
  438f56:	3301      	adds	r3, #1
  438f58:	68a1      	ldr	r1, [r4, #8]
  438f5a:	1c50      	adds	r0, r2, #1
  438f5c:	3901      	subs	r1, #1
  438f5e:	60a1      	str	r1, [r4, #8]
  438f60:	6020      	str	r0, [r4, #0]
  438f62:	7015      	strb	r5, [r2, #0]
  438f64:	6962      	ldr	r2, [r4, #20]
  438f66:	429a      	cmp	r2, r3
  438f68:	d01a      	beq.n	438fa0 <__swbuf_r+0x7c>
  438f6a:	89a3      	ldrh	r3, [r4, #12]
  438f6c:	07db      	lsls	r3, r3, #31
  438f6e:	d501      	bpl.n	438f74 <__swbuf_r+0x50>
  438f70:	2d0a      	cmp	r5, #10
  438f72:	d015      	beq.n	438fa0 <__swbuf_r+0x7c>
  438f74:	4628      	mov	r0, r5
  438f76:	bd70      	pop	{r4, r5, r6, pc}
  438f78:	6e61      	ldr	r1, [r4, #100]	; 0x64
  438f7a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  438f7e:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  438f82:	81a2      	strh	r2, [r4, #12]
  438f84:	6822      	ldr	r2, [r4, #0]
  438f86:	6661      	str	r1, [r4, #100]	; 0x64
  438f88:	6961      	ldr	r1, [r4, #20]
  438f8a:	1ad3      	subs	r3, r2, r3
  438f8c:	428b      	cmp	r3, r1
  438f8e:	dbe2      	blt.n	438f56 <__swbuf_r+0x32>
  438f90:	4630      	mov	r0, r6
  438f92:	4621      	mov	r1, r4
  438f94:	f7fb f820 	bl	433fd8 <_fflush_r>
  438f98:	b940      	cbnz	r0, 438fac <__swbuf_r+0x88>
  438f9a:	6822      	ldr	r2, [r4, #0]
  438f9c:	2301      	movs	r3, #1
  438f9e:	e7db      	b.n	438f58 <__swbuf_r+0x34>
  438fa0:	4630      	mov	r0, r6
  438fa2:	4621      	mov	r1, r4
  438fa4:	f7fb f818 	bl	433fd8 <_fflush_r>
  438fa8:	2800      	cmp	r0, #0
  438faa:	d0e3      	beq.n	438f74 <__swbuf_r+0x50>
  438fac:	f04f 30ff 	mov.w	r0, #4294967295
  438fb0:	bd70      	pop	{r4, r5, r6, pc}
  438fb2:	4630      	mov	r0, r6
  438fb4:	4621      	mov	r1, r4
  438fb6:	f000 f81d 	bl	438ff4 <__swsetup_r>
  438fba:	2800      	cmp	r0, #0
  438fbc:	d1f6      	bne.n	438fac <__swbuf_r+0x88>
  438fbe:	89a2      	ldrh	r2, [r4, #12]
  438fc0:	6923      	ldr	r3, [r4, #16]
  438fc2:	b291      	uxth	r1, r2
  438fc4:	e7bf      	b.n	438f46 <__swbuf_r+0x22>
  438fc6:	f7fb f89b 	bl	434100 <__sinit>
  438fca:	e7b3      	b.n	438f34 <__swbuf_r+0x10>

00438fcc <_write_r>:
  438fcc:	b570      	push	{r4, r5, r6, lr}
  438fce:	4c08      	ldr	r4, [pc, #32]	; (438ff0 <_write_r+0x24>)
  438fd0:	4606      	mov	r6, r0
  438fd2:	2500      	movs	r5, #0
  438fd4:	4608      	mov	r0, r1
  438fd6:	4611      	mov	r1, r2
  438fd8:	461a      	mov	r2, r3
  438fda:	6025      	str	r5, [r4, #0]
  438fdc:	f7c8 f83a 	bl	401054 <_write>
  438fe0:	1c43      	adds	r3, r0, #1
  438fe2:	d000      	beq.n	438fe6 <_write_r+0x1a>
  438fe4:	bd70      	pop	{r4, r5, r6, pc}
  438fe6:	6823      	ldr	r3, [r4, #0]
  438fe8:	2b00      	cmp	r3, #0
  438fea:	d0fb      	beq.n	438fe4 <_write_r+0x18>
  438fec:	6033      	str	r3, [r6, #0]
  438fee:	bd70      	pop	{r4, r5, r6, pc}
  438ff0:	20002f50 	.word	0x20002f50

00438ff4 <__swsetup_r>:
  438ff4:	b538      	push	{r3, r4, r5, lr}
  438ff6:	4b2f      	ldr	r3, [pc, #188]	; (4390b4 <__swsetup_r+0xc0>)
  438ff8:	681b      	ldr	r3, [r3, #0]
  438ffa:	4605      	mov	r5, r0
  438ffc:	460c      	mov	r4, r1
  438ffe:	b113      	cbz	r3, 439006 <__swsetup_r+0x12>
  439000:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  439002:	2a00      	cmp	r2, #0
  439004:	d036      	beq.n	439074 <__swsetup_r+0x80>
  439006:	89a2      	ldrh	r2, [r4, #12]
  439008:	b293      	uxth	r3, r2
  43900a:	0718      	lsls	r0, r3, #28
  43900c:	d50c      	bpl.n	439028 <__swsetup_r+0x34>
  43900e:	6920      	ldr	r0, [r4, #16]
  439010:	b1a8      	cbz	r0, 43903e <__swsetup_r+0x4a>
  439012:	f013 0201 	ands.w	r2, r3, #1
  439016:	d01e      	beq.n	439056 <__swsetup_r+0x62>
  439018:	6963      	ldr	r3, [r4, #20]
  43901a:	2200      	movs	r2, #0
  43901c:	425b      	negs	r3, r3
  43901e:	61a3      	str	r3, [r4, #24]
  439020:	60a2      	str	r2, [r4, #8]
  439022:	b1f0      	cbz	r0, 439062 <__swsetup_r+0x6e>
  439024:	2000      	movs	r0, #0
  439026:	bd38      	pop	{r3, r4, r5, pc}
  439028:	06d9      	lsls	r1, r3, #27
  43902a:	d53b      	bpl.n	4390a4 <__swsetup_r+0xb0>
  43902c:	0758      	lsls	r0, r3, #29
  43902e:	d425      	bmi.n	43907c <__swsetup_r+0x88>
  439030:	6920      	ldr	r0, [r4, #16]
  439032:	f042 0308 	orr.w	r3, r2, #8
  439036:	81a3      	strh	r3, [r4, #12]
  439038:	b29b      	uxth	r3, r3
  43903a:	2800      	cmp	r0, #0
  43903c:	d1e9      	bne.n	439012 <__swsetup_r+0x1e>
  43903e:	f403 7220 	and.w	r2, r3, #640	; 0x280
  439042:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  439046:	d0e4      	beq.n	439012 <__swsetup_r+0x1e>
  439048:	4628      	mov	r0, r5
  43904a:	4621      	mov	r1, r4
  43904c:	f7fb fbb6 	bl	4347bc <__smakebuf_r>
  439050:	89a3      	ldrh	r3, [r4, #12]
  439052:	6920      	ldr	r0, [r4, #16]
  439054:	e7dd      	b.n	439012 <__swsetup_r+0x1e>
  439056:	0799      	lsls	r1, r3, #30
  439058:	bf58      	it	pl
  43905a:	6962      	ldrpl	r2, [r4, #20]
  43905c:	60a2      	str	r2, [r4, #8]
  43905e:	2800      	cmp	r0, #0
  439060:	d1e0      	bne.n	439024 <__swsetup_r+0x30>
  439062:	89a3      	ldrh	r3, [r4, #12]
  439064:	061a      	lsls	r2, r3, #24
  439066:	d5de      	bpl.n	439026 <__swsetup_r+0x32>
  439068:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  43906c:	81a3      	strh	r3, [r4, #12]
  43906e:	f04f 30ff 	mov.w	r0, #4294967295
  439072:	bd38      	pop	{r3, r4, r5, pc}
  439074:	4618      	mov	r0, r3
  439076:	f7fb f843 	bl	434100 <__sinit>
  43907a:	e7c4      	b.n	439006 <__swsetup_r+0x12>
  43907c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  43907e:	b149      	cbz	r1, 439094 <__swsetup_r+0xa0>
  439080:	f104 0340 	add.w	r3, r4, #64	; 0x40
  439084:	4299      	cmp	r1, r3
  439086:	d003      	beq.n	439090 <__swsetup_r+0x9c>
  439088:	4628      	mov	r0, r5
  43908a:	f7fb f8b9 	bl	434200 <_free_r>
  43908e:	89a2      	ldrh	r2, [r4, #12]
  439090:	2300      	movs	r3, #0
  439092:	6323      	str	r3, [r4, #48]	; 0x30
  439094:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  439098:	2300      	movs	r3, #0
  43909a:	6920      	ldr	r0, [r4, #16]
  43909c:	6063      	str	r3, [r4, #4]
  43909e:	b292      	uxth	r2, r2
  4390a0:	6020      	str	r0, [r4, #0]
  4390a2:	e7c6      	b.n	439032 <__swsetup_r+0x3e>
  4390a4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  4390a8:	2309      	movs	r3, #9
  4390aa:	602b      	str	r3, [r5, #0]
  4390ac:	f04f 30ff 	mov.w	r0, #4294967295
  4390b0:	81a2      	strh	r2, [r4, #12]
  4390b2:	bd38      	pop	{r3, r4, r5, pc}
  4390b4:	200012d0 	.word	0x200012d0

004390b8 <register_fini>:
  4390b8:	4b02      	ldr	r3, [pc, #8]	; (4390c4 <register_fini+0xc>)
  4390ba:	b113      	cbz	r3, 4390c2 <register_fini+0xa>
  4390bc:	4802      	ldr	r0, [pc, #8]	; (4390c8 <register_fini+0x10>)
  4390be:	f000 b805 	b.w	4390cc <atexit>
  4390c2:	4770      	bx	lr
  4390c4:	00000000 	.word	0x00000000
  4390c8:	0043a0bd 	.word	0x0043a0bd

004390cc <atexit>:
  4390cc:	4601      	mov	r1, r0
  4390ce:	2000      	movs	r0, #0
  4390d0:	4602      	mov	r2, r0
  4390d2:	4603      	mov	r3, r0
  4390d4:	f001 bc94 	b.w	43aa00 <__register_exitproc>

004390d8 <_close_r>:
  4390d8:	b538      	push	{r3, r4, r5, lr}
  4390da:	4c07      	ldr	r4, [pc, #28]	; (4390f8 <_close_r+0x20>)
  4390dc:	2300      	movs	r3, #0
  4390de:	4605      	mov	r5, r0
  4390e0:	4608      	mov	r0, r1
  4390e2:	6023      	str	r3, [r4, #0]
  4390e4:	f7c9 ffdc 	bl	4030a0 <_close>
  4390e8:	1c43      	adds	r3, r0, #1
  4390ea:	d000      	beq.n	4390ee <_close_r+0x16>
  4390ec:	bd38      	pop	{r3, r4, r5, pc}
  4390ee:	6823      	ldr	r3, [r4, #0]
  4390f0:	2b00      	cmp	r3, #0
  4390f2:	d0fb      	beq.n	4390ec <_close_r+0x14>
  4390f4:	602b      	str	r3, [r5, #0]
  4390f6:	bd38      	pop	{r3, r4, r5, pc}
  4390f8:	20002f50 	.word	0x20002f50

004390fc <quorem>:
  4390fc:	6902      	ldr	r2, [r0, #16]
  4390fe:	690b      	ldr	r3, [r1, #16]
  439100:	4293      	cmp	r3, r2
  439102:	f300 808f 	bgt.w	439224 <quorem+0x128>
  439106:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43910a:	f103 38ff 	add.w	r8, r3, #4294967295
  43910e:	f101 0714 	add.w	r7, r1, #20
  439112:	f100 0b14 	add.w	fp, r0, #20
  439116:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  43911a:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  43911e:	ea4f 0488 	mov.w	r4, r8, lsl #2
  439122:	b083      	sub	sp, #12
  439124:	3201      	adds	r2, #1
  439126:	fbb3 f9f2 	udiv	r9, r3, r2
  43912a:	eb0b 0304 	add.w	r3, fp, r4
  43912e:	9400      	str	r4, [sp, #0]
  439130:	eb07 0a04 	add.w	sl, r7, r4
  439134:	9301      	str	r3, [sp, #4]
  439136:	f1b9 0f00 	cmp.w	r9, #0
  43913a:	d03b      	beq.n	4391b4 <quorem+0xb8>
  43913c:	2600      	movs	r6, #0
  43913e:	4632      	mov	r2, r6
  439140:	46bc      	mov	ip, r7
  439142:	46de      	mov	lr, fp
  439144:	4634      	mov	r4, r6
  439146:	f85c 6b04 	ldr.w	r6, [ip], #4
  43914a:	f8de 5000 	ldr.w	r5, [lr]
  43914e:	b2b3      	uxth	r3, r6
  439150:	0c36      	lsrs	r6, r6, #16
  439152:	fb03 4409 	mla	r4, r3, r9, r4
  439156:	fb06 f609 	mul.w	r6, r6, r9
  43915a:	eb06 4614 	add.w	r6, r6, r4, lsr #16
  43915e:	b2a3      	uxth	r3, r4
  439160:	1ad3      	subs	r3, r2, r3
  439162:	b2b4      	uxth	r4, r6
  439164:	fa13 f385 	uxtah	r3, r3, r5
  439168:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
  43916c:	eb04 4423 	add.w	r4, r4, r3, asr #16
  439170:	b29b      	uxth	r3, r3
  439172:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
  439176:	45e2      	cmp	sl, ip
  439178:	ea4f 4224 	mov.w	r2, r4, asr #16
  43917c:	f84e 3b04 	str.w	r3, [lr], #4
  439180:	ea4f 4416 	mov.w	r4, r6, lsr #16
  439184:	d2df      	bcs.n	439146 <quorem+0x4a>
  439186:	9b00      	ldr	r3, [sp, #0]
  439188:	f85b 3003 	ldr.w	r3, [fp, r3]
  43918c:	b993      	cbnz	r3, 4391b4 <quorem+0xb8>
  43918e:	9c01      	ldr	r4, [sp, #4]
  439190:	1f23      	subs	r3, r4, #4
  439192:	459b      	cmp	fp, r3
  439194:	d20c      	bcs.n	4391b0 <quorem+0xb4>
  439196:	f854 3c04 	ldr.w	r3, [r4, #-4]
  43919a:	b94b      	cbnz	r3, 4391b0 <quorem+0xb4>
  43919c:	f1a4 0308 	sub.w	r3, r4, #8
  4391a0:	e002      	b.n	4391a8 <quorem+0xac>
  4391a2:	681a      	ldr	r2, [r3, #0]
  4391a4:	3b04      	subs	r3, #4
  4391a6:	b91a      	cbnz	r2, 4391b0 <quorem+0xb4>
  4391a8:	459b      	cmp	fp, r3
  4391aa:	f108 38ff 	add.w	r8, r8, #4294967295
  4391ae:	d3f8      	bcc.n	4391a2 <quorem+0xa6>
  4391b0:	f8c0 8010 	str.w	r8, [r0, #16]
  4391b4:	4604      	mov	r4, r0
  4391b6:	f001 fa3f 	bl	43a638 <__mcmp>
  4391ba:	2800      	cmp	r0, #0
  4391bc:	db2e      	blt.n	43921c <quorem+0x120>
  4391be:	f109 0901 	add.w	r9, r9, #1
  4391c2:	465d      	mov	r5, fp
  4391c4:	2300      	movs	r3, #0
  4391c6:	f857 1b04 	ldr.w	r1, [r7], #4
  4391ca:	6828      	ldr	r0, [r5, #0]
  4391cc:	b28a      	uxth	r2, r1
  4391ce:	1a9a      	subs	r2, r3, r2
  4391d0:	0c09      	lsrs	r1, r1, #16
  4391d2:	fa12 f280 	uxtah	r2, r2, r0
  4391d6:	ebc1 4310 	rsb	r3, r1, r0, lsr #16
  4391da:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4391de:	b291      	uxth	r1, r2
  4391e0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
  4391e4:	45ba      	cmp	sl, r7
  4391e6:	f845 1b04 	str.w	r1, [r5], #4
  4391ea:	ea4f 4323 	mov.w	r3, r3, asr #16
  4391ee:	d2ea      	bcs.n	4391c6 <quorem+0xca>
  4391f0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4391f4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4391f8:	b982      	cbnz	r2, 43921c <quorem+0x120>
  4391fa:	1f1a      	subs	r2, r3, #4
  4391fc:	4593      	cmp	fp, r2
  4391fe:	d20b      	bcs.n	439218 <quorem+0x11c>
  439200:	f853 2c04 	ldr.w	r2, [r3, #-4]
  439204:	b942      	cbnz	r2, 439218 <quorem+0x11c>
  439206:	3b08      	subs	r3, #8
  439208:	e002      	b.n	439210 <quorem+0x114>
  43920a:	681a      	ldr	r2, [r3, #0]
  43920c:	3b04      	subs	r3, #4
  43920e:	b91a      	cbnz	r2, 439218 <quorem+0x11c>
  439210:	459b      	cmp	fp, r3
  439212:	f108 38ff 	add.w	r8, r8, #4294967295
  439216:	d3f8      	bcc.n	43920a <quorem+0x10e>
  439218:	f8c4 8010 	str.w	r8, [r4, #16]
  43921c:	4648      	mov	r0, r9
  43921e:	b003      	add	sp, #12
  439220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  439224:	2000      	movs	r0, #0
  439226:	4770      	bx	lr

00439228 <_dtoa_r>:
  439228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43922c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  43922e:	b097      	sub	sp, #92	; 0x5c
  439230:	4604      	mov	r4, r0
  439232:	9d23      	ldr	r5, [sp, #140]	; 0x8c
  439234:	e9cd 2302 	strd	r2, r3, [sp, #8]
  439238:	b141      	cbz	r1, 43924c <_dtoa_r+0x24>
  43923a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  43923c:	604a      	str	r2, [r1, #4]
  43923e:	2301      	movs	r3, #1
  439240:	4093      	lsls	r3, r2
  439242:	608b      	str	r3, [r1, #8]
  439244:	f001 f814 	bl	43a270 <_Bfree>
  439248:	2300      	movs	r3, #0
  43924a:	6423      	str	r3, [r4, #64]	; 0x40
  43924c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  439250:	2b00      	cmp	r3, #0
  439252:	4699      	mov	r9, r3
  439254:	db36      	blt.n	4392c4 <_dtoa_r+0x9c>
  439256:	2300      	movs	r3, #0
  439258:	602b      	str	r3, [r5, #0]
  43925a:	4ba5      	ldr	r3, [pc, #660]	; (4394f0 <_dtoa_r+0x2c8>)
  43925c:	461a      	mov	r2, r3
  43925e:	ea09 0303 	and.w	r3, r9, r3
  439262:	4293      	cmp	r3, r2
  439264:	d017      	beq.n	439296 <_dtoa_r+0x6e>
  439266:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
  43926a:	2200      	movs	r2, #0
  43926c:	4630      	mov	r0, r6
  43926e:	4639      	mov	r1, r7
  439270:	2300      	movs	r3, #0
  439272:	f7f8 ffd7 	bl	432224 <__aeabi_dcmpeq>
  439276:	4680      	mov	r8, r0
  439278:	2800      	cmp	r0, #0
  43927a:	d02b      	beq.n	4392d4 <_dtoa_r+0xac>
  43927c:	9a22      	ldr	r2, [sp, #136]	; 0x88
  43927e:	2301      	movs	r3, #1
  439280:	6013      	str	r3, [r2, #0]
  439282:	9b24      	ldr	r3, [sp, #144]	; 0x90
  439284:	2b00      	cmp	r3, #0
  439286:	f000 80cb 	beq.w	439420 <_dtoa_r+0x1f8>
  43928a:	489a      	ldr	r0, [pc, #616]	; (4394f4 <_dtoa_r+0x2cc>)
  43928c:	6018      	str	r0, [r3, #0]
  43928e:	3801      	subs	r0, #1
  439290:	b017      	add	sp, #92	; 0x5c
  439292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  439296:	9a22      	ldr	r2, [sp, #136]	; 0x88
  439298:	f242 730f 	movw	r3, #9999	; 0x270f
  43929c:	6013      	str	r3, [r2, #0]
  43929e:	9b02      	ldr	r3, [sp, #8]
  4392a0:	2b00      	cmp	r3, #0
  4392a2:	f000 80a6 	beq.w	4393f2 <_dtoa_r+0x1ca>
  4392a6:	4894      	ldr	r0, [pc, #592]	; (4394f8 <_dtoa_r+0x2d0>)
  4392a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4392aa:	2b00      	cmp	r3, #0
  4392ac:	d0f0      	beq.n	439290 <_dtoa_r+0x68>
  4392ae:	78c3      	ldrb	r3, [r0, #3]
  4392b0:	2b00      	cmp	r3, #0
  4392b2:	f000 80b7 	beq.w	439424 <_dtoa_r+0x1fc>
  4392b6:	f100 0308 	add.w	r3, r0, #8
  4392ba:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4392bc:	6013      	str	r3, [r2, #0]
  4392be:	b017      	add	sp, #92	; 0x5c
  4392c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4392c4:	9a03      	ldr	r2, [sp, #12]
  4392c6:	2301      	movs	r3, #1
  4392c8:	f022 4900 	bic.w	r9, r2, #2147483648	; 0x80000000
  4392cc:	602b      	str	r3, [r5, #0]
  4392ce:	f8cd 900c 	str.w	r9, [sp, #12]
  4392d2:	e7c2      	b.n	43925a <_dtoa_r+0x32>
  4392d4:	aa15      	add	r2, sp, #84	; 0x54
  4392d6:	ab14      	add	r3, sp, #80	; 0x50
  4392d8:	e88d 000c 	stmia.w	sp, {r2, r3}
  4392dc:	4620      	mov	r0, r4
  4392de:	4632      	mov	r2, r6
  4392e0:	463b      	mov	r3, r7
  4392e2:	f001 fa37 	bl	43a754 <__d2b>
  4392e6:	ea5f 5519 	movs.w	r5, r9, lsr #20
  4392ea:	4683      	mov	fp, r0
  4392ec:	f040 808a 	bne.w	439404 <_dtoa_r+0x1dc>
  4392f0:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
  4392f4:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4392f6:	f46f 6382 	mvn.w	r3, #1040	; 0x410
  4392fa:	4445      	add	r5, r8
  4392fc:	429d      	cmp	r5, r3
  4392fe:	f2c0 8297 	blt.w	439830 <_dtoa_r+0x608>
  439302:	4a7e      	ldr	r2, [pc, #504]	; (4394fc <_dtoa_r+0x2d4>)
  439304:	1b52      	subs	r2, r2, r5
  439306:	fa09 f902 	lsl.w	r9, r9, r2
  43930a:	9a02      	ldr	r2, [sp, #8]
  43930c:	f205 4312 	addw	r3, r5, #1042	; 0x412
  439310:	fa22 f003 	lsr.w	r0, r2, r3
  439314:	ea49 0000 	orr.w	r0, r9, r0
  439318:	f7f8 fca6 	bl	431c68 <__aeabi_ui2d>
  43931c:	2301      	movs	r3, #1
  43931e:	3d01      	subs	r5, #1
  439320:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  439324:	930d      	str	r3, [sp, #52]	; 0x34
  439326:	2200      	movs	r2, #0
  439328:	4b75      	ldr	r3, [pc, #468]	; (439500 <_dtoa_r+0x2d8>)
  43932a:	f7f8 fb5f 	bl	4319ec <__aeabi_dsub>
  43932e:	a36a      	add	r3, pc, #424	; (adr r3, 4394d8 <_dtoa_r+0x2b0>)
  439330:	e9d3 2300 	ldrd	r2, r3, [r3]
  439334:	f7f8 fd0e 	bl	431d54 <__aeabi_dmul>
  439338:	a369      	add	r3, pc, #420	; (adr r3, 4394e0 <_dtoa_r+0x2b8>)
  43933a:	e9d3 2300 	ldrd	r2, r3, [r3]
  43933e:	f7f8 fb57 	bl	4319f0 <__adddf3>
  439342:	4606      	mov	r6, r0
  439344:	4628      	mov	r0, r5
  439346:	460f      	mov	r7, r1
  439348:	f7f8 fc9e 	bl	431c88 <__aeabi_i2d>
  43934c:	a366      	add	r3, pc, #408	; (adr r3, 4394e8 <_dtoa_r+0x2c0>)
  43934e:	e9d3 2300 	ldrd	r2, r3, [r3]
  439352:	f7f8 fcff 	bl	431d54 <__aeabi_dmul>
  439356:	4602      	mov	r2, r0
  439358:	460b      	mov	r3, r1
  43935a:	4630      	mov	r0, r6
  43935c:	4639      	mov	r1, r7
  43935e:	f7f8 fb47 	bl	4319f0 <__adddf3>
  439362:	4606      	mov	r6, r0
  439364:	460f      	mov	r7, r1
  439366:	f7f8 ff8f 	bl	432288 <__aeabi_d2iz>
  43936a:	4639      	mov	r1, r7
  43936c:	9004      	str	r0, [sp, #16]
  43936e:	2200      	movs	r2, #0
  439370:	4630      	mov	r0, r6
  439372:	2300      	movs	r3, #0
  439374:	f7f8 ff60 	bl	432238 <__aeabi_dcmplt>
  439378:	2800      	cmp	r0, #0
  43937a:	f040 81a6 	bne.w	4396ca <_dtoa_r+0x4a2>
  43937e:	9b04      	ldr	r3, [sp, #16]
  439380:	2b16      	cmp	r3, #22
  439382:	f200 819f 	bhi.w	4396c4 <_dtoa_r+0x49c>
  439386:	9a04      	ldr	r2, [sp, #16]
  439388:	4b5e      	ldr	r3, [pc, #376]	; (439504 <_dtoa_r+0x2dc>)
  43938a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  43938e:	e9d3 0100 	ldrd	r0, r1, [r3]
  439392:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  439396:	f7f8 ff6d 	bl	432274 <__aeabi_dcmpgt>
  43939a:	2800      	cmp	r0, #0
  43939c:	f000 824e 	beq.w	43983c <_dtoa_r+0x614>
  4393a0:	9b04      	ldr	r3, [sp, #16]
  4393a2:	3b01      	subs	r3, #1
  4393a4:	9304      	str	r3, [sp, #16]
  4393a6:	2300      	movs	r3, #0
  4393a8:	930b      	str	r3, [sp, #44]	; 0x2c
  4393aa:	ebc5 0508 	rsb	r5, r5, r8
  4393ae:	f1b5 0a01 	subs.w	sl, r5, #1
  4393b2:	f100 81a1 	bmi.w	4396f8 <_dtoa_r+0x4d0>
  4393b6:	2300      	movs	r3, #0
  4393b8:	9305      	str	r3, [sp, #20]
  4393ba:	9b04      	ldr	r3, [sp, #16]
  4393bc:	2b00      	cmp	r3, #0
  4393be:	f2c0 8192 	blt.w	4396e6 <_dtoa_r+0x4be>
  4393c2:	449a      	add	sl, r3
  4393c4:	930a      	str	r3, [sp, #40]	; 0x28
  4393c6:	2300      	movs	r3, #0
  4393c8:	9308      	str	r3, [sp, #32]
  4393ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4393cc:	2b09      	cmp	r3, #9
  4393ce:	d82b      	bhi.n	439428 <_dtoa_r+0x200>
  4393d0:	2b05      	cmp	r3, #5
  4393d2:	f340 8670 	ble.w	43a0b6 <_dtoa_r+0xe8e>
  4393d6:	3b04      	subs	r3, #4
  4393d8:	9320      	str	r3, [sp, #128]	; 0x80
  4393da:	2500      	movs	r5, #0
  4393dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4393de:	3b02      	subs	r3, #2
  4393e0:	2b03      	cmp	r3, #3
  4393e2:	f200 864e 	bhi.w	43a082 <_dtoa_r+0xe5a>
  4393e6:	e8df f013 	tbh	[pc, r3, lsl #1]
  4393ea:	03cc      	.short	0x03cc
  4393ec:	02b203be 	.word	0x02b203be
  4393f0:	0663      	.short	0x0663
  4393f2:	4b41      	ldr	r3, [pc, #260]	; (4394f8 <_dtoa_r+0x2d0>)
  4393f4:	4a44      	ldr	r2, [pc, #272]	; (439508 <_dtoa_r+0x2e0>)
  4393f6:	f3c9 0013 	ubfx	r0, r9, #0, #20
  4393fa:	2800      	cmp	r0, #0
  4393fc:	bf14      	ite	ne
  4393fe:	4618      	movne	r0, r3
  439400:	4610      	moveq	r0, r2
  439402:	e751      	b.n	4392a8 <_dtoa_r+0x80>
  439404:	f3c7 0313 	ubfx	r3, r7, #0, #20
  439408:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
  43940c:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  439410:	4630      	mov	r0, r6
  439412:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
  439416:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  43941a:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
  43941e:	e782      	b.n	439326 <_dtoa_r+0xfe>
  439420:	483a      	ldr	r0, [pc, #232]	; (43950c <_dtoa_r+0x2e4>)
  439422:	e735      	b.n	439290 <_dtoa_r+0x68>
  439424:	1cc3      	adds	r3, r0, #3
  439426:	e748      	b.n	4392ba <_dtoa_r+0x92>
  439428:	2100      	movs	r1, #0
  43942a:	6461      	str	r1, [r4, #68]	; 0x44
  43942c:	4620      	mov	r0, r4
  43942e:	9120      	str	r1, [sp, #128]	; 0x80
  439430:	f000 fef8 	bl	43a224 <_Balloc>
  439434:	f04f 33ff 	mov.w	r3, #4294967295
  439438:	9306      	str	r3, [sp, #24]
  43943a:	9a20      	ldr	r2, [sp, #128]	; 0x80
  43943c:	930c      	str	r3, [sp, #48]	; 0x30
  43943e:	2301      	movs	r3, #1
  439440:	9007      	str	r0, [sp, #28]
  439442:	9221      	str	r2, [sp, #132]	; 0x84
  439444:	6420      	str	r0, [r4, #64]	; 0x40
  439446:	9309      	str	r3, [sp, #36]	; 0x24
  439448:	9b15      	ldr	r3, [sp, #84]	; 0x54
  43944a:	2b00      	cmp	r3, #0
  43944c:	f2c0 80d2 	blt.w	4395f4 <_dtoa_r+0x3cc>
  439450:	9a04      	ldr	r2, [sp, #16]
  439452:	2a0e      	cmp	r2, #14
  439454:	f300 80ce 	bgt.w	4395f4 <_dtoa_r+0x3cc>
  439458:	4b2a      	ldr	r3, [pc, #168]	; (439504 <_dtoa_r+0x2dc>)
  43945a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  43945e:	e9d3 8900 	ldrd	r8, r9, [r3]
  439462:	9b21      	ldr	r3, [sp, #132]	; 0x84
  439464:	2b00      	cmp	r3, #0
  439466:	f2c0 838f 	blt.w	439b88 <_dtoa_r+0x960>
  43946a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
  43946e:	4642      	mov	r2, r8
  439470:	464b      	mov	r3, r9
  439472:	4630      	mov	r0, r6
  439474:	4639      	mov	r1, r7
  439476:	f7f8 fd97 	bl	431fa8 <__aeabi_ddiv>
  43947a:	f7f8 ff05 	bl	432288 <__aeabi_d2iz>
  43947e:	4682      	mov	sl, r0
  439480:	f7f8 fc02 	bl	431c88 <__aeabi_i2d>
  439484:	4642      	mov	r2, r8
  439486:	464b      	mov	r3, r9
  439488:	f7f8 fc64 	bl	431d54 <__aeabi_dmul>
  43948c:	460b      	mov	r3, r1
  43948e:	4602      	mov	r2, r0
  439490:	4639      	mov	r1, r7
  439492:	4630      	mov	r0, r6
  439494:	f7f8 faaa 	bl	4319ec <__aeabi_dsub>
  439498:	9d07      	ldr	r5, [sp, #28]
  43949a:	f10a 0330 	add.w	r3, sl, #48	; 0x30
  43949e:	702b      	strb	r3, [r5, #0]
  4394a0:	9b06      	ldr	r3, [sp, #24]
  4394a2:	2b01      	cmp	r3, #1
  4394a4:	4606      	mov	r6, r0
  4394a6:	460f      	mov	r7, r1
  4394a8:	f105 0501 	add.w	r5, r5, #1
  4394ac:	d062      	beq.n	439574 <_dtoa_r+0x34c>
  4394ae:	2200      	movs	r2, #0
  4394b0:	4b17      	ldr	r3, [pc, #92]	; (439510 <_dtoa_r+0x2e8>)
  4394b2:	f7f8 fc4f 	bl	431d54 <__aeabi_dmul>
  4394b6:	2200      	movs	r2, #0
  4394b8:	2300      	movs	r3, #0
  4394ba:	4606      	mov	r6, r0
  4394bc:	460f      	mov	r7, r1
  4394be:	f7f8 feb1 	bl	432224 <__aeabi_dcmpeq>
  4394c2:	2800      	cmp	r0, #0
  4394c4:	f040 8083 	bne.w	4395ce <_dtoa_r+0x3a6>
  4394c8:	f8cd b008 	str.w	fp, [sp, #8]
  4394cc:	9405      	str	r4, [sp, #20]
  4394ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4394d2:	9c06      	ldr	r4, [sp, #24]
  4394d4:	e029      	b.n	43952a <_dtoa_r+0x302>
  4394d6:	bf00      	nop
  4394d8:	636f4361 	.word	0x636f4361
  4394dc:	3fd287a7 	.word	0x3fd287a7
  4394e0:	8b60c8b3 	.word	0x8b60c8b3
  4394e4:	3fc68a28 	.word	0x3fc68a28
  4394e8:	509f79fb 	.word	0x509f79fb
  4394ec:	3fd34413 	.word	0x3fd34413
  4394f0:	7ff00000 	.word	0x7ff00000
  4394f4:	0043faa5 	.word	0x0043faa5
  4394f8:	00440500 	.word	0x00440500
  4394fc:	fffffc0e 	.word	0xfffffc0e
  439500:	3ff80000 	.word	0x3ff80000
  439504:	00440510 	.word	0x00440510
  439508:	004404f4 	.word	0x004404f4
  43950c:	0043faa4 	.word	0x0043faa4
  439510:	40240000 	.word	0x40240000
  439514:	f7f8 fc1e 	bl	431d54 <__aeabi_dmul>
  439518:	2200      	movs	r2, #0
  43951a:	2300      	movs	r3, #0
  43951c:	4606      	mov	r6, r0
  43951e:	460f      	mov	r7, r1
  439520:	f7f8 fe80 	bl	432224 <__aeabi_dcmpeq>
  439524:	2800      	cmp	r0, #0
  439526:	f040 83de 	bne.w	439ce6 <_dtoa_r+0xabe>
  43952a:	4642      	mov	r2, r8
  43952c:	464b      	mov	r3, r9
  43952e:	4630      	mov	r0, r6
  439530:	4639      	mov	r1, r7
  439532:	f7f8 fd39 	bl	431fa8 <__aeabi_ddiv>
  439536:	f7f8 fea7 	bl	432288 <__aeabi_d2iz>
  43953a:	4682      	mov	sl, r0
  43953c:	f7f8 fba4 	bl	431c88 <__aeabi_i2d>
  439540:	4642      	mov	r2, r8
  439542:	464b      	mov	r3, r9
  439544:	f7f8 fc06 	bl	431d54 <__aeabi_dmul>
  439548:	4602      	mov	r2, r0
  43954a:	460b      	mov	r3, r1
  43954c:	4630      	mov	r0, r6
  43954e:	4639      	mov	r1, r7
  439550:	f7f8 fa4c 	bl	4319ec <__aeabi_dsub>
  439554:	f10a 0e30 	add.w	lr, sl, #48	; 0x30
  439558:	f805 eb01 	strb.w	lr, [r5], #1
  43955c:	ebcb 0e05 	rsb	lr, fp, r5
  439560:	4574      	cmp	r4, lr
  439562:	4606      	mov	r6, r0
  439564:	460f      	mov	r7, r1
  439566:	f04f 0200 	mov.w	r2, #0
  43956a:	4bb5      	ldr	r3, [pc, #724]	; (439840 <_dtoa_r+0x618>)
  43956c:	d1d2      	bne.n	439514 <_dtoa_r+0x2ec>
  43956e:	f8dd b008 	ldr.w	fp, [sp, #8]
  439572:	9c05      	ldr	r4, [sp, #20]
  439574:	4632      	mov	r2, r6
  439576:	463b      	mov	r3, r7
  439578:	4630      	mov	r0, r6
  43957a:	4639      	mov	r1, r7
  43957c:	f7f8 fa38 	bl	4319f0 <__adddf3>
  439580:	4606      	mov	r6, r0
  439582:	460f      	mov	r7, r1
  439584:	4640      	mov	r0, r8
  439586:	4649      	mov	r1, r9
  439588:	4632      	mov	r2, r6
  43958a:	463b      	mov	r3, r7
  43958c:	f7f8 fe54 	bl	432238 <__aeabi_dcmplt>
  439590:	b948      	cbnz	r0, 4395a6 <_dtoa_r+0x37e>
  439592:	4640      	mov	r0, r8
  439594:	4649      	mov	r1, r9
  439596:	4632      	mov	r2, r6
  439598:	463b      	mov	r3, r7
  43959a:	f7f8 fe43 	bl	432224 <__aeabi_dcmpeq>
  43959e:	b1b0      	cbz	r0, 4395ce <_dtoa_r+0x3a6>
  4395a0:	f01a 0f01 	tst.w	sl, #1
  4395a4:	d013      	beq.n	4395ce <_dtoa_r+0x3a6>
  4395a6:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4395aa:	9907      	ldr	r1, [sp, #28]
  4395ac:	1e6b      	subs	r3, r5, #1
  4395ae:	e004      	b.n	4395ba <_dtoa_r+0x392>
  4395b0:	428b      	cmp	r3, r1
  4395b2:	f000 8440 	beq.w	439e36 <_dtoa_r+0xc0e>
  4395b6:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4395ba:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4395be:	f103 0501 	add.w	r5, r3, #1
  4395c2:	461a      	mov	r2, r3
  4395c4:	d0f4      	beq.n	4395b0 <_dtoa_r+0x388>
  4395c6:	f108 0301 	add.w	r3, r8, #1
  4395ca:	b2db      	uxtb	r3, r3
  4395cc:	7013      	strb	r3, [r2, #0]
  4395ce:	4620      	mov	r0, r4
  4395d0:	4659      	mov	r1, fp
  4395d2:	f000 fe4d 	bl	43a270 <_Bfree>
  4395d6:	2200      	movs	r2, #0
  4395d8:	9b04      	ldr	r3, [sp, #16]
  4395da:	702a      	strb	r2, [r5, #0]
  4395dc:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4395de:	3301      	adds	r3, #1
  4395e0:	6013      	str	r3, [r2, #0]
  4395e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4395e4:	2b00      	cmp	r3, #0
  4395e6:	f000 8345 	beq.w	439c74 <_dtoa_r+0xa4c>
  4395ea:	9807      	ldr	r0, [sp, #28]
  4395ec:	601d      	str	r5, [r3, #0]
  4395ee:	b017      	add	sp, #92	; 0x5c
  4395f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4395f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4395f6:	2a00      	cmp	r2, #0
  4395f8:	f000 8084 	beq.w	439704 <_dtoa_r+0x4dc>
  4395fc:	9a20      	ldr	r2, [sp, #128]	; 0x80
  4395fe:	2a01      	cmp	r2, #1
  439600:	f340 8304 	ble.w	439c0c <_dtoa_r+0x9e4>
  439604:	9b06      	ldr	r3, [sp, #24]
  439606:	1e5f      	subs	r7, r3, #1
  439608:	9b08      	ldr	r3, [sp, #32]
  43960a:	42bb      	cmp	r3, r7
  43960c:	f2c0 83a9 	blt.w	439d62 <_dtoa_r+0xb3a>
  439610:	1bdf      	subs	r7, r3, r7
  439612:	9b06      	ldr	r3, [sp, #24]
  439614:	2b00      	cmp	r3, #0
  439616:	f2c0 849c 	blt.w	439f52 <_dtoa_r+0xd2a>
  43961a:	9d05      	ldr	r5, [sp, #20]
  43961c:	9b06      	ldr	r3, [sp, #24]
  43961e:	9a05      	ldr	r2, [sp, #20]
  439620:	4620      	mov	r0, r4
  439622:	441a      	add	r2, r3
  439624:	2101      	movs	r1, #1
  439626:	9205      	str	r2, [sp, #20]
  439628:	449a      	add	sl, r3
  43962a:	f000 febb 	bl	43a3a4 <__i2b>
  43962e:	4606      	mov	r6, r0
  439630:	b165      	cbz	r5, 43964c <_dtoa_r+0x424>
  439632:	f1ba 0f00 	cmp.w	sl, #0
  439636:	dd09      	ble.n	43964c <_dtoa_r+0x424>
  439638:	45aa      	cmp	sl, r5
  43963a:	9a05      	ldr	r2, [sp, #20]
  43963c:	4653      	mov	r3, sl
  43963e:	bfa8      	it	ge
  439640:	462b      	movge	r3, r5
  439642:	1ad2      	subs	r2, r2, r3
  439644:	9205      	str	r2, [sp, #20]
  439646:	1aed      	subs	r5, r5, r3
  439648:	ebc3 0a0a 	rsb	sl, r3, sl
  43964c:	9b08      	ldr	r3, [sp, #32]
  43964e:	2b00      	cmp	r3, #0
  439650:	dd1a      	ble.n	439688 <_dtoa_r+0x460>
  439652:	9b09      	ldr	r3, [sp, #36]	; 0x24
  439654:	2b00      	cmp	r3, #0
  439656:	f000 837d 	beq.w	439d54 <_dtoa_r+0xb2c>
  43965a:	2f00      	cmp	r7, #0
  43965c:	dd10      	ble.n	439680 <_dtoa_r+0x458>
  43965e:	4631      	mov	r1, r6
  439660:	463a      	mov	r2, r7
  439662:	4620      	mov	r0, r4
  439664:	f000 ff42 	bl	43a4ec <__pow5mult>
  439668:	4606      	mov	r6, r0
  43966a:	465a      	mov	r2, fp
  43966c:	4631      	mov	r1, r6
  43966e:	4620      	mov	r0, r4
  439670:	f000 fea2 	bl	43a3b8 <__multiply>
  439674:	4659      	mov	r1, fp
  439676:	4680      	mov	r8, r0
  439678:	4620      	mov	r0, r4
  43967a:	f000 fdf9 	bl	43a270 <_Bfree>
  43967e:	46c3      	mov	fp, r8
  439680:	9b08      	ldr	r3, [sp, #32]
  439682:	1bda      	subs	r2, r3, r7
  439684:	f040 82a2 	bne.w	439bcc <_dtoa_r+0x9a4>
  439688:	4620      	mov	r0, r4
  43968a:	2101      	movs	r1, #1
  43968c:	f000 fe8a 	bl	43a3a4 <__i2b>
  439690:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  439692:	2b00      	cmp	r3, #0
  439694:	4680      	mov	r8, r0
  439696:	dd39      	ble.n	43970c <_dtoa_r+0x4e4>
  439698:	4601      	mov	r1, r0
  43969a:	461a      	mov	r2, r3
  43969c:	4620      	mov	r0, r4
  43969e:	f000 ff25 	bl	43a4ec <__pow5mult>
  4396a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4396a4:	2b01      	cmp	r3, #1
  4396a6:	4680      	mov	r8, r0
  4396a8:	f340 8296 	ble.w	439bd8 <_dtoa_r+0x9b0>
  4396ac:	f04f 0900 	mov.w	r9, #0
  4396b0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4396b4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4396b8:	6918      	ldr	r0, [r3, #16]
  4396ba:	f000 fe25 	bl	43a308 <__hi0bits>
  4396be:	f1c0 0020 	rsb	r0, r0, #32
  4396c2:	e02d      	b.n	439720 <_dtoa_r+0x4f8>
  4396c4:	2301      	movs	r3, #1
  4396c6:	930b      	str	r3, [sp, #44]	; 0x2c
  4396c8:	e66f      	b.n	4393aa <_dtoa_r+0x182>
  4396ca:	9804      	ldr	r0, [sp, #16]
  4396cc:	f7f8 fadc 	bl	431c88 <__aeabi_i2d>
  4396d0:	4632      	mov	r2, r6
  4396d2:	463b      	mov	r3, r7
  4396d4:	f7f8 fda6 	bl	432224 <__aeabi_dcmpeq>
  4396d8:	2800      	cmp	r0, #0
  4396da:	f47f ae50 	bne.w	43937e <_dtoa_r+0x156>
  4396de:	9b04      	ldr	r3, [sp, #16]
  4396e0:	3b01      	subs	r3, #1
  4396e2:	9304      	str	r3, [sp, #16]
  4396e4:	e64b      	b.n	43937e <_dtoa_r+0x156>
  4396e6:	9a05      	ldr	r2, [sp, #20]
  4396e8:	9b04      	ldr	r3, [sp, #16]
  4396ea:	1ad2      	subs	r2, r2, r3
  4396ec:	425b      	negs	r3, r3
  4396ee:	9308      	str	r3, [sp, #32]
  4396f0:	2300      	movs	r3, #0
  4396f2:	9205      	str	r2, [sp, #20]
  4396f4:	930a      	str	r3, [sp, #40]	; 0x28
  4396f6:	e668      	b.n	4393ca <_dtoa_r+0x1a2>
  4396f8:	f1ca 0300 	rsb	r3, sl, #0
  4396fc:	9305      	str	r3, [sp, #20]
  4396fe:	f04f 0a00 	mov.w	sl, #0
  439702:	e65a      	b.n	4393ba <_dtoa_r+0x192>
  439704:	9f08      	ldr	r7, [sp, #32]
  439706:	9d05      	ldr	r5, [sp, #20]
  439708:	9e09      	ldr	r6, [sp, #36]	; 0x24
  43970a:	e791      	b.n	439630 <_dtoa_r+0x408>
  43970c:	9b20      	ldr	r3, [sp, #128]	; 0x80
  43970e:	2b01      	cmp	r3, #1
  439710:	f340 82b3 	ble.w	439c7a <_dtoa_r+0xa52>
  439714:	f04f 0900 	mov.w	r9, #0
  439718:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  43971a:	2b00      	cmp	r3, #0
  43971c:	d1c8      	bne.n	4396b0 <_dtoa_r+0x488>
  43971e:	2001      	movs	r0, #1
  439720:	4450      	add	r0, sl
  439722:	f010 001f 	ands.w	r0, r0, #31
  439726:	f000 8081 	beq.w	43982c <_dtoa_r+0x604>
  43972a:	f1c0 0320 	rsb	r3, r0, #32
  43972e:	2b04      	cmp	r3, #4
  439730:	f340 84b8 	ble.w	43a0a4 <_dtoa_r+0xe7c>
  439734:	f1c0 001c 	rsb	r0, r0, #28
  439738:	9b05      	ldr	r3, [sp, #20]
  43973a:	4403      	add	r3, r0
  43973c:	9305      	str	r3, [sp, #20]
  43973e:	4405      	add	r5, r0
  439740:	4482      	add	sl, r0
  439742:	9b05      	ldr	r3, [sp, #20]
  439744:	2b00      	cmp	r3, #0
  439746:	dd05      	ble.n	439754 <_dtoa_r+0x52c>
  439748:	4659      	mov	r1, fp
  43974a:	461a      	mov	r2, r3
  43974c:	4620      	mov	r0, r4
  43974e:	f000 ff1d 	bl	43a58c <__lshift>
  439752:	4683      	mov	fp, r0
  439754:	f1ba 0f00 	cmp.w	sl, #0
  439758:	dd05      	ble.n	439766 <_dtoa_r+0x53e>
  43975a:	4641      	mov	r1, r8
  43975c:	4652      	mov	r2, sl
  43975e:	4620      	mov	r0, r4
  439760:	f000 ff14 	bl	43a58c <__lshift>
  439764:	4680      	mov	r8, r0
  439766:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  439768:	2b00      	cmp	r3, #0
  43976a:	f040 8268 	bne.w	439c3e <_dtoa_r+0xa16>
  43976e:	9b06      	ldr	r3, [sp, #24]
  439770:	2b00      	cmp	r3, #0
  439772:	f340 8295 	ble.w	439ca0 <_dtoa_r+0xa78>
  439776:	9b09      	ldr	r3, [sp, #36]	; 0x24
  439778:	2b00      	cmp	r3, #0
  43977a:	d171      	bne.n	439860 <_dtoa_r+0x638>
  43977c:	f8dd 901c 	ldr.w	r9, [sp, #28]
  439780:	9f06      	ldr	r7, [sp, #24]
  439782:	464d      	mov	r5, r9
  439784:	e002      	b.n	43978c <_dtoa_r+0x564>
  439786:	f000 fd7d 	bl	43a284 <__multadd>
  43978a:	4683      	mov	fp, r0
  43978c:	4641      	mov	r1, r8
  43978e:	4658      	mov	r0, fp
  439790:	f7ff fcb4 	bl	4390fc <quorem>
  439794:	f100 0c30 	add.w	ip, r0, #48	; 0x30
  439798:	f805 cb01 	strb.w	ip, [r5], #1
  43979c:	ebc9 0305 	rsb	r3, r9, r5
  4397a0:	42bb      	cmp	r3, r7
  4397a2:	4620      	mov	r0, r4
  4397a4:	4659      	mov	r1, fp
  4397a6:	f04f 020a 	mov.w	r2, #10
  4397aa:	f04f 0300 	mov.w	r3, #0
  4397ae:	dbea      	blt.n	439786 <_dtoa_r+0x55e>
  4397b0:	9b07      	ldr	r3, [sp, #28]
  4397b2:	9a06      	ldr	r2, [sp, #24]
  4397b4:	2a01      	cmp	r2, #1
  4397b6:	bfac      	ite	ge
  4397b8:	189b      	addge	r3, r3, r2
  4397ba:	3301      	addlt	r3, #1
  4397bc:	461d      	mov	r5, r3
  4397be:	f04f 0a00 	mov.w	sl, #0
  4397c2:	4659      	mov	r1, fp
  4397c4:	2201      	movs	r2, #1
  4397c6:	4620      	mov	r0, r4
  4397c8:	f8cd c008 	str.w	ip, [sp, #8]
  4397cc:	f000 fede 	bl	43a58c <__lshift>
  4397d0:	4641      	mov	r1, r8
  4397d2:	4683      	mov	fp, r0
  4397d4:	f000 ff30 	bl	43a638 <__mcmp>
  4397d8:	2800      	cmp	r0, #0
  4397da:	f8dd c008 	ldr.w	ip, [sp, #8]
  4397de:	f340 82f6 	ble.w	439dce <_dtoa_r+0xba6>
  4397e2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4397e6:	9907      	ldr	r1, [sp, #28]
  4397e8:	1e6b      	subs	r3, r5, #1
  4397ea:	e004      	b.n	4397f6 <_dtoa_r+0x5ce>
  4397ec:	428b      	cmp	r3, r1
  4397ee:	f000 8273 	beq.w	439cd8 <_dtoa_r+0xab0>
  4397f2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4397f6:	2a39      	cmp	r2, #57	; 0x39
  4397f8:	f103 0501 	add.w	r5, r3, #1
  4397fc:	d0f6      	beq.n	4397ec <_dtoa_r+0x5c4>
  4397fe:	3201      	adds	r2, #1
  439800:	701a      	strb	r2, [r3, #0]
  439802:	4641      	mov	r1, r8
  439804:	4620      	mov	r0, r4
  439806:	f000 fd33 	bl	43a270 <_Bfree>
  43980a:	2e00      	cmp	r6, #0
  43980c:	f43f aedf 	beq.w	4395ce <_dtoa_r+0x3a6>
  439810:	f1ba 0f00 	cmp.w	sl, #0
  439814:	d005      	beq.n	439822 <_dtoa_r+0x5fa>
  439816:	45b2      	cmp	sl, r6
  439818:	d003      	beq.n	439822 <_dtoa_r+0x5fa>
  43981a:	4651      	mov	r1, sl
  43981c:	4620      	mov	r0, r4
  43981e:	f000 fd27 	bl	43a270 <_Bfree>
  439822:	4631      	mov	r1, r6
  439824:	4620      	mov	r0, r4
  439826:	f000 fd23 	bl	43a270 <_Bfree>
  43982a:	e6d0      	b.n	4395ce <_dtoa_r+0x3a6>
  43982c:	201c      	movs	r0, #28
  43982e:	e783      	b.n	439738 <_dtoa_r+0x510>
  439830:	4b04      	ldr	r3, [pc, #16]	; (439844 <_dtoa_r+0x61c>)
  439832:	9a02      	ldr	r2, [sp, #8]
  439834:	1b5b      	subs	r3, r3, r5
  439836:	fa02 f003 	lsl.w	r0, r2, r3
  43983a:	e56d      	b.n	439318 <_dtoa_r+0xf0>
  43983c:	900b      	str	r0, [sp, #44]	; 0x2c
  43983e:	e5b4      	b.n	4393aa <_dtoa_r+0x182>
  439840:	40240000 	.word	0x40240000
  439844:	fffffbee 	.word	0xfffffbee
  439848:	4631      	mov	r1, r6
  43984a:	2300      	movs	r3, #0
  43984c:	4620      	mov	r0, r4
  43984e:	220a      	movs	r2, #10
  439850:	f000 fd18 	bl	43a284 <__multadd>
  439854:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  439856:	2b00      	cmp	r3, #0
  439858:	4606      	mov	r6, r0
  43985a:	f340 840c 	ble.w	43a076 <_dtoa_r+0xe4e>
  43985e:	9306      	str	r3, [sp, #24]
  439860:	2d00      	cmp	r5, #0
  439862:	dd05      	ble.n	439870 <_dtoa_r+0x648>
  439864:	4631      	mov	r1, r6
  439866:	462a      	mov	r2, r5
  439868:	4620      	mov	r0, r4
  43986a:	f000 fe8f 	bl	43a58c <__lshift>
  43986e:	4606      	mov	r6, r0
  439870:	f1b9 0f00 	cmp.w	r9, #0
  439874:	f040 82e9 	bne.w	439e4a <_dtoa_r+0xc22>
  439878:	46b1      	mov	r9, r6
  43987a:	9b06      	ldr	r3, [sp, #24]
  43987c:	9a07      	ldr	r2, [sp, #28]
  43987e:	3b01      	subs	r3, #1
  439880:	18d3      	adds	r3, r2, r3
  439882:	9308      	str	r3, [sp, #32]
  439884:	9b02      	ldr	r3, [sp, #8]
  439886:	f003 0301 	and.w	r3, r3, #1
  43988a:	9309      	str	r3, [sp, #36]	; 0x24
  43988c:	4617      	mov	r7, r2
  43988e:	4641      	mov	r1, r8
  439890:	4658      	mov	r0, fp
  439892:	f7ff fc33 	bl	4390fc <quorem>
  439896:	4631      	mov	r1, r6
  439898:	4605      	mov	r5, r0
  43989a:	4658      	mov	r0, fp
  43989c:	f000 fecc 	bl	43a638 <__mcmp>
  4398a0:	464a      	mov	r2, r9
  4398a2:	4682      	mov	sl, r0
  4398a4:	4641      	mov	r1, r8
  4398a6:	4620      	mov	r0, r4
  4398a8:	f000 feea 	bl	43a680 <__mdiff>
  4398ac:	68c2      	ldr	r2, [r0, #12]
  4398ae:	4603      	mov	r3, r0
  4398b0:	f105 0c30 	add.w	ip, r5, #48	; 0x30
  4398b4:	2a00      	cmp	r2, #0
  4398b6:	f040 81b8 	bne.w	439c2a <_dtoa_r+0xa02>
  4398ba:	4619      	mov	r1, r3
  4398bc:	4658      	mov	r0, fp
  4398be:	f8cd c018 	str.w	ip, [sp, #24]
  4398c2:	9305      	str	r3, [sp, #20]
  4398c4:	f000 feb8 	bl	43a638 <__mcmp>
  4398c8:	9b05      	ldr	r3, [sp, #20]
  4398ca:	9002      	str	r0, [sp, #8]
  4398cc:	4619      	mov	r1, r3
  4398ce:	4620      	mov	r0, r4
  4398d0:	f000 fcce 	bl	43a270 <_Bfree>
  4398d4:	9a02      	ldr	r2, [sp, #8]
  4398d6:	f8dd c018 	ldr.w	ip, [sp, #24]
  4398da:	b92a      	cbnz	r2, 4398e8 <_dtoa_r+0x6c0>
  4398dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4398de:	b91b      	cbnz	r3, 4398e8 <_dtoa_r+0x6c0>
  4398e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4398e2:	2b00      	cmp	r3, #0
  4398e4:	f000 83a7 	beq.w	43a036 <_dtoa_r+0xe0e>
  4398e8:	f1ba 0f00 	cmp.w	sl, #0
  4398ec:	f2c0 8251 	blt.w	439d92 <_dtoa_r+0xb6a>
  4398f0:	d105      	bne.n	4398fe <_dtoa_r+0x6d6>
  4398f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4398f4:	b91b      	cbnz	r3, 4398fe <_dtoa_r+0x6d6>
  4398f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4398f8:	2b00      	cmp	r3, #0
  4398fa:	f000 824a 	beq.w	439d92 <_dtoa_r+0xb6a>
  4398fe:	2a00      	cmp	r2, #0
  439900:	f300 82b7 	bgt.w	439e72 <_dtoa_r+0xc4a>
  439904:	9b08      	ldr	r3, [sp, #32]
  439906:	f887 c000 	strb.w	ip, [r7]
  43990a:	f107 0a01 	add.w	sl, r7, #1
  43990e:	429f      	cmp	r7, r3
  439910:	4655      	mov	r5, sl
  439912:	f000 82ba 	beq.w	439e8a <_dtoa_r+0xc62>
  439916:	4659      	mov	r1, fp
  439918:	220a      	movs	r2, #10
  43991a:	2300      	movs	r3, #0
  43991c:	4620      	mov	r0, r4
  43991e:	f000 fcb1 	bl	43a284 <__multadd>
  439922:	454e      	cmp	r6, r9
  439924:	4683      	mov	fp, r0
  439926:	4631      	mov	r1, r6
  439928:	4620      	mov	r0, r4
  43992a:	f04f 020a 	mov.w	r2, #10
  43992e:	f04f 0300 	mov.w	r3, #0
  439932:	f000 8174 	beq.w	439c1e <_dtoa_r+0x9f6>
  439936:	f000 fca5 	bl	43a284 <__multadd>
  43993a:	4649      	mov	r1, r9
  43993c:	4606      	mov	r6, r0
  43993e:	220a      	movs	r2, #10
  439940:	4620      	mov	r0, r4
  439942:	2300      	movs	r3, #0
  439944:	f000 fc9e 	bl	43a284 <__multadd>
  439948:	4657      	mov	r7, sl
  43994a:	4681      	mov	r9, r0
  43994c:	e79f      	b.n	43988e <_dtoa_r+0x666>
  43994e:	2301      	movs	r3, #1
  439950:	9309      	str	r3, [sp, #36]	; 0x24
  439952:	9b21      	ldr	r3, [sp, #132]	; 0x84
  439954:	2b00      	cmp	r3, #0
  439956:	f340 8213 	ble.w	439d80 <_dtoa_r+0xb58>
  43995a:	461f      	mov	r7, r3
  43995c:	461e      	mov	r6, r3
  43995e:	930c      	str	r3, [sp, #48]	; 0x30
  439960:	9306      	str	r3, [sp, #24]
  439962:	2100      	movs	r1, #0
  439964:	2f17      	cmp	r7, #23
  439966:	6461      	str	r1, [r4, #68]	; 0x44
  439968:	d90a      	bls.n	439980 <_dtoa_r+0x758>
  43996a:	2201      	movs	r2, #1
  43996c:	2304      	movs	r3, #4
  43996e:	005b      	lsls	r3, r3, #1
  439970:	f103 0014 	add.w	r0, r3, #20
  439974:	4287      	cmp	r7, r0
  439976:	4611      	mov	r1, r2
  439978:	f102 0201 	add.w	r2, r2, #1
  43997c:	d2f7      	bcs.n	43996e <_dtoa_r+0x746>
  43997e:	6461      	str	r1, [r4, #68]	; 0x44
  439980:	4620      	mov	r0, r4
  439982:	f000 fc4f 	bl	43a224 <_Balloc>
  439986:	2e0e      	cmp	r6, #14
  439988:	9007      	str	r0, [sp, #28]
  43998a:	6420      	str	r0, [r4, #64]	; 0x40
  43998c:	f63f ad5c 	bhi.w	439448 <_dtoa_r+0x220>
  439990:	2d00      	cmp	r5, #0
  439992:	f43f ad59 	beq.w	439448 <_dtoa_r+0x220>
  439996:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  43999a:	9904      	ldr	r1, [sp, #16]
  43999c:	2900      	cmp	r1, #0
  43999e:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  4399a2:	f340 8221 	ble.w	439de8 <_dtoa_r+0xbc0>
  4399a6:	4bb7      	ldr	r3, [pc, #732]	; (439c84 <_dtoa_r+0xa5c>)
  4399a8:	f001 020f 	and.w	r2, r1, #15
  4399ac:	110d      	asrs	r5, r1, #4
  4399ae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4399b2:	06e9      	lsls	r1, r5, #27
  4399b4:	e9d3 6700 	ldrd	r6, r7, [r3]
  4399b8:	f140 81db 	bpl.w	439d72 <_dtoa_r+0xb4a>
  4399bc:	4bb2      	ldr	r3, [pc, #712]	; (439c88 <_dtoa_r+0xa60>)
  4399be:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  4399c2:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4399c6:	f7f8 faef 	bl	431fa8 <__aeabi_ddiv>
  4399ca:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4399ce:	f005 050f 	and.w	r5, r5, #15
  4399d2:	f04f 0803 	mov.w	r8, #3
  4399d6:	b18d      	cbz	r5, 4399fc <_dtoa_r+0x7d4>
  4399d8:	f8df 92ac 	ldr.w	r9, [pc, #684]	; 439c88 <_dtoa_r+0xa60>
  4399dc:	4630      	mov	r0, r6
  4399de:	4639      	mov	r1, r7
  4399e0:	07ea      	lsls	r2, r5, #31
  4399e2:	d505      	bpl.n	4399f0 <_dtoa_r+0x7c8>
  4399e4:	e9d9 2300 	ldrd	r2, r3, [r9]
  4399e8:	f108 0801 	add.w	r8, r8, #1
  4399ec:	f7f8 f9b2 	bl	431d54 <__aeabi_dmul>
  4399f0:	106d      	asrs	r5, r5, #1
  4399f2:	f109 0908 	add.w	r9, r9, #8
  4399f6:	d1f3      	bne.n	4399e0 <_dtoa_r+0x7b8>
  4399f8:	4606      	mov	r6, r0
  4399fa:	460f      	mov	r7, r1
  4399fc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  439a00:	4632      	mov	r2, r6
  439a02:	463b      	mov	r3, r7
  439a04:	f7f8 fad0 	bl	431fa8 <__aeabi_ddiv>
  439a08:	e9cd 0102 	strd	r0, r1, [sp, #8]
  439a0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  439a0e:	b143      	cbz	r3, 439a22 <_dtoa_r+0x7fa>
  439a10:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  439a14:	2200      	movs	r2, #0
  439a16:	4b9d      	ldr	r3, [pc, #628]	; (439c8c <_dtoa_r+0xa64>)
  439a18:	f7f8 fc0e 	bl	432238 <__aeabi_dcmplt>
  439a1c:	2800      	cmp	r0, #0
  439a1e:	f040 82ac 	bne.w	439f7a <_dtoa_r+0xd52>
  439a22:	4640      	mov	r0, r8
  439a24:	f7f8 f930 	bl	431c88 <__aeabi_i2d>
  439a28:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  439a2c:	f7f8 f992 	bl	431d54 <__aeabi_dmul>
  439a30:	4b97      	ldr	r3, [pc, #604]	; (439c90 <_dtoa_r+0xa68>)
  439a32:	2200      	movs	r2, #0
  439a34:	f7f7 ffdc 	bl	4319f0 <__adddf3>
  439a38:	9b06      	ldr	r3, [sp, #24]
  439a3a:	4606      	mov	r6, r0
  439a3c:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
  439a40:	2b00      	cmp	r3, #0
  439a42:	f000 8162 	beq.w	439d0a <_dtoa_r+0xae2>
  439a46:	9b04      	ldr	r3, [sp, #16]
  439a48:	f8dd 9018 	ldr.w	r9, [sp, #24]
  439a4c:	9312      	str	r3, [sp, #72]	; 0x48
  439a4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  439a50:	2b00      	cmp	r3, #0
  439a52:	f000 8221 	beq.w	439e98 <_dtoa_r+0xc70>
  439a56:	4b8b      	ldr	r3, [pc, #556]	; (439c84 <_dtoa_r+0xa5c>)
  439a58:	498e      	ldr	r1, [pc, #568]	; (439c94 <_dtoa_r+0xa6c>)
  439a5a:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  439a5e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  439a62:	2000      	movs	r0, #0
  439a64:	f7f8 faa0 	bl	431fa8 <__aeabi_ddiv>
  439a68:	4632      	mov	r2, r6
  439a6a:	463b      	mov	r3, r7
  439a6c:	f7f7 ffbe 	bl	4319ec <__aeabi_dsub>
  439a70:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
  439a74:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
  439a78:	4639      	mov	r1, r7
  439a7a:	4630      	mov	r0, r6
  439a7c:	f7f8 fc04 	bl	432288 <__aeabi_d2iz>
  439a80:	4605      	mov	r5, r0
  439a82:	f7f8 f901 	bl	431c88 <__aeabi_i2d>
  439a86:	3530      	adds	r5, #48	; 0x30
  439a88:	4602      	mov	r2, r0
  439a8a:	460b      	mov	r3, r1
  439a8c:	4630      	mov	r0, r6
  439a8e:	4639      	mov	r1, r7
  439a90:	f7f7 ffac 	bl	4319ec <__aeabi_dsub>
  439a94:	fa5f f885 	uxtb.w	r8, r5
  439a98:	9d07      	ldr	r5, [sp, #28]
  439a9a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  439a9e:	f885 8000 	strb.w	r8, [r5]
  439aa2:	4606      	mov	r6, r0
  439aa4:	460f      	mov	r7, r1
  439aa6:	3501      	adds	r5, #1
  439aa8:	f7f8 fbc6 	bl	432238 <__aeabi_dcmplt>
  439aac:	2800      	cmp	r0, #0
  439aae:	f040 82b2 	bne.w	43a016 <_dtoa_r+0xdee>
  439ab2:	4632      	mov	r2, r6
  439ab4:	463b      	mov	r3, r7
  439ab6:	2000      	movs	r0, #0
  439ab8:	4974      	ldr	r1, [pc, #464]	; (439c8c <_dtoa_r+0xa64>)
  439aba:	f7f7 ff97 	bl	4319ec <__aeabi_dsub>
  439abe:	4602      	mov	r2, r0
  439ac0:	460b      	mov	r3, r1
  439ac2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  439ac6:	f7f8 fbd5 	bl	432274 <__aeabi_dcmpgt>
  439aca:	2800      	cmp	r0, #0
  439acc:	f040 82ac 	bne.w	43a028 <_dtoa_r+0xe00>
  439ad0:	f1b9 0f01 	cmp.w	r9, #1
  439ad4:	f340 8138 	ble.w	439d48 <_dtoa_r+0xb20>
  439ad8:	9b07      	ldr	r3, [sp, #28]
  439ada:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  439ade:	f8cd b008 	str.w	fp, [sp, #8]
  439ae2:	4499      	add	r9, r3
  439ae4:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  439ae8:	46a0      	mov	r8, r4
  439aea:	e00d      	b.n	439b08 <_dtoa_r+0x8e0>
  439aec:	2000      	movs	r0, #0
  439aee:	4967      	ldr	r1, [pc, #412]	; (439c8c <_dtoa_r+0xa64>)
  439af0:	f7f7 ff7c 	bl	4319ec <__aeabi_dsub>
  439af4:	4652      	mov	r2, sl
  439af6:	465b      	mov	r3, fp
  439af8:	f7f8 fb9e 	bl	432238 <__aeabi_dcmplt>
  439afc:	2800      	cmp	r0, #0
  439afe:	f040 828e 	bne.w	43a01e <_dtoa_r+0xdf6>
  439b02:	454d      	cmp	r5, r9
  439b04:	f000 811b 	beq.w	439d3e <_dtoa_r+0xb16>
  439b08:	4650      	mov	r0, sl
  439b0a:	4659      	mov	r1, fp
  439b0c:	2200      	movs	r2, #0
  439b0e:	4b62      	ldr	r3, [pc, #392]	; (439c98 <_dtoa_r+0xa70>)
  439b10:	f7f8 f920 	bl	431d54 <__aeabi_dmul>
  439b14:	2200      	movs	r2, #0
  439b16:	4b60      	ldr	r3, [pc, #384]	; (439c98 <_dtoa_r+0xa70>)
  439b18:	4682      	mov	sl, r0
  439b1a:	468b      	mov	fp, r1
  439b1c:	4630      	mov	r0, r6
  439b1e:	4639      	mov	r1, r7
  439b20:	f7f8 f918 	bl	431d54 <__aeabi_dmul>
  439b24:	460f      	mov	r7, r1
  439b26:	4606      	mov	r6, r0
  439b28:	f7f8 fbae 	bl	432288 <__aeabi_d2iz>
  439b2c:	4604      	mov	r4, r0
  439b2e:	f7f8 f8ab 	bl	431c88 <__aeabi_i2d>
  439b32:	4602      	mov	r2, r0
  439b34:	460b      	mov	r3, r1
  439b36:	4630      	mov	r0, r6
  439b38:	4639      	mov	r1, r7
  439b3a:	f7f7 ff57 	bl	4319ec <__aeabi_dsub>
  439b3e:	3430      	adds	r4, #48	; 0x30
  439b40:	b2e4      	uxtb	r4, r4
  439b42:	4652      	mov	r2, sl
  439b44:	465b      	mov	r3, fp
  439b46:	f805 4b01 	strb.w	r4, [r5], #1
  439b4a:	4606      	mov	r6, r0
  439b4c:	460f      	mov	r7, r1
  439b4e:	f7f8 fb73 	bl	432238 <__aeabi_dcmplt>
  439b52:	4632      	mov	r2, r6
  439b54:	463b      	mov	r3, r7
  439b56:	2800      	cmp	r0, #0
  439b58:	d0c8      	beq.n	439aec <_dtoa_r+0x8c4>
  439b5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  439b5c:	f8dd b008 	ldr.w	fp, [sp, #8]
  439b60:	9304      	str	r3, [sp, #16]
  439b62:	4644      	mov	r4, r8
  439b64:	e533      	b.n	4395ce <_dtoa_r+0x3a6>
  439b66:	2300      	movs	r3, #0
  439b68:	9309      	str	r3, [sp, #36]	; 0x24
  439b6a:	9b21      	ldr	r3, [sp, #132]	; 0x84
  439b6c:	9a04      	ldr	r2, [sp, #16]
  439b6e:	4413      	add	r3, r2
  439b70:	930c      	str	r3, [sp, #48]	; 0x30
  439b72:	3301      	adds	r3, #1
  439b74:	2b00      	cmp	r3, #0
  439b76:	9306      	str	r3, [sp, #24]
  439b78:	f340 8109 	ble.w	439d8e <_dtoa_r+0xb66>
  439b7c:	9e06      	ldr	r6, [sp, #24]
  439b7e:	4637      	mov	r7, r6
  439b80:	e6ef      	b.n	439962 <_dtoa_r+0x73a>
  439b82:	2300      	movs	r3, #0
  439b84:	9309      	str	r3, [sp, #36]	; 0x24
  439b86:	e6e4      	b.n	439952 <_dtoa_r+0x72a>
  439b88:	9b06      	ldr	r3, [sp, #24]
  439b8a:	2b00      	cmp	r3, #0
  439b8c:	f73f ac6d 	bgt.w	43946a <_dtoa_r+0x242>
  439b90:	f040 8262 	bne.w	43a058 <_dtoa_r+0xe30>
  439b94:	4640      	mov	r0, r8
  439b96:	2200      	movs	r2, #0
  439b98:	4b40      	ldr	r3, [pc, #256]	; (439c9c <_dtoa_r+0xa74>)
  439b9a:	4649      	mov	r1, r9
  439b9c:	f7f8 f8da 	bl	431d54 <__aeabi_dmul>
  439ba0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  439ba4:	f7f8 fb5c 	bl	432260 <__aeabi_dcmpge>
  439ba8:	f8dd 8018 	ldr.w	r8, [sp, #24]
  439bac:	4646      	mov	r6, r8
  439bae:	2800      	cmp	r0, #0
  439bb0:	f000 808a 	beq.w	439cc8 <_dtoa_r+0xaa0>
  439bb4:	9b21      	ldr	r3, [sp, #132]	; 0x84
  439bb6:	9d07      	ldr	r5, [sp, #28]
  439bb8:	43db      	mvns	r3, r3
  439bba:	9304      	str	r3, [sp, #16]
  439bbc:	4641      	mov	r1, r8
  439bbe:	4620      	mov	r0, r4
  439bc0:	f000 fb56 	bl	43a270 <_Bfree>
  439bc4:	2e00      	cmp	r6, #0
  439bc6:	f47f ae2c 	bne.w	439822 <_dtoa_r+0x5fa>
  439bca:	e500      	b.n	4395ce <_dtoa_r+0x3a6>
  439bcc:	4659      	mov	r1, fp
  439bce:	4620      	mov	r0, r4
  439bd0:	f000 fc8c 	bl	43a4ec <__pow5mult>
  439bd4:	4683      	mov	fp, r0
  439bd6:	e557      	b.n	439688 <_dtoa_r+0x460>
  439bd8:	9b02      	ldr	r3, [sp, #8]
  439bda:	2b00      	cmp	r3, #0
  439bdc:	f47f ad66 	bne.w	4396ac <_dtoa_r+0x484>
  439be0:	9b03      	ldr	r3, [sp, #12]
  439be2:	f3c3 0313 	ubfx	r3, r3, #0, #20
  439be6:	2b00      	cmp	r3, #0
  439be8:	f47f ad94 	bne.w	439714 <_dtoa_r+0x4ec>
  439bec:	9b03      	ldr	r3, [sp, #12]
  439bee:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
  439bf2:	0d3f      	lsrs	r7, r7, #20
  439bf4:	053f      	lsls	r7, r7, #20
  439bf6:	2f00      	cmp	r7, #0
  439bf8:	f000 821a 	beq.w	43a030 <_dtoa_r+0xe08>
  439bfc:	9b05      	ldr	r3, [sp, #20]
  439bfe:	3301      	adds	r3, #1
  439c00:	9305      	str	r3, [sp, #20]
  439c02:	f10a 0a01 	add.w	sl, sl, #1
  439c06:	f04f 0901 	mov.w	r9, #1
  439c0a:	e585      	b.n	439718 <_dtoa_r+0x4f0>
  439c0c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  439c0e:	2a00      	cmp	r2, #0
  439c10:	f000 81a5 	beq.w	439f5e <_dtoa_r+0xd36>
  439c14:	f203 4333 	addw	r3, r3, #1075	; 0x433
  439c18:	9f08      	ldr	r7, [sp, #32]
  439c1a:	9d05      	ldr	r5, [sp, #20]
  439c1c:	e4ff      	b.n	43961e <_dtoa_r+0x3f6>
  439c1e:	f000 fb31 	bl	43a284 <__multadd>
  439c22:	4657      	mov	r7, sl
  439c24:	4606      	mov	r6, r0
  439c26:	4681      	mov	r9, r0
  439c28:	e631      	b.n	43988e <_dtoa_r+0x666>
  439c2a:	4601      	mov	r1, r0
  439c2c:	4620      	mov	r0, r4
  439c2e:	f8cd c008 	str.w	ip, [sp, #8]
  439c32:	f000 fb1d 	bl	43a270 <_Bfree>
  439c36:	2201      	movs	r2, #1
  439c38:	f8dd c008 	ldr.w	ip, [sp, #8]
  439c3c:	e654      	b.n	4398e8 <_dtoa_r+0x6c0>
  439c3e:	4658      	mov	r0, fp
  439c40:	4641      	mov	r1, r8
  439c42:	f000 fcf9 	bl	43a638 <__mcmp>
  439c46:	2800      	cmp	r0, #0
  439c48:	f6bf ad91 	bge.w	43976e <_dtoa_r+0x546>
  439c4c:	9f04      	ldr	r7, [sp, #16]
  439c4e:	4659      	mov	r1, fp
  439c50:	2300      	movs	r3, #0
  439c52:	4620      	mov	r0, r4
  439c54:	220a      	movs	r2, #10
  439c56:	3f01      	subs	r7, #1
  439c58:	9704      	str	r7, [sp, #16]
  439c5a:	f000 fb13 	bl	43a284 <__multadd>
  439c5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  439c60:	4683      	mov	fp, r0
  439c62:	2b00      	cmp	r3, #0
  439c64:	f47f adf0 	bne.w	439848 <_dtoa_r+0x620>
  439c68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  439c6a:	2b00      	cmp	r3, #0
  439c6c:	f340 81f8 	ble.w	43a060 <_dtoa_r+0xe38>
  439c70:	9306      	str	r3, [sp, #24]
  439c72:	e583      	b.n	43977c <_dtoa_r+0x554>
  439c74:	9807      	ldr	r0, [sp, #28]
  439c76:	f7ff bb0b 	b.w	439290 <_dtoa_r+0x68>
  439c7a:	9b02      	ldr	r3, [sp, #8]
  439c7c:	2b00      	cmp	r3, #0
  439c7e:	f47f ad49 	bne.w	439714 <_dtoa_r+0x4ec>
  439c82:	e7ad      	b.n	439be0 <_dtoa_r+0x9b8>
  439c84:	00440510 	.word	0x00440510
  439c88:	004405e8 	.word	0x004405e8
  439c8c:	3ff00000 	.word	0x3ff00000
  439c90:	401c0000 	.word	0x401c0000
  439c94:	3fe00000 	.word	0x3fe00000
  439c98:	40240000 	.word	0x40240000
  439c9c:	40140000 	.word	0x40140000
  439ca0:	9b20      	ldr	r3, [sp, #128]	; 0x80
  439ca2:	2b02      	cmp	r3, #2
  439ca4:	f77f ad67 	ble.w	439776 <_dtoa_r+0x54e>
  439ca8:	9b06      	ldr	r3, [sp, #24]
  439caa:	2b00      	cmp	r3, #0
  439cac:	d182      	bne.n	439bb4 <_dtoa_r+0x98c>
  439cae:	4641      	mov	r1, r8
  439cb0:	2205      	movs	r2, #5
  439cb2:	4620      	mov	r0, r4
  439cb4:	f000 fae6 	bl	43a284 <__multadd>
  439cb8:	4680      	mov	r8, r0
  439cba:	4641      	mov	r1, r8
  439cbc:	4658      	mov	r0, fp
  439cbe:	f000 fcbb 	bl	43a638 <__mcmp>
  439cc2:	2800      	cmp	r0, #0
  439cc4:	f77f af76 	ble.w	439bb4 <_dtoa_r+0x98c>
  439cc8:	9a04      	ldr	r2, [sp, #16]
  439cca:	9907      	ldr	r1, [sp, #28]
  439ccc:	2331      	movs	r3, #49	; 0x31
  439cce:	3201      	adds	r2, #1
  439cd0:	9204      	str	r2, [sp, #16]
  439cd2:	700b      	strb	r3, [r1, #0]
  439cd4:	1c4d      	adds	r5, r1, #1
  439cd6:	e771      	b.n	439bbc <_dtoa_r+0x994>
  439cd8:	9a04      	ldr	r2, [sp, #16]
  439cda:	3201      	adds	r2, #1
  439cdc:	9204      	str	r2, [sp, #16]
  439cde:	9a07      	ldr	r2, [sp, #28]
  439ce0:	2331      	movs	r3, #49	; 0x31
  439ce2:	7013      	strb	r3, [r2, #0]
  439ce4:	e58d      	b.n	439802 <_dtoa_r+0x5da>
  439ce6:	f8dd b008 	ldr.w	fp, [sp, #8]
  439cea:	9c05      	ldr	r4, [sp, #20]
  439cec:	e46f      	b.n	4395ce <_dtoa_r+0x3a6>
  439cee:	4640      	mov	r0, r8
  439cf0:	f7f7 ffca 	bl	431c88 <__aeabi_i2d>
  439cf4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  439cf8:	f7f8 f82c 	bl	431d54 <__aeabi_dmul>
  439cfc:	2200      	movs	r2, #0
  439cfe:	4bbc      	ldr	r3, [pc, #752]	; (439ff0 <_dtoa_r+0xdc8>)
  439d00:	f7f7 fe76 	bl	4319f0 <__adddf3>
  439d04:	4606      	mov	r6, r0
  439d06:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
  439d0a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  439d0e:	2200      	movs	r2, #0
  439d10:	4bb8      	ldr	r3, [pc, #736]	; (439ff4 <_dtoa_r+0xdcc>)
  439d12:	f7f7 fe6b 	bl	4319ec <__aeabi_dsub>
  439d16:	4632      	mov	r2, r6
  439d18:	463b      	mov	r3, r7
  439d1a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  439d1e:	f7f8 faa9 	bl	432274 <__aeabi_dcmpgt>
  439d22:	4680      	mov	r8, r0
  439d24:	2800      	cmp	r0, #0
  439d26:	f040 80b3 	bne.w	439e90 <_dtoa_r+0xc68>
  439d2a:	4632      	mov	r2, r6
  439d2c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
  439d30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  439d34:	f7f8 fa80 	bl	432238 <__aeabi_dcmplt>
  439d38:	b130      	cbz	r0, 439d48 <_dtoa_r+0xb20>
  439d3a:	4646      	mov	r6, r8
  439d3c:	e73a      	b.n	439bb4 <_dtoa_r+0x98c>
  439d3e:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
  439d42:	f8dd b008 	ldr.w	fp, [sp, #8]
  439d46:	4644      	mov	r4, r8
  439d48:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  439d4c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  439d50:	f7ff bb7a 	b.w	439448 <_dtoa_r+0x220>
  439d54:	4659      	mov	r1, fp
  439d56:	9a08      	ldr	r2, [sp, #32]
  439d58:	4620      	mov	r0, r4
  439d5a:	f000 fbc7 	bl	43a4ec <__pow5mult>
  439d5e:	4683      	mov	fp, r0
  439d60:	e492      	b.n	439688 <_dtoa_r+0x460>
  439d62:	9b08      	ldr	r3, [sp, #32]
  439d64:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  439d66:	9708      	str	r7, [sp, #32]
  439d68:	1afb      	subs	r3, r7, r3
  439d6a:	441a      	add	r2, r3
  439d6c:	920a      	str	r2, [sp, #40]	; 0x28
  439d6e:	2700      	movs	r7, #0
  439d70:	e44f      	b.n	439612 <_dtoa_r+0x3ea>
  439d72:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  439d76:	f04f 0802 	mov.w	r8, #2
  439d7a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  439d7e:	e62a      	b.n	4399d6 <_dtoa_r+0x7ae>
  439d80:	2601      	movs	r6, #1
  439d82:	9621      	str	r6, [sp, #132]	; 0x84
  439d84:	960c      	str	r6, [sp, #48]	; 0x30
  439d86:	9606      	str	r6, [sp, #24]
  439d88:	2100      	movs	r1, #0
  439d8a:	6461      	str	r1, [r4, #68]	; 0x44
  439d8c:	e5f8      	b.n	439980 <_dtoa_r+0x758>
  439d8e:	461e      	mov	r6, r3
  439d90:	e7fa      	b.n	439d88 <_dtoa_r+0xb60>
  439d92:	2a00      	cmp	r2, #0
  439d94:	dd15      	ble.n	439dc2 <_dtoa_r+0xb9a>
  439d96:	4659      	mov	r1, fp
  439d98:	2201      	movs	r2, #1
  439d9a:	4620      	mov	r0, r4
  439d9c:	f8cd c008 	str.w	ip, [sp, #8]
  439da0:	f000 fbf4 	bl	43a58c <__lshift>
  439da4:	4641      	mov	r1, r8
  439da6:	4683      	mov	fp, r0
  439da8:	f000 fc46 	bl	43a638 <__mcmp>
  439dac:	2800      	cmp	r0, #0
  439dae:	f8dd c008 	ldr.w	ip, [sp, #8]
  439db2:	f340 814a 	ble.w	43a04a <_dtoa_r+0xe22>
  439db6:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
  439dba:	f000 8106 	beq.w	439fca <_dtoa_r+0xda2>
  439dbe:	f10c 0c01 	add.w	ip, ip, #1
  439dc2:	46b2      	mov	sl, r6
  439dc4:	f887 c000 	strb.w	ip, [r7]
  439dc8:	1c7d      	adds	r5, r7, #1
  439dca:	464e      	mov	r6, r9
  439dcc:	e519      	b.n	439802 <_dtoa_r+0x5da>
  439dce:	d104      	bne.n	439dda <_dtoa_r+0xbb2>
  439dd0:	f01c 0f01 	tst.w	ip, #1
  439dd4:	d001      	beq.n	439dda <_dtoa_r+0xbb2>
  439dd6:	e504      	b.n	4397e2 <_dtoa_r+0x5ba>
  439dd8:	4615      	mov	r5, r2
  439dda:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  439dde:	2b30      	cmp	r3, #48	; 0x30
  439de0:	f105 32ff 	add.w	r2, r5, #4294967295
  439de4:	d0f8      	beq.n	439dd8 <_dtoa_r+0xbb0>
  439de6:	e50c      	b.n	439802 <_dtoa_r+0x5da>
  439de8:	9b04      	ldr	r3, [sp, #16]
  439dea:	425d      	negs	r5, r3
  439dec:	2d00      	cmp	r5, #0
  439dee:	f000 80bd 	beq.w	439f6c <_dtoa_r+0xd44>
  439df2:	4b81      	ldr	r3, [pc, #516]	; (439ff8 <_dtoa_r+0xdd0>)
  439df4:	f005 020f 	and.w	r2, r5, #15
  439df8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  439dfc:	e9d3 2300 	ldrd	r2, r3, [r3]
  439e00:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  439e04:	f7f7 ffa6 	bl	431d54 <__aeabi_dmul>
  439e08:	112d      	asrs	r5, r5, #4
  439e0a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  439e0e:	f000 812c 	beq.w	43a06a <_dtoa_r+0xe42>
  439e12:	4e7a      	ldr	r6, [pc, #488]	; (439ffc <_dtoa_r+0xdd4>)
  439e14:	f04f 0802 	mov.w	r8, #2
  439e18:	07eb      	lsls	r3, r5, #31
  439e1a:	d505      	bpl.n	439e28 <_dtoa_r+0xc00>
  439e1c:	e9d6 2300 	ldrd	r2, r3, [r6]
  439e20:	f108 0801 	add.w	r8, r8, #1
  439e24:	f7f7 ff96 	bl	431d54 <__aeabi_dmul>
  439e28:	106d      	asrs	r5, r5, #1
  439e2a:	f106 0608 	add.w	r6, r6, #8
  439e2e:	d1f3      	bne.n	439e18 <_dtoa_r+0xbf0>
  439e30:	e9cd 0102 	strd	r0, r1, [sp, #8]
  439e34:	e5ea      	b.n	439a0c <_dtoa_r+0x7e4>
  439e36:	9a04      	ldr	r2, [sp, #16]
  439e38:	3201      	adds	r2, #1
  439e3a:	9204      	str	r2, [sp, #16]
  439e3c:	9a07      	ldr	r2, [sp, #28]
  439e3e:	2330      	movs	r3, #48	; 0x30
  439e40:	7013      	strb	r3, [r2, #0]
  439e42:	2331      	movs	r3, #49	; 0x31
  439e44:	7013      	strb	r3, [r2, #0]
  439e46:	f7ff bbc2 	b.w	4395ce <_dtoa_r+0x3a6>
  439e4a:	6871      	ldr	r1, [r6, #4]
  439e4c:	4620      	mov	r0, r4
  439e4e:	f000 f9e9 	bl	43a224 <_Balloc>
  439e52:	6933      	ldr	r3, [r6, #16]
  439e54:	1c9a      	adds	r2, r3, #2
  439e56:	4605      	mov	r5, r0
  439e58:	0092      	lsls	r2, r2, #2
  439e5a:	f106 010c 	add.w	r1, r6, #12
  439e5e:	300c      	adds	r0, #12
  439e60:	f7fb f83a 	bl	434ed8 <memcpy>
  439e64:	4620      	mov	r0, r4
  439e66:	4629      	mov	r1, r5
  439e68:	2201      	movs	r2, #1
  439e6a:	f000 fb8f 	bl	43a58c <__lshift>
  439e6e:	4681      	mov	r9, r0
  439e70:	e503      	b.n	43987a <_dtoa_r+0x652>
  439e72:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
  439e76:	f000 80a8 	beq.w	439fca <_dtoa_r+0xda2>
  439e7a:	f10c 0c01 	add.w	ip, ip, #1
  439e7e:	46b2      	mov	sl, r6
  439e80:	f887 c000 	strb.w	ip, [r7]
  439e84:	1c7d      	adds	r5, r7, #1
  439e86:	464e      	mov	r6, r9
  439e88:	e4bb      	b.n	439802 <_dtoa_r+0x5da>
  439e8a:	46b2      	mov	sl, r6
  439e8c:	464e      	mov	r6, r9
  439e8e:	e498      	b.n	4397c2 <_dtoa_r+0x59a>
  439e90:	f04f 0800 	mov.w	r8, #0
  439e94:	4646      	mov	r6, r8
  439e96:	e717      	b.n	439cc8 <_dtoa_r+0xaa0>
  439e98:	4957      	ldr	r1, [pc, #348]	; (439ff8 <_dtoa_r+0xdd0>)
  439e9a:	f109 33ff 	add.w	r3, r9, #4294967295
  439e9e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  439ea2:	4632      	mov	r2, r6
  439ea4:	9313      	str	r3, [sp, #76]	; 0x4c
  439ea6:	e9d1 0100 	ldrd	r0, r1, [r1]
  439eaa:	463b      	mov	r3, r7
  439eac:	f7f7 ff52 	bl	431d54 <__aeabi_dmul>
  439eb0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
  439eb4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
  439eb8:	4639      	mov	r1, r7
  439eba:	4630      	mov	r0, r6
  439ebc:	f7f8 f9e4 	bl	432288 <__aeabi_d2iz>
  439ec0:	4605      	mov	r5, r0
  439ec2:	f7f7 fee1 	bl	431c88 <__aeabi_i2d>
  439ec6:	4602      	mov	r2, r0
  439ec8:	460b      	mov	r3, r1
  439eca:	4630      	mov	r0, r6
  439ecc:	4639      	mov	r1, r7
  439ece:	f7f7 fd8d 	bl	4319ec <__aeabi_dsub>
  439ed2:	9a07      	ldr	r2, [sp, #28]
  439ed4:	3530      	adds	r5, #48	; 0x30
  439ed6:	f1b9 0f01 	cmp.w	r9, #1
  439eda:	7015      	strb	r5, [r2, #0]
  439edc:	4606      	mov	r6, r0
  439ede:	460f      	mov	r7, r1
  439ee0:	f102 0501 	add.w	r5, r2, #1
  439ee4:	d023      	beq.n	439f2e <_dtoa_r+0xd06>
  439ee6:	9b07      	ldr	r3, [sp, #28]
  439ee8:	f8cd a008 	str.w	sl, [sp, #8]
  439eec:	444b      	add	r3, r9
  439eee:	465e      	mov	r6, fp
  439ef0:	469a      	mov	sl, r3
  439ef2:	46ab      	mov	fp, r5
  439ef4:	2200      	movs	r2, #0
  439ef6:	4b42      	ldr	r3, [pc, #264]	; (43a000 <_dtoa_r+0xdd8>)
  439ef8:	f7f7 ff2c 	bl	431d54 <__aeabi_dmul>
  439efc:	4689      	mov	r9, r1
  439efe:	4680      	mov	r8, r0
  439f00:	f7f8 f9c2 	bl	432288 <__aeabi_d2iz>
  439f04:	4607      	mov	r7, r0
  439f06:	f7f7 febf 	bl	431c88 <__aeabi_i2d>
  439f0a:	3730      	adds	r7, #48	; 0x30
  439f0c:	4602      	mov	r2, r0
  439f0e:	460b      	mov	r3, r1
  439f10:	4640      	mov	r0, r8
  439f12:	4649      	mov	r1, r9
  439f14:	f7f7 fd6a 	bl	4319ec <__aeabi_dsub>
  439f18:	f80b 7b01 	strb.w	r7, [fp], #1
  439f1c:	45d3      	cmp	fp, sl
  439f1e:	d1e9      	bne.n	439ef4 <_dtoa_r+0xccc>
  439f20:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  439f22:	f8dd a008 	ldr.w	sl, [sp, #8]
  439f26:	46b3      	mov	fp, r6
  439f28:	460f      	mov	r7, r1
  439f2a:	4606      	mov	r6, r0
  439f2c:	441d      	add	r5, r3
  439f2e:	2200      	movs	r2, #0
  439f30:	4b34      	ldr	r3, [pc, #208]	; (43a004 <_dtoa_r+0xddc>)
  439f32:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  439f36:	f7f7 fd5b 	bl	4319f0 <__adddf3>
  439f3a:	4632      	mov	r2, r6
  439f3c:	463b      	mov	r3, r7
  439f3e:	f7f8 f97b 	bl	432238 <__aeabi_dcmplt>
  439f42:	2800      	cmp	r0, #0
  439f44:	d047      	beq.n	439fd6 <_dtoa_r+0xdae>
  439f46:	9b12      	ldr	r3, [sp, #72]	; 0x48
  439f48:	9304      	str	r3, [sp, #16]
  439f4a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  439f4e:	f7ff bb2c 	b.w	4395aa <_dtoa_r+0x382>
  439f52:	9b05      	ldr	r3, [sp, #20]
  439f54:	9a06      	ldr	r2, [sp, #24]
  439f56:	1a9d      	subs	r5, r3, r2
  439f58:	2300      	movs	r3, #0
  439f5a:	f7ff bb60 	b.w	43961e <_dtoa_r+0x3f6>
  439f5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  439f60:	9f08      	ldr	r7, [sp, #32]
  439f62:	9d05      	ldr	r5, [sp, #20]
  439f64:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  439f68:	f7ff bb59 	b.w	43961e <_dtoa_r+0x3f6>
  439f6c:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  439f70:	f04f 0802 	mov.w	r8, #2
  439f74:	e9cd 2302 	strd	r2, r3, [sp, #8]
  439f78:	e548      	b.n	439a0c <_dtoa_r+0x7e4>
  439f7a:	9b06      	ldr	r3, [sp, #24]
  439f7c:	2b00      	cmp	r3, #0
  439f7e:	f43f aeb6 	beq.w	439cee <_dtoa_r+0xac6>
  439f82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  439f84:	2d00      	cmp	r5, #0
  439f86:	f77f aedf 	ble.w	439d48 <_dtoa_r+0xb20>
  439f8a:	2200      	movs	r2, #0
  439f8c:	4b1c      	ldr	r3, [pc, #112]	; (43a000 <_dtoa_r+0xdd8>)
  439f8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  439f92:	f7f7 fedf 	bl	431d54 <__aeabi_dmul>
  439f96:	4606      	mov	r6, r0
  439f98:	460f      	mov	r7, r1
  439f9a:	f108 0001 	add.w	r0, r8, #1
  439f9e:	e9cd 6702 	strd	r6, r7, [sp, #8]
  439fa2:	f7f7 fe71 	bl	431c88 <__aeabi_i2d>
  439fa6:	4602      	mov	r2, r0
  439fa8:	460b      	mov	r3, r1
  439faa:	4630      	mov	r0, r6
  439fac:	4639      	mov	r1, r7
  439fae:	f7f7 fed1 	bl	431d54 <__aeabi_dmul>
  439fb2:	4b0f      	ldr	r3, [pc, #60]	; (439ff0 <_dtoa_r+0xdc8>)
  439fb4:	2200      	movs	r2, #0
  439fb6:	f7f7 fd1b 	bl	4319f0 <__adddf3>
  439fba:	9b04      	ldr	r3, [sp, #16]
  439fbc:	3b01      	subs	r3, #1
  439fbe:	4606      	mov	r6, r0
  439fc0:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
  439fc4:	9312      	str	r3, [sp, #72]	; 0x48
  439fc6:	46a9      	mov	r9, r5
  439fc8:	e541      	b.n	439a4e <_dtoa_r+0x826>
  439fca:	2239      	movs	r2, #57	; 0x39
  439fcc:	46b2      	mov	sl, r6
  439fce:	703a      	strb	r2, [r7, #0]
  439fd0:	464e      	mov	r6, r9
  439fd2:	1c7d      	adds	r5, r7, #1
  439fd4:	e407      	b.n	4397e6 <_dtoa_r+0x5be>
  439fd6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  439fda:	2000      	movs	r0, #0
  439fdc:	4909      	ldr	r1, [pc, #36]	; (43a004 <_dtoa_r+0xddc>)
  439fde:	f7f7 fd05 	bl	4319ec <__aeabi_dsub>
  439fe2:	4632      	mov	r2, r6
  439fe4:	463b      	mov	r3, r7
  439fe6:	f7f8 f945 	bl	432274 <__aeabi_dcmpgt>
  439fea:	b970      	cbnz	r0, 43a00a <_dtoa_r+0xde2>
  439fec:	e6ac      	b.n	439d48 <_dtoa_r+0xb20>
  439fee:	bf00      	nop
  439ff0:	401c0000 	.word	0x401c0000
  439ff4:	40140000 	.word	0x40140000
  439ff8:	00440510 	.word	0x00440510
  439ffc:	004405e8 	.word	0x004405e8
  43a000:	40240000 	.word	0x40240000
  43a004:	3fe00000 	.word	0x3fe00000
  43a008:	4615      	mov	r5, r2
  43a00a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  43a00e:	2b30      	cmp	r3, #48	; 0x30
  43a010:	f105 32ff 	add.w	r2, r5, #4294967295
  43a014:	d0f8      	beq.n	43a008 <_dtoa_r+0xde0>
  43a016:	9b12      	ldr	r3, [sp, #72]	; 0x48
  43a018:	9304      	str	r3, [sp, #16]
  43a01a:	f7ff bad8 	b.w	4395ce <_dtoa_r+0x3a6>
  43a01e:	4643      	mov	r3, r8
  43a020:	f8dd b008 	ldr.w	fp, [sp, #8]
  43a024:	46a0      	mov	r8, r4
  43a026:	461c      	mov	r4, r3
  43a028:	9b12      	ldr	r3, [sp, #72]	; 0x48
  43a02a:	9304      	str	r3, [sp, #16]
  43a02c:	f7ff babd 	b.w	4395aa <_dtoa_r+0x382>
  43a030:	46b9      	mov	r9, r7
  43a032:	f7ff bb71 	b.w	439718 <_dtoa_r+0x4f0>
  43a036:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
  43a03a:	d0c6      	beq.n	439fca <_dtoa_r+0xda2>
  43a03c:	f1ba 0f00 	cmp.w	sl, #0
  43a040:	f77f aebf 	ble.w	439dc2 <_dtoa_r+0xb9a>
  43a044:	f105 0c31 	add.w	ip, r5, #49	; 0x31
  43a048:	e6bb      	b.n	439dc2 <_dtoa_r+0xb9a>
  43a04a:	f47f aeba 	bne.w	439dc2 <_dtoa_r+0xb9a>
  43a04e:	f01c 0f01 	tst.w	ip, #1
  43a052:	f43f aeb6 	beq.w	439dc2 <_dtoa_r+0xb9a>
  43a056:	e6ae      	b.n	439db6 <_dtoa_r+0xb8e>
  43a058:	f04f 0800 	mov.w	r8, #0
  43a05c:	4646      	mov	r6, r8
  43a05e:	e5a9      	b.n	439bb4 <_dtoa_r+0x98c>
  43a060:	9b20      	ldr	r3, [sp, #128]	; 0x80
  43a062:	2b02      	cmp	r3, #2
  43a064:	dc04      	bgt.n	43a070 <_dtoa_r+0xe48>
  43a066:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  43a068:	e602      	b.n	439c70 <_dtoa_r+0xa48>
  43a06a:	f04f 0802 	mov.w	r8, #2
  43a06e:	e4cd      	b.n	439a0c <_dtoa_r+0x7e4>
  43a070:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  43a072:	9306      	str	r3, [sp, #24]
  43a074:	e618      	b.n	439ca8 <_dtoa_r+0xa80>
  43a076:	9b20      	ldr	r3, [sp, #128]	; 0x80
  43a078:	2b02      	cmp	r3, #2
  43a07a:	dcf9      	bgt.n	43a070 <_dtoa_r+0xe48>
  43a07c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  43a07e:	f7ff bbee 	b.w	43985e <_dtoa_r+0x636>
  43a082:	2500      	movs	r5, #0
  43a084:	6465      	str	r5, [r4, #68]	; 0x44
  43a086:	4629      	mov	r1, r5
  43a088:	4620      	mov	r0, r4
  43a08a:	f000 f8cb 	bl	43a224 <_Balloc>
  43a08e:	f04f 33ff 	mov.w	r3, #4294967295
  43a092:	9306      	str	r3, [sp, #24]
  43a094:	930c      	str	r3, [sp, #48]	; 0x30
  43a096:	2301      	movs	r3, #1
  43a098:	9007      	str	r0, [sp, #28]
  43a09a:	9521      	str	r5, [sp, #132]	; 0x84
  43a09c:	6420      	str	r0, [r4, #64]	; 0x40
  43a09e:	9309      	str	r3, [sp, #36]	; 0x24
  43a0a0:	f7ff b9d2 	b.w	439448 <_dtoa_r+0x220>
  43a0a4:	f43f ab4d 	beq.w	439742 <_dtoa_r+0x51a>
  43a0a8:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  43a0ac:	f7ff bb44 	b.w	439738 <_dtoa_r+0x510>
  43a0b0:	2301      	movs	r3, #1
  43a0b2:	9309      	str	r3, [sp, #36]	; 0x24
  43a0b4:	e559      	b.n	439b6a <_dtoa_r+0x942>
  43a0b6:	2501      	movs	r5, #1
  43a0b8:	f7ff b990 	b.w	4393dc <_dtoa_r+0x1b4>

0043a0bc <__libc_fini_array>:
  43a0bc:	b538      	push	{r3, r4, r5, lr}
  43a0be:	4b08      	ldr	r3, [pc, #32]	; (43a0e0 <__libc_fini_array+0x24>)
  43a0c0:	4d08      	ldr	r5, [pc, #32]	; (43a0e4 <__libc_fini_array+0x28>)
  43a0c2:	1aed      	subs	r5, r5, r3
  43a0c4:	10ac      	asrs	r4, r5, #2
  43a0c6:	bf18      	it	ne
  43a0c8:	18ed      	addne	r5, r5, r3
  43a0ca:	d005      	beq.n	43a0d8 <__libc_fini_array+0x1c>
  43a0cc:	3c01      	subs	r4, #1
  43a0ce:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  43a0d2:	4798      	blx	r3
  43a0d4:	2c00      	cmp	r4, #0
  43a0d6:	d1f9      	bne.n	43a0cc <__libc_fini_array+0x10>
  43a0d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  43a0dc:	f006 bb2c 	b.w	440738 <_fini>
  43a0e0:	00440760 	.word	0x00440760
  43a0e4:	00440764 	.word	0x00440764

0043a0e8 <__fputwc>:
  43a0e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  43a0ec:	b082      	sub	sp, #8
  43a0ee:	4607      	mov	r7, r0
  43a0f0:	460e      	mov	r6, r1
  43a0f2:	4614      	mov	r4, r2
  43a0f4:	f000 f878 	bl	43a1e8 <__locale_mb_cur_max>
  43a0f8:	2801      	cmp	r0, #1
  43a0fa:	d041      	beq.n	43a180 <__fputwc+0x98>
  43a0fc:	4638      	mov	r0, r7
  43a0fe:	a901      	add	r1, sp, #4
  43a100:	4632      	mov	r2, r6
  43a102:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  43a106:	f000 fc43 	bl	43a990 <_wcrtomb_r>
  43a10a:	f1b0 3fff 	cmp.w	r0, #4294967295
  43a10e:	4680      	mov	r8, r0
  43a110:	d02f      	beq.n	43a172 <__fputwc+0x8a>
  43a112:	2800      	cmp	r0, #0
  43a114:	d03c      	beq.n	43a190 <__fputwc+0xa8>
  43a116:	f89d 1004 	ldrb.w	r1, [sp, #4]
  43a11a:	2500      	movs	r5, #0
  43a11c:	e009      	b.n	43a132 <__fputwc+0x4a>
  43a11e:	6823      	ldr	r3, [r4, #0]
  43a120:	7019      	strb	r1, [r3, #0]
  43a122:	6823      	ldr	r3, [r4, #0]
  43a124:	3301      	adds	r3, #1
  43a126:	6023      	str	r3, [r4, #0]
  43a128:	3501      	adds	r5, #1
  43a12a:	45a8      	cmp	r8, r5
  43a12c:	d930      	bls.n	43a190 <__fputwc+0xa8>
  43a12e:	ab01      	add	r3, sp, #4
  43a130:	5d59      	ldrb	r1, [r3, r5]
  43a132:	68a3      	ldr	r3, [r4, #8]
  43a134:	3b01      	subs	r3, #1
  43a136:	2b00      	cmp	r3, #0
  43a138:	60a3      	str	r3, [r4, #8]
  43a13a:	daf0      	bge.n	43a11e <__fputwc+0x36>
  43a13c:	69a2      	ldr	r2, [r4, #24]
  43a13e:	4293      	cmp	r3, r2
  43a140:	db07      	blt.n	43a152 <__fputwc+0x6a>
  43a142:	6823      	ldr	r3, [r4, #0]
  43a144:	7019      	strb	r1, [r3, #0]
  43a146:	6823      	ldr	r3, [r4, #0]
  43a148:	7819      	ldrb	r1, [r3, #0]
  43a14a:	290a      	cmp	r1, #10
  43a14c:	f103 0301 	add.w	r3, r3, #1
  43a150:	d1e9      	bne.n	43a126 <__fputwc+0x3e>
  43a152:	4638      	mov	r0, r7
  43a154:	4622      	mov	r2, r4
  43a156:	f7fe fee5 	bl	438f24 <__swbuf_r>
  43a15a:	f1a0 30ff 	sub.w	r0, r0, #4294967295
  43a15e:	fab0 f080 	clz	r0, r0
  43a162:	0940      	lsrs	r0, r0, #5
  43a164:	2800      	cmp	r0, #0
  43a166:	d0df      	beq.n	43a128 <__fputwc+0x40>
  43a168:	f04f 30ff 	mov.w	r0, #4294967295
  43a16c:	b002      	add	sp, #8
  43a16e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a172:	89a3      	ldrh	r3, [r4, #12]
  43a174:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  43a178:	81a3      	strh	r3, [r4, #12]
  43a17a:	b002      	add	sp, #8
  43a17c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a180:	1e73      	subs	r3, r6, #1
  43a182:	2bfe      	cmp	r3, #254	; 0xfe
  43a184:	d8ba      	bhi.n	43a0fc <__fputwc+0x14>
  43a186:	b2f1      	uxtb	r1, r6
  43a188:	4680      	mov	r8, r0
  43a18a:	f88d 1004 	strb.w	r1, [sp, #4]
  43a18e:	e7c4      	b.n	43a11a <__fputwc+0x32>
  43a190:	4630      	mov	r0, r6
  43a192:	b002      	add	sp, #8
  43a194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0043a198 <_fputwc_r>:
  43a198:	8993      	ldrh	r3, [r2, #12]
  43a19a:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  43a19e:	d10b      	bne.n	43a1b8 <_fputwc_r+0x20>
  43a1a0:	b410      	push	{r4}
  43a1a2:	6e54      	ldr	r4, [r2, #100]	; 0x64
  43a1a4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  43a1a8:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  43a1ac:	6654      	str	r4, [r2, #100]	; 0x64
  43a1ae:	8193      	strh	r3, [r2, #12]
  43a1b0:	f85d 4b04 	ldr.w	r4, [sp], #4
  43a1b4:	f7ff bf98 	b.w	43a0e8 <__fputwc>
  43a1b8:	f7ff bf96 	b.w	43a0e8 <__fputwc>

0043a1bc <_isatty_r>:
  43a1bc:	b538      	push	{r3, r4, r5, lr}
  43a1be:	4c07      	ldr	r4, [pc, #28]	; (43a1dc <_isatty_r+0x20>)
  43a1c0:	2300      	movs	r3, #0
  43a1c2:	4605      	mov	r5, r0
  43a1c4:	4608      	mov	r0, r1
  43a1c6:	6023      	str	r3, [r4, #0]
  43a1c8:	f7c8 ff86 	bl	4030d8 <_isatty>
  43a1cc:	1c43      	adds	r3, r0, #1
  43a1ce:	d000      	beq.n	43a1d2 <_isatty_r+0x16>
  43a1d0:	bd38      	pop	{r3, r4, r5, pc}
  43a1d2:	6823      	ldr	r3, [r4, #0]
  43a1d4:	2b00      	cmp	r3, #0
  43a1d6:	d0fb      	beq.n	43a1d0 <_isatty_r+0x14>
  43a1d8:	602b      	str	r3, [r5, #0]
  43a1da:	bd38      	pop	{r3, r4, r5, pc}
  43a1dc:	20002f50 	.word	0x20002f50

0043a1e0 <__locale_charset>:
  43a1e0:	4800      	ldr	r0, [pc, #0]	; (43a1e4 <__locale_charset+0x4>)
  43a1e2:	4770      	bx	lr
  43a1e4:	2000171c 	.word	0x2000171c

0043a1e8 <__locale_mb_cur_max>:
  43a1e8:	4b01      	ldr	r3, [pc, #4]	; (43a1f0 <__locale_mb_cur_max+0x8>)
  43a1ea:	6818      	ldr	r0, [r3, #0]
  43a1ec:	4770      	bx	lr
  43a1ee:	bf00      	nop
  43a1f0:	2000173c 	.word	0x2000173c

0043a1f4 <_localeconv_r>:
  43a1f4:	4800      	ldr	r0, [pc, #0]	; (43a1f8 <_localeconv_r+0x4>)
  43a1f6:	4770      	bx	lr
  43a1f8:	200016e4 	.word	0x200016e4

0043a1fc <_lseek_r>:
  43a1fc:	b570      	push	{r4, r5, r6, lr}
  43a1fe:	4c08      	ldr	r4, [pc, #32]	; (43a220 <_lseek_r+0x24>)
  43a200:	4606      	mov	r6, r0
  43a202:	2500      	movs	r5, #0
  43a204:	4608      	mov	r0, r1
  43a206:	4611      	mov	r1, r2
  43a208:	461a      	mov	r2, r3
  43a20a:	6025      	str	r5, [r4, #0]
  43a20c:	f7c8 ff70 	bl	4030f0 <_lseek>
  43a210:	1c43      	adds	r3, r0, #1
  43a212:	d000      	beq.n	43a216 <_lseek_r+0x1a>
  43a214:	bd70      	pop	{r4, r5, r6, pc}
  43a216:	6823      	ldr	r3, [r4, #0]
  43a218:	2b00      	cmp	r3, #0
  43a21a:	d0fb      	beq.n	43a214 <_lseek_r+0x18>
  43a21c:	6033      	str	r3, [r6, #0]
  43a21e:	bd70      	pop	{r4, r5, r6, pc}
  43a220:	20002f50 	.word	0x20002f50

0043a224 <_Balloc>:
  43a224:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  43a226:	b570      	push	{r4, r5, r6, lr}
  43a228:	4605      	mov	r5, r0
  43a22a:	460c      	mov	r4, r1
  43a22c:	b14b      	cbz	r3, 43a242 <_Balloc+0x1e>
  43a22e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  43a232:	b180      	cbz	r0, 43a256 <_Balloc+0x32>
  43a234:	6802      	ldr	r2, [r0, #0]
  43a236:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  43a23a:	2300      	movs	r3, #0
  43a23c:	6103      	str	r3, [r0, #16]
  43a23e:	60c3      	str	r3, [r0, #12]
  43a240:	bd70      	pop	{r4, r5, r6, pc}
  43a242:	2104      	movs	r1, #4
  43a244:	2221      	movs	r2, #33	; 0x21
  43a246:	f7f9 fdab 	bl	433da0 <_calloc_r>
  43a24a:	64e8      	str	r0, [r5, #76]	; 0x4c
  43a24c:	4603      	mov	r3, r0
  43a24e:	2800      	cmp	r0, #0
  43a250:	d1ed      	bne.n	43a22e <_Balloc+0xa>
  43a252:	2000      	movs	r0, #0
  43a254:	bd70      	pop	{r4, r5, r6, pc}
  43a256:	2101      	movs	r1, #1
  43a258:	fa01 f604 	lsl.w	r6, r1, r4
  43a25c:	1d72      	adds	r2, r6, #5
  43a25e:	4628      	mov	r0, r5
  43a260:	0092      	lsls	r2, r2, #2
  43a262:	f7f9 fd9d 	bl	433da0 <_calloc_r>
  43a266:	2800      	cmp	r0, #0
  43a268:	d0f3      	beq.n	43a252 <_Balloc+0x2e>
  43a26a:	6044      	str	r4, [r0, #4]
  43a26c:	6086      	str	r6, [r0, #8]
  43a26e:	e7e4      	b.n	43a23a <_Balloc+0x16>

0043a270 <_Bfree>:
  43a270:	b131      	cbz	r1, 43a280 <_Bfree+0x10>
  43a272:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  43a274:	684a      	ldr	r2, [r1, #4]
  43a276:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  43a27a:	6008      	str	r0, [r1, #0]
  43a27c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  43a280:	4770      	bx	lr
  43a282:	bf00      	nop

0043a284 <__multadd>:
  43a284:	b5f0      	push	{r4, r5, r6, r7, lr}
  43a286:	690c      	ldr	r4, [r1, #16]
  43a288:	b083      	sub	sp, #12
  43a28a:	460d      	mov	r5, r1
  43a28c:	4606      	mov	r6, r0
  43a28e:	f101 0e14 	add.w	lr, r1, #20
  43a292:	2700      	movs	r7, #0
  43a294:	f8de 1000 	ldr.w	r1, [lr]
  43a298:	b288      	uxth	r0, r1
  43a29a:	0c09      	lsrs	r1, r1, #16
  43a29c:	fb02 3300 	mla	r3, r2, r0, r3
  43a2a0:	fb02 f101 	mul.w	r1, r2, r1
  43a2a4:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  43a2a8:	3701      	adds	r7, #1
  43a2aa:	b29b      	uxth	r3, r3
  43a2ac:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  43a2b0:	42bc      	cmp	r4, r7
  43a2b2:	f84e 3b04 	str.w	r3, [lr], #4
  43a2b6:	ea4f 4311 	mov.w	r3, r1, lsr #16
  43a2ba:	dceb      	bgt.n	43a294 <__multadd+0x10>
  43a2bc:	b13b      	cbz	r3, 43a2ce <__multadd+0x4a>
  43a2be:	68aa      	ldr	r2, [r5, #8]
  43a2c0:	4294      	cmp	r4, r2
  43a2c2:	da07      	bge.n	43a2d4 <__multadd+0x50>
  43a2c4:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  43a2c8:	3401      	adds	r4, #1
  43a2ca:	6153      	str	r3, [r2, #20]
  43a2cc:	612c      	str	r4, [r5, #16]
  43a2ce:	4628      	mov	r0, r5
  43a2d0:	b003      	add	sp, #12
  43a2d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  43a2d4:	6869      	ldr	r1, [r5, #4]
  43a2d6:	9301      	str	r3, [sp, #4]
  43a2d8:	3101      	adds	r1, #1
  43a2da:	4630      	mov	r0, r6
  43a2dc:	f7ff ffa2 	bl	43a224 <_Balloc>
  43a2e0:	692a      	ldr	r2, [r5, #16]
  43a2e2:	3202      	adds	r2, #2
  43a2e4:	f105 010c 	add.w	r1, r5, #12
  43a2e8:	4607      	mov	r7, r0
  43a2ea:	0092      	lsls	r2, r2, #2
  43a2ec:	300c      	adds	r0, #12
  43a2ee:	f7fa fdf3 	bl	434ed8 <memcpy>
  43a2f2:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  43a2f4:	6869      	ldr	r1, [r5, #4]
  43a2f6:	9b01      	ldr	r3, [sp, #4]
  43a2f8:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  43a2fc:	6028      	str	r0, [r5, #0]
  43a2fe:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  43a302:	463d      	mov	r5, r7
  43a304:	e7de      	b.n	43a2c4 <__multadd+0x40>
  43a306:	bf00      	nop

0043a308 <__hi0bits>:
  43a308:	0c03      	lsrs	r3, r0, #16
  43a30a:	041b      	lsls	r3, r3, #16
  43a30c:	b9b3      	cbnz	r3, 43a33c <__hi0bits+0x34>
  43a30e:	0400      	lsls	r0, r0, #16
  43a310:	2310      	movs	r3, #16
  43a312:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
  43a316:	bf04      	itt	eq
  43a318:	0200      	lsleq	r0, r0, #8
  43a31a:	3308      	addeq	r3, #8
  43a31c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
  43a320:	bf04      	itt	eq
  43a322:	0100      	lsleq	r0, r0, #4
  43a324:	3304      	addeq	r3, #4
  43a326:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
  43a32a:	bf04      	itt	eq
  43a32c:	0080      	lsleq	r0, r0, #2
  43a32e:	3302      	addeq	r3, #2
  43a330:	2800      	cmp	r0, #0
  43a332:	db07      	blt.n	43a344 <__hi0bits+0x3c>
  43a334:	0042      	lsls	r2, r0, #1
  43a336:	d403      	bmi.n	43a340 <__hi0bits+0x38>
  43a338:	2020      	movs	r0, #32
  43a33a:	4770      	bx	lr
  43a33c:	2300      	movs	r3, #0
  43a33e:	e7e8      	b.n	43a312 <__hi0bits+0xa>
  43a340:	1c58      	adds	r0, r3, #1
  43a342:	4770      	bx	lr
  43a344:	4618      	mov	r0, r3
  43a346:	4770      	bx	lr

0043a348 <__lo0bits>:
  43a348:	6803      	ldr	r3, [r0, #0]
  43a34a:	f013 0207 	ands.w	r2, r3, #7
  43a34e:	d007      	beq.n	43a360 <__lo0bits+0x18>
  43a350:	07d9      	lsls	r1, r3, #31
  43a352:	d420      	bmi.n	43a396 <__lo0bits+0x4e>
  43a354:	079a      	lsls	r2, r3, #30
  43a356:	d420      	bmi.n	43a39a <__lo0bits+0x52>
  43a358:	089b      	lsrs	r3, r3, #2
  43a35a:	6003      	str	r3, [r0, #0]
  43a35c:	2002      	movs	r0, #2
  43a35e:	4770      	bx	lr
  43a360:	b299      	uxth	r1, r3
  43a362:	b909      	cbnz	r1, 43a368 <__lo0bits+0x20>
  43a364:	0c1b      	lsrs	r3, r3, #16
  43a366:	2210      	movs	r2, #16
  43a368:	f013 0fff 	tst.w	r3, #255	; 0xff
  43a36c:	bf04      	itt	eq
  43a36e:	0a1b      	lsreq	r3, r3, #8
  43a370:	3208      	addeq	r2, #8
  43a372:	0719      	lsls	r1, r3, #28
  43a374:	bf04      	itt	eq
  43a376:	091b      	lsreq	r3, r3, #4
  43a378:	3204      	addeq	r2, #4
  43a37a:	0799      	lsls	r1, r3, #30
  43a37c:	bf04      	itt	eq
  43a37e:	089b      	lsreq	r3, r3, #2
  43a380:	3202      	addeq	r2, #2
  43a382:	07d9      	lsls	r1, r3, #31
  43a384:	d404      	bmi.n	43a390 <__lo0bits+0x48>
  43a386:	085b      	lsrs	r3, r3, #1
  43a388:	d101      	bne.n	43a38e <__lo0bits+0x46>
  43a38a:	2020      	movs	r0, #32
  43a38c:	4770      	bx	lr
  43a38e:	3201      	adds	r2, #1
  43a390:	6003      	str	r3, [r0, #0]
  43a392:	4610      	mov	r0, r2
  43a394:	4770      	bx	lr
  43a396:	2000      	movs	r0, #0
  43a398:	4770      	bx	lr
  43a39a:	085b      	lsrs	r3, r3, #1
  43a39c:	6003      	str	r3, [r0, #0]
  43a39e:	2001      	movs	r0, #1
  43a3a0:	4770      	bx	lr
  43a3a2:	bf00      	nop

0043a3a4 <__i2b>:
  43a3a4:	b510      	push	{r4, lr}
  43a3a6:	460c      	mov	r4, r1
  43a3a8:	2101      	movs	r1, #1
  43a3aa:	f7ff ff3b 	bl	43a224 <_Balloc>
  43a3ae:	2201      	movs	r2, #1
  43a3b0:	6144      	str	r4, [r0, #20]
  43a3b2:	6102      	str	r2, [r0, #16]
  43a3b4:	bd10      	pop	{r4, pc}
  43a3b6:	bf00      	nop

0043a3b8 <__multiply>:
  43a3b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43a3bc:	690f      	ldr	r7, [r1, #16]
  43a3be:	6916      	ldr	r6, [r2, #16]
  43a3c0:	42b7      	cmp	r7, r6
  43a3c2:	b083      	sub	sp, #12
  43a3c4:	460d      	mov	r5, r1
  43a3c6:	4614      	mov	r4, r2
  43a3c8:	f2c0 808d 	blt.w	43a4e6 <__multiply+0x12e>
  43a3cc:	4633      	mov	r3, r6
  43a3ce:	463e      	mov	r6, r7
  43a3d0:	461f      	mov	r7, r3
  43a3d2:	68ab      	ldr	r3, [r5, #8]
  43a3d4:	6869      	ldr	r1, [r5, #4]
  43a3d6:	eb06 0807 	add.w	r8, r6, r7
  43a3da:	4598      	cmp	r8, r3
  43a3dc:	bfc8      	it	gt
  43a3de:	3101      	addgt	r1, #1
  43a3e0:	f7ff ff20 	bl	43a224 <_Balloc>
  43a3e4:	f100 0c14 	add.w	ip, r0, #20
  43a3e8:	eb0c 0988 	add.w	r9, ip, r8, lsl #2
  43a3ec:	45cc      	cmp	ip, r9
  43a3ee:	9000      	str	r0, [sp, #0]
  43a3f0:	d205      	bcs.n	43a3fe <__multiply+0x46>
  43a3f2:	4663      	mov	r3, ip
  43a3f4:	2100      	movs	r1, #0
  43a3f6:	f843 1b04 	str.w	r1, [r3], #4
  43a3fa:	4599      	cmp	r9, r3
  43a3fc:	d8fb      	bhi.n	43a3f6 <__multiply+0x3e>
  43a3fe:	f104 0214 	add.w	r2, r4, #20
  43a402:	eb02 0a87 	add.w	sl, r2, r7, lsl #2
  43a406:	f105 0314 	add.w	r3, r5, #20
  43a40a:	4552      	cmp	r2, sl
  43a40c:	eb03 0e86 	add.w	lr, r3, r6, lsl #2
  43a410:	d254      	bcs.n	43a4bc <__multiply+0x104>
  43a412:	f8cd 9004 	str.w	r9, [sp, #4]
  43a416:	4699      	mov	r9, r3
  43a418:	f852 3b04 	ldr.w	r3, [r2], #4
  43a41c:	fa1f fb83 	uxth.w	fp, r3
  43a420:	f1bb 0f00 	cmp.w	fp, #0
  43a424:	d020      	beq.n	43a468 <__multiply+0xb0>
  43a426:	2000      	movs	r0, #0
  43a428:	464f      	mov	r7, r9
  43a42a:	4666      	mov	r6, ip
  43a42c:	4605      	mov	r5, r0
  43a42e:	e000      	b.n	43a432 <__multiply+0x7a>
  43a430:	461e      	mov	r6, r3
  43a432:	f857 4b04 	ldr.w	r4, [r7], #4
  43a436:	6830      	ldr	r0, [r6, #0]
  43a438:	b2a1      	uxth	r1, r4
  43a43a:	b283      	uxth	r3, r0
  43a43c:	fb0b 3101 	mla	r1, fp, r1, r3
  43a440:	0c24      	lsrs	r4, r4, #16
  43a442:	0c00      	lsrs	r0, r0, #16
  43a444:	194b      	adds	r3, r1, r5
  43a446:	fb0b 0004 	mla	r0, fp, r4, r0
  43a44a:	eb00 4013 	add.w	r0, r0, r3, lsr #16
  43a44e:	b299      	uxth	r1, r3
  43a450:	4633      	mov	r3, r6
  43a452:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
  43a456:	45be      	cmp	lr, r7
  43a458:	ea4f 4510 	mov.w	r5, r0, lsr #16
  43a45c:	f843 1b04 	str.w	r1, [r3], #4
  43a460:	d8e6      	bhi.n	43a430 <__multiply+0x78>
  43a462:	6075      	str	r5, [r6, #4]
  43a464:	f852 3c04 	ldr.w	r3, [r2, #-4]
  43a468:	ea5f 4b13 	movs.w	fp, r3, lsr #16
  43a46c:	d020      	beq.n	43a4b0 <__multiply+0xf8>
  43a46e:	f8dc 3000 	ldr.w	r3, [ip]
  43a472:	4667      	mov	r7, ip
  43a474:	4618      	mov	r0, r3
  43a476:	464d      	mov	r5, r9
  43a478:	2100      	movs	r1, #0
  43a47a:	e000      	b.n	43a47e <__multiply+0xc6>
  43a47c:	4637      	mov	r7, r6
  43a47e:	882c      	ldrh	r4, [r5, #0]
  43a480:	0c00      	lsrs	r0, r0, #16
  43a482:	fb0b 0004 	mla	r0, fp, r4, r0
  43a486:	4401      	add	r1, r0
  43a488:	b29c      	uxth	r4, r3
  43a48a:	463e      	mov	r6, r7
  43a48c:	ea44 4301 	orr.w	r3, r4, r1, lsl #16
  43a490:	f846 3b04 	str.w	r3, [r6], #4
  43a494:	6878      	ldr	r0, [r7, #4]
  43a496:	f855 4b04 	ldr.w	r4, [r5], #4
  43a49a:	b283      	uxth	r3, r0
  43a49c:	0c24      	lsrs	r4, r4, #16
  43a49e:	fb0b 3404 	mla	r4, fp, r4, r3
  43a4a2:	eb04 4311 	add.w	r3, r4, r1, lsr #16
  43a4a6:	45ae      	cmp	lr, r5
  43a4a8:	ea4f 4113 	mov.w	r1, r3, lsr #16
  43a4ac:	d8e6      	bhi.n	43a47c <__multiply+0xc4>
  43a4ae:	607b      	str	r3, [r7, #4]
  43a4b0:	4592      	cmp	sl, r2
  43a4b2:	f10c 0c04 	add.w	ip, ip, #4
  43a4b6:	d8af      	bhi.n	43a418 <__multiply+0x60>
  43a4b8:	f8dd 9004 	ldr.w	r9, [sp, #4]
  43a4bc:	f1b8 0f00 	cmp.w	r8, #0
  43a4c0:	dd0b      	ble.n	43a4da <__multiply+0x122>
  43a4c2:	f859 3c04 	ldr.w	r3, [r9, #-4]
  43a4c6:	f1a9 0904 	sub.w	r9, r9, #4
  43a4ca:	b11b      	cbz	r3, 43a4d4 <__multiply+0x11c>
  43a4cc:	e005      	b.n	43a4da <__multiply+0x122>
  43a4ce:	f859 3d04 	ldr.w	r3, [r9, #-4]!
  43a4d2:	b913      	cbnz	r3, 43a4da <__multiply+0x122>
  43a4d4:	f1b8 0801 	subs.w	r8, r8, #1
  43a4d8:	d1f9      	bne.n	43a4ce <__multiply+0x116>
  43a4da:	9800      	ldr	r0, [sp, #0]
  43a4dc:	f8c0 8010 	str.w	r8, [r0, #16]
  43a4e0:	b003      	add	sp, #12
  43a4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  43a4e6:	4615      	mov	r5, r2
  43a4e8:	460c      	mov	r4, r1
  43a4ea:	e772      	b.n	43a3d2 <__multiply+0x1a>

0043a4ec <__pow5mult>:
  43a4ec:	f012 0303 	ands.w	r3, r2, #3
  43a4f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  43a4f4:	4614      	mov	r4, r2
  43a4f6:	4607      	mov	r7, r0
  43a4f8:	460e      	mov	r6, r1
  43a4fa:	d12d      	bne.n	43a558 <__pow5mult+0x6c>
  43a4fc:	10a4      	asrs	r4, r4, #2
  43a4fe:	d01c      	beq.n	43a53a <__pow5mult+0x4e>
  43a500:	6cbd      	ldr	r5, [r7, #72]	; 0x48
  43a502:	b395      	cbz	r5, 43a56a <__pow5mult+0x7e>
  43a504:	07e3      	lsls	r3, r4, #31
  43a506:	f04f 0800 	mov.w	r8, #0
  43a50a:	d406      	bmi.n	43a51a <__pow5mult+0x2e>
  43a50c:	1064      	asrs	r4, r4, #1
  43a50e:	d014      	beq.n	43a53a <__pow5mult+0x4e>
  43a510:	6828      	ldr	r0, [r5, #0]
  43a512:	b1a8      	cbz	r0, 43a540 <__pow5mult+0x54>
  43a514:	4605      	mov	r5, r0
  43a516:	07e3      	lsls	r3, r4, #31
  43a518:	d5f8      	bpl.n	43a50c <__pow5mult+0x20>
  43a51a:	4638      	mov	r0, r7
  43a51c:	4631      	mov	r1, r6
  43a51e:	462a      	mov	r2, r5
  43a520:	f7ff ff4a 	bl	43a3b8 <__multiply>
  43a524:	b1b6      	cbz	r6, 43a554 <__pow5mult+0x68>
  43a526:	6872      	ldr	r2, [r6, #4]
  43a528:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  43a52a:	1064      	asrs	r4, r4, #1
  43a52c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  43a530:	6031      	str	r1, [r6, #0]
  43a532:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  43a536:	4606      	mov	r6, r0
  43a538:	d1ea      	bne.n	43a510 <__pow5mult+0x24>
  43a53a:	4630      	mov	r0, r6
  43a53c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a540:	4629      	mov	r1, r5
  43a542:	462a      	mov	r2, r5
  43a544:	4638      	mov	r0, r7
  43a546:	f7ff ff37 	bl	43a3b8 <__multiply>
  43a54a:	6028      	str	r0, [r5, #0]
  43a54c:	f8c0 8000 	str.w	r8, [r0]
  43a550:	4605      	mov	r5, r0
  43a552:	e7e0      	b.n	43a516 <__pow5mult+0x2a>
  43a554:	4606      	mov	r6, r0
  43a556:	e7d9      	b.n	43a50c <__pow5mult+0x20>
  43a558:	1e5a      	subs	r2, r3, #1
  43a55a:	4d0b      	ldr	r5, [pc, #44]	; (43a588 <__pow5mult+0x9c>)
  43a55c:	2300      	movs	r3, #0
  43a55e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  43a562:	f7ff fe8f 	bl	43a284 <__multadd>
  43a566:	4606      	mov	r6, r0
  43a568:	e7c8      	b.n	43a4fc <__pow5mult+0x10>
  43a56a:	2101      	movs	r1, #1
  43a56c:	4638      	mov	r0, r7
  43a56e:	f7ff fe59 	bl	43a224 <_Balloc>
  43a572:	f240 2171 	movw	r1, #625	; 0x271
  43a576:	2201      	movs	r2, #1
  43a578:	2300      	movs	r3, #0
  43a57a:	6141      	str	r1, [r0, #20]
  43a57c:	6102      	str	r2, [r0, #16]
  43a57e:	4605      	mov	r5, r0
  43a580:	64b8      	str	r0, [r7, #72]	; 0x48
  43a582:	6003      	str	r3, [r0, #0]
  43a584:	e7be      	b.n	43a504 <__pow5mult+0x18>
  43a586:	bf00      	nop
  43a588:	004405d8 	.word	0x004405d8

0043a58c <__lshift>:
  43a58c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  43a590:	690f      	ldr	r7, [r1, #16]
  43a592:	688b      	ldr	r3, [r1, #8]
  43a594:	ea4f 1962 	mov.w	r9, r2, asr #5
  43a598:	444f      	add	r7, r9
  43a59a:	1c7d      	adds	r5, r7, #1
  43a59c:	429d      	cmp	r5, r3
  43a59e:	460e      	mov	r6, r1
  43a5a0:	4614      	mov	r4, r2
  43a5a2:	6849      	ldr	r1, [r1, #4]
  43a5a4:	4680      	mov	r8, r0
  43a5a6:	dd04      	ble.n	43a5b2 <__lshift+0x26>
  43a5a8:	005b      	lsls	r3, r3, #1
  43a5aa:	429d      	cmp	r5, r3
  43a5ac:	f101 0101 	add.w	r1, r1, #1
  43a5b0:	dcfa      	bgt.n	43a5a8 <__lshift+0x1c>
  43a5b2:	4640      	mov	r0, r8
  43a5b4:	f7ff fe36 	bl	43a224 <_Balloc>
  43a5b8:	f1b9 0f00 	cmp.w	r9, #0
  43a5bc:	f100 0114 	add.w	r1, r0, #20
  43a5c0:	dd09      	ble.n	43a5d6 <__lshift+0x4a>
  43a5c2:	2300      	movs	r3, #0
  43a5c4:	469e      	mov	lr, r3
  43a5c6:	460a      	mov	r2, r1
  43a5c8:	3301      	adds	r3, #1
  43a5ca:	454b      	cmp	r3, r9
  43a5cc:	f842 eb04 	str.w	lr, [r2], #4
  43a5d0:	d1fa      	bne.n	43a5c8 <__lshift+0x3c>
  43a5d2:	eb01 0183 	add.w	r1, r1, r3, lsl #2
  43a5d6:	6932      	ldr	r2, [r6, #16]
  43a5d8:	f106 0314 	add.w	r3, r6, #20
  43a5dc:	f014 0c1f 	ands.w	ip, r4, #31
  43a5e0:	eb03 0e82 	add.w	lr, r3, r2, lsl #2
  43a5e4:	d01f      	beq.n	43a626 <__lshift+0x9a>
  43a5e6:	f1cc 0920 	rsb	r9, ip, #32
  43a5ea:	2200      	movs	r2, #0
  43a5ec:	681c      	ldr	r4, [r3, #0]
  43a5ee:	fa04 f40c 	lsl.w	r4, r4, ip
  43a5f2:	4314      	orrs	r4, r2
  43a5f4:	468a      	mov	sl, r1
  43a5f6:	f841 4b04 	str.w	r4, [r1], #4
  43a5fa:	f853 4b04 	ldr.w	r4, [r3], #4
  43a5fe:	459e      	cmp	lr, r3
  43a600:	fa24 f209 	lsr.w	r2, r4, r9
  43a604:	d8f2      	bhi.n	43a5ec <__lshift+0x60>
  43a606:	f8ca 2004 	str.w	r2, [sl, #4]
  43a60a:	b102      	cbz	r2, 43a60e <__lshift+0x82>
  43a60c:	1cbd      	adds	r5, r7, #2
  43a60e:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
  43a612:	6872      	ldr	r2, [r6, #4]
  43a614:	3d01      	subs	r5, #1
  43a616:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  43a61a:	6105      	str	r5, [r0, #16]
  43a61c:	6031      	str	r1, [r6, #0]
  43a61e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  43a622:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  43a626:	3904      	subs	r1, #4
  43a628:	f853 2b04 	ldr.w	r2, [r3], #4
  43a62c:	f841 2f04 	str.w	r2, [r1, #4]!
  43a630:	459e      	cmp	lr, r3
  43a632:	d8f9      	bhi.n	43a628 <__lshift+0x9c>
  43a634:	e7eb      	b.n	43a60e <__lshift+0x82>
  43a636:	bf00      	nop

0043a638 <__mcmp>:
  43a638:	6902      	ldr	r2, [r0, #16]
  43a63a:	690b      	ldr	r3, [r1, #16]
  43a63c:	1ad2      	subs	r2, r2, r3
  43a63e:	d113      	bne.n	43a668 <__mcmp+0x30>
  43a640:	009b      	lsls	r3, r3, #2
  43a642:	3014      	adds	r0, #20
  43a644:	3114      	adds	r1, #20
  43a646:	4419      	add	r1, r3
  43a648:	b410      	push	{r4}
  43a64a:	4403      	add	r3, r0
  43a64c:	e001      	b.n	43a652 <__mcmp+0x1a>
  43a64e:	4298      	cmp	r0, r3
  43a650:	d20c      	bcs.n	43a66c <__mcmp+0x34>
  43a652:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  43a656:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  43a65a:	4294      	cmp	r4, r2
  43a65c:	d0f7      	beq.n	43a64e <__mcmp+0x16>
  43a65e:	d309      	bcc.n	43a674 <__mcmp+0x3c>
  43a660:	2001      	movs	r0, #1
  43a662:	f85d 4b04 	ldr.w	r4, [sp], #4
  43a666:	4770      	bx	lr
  43a668:	4610      	mov	r0, r2
  43a66a:	4770      	bx	lr
  43a66c:	2000      	movs	r0, #0
  43a66e:	f85d 4b04 	ldr.w	r4, [sp], #4
  43a672:	4770      	bx	lr
  43a674:	f04f 30ff 	mov.w	r0, #4294967295
  43a678:	f85d 4b04 	ldr.w	r4, [sp], #4
  43a67c:	4770      	bx	lr
  43a67e:	bf00      	nop

0043a680 <__mdiff>:
  43a680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  43a684:	460e      	mov	r6, r1
  43a686:	4605      	mov	r5, r0
  43a688:	4611      	mov	r1, r2
  43a68a:	4630      	mov	r0, r6
  43a68c:	4614      	mov	r4, r2
  43a68e:	f7ff ffd3 	bl	43a638 <__mcmp>
  43a692:	1e07      	subs	r7, r0, #0
  43a694:	d054      	beq.n	43a740 <__mdiff+0xc0>
  43a696:	db4d      	blt.n	43a734 <__mdiff+0xb4>
  43a698:	f04f 0800 	mov.w	r8, #0
  43a69c:	6871      	ldr	r1, [r6, #4]
  43a69e:	4628      	mov	r0, r5
  43a6a0:	f7ff fdc0 	bl	43a224 <_Balloc>
  43a6a4:	6937      	ldr	r7, [r6, #16]
  43a6a6:	6923      	ldr	r3, [r4, #16]
  43a6a8:	f8c0 800c 	str.w	r8, [r0, #12]
  43a6ac:	3614      	adds	r6, #20
  43a6ae:	f104 0214 	add.w	r2, r4, #20
  43a6b2:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
  43a6b6:	f100 0514 	add.w	r5, r0, #20
  43a6ba:	eb06 0e87 	add.w	lr, r6, r7, lsl #2
  43a6be:	2300      	movs	r3, #0
  43a6c0:	f856 8b04 	ldr.w	r8, [r6], #4
  43a6c4:	f852 4b04 	ldr.w	r4, [r2], #4
  43a6c8:	fa13 f388 	uxtah	r3, r3, r8
  43a6cc:	b2a1      	uxth	r1, r4
  43a6ce:	0c24      	lsrs	r4, r4, #16
  43a6d0:	1a59      	subs	r1, r3, r1
  43a6d2:	ebc4 4318 	rsb	r3, r4, r8, lsr #16
  43a6d6:	eb03 4321 	add.w	r3, r3, r1, asr #16
  43a6da:	b289      	uxth	r1, r1
  43a6dc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
  43a6e0:	4594      	cmp	ip, r2
  43a6e2:	f845 1b04 	str.w	r1, [r5], #4
  43a6e6:	ea4f 4323 	mov.w	r3, r3, asr #16
  43a6ea:	4634      	mov	r4, r6
  43a6ec:	d8e8      	bhi.n	43a6c0 <__mdiff+0x40>
  43a6ee:	45b6      	cmp	lr, r6
  43a6f0:	46ac      	mov	ip, r5
  43a6f2:	d915      	bls.n	43a720 <__mdiff+0xa0>
  43a6f4:	f854 2b04 	ldr.w	r2, [r4], #4
  43a6f8:	fa13 f182 	uxtah	r1, r3, r2
  43a6fc:	0c13      	lsrs	r3, r2, #16
  43a6fe:	eb03 4321 	add.w	r3, r3, r1, asr #16
  43a702:	b289      	uxth	r1, r1
  43a704:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
  43a708:	45a6      	cmp	lr, r4
  43a70a:	f845 1b04 	str.w	r1, [r5], #4
  43a70e:	ea4f 4323 	mov.w	r3, r3, asr #16
  43a712:	d8ef      	bhi.n	43a6f4 <__mdiff+0x74>
  43a714:	43f6      	mvns	r6, r6
  43a716:	4476      	add	r6, lr
  43a718:	f026 0503 	bic.w	r5, r6, #3
  43a71c:	3504      	adds	r5, #4
  43a71e:	4465      	add	r5, ip
  43a720:	3d04      	subs	r5, #4
  43a722:	b921      	cbnz	r1, 43a72e <__mdiff+0xae>
  43a724:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  43a728:	3f01      	subs	r7, #1
  43a72a:	2b00      	cmp	r3, #0
  43a72c:	d0fa      	beq.n	43a724 <__mdiff+0xa4>
  43a72e:	6107      	str	r7, [r0, #16]
  43a730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a734:	4633      	mov	r3, r6
  43a736:	f04f 0801 	mov.w	r8, #1
  43a73a:	4626      	mov	r6, r4
  43a73c:	461c      	mov	r4, r3
  43a73e:	e7ad      	b.n	43a69c <__mdiff+0x1c>
  43a740:	4628      	mov	r0, r5
  43a742:	4639      	mov	r1, r7
  43a744:	f7ff fd6e 	bl	43a224 <_Balloc>
  43a748:	2301      	movs	r3, #1
  43a74a:	6147      	str	r7, [r0, #20]
  43a74c:	6103      	str	r3, [r0, #16]
  43a74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a752:	bf00      	nop

0043a754 <__d2b>:
  43a754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  43a758:	b082      	sub	sp, #8
  43a75a:	2101      	movs	r1, #1
  43a75c:	461c      	mov	r4, r3
  43a75e:	f3c3 570a 	ubfx	r7, r3, #20, #11
  43a762:	4615      	mov	r5, r2
  43a764:	9e08      	ldr	r6, [sp, #32]
  43a766:	f7ff fd5d 	bl	43a224 <_Balloc>
  43a76a:	f3c4 0413 	ubfx	r4, r4, #0, #20
  43a76e:	4680      	mov	r8, r0
  43a770:	b10f      	cbz	r7, 43a776 <__d2b+0x22>
  43a772:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  43a776:	9401      	str	r4, [sp, #4]
  43a778:	b31d      	cbz	r5, 43a7c2 <__d2b+0x6e>
  43a77a:	a802      	add	r0, sp, #8
  43a77c:	f840 5d08 	str.w	r5, [r0, #-8]!
  43a780:	f7ff fde2 	bl	43a348 <__lo0bits>
  43a784:	2800      	cmp	r0, #0
  43a786:	d134      	bne.n	43a7f2 <__d2b+0x9e>
  43a788:	e89d 000c 	ldmia.w	sp, {r2, r3}
  43a78c:	f8c8 2014 	str.w	r2, [r8, #20]
  43a790:	2b00      	cmp	r3, #0
  43a792:	bf14      	ite	ne
  43a794:	2402      	movne	r4, #2
  43a796:	2401      	moveq	r4, #1
  43a798:	f8c8 3018 	str.w	r3, [r8, #24]
  43a79c:	f8c8 4010 	str.w	r4, [r8, #16]
  43a7a0:	b9df      	cbnz	r7, 43a7da <__d2b+0x86>
  43a7a2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
  43a7a6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  43a7aa:	6030      	str	r0, [r6, #0]
  43a7ac:	6918      	ldr	r0, [r3, #16]
  43a7ae:	f7ff fdab 	bl	43a308 <__hi0bits>
  43a7b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  43a7b4:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
  43a7b8:	6018      	str	r0, [r3, #0]
  43a7ba:	4640      	mov	r0, r8
  43a7bc:	b002      	add	sp, #8
  43a7be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a7c2:	a801      	add	r0, sp, #4
  43a7c4:	f7ff fdc0 	bl	43a348 <__lo0bits>
  43a7c8:	2401      	movs	r4, #1
  43a7ca:	9b01      	ldr	r3, [sp, #4]
  43a7cc:	f8c8 3014 	str.w	r3, [r8, #20]
  43a7d0:	3020      	adds	r0, #32
  43a7d2:	f8c8 4010 	str.w	r4, [r8, #16]
  43a7d6:	2f00      	cmp	r7, #0
  43a7d8:	d0e3      	beq.n	43a7a2 <__d2b+0x4e>
  43a7da:	9b09      	ldr	r3, [sp, #36]	; 0x24
  43a7dc:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  43a7e0:	4407      	add	r7, r0
  43a7e2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  43a7e6:	6037      	str	r7, [r6, #0]
  43a7e8:	6018      	str	r0, [r3, #0]
  43a7ea:	4640      	mov	r0, r8
  43a7ec:	b002      	add	sp, #8
  43a7ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a7f2:	e89d 000c 	ldmia.w	sp, {r2, r3}
  43a7f6:	f1c0 0120 	rsb	r1, r0, #32
  43a7fa:	fa03 f101 	lsl.w	r1, r3, r1
  43a7fe:	430a      	orrs	r2, r1
  43a800:	40c3      	lsrs	r3, r0
  43a802:	9301      	str	r3, [sp, #4]
  43a804:	f8c8 2014 	str.w	r2, [r8, #20]
  43a808:	e7c2      	b.n	43a790 <__d2b+0x3c>
  43a80a:	bf00      	nop

0043a80c <_read_r>:
  43a80c:	b570      	push	{r4, r5, r6, lr}
  43a80e:	4c08      	ldr	r4, [pc, #32]	; (43a830 <_read_r+0x24>)
  43a810:	4606      	mov	r6, r0
  43a812:	2500      	movs	r5, #0
  43a814:	4608      	mov	r0, r1
  43a816:	4611      	mov	r1, r2
  43a818:	461a      	mov	r2, r3
  43a81a:	6025      	str	r5, [r4, #0]
  43a81c:	f7c6 fbee 	bl	400ffc <_read>
  43a820:	1c43      	adds	r3, r0, #1
  43a822:	d000      	beq.n	43a826 <_read_r+0x1a>
  43a824:	bd70      	pop	{r4, r5, r6, pc}
  43a826:	6823      	ldr	r3, [r4, #0]
  43a828:	2b00      	cmp	r3, #0
  43a82a:	d0fb      	beq.n	43a824 <_read_r+0x18>
  43a82c:	6033      	str	r3, [r6, #0]
  43a82e:	bd70      	pop	{r4, r5, r6, pc}
  43a830:	20002f50 	.word	0x20002f50

0043a834 <__fpclassifyd>:
  43a834:	b410      	push	{r4}
  43a836:	f031 4400 	bics.w	r4, r1, #2147483648	; 0x80000000
  43a83a:	d008      	beq.n	43a84e <__fpclassifyd+0x1a>
  43a83c:	4b11      	ldr	r3, [pc, #68]	; (43a884 <__fpclassifyd+0x50>)
  43a83e:	f5a1 1280 	sub.w	r2, r1, #1048576	; 0x100000
  43a842:	429a      	cmp	r2, r3
  43a844:	d808      	bhi.n	43a858 <__fpclassifyd+0x24>
  43a846:	2004      	movs	r0, #4
  43a848:	f85d 4b04 	ldr.w	r4, [sp], #4
  43a84c:	4770      	bx	lr
  43a84e:	b918      	cbnz	r0, 43a858 <__fpclassifyd+0x24>
  43a850:	2002      	movs	r0, #2
  43a852:	f85d 4b04 	ldr.w	r4, [sp], #4
  43a856:	4770      	bx	lr
  43a858:	f101 41ff 	add.w	r1, r1, #2139095040	; 0x7f800000
  43a85c:	4b09      	ldr	r3, [pc, #36]	; (43a884 <__fpclassifyd+0x50>)
  43a85e:	f501 01e0 	add.w	r1, r1, #7340032	; 0x700000
  43a862:	4299      	cmp	r1, r3
  43a864:	d9ef      	bls.n	43a846 <__fpclassifyd+0x12>
  43a866:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
  43a86a:	d201      	bcs.n	43a870 <__fpclassifyd+0x3c>
  43a86c:	2003      	movs	r0, #3
  43a86e:	e7eb      	b.n	43a848 <__fpclassifyd+0x14>
  43a870:	4b05      	ldr	r3, [pc, #20]	; (43a888 <__fpclassifyd+0x54>)
  43a872:	429c      	cmp	r4, r3
  43a874:	d001      	beq.n	43a87a <__fpclassifyd+0x46>
  43a876:	2000      	movs	r0, #0
  43a878:	e7e6      	b.n	43a848 <__fpclassifyd+0x14>
  43a87a:	fab0 f080 	clz	r0, r0
  43a87e:	0940      	lsrs	r0, r0, #5
  43a880:	e7e2      	b.n	43a848 <__fpclassifyd+0x14>
  43a882:	bf00      	nop
  43a884:	7fdfffff 	.word	0x7fdfffff
  43a888:	7ff00000 	.word	0x7ff00000

0043a88c <__ssprint_r>:
  43a88c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  43a890:	6893      	ldr	r3, [r2, #8]
  43a892:	f8d2 8000 	ldr.w	r8, [r2]
  43a896:	b083      	sub	sp, #12
  43a898:	4691      	mov	r9, r2
  43a89a:	2b00      	cmp	r3, #0
  43a89c:	d072      	beq.n	43a984 <__ssprint_r+0xf8>
  43a89e:	4607      	mov	r7, r0
  43a8a0:	f04f 0b00 	mov.w	fp, #0
  43a8a4:	6808      	ldr	r0, [r1, #0]
  43a8a6:	688b      	ldr	r3, [r1, #8]
  43a8a8:	460d      	mov	r5, r1
  43a8aa:	465c      	mov	r4, fp
  43a8ac:	2c00      	cmp	r4, #0
  43a8ae:	d045      	beq.n	43a93c <__ssprint_r+0xb0>
  43a8b0:	429c      	cmp	r4, r3
  43a8b2:	461e      	mov	r6, r3
  43a8b4:	469a      	mov	sl, r3
  43a8b6:	d348      	bcc.n	43a94a <__ssprint_r+0xbe>
  43a8b8:	89ab      	ldrh	r3, [r5, #12]
  43a8ba:	f413 6f90 	tst.w	r3, #1152	; 0x480
  43a8be:	d02d      	beq.n	43a91c <__ssprint_r+0x90>
  43a8c0:	696e      	ldr	r6, [r5, #20]
  43a8c2:	6929      	ldr	r1, [r5, #16]
  43a8c4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
  43a8c8:	ebc1 0a00 	rsb	sl, r1, r0
  43a8cc:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
  43a8d0:	1c60      	adds	r0, r4, #1
  43a8d2:	1076      	asrs	r6, r6, #1
  43a8d4:	4450      	add	r0, sl
  43a8d6:	4286      	cmp	r6, r0
  43a8d8:	4632      	mov	r2, r6
  43a8da:	bf3c      	itt	cc
  43a8dc:	4606      	movcc	r6, r0
  43a8de:	4632      	movcc	r2, r6
  43a8e0:	055b      	lsls	r3, r3, #21
  43a8e2:	d535      	bpl.n	43a950 <__ssprint_r+0xc4>
  43a8e4:	4611      	mov	r1, r2
  43a8e6:	4638      	mov	r0, r7
  43a8e8:	f7f9 ffe8 	bl	4348bc <_malloc_r>
  43a8ec:	2800      	cmp	r0, #0
  43a8ee:	d039      	beq.n	43a964 <__ssprint_r+0xd8>
  43a8f0:	4652      	mov	r2, sl
  43a8f2:	6929      	ldr	r1, [r5, #16]
  43a8f4:	9001      	str	r0, [sp, #4]
  43a8f6:	f7fa faef 	bl	434ed8 <memcpy>
  43a8fa:	89aa      	ldrh	r2, [r5, #12]
  43a8fc:	9b01      	ldr	r3, [sp, #4]
  43a8fe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  43a902:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  43a906:	81aa      	strh	r2, [r5, #12]
  43a908:	ebca 0206 	rsb	r2, sl, r6
  43a90c:	eb03 000a 	add.w	r0, r3, sl
  43a910:	616e      	str	r6, [r5, #20]
  43a912:	612b      	str	r3, [r5, #16]
  43a914:	6028      	str	r0, [r5, #0]
  43a916:	60aa      	str	r2, [r5, #8]
  43a918:	4626      	mov	r6, r4
  43a91a:	46a2      	mov	sl, r4
  43a91c:	4652      	mov	r2, sl
  43a91e:	4659      	mov	r1, fp
  43a920:	f7fa fb74 	bl	43500c <memmove>
  43a924:	f8d9 2008 	ldr.w	r2, [r9, #8]
  43a928:	68ab      	ldr	r3, [r5, #8]
  43a92a:	6828      	ldr	r0, [r5, #0]
  43a92c:	1b9b      	subs	r3, r3, r6
  43a92e:	4450      	add	r0, sl
  43a930:	1b14      	subs	r4, r2, r4
  43a932:	60ab      	str	r3, [r5, #8]
  43a934:	6028      	str	r0, [r5, #0]
  43a936:	f8c9 4008 	str.w	r4, [r9, #8]
  43a93a:	b31c      	cbz	r4, 43a984 <__ssprint_r+0xf8>
  43a93c:	f8d8 b000 	ldr.w	fp, [r8]
  43a940:	f8d8 4004 	ldr.w	r4, [r8, #4]
  43a944:	f108 0808 	add.w	r8, r8, #8
  43a948:	e7b0      	b.n	43a8ac <__ssprint_r+0x20>
  43a94a:	4626      	mov	r6, r4
  43a94c:	46a2      	mov	sl, r4
  43a94e:	e7e5      	b.n	43a91c <__ssprint_r+0x90>
  43a950:	4638      	mov	r0, r7
  43a952:	f7fa fc19 	bl	435188 <_realloc_r>
  43a956:	4603      	mov	r3, r0
  43a958:	2800      	cmp	r0, #0
  43a95a:	d1d5      	bne.n	43a908 <__ssprint_r+0x7c>
  43a95c:	4638      	mov	r0, r7
  43a95e:	6929      	ldr	r1, [r5, #16]
  43a960:	f7f9 fc4e 	bl	434200 <_free_r>
  43a964:	230c      	movs	r3, #12
  43a966:	603b      	str	r3, [r7, #0]
  43a968:	89ab      	ldrh	r3, [r5, #12]
  43a96a:	2200      	movs	r2, #0
  43a96c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  43a970:	f04f 30ff 	mov.w	r0, #4294967295
  43a974:	81ab      	strh	r3, [r5, #12]
  43a976:	f8c9 2008 	str.w	r2, [r9, #8]
  43a97a:	f8c9 2004 	str.w	r2, [r9, #4]
  43a97e:	b003      	add	sp, #12
  43a980:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  43a984:	2000      	movs	r0, #0
  43a986:	f8c9 0004 	str.w	r0, [r9, #4]
  43a98a:	b003      	add	sp, #12
  43a98c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0043a990 <_wcrtomb_r>:
  43a990:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  43a994:	4605      	mov	r5, r0
  43a996:	b086      	sub	sp, #24
  43a998:	461e      	mov	r6, r3
  43a99a:	460c      	mov	r4, r1
  43a99c:	b1a1      	cbz	r1, 43a9c8 <_wcrtomb_r+0x38>
  43a99e:	4b10      	ldr	r3, [pc, #64]	; (43a9e0 <_wcrtomb_r+0x50>)
  43a9a0:	4617      	mov	r7, r2
  43a9a2:	f8d3 8000 	ldr.w	r8, [r3]
  43a9a6:	f7ff fc1b 	bl	43a1e0 <__locale_charset>
  43a9aa:	9600      	str	r6, [sp, #0]
  43a9ac:	4603      	mov	r3, r0
  43a9ae:	4621      	mov	r1, r4
  43a9b0:	463a      	mov	r2, r7
  43a9b2:	4628      	mov	r0, r5
  43a9b4:	47c0      	blx	r8
  43a9b6:	1c43      	adds	r3, r0, #1
  43a9b8:	d103      	bne.n	43a9c2 <_wcrtomb_r+0x32>
  43a9ba:	2200      	movs	r2, #0
  43a9bc:	238a      	movs	r3, #138	; 0x8a
  43a9be:	6032      	str	r2, [r6, #0]
  43a9c0:	602b      	str	r3, [r5, #0]
  43a9c2:	b006      	add	sp, #24
  43a9c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  43a9c8:	4b05      	ldr	r3, [pc, #20]	; (43a9e0 <_wcrtomb_r+0x50>)
  43a9ca:	681f      	ldr	r7, [r3, #0]
  43a9cc:	f7ff fc08 	bl	43a1e0 <__locale_charset>
  43a9d0:	9600      	str	r6, [sp, #0]
  43a9d2:	4603      	mov	r3, r0
  43a9d4:	4622      	mov	r2, r4
  43a9d6:	4628      	mov	r0, r5
  43a9d8:	a903      	add	r1, sp, #12
  43a9da:	47b8      	blx	r7
  43a9dc:	e7eb      	b.n	43a9b6 <_wcrtomb_r+0x26>
  43a9de:	bf00      	nop
  43a9e0:	20001740 	.word	0x20001740

0043a9e4 <__ascii_wctomb>:
  43a9e4:	b121      	cbz	r1, 43a9f0 <__ascii_wctomb+0xc>
  43a9e6:	2aff      	cmp	r2, #255	; 0xff
  43a9e8:	d804      	bhi.n	43a9f4 <__ascii_wctomb+0x10>
  43a9ea:	700a      	strb	r2, [r1, #0]
  43a9ec:	2001      	movs	r0, #1
  43a9ee:	4770      	bx	lr
  43a9f0:	4608      	mov	r0, r1
  43a9f2:	4770      	bx	lr
  43a9f4:	238a      	movs	r3, #138	; 0x8a
  43a9f6:	6003      	str	r3, [r0, #0]
  43a9f8:	f04f 30ff 	mov.w	r0, #4294967295
  43a9fc:	4770      	bx	lr
  43a9fe:	bf00      	nop

0043aa00 <__register_exitproc>:
  43aa00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  43aa04:	4c25      	ldr	r4, [pc, #148]	; (43aa9c <__register_exitproc+0x9c>)
  43aa06:	6825      	ldr	r5, [r4, #0]
  43aa08:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  43aa0c:	4606      	mov	r6, r0
  43aa0e:	4688      	mov	r8, r1
  43aa10:	4692      	mov	sl, r2
  43aa12:	4699      	mov	r9, r3
  43aa14:	b3cc      	cbz	r4, 43aa8a <__register_exitproc+0x8a>
  43aa16:	6860      	ldr	r0, [r4, #4]
  43aa18:	281f      	cmp	r0, #31
  43aa1a:	dc18      	bgt.n	43aa4e <__register_exitproc+0x4e>
  43aa1c:	1c43      	adds	r3, r0, #1
  43aa1e:	b17e      	cbz	r6, 43aa40 <__register_exitproc+0x40>
  43aa20:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  43aa24:	2101      	movs	r1, #1
  43aa26:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  43aa2a:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
  43aa2e:	fa01 f200 	lsl.w	r2, r1, r0
  43aa32:	4317      	orrs	r7, r2
  43aa34:	2e02      	cmp	r6, #2
  43aa36:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  43aa3a:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  43aa3e:	d01e      	beq.n	43aa7e <__register_exitproc+0x7e>
  43aa40:	3002      	adds	r0, #2
  43aa42:	6063      	str	r3, [r4, #4]
  43aa44:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  43aa48:	2000      	movs	r0, #0
  43aa4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  43aa4e:	4b14      	ldr	r3, [pc, #80]	; (43aaa0 <__register_exitproc+0xa0>)
  43aa50:	b303      	cbz	r3, 43aa94 <__register_exitproc+0x94>
  43aa52:	f44f 70c8 	mov.w	r0, #400	; 0x190
  43aa56:	f7f9 ff21 	bl	43489c <malloc>
  43aa5a:	4604      	mov	r4, r0
  43aa5c:	b1d0      	cbz	r0, 43aa94 <__register_exitproc+0x94>
  43aa5e:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  43aa62:	2700      	movs	r7, #0
  43aa64:	e880 0088 	stmia.w	r0, {r3, r7}
  43aa68:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  43aa6c:	4638      	mov	r0, r7
  43aa6e:	2301      	movs	r3, #1
  43aa70:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  43aa74:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  43aa78:	2e00      	cmp	r6, #0
  43aa7a:	d0e1      	beq.n	43aa40 <__register_exitproc+0x40>
  43aa7c:	e7d0      	b.n	43aa20 <__register_exitproc+0x20>
  43aa7e:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  43aa82:	430a      	orrs	r2, r1
  43aa84:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  43aa88:	e7da      	b.n	43aa40 <__register_exitproc+0x40>
  43aa8a:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  43aa8e:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  43aa92:	e7c0      	b.n	43aa16 <__register_exitproc+0x16>
  43aa94:	f04f 30ff 	mov.w	r0, #4294967295
  43aa98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  43aa9c:	00440450 	.word	0x00440450
  43aaa0:	0043489d 	.word	0x0043489d
  43aaa4:	3737564f 	.word	0x3737564f
  43aaa8:	69203034 	.word	0x69203034
  43aaac:	6567616d 	.word	0x6567616d
  43aab0:	6e657320 	.word	0x6e657320
  43aab4:	0a726f73 	.word	0x0a726f73
  43aab8:	74706163 	.word	0x74706163
  43aabc:	20657275 	.word	0x20657275
  43aac0:	6d617865 	.word	0x6d617865
  43aac4:	00656c70 	.word	0x00656c70
  43aac8:	61656c50 	.word	0x61656c50
  43aacc:	57206573 	.word	0x57206573
  43aad0:	20746961 	.word	0x20746961
  43aad4:	69727564 	.word	0x69727564
  43aad8:	0a20676e 	.word	0x0a20676e
  43aadc:	74696e69 	.word	0x74696e69
  43aae0:	696c6169 	.word	0x696c6169
  43aae4:	6974617a 	.word	0x6974617a
  43aae8:	00006e6f 	.word	0x00006e6f
  43aaec:	61656c50 	.word	0x61656c50
  43aaf0:	50206573 	.word	0x50206573
  43aaf4:	73736572 	.word	0x73736572
  43aaf8:	74756220 	.word	0x74756220
  43aafc:	0a6e6f74 	.word	0x0a6e6f74
  43ab00:	73206f74 	.word	0x73206f74
  43ab04:	74726174 	.word	0x74726174
  43ab08:	6f727020 	.word	0x6f727020
  43ab0c:	73736563 	.word	0x73736563
  43ab10:	0a676e69 	.word	0x0a676e69
  43ab14:	72616220 	.word	0x72616220
  43ab18:	65646f63 	.word	0x65646f63
  43ab1c:	00000073 	.word	0x00000073
  43ab20:	73657250 	.word	0x73657250
  43ab24:	75622073 	.word	0x75622073
  43ab28:	6e6f7474 	.word	0x6e6f7474
  43ab2c:	206f740a 	.word	0x206f740a
  43ab30:	72617473 	.word	0x72617473
  43ab34:	65642074 	.word	0x65642074
  43ab38:	69646f63 	.word	0x69646f63
  43ab3c:	0a20676e 	.word	0x0a20676e
  43ab40:	68617262 	.word	0x68617262
  43ab44:	00000021 	.word	0x00000021

0043ab48 <_ZL14CV_DEPTH_BYTES>:
  43ab48:	00000001 00000001 00000002 00000002     ................
  43ab58:	00000004 00000004 00000008 00000000     ................

0043ab68 <OV7740_QVGA_YUV422_10FPS>:
  43ab68:	8012000e 001305fe 00120511 d40c10d5     ................
  43ab78:	0116340d a0182517 f01a0319 0322891b     .4...%........".
  43ab88:	f82b1829 a031012c c433f032 3f36b43a     ).+.,.1.2.3.:.6?
  43ab98:	80276004 803e0f3d 7f40403f 29426a41     .`'.=.>.?@@.AjB)
  43aba8:	4145e544 64490247 704ba14a 504d1a4c     D.EAG.IdJ.KpL.MP
  43abb8:	0064134e 1a688867 3c243814 72263025     N.d.g.h..8$<%0&r
  43abc8:	7e519750 00530052 23210020 00e91438     P.Q~R.S. .!#8...
  43abd8:	ff575556 ff59ff58 00ec045f 7f80ff13     VUW.X.Y._.......
  43abe8:	32823f81 11380183 03860085 05880187     .?.2..8.........
  43abf8:	308d3089 3093858f 30998595 089c859b     .0.0...0...0....
  43ac08:	239e129d 55a0459f 72a264a1 8ba47fa3     ...#.E.U.d.r....
  43ac18:	a7a695a5 cba8b5a7 ecaadda9 78ce1aab     ...............x
  43ac28:	0ad06ecf 84d20cd1 1ed490d3 1f5b245a     .n..........Z$[.
  43ac38:	605d885c ffbe6eac 503100bf 3f827832     \.]`.n....1P2x.?
  43ac48:	3f360012 c4330053 0322891b ffff0228     ..6?S.3...".(...

0043ac58 <OV7740_QVGA_YUV422_15FPS>:
  43ac58:	8012000e 001305fe 00120311 d40c10d5     ................
  43ac68:	0116340d a0182517 f01a0319 0322891b     .4...%........".
  43ac78:	f82b1829 a031012c c433f032 3f36b43a     ).+.,.1.2.3.:.6?
  43ac88:	80276004 803e0f3d 7f40403f 29426a41     .`'.=.>.?@@.AjB)
  43ac98:	4145e544 64490247 704ba14a 504d1a4c     D.EAG.IdJ.KpL.MP
  43aca8:	0064134e 1a688867 3c243814 72263025     N.d.g.h..8$<%0&r
  43acb8:	7e519750 00530052 23210020 00e91438     P.Q~R.S. .!#8...
  43acc8:	ff575556 ff59ff58 00ec045f 7f80ff13     VUW.X.Y._.......
  43acd8:	32823f81 11380183 03860085 05880187     .?.2..8.........
  43ace8:	308d3089 3093858f 30998595 089c859b     .0.0...0...0....
  43acf8:	239e129d 55a0459f 72a264a1 8ba47fa3     ...#.E.U.d.r....
  43ad08:	a7a695a5 cba8b5a7 ecaadda9 78ce1aab     ...............x
  43ad18:	0ad06ecf 84d20cd1 1ed490d3 1f5b245a     .n..........Z$[.
  43ad28:	605d885c ffbe6eac 503100bf 3f827832     \.]`.n....1P2x.?
  43ad38:	3f360012 c4330053 0322891b ffff0228     ..6?S.3...".(...

0043ad48 <OV7740_QVGA_YUV422_20FPS>:
  43ad48:	8012000e 001305fe 00120211 d40c10d5     ................
  43ad58:	0116340d a0182517 f01a0319 0322891b     .4...%........".
  43ad68:	f82b1829 a031012c c433f032 3f36b43a     ).+.,.1.2.3.:.6?
  43ad78:	80276004 803e0f3d 7f40403f 29426a41     .`'.=.>.?@@.AjB)
  43ad88:	4145e544 64490247 704ba14a 504d1a4c     D.EAG.IdJ.KpL.MP
  43ad98:	0064134e 1a688867 3c243814 72263025     N.d.g.h..8$<%0&r
  43ada8:	7e519750 00530052 23210020 00e91438     P.Q~R.S. .!#8...
  43adb8:	ff575556 ff59ff58 00ec045f 7f80ff13     VUW.X.Y._.......
  43adc8:	32823f81 11380183 03860085 05880187     .?.2..8.........
  43add8:	308d3089 3093858f 30998595 089c859b     .0.0...0...0....
  43ade8:	239e129d 55a0459f 72a264a1 8ba47fa3     ...#.E.U.d.r....
  43adf8:	a7a695a5 cba8b5a7 ecaadda9 78ce1aab     ...............x
  43ae08:	0ad06ecf 84d20cd1 1ed490d3 1f5b245a     .n..........Z$[.
  43ae18:	605d885c ffbe6eac 503100bf 3f827832     \.]`.n....1P2x.?
  43ae28:	3f360012 c4330053 0322891b ffff0228     ..6?S.3...".(...

0043ae38 <OV7740_QVGA_YUV422_30FPS>:
  43ae38:	8012000e 001305fe 00120111 d40c10d5     ................
  43ae48:	0116340d a0182517 f01a0319 0322891b     .4...%........".
  43ae58:	f82b1829 a031012c c433f032 3f36b43a     ).+.,.1.2.3.:.6?
  43ae68:	80276004 803e0f3d 7f40403f 29426a41     .`'.=.>.?@@.AjB)
  43ae78:	4145e544 64490247 704ba14a 504d1a4c     D.EAG.IdJ.KpL.MP
  43ae88:	0064134e 1a688867 3c243814 72263025     N.d.g.h..8$<%0&r
  43ae98:	7e519750 00530052 23210020 00e91438     P.Q~R.S. .!#8...
  43aea8:	ff575556 ff59ff58 00ec045f 7f80ff13     VUW.X.Y._.......
  43aeb8:	32823f81 11380183 03860085 05880187     .?.2..8.........
  43aec8:	308d3089 3093858f 30998595 089c859b     .0.0...0...0....
  43aed8:	239e129d 55a0459f 72a264a1 8ba47fa3     ...#.E.U.d.r....
  43aee8:	a7a695a5 cba8b5a7 ecaadda9 78ce1aab     ...............x
  43aef8:	0ad06ecf 84d20cd1 1ed490d3 1f5b245a     .n..........Z$[.
  43af08:	605d885c ffbe6eac 503100bf 3f827832     \.]`.n....1P2x.?
  43af18:	3f360012 c4330053 0322891b ffff0228     ..6?S.3...".(...

0043af28 <OV7740_QVGA_RGB888>:
  43af28:	8012000e 01110013 10d50012 340d120c     ...............4
  43af38:	a0182517 f01a0319 0322891b f82b1829     .%........".).+.
  43af48:	a031012c c433f032 3f36b43a 80276004     ,.1.2.3.:.6?.`'.
  43af58:	803e0f3d 7f40403f 29426a41 4145e544     =.>.?@@.AjB)D.EA
  43af68:	64490247 704ba14a 504d1a4c 0064134e     G.IdJ.KpL.MPN.d.
  43af78:	1a688867 3c243814 72263025 7e519750     g.h..8$<%0&rP.Q~
  43af88:	00530052 23210020 00e91438 ff575556     R.S. .!#8...VUW.
  43af98:	ff59ff58 00ec045f 7f80ff13 32823f81     X.Y._........?.2
  43afa8:	11380183 00857084 01870386 30890588     ..8..p.........0
  43afb8:	858f308d 85953093 859b3099 129d089c     .0...0...0......
  43afc8:	459f239e 64a155a0 7fa372a2 95a58ba4     .#.E.U.d.r......
  43afd8:	b5a7a7a6 dda9cba8 1aabecaa 6ecf78ce     .............x.n
  43afe8:	0cd10ad0 90d384d2 245a1ed4 885c1f5b     ..........Z$[.\.
  43aff8:	6eac605d 00bfffbe 78325031 01123f82     ]`.n....1P2x.?..
  43b008:	04832f36 f4330053 03228a1b 00840084     6/..S.3...".....
  43b018:	ffff0228                                (...

0043b01c <OV7740_QQVGA_YUV422>:
  43b01c:	8012000e 01110013 10d50012 340d540c     .............T.4
  43b02c:	25170116 0319a018 891bf01a 18290322     ...%........".).
  43b03c:	012cf82b f032a031 b43ac433 60043f36     +.,.1.2.3.:.6?.`
  43b04c:	0f3d8027 403f803e 6a417f40 e5442942     '.=.>.?@@.AjB)D.
  43b05c:	02474145 a14a6449 1a4c704b 134e504d     EAG.IdJ.KpL.MPN.
  43b06c:	88670064 38141a68 30253c24 97507226     d.g.h..8$<%0&rP.
  43b07c:	00527e51 00200053 14382321 555600e9     Q~R.S. .!#8...VU
  43b08c:	ff58ff57 045fff59 ff1300ec 3f817f80     W.X.Y._........?
  43b09c:	01833282 70841138 03860085 05880187     .2..8..p........
  43b0ac:	308d3089 3093858f 30998595 089c859b     .0.0...0...0....
  43b0bc:	239e129d 55a0459f 72a264a1 8ba47fa3     ...#.E.U.d.r....
  43b0cc:	a7a695a5 cba8b5a7 ecaadda9 78ce1aab     ...............x
  43b0dc:	0ad06ecf 84d20cd1 1ed490d3 1f5b245a     .n..........Z$[.
  43b0ec:	605d885c ffbe6eac 283100bf 00343c32     \.]`.n....1(2<4.
  43b0fc:	00123f82 00533f36 891b0033 02280322     .?..6?S.3...".(.
  43b10c:	ffff00d9                                ....

0043b110 <OV7740_QQVGA_RGB888>:
  43b110:	8012000e 01110013 10d50012 340d120c     ...............4
  43b120:	a0182517 f01a0319 0322891b f82b1829     .%........".).+.
  43b130:	a031012c c433f032 3f36b43a 80276004     ,.1.2.3.:.6?.`'.
  43b140:	803e0f3d 7f40403f 29426a41 4145e544     =.>.?@@.AjB)D.EA
  43b150:	64490247 704ba14a 504d1a4c 0064134e     G.IdJ.KpL.MPN.d.
  43b160:	1a688867 3c243814 72263025 7e519750     g.h..8$<%0&rP.Q~
  43b170:	00530052 23210020 00e91438 ff575556     R.S. .!#8...VUW.
  43b180:	ff59ff58 00ec045f 7f80ff13 32823f81     X.Y._........?.2
  43b190:	11380183 00857084 01870386 30890588     ..8..p.........0
  43b1a0:	858f308d 85953093 859b3099 129d089c     .0...0...0......
  43b1b0:	459f239e 64a155a0 7fa372a2 95a58ba4     .#.E.U.d.r......
  43b1c0:	b5a7a7a6 dda9cba8 1aabecaa 6ecf78ce     .............x.n
  43b1d0:	0cd10ad0 90d384d2 245a1ed4 885c1f5b     ..........Z$[.\.
  43b1e0:	6eac605d 00bfffbe 3c322831 01123f82     ]`.n....1(2<.?..
  43b1f0:	04832f36 f4330053 03228a1b 00840084     6/..S.3...".....
  43b200:	ffff0228                                (...

0043b204 <OV7740_TEST_PATTERN>:
  43b204:	8012000e 001305fe 00120211 d40c10d5     ................
  43b214:	0116340d a0182517 f01a0319 0322891b     .4...%........".
  43b224:	f82b1829 a031012c c433f032 3f36b43a     ).+.,.1.2.3.:.6?
  43b234:	80276004 803e0f3d 7f40403f 29426a41     .`'.=.>.?@@.AjB)
  43b244:	4145e544 64490247 704ba14a 504d1a4c     D.EAG.IdJ.KpL.MP
  43b254:	0064134e 1a688867 3c243814 72263025     N.d.g.h..8$<%0&r
  43b264:	7e519750 00530052 23210020 02840738     P.Q~R.S. .!#8...
  43b274:	00e91438 ff575556 ff59ff58 00ec045f     8...VUW.X.Y._...
  43b284:	7f80ff13 32823f81 11380183 03860085     .....?.2..8.....
  43b294:	05880187 308d3089 3093858f 30998595     .....0.0...0...0
  43b2a4:	089c859b 239e129d 55a0459f 72a264a1     .......#.E.U.d.r
  43b2b4:	8ba47fa3 a7a695a5 cba8b5a7 ecaadda9     ................
  43b2c4:	78ce1aab 0ad06ecf 84d20cd1 1ed490d3     ...x.n..........
  43b2d4:	1f5b245a 605d885c ffbe6eac 503100bf     Z$[.\.]`.n....1P
  43b2e4:	3f827832 3f360012 c4330053 0322891b     2x.?..6?S.3...".
  43b2f4:	ffff0228                                (...

0043b2f8 <OV7740_VGA_YUV422_20FPS>:
  43b2f8:	8012000e 001305fe 00120211 d40c10d5     ................
  43b308:	0116340d a0182517 f01a0319 0322891b     .4...%........".
  43b318:	f82b1829 a031012c c433f032 3f36b43a     ).+.,.1.2.3.:.6?
  43b328:	80276004 803e0f3d 7f40403f 29426a41     .`'.=.>.?@@.AjB)
  43b338:	4145e544 64490247 704ba14a 504d1a4c     D.EAG.IdJ.KpL.MP
  43b348:	0064134e 1a688867 3c243814 72263025     N.d.g.h..8$<%0&r
  43b358:	7e519750 00530052 23210020 00e91438     P.Q~R.S. .!#8...
  43b368:	ff575556 ff59ff58 00ec045f 7f80ff13     VUW.X.Y._.......
  43b378:	32823f81 11380183 03860085 05880187     .?.2..8.........
  43b388:	308d3089 3093858f 30998595 089c859b     .0.0...0...0....
  43b398:	239e129d 55a0459f 72a264a1 8ba47fa3     ...#.E.U.d.r....
  43b3a8:	a7a695a5 cba8b5a7 ecaadda9 78ce1aab     ...............x
  43b3b8:	0ad06ecf 84d20cd1 1ed490d3 1f5b245a     .n..........Z$[.
  43b3c8:	605d885c ffbe6eac a03100bf 3f82f032     \.]`.n....1.2..?
  43b3d8:	3f360012 c4330053 0322891b ffff0228     ..6?S.3...".(...

0043b3e8 <p_uc_charset10x14>:
	...
  43b404:	ccffccff 00000000 00000000 00000000     ................
  43b414:	00f000f0 00000000 00f000f0 00000000     ................
  43b424:	c00cc00c fcfffcff c00cc00c fcfffcff     ................
  43b434:	c00cc00c 701e600c 3033303f fcfffcff     .....`.p?030....
  43b444:	f0333033 c018e039 0cf00060 f0603cf0     303.9...`....<`.
  43b454:	000fc003 3cf0183c 18003cc0 f87ff03c     ....<..<.<..<...
  43b464:	8cc71cc3 ecdccccf 30307878 cc00fc00     ........xx00....
  43b474:	00000000 00440000 00f800ec 00000070     ......D.....p...
	...
  43b48c:	f03fc00f 18607878 0cc00cc0 00000000     ..?.xx`.........
  43b49c:	00000000 0cc00cc0 78781860 c00ff03f     ........`.xx?...
  43b4ac:	00000000 e00e600c 8003c007 f83ff83f     .....`......?.?.
  43b4bc:	c0078003 600ce00e 00030003 00030003     .......`........
  43b4cc:	f03ff03f 00030003 00030003 ec004400     ?.?..........D..
  43b4dc:	7000f800 00000000 00000000 00000000     ...p............
  43b4ec:	00030003 00030003 00030003 00030003     ................
  43b4fc:	00030003 3c001800 18003c00 00000000     .......<.<......
	...
  43b514:	0c000000 f0003c00 000fc003 00f0003c     .....<......<...
  43b524:	000000c0 f87ff03f ccc1fce0 0cc78cc3     ....?...........
  43b534:	1cfc0cce f03ff87f 00000000 0c700c30     ......?.....0.p.
  43b544:	fcfffcff 0c000c00 00000000 1c700c30     ............0.p.
  43b554:	7cc03ce0 ccc1ecc0 0ce78cc3 0c3c0c7e     .<.|........~.<.
  43b564:	38703030 0cc01ce0 0cc30cc0 1ce30cc3     00p8............
  43b574:	f03cf87f c007c003 c01cc00e c070c038     ..<.........8.p.
  43b584:	fcfffcff c000c000 38fc30fc 0ccc1ccc     .........0.8....
  43b594:	0ccc0ccc 1cce0ccc f0c3f8c7 f87ff03f     ............?...
  43b5a4:	0cc31ce3 0cc30cc3 9ce30cc3 f030f871     ............q.0.
  43b5b4:	00c000c0 00c000c0 fcc7fcc3 00dc00ce     ................
  43b5c4:	00f000f8 f87ff03c 0cc39ce7 0cc30cc3     ....<...........
  43b5d4:	9ce70cc3 f03cf87f 007e003c 0cc30ce7     ......<.<.~.....
  43b5e4:	38c31cc3 e0e770c3 803fc07f 00000000     ...8.p....?.....
  43b5f4:	60180000 f03cf03c 00006018 00000000     ...`<.<..`......
  43b604:	00000000 44180000 f83cec3c 00007018     .......D<.<..p..
  43b614:	00000000 00030000 c00f8007 7038e01c     ..............8p
  43b624:	1ce03870 00000cc0 c00cc00c c00cc00c     p8..............
  43b634:	c00cc00c c00cc00c c00cc00c 0cc00000     ................
  43b644:	38701ce0 e01c7038 8007c00f 00000003     ..p88p..........
  43b654:	00700030 00c000e0 ecc3ecc1 00e600c3     0.p.............
  43b664:	003c007e f871f030 0cc39ce3 fcc3fcc3     ~.<.0.q.........
  43b674:	1ce00cc0 f03ff87f fc7ffc3f c0c0c0e0     ......?.?.......
  43b684:	c0c0c0c0 c0e0c0c0 fc3ffc7f fcfffcff     ..........?.....
  43b694:	0cc30cc3 0cc30cc3 9ce70cc3 f03cf87f     ..............<.
  43b6a4:	f87ff03f 0cc01ce0 0cc00cc0 1ce00cc0     ?...............
  43b6b4:	30303870 fcfffcff 0cc00cc0 0cc00cc0     p800............
  43b6c4:	1ce00cc0 f03ff87f fcfffcff 0cc30cc3     ......?.........
  43b6d4:	0cc30cc3 0cc30cc3 0cc00cc0 fcfffcff     ................
  43b6e4:	00c300c3 00c300c3 00c300c3 00c000c0     ................
  43b6f4:	f87ff03f 0cc01ce0 0cc30cc0 1ce30cc3     ?...............
  43b704:	f033f873 fcfffcff 00030003 00030003     s.3.............
  43b714:	00030003 fcfffcff 00000000 0cc00cc0     ................
  43b724:	fcfffcff 0cc00cc0 00000000 38003000     .............0.8
  43b734:	0cc01cc0 1cc00cc0 f0fff8ff 00c000c0     ................
  43b744:	fcfffcff 80078007 e01cc00f 38707038     ............8pp8
  43b754:	0cc01ce0 fcfffcff 0c000c00 0c000c00     ................
  43b764:	0c000c00 0c000c00 fcfffcff 00380070     ............p.8.
  43b774:	001f001f 00700038 fcfffcff fcfffcff     ....8.p.........
  43b784:	000e001c 80030007 e000c001 fcfffcff     ................
  43b794:	f87ff03f 0cc01ce0 0cc00cc0 1ce00cc0     ?...............
  43b7a4:	f03ff87f fcfffcff 00c300c3 00c300c3     ..?.............
  43b7b4:	00e700c3 003c007e f87ff03f 0cc01ce0     ....~.<.?.......
  43b7c4:	ecc0ccc0 38e07cc0 ec3ffc7f fcfffcff     .....|.8..?.....
  43b7d4:	80c300c3 c0c380c3 70e7c0c3 1c3c3c7e     ...........p~<<.
  43b7e4:	1c7e183c 0cc30ce7 0cc30cc3 9cc30cc3     <.~.............
  43b7f4:	f060f8e1 00c000c0 00c000c0 fcfffcff     ..`.............
  43b804:	00c000c0 00c000c0 f8fff0ff 0c001c00     ................
  43b814:	0c000c00 1c000c00 f0fff8ff e0ffc0ff     ................
  43b824:	38007000 1c001c00 70003800 c0ffe0ff     .p.8.....8.p....
  43b834:	f8fff0ff 3c001c00 f800f800 1c003c00     .......<.....<..
  43b844:	f0fff8ff 7cf83cf0 c00fe01c 80078007     .....<.|........
  43b854:	e01cc00f 3cf07cf8 00fe00fc 80030007     .....|.<........
  43b864:	fc01fc01 00078003 00fc00fe 7cc03cc0     .............<.|
  43b874:	ccc1ecc0 0cc78cc3 0cdc0cce 0cf00cf8     ................
  43b884:	00000000 fcfffcff 0cc00cc0 00000cc0     ................
  43b894:	00000000 00300030 000c000c 00030003     ....0.0.........
  43b8a4:	c000c000 30003000 00000000 0cc00cc0     .....0.0........
  43b8b4:	fcff0cc0 0000fcff 00000000 001c000c     ................
  43b8c4:	00700038 00e000e0 00380070 000c001c     8.p.....p.8.....
  43b8d4:	0c000c00 0c000c00 0c000c00 0c000c00     ................
  43b8e4:	0c000c00 00000000 00e000c0 00380070     ............p.8.
  43b8f4:	00000018 00000000 78063000 cc0cfc0e     .........0.x....
  43b904:	cc0ccc0c cc0ecc0c f803fc07 fcfffcff     ................
  43b914:	0c030c03 0c030c03 9c030c03 f000f801     ................
  43b924:	f807f003 0c0c1c0e 0c0c0c0c 1c0e0c0c     ................
  43b934:	30033807 f801f000 0c039c03 0c030c03     .8.0............
  43b944:	0c030c03 fcfffcff f807f003 cc0cdc0e     ................
  43b954:	cc0ccc0c dc0ecc0c 9003d807 00030000     ................
  43b964:	fc7ffc3f 00e300e3 00300070 00000000     ?.......p.0.....
  43b974:	9c071803 cc0ccc0f cc0ccc0c dc0ccc0c     ................
  43b984:	f007f80f fcfffcff 00030003 00030003     ................
  43b994:	fc018003 0000fc00 00000000 00000000     ................
  43b9a4:	fc1bfc1b 00000000 00000000 30000000     ...............0
  43b9b4:	1c003800 0c000c00 f8cf1c00 0000f0cf     .8..............
  43b9c4:	fcff0000 e000fcff f003e001 1c0e3807     .............8..
  43b9d4:	00000c0c 00000000 0cc00cc0 fcfffcff     ................
  43b9e4:	0c000c00 00000000 fc0ffc0f 0007000e     ................
  43b9f4:	c003c003 000e0007 fc0ffc0f fc0ffc0f     ................
  43ba04:	00070003 000c000e 000e000c fc03fc07     ................
  43ba14:	f807f003 0c0c1c0e 0c0c0c0c 1c0e0c0c     ................
  43ba24:	f003f807 fc0ffc0f c00cc00c c00cc00c     ................
  43ba34:	c00fc00c 00038007 80070003 c00cc00f     ................
  43ba44:	c00cc00c c00cc00c fc0ffc0f fc0ffc0f     ................
  43ba54:	00078003 000c000e 000e000c 00030007     ................
  43ba64:	9c071803 cc0ccc0f cc0ccc0c fc0ccc0c     ................
  43ba74:	3006780e 000c0000 f0ff000c 1c0cf8ff     .x.0............
  43ba84:	380c1c0c 0000300c f80ff00f 0c001c00     ...8.0..........
  43ba94:	0c000c00 1c000c00 f00ff80f e00fc00f     ................
  43baa4:	38007000 1c001c00 70003800 c00fe00f     .p.8.....8.p....
  43bab4:	f80ff00f 1c001c00 f800f800 1c001c00     ................
  43bac4:	f00ff80f 1c0e0c0c f0033807 e001e001     .........8......
  43bad4:	3807f003 0c0c1c0e 000e000c 9c030c07     ...8............
  43bae4:	f001f801 00078003 000c000e 1c0c0c0c     ................
  43baf4:	7c0c3c0c cc0dec0c 0c0f8c0f 0c0c0c0e     .<.|............
  43bb04:	00030000 f03f8007 1ce0f87c 0cc00cc0     ......?.|.......
  43bb14:	00000cc0 0c030c03 fc7ffc3f 0cc30ce3     ........?.......
  43bb24:	0ce00cc0 0c300c70 0cc00000 0cc00cc0     ....p.0.........
  43bb34:	f87c1ce0 8007f03f 00000003 00c000c0     ..|.?...........
  43bb44:	00c000c0 00c000c0 00c000c0 00c000c0     ................
  43bb54:	fcfffcff fcfffcff fcfffcff fcfffcff     ................
  43bb64:	fcfffcff 74697845 20676e69 68746977     ....Exiting with
  43bb74:	61747320 20737574 0a2e6425 00000000      status %d......
  43bb84:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43bb94:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43bba4:	66202273 656c6961 090a2e64 6b636f6c     s" failed...lock
  43bbb4:	2064253d 3d716572 000a6425 732f2e2e     =%d req=%d..../s
  43bbc4:	412f6372 742f4653 64726968 74726170     rc/ASF/thirdpart
  43bbd4:	627a2f79 692f7261 756c636e 642f6564     y/zbar/include/d
  43bbe4:	646f6365 682e7265 00000000 646f6364     ecoder.h....dcod
  43bbf4:	6c3e2d65 206b636f 72203d3d 00007165     e->lock == req..
  43bc04:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43bc14:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43bc24:	66202273 656c6961 090a2e64 3d676973     s" failed...sig=
  43bc34:	6f207825 65736666 78253d74 78646920     %x offset=%x idx
  43bc44:	2078253d 65736162 0a78253d 00000000     =%x base=%x.....
  43bc54:	732f2e2e 412f6372 742f4653 64726968     ../src/ASF/third
  43bc64:	74726170 627a2f79 632f7261 3165646f     party/zbar/code1
  43bc74:	632e3832 00000000 65736162 38203c20     28.c....base < 8
  43bc84:	00000000 4e524157 3a474e49 3a732520     ....WARNING: %s:
  43bc94:	203a6425 203a7325 65737341 6f697472     %d: %s: Assertio
  43bca4:	2522206e 66202273 656c6961 090a2e64     n "%s" failed...
  43bcb4:	3d676973 6f207825 65736666 78253d74     sig=%x offset=%x
  43bcc4:	73616220 78253d65 78646920 0a78253d      base=%x idx=%x.
  43bcd4:	00000000 20786469 30203d3c 00303578     ....idx <= 0x50.
  43bce4:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43bcf4:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43bd04:	66202273 656c6961 090a2e64 3d726964     s" failed...dir=
  43bd14:	69207825 2078253d 3d6d7573 61207825     %x i=%x sum=%x a
  43bd24:	253d6363 73252078 0000000a 206d7573     cc=%x %s....sum 
  43bd34:	3031203c 00000033 20636361 3031203c     < 103...acc < 10
  43bd44:	00000033 4e524157 3a474e49 3a732520     3...WARNING: %s:
  43bd54:	203a6425 203a7325 65737341 6f697472     %d: %s: Assertio
  43bd64:	2522206e 66202273 656c6961 090a2e64     n "%s" failed...
  43bd74:	72617473 78253d74 646e6520 2078253d     start=%x end=%x 
  43bd84:	78253d69 253d6a20 73252078 0000000a     i=%x j=%x %s....
  43bd94:	646f6364 623e2d65 6a5b6675 3d3c205d     dcode->buf[j] <=
  43bda4:	27392720 00000000 65646f63 203d3c20      '9'....code <= 
  43bdb4:	00000039 4e524157 3a474e49 3a732520     9...WARNING: %s:
  43bdc4:	203a6425 203a7325 65737341 6f697472     %d: %s: Assertio
  43bdd4:	2522206e 66202273 656c6961 090a2e64     n "%s" failed...
  43bde4:	3d726964 25207825 00000a73 646f6364     dir=%x %s...dcod
  43bdf4:	623e2d65 645b6675 65646f63 2d383231     e->buf[dcode128-
  43be04:	6168633e 74636172 2d207265 205d3120     >character - 1] 
  43be14:	53203d3d 5f504f54 00564552 646f6364     == STOP_REV.dcod
  43be24:	623e2d65 645b6675 65646f63 2d383231     e->buf[dcode128-
  43be34:	6168633e 74636172 2d207265 205d3120     >character - 1] 
  43be44:	53203d3d 5f504f54 00445746 4e524157     == STOP_FWD.WARN
  43be54:	3a474e49 3a732520 203a6425 203a7325     ING: %s:%d: %s: 
  43be64:	65737341 6f697472 2522206e 66202273     Assertion "%s" f
  43be74:	656c6961 090a2e64 000a7325 65646f63     ailed...%s..code
  43be84:	203d3e20 52415453 20415f54 63202626      >= START_A && c
  43be94:	2065646f 53203d3c 54524154 0000435f     ode <= START_C..
  43bea4:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43beb4:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43bec4:	66202273 656c6961 090a2e64 78253d69     s" failed...i=%x
  43bed4:	253d6a20 6f632078 253d6564 20783230      j=%x code=%02x 
  43bee4:	72616863 3d746573 63207825 3d707865     charset=%x cexp=
  43bef4:	25207825 00000a73 6f632821 26206564     %x %s...!(code &
  43bf04:	38783020 00002930 70786563 00000000      0x80)..cexp....
  43bf14:	65646f63 203d3e20 45444f43 2620435f     code >= CODE_C &
  43bf24:	6f632026 3c206564 4f43203d 415f4544     & code <= CODE_A
  43bf34:	00000000 4e524157 3a474e49 3a732520     ....WARNING: %s:
  43bf44:	203a6425 203a7325 65737341 6f697472     %d: %s: Assertio
  43bf54:	2522206e 66202273 656c6961 090a2e64     n "%s" failed...
  43bf64:	30253d6a 25207832 00000a73 203c206a     j=%02x %s...j < 
  43bf74:	646f6364 623e2d65 615f6675 636f6c6c     dcode->buf_alloc
  43bf84:	00000000 4e524157 3a474e49 3a732520     ....WARNING: %s:
  43bf94:	203a6425 203a7325 65737341 6f697472     %d: %s: Assertio
  43bfa4:	2522206e 66202273 656c6961 090a2e64     n "%s" failed...
  43bfb4:	6f6c6c61 78253d63 78646920 2078253d     alloc=%x idx=%x 
  43bfc4:	30253d63 25207832 00000a73 646f6364     c=%02x %s...dcod
  43bfd4:	623e2d65 615f6675 636f6c6c 64203e20     e->buf_alloc > d
  43bfe4:	65646f63 2d383231 6168633e 74636172     code128->charact
  43bff4:	00007265                                er..

0043bff8 <characters>:
  43bff8:	2aa1bf5c 2da40cc5 e45f0fe3 a769e86b     \..*...-.._.k.i.
  43c008:	1e51c1e7 8400d983 330dc71f 150eb586     ..Q........3....
  43c018:	11da1087 3718e536 893913cc 8a1b1497     ....6..7..9.....
  43c028:	5ea2bd3a 02b08501 162ca5a3 a612bc88     :..^......,.....
  43c038:	6256e661 a81adb19 cd8b1c32 20c3a91d     a.Vb....2...... 
  43c048:	c05d50c4 532ec62b c2523160 5755c834     .P].+..S`1R.4.UW
  43c058:	c93bce3e 384f546a ca2fcb58              >.;.jTO8X./.

0043c064 <lo_base>:
  43c064:	190c0700 47403224                       ....$2@G

0043c06c <lo_offset>:
  43c06c:	1ffff0ff fffff2ff 3fffffff 6ffff5f4     ...........?...o
  43c07c:	ffffffff 2ffff1f0 ffffffff 4f3fffff     ......./......?O
  43c08c:	f2f10fff f4ff3fff 89f7f6f5 fcffabff     .....?..........
  43c09c:	1f0fffff 7ff64523 ffffffff aff9fff8     ....#E..........
  43c0ac:	2ffff1f0 fffff3ff 89675f4f cdffbffa     .../....O_g.....
  43c0bc:	3ff2f1f0 ffff56f4 8f7fffff dfbcff9a     ...?.V..........
  43c0cc:	fff21f0f ffff3fff 6ff5fff4 ffffffff     .....?.....o....
  43c0dc:	ff231f0f ffff6f45 9ff8fff7 ffffffff     ..#.Eo..........

0043c0ec <__func__.6422>:
  43c0ec:	61627a5f 65645f72 65646f63 646f635f     _zbar_decode_cod
  43c0fc:	38323165 00000000                       e128....

0043c104 <__func__.6311>:
  43c104:	6f636564 6c5f6564 0000006f              decode_lo...

0043c110 <__func__.6361>:
  43c110:	696c6176 65746164 6568635f 75736b63     validate_checksu
  43c120:	0000006d                                m...

0043c124 <__func__.6397>:
  43c124:	74736f70 636f7270 00737365              postprocess.

0043c130 <__func__.6378>:
  43c130:	74736f70 636f7270 5f737365 00000063     postprocess_c...

0043c140 <__func__.6277>:
  43c140:	656c6572 5f657361 6b636f6c 00000000     release_lock....
  43c150:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43c160:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43c170:	66202273 656c6961 090a2e64 6b636f6c     s" failed...lock
  43c180:	2064253d 3d716572 000a6425 732f2e2e     =%d req=%d..../s
  43c190:	412f6372 742f4653 64726968 74726170     rc/ASF/thirdpart
  43c1a0:	627a2f79 692f7261 756c636e 642f6564     y/zbar/include/d
  43c1b0:	646f6365 682e7265 00000000 646f6364     ecoder.h....dcod
  43c1c0:	6c3e2d65 206b636f 72203d3d 00007165     e->lock == req..
  43c1d0:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43c1e0:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43c1f0:	66202273 656c6961 090a2e64 636e6520     s" failed... enc
  43c200:	2078253d 253d3973 00000a78 732f2e2e     =%x s9=%x...../s
  43c210:	412f6372 742f4653 64726968 74726170     rc/ASF/thirdpart
  43c220:	627a2f79 632f7261 3365646f 00632e39     y/zbar/code39.c.
  43c230:	20636e65 7830203c 00003032 4e524157     enc < 0x20..WARN
  43c240:	3a474e49 3a732520 203a6425 203a7325     ING: %s:%d: %s: 
  43c250:	65737341 6f697472 2522206e 66202273     Assertion "%s" f
  43c260:	656c6961 090a2e64 78646920 2078253d     ailed... idx=%x 
  43c270:	3d636e65 73207825 78253d39 0000000a     enc=%x s9=%x....
  43c280:	20786469 7830203c 00006332 4e524157     idx < 0x2c..WARN
  43c290:	3a474e49 3a732520 203a6425 203a7325     ING: %s:%d: %s: 
  43c2a0:	65737341 6f697472 2522206e 66202273     Assertion "%s" f
  43c2b0:	656c6961 090a2e64 30253d69 25207832     ailed...i=%02x %
  43c2c0:	00000a73 203c2069 646f6364 623e2d65     s...i < dcode->b
  43c2d0:	615f6675 636f6c6c 00000000 4e524157     uf_alloc....WARN
  43c2e0:	3a474e49 3a732520 203a6425 203a7325     ING: %s:%d: %s: 
  43c2f0:	65737341 6f697472 2522206e 66202273     Assertion "%s" f
  43c300:	656c6961 090a2e64 30253d63 73207832     ailed...c=%02x s
  43c310:	78253d39 0000000a 203c2063 63327830     9=%x....c < 0x2c
  43c320:	00000000                                ....

0043c324 <code39_hi>:
  43c324:	c8864280 12d08e4a ff97d593 ffff1bd9     .B..J...........
  43c334:	24e2a05c ff27ffa5 ffff2ae8 ffffff2b     \..$..'..*..+...

0043c344 <code39_encodings>:
  43c344:	0d201a07 17130310 231d1622 1c050d19     .. ....."..#....
  43c354:	07250613 272a2a0c 340e0431 15430f00     ..%..**'1..4..C.
  43c364:	261c4625 4c080b49 19520912 000f582b     %F.&I..L..R.+X..
  43c374:	64110261 06701209 16248513 9128298a     a..d..p...$..)(.
  43c384:	2b941821 2928a219 c12a27a8 26c41b1f     !..+..().'*....&
  43c394:	1d23d01c 061e1403 0a091f1b 02110c01     ..#.............
  43c3a4:	18211812 0121040e 0b08240a 420d0530     ..!...!..$..0..B
  43c3b4:	0c482416 10036007 84141e81 22901525     .$H..`......%.."
  43c3c4:	1a20c017                                .. .

0043c3c8 <code39_characters>:
  43c3c8:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  43c3d8:	4a494847 4e4d4c4b 5251504f 56555453     GHIJKLMNOPQRSTUV
  43c3e8:	5a595857 24202e2d 2a252b2f              WXYZ-. $/+%*

0043c3f4 <__func__.6366>:
  43c3f4:	61627a5f 65645f72 65646f63 646f635f     _zbar_decode_cod
  43c404:	00393365                                e39.

0043c408 <__func__.6342>:
  43c408:	65646f63 705f3933 7074736f 65636f72     code39_postproce
  43c418:	00007373                                ss..

0043c41c <__func__.6311>:
  43c41c:	65646f63 645f3933 646f6365 00003965     code39_decode9..

0043c42c <__func__.6277>:
  43c42c:	656c6572 5f657361 6b636f6c 00000000     release_lock....
  43c43c:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43c44c:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43c45c:	66202273 656c6961 090a2e64 6b636f6c     s" failed...lock
  43c46c:	2064253d 3d716572 000a6425 732f2e2e     =%d req=%d..../s
  43c47c:	412f6372 742f4653 64726968 74726170     rc/ASF/thirdpart
  43c48c:	627a2f79 692f7261 756c636e 642f6564     y/zbar/include/d
  43c49c:	646f6365 682e7265 00000000 646f6364     ecoder.h....dcod
  43c4ac:	6c3e2d65 206b636f 72203d3d 00007165     e->lock == req..
  43c4bc:	5b667562 78343025 00003d5d 00000020     buf[%04x]=.. ...
  43c4cc:	00000000 30257325 00007832              ....%s%02x..

0043c4d8 <__func__.6277>:
  43c4d8:	656c6572 5f657361 6b636f6c 00000000     release_lock....

0043c4e8 <all.6380>:
  43c4e8:	0002000d 00080005 0009000c 000e000a     ................
  43c4f8:	00220019 00260023 005d0027 00400080     ..".#.&.'.]...@.
  43c508:	00000039                                9...

0043c50c <digits>:
  43c50c:	13041006 05110819 15071209 03140016     ................
  43c51c:	17020118                                ....

0043c520 <parity_decode>:
  43c520:	0ffffff0 f32f1fff f87f4fff fff6f95f     ....../..O.._...
  43c530:	f59f6fff fff4f78f fff1f23f 0fffffff     .o......?.......
  43c540:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43c550:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43c560:	66202273 656c6961 090a2e64 65646f63     s" failed...code
  43c570:	3230253d 31652078 2078253d 253d3265     =%02x e1=%x e2=%
  43c580:	34732078 2078253d 6f6c6f63 78253d72     x s4=%x color=%x
  43c590:	0000000a 732f2e2e 412f6372 742f4653     ....../src/ASF/t
  43c5a0:	64726968 74726170 627a2f79 652f7261     hirdparty/zbar/e
  43c5b0:	632e6e61 00000000 65646f63 30203c20     an.c....code < 0
  43c5c0:	00343178 4e524157 3a474e49 3a732520     x14.WARNING: %s:
  43c5d0:	203a6425 203a7325 65737341 6f697472     %d: %s: Assertio
  43c5e0:	2522206e 66202273 656c6961 090a2e64     n "%s" failed...
  43c5f0:	78253d69 253d6420 68632078 78253d6b     i=%x d=%x chk=%x
  43c600:	0a732520 00000000 203c2064 00003031      %s.....d < 10..
  43c610:	4e524157 3a474e49 3a732520 203a6425     WARNING: %s:%d: 
  43c620:	203a7325 65737341 6f697472 2522206e     %s: Assertion "%
  43c630:	66202273 656c6961 090a2e64 3d6b6863     s" failed...chk=
  43c640:	6e207825 2078253d 00007325 206b6863     %x n=%x %s..chk 
  43c650:	3031203c 00000000 4e524157 3a474e49     < 10....WARNING:
  43c660:	3a732520 203a6425 203a7325 65737341      %s:%d: %s: Asse
  43c670:	6f697472 2522206e 66202273 656c6961     rtion "%s" faile
  43c680:	090a2e64 78253d6e 253d6420 68632078     d...n=%x d=%x ch
  43c690:	78253d6b 0a732520 00000000 4e524157     k=%x %s.....WARN
  43c6a0:	3a474e49 3a732520 203a6425 203a7325     ING: %s:%d: %s: 
  43c6b0:	65737341 6f697472 2522206e 66202273     Assertion "%s" f
  43c6c0:	656c6961 090a2e64 78253d77 253d6420     ailed...w=%x d=%
  43c6d0:	68632078 78253d6b 0a732520 00000000     x chk=%x %s.....

0043c6e0 <__func__.6186>:
  43c6e0:	6f636564 00346564                       decode4.

0043c6e8 <__func__.6257>:
  43c6e8:	5f6e6165 69726576 635f7966 6b636568     ean_verify_check
  43c6f8:	006d7573                                sum.

0043c6fc <__func__.6268>:
  43c6fc:	6e627369 635f3031 5f636c61 63656863     isbn10_calc_chec
  43c70c:	6d75736b 00000000 732f2e2e 412f6372     ksum....../src/A
  43c71c:	742f4653 64726968 74726170 627a2f79     SF/thirdparty/zb
  43c72c:	692f7261 756c636e 722f6564 6e636665     ar/include/refcn
  43c73c:	00682e74 3e206372 0030203d 732f2e2e     t.h.rc >= 0.../s
  43c74c:	412f6372 742f4653 64726968 74726170     rc/ASF/thirdpart
  43c75c:	627a2f79 692f7261 6567616d 0000632e     y/zbar/image.c..
  43c76c:	2d676d69 6665723e 00746e63 2d747364     img->refcnt.dst-
  43c77c:	7461643e 00000061 252e7325 2e73342e     >data...%s.%.4s.
  43c78c:	676d697a 00000000 252e7325 786c3830     zimg....%s.%08lx
  43c79c:	6d697a2e 00000067 203c206e 206e656c     .zimg...n < len 
  43c7ac:	0031202d 203a7325 706d7564 20676e69     - 1.%s: dumping 
  43c7bc:	73342e25 38302528 2029786c 67616d69     %.4s(%08lx) imag
  43c7cc:	6f742065 0a732520 00000000 00000077     e to %s.....w...

0043c7dc <__func__.6282>:
  43c7dc:	61627a5f 65725f72 746e6366 00000000     _zbar_refcnt....

0043c7ec <__func__.6466>:
  43c7ec:	7261627a 616d695f 665f6567 5f656572     zbar_image_free_
  43c7fc:	61746164 00000000 732f2e2e 412f6372     data....../src/A
  43c80c:	742f4653 64726968 74726170 627a2f79     SF/thirdparty/zb
  43c81c:	692f7261 756c636e 722f6564 6e636665     ar/include/refcn
  43c82c:	00682e74 3e206372 0030203d 732f2e2e     t.h.rc >= 0.../s
  43c83c:	412f6372 742f4653 64726968 74726170     rc/ASF/thirdpart
  43c84c:	627a2f79 692f7261 735f676d 6e6e6163     y/zbar/img_scann
  43c85c:	632e7265 00000000 2d6d7973 7461643e     er.c....sym->dat
  43c86c:	6c615f61 00636f6c 00000030 2d6d7973     a_alloc.0...sym-
  43c87c:	7461643e 00000061 6e637369 65723e2d     >data...iscn->re
  43c88c:	6c637963 5d695b65 79736e2e 0000736d     cycle[i].nsyms..
  43c89c:	6d797321 79733e2d 0000736d 65707974     !sym->syms..type
  43c8ac:	203d2120 5241425a 4352515f 0045444f      != ZBAR_QRCODE.
  43c8bc:	203a7325 74726170 206c6169 626d7973     %s: partial symb
  43c8cc:	40206c6f 2c642528 0a296425 00000000     ol @(%d,%d).....
  43c8dc:	203a7325 20707564 626d7973 40206c6f     %s: dup symbol @
  43c8ec:	2c642528 3a296425 70756420 3a732520     (%d,%d): dup %s:
  43c8fc:	322e2520 000a7330 203a7325 2077656e      %.20s..%s: new 
  43c90c:	626d7973 40206c6f 2c642528 3a296425     symbol @(%d,%d):
  43c91c:	3a732520 322e2520 000a7330 203a7325      %s: %.20s..%s: 
  43c92c:	626d7973 73206c6f 20737465 6f6c6c61     symbol sets allo
  43c93c:	65746163 20202064 2d25203d 000a6434     cated   = %-4d..
  43c94c:	203a7325 20202020 6e616373 2072656e     %s:     scanner 
  43c95c:	736d7973 206e6920 20657375 2d25203d     syms in use = %-
  43c96c:	72096434 63796365 2064656c 25203d20     4d.recycled  = %
  43c97c:	0a64342d 00000000 203a7325 20202020     -4d.....%s:     
  43c98c:	67616d69 79732065 6920736d 7375206e     image syms in us
  43c99c:	20202065 2d25203d 72096434 63796365     e   = %-4d.recyc
  43c9ac:	2064656c 25203d20 0a64342d 00000000     led  = %-4d.....
  43c9bc:	203a7325 626d7973 20736c6f 6f6c6c61     %s: symbols allo
  43c9cc:	65746163 20202064 20202020 2d25203d     cated       = %-
  43c9dc:	000a6434 203a7325 20202020 63657220     4d..%s:      rec
  43c9ec:	656c6379 64255b64 2020205d 20202020     ycled[%d]       
  43c9fc:	25203d20 0a64342d 00000000 20317863      = %-4d.....cx1 
  43ca0c:	77203d3c 00000000 20317963 68203d3c     <= w....cy1 <= h
  43ca1c:	00000000 64726f62 3c207265 0068203d     ....border <= h.
  43ca2c:	203a7325 5f676d69 203a2b78 64343025     %s: img_x+: %04d
  43ca3c:	3430252c 25402064 00000a70 3d3d2070     ,%04d @%p...p ==
  43ca4c:	74616420 202b2061 202b2078 202a2079      data + x + y * 
  43ca5c:	746e6928 5f727470 00772974 203a7325     (intptr_t)w.%s: 
  43ca6c:	5f676d69 203a2d78 64343025 3430252c     img_x-: %04d,%04
  43ca7c:	25402064 00000a70 64726f62 3c207265     d @%p...border <
  43ca8c:	0077203d 203a7325 5f676d69 203a2b79     = w.%s: img_y+: 
  43ca9c:	64343025 3430252c 25402064 00000a70     %04d,%04d @%p...
  43caac:	203a7325 5f676d69 203a2d79 64343025     %s: img_y-: %04d
  43cabc:	3430252c 25402064 00000a70 006e6165     ,%04d @%p...ean.
  43cacc:	6f646461 0000006e                       addon...

0043cad4 <__func__.6872>:
  43cad4:	61627a5f 6d695f72 5f656761 6e616373     _zbar_image_scan
  43cae4:	5f72656e 79636572 5f656c63 736d7973     ner_recycle_syms
  43caf4:	00000000                                ....

0043caf8 <__func__.6517>:
  43caf8:	61627a5f 65725f72 746e6366 00000000     _zbar_refcnt....

0043cb08 <__func__.6903>:
  43cb08:	61627a5f 6d695f72 5f656761 6e616373     _zbar_image_scan
  43cb18:	5f72656e 6f6c6c61 79735f63 0000006d     ner_alloc_sym...

0043cb28 <__func__.6940>:
  43cb28:	626d7973 685f6c6f 6c646e61 00007265     symbol_handler..

0043cb38 <__func__.6953>:
  43cb38:	706d7564 6174735f 00007374              dump_stats..

0043cb44 <__func__.7009>:
  43cb44:	7261627a 6163735f 6d695f6e 00656761     zbar_scan_image.
  43cb54:	732f2e2e 412f6372 742f4653 64726968     ../src/ASF/third
  43cb64:	74726170 627a2f79 692f7261 756c636e     party/zbar/inclu
  43cb74:	722f6564 6e636665 00682e74 3e206372     de/refcnt.h.rc >
  43cb84:	0030203d 2d4e4145 00000032 2d4e4145     = 0.EAN-2...EAN-
  43cb94:	00000035 2d4e4145 00000038 2d435055     5...EAN-8...UPC-
  43cba4:	00000045 4e425349 0030312d 2d435055     E...ISBN-10.UPC-
  43cbb4:	00000041 2d4e4145 00003331 4e425349     A...EAN-13..ISBN
  43cbc4:	0033312d 504d4f43 5449534f 00000045     -13.COMPOSITE...
  43cbd4:	352f3249 00000000 61746144 00726142     I2/5....DataBar.
  43cbe4:	61746144 2d726142 00707845 61646f43     DataBar-Exp.Coda
  43cbf4:	00726162 45444f43 0039332d 45444f43     bar.CODE-39.CODE
  43cc04:	0033392d 45444f43 3832312d 00000000     -93.CODE-128....
  43cc14:	34464450 00003731 432d5251 0065646f     PDF417..QR-Code.
  43cc24:	4e4b4e55 004e574f 00000000 42414e45     UNKNOWN.....ENAB
  43cc34:	0000454c 5f444441 43454843 0000004b     LE..ADD_CHECK...
  43cc44:	54494d45 4548435f 00004b43 49435341     EMIT_CHECK..ASCI
  43cc54:	00000049 5f4e494d 004e454c 5f58414d     I...MIN_LEN.MAX_
  43cc64:	004e454c 45434e55 49415452 0059544e     LEN.UNCERTAINTY.
  43cc74:	49534f50 4e4f4954 00000000 45445f58     POSITION....X_DE
  43cc84:	5449534e 00000059 45445f59 5449534e     NSITY...Y_DENSIT
  43cc94:	00000059 00315347 004d4941 00005055     Y...GS1.AIM.UP..
  43cca4:	48474952 00000054 4e574f44 00000000     RIGHT...DOWN....
  43ccb4:	5446454c 00000000 732f2e2e 412f6372     LEFT....../src/A
  43ccc4:	742f4653 64726968 74726170 627a2f79     SF/thirdparty/zb
  43ccd4:	732f7261 6f626d79 00632e6c 3e203067     ar/symbol.c.g0 >
  43cce4:	2030203d 67202626 3d3e2031 00003020     = 0 && g1 >= 0..
  43ccf4:	6d783f3c 0000006c 203e2069 00000030     <?xml...i > 0...
  43cd04:	3d3c206e 78616d20 006e656c 6d79733c     n <= maxlen.<sym
  43cd14:	206c6f62 65707974 7325273d 75712027     bol type='%s' qu
  43cd24:	74696c61 25273d79 6f202764 6e656972     ality='%d' orien
  43cd34:	69746174 273d6e6f 00277325 646f6d20     tation='%s'. mod
  43cd44:	65696669 273d7372 00000000 00207325     ifiers='....%s .
  43cd54:	00000027 6e6f6320 73676966 0000273d     '... configs='..
  43cd64:	756f6320 273d746e 00276425 61643c3e      count='%d'.><da
  43cd74:	00006174 726f6620 3d74616d 73616227     ta.. format='bas
  43cd84:	27343665 6e656c20 3d687467 27642527     e64' length='%d'
  43cd94:	00000000 5b213c3e 54414443 00005b41     ....><![CDATA[..
  43cda4:	0000000a 3c3e5d5d 7461642f 2f3c3e61     ....]]></data></
  43cdb4:	626d7973 003e6c6f                       symbol>.

0043cdbc <hash.6254>:
  43cdbc:	11100100 0c1611ff ff080605 12070304     ................
  43cdcc:	ffffffff 02ffffff 0c1200ff 000a1d0b     ................

0043cddc <__func__.6257>:
  43cddc:	61627a5f 65675f72 79735f74 6c6f626d     _zbar_get_symbol
  43cdec:	7361685f 00000068                       _hash...

0043cdf4 <__func__.6149>:
  43cdf4:	61627a5f 65725f72 746e6366 00000000     _zbar_refcnt....

0043ce04 <_ZZL13icvDeleteNodeP11CvSparseMatPKiPjE19__PRETTY_FUNCTION__>:
  43ce04:	64696f76 76636920 656c6544 6f4e6574     void icvDeleteNo
  43ce14:	43286564 61705376 4d657372 2c2a7461     de(CvSparseMat*,
  43ce24:	6e6f6320 69207473 2c2a746e 736e7520      const int*, uns
  43ce34:	656e6769 6e692064 00292a74              igned int*).

0043ce40 <_ZZ16cvSetRemoveByPtrE19__PRETTY_FUNCTION__>:
  43ce40:	64696f76 53766320 65527465 65766f6d     void cvSetRemove
  43ce50:	74507942 76432872 2a746553 6f76202c     ByPtr(CvSet*, vo
  43ce60:	292a6469 00000000                       id*)....

0043ce68 <_ZZ7cvAligniiE19__PRETTY_FUNCTION__>:
  43ce68:	20746e69 6c417663 286e6769 2c746e69     int cvAlign(int,
  43ce78:	746e6920 00000029                        int)...

0043ce80 <_ZZ17cvNextNArraySliceE19__PRETTY_FUNCTION__>:
  43ce80:	20746e69 654e7663 414e7478 79617272     int cvNextNArray
  43ce90:	63696c53 76432865 7272414e 74497961     Slice(CvNArrayIt
  43cea0:	74617265 292a726f 00000000              erator*)....

0043ceac <_ZZL13icvGetNodePtrP11CvSparseMatPKiPiiPjE19__PRETTY_FUNCTION__>:
  43ceac:	61686375 69202a72 65477663 646f4e74     uchar* icvGetNod
  43cebc:	72745065 53764328 73726170 74614d65     ePtr(CvSparseMat
  43cecc:	63202c2a 74736e6f 746e6920 69202c2a     *, const int*, i
  43cedc:	2c2a746e 746e6920 6e75202c 6e676973     nt*, int, unsign
  43ceec:	69206465 292a746e 00000000              ed int*)....

0043cef8 <_ZZ17cvScalarToRawDataE19__PRETTY_FUNCTION__>:
  43cef8:	64696f76 53766320 616c6163 526f5472     void cvScalarToR
  43cf08:	61447761 63286174 74736e6f 53764320     awData(const CvS
  43cf18:	616c6163 202c2a72 64696f76 69202c2a     calar*, void*, i
  43cf28:	202c746e 29746e69 00000000              nt, int)....

0043cf34 <_ZZ17cvRawDataToScalarE19__PRETTY_FUNCTION__>:
  43cf34:	64696f76 52766320 61447761 6f546174     void cvRawDataTo
  43cf44:	6c616353 63287261 74736e6f 696f7620     Scalar(const voi
  43cf54:	202c2a64 2c746e69 53764320 616c6163     d*, int, CvScala
  43cf64:	00292a72                                r*).

0043cf68 <_ZZ14cvReshapeMatNDE19__PRETTY_FUNCTION__>:
  43cf68:	72417643 63202a72 73655276 65706168     CvArr* cvReshape
  43cf78:	4e74614d 6f632844 2074736e 72417643     MatND(const CvAr
  43cf88:	202c2a72 2c746e69 41764320 2c2a7272     r*, int, CvArr*,
  43cf98:	746e6920 6e69202c 69202c74 292a746e      int, int, int*)
  43cfa8:	00000000                                ....

0043cfac <_ZZ13cvCreateImageE19__PRETTY_FUNCTION__>:
  43cfac:	496c7049 6567616d 7663202a 61657243     IplImage* cvCrea
  43cfbc:	6d496574 28656761 69537643 202c657a     teImage(CvSize, 
  43cfcc:	2c746e69 746e6920 00000029 656e6e49     int, int)...Inne
  43cfdc:	75662072 6974636e 66206e6f 656c6961     r function faile
  43cfec:	00002e64 72756f73 632f6563 726f6378     d...source/cxcor
  43cffc:	78632f65 61727261 70632e79 00000070     e/cxarray.cpp...
  43d00c:	495f5643 50535f53 45535241 54414d5f     CV_IS_SPARSE_MAT
  43d01c:	616d2028 00292074 20656e4f 6920666f     ( mat ).One of i
  43d02c:	6369646e 69207365 756f2073 666f2074     ndices is out of
  43d03c:	6e617220 00006567 6c636e69 2f656475      range..include/
  43d04c:	6f637863 632f6572 726f6378 00682e65     cxcore/cxcore.h.
  43d05c:	656c655f 663e2d6d 7367616c 203d3e20     _elem->flags >= 
  43d06c:	00000030 68746945 61207265 74206c6c     0...Either all t
  43d07c:	70206568 746e696f 20737265 756f6873     he pointers shou
  43d08c:	6220646c 756e2065 6f206c6c 68742072     ld be null or th
  43d09c:	61207965 73206c6c 6c756f68 65622064     ey all should be
  43d0ac:	6e6f6e20 6c756e2d 0000006c 2d6e6f4e      non-null...Non-
  43d0bc:	69736f70 65766974 6c6f6320 726f2073     positive cols or
  43d0cc:	776f7220 00000073 2d6e6f4e 69736f70      rows...Non-posi
  43d0dc:	65766974 64697720 6f206874 65682072     tive width or he
  43d0ec:	74686769 00000000 61766e49 2064696c     ight....Invalid 
  43d0fc:	7274616d 74207869 00657079 6c636e69     matrix type.incl
  43d10c:	2f656475 6f637863 632f6572 73696d78     ude/cxcore/cxmis
  43d11c:	00682e63 696c6128 26206e67 6c612820     c.h.(align & (al
  43d12c:	2d6e6769 20292931 30203d3d 20262620     ign-1)) == 0 && 
  43d13c:	657a6973 49203c20 4d5f544e 00005841     size < INT_MAX..
  43d14c:	4c4c554e 74616d20 20786972 64616568     NULL matrix head
  43d15c:	70207265 746e696f 00007265 61766e69     er pointer..inva
  43d16c:	2064696c 61727261 61642079 74206174     lid array data t
  43d17c:	00657079 4c4c554e 69733c20 3e73657a     ype.NULL <sizes>
  43d18c:	696f7020 7265746e 00000000 2d6e6f6e      pointer....non-
  43d19c:	69736f70 65766974 20726f20 206f6f74     positive or too 
  43d1ac:	6772616c 756e2065 7265626d 20666f20     large number of 
  43d1bc:	656d6964 6f69736e 0000736e 20656e6f     dimensions..one 
  43d1cc:	6420666f 73656d69 206e6f69 657a6973     of dimesion size
  43d1dc:	73692073 6e6f6e20 736f702d 76697469     s is non-positiv
  43d1ec:	00000065 72657469 726f7461 203d2120     e...iterator != 
  43d1fc:	00000030 20646162 626d756e 6f207265     0...bad number o
  43d20c:	69642066 736e656d 736e6f69 00000000     f dimensions....
  43d21c:	61766e49 2064696c 72617073 61206573     Invalid sparse a
  43d22c:	79617272 61656820 00726564 61766e49     rray header.Inva
  43d23c:	2064696c 72617073 6d206573 69727461     lid sparse matri
  43d24c:	65682078 72656461 00000000 4c4c554e     x header....NULL
  43d25c:	65746920 6f746172 6f702072 65746e69      iterator pointe
  43d26c:	00000072 77656e28 657a6973 28202620     r...(newsize & (
  43d27c:	7377656e 20657a69 2931202d 3d3d2029     newsize - 1)) ==
  43d28c:	00003020 69732828 745f657a 63695f29      0..((size_t)_ic
  43d29c:	656d5f76 7970636d 6372735f 7328265f     v_memcpy_src_&(s
  43d2ac:	6f657a69 6e692866 312d2974 3d202929     izeof(int)-1)) =
  43d2bc:	2030203d 28202626 7a697328 29745f65     = 0 && ((size_t)
  43d2cc:	7663695f 6d656d5f 5f797063 5f747364     _icv_memcpy_dst_
  43d2dc:	69732826 666f657a 746e6928 29312d29     &(sizeof(int)-1)
  43d2ec:	3d3d2029 00003020 61746144 20736920     ) == 0..Data is 
  43d2fc:	65726c61 20796461 6f6c6c61 65746163     already allocate
  43d30c:	00000064 65726e75 6e676f63 64657a69     d...unrecognized
  43d31c:	20726f20 75736e75 726f7070 20646574      or unsupported 
  43d32c:	61727261 79742079 00006570 20646142     array type..Bad 
  43d33c:	614d7643 65682074 72656461 00000000     CvMat header....
  43d34c:	20646142 614d7643 20444e74 64616568     Bad CvMatND head
  43d35c:	00007265 20726f46 746c756d 6d696469     er..For multidim
  43d36c:	69736e65 6c616e6f 72726120 6f207961     ensional array o
  43d37c:	20796c6e 415f5643 534f5455 20504554     nly CV_AUTOSTEP 
  43d38c:	61207369 776f6c6c 68206465 00657265     is allowed here.
  43d39c:	20646162 656d6964 6f69736e 6e69206e     bad dimension in
  43d3ac:	00786564 61727241 68732079 646c756f     dex.Array should
  43d3bc:	20656220 614d7643 726f2074 6c704920      be CvMat or Ipl
  43d3cc:	67616d49 00000065 6c616373 26207261     Image...scalar &
  43d3dc:	61642026 00006174 20656854 626d756e     & data..The numb
  43d3ec:	6f207265 68632066 656e6e61 6d20736c     er of channels m
  43d3fc:	20747375 31206562 2c32202c 6f203320     ust be 1, 2, 3 o
  43d40c:	00342072 20494f43 7473756d 20656220     r 4.COI must be 
  43d41c:	2d6e6f6e 6c6c756e 206e6920 65736163     non-null in case
  43d42c:	20666f20 6e616c70 69207261 6567616d      of planar image
  43d43c:	00000073 796c6e4f 6e6f6320 756e6974     s...Only continu
  43d44c:	2073756f 6120446e 79617272 72612073     ous nD arrays ar
  43d45c:	75732065 726f7070 20646574 65726568     e supported here
  43d46c:	00000000 4c4c554e 696f7020 7265746e     ....NULL pointer
  43d47c:	206f7420 69646e69 00736563 65477663      to indices.cvGe
  43d48c:	61655274 73202a6c 6f707075 6f207472     tReal* support o
  43d49c:	20796c6e 676e6973 632d656c 6e6e6168     nly single-chann
  43d4ac:	61206c65 79617272 00000073 65537663     el arrays...cvSe
  43d4bc:	61655274 73202a6c 6f707075 6f207472     tReal* support o
  43d4cc:	20796c6e 676e6973 632d656c 6e6e6168     nly single-chann
  43d4dc:	61206c65 79617272 00000073 4c4c554e     el arrays...NULL
  43d4ec:	72726120 70207961 746e696f 69207265      array pointer i
  43d4fc:	61702073 64657373 00000000 20656854     s passed....The 
  43d50c:	7274616d 68207869 4e207361 204c4c55     matrix has NULL 
  43d51c:	61746164 696f7020 7265746e 00000000     data pointer....
  43d52c:	20656854 67616d69 61682065 554e2073     The image has NU
  43d53c:	64204c4c 20617461 6e696f70 00726574     LL data pointer.
  43d54c:	67616d49 77207365 20687469 6e616c70     Images with plan
  43d55c:	64207261 20617461 6f79616c 73207475     ar data layout s
  43d56c:	6c756f68 65622064 65737520 69772064     hould be used wi
  43d57c:	43206874 7320494f 63656c65 00646574     th COI selected.
  43d58c:	20656854 67616d69 73692065 746e6920     The image is int
  43d59c:	656c7265 64657661 646e6120 73616820     erleaved and has
  43d5ac:	65766f20 56432072 5f4e435f 2058414d      over CV_CN_MAX 
  43d5bc:	6e616863 736c656e 00000000 65786950     channels....Pixe
  43d5cc:	726f206c 20726564 756f6873 6220646c     l order should b
  43d5dc:	73752065 77206465 20687469 20696f63     e used with coi 
  43d5ec:	30203d3d 00000000 75706e49 72612074     == 0....Input ar
  43d5fc:	20796172 20736168 4c4c554e 74616420     ray has NULL dat
  43d60c:	6f702061 65746e69 00000072 65726e55     a pointer...Unre
  43d61c:	6e676f63 64657a69 20726f20 75736e75     cognized or unsu
  43d62c:	726f7070 20646574 61727261 79742079     pported array ty
  43d63c:	00006570 6f636e49 63657272 756e2074     pe..Incorrect nu
  43d64c:	7265626d 20666f20 61727261 00007379     mber of arrays..
  43d65c:	656d6f53 20666f20 75716572 64657269     Some of required
  43d66c:	72726120 70207961 746e696f 20737265      array pointers 
  43d67c:	4e207369 004c4c55 72657449 726f7461     is NULL.Iterator
  43d68c:	696f7020 7265746e 20736920 4c4c554e      pointer is NULL
  43d69c:	00000000 20494f43 20746573 6e207369     ....COI set is n
  43d6ac:	6120746f 776f6c6c 68206465 00657265     ot allowed here.
  43d6bc:	626d754e 6f207265 69642066 736e656d     Number of dimens
  43d6cc:	736e6f69 20736920 20656874 656d6173     ions is the same
  43d6dc:	726f6620 6c6c6120 72726120 00737961      for all arrays.
  43d6ec:	61746144 70797420 73692065 746f6e20     Data type is not
  43d6fc:	65687420 6d617320 6f662065 6c612072      the same for al
  43d70c:	7261206c 73796172 00000000 626d754e     l arrays....Numb
  43d71c:	6f207265 68632066 656e6e61 6920736c     er of channels i
  43d72c:	6f6e2073 68742074 61732065 6620656d     s not the same f
  43d73c:	6120726f 61206c6c 79617272 00000073     or all arrays...
  43d74c:	74706544 73692068 746f6e20 65687420     Depth is not the
  43d75c:	6d617320 6f662065 6c612072 7261206c      same for all ar
  43d76c:	73796172 00000000 6b73614d 6f687320     rays....Mask sho
  43d77c:	20646c75 65766168 43753820 726f2031     uld have 8uC1 or
  43d78c:	43733820 61642031 74206174 00657079      8sC1 data type.
  43d79c:	656d6944 6f69736e 6973206e 2073657a     Dimension sizes 
  43d7ac:	20657261 20656874 656d6173 726f6620     are the same for
  43d7bc:	6c6c6120 72726120 00737961 4c4c554e      all arrays.NULL
  43d7cc:	696f7020 7265746e 206f7420 61727261      pointer to arra
  43d7dc:	726f2079 73656420 616e6974 6e6f6974     y or destination
  43d7ec:	61656820 00726564 656e6f4e 20666f20      header.None of 
  43d7fc:	61727261 61702079 656d6172 73726574     array parameters
  43d80c:	20736920 6e616863 3a646567 6d756420      is changed: dum
  43d81c:	6320796d 3f6c6c61 00000000 2d6e6f4e     my call?....Non-
  43d82c:	69736f70 65766974 20726f20 206f6f74     positive or too 
  43d83c:	6772616c 756e2065 7265626d 20666f20     large number of 
  43d84c:	656d6964 6f69736e 0000736e 2077654e     dimensions..New 
  43d85c:	656d6964 6f69736e 6973206e 2073657a     dimension sizes 
  43d86c:	20657261 20746f6e 63657073 65696669     are not specifie
  43d87c:	00000064 20656854 64616568 73207265     d...The header s
  43d88c:	6c756f68 65622064 4d764320 00007461     hould be CvMat..
  43d89c:	20656854 7274616d 69207869 6f6e2073     The matrix is no
  43d8ac:	6f632074 6e69746e 73756f75 206f7320     t continuous so 
  43d8bc:	20656874 626d756e 6f207265 6f722066     the number of ro
  43d8cc:	63207377 6e206e61 6220746f 68632065     ws can not be ch
  43d8dc:	65676e61 00000064 20656854 61746f74     anged...The tota
  43d8ec:	756e206c 7265626d 20666f20 7274616d     l number of matr
  43d8fc:	65207869 656d656c 2073746e 6e207369     ix elements is n
  43d90c:	6420746f 73697669 656c6269 20796220     ot divisible by 
  43d91c:	20656874 2077656e 626d756e 6f207265     the new number o
  43d92c:	6f722066 00007377 20656854 61746f74     f rows..The tota
  43d93c:	616d206c 78697274 64697720 69206874     l matrix width i
  43d94c:	6f6e2073 69642074 69736976 20656c62     s not divisible 
  43d95c:	74207962 6e206568 6e207765 65626d75     by the new numbe
  43d96c:	666f2072 6c6f6320 736e6d75 00000000     r of columns....
  43d97c:	20656854 64616568 73207265 6c756f68     The header shoul
  43d98c:	65622064 4d764320 444e7461 00000000     d be CvMatND....
  43d99c:	20656854 72756f73 61206563 79617272     The source array
  43d9ac:	73756d20 65622074 4d764320 444e7461      must be CvMatND
  43d9bc:	00000000 5f77656e 3e206e63 00003020     ....new_cn > 0..
  43d9cc:	20656854 7473616c 6d696420 69736e65     The last dimensi
  43d9dc:	66206e6f 206c6c75 657a6973 20736920     on full size is 
  43d9ec:	20746f6e 69766964 6c626973 79622065     not divisible by
  43d9fc:	77656e20 6d756e20 20726562 6320666f      new number of c
  43da0c:	6e6e6168 00736c65 756d6953 6e61746c     hannels.Simultan
  43da1c:	73756f65 61686320 2065676e 7320666f     eous change of s
  43da2c:	65706168 646e6120 6d756e20 20726562     hape and number 
  43da3c:	6320666f 6e6e6168 20736c65 6e207369     of channels is n
  43da4c:	7320746f 6f707075 64657472 6f44202e     ot supported. Do
  43da5c:	20746920 32207962 70657320 74617261      it by 2 separat
  43da6c:	61632065 00736c6c 2d6e6f4e 746e6f63     e calls.Non-cont
  43da7c:	6f756e69 6e207375 72612044 73796172     inuous nD arrays
  43da8c:	65726120 746f6e20 70757320 74726f70      are not support
  43da9c:	00006465 20656e4f 6e20666f 64207765     ed..One of new d
  43daac:	6e656d69 6e6f6973 7a697320 69207365     imension sizes i
  43dabc:	6f6e2073 6f702d6e 69746973 00006576     s non-positive..
  43dacc:	626d754e 6f207265 6c652066 6e656d65     Number of elemen
  43dadc:	69207374 6874206e 726f2065 6e696769     ts in the origin
  43daec:	61206c61 7220646e 61687365 20646570     al and reshaped 
  43dafc:	61727261 73692079 66696420 65726566     array is differe
  43db0c:	0000746e 20494f43 6e207369 7320746f     nt..COI is not s
  43db1c:	6f707075 64657472 20796220 73696874     upported by this
  43db2c:	65706f20 69746172 00006e6f 20494f43      operation..COI 
  43db3c:	6e207369 7320746f 6f707075 64657472     is not supported
  43db4c:	00000000 20656854 7274616d 69207869     ....The matrix i
  43db5c:	6f6e2073 6f632074 6e69746e 73756f75     s not continuous
  43db6c:	6874202c 69207375 6e207374 65626d75     , thus its numbe
  43db7c:	666f2072 776f7220 61632073 6f6e206e     r of rows can no
  43db8c:	65622074 61686320 6465676e 00000000     t be changed....
  43db9c:	20646142 2077656e 626d756e 6f207265     Bad new number o
  43dbac:	6f722066 00007377 20656854 61746f74     f rows..The tota
  43dbbc:	6977206c 20687464 6e207369 6420746f     l width is not d
  43dbcc:	73697669 656c6269 20796220 20656874     ivisible by the 
  43dbdc:	2077656e 626d756e 6f207265 68632066     new number of ch
  43dbec:	656e6e61 0000736c 6c6c756e 696f7020     annels..null poi
  43dbfc:	7265746e 206f7420 64616568 00007265     nter to header..
  43dc0c:	20646142 75706e69 6f722074 00000069     Bad input roi...
  43dc1c:	75736e55 726f7070 20646574 6d726f66     Unsupported form
  43dc2c:	00007461 20646142 75706e69 726f2074     at..Bad input or
  43dc3c:	6e696769 00000000 20646142 75706e69     igin....Bad inpu
  43dc4c:	6c612074 006e6769 00676d69 6c6c754e     t align.img.Null
  43dc5c:	696f7020 7265746e 206f7420 67616d69      pointer to imag
  43dc6c:	00000065 20646142 67616d69 65682065     e...Bad image he
  43dc7c:	72656461 00000000 6e6b6e55 206e776f     ader....Unknown 
  43dc8c:	65707974 20666f20 6d726574 69726320     type of term cri
  43dc9c:	69726574 00000061 72657449 6f697461     teria...Iteratio
  43dcac:	6620736e 2067616c 73207369 61207465     ns flag is set a
  43dcbc:	6d20646e 6d697861 6e206d75 65626d75     nd maximum numbe
  43dccc:	666f2072 65746920 69746172 20736e6f     r of iterations 
  43dcdc:	3c207369 0030203d 75636341 79636172     is <= 0.Accuracy
  43dcec:	616c6620 73692067 74657320 646e6120      flag is set and
  43dcfc:	73706520 6e6f6c69 20736920 0030203c      epsilon is < 0.
  43dd0c:	7469654e 20726568 75636361 79636172     Neither accuracy
  43dd1c:	726f6e20 78616d20 6d756d69 65746920      nor maximum ite
  43dd2c:	69746172 20736e6f 626d756e 66207265     rations number f
  43dd3c:	7367616c 65726120 74657320 206e6920     lags are set in 
  43dd4c:	74697263 61697265 70797420 00000065     criteria type...
  43dd5c:	59415247 00000000 00424752 00524742     GRAY....RGB.BGR.
  43dd6c:	41524742 00000000                       BGRA....

0043dd74 <_ZZ7cvErrorE19__PRETTY_FUNCTION__>:
  43dd74:	64696f76 45766320 726f7272 746e6928     void cvError(int
  43dd84:	6f63202c 2074736e 72616863 63202c2a     , const char*, c
  43dd94:	74736e6f 61686320 202c2a72 736e6f63     onst char*, cons
  43dda4:	68632074 2c2a7261 746e6920 00000029     t char*, int)...
  43ddb4:	74617473 00007375 45206f4e 726f7272     status..No Error
  43ddc4:	00000000 6b636142 63617274 00000065     ....Backtrace...
  43ddd4:	70736e55 66696365 20646569 6f727265     Unspecified erro
  43dde4:	00000072 65746e49 6c616e72 72726520     r...Internal err
  43ddf4:	0000726f 75736e49 63696666 746e6569     or..Insufficient
  43de04:	6d656d20 0079726f 20646142 75677261      memory.Bad argu
  43de14:	746e656d 00000000 72657449 6f697461     ment....Iteratio
  43de24:	6420736e 6f6e206f 6f632074 7265766e     ns do not conver
  43de34:	00006567 6f747541 63617274 61632065     ge..Autotrace ca
  43de44:	00006c6c 6f636e49 63657272 69732074     ll..Incorrect si
  43de54:	6f20657a 6e692066 20747570 61727261     ze of input arra
  43de64:	00000079 6c6c754e 696f7020 7265746e     y...Null pointer
  43de74:	00000000 69766944 6e6f697a 20796220     ....Divizion by 
  43de84:	6f72657a 63636f20 64657275 00000000     zero occured....
  43de94:	67616d49 74732065 69207065 72772073     Image step is wr
  43dea4:	00676e6f 6c706e49 20656361 7265706f     ong.Inplace oper
  43deb4:	6f697461 7369206e 746f6e20 70757320     ation is not sup
  43dec4:	74726f70 00006465 75716552 65747365     ported..Requeste
  43ded4:	626f2064 7463656a 73617720 746f6e20     d object was not
  43dee4:	756f6620 0000646e 75706e49 6d692074      found..Input im
  43def4:	20656761 74706564 73692068 746f6e20     age depth is not
  43df04:	70757320 74726f70 62206465 75662079      supported by fu
  43df14:	6974636e 00006e6f 6d726f46 20737461     nction..Formats 
  43df24:	6920666f 7475706e 67726120 6e656d75     of input argumen
  43df34:	64207374 6f6e206f 616d2074 00686374     ts do not match.
  43df44:	657a6953 666f2073 706e6920 61207475     Sizes of input a
  43df54:	6d756772 73746e65 206f6420 20746f6e     rguments do not 
  43df64:	6374616d 00000068 20656e4f 6120666f     match...One of a
  43df74:	6d756772 73746e65 61762027 7365756c     rguments' values
  43df84:	20736920 2074756f 7220666f 65676e61      is out of range
  43df94:	00000000 75736e55 726f7070 20646574     ....Unsupported 
  43dfa4:	6d726f66 6f207461 6f632072 6e69626d     format or combin
  43dfb4:	6f697461 666f206e 726f6620 7374616d     ation of formats
  43dfc4:	00000000 75706e49 4f432074 73692049     ....Input COI is
  43dfd4:	746f6e20 70757320 74726f70 00006465      not supported..
  43dfe4:	20646142 626d756e 6f207265 68632066     Bad number of ch
  43dff4:	656e6e61 0000736c 20646142 67616c66     annels..Bad flag
  43e004:	61702820 656d6172 20726574 7320726f      (parameter or s
  43e014:	63757274 65727574 65696620 0029646c     tructure field).
  43e024:	20646142 61726170 6574656d 666f2072     Bad parameter of
  43e034:	70797420 76432065 6e696f50 00000074      type CvPoint...
  43e044:	20646142 65707974 20666f20 6b73616d     Bad type of mask
  43e054:	67726120 6e656d75 00000074 73726150      argument...Pars
  43e064:	20676e69 6f727265 00000072 20656854     ing error...The 
  43e074:	636e7566 6e6f6974 6165662f 65727574     function/feature
  43e084:	20736920 20746f6e 6c706d69 6e656d65      is not implemen
  43e094:	00646574 6f6d654d 62207972 6b636f6c     ted.Memory block
  43e0a4:	73616820 65656220 6f63206e 70757272      has been corrup
  43e0b4:	00646574 6e6b6e55 206e776f 63207325     ted.Unknown %s c
  43e0c4:	2065646f 00006425 72756f73 632f6563     ode %d..source/c
  43e0d4:	726f6378 78632f65 6f727265 70632e72     xcore/cxerror.cp
  43e0e4:	00000070                                p...

0043e0e8 <icvSaturate8u>:
	...
  43e1e8:	03020100 07060504 0b0a0908 0f0e0d0c     ................
  43e1f8:	13121110 17161514 1b1a1918 1f1e1d1c     ................
  43e208:	23222120 27262524 2b2a2928 2f2e2d2c      !"#$%&'()*+,-./
  43e218:	33323130 37363534 3b3a3938 3f3e3d3c     0123456789:;<=>?
  43e228:	43424140 47464544 4b4a4948 4f4e4d4c     @ABCDEFGHIJKLMNO
  43e238:	53525150 57565554 5b5a5958 5f5e5d5c     PQRSTUVWXYZ[\]^_
  43e248:	63626160 67666564 6b6a6968 6f6e6d6c     `abcdefghijklmno
  43e258:	73727170 77767574 7b7a7978 7f7e7d7c     pqrstuvwxyz{|}~.
  43e268:	83828180 87868584 8b8a8988 8f8e8d8c     ................
  43e278:	93929190 97969594 9b9a9998 9f9e9d9c     ................
  43e288:	a3a2a1a0 a7a6a5a4 abaaa9a8 afaeadac     ................
  43e298:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
  43e2a8:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
  43e2b8:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
  43e2c8:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
  43e2d8:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................
  43e2e8:	ffffffff ffffffff ffffffff ffffffff     ................
  43e2f8:	ffffffff ffffffff ffffffff ffffffff     ................
  43e308:	ffffffff ffffffff ffffffff ffffffff     ................
  43e318:	ffffffff ffffffff ffffffff ffffffff     ................
  43e328:	ffffffff ffffffff ffffffff ffffffff     ................
  43e338:	ffffffff ffffffff ffffffff ffffffff     ................
  43e348:	ffffffff ffffffff ffffffff ffffffff     ................
  43e358:	ffffffff ffffffff ffffffff ffffffff     ................
  43e368:	ffffffff ffffffff ffffffff ffffffff     ................
  43e378:	ffffffff ffffffff ffffffff ffffffff     ................
  43e388:	ffffffff ffffffff ffffffff ffffffff     ................
  43e398:	ffffffff ffffffff ffffffff ffffffff     ................
  43e3a8:	ffffffff ffffffff ffffffff ffffffff     ................
  43e3b8:	ffffffff ffffffff ffffffff ffffffff     ................
  43e3c8:	ffffffff ffffffff ffffffff ffffffff     ................
  43e3d8:	ffffffff ffffffff ffffffff ffffffff     ................
  43e3e8:	000000ff                                ....

0043e3ec <icv8x16uSqrTab>:
  43e3ec:	fc04fe01 f810fa09 f424f619 f040f231     ..........$.1.@.
  43e3fc:	ec64ee51 e890ea79 e4c4e6a9 e100e2e1     Q.d.y...........
  43e40c:	dd44df21 d990db69 d5e4d7b9 d240d411     !.D.i.........@.
  43e41c:	cea4d071 cb10ccd9 c784c949 c400c5c1     q.......I.......
  43e42c:	c084c241 bd10bec9 b9a4bb59 b640b7f1     A.......Y.....@.
  43e43c:	b2e4b491 af90b139 ac44ade9 a900aaa1     ....9.....D.....
  43e44c:	a5c4a761 a290a429 9f64a0f9 9c409dd1     a...).....d...@.
  43e45c:	99249ab1 96109799 93049489 90009181     ..$.............
  43e46c:	8d048e81 8a108b89 87248899 844085b1     ..........$...@.
  43e47c:	816482d1 7e907ff9 7bc47d29 79007a61     ..d....~)}.{az.y
  43e48c:	764477a1 739074e9 70e47239 6e406f91     .wDv.t.s9r.p.o@n
  43e49c:	6ba46cf1 69106a59 668467c9 64006541     .l.kYj.i.g.fAe.d
  43e4ac:	618462c1 5f106049 5ca45dd9 5a405b71     .b.aI`._.].\q[@Z
  43e4bc:	57e45911 559056b9 53445469 51005221     .Y.W.V.UiTDS!R.Q
  43e4cc:	4ec44fe1 4c904da9 4a644b79 48404951     .O.N.M.LyKdJQI@H
  43e4dc:	46244731 44104519 42044309 40004101     1G$F.E.D.C.B.A.@
  43e4ec:	3e043f01 3c103d09 3a243b19 38403931     .?.>.=.<.;$:19@8
  43e4fc:	36643751 34903579 32c433a9 310031e1     Q7d6y5.4.3.2.1.1
  43e50c:	2f443021 2d902e69 2be42cb9 2a402b11     !0D/i..-.,.+.+@*
  43e51c:	28a42971 271027d9 25842649 240024c1     q).(.'.'I&.%.$.$
  43e52c:	22842341 211021c9 1fa42059 1e401ef1     A#.".!.!Y ....@.
  43e53c:	1ce41d91 1b901c39 1a441ae9 190019a1     ....9.....D.....
  43e54c:	17c41861 16901729 156415f9 144014d1     a...).....d...@.
  43e55c:	132413b1 12101299 11041189 10001081     ..$.............
  43e56c:	0f040f81 0e100e89 0d240d99 0c400cb1     ..........$...@.
  43e57c:	0b640bd1 0a900af9 09c40a29 09000961     ..d.....)...a...
  43e58c:	084408a1 079007e9 06e40739 06400691     ..D.....9.....@.
  43e59c:	05a405f1 05100559 048404c9 04000441     ....Y.......A...
  43e5ac:	038403c1 03100349 02a402d9 02400271     ....I.......q.@.
  43e5bc:	01e40211 019001b9 01440169 01000121     ........i.D.!...
  43e5cc:	00c400e1 009000a9 00640079 00400051     ........y.d.Q.@.
  43e5dc:	00240031 00100019 00040009 00000001     1.$.............
  43e5ec:	00040001 00100009 00240019 00400031     ..........$.1.@.
  43e5fc:	00640051 00900079 00c400a9 010000e1     Q.d.y...........
  43e60c:	01440121 01900169 01e401b9 02400211     !.D.i.........@.
  43e61c:	02a40271 031002d9 03840349 040003c1     q.......I.......
  43e62c:	04840441 051004c9 05a40559 064005f1     A.......Y.....@.
  43e63c:	06e40691 07900739 084407e9 090008a1     ....9.....D.....
  43e64c:	09c40961 0a900a29 0b640af9 0c400bd1     a...).....d...@.
  43e65c:	0d240cb1 0e100d99 0f040e89 10000f81     ..$.............
  43e66c:	11041081 12101189 13241299 144013b1     ..........$...@.
  43e67c:	156414d1 169015f9 17c41729 19001861     ..d.....)...a...
  43e68c:	1a4419a1 1b901ae9 1ce41c39 1e401d91     ..D.....9.....@.
  43e69c:	1fa41ef1 21102059 228421c9 24002341     ....Y .!.!."A#.$
  43e6ac:	258424c1 27102649 28a427d9 2a402971     .$.%I&.'.'.(q)@*
  43e6bc:	2be42b11 2d902cb9 2f442e69 31003021     .+.+.,.-i.D/!0.1
  43e6cc:	32c431e1 349033a9 36643579 38403751     .1.2.3.4y5d6Q7@8
  43e6dc:	3a243931 3c103b19 3e043d09 40003f01     19$:.;.<.=.>.?.@
  43e6ec:	42044101 44104309 46244519 48404731     .A.B.C.D.E$F1G@H
  43e6fc:	4a644951 4c904b79 4ec44da9 51004fe1     QIdJyK.L.M.N.O.Q
  43e70c:	53445221 55905469 57e456b9 5a405911     !RDSiT.U.V.W.Y@Z
  43e71c:	5ca45b71 5f105dd9 61846049 640062c1     q[.\.]._I`.a.b.d
  43e72c:	66846541 691067c9 6ba46a59 6e406cf1     Ae.f.g.iYj.k.l@n
  43e73c:	70e46f91 73907239 764474e9 790077a1     .o.p9r.s.tDv.w.y
  43e74c:	7bc47a61 7e907d29 81647ff9 844082d1     az.{)}.~..d...@.
  43e75c:	872485b1 8a108899 8d048b89 90008e81     ..$.............
  43e76c:	93049181 96109489 99249799 9c409ab1     ..........$...@.
  43e77c:	9f649dd1 a290a0f9 a5c4a429 a900a761     ..d.....)...a...
  43e78c:	ac44aaa1 af90ade9 b2e4b139 b640b491     ..D.....9.....@.
  43e79c:	b9a4b7f1 bd10bb59 c084bec9 c400c241     ....Y.......A...
  43e7ac:	c784c5c1 cb10c949 cea4ccd9 d240d071     ....I.......q.@.
  43e7bc:	d5e4d411 d990d7b9 dd44db69 e100df21     ........i.D.!...
  43e7cc:	e4c4e2e1 e890e6a9 ec64ea79 f040ee51     ........y.d.Q.@.
  43e7dc:	f424f231 f810f619 fc04fa09 0000fe01     1.$.............

0043e7ec <icv8x32fTab>:
  43e7ec:	c3000000 c2fe0000 c2fc0000 c2fa0000     ................
  43e7fc:	c2f80000 c2f60000 c2f40000 c2f20000     ................
  43e80c:	c2f00000 c2ee0000 c2ec0000 c2ea0000     ................
  43e81c:	c2e80000 c2e60000 c2e40000 c2e20000     ................
  43e82c:	c2e00000 c2de0000 c2dc0000 c2da0000     ................
  43e83c:	c2d80000 c2d60000 c2d40000 c2d20000     ................
  43e84c:	c2d00000 c2ce0000 c2cc0000 c2ca0000     ................
  43e85c:	c2c80000 c2c60000 c2c40000 c2c20000     ................
  43e86c:	c2c00000 c2be0000 c2bc0000 c2ba0000     ................
  43e87c:	c2b80000 c2b60000 c2b40000 c2b20000     ................
  43e88c:	c2b00000 c2ae0000 c2ac0000 c2aa0000     ................
  43e89c:	c2a80000 c2a60000 c2a40000 c2a20000     ................
  43e8ac:	c2a00000 c29e0000 c29c0000 c29a0000     ................
  43e8bc:	c2980000 c2960000 c2940000 c2920000     ................
  43e8cc:	c2900000 c28e0000 c28c0000 c28a0000     ................
  43e8dc:	c2880000 c2860000 c2840000 c2820000     ................
  43e8ec:	c2800000 c27c0000 c2780000 c2740000     ......|...x...t.
  43e8fc:	c2700000 c26c0000 c2680000 c2640000     ..p...l...h...d.
  43e90c:	c2600000 c25c0000 c2580000 c2540000     ..`...\...X...T.
  43e91c:	c2500000 c24c0000 c2480000 c2440000     ..P...L...H...D.
  43e92c:	c2400000 c23c0000 c2380000 c2340000     ..@...<...8...4.
  43e93c:	c2300000 c22c0000 c2280000 c2240000     ..0...,...(...$.
  43e94c:	c2200000 c21c0000 c2180000 c2140000     .. .............
  43e95c:	c2100000 c20c0000 c2080000 c2040000     ................
  43e96c:	c2000000 c1f80000 c1f00000 c1e80000     ................
  43e97c:	c1e00000 c1d80000 c1d00000 c1c80000     ................
  43e98c:	c1c00000 c1b80000 c1b00000 c1a80000     ................
  43e99c:	c1a00000 c1980000 c1900000 c1880000     ................
  43e9ac:	c1800000 c1700000 c1600000 c1500000     ......p...`...P.
  43e9bc:	c1400000 c1300000 c1200000 c1100000     ..@...0... .....
  43e9cc:	c1000000 c0e00000 c0c00000 c0a00000     ................
  43e9dc:	c0800000 c0400000 c0000000 bf800000     ......@.........
  43e9ec:	00000000 3f800000 40000000 40400000     .......?...@..@@
  43e9fc:	40800000 40a00000 40c00000 40e00000     ...@...@...@...@
  43ea0c:	41000000 41100000 41200000 41300000     ...A...A.. A..0A
  43ea1c:	41400000 41500000 41600000 41700000     ..@A..PA..`A..pA
  43ea2c:	41800000 41880000 41900000 41980000     ...A...A...A...A
  43ea3c:	41a00000 41a80000 41b00000 41b80000     ...A...A...A...A
  43ea4c:	41c00000 41c80000 41d00000 41d80000     ...A...A...A...A
  43ea5c:	41e00000 41e80000 41f00000 41f80000     ...A...A...A...A
  43ea6c:	42000000 42040000 42080000 420c0000     ...B...B...B...B
  43ea7c:	42100000 42140000 42180000 421c0000     ...B...B...B...B
  43ea8c:	42200000 42240000 42280000 422c0000     .. B..$B..(B..,B
  43ea9c:	42300000 42340000 42380000 423c0000     ..0B..4B..8B..<B
  43eaac:	42400000 42440000 42480000 424c0000     ..@B..DB..HB..LB
  43eabc:	42500000 42540000 42580000 425c0000     ..PB..TB..XB..\B
  43eacc:	42600000 42640000 42680000 426c0000     ..`B..dB..hB..lB
  43eadc:	42700000 42740000 42780000 427c0000     ..pB..tB..xB..|B
  43eaec:	42800000 42820000 42840000 42860000     ...B...B...B...B
  43eafc:	42880000 428a0000 428c0000 428e0000     ...B...B...B...B
  43eb0c:	42900000 42920000 42940000 42960000     ...B...B...B...B
  43eb1c:	42980000 429a0000 429c0000 429e0000     ...B...B...B...B
  43eb2c:	42a00000 42a20000 42a40000 42a60000     ...B...B...B...B
  43eb3c:	42a80000 42aa0000 42ac0000 42ae0000     ...B...B...B...B
  43eb4c:	42b00000 42b20000 42b40000 42b60000     ...B...B...B...B
  43eb5c:	42b80000 42ba0000 42bc0000 42be0000     ...B...B...B...B
  43eb6c:	42c00000 42c20000 42c40000 42c60000     ...B...B...B...B
  43eb7c:	42c80000 42ca0000 42cc0000 42ce0000     ...B...B...B...B
  43eb8c:	42d00000 42d20000 42d40000 42d60000     ...B...B...B...B
  43eb9c:	42d80000 42da0000 42dc0000 42de0000     ...B...B...B...B
  43ebac:	42e00000 42e20000 42e40000 42e60000     ...B...B...B...B
  43ebbc:	42e80000 42ea0000 42ec0000 42ee0000     ...B...B...B...B
  43ebcc:	42f00000 42f20000 42f40000 42f60000     ...B...B...B...B
  43ebdc:	42f80000 42fa0000 42fc0000 42fe0000     ...B...B...B...B
  43ebec:	43000000 43010000 43020000 43030000     ...C...C...C...C
  43ebfc:	43040000 43050000 43060000 43070000     ...C...C...C...C
  43ec0c:	43080000 43090000 430a0000 430b0000     ...C...C...C...C
  43ec1c:	430c0000 430d0000 430e0000 430f0000     ...C...C...C...C
  43ec2c:	43100000 43110000 43120000 43130000     ...C...C...C...C
  43ec3c:	43140000 43150000 43160000 43170000     ...C...C...C...C
  43ec4c:	43180000 43190000 431a0000 431b0000     ...C...C...C...C
  43ec5c:	431c0000 431d0000 431e0000 431f0000     ...C...C...C...C
  43ec6c:	43200000 43210000 43220000 43230000     .. C..!C.."C..#C
  43ec7c:	43240000 43250000 43260000 43270000     ..$C..%C..&C..'C
  43ec8c:	43280000 43290000 432a0000 432b0000     ..(C..)C..*C..+C
  43ec9c:	432c0000 432d0000 432e0000 432f0000     ..,C..-C...C../C
  43ecac:	43300000 43310000 43320000 43330000     ..0C..1C..2C..3C
  43ecbc:	43340000 43350000 43360000 43370000     ..4C..5C..6C..7C
  43eccc:	43380000 43390000 433a0000 433b0000     ..8C..9C..:C..;C
  43ecdc:	433c0000 433d0000 433e0000 433f0000     ..<C..=C..>C..?C
  43ecec:	43400000 43410000 43420000 43430000     ..@C..AC..BC..CC
  43ecfc:	43440000 43450000 43460000 43470000     ..DC..EC..FC..GC
  43ed0c:	43480000 43490000 434a0000 434b0000     ..HC..IC..JC..KC
  43ed1c:	434c0000 434d0000 434e0000 434f0000     ..LC..MC..NC..OC
  43ed2c:	43500000 43510000 43520000 43530000     ..PC..QC..RC..SC
  43ed3c:	43540000 43550000 43560000 43570000     ..TC..UC..VC..WC
  43ed4c:	43580000 43590000 435a0000 435b0000     ..XC..YC..ZC..[C
  43ed5c:	435c0000 435d0000 435e0000 435f0000     ..\C..]C..^C.._C
  43ed6c:	43600000 43610000 43620000 43630000     ..`C..aC..bC..cC
  43ed7c:	43640000 43650000 43660000 43670000     ..dC..eC..fC..gC
  43ed8c:	43680000 43690000 436a0000 436b0000     ..hC..iC..jC..kC
  43ed9c:	436c0000 436d0000 436e0000 436f0000     ..lC..mC..nC..oC
  43edac:	43700000 43710000 43720000 43730000     ..pC..qC..rC..sC
  43edbc:	43740000 43750000 43760000 43770000     ..tC..uC..vC..wC
  43edcc:	43780000 43790000 437a0000 437b0000     ..xC..yC..zC..{C
  43eddc:	437c0000 437d0000 437e0000 437f0000     ..|C..}C..~C...C

0043edec <icvDepthToType>:
  43edec:	0100ffff ffff0302 ffff0405 ffffffff     ................
  43edfc:	0000ff06                                ....

0043ee00 <_ZZL15icvFreeSeqBlockP5CvSeqiE19__PRETTY_FUNCTION__>:
  43ee00:	64696f76 76636920 65657246 42716553     void icvFreeSeqB
  43ee10:	6b636f6c 53764328 2c2a7165 746e6920     lock(CvSeq*, int
  43ee20:	00000029                                )...

0043ee24 <_ZZ7cvAligniiE19__PRETTY_FUNCTION__>:
  43ee24:	20746e69 6c417663 286e6769 2c746e69     int cvAlign(int,
  43ee34:	746e6920 00000029                        int)...

0043ee3c <_ZZL17icvGoNextMemBlockP12CvMemStorageE19__PRETTY_FUNCTION__>:
  43ee3c:	64696f76 76636920 654e6f47 654d7478     void icvGoNextMe
  43ee4c:	6f6c426d 43286b63 6d654d76 726f7453     mBlock(CvMemStor
  43ee5c:	2a656761 00000029                       age*)...

0043ee64 <_ZZ17cvMemStorageAllocE19__PRETTY_FUNCTION__>:
  43ee64:	64696f76 7663202a 536d654d 61726f74     void* cvMemStora
  43ee74:	6c416567 28636f6c 654d7643 6f74536d     geAlloc(CvMemSto
  43ee84:	65676172 73202c2a 5f657a69 00002974     rage*, size_t)..

0043ee94 <_ZZL10icvGrowSeqP5CvSeqiE19__PRETTY_FUNCTION__>:
  43ee94:	64696f76 76636920 776f7247 28716553     void icvGrowSeq(
  43eea4:	65537643 202c2a71 29746e69 00000000     CvSeq*, int)....

0043eeb4 <_ZL17icvPower2ShiftTab>:
  43eeb4:	02ff0100 03ffffff ffffffff 04ffffff     ................
  43eec4:	ffffffff ffffffff ffffffff 05ffffff     ................

0043eed4 <_ZZ16cvFlushSeqWriterE19__PRETTY_FUNCTION__>:
  43eed4:	64696f76 46766320 6873756c 57716553     void cvFlushSeqW
  43eee4:	65746972 76432872 57716553 65746972     riter(CvSeqWrite
  43eef4:	00292a72                                r*).

0043eef8 <_ZZ13cvEndWriteSeqE19__PRETTY_FUNCTION__>:
  43eef8:	65537643 63202a71 646e4576 74697257     CvSeq* cvEndWrit
  43ef08:	71655365 53764328 72577165 72657469     eSeq(CvSeqWriter
  43ef18:	0000292a                                *)..

0043ef1c <_ZZ9cvSeqPushE19__PRETTY_FUNCTION__>:
  43ef1c:	72616863 7663202a 50716553 28687375     char* cvSeqPush(
  43ef2c:	65537643 202c2a71 64696f76 0000292a     CvSeq*, void*)..

0043ef3c <_ZZ8cvSeqPopE19__PRETTY_FUNCTION__>:
  43ef3c:	64696f76 53766320 6f507165 76432870     void cvSeqPop(Cv
  43ef4c:	2a716553 6f76202c 292a6469 00000000     Seq*, void*)....

0043ef5c <_ZZ14cvSeqPushFrontE19__PRETTY_FUNCTION__>:
  43ef5c:	72616863 7663202a 50716553 46687375     char* cvSeqPushF
  43ef6c:	746e6f72 53764328 2c2a7165 696f7620     ront(CvSeq*, voi
  43ef7c:	00292a64                                d*).

0043ef80 <_ZZ13cvSeqPopFrontE19__PRETTY_FUNCTION__>:
  43ef80:	64696f76 53766320 6f507165 6f724670     void cvSeqPopFro
  43ef90:	4328746e 71655376 76202c2a 2a64696f     nt(CvSeq*, void*
  43efa0:	00000029                                )...

0043efa4 <_ZZ11cvSeqInsertE19__PRETTY_FUNCTION__>:
  43efa4:	72616863 7663202a 49716553 7265736e     char* cvSeqInser
  43efb4:	76432874 2a716553 6e69202c 76202c74     t(CvSeq*, int, v
  43efc4:	2a64696f 00000029                       oid*)...

0043efcc <_ZZ14cvSeqPushMultiE19__PRETTY_FUNCTION__>:
  43efcc:	64696f76 53766320 75507165 754d6873     void cvSeqPushMu
  43efdc:	2869746c 65537643 202c2a71 64696f76     lti(CvSeq*, void
  43efec:	69202c2a 202c746e 29746e69 00000000     *, int, int)....

0043effc <_ZZ13cvSeqPopMultiE19__PRETTY_FUNCTION__>:
  43effc:	64696f76 53766320 6f507165 6c754d70     void cvSeqPopMul
  43f00c:	43286974 71655376 76202c2a 2a64696f     ti(CvSeq*, void*
  43f01c:	6e69202c 69202c74 0029746e              , int, int).

0043f028 <_ZZ16cvSeqRemoveSliceE19__PRETTY_FUNCTION__>:
  43f028:	64696f76 53766320 65527165 65766f6d     void cvSeqRemove
  43f038:	63696c53 76432865 2a716553 7643202c     Slice(CvSeq*, Cv
  43f048:	63696c53 00002965                       Slice)..

0043f050 <_ZZ16cvSeqInsertSliceE19__PRETTY_FUNCTION__>:
  43f050:	64696f76 53766320 6e497165 74726573     void cvSeqInsert
  43f060:	63696c53 76432865 2a716553 6e69202c     Slice(CvSeq*, in
  43f070:	63202c74 74736e6f 41764320 292a7272     t, const CvArr*)
  43f080:	00000000                                ....

0043f084 <_ZZ14cvSeqPartitionE19__PRETTY_FUNCTION__>:
  43f084:	20746e69 65537663 72615071 69746974     int cvSeqPartiti
  43f094:	63286e6f 74736e6f 53764320 2c2a7165     on(const CvSeq*,
  43f0a4:	4d764320 74536d65 6761726f 202c2a65      CvMemStorage*, 
  43f0b4:	65537643 2c2a2a71 43764320 7546706d     CvSeq**, CvCmpFu
  43f0c4:	202c636e 64696f76 0000292a              nc, void*)..

0043f0d0 <_ZZ8cvSetAddE19__PRETTY_FUNCTION__>:
  43f0d0:	20746e69 65537663 64644174 53764328     int cvSetAdd(CvS
  43f0e0:	2c2a7465 53764320 6c457465 2c2a6d65     et*, CvSetElem*,
  43f0f0:	53764320 6c457465 2a2a6d65 00000029      CvSetElem**)...

0043f100 <_ZZ16cvSetRemoveByPtrE19__PRETTY_FUNCTION__>:
  43f100:	64696f76 53766320 65527465 65766f6d     void cvSetRemove
  43f110:	74507942 76432872 2a746553 6f76202c     ByPtr(CvSet*, vo
  43f120:	292a6469 00000000                       id*)....

0043f128 <_ZZ13cvGraphAddVtxE19__PRETTY_FUNCTION__>:
  43f128:	20746e69 72477663 41687061 74566464     int cvGraphAddVt
  43f138:	76432878 70617247 202c2a68 736e6f63     x(CvGraph*, cons
  43f148:	76432074 70617247 78745668 43202c2a     t CvGraphVtx*, C
  43f158:	61724776 74566870 292a2a78 00000000     vGraphVtx**)....

0043f168 <_ZZ20cvFindGraphEdgeByPtrE19__PRETTY_FUNCTION__>:
  43f168:	72477643 45687061 2a656764 46766320     CvGraphEdge* cvF
  43f178:	47646e69 68706172 65676445 74507942     indGraphEdgeByPt
  43f188:	6f632872 2074736e 72477643 2a687061     r(const CvGraph*
  43f198:	6f63202c 2074736e 72477643 56687061     , const CvGraphV
  43f1a8:	2c2a7874 6e6f6320 43207473 61724776     tx*, const CvGra
  43f1b8:	74566870 00292a78                       phVtx*).

0043f1c0 <_ZZ19cvGraphAddEdgeByPtrE19__PRETTY_FUNCTION__>:
  43f1c0:	20746e69 72477663 41687061 64456464     int cvGraphAddEd
  43f1d0:	79426567 28727450 72477643 2a687061     geByPtr(CvGraph*
  43f1e0:	7643202c 70617247 78745668 43202c2a     , CvGraphVtx*, C
  43f1f0:	61724776 74566870 202c2a78 736e6f63     vGraphVtx*, cons
  43f200:	76432074 70617247 67644568 202c2a65     t CvGraphEdge*, 
  43f210:	72477643 45687061 2a656764 0000292a     CvGraphEdge**)..

0043f220 <_ZZ22cvGraphRemoveEdgeByPtrE19__PRETTY_FUNCTION__>:
  43f220:	64696f76 47766320 68706172 6f6d6552     void cvGraphRemo
  43f230:	64456576 79426567 28727450 72477643     veEdgeByPtr(CvGr
  43f240:	2a687061 7643202c 70617247 78745668     aph*, CvGraphVtx
  43f250:	43202c2a 61724776 74566870 00292a78     *, CvGraphVtx*).

0043f260 <_ZZ21cvGraphVtxDegreeByPtrE19__PRETTY_FUNCTION__>:
  43f260:	20746e69 72477663 56687061 65447874     int cvGraphVtxDe
  43f270:	65657267 74507942 6f632872 2074736e     greeByPtr(const 
  43f280:	72477643 2a687061 6f63202c 2074736e     CvGraph*, const 
  43f290:	72477643 56687061 292a7874 00000000     CvGraphVtx*)....

0043f2a0 <_ZZ16cvGraphVtxDegreeE19__PRETTY_FUNCTION__>:
  43f2a0:	20746e69 72477663 56687061 65447874     int cvGraphVtxDe
  43f2b0:	65657267 6e6f6328 43207473 61724776     gree(const CvGra
  43f2c0:	2c2a6870 746e6920 00000029              ph*, int)...

0043f2cc <_ZZ15cvNextGraphItemE19__PRETTY_FUNCTION__>:
  43f2cc:	20746e69 654e7663 72477478 49687061     int cvNextGraphI
  43f2dc:	286d6574 72477643 53687061 6e6e6163     tem(CvGraphScann
  43f2ec:	292a7265 00000000                       er*)....

0043f2f4 <_ZZ20cvInsertNodeIntoTreeE19__PRETTY_FUNCTION__>:
  43f2f4:	64696f76 49766320 7265736e 646f4e74     void cvInsertNod
  43f304:	746e4965 6572546f 6f762865 2c2a6469     eIntoTree(void*,
  43f314:	696f7620 202c2a64 64696f76 0000292a      void*, void*)..

0043f324 <_ZZ20cvRemoveNodeFromTreeE19__PRETTY_FUNCTION__>:
  43f324:	64696f76 52766320 766f6d65 646f4e65     void cvRemoveNod
  43f334:	6f724665 6572546d 6f762865 2c2a6469     eFromTree(void*,
  43f344:	696f7620 00292a64 72756f73 632f6563      void*).source/c
  43f354:	726f6378 78632f65 61746164 75727473     xcore/cxdatastru
  43f364:	2e737463 00707063 5f6e6928 6e6f7266     cts.cpp.(in_fron
  43f374:	666f5f74 62203f20 6b636f6c 62203a20     t_of ? block : b
  43f384:	6b636f6c 72703e2d 2d297665 756f633e     lock->prev)->cou
  43f394:	3d20746e 0030203d 2d716573 7274703e     nt == 0.seq->ptr
  43f3a4:	203d3d20 636f6c62 643e2d6b 00617461      == block->data.
  43f3b4:	636f6c62 633e2d6b 746e756f 30203e20     block->count > 0
  43f3c4:	20262620 636f6c62 633e2d6b 746e756f      && block->count
  43f3d4:	73202520 3e2d7165 6d656c65 7a69735f      % seq->elem_siz
  43f3e4:	3d3d2065 00003020 65726170 3e2d746e     e == 0..parent->
  43f3f4:	74746f62 3d206d6f 6c62203d 006b636f     bottom == block.
  43f404:	726f7473 2d656761 6572663e 70735f65     storage->free_sp
  43f414:	20656361 56432025 5254535f 5f544355     ace % CV_STRUCT_
  43f424:	47494c41 3d3d204e 00003020 4c4c554e     ALIGN == 0..NULL
  43f434:	6f747320 65676172 696f7020 7265746e      storage pointer
  43f444:	00000000 206f6f54 6772616c 656d2065     ....Too large me
  43f454:	79726f6d 6f6c6220 69206b63 65722073     mory block is re
  43f464:	73657571 00646574 75716572 65747365     quested.requeste
  43f474:	69732064 6920657a 656e2073 69746167     d size is negati
  43f484:	6f206576 6f742072 6962206f 00000067     ve or too big...
  43f494:	7a697328 29745f65 20727470 56432025     (size_t)ptr % CV
  43f4a4:	5254535f 5f544355 47494c41 3d3d204e     _STRUCT_ALIGN ==
  43f4b4:	00003020 726f7453 20656761 636f6c62      0..Storage bloc
  43f4c4:	6973206b 6920657a 6f742073 6d73206f     k size is too sm
  43f4d4:	206c6c61 66206f74 74207469 73206568     all to fit the s
  43f4e4:	65757165 2065636e 6d656c65 73746e65     equence elements
  43f4f4:	00000000 63657053 65696669 6c652064     ....Specified el
  43f504:	6e656d65 69732074 6420657a 6e73656f     ement size doesn
  43f514:	6d207427 68637461 206f7420 20656874     't match to the 
  43f524:	657a6973 20666f20 20656874 63657073     size of the spec
  43f534:	65696669 6c652064 6e656d65 79742074     ified element ty
  43f544:	28206570 20797274 75206f74 30206573     pe (try to use 0
  43f554:	726f6620 656c6520 746e656d 70797420      for element typ
  43f564:	00002965 20656854 75716573 65636e65     e)..The sequence
  43f574:	73616820 4c554e20 7473204c 6761726f      has NULL storag
  43f584:	6f702065 65746e69 00000072 726f7473     e pointer...stor
  43f594:	2d656761 6572663e 70735f65 20656361     age->free_space 
  43f5a4:	64203d3e 61746c65 00000000 636f6c62     >= delta....bloc
  43f5b4:	633e2d6b 746e756f 73202520 3e2d7165     k->count % seq->
  43f5c4:	6d656c65 7a69735f 3d3d2065 26203020     elem_size == 0 &
  43f5d4:	6c622026 2d6b636f 756f633e 3e20746e     & block->count >
  43f5e4:	00003020 2d716573 7269663e 3e2d7473      0..seq->first->
  43f5f4:	72617473 6e695f74 20786564 30203d3d     start_index == 0
  43f604:	00000000 6d656c45 20746e65 657a6973     ....Element size
  43f614:	656f6420 74276e73 74616d20 74206863      doesn't match t
  43f624:	6874206f 69732065 6f20657a 72702066     o the size of pr
  43f634:	66656465 64656e69 656c6520 746e656d     edefined element
  43f644:	70797420 74282065 74207972 7375206f      type (try to us
  43f654:	20302065 20726f66 75716573 65636e65     e 0 for sequence
  43f664:	656c6520 746e656d 70797420 00002965      element type)..
  43f674:	74697277 3e2d7265 636f6c62 633e2d6b     writer->block->c
  43f684:	746e756f 30203e20 00000000 20727470     ount > 0....ptr 
  43f694:	6c65202b 735f6d65 20657a69 73203d3c     + elem_size <= s
  43f6a4:	3e2d7165 636f6c62 616d5f6b 00000078     eq->block_max...
  43f6b4:	2d716573 7274703e 203d3d20 2d716573     seq->ptr == seq-
  43f6c4:	6f6c623e 6d5f6b63 00007861 636f6c62     >block_max..bloc
  43f6d4:	733e2d6b 74726174 646e695f 3e207865     k->start_index >
  43f6e4:	00003020 20727470 73203d3c 3e2d7165      0..ptr <= seq->
  43f6f4:	636f6c62 616d5f6b 00000078 636f6c62     block_max...bloc
  43f704:	3d21206b 71657320 69663e2d 2d747372     k != seq->first-
  43f714:	6572703e 00000076 636f6c62 3d21206b     >prev...block !=
  43f724:	71657320 69663e2d 00747372 61766e49      seq->first.Inva
  43f734:	2064696c 65646e69 00000078 4c4c554e     lid index...NULL
  43f744:	71657320 636e6575 6f702065 65746e69      sequence pointe
  43f754:	00000072 626d756e 6f207265 65722066     r...number of re
  43f764:	65766f6d 6c652064 6e656d65 69207374     moved elements i
  43f774:	656e2073 69746167 00006576 746c6564     s negative..delt
  43f784:	203e2061 00000030 61766e49 2064696c     a > 0...Invalid 
  43f794:	75716573 65636e65 61656820 00726564     sequence header.
  43f7a4:	20646142 75716573 65636e65 696c7320     Bad sequence sli
  43f7b4:	00006563 72617473 6c732074 20656369     ce..start slice 
  43f7c4:	65646e69 73692078 74756f20 20666f20     index is out of 
  43f7d4:	676e6172 00000065 61766e49 2064696c     range...Invalid 
  43f7e4:	74736564 74616e69 206e6f69 75716573     destination sequ
  43f7f4:	65636e65 61656820 00726564 72756f53     ence header.Sour
  43f804:	69206563 6f6e2073 20612074 75716573     ce is not a sequ
  43f814:	65636e65 726f6e20 74616d20 00786972     ence nor matrix.
  43f824:	20656854 72756f73 61206563 79617272     The source array
  43f834:	73756d20 65622074 20643120 696e6f63      must be 1d coni
  43f844:	756f756e 65762073 726f7463 00000000     nuous vector....
  43f854:	657a6953 666f2073 756f7320 20656372     Sizes of source 
  43f864:	20646e61 74736564 74616e69 206e6f69     and destination 
  43f874:	75716573 65636e65 65202773 656d656c     sequences' eleme
  43f884:	2073746e 20657261 66666964 6e657265     nts are differen
  43f894:	00000074 20646142 75706e69 65732074     t...Bad input se
  43f8a4:	6e657571 00006563 6c6c754e 6d6f6320     quence..Null com
  43f8b4:	65726170 6e756620 6f697463 0000006e     pare function...
  43f8c4:	6c6c754e 656c6520 746e656d 696f7020     Null element poi
  43f8d4:	7265746e 00000000 69727728 29726574     nter....(writer)
  43f8e4:	7165732e 6c653e2d 735f6d65 20657a69     .seq->elem_size 
  43f8f4:	73203d3d 6f657a69 6f6e2866 00296564     == sizeof(node).
  43f904:	69727728 29726574 7274702e 203d3c20     (writer).ptr <= 
  43f914:	69727728 29726574 6f6c622e 6d5f6b63     (writer).block_m
  43f924:	2d207861 7a697320 28666f65 65646f6e     ax - sizeof(node
  43f934:	00000029 746f6f72 61703e2d 746e6572     )...root->parent
  43f944:	203d3d20 00000030 69727728 29726574      == 0...(writer)
  43f954:	7165732e 6c653e2d 735f6d65 20657a69     .seq->elem_size 
  43f964:	73203d3d 6f657a69 64692866 00002978     == sizeof(idx)..
  43f974:	69727728 29726574 7274702e 203d3c20     (writer).ptr <= 
  43f984:	69727728 29726574 6f6c622e 6d5f6b63     (writer).block_m
  43f994:	2d207861 7a697320 28666f65 29786469     ax - sizeof(idx)
  43f9a4:	00000000 6e756f63 3d3c2074 5f564320     ....count <= CV_
  43f9b4:	5f544553 4d454c45 5844495f 53414d5f     SET_ELEM_IDX_MAS
  43f9c4:	00312b4b 2073666f 31203d3d 207c7c20     K+1.ofs == 1 || 
  43f9d4:	72617473 74765f74 3d3d2078 67646520     start_vtx == edg
  43f9e4:	763e2d65 305b7874 0000005d 70617267     e->vtx[0]...grap
  43f9f4:	6f702068 65746e69 73692072 4c554e20     h pointer is NUL
  43fa04:	0000004c 74726576 70207865 746e696f     L...vertex point
  43fa14:	20737265 6e696f63 65646973 726f2820     ers coinside (or
  43fa24:	74657320 206f7420 4c4c554e 00000029      set to NULL)...
  43fa34:	65676465 6c663e2d 20736761 30203d3e     edge->flags >= 0
  43fa44:	00000000 69732828 745f657a 63695f29     ....((size_t)_ic
  43fa54:	656d5f76 7970636d 7473645f 7328265f     v_memcpy_dst_&(s
  43fa64:	6f657a69 6e692866 312d2974 3d202929     izeof(int)-1)) =
  43fa74:	0030203d 2073666f 31203d3d 207c7c20     = 0.ofs == 1 || 
  43fa84:	5f646e65 20787476 65203d3d 2d656764     end_vtx == edge-
  43fa94:	7874763e 005d305b 65676465 203d2120     >vtx[0].edge != 
  43faa4:	00000030 20656854 74726576 64207865     0...The vertex d
  43fab4:	2073656f 20746f6e 6f6c6562 7420676e     oes not belong t
  43fac4:	6874206f 72672065 00687061 20656854     o the graph.The 
  43fad4:	74726576 69207865 6f6e2073 6f662074     vertex is not fo
  43fae4:	00646e75 67646528 3e2d2965 5b787476     und.(edge)->vtx[
  43faf4:	3d205d30 7628203d 65747265 7c202978     0] == (vertex) |
  43fb04:	6528207c 29656764 74763e2d 5d315b78     | (edge)->vtx[1]
  43fb14:	203d3d20 72657628 29786574 00000000      == (vertex)....
  43fb24:	6c6c754e 61726720 70206870 746e696f     Null graph point
  43fb34:	00007265 65737341 6f697472 67203a6e     er..Assertion: g
  43fb44:	68706172 74733e2d 6761726f 3d212065     raph->storage !=
  43fb54:	66203020 656c6961 00000064 6c6c754e      0 failed...Null
  43fb64:	756f6420 20656c62 6e696f70 20726574      double pointer 
  43fb74:	67206f74 68706172 61637320 72656e6e     to graph scanner
  43fb84:	00000000 6c6c754e 61726720 73206870     ....Null graph s
  43fb94:	6e6e6163 00007265 67646528 3e2d2965     canner..(edge)->
  43fba4:	5b787476 3d205d30 7628203d 20297874     vtx[0] == (vtx) 
  43fbb4:	28207c7c 65676465 763e2d29 315b7874     || (edge)->vtx[1
  43fbc4:	3d3d205d 74762820 00002978 61766e49     ] == (vtx)..Inva
  43fbd4:	2064696c 70617267 6f702068 65746e69     lid graph pointe
  43fbe4:	00000072 65726170 3e2d746e 656e5f76     r...parent->v_ne
  43fbf4:	21207478 6f6e203d 00006564 6d617266     xt != node..fram
  43fc04:	6f6e2065 63206564 646c756f 746f6e20     e node could not
  43fc14:	20656220 656c6564 00646574 65726170      be deleted.pare
  43fc24:	3e2d746e 656e5f76 3d207478 6f6e203d     nt->v_next == no
  43fc34:	00006564 68746945 62207265 2068746f     de..Either both 
  43fc44:	6e696f70 73726574 6f687320 20646c75     pointers should 
  43fc54:	4e206562 204c4c55 6e20726f 20656e6f     be NULL or none 
  43fc64:	7420666f 006d6568 72756f73 632f6563     of them.source/c
  43fc74:	726f6378 78632f65 6f6c6c61 70632e63     xcore/cxalloc.cp
  43fc84:	00000070 6167654e 65766974 20726f20     p...Negative or 
  43fc94:	206f6f74 6772616c 72612065 656d7567     too large argume
  43fca4:	6f20746e 76632066 6f6c6c41 75662063     nt of cvAlloc fu
  43fcb4:	6974636e 00006e6f 2074754f 6d20666f     nction..Out of m
  43fcc4:	726f6d65 00000079 6c616544 61636f6c     emory...Dealloca
  43fcd4:	6e6f6974 72726520 0000726f              tion error..

0043fce0 <_ZZ6cvCopyE19__PRETTY_FUNCTION__>:
  43fce0:	64696f76 43766320 2879706f 736e6f63     void cvCopy(cons
  43fcf0:	6f762074 2c2a6469 696f7620 202c2a64     t void*, void*, 
  43fd00:	736e6f63 6f762074 292a6469 00000000     const void*)....
  43fd10:	72756f73 632f6563 726f6378 78632f65     source/cxcore/cx
  43fd20:	79706f63 7070632e 00000000 20494f43     copy.cpp....COI 
  43fd30:	616d202b 61206b73 6e206572 7320746f     + mask are not s
  43fd40:	6f707075 64657472 00000000 6e65704f     upported....Open
  43fd50:	66205643 74636e75 206e6f69 6c696166     CV function fail
  43fd60:	00006465 20696f63 6e207369 7320746f     ed..coi is not s
  43fd70:	6f707075 64657472 00000000              upported....

0043fd7c <_ZZL20icvInitCvtToC1RTableP11CvFuncTableE19__PRETTY_FUNCTION__>:
  43fd7c:	64696f76 76636920 74696e49 54747643     void icvInitCvtT
  43fd8c:	5231436f 6c626154 76432865 636e7546     oC1RTable(CvFunc
  43fd9c:	6c626154 00292a65                       Table*).

0043fda4 <_ZZL25icvInitCvtScaleToC1RTableP11CvFuncTableE19__PRETTY_FUNCTION__>:
  43fda4:	64696f76 76636920 74696e49 53747643     void icvInitCvtS
  43fdb4:	656c6163 31436f54 62615452 4328656c     caleToC1RTable(C
  43fdc4:	6e754676 62615463 292a656c 00000000     vFuncTable*)....

0043fdd4 <_ZZL23icvCvtScaleAbsTo_8u_C1RPKhiPhi6CvSizeddiE19__PRETTY_FUNCTION__>:
  43fdd4:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  43fde4:	656c6163 54736241 75385f6f 5231435f     caleAbsTo_8u_C1R
  43fdf4:	6e6f6328 75207473 72616863 69202c2a     (const uchar*, i
  43fe04:	202c746e 61686375 202c2a72 2c746e69     nt, uchar*, int,
  43fe14:	53764320 2c657a69 756f6420 2c656c62      CvSize, double,
  43fe24:	756f6420 2c656c62 746e6920 00000029      double, int)...

0043fe34 <_ZZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddiE19__PRETTY_FUNCTION__>:
  43fe34:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  43fe44:	656c6163 385f6f54 31435f75 6f632852     caleTo_8u_C1R(co
  43fe54:	2074736e 61686375 202c2a72 2c746e69     nst uchar*, int,
  43fe64:	68637520 2c2a7261 746e6920 7643202c      uchar*, int, Cv
  43fe74:	657a6953 6f64202c 656c6275 6f64202c     Size, double, do
  43fe84:	656c6275 6e69202c 00002974              uble, int)..

0043fe90 <_ZZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddiE19__PRETTY_FUNCTION__>:
  43fe90:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  43fea0:	656c6163 385f6f54 31435f73 6f632852     caleTo_8s_C1R(co
  43feb0:	2074736e 61686375 202c2a72 2c746e69     nst uchar*, int,
  43fec0:	61686320 202c2a72 2c746e69 53764320      char*, int, CvS
  43fed0:	2c657a69 756f6420 2c656c62 756f6420     ize, double, dou
  43fee0:	2c656c62 746e6920 00000029              ble, int)...

0043feec <_ZZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddiE19__PRETTY_FUNCTION__>:
  43feec:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  43fefc:	656c6163 365f6f54 435f6634 63285231     caleTo_64f_C1R(c
  43ff0c:	74736e6f 68637520 2c2a7261 746e6920     onst uchar*, int
  43ff1c:	6f64202c 656c6275 69202c2a 202c746e     , double*, int, 
  43ff2c:	69537643 202c657a 62756f64 202c656c     CvSize, double, 
  43ff3c:	62756f64 202c656c 29746e69 00000000     double, int)....

0043ff4c <_ZZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddiE19__PRETTY_FUNCTION__>:
  43ff4c:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  43ff5c:	656c6163 335f6f54 435f7332 63285231     caleTo_32s_C1R(c
  43ff6c:	74736e6f 68637520 2c2a7261 746e6920     onst uchar*, int
  43ff7c:	6e69202c 202c2a74 2c746e69 53764320     , int*, int, CvS
  43ff8c:	2c657a69 756f6420 2c656c62 756f6420     ize, double, dou
  43ff9c:	2c656c62 746e6920 00000029              ble, int)...

0043ffa8 <_ZZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddiE19__PRETTY_FUNCTION__>:
  43ffa8:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  43ffb8:	656c6163 335f6f54 435f6632 63285231     caleTo_32f_C1R(c
  43ffc8:	74736e6f 68637520 2c2a7261 746e6920     onst uchar*, int
  43ffd8:	6c66202c 2a74616f 6e69202c 43202c74     , float*, int, C
  43ffe8:	7a695376 64202c65 6c62756f 64202c65     vSize, double, d
  43fff8:	6c62756f 69202c65 0029746e              ouble, int).

00440004 <_ZZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddiE19__PRETTY_FUNCTION__>:
  440004:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  440014:	656c6163 315f6f54 435f7536 63285231     caleTo_16u_C1R(c
  440024:	74736e6f 68637520 2c2a7261 746e6920     onst uchar*, int
  440034:	7375202c 74726f68 69202c2a 202c746e     , ushort*, int, 
  440044:	69537643 202c657a 62756f64 202c656c     CvSize, double, 
  440054:	62756f64 202c656c 29746e69 00000000     double, int)....

00440064 <_ZZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddiE19__PRETTY_FUNCTION__>:
  440064:	74537643 73757461 76636920 53747643     CvStatus icvCvtS
  440074:	656c6163 315f6f54 435f7336 63285231     caleTo_16s_C1R(c
  440084:	74736e6f 68637520 2c2a7261 746e6920     onst uchar*, int
  440094:	6873202c 2074726f 2a746e69 6e69202c     , short int*, in
  4400a4:	43202c74 7a695376 64202c65 6c62756f     t, CvSize, doubl
  4400b4:	64202c65 6c62756f 69202c65 0029746e     e, double, int).
  4400c4:	72756f73 632f6563 726f6378 78632f65     source/cxcore/cx
  4400d4:	766e6f63 2e747265 00707063 00626174     convert.cpp.tab.
  4400e4:	68746945 61207265 6f206c6c 75707475     Either all outpu
  4400f4:	6c702074 73656e61 20726f20 796c6e6f     t planes or only
  440104:	656e6f20 74756f20 20747570 6e616c70      one output plan
  440114:	68732065 646c756f 20656220 206e6f6e     e should be non 
  440124:	6f72657a 00000000 68746945 61207265     zero....Either a
  440134:	69206c6c 7475706e 616c7020 2073656e     ll input planes 
  440144:	6f20726f 20796c6e 20656e6f 75706e69     or only one inpu
  440154:	6c702074 20656e61 756f6873 6220646c     t plane should b
  440164:	6f6e2065 657a206e 00006f72 75706e69     e non zero..inpu
  440174:	00000074 7074756f 00007475 20656854     t...output..The 
  440184:	75706e69 72612074 20796172 6120666f     input array of a
  440194:	79617272 73692073 4c554e20 0000004c     rrays is NULL...
  4401a4:	20656854 7074756f 61207475 79617272     The output array
  4401b4:	20666f20 61727261 69207379 554e2073      of arrays is NU
  4401c4:	00004c4c 20656854 626d756e 6f207265     LL..The number o
  4401d4:	756f2066 74757074 72726120 20737961     f output arrays 
  4401e4:	20646e61 20656874 626d756e 6f207265     and the number o
  4401f4:	6f632066 64656970 61686320 6c656e6e     f copied channel
  440204:	756d2073 62207473 6f702065 69746973     s must be positi
  440214:	00006576 20656854 61727261 666f2079     ve..The array of
  440224:	706f6320 20646569 6e616863 206c656e      copied channel 
  440234:	69646e69 20736563 4e207369 004c4c55     indices is NULL.
  440244:	206c6c41 20656874 61727261 6d207379     All the arrays m
  440254:	20747375 65766168 65687420 6d617320     ust have the sam
  440264:	69622065 65642074 00687470 206c6c41     e bit depth.All 
  440274:	20656874 61727261 6d207379 20747375     the arrays must 
  440284:	65766168 65687420 6d617320 69732065     have the same si
  440294:	0000657a 6e616863 206c656e 65646e69     ze..channel inde
  4402a4:	25232078 6e692064 65687420 72726120     x #%d in the arr
  4402b4:	6f207961 61702066 20737269 6e207369     ay of pairs is n
  4402c4:	74616765 20657669 6520726f 65656378     egative or excee
  4402d4:	74207364 74206568 6c61746f 6d756e20     ds the total num
  4402e4:	20726562 6320666f 6e6e6168 20736c65     ber of channels 
  4402f4:	61206e69 74206c6c 25206568 72612073     in all the %s ar
  440304:	73796172 00000000 20656854 61746164     rays....The data
  440314:	70797420 73692065 746f6e20 70757320      type is not sup
  440324:	74726f70 62206465 68742079 75662065     ported by the fu
  440334:	6974636e 00006e6f                       nction..

0044033c <_ZZL30icvInitLUT_Transform8uC1RTableP11CvFuncTableE19__PRETTY_FUNCTION__>:
  44033c:	64696f76 76636920 74696e49 5f54554c     void icvInitLUT_
  44034c:	6e617254 726f6673 4375386d 61545231     Transform8uC1RTa
  44035c:	28656c62 75467643 6154636e 2a656c62     ble(CvFuncTable*
  44036c:	00000029                                )...

00440370 <_ZZL30icvInitLUT_Transform8uCnRTableP11CvFuncTableE19__PRETTY_FUNCTION__>:
  440370:	64696f76 76636920 74696e49 5f54554c     void icvInitLUT_
  440380:	6e617254 726f6673 4375386d 6154526e     Transform8uCnRTa
  440390:	28656c62 75467643 6154636e 2a656c62     ble(CvFuncTable*
  4403a0:	00000029 72756f73 632f6563 76632f76     )...source/cv/cv
  4403b0:	2e74756c 00707063 20656854 2054554c     lut.cpp.The LUT 
  4403c0:	7473756d 20656220 746e6f63 6f756e69     must be continuo
  4403d0:	61207375 79617272 69770a20 32206874     us array .with 2
  4403e0:	65203635 656d656c 2073746e 7420666f     56 elements of t
  4403f0:	73206568 20656d61 65707974 20736120     he same type as 
  440400:	74736564 74616e69 006e6f69 7566202c     destination., fu
  440410:	6974636e 203a6e6f 00000000 65737361     nction: ....asse
  440420:	6f697472 2522206e 66202273 656c6961     rtion "%s" faile
  440430:	66203a64 20656c69 22732522 696c202c     d: file "%s", li
  440440:	2520656e 25732564 00000a73 00000043     ne %d%s%s...C...

00440450 <_global_impure_ptr>:
  440450:	20000ea8                                ... 

00440454 <zeroes.6911>:
  440454:	30303030 30303030 30303030 30303030     0000000000000000

00440464 <blanks.6910>:
  440464:	20202020 20202020 20202020 20202020                     
  440474:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
  440484:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  440494:	00000000 33323130 37363534 62613938     ....0123456789ab
  4404a4:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

004404b4 <zeroes.6869>:
  4404b4:	30303030 30303030 30303030 30303030     0000000000000000

004404c4 <blanks.6868>:
  4404c4:	20202020 20202020 20202020 20202020                     

004404d4 <zeroes.6926>:
  4404d4:	30303030 30303030 30303030 30303030     0000000000000000

004404e4 <blanks.6925>:
  4404e4:	20202020 20202020 20202020 20202020                     
  4404f4:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  440504:	49534f50 00000058 0000002e              POSIX.......

00440510 <__mprec_tens>:
  440510:	00000000 3ff00000 00000000 40240000     .......?......$@
  440520:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  440530:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  440540:	00000000 412e8480 00000000 416312d0     .......A......cA
  440550:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  440560:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  440570:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  440580:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  440590:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  4405a0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  4405b0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  4405c0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  4405d0:	79d99db4 44ea7843                       ...yCx.D

004405d8 <p05.5302>:
  4405d8:	00000005 00000019 0000007d 00000000     ........}.......

004405e8 <__mprec_bigtens>:
  4405e8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  4405f8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  440608:	7f73bf3c 75154fdd 81019700 8409b0b0     <.s..O.u........
  440618:	00000000 81019700 8409b0b0 00000000     ................
  440628:	81019701 8408b0b0 00000000 81019703     ................
  440638:	8408b0b0 00000000 81019703 84fbb0b0     ................
  440648:	00000000 81019702 8409b0b0 00000000     ................
  440658:	81019704 8409b0b0 00000000 81010484     ................
  440668:	0001b0b0 00000000 8101b108 8400b0b0     ................
  440678:	00000000 8101b2cc 02afb0b0 00000000     ................
  440688:	8101b298 01afb0b0 00000000 8101b220     ............ ...
  440698:	af01b0b0 00000000 8101b108 8400b0b0     ................
  4406a8:	00000000 8101b108 8400b0b0 00000000     ................
  4406b8:	8101b286 03afb0b0 00000000 8101b28a     ................
  4406c8:	01afb0b0 00000000 8101b28e 01afb0b0     ................
  4406d8:	00000000 8101b108 8400b0b0 00000000     ................
  4406e8:	8101b108 8400b0b0 00000000 8101b108     ................
  4406f8:	8400b0b0 00000000 8101b108 8400b0b0     ................
  440708:	00000000 8101b108 8400b0b0 00000000     ................
  440718:	8101b108 8400b0b0 00000000              ............

00440724 <_init>:
  440724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  440726:	bf00      	nop
  440728:	bcf8      	pop	{r3, r4, r5, r6, r7}
  44072a:	bc08      	pop	{r3}
  44072c:	469e      	mov	lr, r3
  44072e:	4770      	bx	lr

00440730 <__init_array_start>:
  440730:	004390b9 	.word	0x004390b9

00440734 <__frame_dummy_init_array_entry>:
  440734:	004000f1                                ..@.

00440738 <_fini>:
  440738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  44073a:	bf00      	nop
  44073c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  44073e:	bc08      	pop	{r3}
  440740:	469e      	mov	lr, r3
  440742:	4770      	bx	lr
  440744:	0000      	movs	r0, r0
	...

00440748 <__memcpy_from_arm>:
  440748:	e51ff004 	ldr	pc, [pc, #-4]	; 44074c <__memcpy_from_arm+0x4>
  44074c:	00434ed9 	.word	0x00434ed9

00440750 <____aeabi_idiv_from_arm>:
  440750:	e51ff004 	ldr	pc, [pc, #-4]	; 440754 <____aeabi_idiv_from_arm+0x4>
  440754:	004319b5 	.word	0x004319b5

00440758 <____aeabi_uidiv_from_arm>:
  440758:	e51ff004 	ldr	pc, [pc, #-4]	; 44075c <____aeabi_uidiv_from_arm+0x4>
  44075c:	00431991 	.word	0x00431991

00440760 <__fini_array_start>:
  440760:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:

// Delay loop is put to SRAM so that FWS will not affect delay time
OPTIMIZE_HIGH
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
20000000:	b480      	push	{r7}
20000002:	b083      	sub	sp, #12
20000004:	af00      	add	r7, sp, #0
20000006:	6078      	str	r0, [r7, #4]

20000008 <loop>:
	UNUSED(n);

	__asm (
20000008:	f3bf 8f5f 	dmb	sy
2000000c:	3801      	subs	r0, #1
2000000e:	d1fb      	bne.n	20000008 <loop>
		"loop: DMB	\n"
		"SUBS R0, R0, #1  \n"
		"BNE.N loop         "
	);
}
20000010:	370c      	adds	r7, #12
20000012:	46bd      	mov	sp, r7
20000014:	f85d 7b04 	ldr.w	r7, [sp], #4
20000018:	4770      	bx	lr
2000001a:	bf00      	nop

2000001c <teststring>:
2000001c:	dcd9 d9dc dddb d8da dadd dcd8 d6d9 dada     ................
2000002c:	dbd8 d6d7 d9da d8d8 d9d8 d6db d9d7 dbd8     ................
2000003c:	d4db d8d7 d9d7 d5d9 d7da d5d8 d8d6 d6dc     ................
2000004c:	d6d6 d9d6 d5db d7d5 dad7 d5d9 d6d4 dcda     ................
2000005c:	d6d9 d5d7 dad8 d8da d5d7 d8d7 dbda d7d6     ................
2000006c:	d6d9 d9d9 d9d5 d6db d3d7 d8d5 d4da d6d6     ................
2000007c:	d5d4 d4d5 d7d2 d6d6 d5d5 d3d2 a2a6 9aa1     ................
2000008c:	9395 4646 4847 4341 aaa2 b3af acab cccf     ..FFGHAC........
2000009c:	cdcb cccb 646a 6867 5f62 8d87 9497 9291     ....jdghb_......
200000ac:	d7d4 d7d8 d6d7 d0cd d1d1 d1d0 d1d2 cfd1     ................
200000bc:	cfcf 7f83 767e 6f72 5e5e 6260 6e6c cbc8     ....~vro^^`bln..
200000cc:	cbca cfd1 d4cf d1d3 d1d0 cfcf d2d3 d2d3     ................
200000dc:	ced1 d2d0 d5d1 c5cc c8c9 c8c5 6770 656b     ............pgke
200000ec:	6261 8581 9087 9191 d2d2 d1d2 d1d2 888e     ab..............
200000fc:	7c81 7379 474d 4a49 5149 b8b4 b8b9 c2b8     .|ysMGIJIQ......
2000010c:	d0d0 c7ce d7cb cbcd c8cd d6cd 979c 9194     ................
2000011c:	8c91 2e32 302e 292a 2223 2724 2625 2527     ..2..0*)#"$'%&'%
2000012c:	2829 2425 2220 2626 2020 6b6c 7670 7c7e     )(%$ "&&  lkpv~|
2000013c:	c5ca cacc cbcb 8e93 8a93 8285 4343 4848     ............CCHH
2000014c:	4e4b aca6 b3af b8b6 ccce c9cc ccca c9cc     KN..............
2000015c:	c7ca ceca 9e9d 959d 9391 3331 2f37 302f     ..........137//0
2000016c:	2720 2323 2327 2827 2824 2224 221f 201f      '##'#'($($".". 
2000017c:	201e 5650 5e5a 6c62 c1be c6c3 c8c8 cdc9     . PVZ^bl........
2000018c:	c9cc c8ca cecb cccc cdcf a0a6 9c9d 9295     ................
2000019c:	5657 5856 5b58 b3b1 b8b7 c1bb cdd0 cdcc     WVVXX[..........
200001ac:	cecc cbcd cccc cdc9 ccce c9cd cdc9 cfcf     ................
200001bc:	cccf cdcd a7ac 9fa2 949f 5553 5654 595a     ..........SUTVZY
200001cc:	aea7 b3b1 bcb1 b1b9 abb0 a4a6 474a 474b     ............JGKG
200001dc:	4847 847b 8a86 9c92 cec9 c9c9 ccc9 c6c1     GH{.............
200001ec:	c6c6 c9c5 c1c1 bbbe b6b8 676d 585d 4d57     ..........mg]XWM
200001fc:	1c1d 1c1c 1d1d 1f1c 2124 221f 1a1a 1b1b     ........$!."....
2000020c:	1b1b 2626 2d2a 372f 9490 9e9a a99e bdbe     ..&&*-/7........
2000021c:	bbbb b3b9 5a63 5257 4a4f 605f 7369 8178     ....cZWROJ_`isx.
2000022c:	c2c2 c7c6 c9c7 c3c4 bfc2 c5c4 bebe bbbf     ................
2000023c:	b9bb 6e74 626d 5c5d 211f 1c20 201f 1d1e     ..tnmb]\.! .. ..
2000024c:	1e1e 2120 1d1d 1e1d 1b1d 201c 2522 2923     .. !....... "%#)
2000025c:	7f78 8c89 9889 bcbb bebe bbbb 6a6b 6163     x...........kjca
2000026c:	4f5a 3f3e 4d46 5954 b3af bcb8 c1c1 aeb3     ZO>?FMTY........
2000027c:	a1a6 969e 4d53 4c49 4e51 918b a69d afaf     ....SMILQN......
2000028c:	c0c0 bcbe b8ba 656f 565a 4d52 4844 534c     ......oeZVRMDHLS
2000029c:	645c b3af bab6 bbbe 989a 898e 7584 3131     \d...........u11
200002ac:	2c2f 262a 1c18 181b 1c18 332d 4037 4f47     /,*&......-37@GO
200002bc:	a69d afa9 bab6 c3c2 c4c3 c7c5 c4c0 c4c6     ................
200002cc:	c5c2 c6c3 c3c5 c3c2 c4c4 c2c5 bdc1 7478     ..............xt
200002dc:	636f 575d 3e3d 4f44 5952 adab bcb1 bdbb     oc]W=>DORY......
200002ec:	a1aa 9797 8791 3943 3436 2e31 1c1d 191b     ......C9641.....
200002fc:	1b17 302b 4139 4c46 a19e b3ac b7b2 c2c5     ..+09AFL........
2000030c:	c7c3 c5c3 c5c5 c6c5 c6c4 c6c6 c6c6 c4c1     ................
2000031c:	cacb c8c9 c2be 7e85 7278 5f65 5655 6762     .......~xre_UVbg
2000032c:	7c70 beba c1c4 c9c3 c6bf c4c6 c4c4 c6c0     p|..............
2000033c:	c4c8 c4c3 c6c2 c6c7 c6c5 c4c3 babf b5b8     ................
2000034c:	6a73 5b65 4e54 2328 2122 2421 1f1d 241f     sje[TN(#"!!$...$
2000035c:	322a 8174 948a a29c c4c3 bdc1 b8b7 6b75     *2t...........uk
2000036c:	5f5f 4f55 625f 7e6b 8981 c0c1 c8c2 c9c3     __UO_bk~........
2000037c:	bfc0 bfc2 c5c0 bfc1 b9be b5b5 6872 525e     ............rh^R
2000038c:	494d 2323 2424 2225 231d 2d25 2e2f 8a7f     MI##$$%".#%-/...
2000039c:	9b8d a7a2 c0c4 c6c4 c2c3 c0c1 c2c3 c8c2     ................
200003ac:	bdc2 adb7 9fa3 5760 4350 363d 2124 1f22     ......`WPC=6$!".
200003bc:	1e1f 332f 473f 5b50 a89d b7b4 bfbb c1c3     ../3?GP[........
200003cc:	c3c6 c4c3 bfc3 c2c3 c6c1 c3c5 c2c6 cac2     ................
200003dc:	c1c7 b1be a4a8 565f 4549 3943 726b 8272     ......_VIEC9krr.
200003ec:	9993 c9c4 bcc3 baba 6c72 5a5f 4a4f 5951     ........rl_ZOJQY
200003fc:	715f 827b c6c3 bfc1 c0c9 909e 727a 636f     _q{.........zroc
2000040c:	333b 2b29 2b29 2528 2424 2b25 6d5f 8a7c     ;3)+)+(%$$%+_m|.
2000041c:	9c96 c6c4 c7c6 c7c8 c6c6 c2c3 c1c2 c6c5     ................
2000042c:	c2c2 c4c4 cbcd c9c8 c2c3 8698 7274 5a61     ............traZ
2000043c:	4444 4c41 6b55 b7ab c0bc cdc5 acae 92a6     DDALUk..........
2000044c:	7f83 4c48 5651 615c aba2 beb4 c2c1 c9cb     ..HLQV\a........
2000045c:	c4c5 c6c5 c7c7 c2c0 c8c7 cac8 c5c8 c6c8     ................
2000046c:	cbc9 c6ca c7c9 cccc c9c6 c9c9 cdcb cac5     ................
2000047c:	c9c7 ccca cbc7 c8c6 cac7 c9cd c9c6 ccc4     ................
2000048c:	c6cd cec6                                   ....

20000490 <g_us_cap_rows>:
20000490:	00f0                                        ..

20000492 <g_us_cap_line>:
20000492:	0140                                        @.

20000494 <SystemCoreClock>:
20000494:	0900 003d                                   ..=.

20000498 <_ZZL12icvCreateROIiiiiiE10cvFuncName>:
20000498:	6369 4376 6572 7461 5265 494f 0000 0000     icvCreateROI....

200004a8 <_ZZL13icvDeleteNodeP11CvSparseMatPKiPjE10cvFuncName>:
200004a8:	6369 4476 6c65 7465 4e65 646f 0065 0000     icvDeleteNode...

200004b8 <_ZZ18cvSetIPLAllocatorsE10cvFuncName>:
200004b8:	7663 6553 4974 4c50 6c41 6f6c 6163 6f74     cvSetIPLAllocato
200004c8:	7372 0000                                   rs..

200004cc <_ZZ15cvInitMatHeaderE10cvFuncName>:
200004cc:	7663 6e49 7469 614d 4874 6165 6564 0072     cvInitMatHeader.

200004dc <_ZZ12cvReleaseMatE10cvFuncName>:
200004dc:	7663 6552 656c 7361 4d65 7461 0000 0000     cvReleaseMat....

200004ec <_ZZ17cvCreateMatHeaderE10cvFuncName>:
200004ec:	7663 7243 6165 6574 614d 4874 6165 6564     cvCreateMatHeade
200004fc:	0072 0000                                   r...

20000500 <_ZZ17cvInitMatNDHeaderE10cvFuncName>:
20000500:	7663 6e49 7469 614d 4e74 4844 6165 6564     cvInitMatNDHeade
20000510:	0072 0000                                   r...

20000514 <_ZZ19cvCreateMatNDHeaderE10cvFuncName>:
20000514:	7663 7243 6165 6574 614d 4e74 4844 6165     cvCreateMatNDHea
20000524:	6564 0072                                   der.

20000528 <_ZZ18cvReleaseSparseMatE10cvFuncName>:
20000528:	7663 6552 656c 7361 5365 6170 7372 4d65     cvReleaseSparseM
20000538:	7461 0000                                   at..

2000053c <_ZZ17cvCreateSparseMatE10cvFuncName>:
2000053c:	7663 7243 6165 6574 7053 7261 6573 614d     cvCreateSparseMa
2000054c:	0074 0000                                   t...

20000550 <_ZZ16cvCloneSparseMatE10cvFuncName>:
20000550:	7663 6c43 6e6f 5365 6170 7372 4d65 7461     cvCloneSparseMat
20000560:	0000 0000                                   ....

20000564 <_ZZ23cvInitSparseMatIteratorE10cvFuncName>:
20000564:	7663 6e49 7469 7053 7261 6573 614d 4974     cvInitSparseMatI
20000574:	6574 6172 6f74 0072                         terator.

2000057c <_ZZL13icvGetNodePtrP11CvSparseMatPKiPiiPjE10cvFuncName>:
2000057c:	6369 4776 7465 6f4e 6564 7450 0072 0000     icvGetNodePtr...

2000058c <_ZZ12cvCreateDataE10cvFuncName>:
2000058c:	7663 7243 6165 6574 6144 6174 0000 0000     cvCreateData....

2000059c <_ZZ11cvCreateMatE10cvFuncName>:
2000059c:	7663 7243 6165 6574 614d 0074               cvCreateMat.

200005a8 <_ZZ10cvCloneMatE10cvFuncName>:
200005a8:	7663 6c43 6e6f 4d65 7461 0000               cvCloneMat..

200005b4 <_ZZ13cvCreateMatNDE10cvFuncName>:
200005b4:	7663 7243 6165 6574 614d 4e74 0044 0000     cvCreateMatND...

200005c4 <_ZZ12cvCloneMatNDE10cvFuncName>:
200005c4:	7663 6c43 6e6f 4d65 7461 444e 0000 0000     cvCloneMatND....

200005d4 <_ZZ13cvReleaseDataE10cvFuncName>:
200005d4:	7663 6552 656c 7361 4465 7461 0061 0000     cvReleaseData...

200005e4 <_ZZ9cvSetDataE10cvFuncName>:
200005e4:	7663 6553 4474 7461 0061 0000               cvSetData...

200005f0 <_ZZ13cvGetElemTypeE10cvFuncName>:
200005f0:	7663 6547 4574 656c 546d 7079 0065 0000     cvGetElemType...

20000600 <_ZZ9cvGetDimsE10cvFuncName>:
20000600:	7663 6547 4474 6d69 0073 0000               cvGetDims...

2000060c <_ZZ12cvGetDimSizeE10cvFuncName>:
2000060c:	7663 6547 4474 6d69 6953 657a 0000 0000     cvGetDimSize....

2000061c <_ZZ9cvGetSizeE10cvFuncName>:
2000061c:	7663 6547 5374 7a69 0065 0000               cvGetSize...

20000628 <_ZZ17cvScalarToRawDataE10cvFuncName>:
20000628:	7663 6353 6c61 7261 6f54 6152 4477 7461     cvScalarToRawDat
20000638:	0061 0000                                   a...

2000063c <_ZZ17cvRawDataToScalarE10cvFuncName>:
2000063c:	7663 6152 4477 7461 5461 536f 6163 616c     cvRawDataToScala
2000064c:	0072 0000                                   r...

20000650 <_ZZ7cvPtr2DE10cvFuncName>:
20000650:	7663 7450 3272 0044                         cvPtr2D.

20000658 <_ZZ12cvGetRawDataE10cvFuncName>:
20000658:	7663 6547 5274 7761 6144 6174 0000 0000     cvGetRawData....

20000668 <_ZZ7cvPtr1DE10cvFuncName>:
20000668:	7663 7450 3172 0044                         cvPtr1D.

20000670 <_ZZ7cvPtr3DE10cvFuncName>:
20000670:	7663 7450 3372 0044                         cvPtr3D.

20000678 <_ZZ7cvPtrNDE10cvFuncName>:
20000678:	7663 7450 4e72 0044                         cvPtrND.

20000680 <_ZZ7cvGet1DE10cvFuncName>:
20000680:	7663 6547 3174 0044                         cvGet1D.

20000688 <_ZZ7cvGet2DE10cvFuncName>:
20000688:	7663 6547 3274 0044                         cvGet2D.

20000690 <_ZZ11cvGetReal1DE10cvFuncName>:
20000690:	7663 6547 5274 6165 316c 0044               cvGetReal1D.

2000069c <_ZZ11cvGetReal2DE10cvFuncName>:
2000069c:	7663 6547 5274 6165 326c 0044               cvGetReal2D.

200006a8 <_ZZ11cvGetReal3DE10cvFuncName>:
200006a8:	7663 6547 5274 6165 336c 0044               cvGetReal3D.

200006b4 <_ZZ11cvGetRealNDE10cvFuncName>:
200006b4:	7663 6547 5274 6165 4e6c 0044               cvGetRealND.

200006c0 <_ZZ7cvSet1DE10cvFuncName>:
200006c0:	7663 6553 3174 0044                         cvSet1D.

200006c8 <_ZZ7cvSet2DE10cvFuncName>:
200006c8:	7663 6553 3274 0044                         cvSet2D.

200006d0 <_ZZ11cvSetReal1DE10cvFuncName>:
200006d0:	7663 6553 5274 6165 316c 0044               cvSetReal1D.

200006dc <_ZZ11cvSetReal2DE10cvFuncName>:
200006dc:	7663 6553 5274 6165 326c 0044               cvSetReal2D.

200006e8 <_ZZ11cvSetReal3DE10cvFuncName>:
200006e8:	7663 6553 5274 6165 336c 0044               cvSetReal3D.

200006f4 <_ZZ11cvSetRealNDE10cvFuncName>:
200006f4:	7663 6553 5274 6165 4e6c 0044               cvSetRealND.

20000700 <_ZZ8cvGetMatE10cvFuncName>:
20000700:	7663 6547 4d74 7461 0000 0000               cvGetMat....

2000070c <_ZZL10cvGetMatNDPKvP7CvMatNDPiE10cvFuncName>:
2000070c:	7663 6547 4d74 7461 444e 0000               cvGetMatND..

20000718 <_ZZ20cvInitNArrayIteratorE10cvFuncName>:
20000718:	7663 6e49 7469 7241 6172 4f79 0070 0000     cvInitArrayOp...

20000728 <_ZZ12cvGetSubRectE10cvFuncName>:
20000728:	7663 6547 5274 6365 0074 0000               cvGetRect...

20000734 <_ZZ9cvGetRowsE10cvFuncName>:
20000734:	7663 6547 5274 776f 0073 0000               cvGetRows...

20000740 <_ZZ9cvGetColsE10cvFuncName>:
20000740:	7663 6547 4374 6c6f 0073 0000               cvGetCols...

2000074c <_ZZ9cvGetDiagE10cvFuncName>:
2000074c:	7663 6547 4474 6169 0067 0000               cvGetDiag...

20000758 <_ZZ14cvReshapeMatNDE10cvFuncName>:
20000758:	7663 6552 6873 7061 4d65 7461 444e 0000     cvReshapeMatND..

20000768 <_ZZ9cvReshapeE10cvFuncName>:
20000768:	7663 6552 6873 7061 0065 0000               cvReshape...

20000774 <_ZZ17cvInitImageHeaderE10cvFuncName>:
20000774:	7663 6e49 7469 6d49 6761 4865 6165 6564     cvInitImageHeade
20000784:	0072 0000                                   r...

20000788 <_ZZ10cvGetImageE10cvFuncName>:
20000788:	7663 6547 4974 616d 6567 0000               cvGetImage..

20000794 <_ZZ20cvReleaseImageHeaderE10cvFuncName>:
20000794:	7663 6552 656c 7361 4965 616d 6567 6548     cvReleaseImageHe
200007a4:	6461 7265 0000 0000                         ader....

200007ac <_ZZ19cvCreateImageHeaderE10cvFuncName>:
200007ac:	7663 7243 6165 6574 6d49 6761 4865 6165     cvCreateImageHea
200007bc:	6564 0072                                   der.

200007c0 <_ZZ14cvReleaseImageE10cvFuncName>:
200007c0:	7663 6552 656c 7361 4965 616d 6567 0000     cvReleaseImage..

200007d0 <_ZZ13cvCreateImageE10cvFuncName>:
200007d0:	7663 7243 6165 6574 6d49 6761 0065 0000     cvCreateImage...

200007e0 <_ZZ13cvSetImageROIE10cvFuncName>:
200007e0:	7663 6553 4974 616d 6567 4f52 0049 0000     cvSetImageROI...

200007f0 <_ZZ15cvResetImageROIE10cvFuncName>:
200007f0:	7663 6552 6573 4974 616d 6567 4f52 0049     cvResetImageROI.

20000800 <_ZZ13cvGetImageROIE10cvFuncName>:
20000800:	7663 6547 4974 616d 6567 4f52 0049 0000     cvGetImageROI...

20000810 <_ZZ13cvSetImageCOIE10cvFuncName>:
20000810:	7663 6553 4974 616d 6567 4f43 0049 0000     cvSetImageCOI...

20000820 <_ZZ13cvGetImageCOIE10cvFuncName>:
20000820:	7663 6547 4974 616d 6567 4f43 0049 0000     cvGetImageCOI...

20000830 <_ZZ12cvCloneImageE10cvFuncName>:
20000830:	7663 6c43 6e6f 4965 616d 6567 0000 0000     cvCloneImage....

20000840 <_ZZ19cvCheckTermCriteriaE10cvFuncName>:
20000840:	7663 6843 6365 546b 7265 436d 6972 6574     cvCheckTermCrite
20000850:	6972 0061                                   ria.

20000854 <_ZZL16icvGetColorModeliPPcS0_E3tab>:
20000854:	dd5c 0043 dd5c 0043 0418 0044 0418 0044     \.C.\.C...D...D.
20000864:	dd64 0043 dd68 0043 dd64 0043 dd6c 0043     d.C.h.C.d.C.l.C.

20000874 <_ZZL20icvDestroyMemStorageP12CvMemStorageE10cvFuncName>:
20000874:	6369 4476 7365 7274 796f 654d 536d 6f74     icvDestroyMemSto
20000884:	6172 6567 0000 0000                         rage....

2000088c <_ZZL17icvInitMemStorageP12CvMemStorageiE10cvFuncName>:
2000088c:	6369 4976 696e 4d74 6d65 7453 726f 6761     icvInitMemStorag
2000089c:	2065 0000                                   e ..

200008a0 <_ZZ18cvCreateMemStorageE10cvFuncName>:
200008a0:	7663 7243 6165 6574 654d 536d 6f74 6172     cvCreateMemStora
200008b0:	6567 0000                                   ge..

200008b4 <_ZZ23cvCreateChildMemStorageE10cvFuncName>:
200008b4:	7663 7243 6165 6574 6843 6c69 4d64 6d65     cvCreateChildMem
200008c4:	7453 726f 6761 0065                         Storage.

200008cc <_ZZ19cvReleaseMemStorageE10cvFuncName>:
200008cc:	7663 6552 656c 7361 4d65 6d65 7453 726f     cvReleaseMemStor
200008dc:	6761 0065                                   age.

200008e0 <_ZZ17cvClearMemStorageE10cvFuncName>:
200008e0:	7663 6c43 6165 4d72 6d65 7453 726f 6761     cvClearMemStorag
200008f0:	0065 0000                                   e...

200008f4 <_ZZ19cvSaveMemStoragePosE10cvFuncName>:
200008f4:	7663 6153 6576 654d 536d 6f74 6172 6567     cvSaveMemStorage
20000904:	6f50 0073                                   Pos.

20000908 <_ZZ22cvRestoreMemStoragePosE10cvFuncName>:
20000908:	7663 6552 7473 726f 4d65 6d65 7453 726f     cvRestoreMemStor
20000918:	6761 5065 736f 0000                         agePos..

20000920 <_ZZL17icvGoNextMemBlockP12CvMemStorageE10cvFuncName>:
20000920:	6369 4776 4e6f 7865 4d74 6d65 6c42 636f     icvGoNextMemBloc
20000930:	006b 0000                                   k...

20000934 <_ZZ17cvMemStorageAllocE10cvFuncName>:
20000934:	7663 654d 536d 6f74 6172 6567 6c41 6f6c     cvMemStorageAllo
20000944:	0063 0000                                   c...

20000948 <_ZZ23cvMemStorageAllocStringE10cvFuncName>:
20000948:	7663 654d 536d 6f74 6172 6567 6c41 6f6c     cvMemStorageAllo
20000958:	5363 7274 6e69 0067                         cString.

20000960 <_ZZ17cvSetSeqBlockSizeE10cvFuncName>:
20000960:	7663 6553 5374 7165 6c42 636f 536b 7a69     cvSetSeqBlockSiz
20000970:	0065 0000                                   e...

20000974 <_ZZ11cvCreateSeqE10cvFuncName>:
20000974:	7663 7243 6165 6574 6553 0071               cvCreateSeq.

20000980 <_ZZL10icvGrowSeqP5CvSeqiE10cvFuncName>:
20000980:	6369 4776 6f72 5377 7165 0000               icvGrowSeq..

2000098c <_ZZ12cvSeqElemIdxE10cvFuncName>:
2000098c:	7663 6553 4571 656c 496d 7864 0000 0000     cvSeqElemIdx....

2000099c <_ZZ23cvMakeSeqHeaderForArrayE10cvFuncName>:
2000099c:	7663 614d 656b 6553 4871 6165 6564 4672     cvMakeSeqHeaderF
200009ac:	726f 7241 6172 0079                         orArray.

200009b4 <_ZZ18cvStartAppendToSeqE10cvFuncName>:
200009b4:	7663 7453 7261 4174 7070 6e65 5464 536f     cvStartAppendToS
200009c4:	7165 0000                                   eq..

200009c8 <_ZZ15cvStartWriteSeqE10cvFuncName>:
200009c8:	7663 7453 7261 5774 6972 6574 6553 0071     cvStartWriteSeq.

200009d8 <_ZZ16cvFlushSeqWriterE10cvFuncName>:
200009d8:	7663 6c46 7375 5368 7165 7257 7469 7265     cvFlushSeqWriter
200009e8:	0000 0000                                   ....

200009ec <_ZZ13cvEndWriteSeqE10cvFuncName>:
200009ec:	7663 6e45 5764 6972 6574 6553 0071 0000     cvEndWriteSeq...

200009fc <_ZZ16cvCreateSeqBlockE10cvFuncName>:
200009fc:	7663 7243 6165 6574 6553 4271 6f6c 6b63     cvCreateSeqBlock
20000a0c:	0000 0000                                   ....

20000a10 <_ZZ14cvStartReadSeqE10cvFuncName>:
20000a10:	7663 7453 7261 5274 6165 5364 7165 0000     cvStartReadSeq..

20000a20 <_ZZ16cvChangeSeqBlockE10cvFuncName>:
20000a20:	7663 6843 6e61 6567 6553 4271 6f6c 6b63     cvChangeSeqBlock
20000a30:	0000 0000                                   ....

20000a34 <_ZZL21icvSeqElemsClearFlagsP5CvSeqiiE10cvFuncName>:
20000a34:	6369 5376 6174 7472 6353 6e61 7247 7061     icvStartScanGrap
20000a44:	0068 0000                                   h...

20000a48 <_ZZ17cvGetSeqReaderPosE10cvFuncName>:
20000a48:	7663 6547 5374 7165 6552 6461 7265 6f50     cvGetSeqReaderPo
20000a58:	0073 0000                                   s...

20000a5c <_ZZ17cvSetSeqReaderPosE10cvFuncName>:
20000a5c:	7663 6553 5374 7165 6552 6461 7265 6f50     cvSetSeqReaderPo
20000a6c:	0073 0000                                   s...

20000a70 <_ZZ15cvCvtSeqToArrayE10cvFuncName>:
20000a70:	7663 7643 5374 7165 6f54 7241 6172 0079     cvCvtSeqToArray.

20000a80 <_ZZL18icvSeqFindNextElemP5CvSeqiiiPiE10cvFuncName>:
20000a80:	6369 5376 6174 7472 6353 6e61 7247 7061     icvStartScanGrap
20000a90:	0068 0000                                   h...

20000a94 <_ZZ9cvSeqPushE10cvFuncName>:
20000a94:	7663 6553 5071 7375 0068 0000               cvSeqPush...

20000aa0 <_ZZ8cvSeqPopE10cvFuncName>:
20000aa0:	7663 6553 5071 706f 0000 0000               cvSeqPop....

20000aac <_ZZ14cvSeqPushFrontE10cvFuncName>:
20000aac:	7663 6553 5071 7375 4668 6f72 746e 0000     cvSeqPushFront..

20000abc <_ZZ13cvSeqPopFrontE10cvFuncName>:
20000abc:	7663 6553 5071 706f 7246 6e6f 0074 0000     cvSeqPopFront...

20000acc <_ZZ11cvSeqInsertE10cvFuncName>:
20000acc:	7663 6553 4971 736e 7265 0074               cvSeqInsert.

20000ad8 <_ZZ11cvSeqRemoveE10cvFuncName>:
20000ad8:	7663 6553 5271 6d65 766f 0065               cvSeqRemove.

20000ae4 <_ZZ14cvSeqPushMultiE10cvFuncName>:
20000ae4:	7663 6553 5071 7375 4d68 6c75 6974 0000     cvSeqPushMulti..

20000af4 <_ZZ13cvSeqPopMultiE10cvFuncName>:
20000af4:	7663 6553 5071 706f 754d 746c 0069 0000     cvSeqPopMulti...

20000b04 <_ZZ10cvClearSeqE10cvFuncName>:
20000b04:	7663 6c43 6165 5372 7165 0000               cvClearSeq..

20000b10 <_ZZ10cvSeqSliceE10cvFuncName>:
20000b10:	7663 6553 5371 696c 6563 0000               cvSeqSlice..

20000b1c <_ZZ16cvSeqRemoveSliceE10cvFuncName>:
20000b1c:	7663 6553 5271 6d65 766f 5365 696c 6563     cvSeqRemoveSlice
20000b2c:	0000 0000                                   ....

20000b30 <_ZZ16cvSeqInsertSliceE10cvFuncName>:
20000b30:	7663 6553 4971 736e 7265 5374 696c 6563     cvSeqInsertSlice
20000b40:	0000 0000                                   ....

20000b44 <_ZZ9cvSeqSortE10cvFuncName>:
20000b44:	7663 6553 5371 726f 0074 0000               cvSeqSort...

20000b50 <_ZZ11cvSeqSearchE10cvFuncName>:
20000b50:	7663 6553 5371 726f 0074 0000               cvSeqSort...

20000b5c <_ZZ11cvSeqInvertE10cvFuncName>:
20000b5c:	7663 6553 4971 766e 7265 0074               cvSeqInvert.

20000b68 <_ZZ14cvSeqPartitionE10cvFuncName>:
20000b68:	7663 6553 5071 7261 6974 6974 6e6f 0000     cvSeqPartition..

20000b78 <_ZZ11cvCreateSetE10cvFuncName>:
20000b78:	7663 7243 6165 6574 6553 0074               cvCreateSet.

20000b84 <_ZZ8cvSetAddE10cvFuncName>:
20000b84:	7663 6553 4174 6464 0000 0000               cvSetAdd....

20000b90 <_ZZ11cvSetRemoveE10cvFuncName>:
20000b90:	7663 6553 5274 6d65 766f 0065               cvSetRemove.

20000b9c <_ZZ10cvClearSetE10cvFuncName>:
20000b9c:	7663 6c43 6165 5372 7465 0000               cvClearSet..

20000ba8 <_ZZ13cvCreateGraphE10cvFuncName>:
20000ba8:	7663 6c43 6165 6574 7247 7061 0068 0000     cvCleateGraph...

20000bb8 <_ZZ12cvClearGraphE10cvFuncName>:
20000bb8:	7663 6c43 6165 4772 6172 6870 0000 0000     cvClearGraph....

20000bc8 <_ZZ13cvGraphAddVtxE10cvFuncName>:
20000bc8:	7663 7247 7061 4168 6464 7456 0078 0000     cvGraphAddVtx...

20000bd8 <_ZZ20cvFindGraphEdgeByPtrE10cvFuncName>:
20000bd8:	7663 6946 646e 7247 7061 4568 6764 4265     cvFindGraphEdgeB
20000be8:	5079 7274 0000 0000                         yPtr....

20000bf0 <_ZZ15cvFindGraphEdgeE10cvFuncName>:
20000bf0:	7663 6946 646e 7247 7061 4568 6764 0065     cvFindGraphEdge.

20000c00 <_ZZ19cvGraphAddEdgeByPtrE10cvFuncName>:
20000c00:	7663 7247 7061 4168 6464 6445 6567 7942     cvGraphAddEdgeBy
20000c10:	7450 0072                                   Ptr.

20000c14 <_ZZ14cvGraphAddEdgeE10cvFuncName>:
20000c14:	7663 7247 7061 4168 6464 6445 6567 0000     cvGraphAddEdge..

20000c24 <_ZZ22cvGraphRemoveEdgeByPtrE10cvFuncName>:
20000c24:	7663 7247 7061 5268 6d65 766f 4565 6764     cvGraphRemoveEdg
20000c34:	4265 5079 7274 0000                         eByPtr..

20000c3c <_ZZ21cvGraphRemoveVtxByPtrE10cvFuncName>:
20000c3c:	7663 7247 7061 5268 6d65 766f 5665 7874     cvGraphRemoveVtx
20000c4c:	7942 7450 0072 0000                         ByPtr...

20000c54 <_ZZ16cvGraphRemoveVtxE10cvFuncName>:
20000c54:	7663 7247 7061 5268 6d65 766f 5665 7874     cvGraphRemoveVtx
20000c64:	0000 0000                                   ....

20000c68 <_ZZ17cvGraphRemoveEdgeE10cvFuncName>:
20000c68:	7663 7247 7061 5268 6d65 766f 4565 6764     cvGraphRemoveEdg
20000c78:	0065 0000                                   e...

20000c7c <_ZZ21cvGraphVtxDegreeByPtrE10cvFuncName>:
20000c7c:	7663 7247 7061 5668 7874 6544 7267 6565     cvGraphVtxDegree
20000c8c:	7942 7450 0072 0000                         ByPtr...

20000c94 <_ZZ16cvGraphVtxDegreeE10cvFuncName>:
20000c94:	7663 7247 7061 5668 7874 6544 7267 6565     cvGraphVtxDegree
20000ca4:	0000 0000                                   ....

20000ca8 <_ZZ20cvCreateGraphScannerE10cvFuncName>:
20000ca8:	7663 7243 6165 6574 7247 7061 5368 6163     cvCreateGraphSca
20000cb8:	6e6e 7265 0000 0000                         nner....

20000cc0 <_ZZ21cvReleaseGraphScannerE10cvFuncName>:
20000cc0:	7663 6552 656c 7361 4765 6172 6870 6353     cvReleaseGraphSc
20000cd0:	6e61 656e 0072 0000                         anner...

20000cd8 <_ZZ15cvNextGraphItemE10cvFuncName>:
20000cd8:	7663 654e 7478 7247 7061 4968 6574 006d     cvNextGraphItem.

20000ce8 <_ZZ12cvCloneGraphE10cvFuncName>:
20000ce8:	7663 6c43 6e6f 4765 6172 6870 0000 0000     cvCloneGraph....

20000cf8 <_ZZ20cvInsertNodeIntoTreeE10cvFuncName>:
20000cf8:	7663 6e49 6573 7472 6f4e 6564 6e49 6f74     cvInsertNodeInto
20000d08:	7254 6565 0000 0000                         Tree....

20000d10 <_ZZ20cvRemoveNodeFromTreeE10cvFuncName>:
20000d10:	7663 6552 6f6d 6576 6f4e 6564 7246 6d6f     cvRemoveNodeFrom
20000d20:	7254 6565 0000 0000                         Tree....

20000d28 <_ZZ22cvInitTreeNodeIteratorE10cvFuncName>:
20000d28:	6369 4976 696e 5474 6572 4e65 646f 4965     icvInitTreeNodeI
20000d38:	6574 6172 6f74 0072                         terator.

20000d40 <_ZZ14cvNextTreeNodeE10cvFuncName>:
20000d40:	7663 654e 7478 7254 6565 6f4e 6564 0000     cvNextTreeNode..

20000d50 <_ZZ15cvTreeToNodeSeqE10cvFuncName>:
20000d50:	7663 7254 6565 6f54 6f4e 6564 6553 0071     cvTreeToNodeSeq.

20000d60 <_ZZ14cvPrevTreeNodeE10cvFuncName>:
20000d60:	7663 7250 7665 7254 6565 6f4e 6564 0000     cvPrevTreeNode..

20000d70 <_ZZ18cvSetMemoryManagerE10cvFuncName>:
20000d70:	7663 6553 4d74 6d65 726f 4d79 6e61 6761     cvSetMemoryManag
20000d80:	7265 0000                                   er..

20000d84 <_ZZ7cvAllocE10cvFuncName>:
20000d84:	7663 6c41 6f6c 0063                         cvAlloc.

20000d8c <_ZZ7cvFree_E10cvFuncName>:
20000d8c:	7663 7246 6565 005f                         cvFree_.

20000d94 <_ZL9p_cvAlloc>:
20000d94:	b7c4 0041                                   ..A.

20000d98 <_ZL8p_cvFree>:
20000d98:	b798 0041                                   ..A.

20000d9c <_ZZ6cvCopyE10cvFuncName>:
20000d9c:	7663 6f43 7970 0000                         cvCopy..

20000da4 <_ZZ9cvSetZeroE10cvFuncName>:
20000da4:	7663 6553 5a74 7265 006f 0000               cvSetZero...

20000db0 <_ZZ5cvSetE10cvFuncName>:
20000db0:	7663 6553 0074 0000                         cvSet...

20000db8 <icvCopy_32f_C4MR_p>:
20000db8:	c6b8 0041                                   ..A.

20000dbc <icvCopy_32f_C3MR_p>:
20000dbc:	c5c4 0041                                   ..A.

20000dc0 <icvCopy_16s_C3MR_p>:
20000dc0:	c4d0 0041                                   ..A.

20000dc4 <icvCopy_8u_C4MR_p>:
20000dc4:	c3c4 0041                                   ..A.

20000dc8 <icvCopy_8u_C3MR_p>:
20000dc8:	c2dc 0041                                   ..A.

20000dcc <icvCopy_16s_C1MR_p>:
20000dcc:	c1c4 0041                                   ..A.

20000dd0 <icvCopy_8u_C1MR_p>:
20000dd0:	c0c0 0041                                   ..A.

20000dd4 <icvSet_32f_C4MR_p>:
20000dd4:	bfd0 0041                                   ..A.

20000dd8 <icvSet_32f_C3MR_p>:
20000dd8:	bef0 0041                                   ..A.

20000ddc <icvSet_16s_C3MR_p>:
20000ddc:	be10 0041                                   ..A.

20000de0 <icvSet_8u_C4MR_p>:
20000de0:	bd20 0041                                    .A.

20000de4 <icvSet_8u_C3MR_p>:
20000de4:	bc48 0041                                   H.A.

20000de8 <icvSet_16s_C1MR_p>:
20000de8:	bb4c 0041                                   L.A.

20000dec <icvSet_8u_C1MR_p>:
20000dec:	ba60 0041                                   `.A.

20000df0 <icvCopy_8u_C1R_p>:
20000df0:	c850 0041                                   P.A.

20000df4 <_ZZ7cvSplitE10cvFuncName>:
20000df4:	7663 7053 696c 0074                         cvSplit.

20000dfc <_ZZ7cvMergeE10cvFuncName>:
20000dfc:	7663 654d 6772 0065                         cvMerge.

20000e04 <_ZZ13cvMixChannelsE10cvFuncName>:
20000e04:	7663 694d 4378 6168 6e6e 6c65 0073 0000     cvMixChannels...

20000e14 <_ZZ17cvConvertScaleAbsE10cvFuncName>:
20000e14:	7663 6f43 766e 7265 5374 6163 656c 6241     cvConvertScaleAb
20000e24:	0073 0000                                   s...

20000e28 <_ZZ14cvConvertScaleE10cvFuncName>:
20000e28:	7663 6f43 766e 7265 5374 6163 656c 0000     cvConvertScale..

20000e38 <icvCvt_64f32f_p>:
20000e38:	0b58 0042                                   X.B.

20000e3c <icvCvt_32f64f_p>:
20000e3c:	0aa8 0042                                   ..B.

20000e40 <icvCopy_32f_C1CnCR_p>:
20000e40:	f73c 0041                                   <.A.

20000e44 <icvCopy_16s_C1CnCR_p>:
20000e44:	f608 0041                                   ..A.

20000e48 <icvCopy_8u_C1CnCR_p>:
20000e48:	f4f4 0041                                   ..A.

20000e4c <icvCopy_32f_P4C4R_p>:
20000e4c:	f3f8 0041                                   ..A.

20000e50 <icvCopy_32f_P3C3R_p>:
20000e50:	f318 0041                                   ..A.

20000e54 <icvCopy_32f_P2C2R_p>:
20000e54:	f24c 0041                                   L.A.

20000e58 <icvCopy_16s_P4C4R_p>:
20000e58:	f15c 0041                                   \.A.

20000e5c <icvCopy_16s_P3C3R_p>:
20000e5c:	f078 0041                                   x.A.

20000e60 <icvCopy_16s_P2C2R_p>:
20000e60:	efa8 0041                                   ..A.

20000e64 <icvCopy_8u_P4C4R_p>:
20000e64:	eecc 0041                                   ..A.

20000e68 <icvCopy_8u_P3C3R_p>:
20000e68:	edfc 0041                                   ..A.

20000e6c <icvCopy_8u_P2C2R_p>:
20000e6c:	ed40 0041                                   @.A.

20000e70 <icvCopy_32f_CnC1CR_p>:
20000e70:	ec28 0041                                   (.A.

20000e74 <icvCopy_16s_CnC1CR_p>:
20000e74:	eaf4 0041                                   ..A.

20000e78 <icvCopy_8u_CnC1CR_p>:
20000e78:	e9e0 0041                                   ..A.

20000e7c <icvCopy_32f_C4P4R_p>:
20000e7c:	e8e0 0041                                   ..A.

20000e80 <icvCopy_32f_C3P3R_p>:
20000e80:	e7fc 0041                                   ..A.

20000e84 <icvCopy_32f_C2P2R_p>:
20000e84:	e72c 0041                                   ,.A.

20000e88 <icvCopy_16s_C4P4R_p>:
20000e88:	e638 0041                                   8.A.

20000e8c <icvCopy_16s_C3P3R_p>:
20000e8c:	e550 0041                                   P.A.

20000e90 <icvCopy_16s_C2P2R_p>:
20000e90:	e47c 0041                                   |.A.

20000e94 <icvCopy_8u_C4P4R_p>:
20000e94:	e39c 0041                                   ..A.

20000e98 <icvCopy_8u_C3P3R_p>:
20000e98:	e2c8 0041                                   ..A.

20000e9c <icvCopy_8u_C2P2R_p>:
20000e9c:	e208 0041                                   ..A.

20000ea0 <_ZZ5cvLUTE10cvFuncName>:
20000ea0:	7663 554c 0054 0000                         cvLUT...

20000ea8 <impure_data>:
20000ea8:	0000 0000 1194 2000 11fc 2000 1264 2000     ....... ... d.. 
	...
20000edc:	044c 0044 0000 0000 0000 0000 0000 0000     L.D.............
	...
20000f50:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20000f60:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

200012d0 <_impure_ptr>:
200012d0:	0ea8 2000                                   ... 

200012d4 <__malloc_av_>:
	...
200012dc:	12d4 2000 12d4 2000 12dc 2000 12dc 2000     ... ... ... ... 
200012ec:	12e4 2000 12e4 2000 12ec 2000 12ec 2000     ... ... ... ... 
200012fc:	12f4 2000 12f4 2000 12fc 2000 12fc 2000     ... ... ... ... 
2000130c:	1304 2000 1304 2000 130c 2000 130c 2000     ... ... ... ... 
2000131c:	1314 2000 1314 2000 131c 2000 131c 2000     ... ... ... ... 
2000132c:	1324 2000 1324 2000 132c 2000 132c 2000     $.. $.. ,.. ,.. 
2000133c:	1334 2000 1334 2000 133c 2000 133c 2000     4.. 4.. <.. <.. 
2000134c:	1344 2000 1344 2000 134c 2000 134c 2000     D.. D.. L.. L.. 
2000135c:	1354 2000 1354 2000 135c 2000 135c 2000     T.. T.. \.. \.. 
2000136c:	1364 2000 1364 2000 136c 2000 136c 2000     d.. d.. l.. l.. 
2000137c:	1374 2000 1374 2000 137c 2000 137c 2000     t.. t.. |.. |.. 
2000138c:	1384 2000 1384 2000 138c 2000 138c 2000     ... ... ... ... 
2000139c:	1394 2000 1394 2000 139c 2000 139c 2000     ... ... ... ... 
200013ac:	13a4 2000 13a4 2000 13ac 2000 13ac 2000     ... ... ... ... 
200013bc:	13b4 2000 13b4 2000 13bc 2000 13bc 2000     ... ... ... ... 
200013cc:	13c4 2000 13c4 2000 13cc 2000 13cc 2000     ... ... ... ... 
200013dc:	13d4 2000 13d4 2000 13dc 2000 13dc 2000     ... ... ... ... 
200013ec:	13e4 2000 13e4 2000 13ec 2000 13ec 2000     ... ... ... ... 
200013fc:	13f4 2000 13f4 2000 13fc 2000 13fc 2000     ... ... ... ... 
2000140c:	1404 2000 1404 2000 140c 2000 140c 2000     ... ... ... ... 
2000141c:	1414 2000 1414 2000 141c 2000 141c 2000     ... ... ... ... 
2000142c:	1424 2000 1424 2000 142c 2000 142c 2000     $.. $.. ,.. ,.. 
2000143c:	1434 2000 1434 2000 143c 2000 143c 2000     4.. 4.. <.. <.. 
2000144c:	1444 2000 1444 2000 144c 2000 144c 2000     D.. D.. L.. L.. 
2000145c:	1454 2000 1454 2000 145c 2000 145c 2000     T.. T.. \.. \.. 
2000146c:	1464 2000 1464 2000 146c 2000 146c 2000     d.. d.. l.. l.. 
2000147c:	1474 2000 1474 2000 147c 2000 147c 2000     t.. t.. |.. |.. 
2000148c:	1484 2000 1484 2000 148c 2000 148c 2000     ... ... ... ... 
2000149c:	1494 2000 1494 2000 149c 2000 149c 2000     ... ... ... ... 
200014ac:	14a4 2000 14a4 2000 14ac 2000 14ac 2000     ... ... ... ... 
200014bc:	14b4 2000 14b4 2000 14bc 2000 14bc 2000     ... ... ... ... 
200014cc:	14c4 2000 14c4 2000 14cc 2000 14cc 2000     ... ... ... ... 
200014dc:	14d4 2000 14d4 2000 14dc 2000 14dc 2000     ... ... ... ... 
200014ec:	14e4 2000 14e4 2000 14ec 2000 14ec 2000     ... ... ... ... 
200014fc:	14f4 2000 14f4 2000 14fc 2000 14fc 2000     ... ... ... ... 
2000150c:	1504 2000 1504 2000 150c 2000 150c 2000     ... ... ... ... 
2000151c:	1514 2000 1514 2000 151c 2000 151c 2000     ... ... ... ... 
2000152c:	1524 2000 1524 2000 152c 2000 152c 2000     $.. $.. ,.. ,.. 
2000153c:	1534 2000 1534 2000 153c 2000 153c 2000     4.. 4.. <.. <.. 
2000154c:	1544 2000 1544 2000 154c 2000 154c 2000     D.. D.. L.. L.. 
2000155c:	1554 2000 1554 2000 155c 2000 155c 2000     T.. T.. \.. \.. 
2000156c:	1564 2000 1564 2000 156c 2000 156c 2000     d.. d.. l.. l.. 
2000157c:	1574 2000 1574 2000 157c 2000 157c 2000     t.. t.. |.. |.. 
2000158c:	1584 2000 1584 2000 158c 2000 158c 2000     ... ... ... ... 
2000159c:	1594 2000 1594 2000 159c 2000 159c 2000     ... ... ... ... 
200015ac:	15a4 2000 15a4 2000 15ac 2000 15ac 2000     ... ... ... ... 
200015bc:	15b4 2000 15b4 2000 15bc 2000 15bc 2000     ... ... ... ... 
200015cc:	15c4 2000 15c4 2000 15cc 2000 15cc 2000     ... ... ... ... 
200015dc:	15d4 2000 15d4 2000 15dc 2000 15dc 2000     ... ... ... ... 
200015ec:	15e4 2000 15e4 2000 15ec 2000 15ec 2000     ... ... ... ... 
200015fc:	15f4 2000 15f4 2000 15fc 2000 15fc 2000     ... ... ... ... 
2000160c:	1604 2000 1604 2000 160c 2000 160c 2000     ... ... ... ... 
2000161c:	1614 2000 1614 2000 161c 2000 161c 2000     ... ... ... ... 
2000162c:	1624 2000 1624 2000 162c 2000 162c 2000     $.. $.. ,.. ,.. 
2000163c:	1634 2000 1634 2000 163c 2000 163c 2000     4.. 4.. <.. <.. 
2000164c:	1644 2000 1644 2000 164c 2000 164c 2000     D.. D.. L.. L.. 
2000165c:	1654 2000 1654 2000 165c 2000 165c 2000     T.. T.. \.. \.. 
2000166c:	1664 2000 1664 2000 166c 2000 166c 2000     d.. d.. l.. l.. 
2000167c:	1674 2000 1674 2000 167c 2000 167c 2000     t.. t.. |.. |.. 
2000168c:	1684 2000 1684 2000 168c 2000 168c 2000     ... ... ... ... 
2000169c:	1694 2000 1694 2000 169c 2000 169c 2000     ... ... ... ... 
200016ac:	16a4 2000 16a4 2000 16ac 2000 16ac 2000     ... ... ... ... 
200016bc:	16b4 2000 16b4 2000 16bc 2000 16bc 2000     ... ... ... ... 
200016cc:	16c4 2000 16c4 2000 16cc 2000 16cc 2000     ... ... ... ... 

200016dc <__malloc_trim_threshold>:
200016dc:	0000 0002                                   ....

200016e0 <__malloc_sbrk_base>:
200016e0:	ffff ffff                                   ....

200016e4 <lconv>:
200016e4:	050c 0044 0418 0044 0418 0044 0418 0044     ..D...D...D...D.
200016f4:	0418 0044 0418 0044 0418 0044 0418 0044     ..D...D...D...D.
20001704:	0418 0044 0418 0044 ffff ffff ffff ffff     ..D...D.........
20001714:	ffff ffff ffff 0000                         ........

2000171c <lc_ctype_charset>:
2000171c:	5341 4943 0049 0000 0000 0000 0000 0000     ASCII...........
	...

2000173c <__mb_cur_max>:
2000173c:	0001 0000                                   ....

20001740 <__wctomb>:
20001740:	a9e5 0043                                   ..C.

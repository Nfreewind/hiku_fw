# Copyright (C) 2008-2015, Marvell International Ltd.
# All Rights Reserved.

AR ?= ar
CC ?= gcc


# This variable needs to be exported to be used
# in other Makefiles used here viz. Makefile.chacha20, Makefile.ed25519
# Makefile.hkdf_sha

export AR
export CC

fw_generator-srcs-y := fw_generator.c
fw_generator-cflags-y :=

# default  crypto method used
CRYPTO_OPTION ?= ed_chacha

# SDK_DIR handling
SDK_DIR ?= $(CURDIR)/../../../../

# name of output file generated by this Makefile
TARGET ?= $(CRYPTO_OPTION)_fw_generator


# PRISTINE_CYASSL_PATH is path to vanila cyassl
# downloaded from internet

PRISTINE_CYASSL_PATH ?=

ifeq ($(CRYPTO_OPTION), rsa_aes)
ifeq ($(PRISTINE_CYASSL_PATH),)
$(error "Please refer README.rsa_aes and specify the PRISTINE_CYASSL_PATH")
endif
endif

build_pristine_cyassl := \
       cd $(1); \
       ./autogen.sh; \
       ./configure --enable-sha512 --enable-static --enable-fortress; \
       $(MAKE);


ifeq ($(CRYPTO_OPTION), rsa_aes)
fw_generator-cflags-y += -DCONFIG_FWGEN_RSA_AES
LIBS += $(PRISTINE_CYASSL_PATH)/src/.libs/libcyassl.a
fw_generator-cflags-y += -I . -I $(PRISTINE_CYASSL_PATH)/
# Do nothing
else ifeq ($(CRYPTO_OPTION), ed_chacha)
fw_generator-cflags-y += -DCONFIG_FWGEN_ED_CHACHA
LIBS += libchacha-20.a  \
	libed25519.a

fw_generator-cflags-y += -I . -I $(SDK_DIR)/sdk/src/incl/sdk/ -I $(SDK_DIR)/sdk/src/incl/platform/arch/ -g
else
$(error "Un-recognized config option. Please specify the correct config option.")
endif

LIBS += libhkdf-sha512.a
fw_generator-cflags-y += -I . -I $(SDK_DIR)/sdk/src/incl/sdk/crypto/ -MMD


ifneq ($(NOISY),1)
AT=@
SILENT=-s
else
AT=
endif

all:  $(TARGET)

fw_generator-objs-y := $(fw_generator-srcs-y:.c=.o)
%.o: %.c
	@echo " [$(CC)] $^"
	$(AT)$(CC) $(fw_generator-cflags-y) -c -o $@ $^

libhkdf-sha512.a:
	$(AT)$(MAKE) $(SILENT) -f Makefile.hkdf-sha CFLAGS="$(fw_generator-cflags-y)" SDK_DIR=$(SDK_DIR)

ifeq ($(CRYPTO_OPTION), ed_chacha)

$(TARGET): libchacha-20.a libed25519.a

libchacha-20.a:
	$(AT)$(MAKE) $(SILENT) -f Makefile.chacha20 CFLAGS="$(fw_generator-cflags-y)" SDK_DIR=$(SDK_DIR)

libed25519.a:
	$(AT)$(MAKE) $(SILENT) -f Makefile.ed25519 CFLAGS="$(fw_generator-cflags-y)" SDK_DIR=$(SDK_DIR)
endif

ifeq ($(CRYPTO_OPTION), rsa_aes)
$(TARGET): crypto_rsa_aes

crypto_rsa_aes:
ifeq ($(wildcard $(PRISTINE_CYASSL_PATH)/src/.libs/libcyassl.a),)
	$(call build_pristine_cyassl,$(PRISTINE_CYASSL_PATH))
endif
endif

$(TARGET): $(fw_generator-objs-y) libhkdf-sha512.a
	$(CC) $(fw_generator-objs-y) $(LIBS) -o $(TARGET)
	@echo " [ar] $@"

clean:
	@rm -f *.o *.a *.d $(TARGET)


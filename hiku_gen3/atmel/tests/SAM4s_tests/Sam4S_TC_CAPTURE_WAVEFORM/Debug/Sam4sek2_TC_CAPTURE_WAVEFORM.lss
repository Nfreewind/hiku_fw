
Sam4sek2_TC_CAPTURE_WAVEFORM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005b94  00400000  00400000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00405b94  00405b94  0000db94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000874  20000000  00405b9c  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000ec  20000874  00406410  00010874  2**2
                  ALLOC
  4 .stack        00003000  20000960  004064fc  00010874  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00010874  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  0001089e  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000ab1b  00000000  00000000  000108f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001c0f  00000000  00000000  0001b414  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000041fd  00000000  00000000  0001d023  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000960  00000000  00000000  00021220  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000880  00000000  00000000  00021b80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00012f0d  00000000  00000000  00022400  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000a028  00000000  00000000  0003530d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00052941  00000000  00000000  0003f335  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000257c  00000000  00000000  00091c78  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003960 	.word	0x20003960
  400004:	0040083d 	.word	0x0040083d
  400008:	00400839 	.word	0x00400839
  40000c:	00400839 	.word	0x00400839
  400010:	00400839 	.word	0x00400839
  400014:	00400839 	.word	0x00400839
  400018:	00400839 	.word	0x00400839
	...
  40002c:	00400839 	.word	0x00400839
  400030:	00400839 	.word	0x00400839
  400034:	00000000 	.word	0x00000000
  400038:	00400839 	.word	0x00400839
  40003c:	00400839 	.word	0x00400839
  400040:	00400839 	.word	0x00400839
  400044:	00400839 	.word	0x00400839
  400048:	00400839 	.word	0x00400839
  40004c:	00400839 	.word	0x00400839
  400050:	00400839 	.word	0x00400839
  400054:	00400839 	.word	0x00400839
  400058:	00400839 	.word	0x00400839
  40005c:	00400839 	.word	0x00400839
  400060:	00400839 	.word	0x00400839
  400064:	00400839 	.word	0x00400839
  400068:	00000000 	.word	0x00000000
  40006c:	004005d9 	.word	0x004005d9
  400070:	004005ed 	.word	0x004005ed
  400074:	00400601 	.word	0x00400601
  400078:	00400839 	.word	0x00400839
  40007c:	00400839 	.word	0x00400839
	...
  400088:	00400839 	.word	0x00400839
  40008c:	00400839 	.word	0x00400839
  400090:	00400839 	.word	0x00400839
  400094:	00400839 	.word	0x00400839
  400098:	00400839 	.word	0x00400839
  40009c:	00400839 	.word	0x00400839
  4000a0:	00400839 	.word	0x00400839
  4000a4:	00400d55 	.word	0x00400d55
  4000a8:	00400839 	.word	0x00400839
  4000ac:	00400839 	.word	0x00400839
  4000b0:	00400839 	.word	0x00400839
  4000b4:	00400839 	.word	0x00400839
  4000b8:	00400839 	.word	0x00400839
  4000bc:	00400839 	.word	0x00400839
  4000c0:	00400839 	.word	0x00400839
  4000c4:	00400839 	.word	0x00400839
  4000c8:	00400839 	.word	0x00400839

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20000874 	.word	0x20000874
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00405b9c 	.word	0x00405b9c

004000f0 <frame_dummy>:
  4000f0:	4b08      	ldr	r3, [pc, #32]	; (400114 <frame_dummy+0x24>)
  4000f2:	b510      	push	{r4, lr}
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4808      	ldr	r0, [pc, #32]	; (400118 <frame_dummy+0x28>)
  4000f8:	4908      	ldr	r1, [pc, #32]	; (40011c <frame_dummy+0x2c>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4808      	ldr	r0, [pc, #32]	; (400120 <frame_dummy+0x30>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b903      	cbnz	r3, 400106 <frame_dummy+0x16>
  400104:	bd10      	pop	{r4, pc}
  400106:	4b07      	ldr	r3, [pc, #28]	; (400124 <frame_dummy+0x34>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0fb      	beq.n	400104 <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	bf00      	nop
  400114:	00000000 	.word	0x00000000
  400118:	00405b9c 	.word	0x00405b9c
  40011c:	20000878 	.word	0x20000878
  400120:	00405b9c 	.word	0x00405b9c
  400124:	00000000 	.word	0x00000000

00400128 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400128:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40012a:	480e      	ldr	r0, [pc, #56]	; (400164 <sysclk_init+0x3c>)
  40012c:	4b0e      	ldr	r3, [pc, #56]	; (400168 <sysclk_init+0x40>)
  40012e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400130:	2000      	movs	r0, #0
  400132:	213e      	movs	r1, #62	; 0x3e
  400134:	4b0d      	ldr	r3, [pc, #52]	; (40016c <sysclk_init+0x44>)
  400136:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400138:	4c0d      	ldr	r4, [pc, #52]	; (400170 <sysclk_init+0x48>)
  40013a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40013c:	2800      	cmp	r0, #0
  40013e:	d0fc      	beq.n	40013a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400140:	4b0c      	ldr	r3, [pc, #48]	; (400174 <sysclk_init+0x4c>)
  400142:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400144:	4a0c      	ldr	r2, [pc, #48]	; (400178 <sysclk_init+0x50>)
  400146:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x54>)
  400148:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40014a:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x58>)
  40014c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40014e:	2800      	cmp	r0, #0
  400150:	d0fc      	beq.n	40014c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400152:	2010      	movs	r0, #16
  400154:	4b0b      	ldr	r3, [pc, #44]	; (400184 <sysclk_init+0x5c>)
  400156:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400158:	4b0b      	ldr	r3, [pc, #44]	; (400188 <sysclk_init+0x60>)
  40015a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40015c:	4801      	ldr	r0, [pc, #4]	; (400164 <sysclk_init+0x3c>)
  40015e:	4b02      	ldr	r3, [pc, #8]	; (400168 <sysclk_init+0x40>)
  400160:	4798      	blx	r3
  400162:	bd10      	pop	{r4, pc}
  400164:	07270e00 	.word	0x07270e00
  400168:	00400a01 	.word	0x00400a01
  40016c:	0040067d 	.word	0x0040067d
  400170:	004006d1 	.word	0x004006d1
  400174:	004006e1 	.word	0x004006e1
  400178:	20133f01 	.word	0x20133f01
  40017c:	400e0400 	.word	0x400e0400
  400180:	004006f1 	.word	0x004006f1
  400184:	00400615 	.word	0x00400615
  400188:	004008ed 	.word	0x004008ed

0040018c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
  40018c:	b9a8      	cbnz	r0, 4001ba <_read+0x2e>
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  40018e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400192:	460c      	mov	r4, r1
  400194:	4690      	mov	r8, r2

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  400196:	2a00      	cmp	r2, #0
  400198:	dd0a      	ble.n	4001b0 <_read+0x24>
  40019a:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  40019c:	4e08      	ldr	r6, [pc, #32]	; (4001c0 <_read+0x34>)
  40019e:	4d09      	ldr	r5, [pc, #36]	; (4001c4 <_read+0x38>)
  4001a0:	6830      	ldr	r0, [r6, #0]
  4001a2:	4621      	mov	r1, r4
  4001a4:	682b      	ldr	r3, [r5, #0]
  4001a6:	4798      	blx	r3
		ptr++;
  4001a8:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001aa:	42bc      	cmp	r4, r7
  4001ac:	d1f8      	bne.n	4001a0 <_read+0x14>
  4001ae:	e001      	b.n	4001b4 <_read+0x28>
  4001b0:	f04f 0800 	mov.w	r8, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
  4001b4:	4640      	mov	r0, r8
  4001b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4001ba:	f04f 30ff 	mov.w	r0, #4294967295
  4001be:	4770      	bx	lr
  4001c0:	20000954 	.word	0x20000954
  4001c4:	2000094c 	.word	0x2000094c

004001c8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001c8:	3801      	subs	r0, #1
  4001ca:	2802      	cmp	r0, #2
  4001cc:	d818      	bhi.n	400200 <_write+0x38>
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4001ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001d2:	460e      	mov	r6, r1
  4001d4:	4614      	mov	r4, r2

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001d6:	b182      	cbz	r2, 4001fa <_write+0x32>
  4001d8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001da:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400214 <_write+0x4c>
  4001de:	4f0c      	ldr	r7, [pc, #48]	; (400210 <_write+0x48>)
  4001e0:	f8d8 0000 	ldr.w	r0, [r8]
  4001e4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001e8:	683b      	ldr	r3, [r7, #0]
  4001ea:	4798      	blx	r3
  4001ec:	2800      	cmp	r0, #0
  4001ee:	db0a      	blt.n	400206 <_write+0x3e>
  4001f0:	1ba8      	subs	r0, r5, r6

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001f2:	3c01      	subs	r4, #1
  4001f4:	d1f4      	bne.n	4001e0 <_write+0x18>
  4001f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001fa:	2000      	movs	r0, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
		}
		++nChars;
	}
	return nChars;
  4001fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  400200:	f04f 30ff 	mov.w	r0, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  400204:	4770      	bx	lr
		return -1;
	}

	for (; len != 0; --len) {
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400206:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40020e:	bf00      	nop
  400210:	20000950 	.word	0x20000950
  400214:	20000954 	.word	0x20000954

00400218 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400218:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40021a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40021e:	4b0f      	ldr	r3, [pc, #60]	; (40025c <board_init+0x44>)
  400220:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400222:	200b      	movs	r0, #11
  400224:	4c0e      	ldr	r4, [pc, #56]	; (400260 <board_init+0x48>)
  400226:	47a0      	blx	r4
  400228:	200c      	movs	r0, #12
  40022a:	47a0      	blx	r4
  40022c:	200d      	movs	r0, #13
  40022e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400230:	2013      	movs	r0, #19
  400232:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400236:	4c0b      	ldr	r4, [pc, #44]	; (400264 <board_init+0x4c>)
  400238:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40023a:	2014      	movs	r0, #20
  40023c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400240:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400242:	2023      	movs	r0, #35	; 0x23
  400244:	4908      	ldr	r1, [pc, #32]	; (400268 <board_init+0x50>)
  400246:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400248:	204c      	movs	r0, #76	; 0x4c
  40024a:	4908      	ldr	r1, [pc, #32]	; (40026c <board_init+0x54>)
  40024c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART1_PIO, PINS_UART1, PINS_UART1_FLAGS);
  40024e:	4808      	ldr	r0, [pc, #32]	; (400270 <board_init+0x58>)
  400250:	210c      	movs	r1, #12
  400252:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400256:	4b07      	ldr	r3, [pc, #28]	; (400274 <board_init+0x5c>)
  400258:	4798      	blx	r3
  40025a:	bd10      	pop	{r4, pc}
  40025c:	400e1450 	.word	0x400e1450
  400260:	00400701 	.word	0x00400701
  400264:	00400371 	.word	0x00400371
  400268:	28000079 	.word	0x28000079
  40026c:	28000059 	.word	0x28000059
  400270:	400e1000 	.word	0x400e1000
  400274:	00400495 	.word	0x00400495

00400278 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400278:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40027a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40027e:	d02f      	beq.n	4002e0 <pio_set_peripheral+0x68>
  400280:	d807      	bhi.n	400292 <pio_set_peripheral+0x1a>
  400282:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400286:	d014      	beq.n	4002b2 <pio_set_peripheral+0x3a>
  400288:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  40028c:	d01e      	beq.n	4002cc <pio_set_peripheral+0x54>
  40028e:	b939      	cbnz	r1, 4002a0 <pio_set_peripheral+0x28>
  400290:	4770      	bx	lr
  400292:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400296:	d037      	beq.n	400308 <pio_set_peripheral+0x90>
  400298:	d804      	bhi.n	4002a4 <pio_set_peripheral+0x2c>
  40029a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  40029e:	d029      	beq.n	4002f4 <pio_set_peripheral+0x7c>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4002a0:	6042      	str	r2, [r0, #4]
  4002a2:	4770      	bx	lr

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4002a4:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4002a8:	d02e      	beq.n	400308 <pio_set_peripheral+0x90>
  4002aa:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4002ae:	d02b      	beq.n	400308 <pio_set_peripheral+0x90>
  4002b0:	e7f6      	b.n	4002a0 <pio_set_peripheral+0x28>
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4002b2:	b410      	push	{r4}
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002b4:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002b6:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4002b8:	43d3      	mvns	r3, r2
  4002ba:	4021      	ands	r1, r4
  4002bc:	4019      	ands	r1, r3
  4002be:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002c0:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002c2:	6f44      	ldr	r4, [r0, #116]	; 0x74
  4002c4:	4021      	ands	r1, r4
  4002c6:	400b      	ands	r3, r1
  4002c8:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002ca:	e01a      	b.n	400302 <pio_set_peripheral+0x8a>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002cc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002ce:	4313      	orrs	r3, r2
  4002d0:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002d2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002d4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4002d6:	400b      	ands	r3, r1
  4002d8:	ea23 0302 	bic.w	r3, r3, r2
  4002dc:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002de:	e7df      	b.n	4002a0 <pio_set_peripheral+0x28>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002e0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002e2:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4002e4:	400b      	ands	r3, r1
  4002e6:	ea23 0302 	bic.w	r3, r3, r2
  4002ea:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002ec:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4002ee:	4313      	orrs	r3, r2
  4002f0:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002f2:	e7d5      	b.n	4002a0 <pio_set_peripheral+0x28>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002f4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002f6:	4313      	orrs	r3, r2
  4002f8:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002fa:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4002fc:	4313      	orrs	r3, r2
  4002fe:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400300:	e7ce      	b.n	4002a0 <pio_set_peripheral+0x28>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400302:	6042      	str	r2, [r0, #4]
}
  400304:	f85d 4b04 	ldr.w	r4, [sp], #4
  400308:	4770      	bx	lr
  40030a:	bf00      	nop

0040030c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40030c:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40030e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400312:	bf14      	ite	ne
  400314:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400316:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400318:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  40031c:	bf14      	ite	ne
  40031e:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  400320:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  400322:	f012 0f02 	tst.w	r2, #2
  400326:	d002      	beq.n	40032e <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  400328:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  40032c:	e004      	b.n	400338 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  40032e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400332:	bf18      	it	ne
  400334:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400338:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40033a:	6001      	str	r1, [r0, #0]
  40033c:	4770      	bx	lr
  40033e:	bf00      	nop

00400340 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  400340:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400342:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400344:	9c01      	ldr	r4, [sp, #4]
  400346:	b10c      	cbz	r4, 40034c <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  400348:	6641      	str	r1, [r0, #100]	; 0x64
  40034a:	e000      	b.n	40034e <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40034c:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  40034e:	b10b      	cbz	r3, 400354 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  400350:	6501      	str	r1, [r0, #80]	; 0x50
  400352:	e000      	b.n	400356 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400354:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  400356:	b10a      	cbz	r2, 40035c <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  400358:	6301      	str	r1, [r0, #48]	; 0x30
  40035a:	e000      	b.n	40035e <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  40035c:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  40035e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400360:	6001      	str	r1, [r0, #0]
}
  400362:	f85d 4b04 	ldr.w	r4, [sp], #4
  400366:	4770      	bx	lr

00400368 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400368:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  40036a:	4770      	bx	lr

0040036c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  40036c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40036e:	4770      	bx	lr

00400370 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400370:	b570      	push	{r4, r5, r6, lr}
  400372:	b082      	sub	sp, #8
  400374:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400376:	0943      	lsrs	r3, r0, #5
  400378:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  40037c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400380:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  400382:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400386:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  40038a:	d047      	beq.n	40041c <pio_configure_pin+0xac>
  40038c:	d809      	bhi.n	4003a2 <pio_configure_pin+0x32>
  40038e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400392:	d021      	beq.n	4003d8 <pio_configure_pin+0x68>
  400394:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400398:	d02f      	beq.n	4003fa <pio_configure_pin+0x8a>
  40039a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40039e:	d16f      	bne.n	400480 <pio_configure_pin+0x110>
  4003a0:	e009      	b.n	4003b6 <pio_configure_pin+0x46>
  4003a2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4003a6:	d055      	beq.n	400454 <pio_configure_pin+0xe4>
  4003a8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4003ac:	d052      	beq.n	400454 <pio_configure_pin+0xe4>
  4003ae:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4003b2:	d044      	beq.n	40043e <pio_configure_pin+0xce>
  4003b4:	e064      	b.n	400480 <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4003b6:	f000 001f 	and.w	r0, r0, #31
  4003ba:	2601      	movs	r6, #1
  4003bc:	4086      	lsls	r6, r0
  4003be:	4620      	mov	r0, r4
  4003c0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003c4:	4632      	mov	r2, r6
  4003c6:	4b30      	ldr	r3, [pc, #192]	; (400488 <pio_configure_pin+0x118>)
  4003c8:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4003ca:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003ce:	bf14      	ite	ne
  4003d0:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4003d2:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4003d4:	2001      	movs	r0, #1
  4003d6:	e054      	b.n	400482 <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4003d8:	f000 001f 	and.w	r0, r0, #31
  4003dc:	2601      	movs	r6, #1
  4003de:	4086      	lsls	r6, r0
  4003e0:	4620      	mov	r0, r4
  4003e2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4003e6:	4632      	mov	r2, r6
  4003e8:	4b27      	ldr	r3, [pc, #156]	; (400488 <pio_configure_pin+0x118>)
  4003ea:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4003ec:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003f0:	bf14      	ite	ne
  4003f2:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4003f4:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4003f6:	2001      	movs	r0, #1
  4003f8:	e043      	b.n	400482 <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  4003fa:	f000 001f 	and.w	r0, r0, #31
  4003fe:	2601      	movs	r6, #1
  400400:	4086      	lsls	r6, r0
  400402:	4620      	mov	r0, r4
  400404:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400408:	4632      	mov	r2, r6
  40040a:	4b1f      	ldr	r3, [pc, #124]	; (400488 <pio_configure_pin+0x118>)
  40040c:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40040e:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400412:	bf14      	ite	ne
  400414:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400416:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400418:	2001      	movs	r0, #1
  40041a:	e032      	b.n	400482 <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  40041c:	f000 001f 	and.w	r0, r0, #31
  400420:	2601      	movs	r6, #1
  400422:	4086      	lsls	r6, r0
  400424:	4620      	mov	r0, r4
  400426:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40042a:	4632      	mov	r2, r6
  40042c:	4b16      	ldr	r3, [pc, #88]	; (400488 <pio_configure_pin+0x118>)
  40042e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400430:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400434:	bf14      	ite	ne
  400436:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400438:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40043a:	2001      	movs	r0, #1
  40043c:	e021      	b.n	400482 <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40043e:	f000 031f 	and.w	r3, r0, #31
  400442:	2601      	movs	r6, #1
  400444:	4620      	mov	r0, r4
  400446:	fa06 f103 	lsl.w	r1, r6, r3
  40044a:	462a      	mov	r2, r5
  40044c:	4b0f      	ldr	r3, [pc, #60]	; (40048c <pio_configure_pin+0x11c>)
  40044e:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400450:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  400452:	e016      	b.n	400482 <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400454:	f000 031f 	and.w	r3, r0, #31
  400458:	2601      	movs	r6, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  40045a:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  40045e:	ea05 0106 	and.w	r1, r5, r6
  400462:	9100      	str	r1, [sp, #0]
  400464:	4620      	mov	r0, r4
  400466:	fa06 f103 	lsl.w	r1, r6, r3
  40046a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40046e:	bf14      	ite	ne
  400470:	2200      	movne	r2, #0
  400472:	2201      	moveq	r2, #1
  400474:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400478:	4c05      	ldr	r4, [pc, #20]	; (400490 <pio_configure_pin+0x120>)
  40047a:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  40047c:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  40047e:	e000      	b.n	400482 <pio_configure_pin+0x112>

	default:
		return 0;
  400480:	2000      	movs	r0, #0
	}

	return 1;
}
  400482:	b002      	add	sp, #8
  400484:	bd70      	pop	{r4, r5, r6, pc}
  400486:	bf00      	nop
  400488:	00400279 	.word	0x00400279
  40048c:	0040030d 	.word	0x0040030d
  400490:	00400341 	.word	0x00400341

00400494 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  400494:	b570      	push	{r4, r5, r6, lr}
  400496:	b082      	sub	sp, #8
  400498:	4606      	mov	r6, r0
  40049a:	460d      	mov	r5, r1
  40049c:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  40049e:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4004a2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4004a6:	d038      	beq.n	40051a <pio_configure_pin_group+0x86>
  4004a8:	d809      	bhi.n	4004be <pio_configure_pin_group+0x2a>
  4004aa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4004ae:	d01c      	beq.n	4004ea <pio_configure_pin_group+0x56>
  4004b0:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4004b4:	d025      	beq.n	400502 <pio_configure_pin_group+0x6e>
  4004b6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4004ba:	d150      	bne.n	40055e <pio_configure_pin_group+0xca>
  4004bc:	e009      	b.n	4004d2 <pio_configure_pin_group+0x3e>
  4004be:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4004c2:	d03a      	beq.n	40053a <pio_configure_pin_group+0xa6>
  4004c4:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4004c8:	d037      	beq.n	40053a <pio_configure_pin_group+0xa6>
  4004ca:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4004ce:	d030      	beq.n	400532 <pio_configure_pin_group+0x9e>
  4004d0:	e045      	b.n	40055e <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  4004d2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4004d6:	462a      	mov	r2, r5
  4004d8:	4b22      	ldr	r3, [pc, #136]	; (400564 <pio_configure_pin_group+0xd0>)
  4004da:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4004dc:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  4004e0:	bf14      	ite	ne
  4004e2:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4004e4:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4004e6:	2001      	movs	r0, #1
  4004e8:	e03a      	b.n	400560 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  4004ea:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4004ee:	462a      	mov	r2, r5
  4004f0:	4b1c      	ldr	r3, [pc, #112]	; (400564 <pio_configure_pin_group+0xd0>)
  4004f2:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4004f4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  4004f8:	bf14      	ite	ne
  4004fa:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4004fc:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4004fe:	2001      	movs	r0, #1
  400500:	e02e      	b.n	400560 <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400502:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400506:	462a      	mov	r2, r5
  400508:	4b16      	ldr	r3, [pc, #88]	; (400564 <pio_configure_pin_group+0xd0>)
  40050a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40050c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400510:	bf14      	ite	ne
  400512:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400514:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400516:	2001      	movs	r0, #1
  400518:	e022      	b.n	400560 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  40051a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40051e:	462a      	mov	r2, r5
  400520:	4b10      	ldr	r3, [pc, #64]	; (400564 <pio_configure_pin_group+0xd0>)
  400522:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400524:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400528:	bf14      	ite	ne
  40052a:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40052c:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40052e:	2001      	movs	r0, #1
  400530:	e016      	b.n	400560 <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  400532:	4b0d      	ldr	r3, [pc, #52]	; (400568 <pio_configure_pin_group+0xd4>)
  400534:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400536:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  400538:	e012      	b.n	400560 <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  40053a:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  40053e:	f004 0301 	and.w	r3, r4, #1
  400542:	9300      	str	r3, [sp, #0]
  400544:	4630      	mov	r0, r6
  400546:	4629      	mov	r1, r5
  400548:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40054c:	bf14      	ite	ne
  40054e:	2200      	movne	r2, #0
  400550:	2201      	moveq	r2, #1
  400552:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400556:	4c05      	ldr	r4, [pc, #20]	; (40056c <pio_configure_pin_group+0xd8>)
  400558:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  40055a:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  40055c:	e000      	b.n	400560 <pio_configure_pin_group+0xcc>

	default:
		return 0;
  40055e:	2000      	movs	r0, #0
	}

	return 1;
}
  400560:	b002      	add	sp, #8
  400562:	bd70      	pop	{r4, r5, r6, pc}
  400564:	00400279 	.word	0x00400279
  400568:	0040030d 	.word	0x0040030d
  40056c:	00400341 	.word	0x00400341

00400570 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400570:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400574:	4681      	mov	r9, r0
  400576:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400578:	4b12      	ldr	r3, [pc, #72]	; (4005c4 <pio_handler_process+0x54>)
  40057a:	4798      	blx	r3
  40057c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40057e:	4648      	mov	r0, r9
  400580:	4b11      	ldr	r3, [pc, #68]	; (4005c8 <pio_handler_process+0x58>)
  400582:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400584:	4005      	ands	r5, r0
  400586:	d013      	beq.n	4005b0 <pio_handler_process+0x40>
  400588:	4c10      	ldr	r4, [pc, #64]	; (4005cc <pio_handler_process+0x5c>)
  40058a:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  40058e:	6823      	ldr	r3, [r4, #0]
  400590:	4543      	cmp	r3, r8
  400592:	d108      	bne.n	4005a6 <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400594:	6861      	ldr	r1, [r4, #4]
  400596:	4229      	tst	r1, r5
  400598:	d005      	beq.n	4005a6 <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  40059a:	68e3      	ldr	r3, [r4, #12]
  40059c:	4640      	mov	r0, r8
  40059e:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4005a0:	6863      	ldr	r3, [r4, #4]
  4005a2:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4005a6:	42b4      	cmp	r4, r6
  4005a8:	d002      	beq.n	4005b0 <pio_handler_process+0x40>
  4005aa:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  4005ac:	2d00      	cmp	r5, #0
  4005ae:	d1ee      	bne.n	40058e <pio_handler_process+0x1e>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4005b0:	4b07      	ldr	r3, [pc, #28]	; (4005d0 <pio_handler_process+0x60>)
  4005b2:	681b      	ldr	r3, [r3, #0]
  4005b4:	b123      	cbz	r3, 4005c0 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  4005b6:	4b07      	ldr	r3, [pc, #28]	; (4005d4 <pio_handler_process+0x64>)
  4005b8:	681b      	ldr	r3, [r3, #0]
  4005ba:	b10b      	cbz	r3, 4005c0 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  4005bc:	4648      	mov	r0, r9
  4005be:	4798      	blx	r3
  4005c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005c4:	00400369 	.word	0x00400369
  4005c8:	0040036d 	.word	0x0040036d
  4005cc:	20000894 	.word	0x20000894
  4005d0:	20000958 	.word	0x20000958
  4005d4:	20000890 	.word	0x20000890

004005d8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4005d8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4005da:	4802      	ldr	r0, [pc, #8]	; (4005e4 <PIOA_Handler+0xc>)
  4005dc:	210b      	movs	r1, #11
  4005de:	4b02      	ldr	r3, [pc, #8]	; (4005e8 <PIOA_Handler+0x10>)
  4005e0:	4798      	blx	r3
  4005e2:	bd08      	pop	{r3, pc}
  4005e4:	400e0e00 	.word	0x400e0e00
  4005e8:	00400571 	.word	0x00400571

004005ec <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4005ec:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  4005ee:	4802      	ldr	r0, [pc, #8]	; (4005f8 <PIOB_Handler+0xc>)
  4005f0:	210c      	movs	r1, #12
  4005f2:	4b02      	ldr	r3, [pc, #8]	; (4005fc <PIOB_Handler+0x10>)
  4005f4:	4798      	blx	r3
  4005f6:	bd08      	pop	{r3, pc}
  4005f8:	400e1000 	.word	0x400e1000
  4005fc:	00400571 	.word	0x00400571

00400600 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400600:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400602:	4802      	ldr	r0, [pc, #8]	; (40060c <PIOC_Handler+0xc>)
  400604:	210d      	movs	r1, #13
  400606:	4b02      	ldr	r3, [pc, #8]	; (400610 <PIOC_Handler+0x10>)
  400608:	4798      	blx	r3
  40060a:	bd08      	pop	{r3, pc}
  40060c:	400e1200 	.word	0x400e1200
  400610:	00400571 	.word	0x00400571

00400614 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400614:	4a18      	ldr	r2, [pc, #96]	; (400678 <pmc_switch_mck_to_pllack+0x64>)
  400616:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400618:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  40061c:	4318      	orrs	r0, r3
  40061e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400620:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400622:	f013 0f08 	tst.w	r3, #8
  400626:	d003      	beq.n	400630 <pmc_switch_mck_to_pllack+0x1c>
  400628:	e009      	b.n	40063e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40062a:	3b01      	subs	r3, #1
  40062c:	d103      	bne.n	400636 <pmc_switch_mck_to_pllack+0x22>
  40062e:	e01e      	b.n	40066e <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400630:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400634:	4910      	ldr	r1, [pc, #64]	; (400678 <pmc_switch_mck_to_pllack+0x64>)
  400636:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400638:	f012 0f08 	tst.w	r2, #8
  40063c:	d0f5      	beq.n	40062a <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40063e:	4a0e      	ldr	r2, [pc, #56]	; (400678 <pmc_switch_mck_to_pllack+0x64>)
  400640:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400642:	f023 0303 	bic.w	r3, r3, #3
  400646:	f043 0302 	orr.w	r3, r3, #2
  40064a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40064c:	6e90      	ldr	r0, [r2, #104]	; 0x68
  40064e:	f010 0008 	ands.w	r0, r0, #8
  400652:	d004      	beq.n	40065e <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400654:	2000      	movs	r0, #0
  400656:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  400658:	3b01      	subs	r3, #1
  40065a:	d103      	bne.n	400664 <pmc_switch_mck_to_pllack+0x50>
  40065c:	e009      	b.n	400672 <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40065e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400662:	4905      	ldr	r1, [pc, #20]	; (400678 <pmc_switch_mck_to_pllack+0x64>)
  400664:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400666:	f012 0f08 	tst.w	r2, #8
  40066a:	d0f5      	beq.n	400658 <pmc_switch_mck_to_pllack+0x44>
  40066c:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  40066e:	2001      	movs	r0, #1
  400670:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400672:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400674:	4770      	bx	lr
  400676:	bf00      	nop
  400678:	400e0400 	.word	0x400e0400

0040067c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  40067c:	b138      	cbz	r0, 40068e <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40067e:	4911      	ldr	r1, [pc, #68]	; (4006c4 <pmc_switch_mainck_to_xtal+0x48>)
  400680:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400682:	4a11      	ldr	r2, [pc, #68]	; (4006c8 <pmc_switch_mainck_to_xtal+0x4c>)
  400684:	401a      	ands	r2, r3
  400686:	4b11      	ldr	r3, [pc, #68]	; (4006cc <pmc_switch_mainck_to_xtal+0x50>)
  400688:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40068a:	620b      	str	r3, [r1, #32]
  40068c:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40068e:	4a0d      	ldr	r2, [pc, #52]	; (4006c4 <pmc_switch_mainck_to_xtal+0x48>)
  400690:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400692:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400696:	f023 0303 	bic.w	r3, r3, #3
  40069a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40069e:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4006a2:	0209      	lsls	r1, r1, #8
  4006a4:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006a6:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006a8:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4006aa:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006ac:	f013 0f01 	tst.w	r3, #1
  4006b0:	d0fb      	beq.n	4006aa <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4006b2:	4a04      	ldr	r2, [pc, #16]	; (4006c4 <pmc_switch_mainck_to_xtal+0x48>)
  4006b4:	6a13      	ldr	r3, [r2, #32]
  4006b6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4006ba:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4006be:	6213      	str	r3, [r2, #32]
  4006c0:	4770      	bx	lr
  4006c2:	bf00      	nop
  4006c4:	400e0400 	.word	0x400e0400
  4006c8:	fec8fffc 	.word	0xfec8fffc
  4006cc:	01370002 	.word	0x01370002

004006d0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4006d0:	4b02      	ldr	r3, [pc, #8]	; (4006dc <pmc_osc_is_ready_mainck+0xc>)
  4006d2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006d4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4006d8:	4770      	bx	lr
  4006da:	bf00      	nop
  4006dc:	400e0400 	.word	0x400e0400

004006e0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4006e0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4006e4:	4b01      	ldr	r3, [pc, #4]	; (4006ec <pmc_disable_pllack+0xc>)
  4006e6:	629a      	str	r2, [r3, #40]	; 0x28
  4006e8:	4770      	bx	lr
  4006ea:	bf00      	nop
  4006ec:	400e0400 	.word	0x400e0400

004006f0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4006f0:	4b02      	ldr	r3, [pc, #8]	; (4006fc <pmc_is_locked_pllack+0xc>)
  4006f2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006f4:	f000 0002 	and.w	r0, r0, #2
  4006f8:	4770      	bx	lr
  4006fa:	bf00      	nop
  4006fc:	400e0400 	.word	0x400e0400

00400700 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400700:	2822      	cmp	r0, #34	; 0x22
  400702:	d81e      	bhi.n	400742 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400704:	281f      	cmp	r0, #31
  400706:	d80c      	bhi.n	400722 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400708:	4b11      	ldr	r3, [pc, #68]	; (400750 <pmc_enable_periph_clk+0x50>)
  40070a:	699a      	ldr	r2, [r3, #24]
  40070c:	2301      	movs	r3, #1
  40070e:	4083      	lsls	r3, r0
  400710:	401a      	ands	r2, r3
  400712:	4293      	cmp	r3, r2
  400714:	d017      	beq.n	400746 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400716:	2301      	movs	r3, #1
  400718:	4083      	lsls	r3, r0
  40071a:	4a0d      	ldr	r2, [pc, #52]	; (400750 <pmc_enable_periph_clk+0x50>)
  40071c:	6113      	str	r3, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40071e:	2000      	movs	r0, #0
  400720:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400722:	4b0b      	ldr	r3, [pc, #44]	; (400750 <pmc_enable_periph_clk+0x50>)
  400724:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  400728:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40072a:	2301      	movs	r3, #1
  40072c:	4083      	lsls	r3, r0
  40072e:	401a      	ands	r2, r3
  400730:	4293      	cmp	r3, r2
  400732:	d00a      	beq.n	40074a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400734:	2301      	movs	r3, #1
  400736:	4083      	lsls	r3, r0
  400738:	4a05      	ldr	r2, [pc, #20]	; (400750 <pmc_enable_periph_clk+0x50>)
  40073a:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
  40073e:	2000      	movs	r0, #0
  400740:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  400742:	2001      	movs	r0, #1
  400744:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400746:	2000      	movs	r0, #0
  400748:	4770      	bx	lr
  40074a:	2000      	movs	r0, #0
}
  40074c:	4770      	bx	lr
  40074e:	bf00      	nop
  400750:	400e0400 	.word	0x400e0400

00400754 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400754:	b410      	push	{r4}
  400756:	0189      	lsls	r1, r1, #6
  400758:	1843      	adds	r3, r0, r1
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40075a:	2402      	movs	r4, #2
  40075c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  40075e:	f04f 31ff 	mov.w	r1, #4294967295
  400762:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400764:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400766:	605a      	str	r2, [r3, #4]
}
  400768:	f85d 4b04 	ldr.w	r4, [sp], #4
  40076c:	4770      	bx	lr
  40076e:	bf00      	nop

00400770 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400770:	0189      	lsls	r1, r1, #6
  400772:	2305      	movs	r3, #5
  400774:	5043      	str	r3, [r0, r1]
  400776:	4770      	bx	lr

00400778 <tc_read_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RA;
  400778:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40077c:	6948      	ldr	r0, [r1, #20]
}
  40077e:	4770      	bx	lr

00400780 <tc_read_rb>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RB;
  400780:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400784:	6988      	ldr	r0, [r1, #24]
}
  400786:	4770      	bx	lr

00400788 <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
  400788:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40078c:	614a      	str	r2, [r1, #20]
  40078e:	4770      	bx	lr

00400790 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400790:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400794:	61ca      	str	r2, [r1, #28]
  400796:	4770      	bx	lr

00400798 <tc_enable_interrupt>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
	tc_channel->TC_IER = ul_sources;
  400798:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40079c:	624a      	str	r2, [r1, #36]	; 0x24
  40079e:	4770      	bx	lr

004007a0 <tc_disable_interrupt>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
	tc_channel->TC_IDR = ul_sources;
  4007a0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007a4:	628a      	str	r2, [r1, #40]	; 0x28
  4007a6:	4770      	bx	lr

004007a8 <tc_get_status>:
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
	return tc_channel->TC_SR;
  4007a8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007ac:	6a08      	ldr	r0, [r1, #32]
}
  4007ae:	4770      	bx	lr

004007b0 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4007b0:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4007b2:	23ac      	movs	r3, #172	; 0xac
  4007b4:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4007b6:	680b      	ldr	r3, [r1, #0]
  4007b8:	684a      	ldr	r2, [r1, #4]
  4007ba:	fbb3 f3f2 	udiv	r3, r3, r2
  4007be:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4007c0:	1e5c      	subs	r4, r3, #1
  4007c2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4007c6:	4294      	cmp	r4, r2
  4007c8:	d80a      	bhi.n	4007e0 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  4007ca:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4007cc:	688b      	ldr	r3, [r1, #8]
  4007ce:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4007d0:	f240 2302 	movw	r3, #514	; 0x202
  4007d4:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4007d8:	2350      	movs	r3, #80	; 0x50
  4007da:	6003      	str	r3, [r0, #0]

	return 0;
  4007dc:	2000      	movs	r0, #0
  4007de:	e000      	b.n	4007e2 <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  4007e0:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  4007e2:	f85d 4b04 	ldr.w	r4, [sp], #4
  4007e6:	4770      	bx	lr

004007e8 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4007e8:	6943      	ldr	r3, [r0, #20]
  4007ea:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4007ee:	bf1a      	itte	ne
  4007f0:	61c1      	strne	r1, [r0, #28]
	return 0;
  4007f2:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  4007f4:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  4007f6:	4770      	bx	lr

004007f8 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4007f8:	6943      	ldr	r3, [r0, #20]
  4007fa:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4007fe:	bf1d      	ittte	ne
  400800:	6983      	ldrne	r3, [r0, #24]
  400802:	700b      	strbne	r3, [r1, #0]
	return 0;
  400804:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  400806:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  400808:	4770      	bx	lr
  40080a:	bf00      	nop

0040080c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  40080c:	6943      	ldr	r3, [r0, #20]
  40080e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400812:	bf1d      	ittte	ne
  400814:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400818:	61c1      	strne	r1, [r0, #28]
	return 0;
  40081a:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  40081c:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  40081e:	4770      	bx	lr

00400820 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400820:	6943      	ldr	r3, [r0, #20]
  400822:	f013 0f01 	tst.w	r3, #1
  400826:	d005      	beq.n	400834 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400828:	6983      	ldr	r3, [r0, #24]
  40082a:	f3c3 0308 	ubfx	r3, r3, #0, #9
  40082e:	600b      	str	r3, [r1, #0]

	return 0;
  400830:	2000      	movs	r0, #0
  400832:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  400834:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  400836:	4770      	bx	lr

00400838 <Dummy_Handler>:
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
	}
  400838:	e7fe      	b.n	400838 <Dummy_Handler>
  40083a:	bf00      	nop

0040083c <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  40083c:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  40083e:	4b20      	ldr	r3, [pc, #128]	; (4008c0 <Reset_Handler+0x84>)
  400840:	4a20      	ldr	r2, [pc, #128]	; (4008c4 <Reset_Handler+0x88>)
  400842:	429a      	cmp	r2, r3
  400844:	d913      	bls.n	40086e <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  400846:	4b20      	ldr	r3, [pc, #128]	; (4008c8 <Reset_Handler+0x8c>)
  400848:	4a1d      	ldr	r2, [pc, #116]	; (4008c0 <Reset_Handler+0x84>)
  40084a:	429a      	cmp	r2, r3
  40084c:	d21f      	bcs.n	40088e <Reset_Handler+0x52>
  40084e:	4611      	mov	r1, r2
  400850:	3204      	adds	r2, #4
  400852:	3303      	adds	r3, #3
  400854:	1a9b      	subs	r3, r3, r2
  400856:	f023 0303 	bic.w	r3, r3, #3
  40085a:	3304      	adds	r3, #4
  40085c:	4a19      	ldr	r2, [pc, #100]	; (4008c4 <Reset_Handler+0x88>)
  40085e:	4413      	add	r3, r2
			*pDest++ = *pSrc++;
  400860:	f852 0b04 	ldr.w	r0, [r2], #4
  400864:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  400868:	429a      	cmp	r2, r3
  40086a:	d1f9      	bne.n	400860 <Reset_Handler+0x24>
  40086c:	e00f      	b.n	40088e <Reset_Handler+0x52>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  40086e:	4b14      	ldr	r3, [pc, #80]	; (4008c0 <Reset_Handler+0x84>)
  400870:	4a14      	ldr	r2, [pc, #80]	; (4008c4 <Reset_Handler+0x88>)
  400872:	429a      	cmp	r2, r3
  400874:	d20b      	bcs.n	40088e <Reset_Handler+0x52>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  400876:	4b14      	ldr	r3, [pc, #80]	; (4008c8 <Reset_Handler+0x8c>)
  400878:	4a11      	ldr	r2, [pc, #68]	; (4008c0 <Reset_Handler+0x84>)
  40087a:	1a9a      	subs	r2, r3, r2
  40087c:	4813      	ldr	r0, [pc, #76]	; (4008cc <Reset_Handler+0x90>)
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  40087e:	1881      	adds	r1, r0, r2
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400880:	b12a      	cbz	r2, 40088e <Reset_Handler+0x52>
			*pDest-- = *pSrc--;
  400882:	f851 2904 	ldr.w	r2, [r1], #-4
  400886:	f843 2d04 	str.w	r2, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  40088a:	4281      	cmp	r1, r0
  40088c:	d1f9      	bne.n	400882 <Reset_Handler+0x46>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  40088e:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400890:	4b0f      	ldr	r3, [pc, #60]	; (4008d0 <Reset_Handler+0x94>)
  400892:	4a10      	ldr	r2, [pc, #64]	; (4008d4 <Reset_Handler+0x98>)
  400894:	429a      	cmp	r2, r3
  400896:	d20b      	bcs.n	4008b0 <Reset_Handler+0x74>
  400898:	1d13      	adds	r3, r2, #4
  40089a:	4a0f      	ldr	r2, [pc, #60]	; (4008d8 <Reset_Handler+0x9c>)
  40089c:	1ad2      	subs	r2, r2, r3
  40089e:	f022 0203 	bic.w	r2, r2, #3
  4008a2:	441a      	add	r2, r3
  4008a4:	3b04      	subs	r3, #4
		*pDest++ = 0;
  4008a6:	2100      	movs	r1, #0
  4008a8:	f843 1b04 	str.w	r1, [r3], #4
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4008ac:	4293      	cmp	r3, r2
  4008ae:	d1fb      	bne.n	4008a8 <Reset_Handler+0x6c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  4008b0:	4b0a      	ldr	r3, [pc, #40]	; (4008dc <Reset_Handler+0xa0>)
  4008b2:	4a0b      	ldr	r2, [pc, #44]	; (4008e0 <Reset_Handler+0xa4>)
  4008b4:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  4008b6:	4b0b      	ldr	r3, [pc, #44]	; (4008e4 <Reset_Handler+0xa8>)
  4008b8:	4798      	blx	r3

	/* Branch to main function */
	main();
  4008ba:	4b0b      	ldr	r3, [pc, #44]	; (4008e8 <Reset_Handler+0xac>)
  4008bc:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  4008be:	e7fe      	b.n	4008be <Reset_Handler+0x82>
  4008c0:	20000000 	.word	0x20000000
  4008c4:	00405b9c 	.word	0x00405b9c
  4008c8:	20000874 	.word	0x20000874
  4008cc:	00405b98 	.word	0x00405b98
  4008d0:	20000960 	.word	0x20000960
  4008d4:	20000874 	.word	0x20000874
  4008d8:	20000963 	.word	0x20000963
  4008dc:	e000ed00 	.word	0xe000ed00
  4008e0:	00400000 	.word	0x00400000
  4008e4:	00401015 	.word	0x00401015
  4008e8:	00400da5 	.word	0x00400da5

004008ec <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4008ec:	4b3d      	ldr	r3, [pc, #244]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  4008ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4008f0:	f003 0303 	and.w	r3, r3, #3
  4008f4:	2b03      	cmp	r3, #3
  4008f6:	d85d      	bhi.n	4009b4 <SystemCoreClockUpdate+0xc8>
  4008f8:	e8df f003 	tbb	[pc, r3]
  4008fc:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400900:	4b39      	ldr	r3, [pc, #228]	; (4009e8 <SystemCoreClockUpdate+0xfc>)
  400902:	695b      	ldr	r3, [r3, #20]
  400904:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400908:	bf14      	ite	ne
  40090a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40090e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400912:	4b36      	ldr	r3, [pc, #216]	; (4009ec <SystemCoreClockUpdate+0x100>)
  400914:	601a      	str	r2, [r3, #0]
  400916:	e04d      	b.n	4009b4 <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400918:	4b32      	ldr	r3, [pc, #200]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  40091a:	6a1b      	ldr	r3, [r3, #32]
  40091c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400920:	d003      	beq.n	40092a <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  400922:	4a33      	ldr	r2, [pc, #204]	; (4009f0 <SystemCoreClockUpdate+0x104>)
  400924:	4b31      	ldr	r3, [pc, #196]	; (4009ec <SystemCoreClockUpdate+0x100>)
  400926:	601a      	str	r2, [r3, #0]
  400928:	e044      	b.n	4009b4 <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40092a:	4a32      	ldr	r2, [pc, #200]	; (4009f4 <SystemCoreClockUpdate+0x108>)
  40092c:	4b2f      	ldr	r3, [pc, #188]	; (4009ec <SystemCoreClockUpdate+0x100>)
  40092e:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400930:	4b2c      	ldr	r3, [pc, #176]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  400932:	6a1b      	ldr	r3, [r3, #32]
  400934:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400938:	2b10      	cmp	r3, #16
  40093a:	d002      	beq.n	400942 <SystemCoreClockUpdate+0x56>
  40093c:	2b20      	cmp	r3, #32
  40093e:	d004      	beq.n	40094a <SystemCoreClockUpdate+0x5e>
  400940:	e038      	b.n	4009b4 <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400942:	4a2d      	ldr	r2, [pc, #180]	; (4009f8 <SystemCoreClockUpdate+0x10c>)
  400944:	4b29      	ldr	r3, [pc, #164]	; (4009ec <SystemCoreClockUpdate+0x100>)
  400946:	601a      	str	r2, [r3, #0]
			break;
  400948:	e034      	b.n	4009b4 <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40094a:	4a29      	ldr	r2, [pc, #164]	; (4009f0 <SystemCoreClockUpdate+0x104>)
  40094c:	4b27      	ldr	r3, [pc, #156]	; (4009ec <SystemCoreClockUpdate+0x100>)
  40094e:	601a      	str	r2, [r3, #0]
			break;
  400950:	e030      	b.n	4009b4 <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400952:	4b24      	ldr	r3, [pc, #144]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  400954:	6a1b      	ldr	r3, [r3, #32]
  400956:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40095a:	d003      	beq.n	400964 <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40095c:	4a24      	ldr	r2, [pc, #144]	; (4009f0 <SystemCoreClockUpdate+0x104>)
  40095e:	4b23      	ldr	r3, [pc, #140]	; (4009ec <SystemCoreClockUpdate+0x100>)
  400960:	601a      	str	r2, [r3, #0]
  400962:	e012      	b.n	40098a <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400964:	4a23      	ldr	r2, [pc, #140]	; (4009f4 <SystemCoreClockUpdate+0x108>)
  400966:	4b21      	ldr	r3, [pc, #132]	; (4009ec <SystemCoreClockUpdate+0x100>)
  400968:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40096a:	4b1e      	ldr	r3, [pc, #120]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  40096c:	6a1b      	ldr	r3, [r3, #32]
  40096e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400972:	2b10      	cmp	r3, #16
  400974:	d002      	beq.n	40097c <SystemCoreClockUpdate+0x90>
  400976:	2b20      	cmp	r3, #32
  400978:	d004      	beq.n	400984 <SystemCoreClockUpdate+0x98>
  40097a:	e006      	b.n	40098a <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40097c:	4a1e      	ldr	r2, [pc, #120]	; (4009f8 <SystemCoreClockUpdate+0x10c>)
  40097e:	4b1b      	ldr	r3, [pc, #108]	; (4009ec <SystemCoreClockUpdate+0x100>)
  400980:	601a      	str	r2, [r3, #0]
					break;
  400982:	e002      	b.n	40098a <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400984:	4a1a      	ldr	r2, [pc, #104]	; (4009f0 <SystemCoreClockUpdate+0x104>)
  400986:	4b19      	ldr	r3, [pc, #100]	; (4009ec <SystemCoreClockUpdate+0x100>)
  400988:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  40098a:	4b16      	ldr	r3, [pc, #88]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  40098c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40098e:	f003 0303 	and.w	r3, r3, #3
  400992:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  400994:	4a13      	ldr	r2, [pc, #76]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  400996:	bf07      	ittee	eq
  400998:	6a93      	ldreq	r3, [r2, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  40099a:	6a92      	ldreq	r2, [r2, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  40099c:	6ad3      	ldrne	r3, [r2, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  40099e:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4009a0:	4812      	ldr	r0, [pc, #72]	; (4009ec <SystemCoreClockUpdate+0x100>)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4009a2:	f3c3 410a 	ubfx	r1, r3, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4009a6:	6803      	ldr	r3, [r0, #0]
  4009a8:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
  4009ac:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4009ae:	fbb3 f3f2 	udiv	r3, r3, r2
  4009b2:	6003      	str	r3, [r0, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4009b4:	4b0b      	ldr	r3, [pc, #44]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  4009b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009b8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4009bc:	2b70      	cmp	r3, #112	; 0x70
  4009be:	d107      	bne.n	4009d0 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  4009c0:	4a0a      	ldr	r2, [pc, #40]	; (4009ec <SystemCoreClockUpdate+0x100>)
  4009c2:	6813      	ldr	r3, [r2, #0]
  4009c4:	490d      	ldr	r1, [pc, #52]	; (4009fc <SystemCoreClockUpdate+0x110>)
  4009c6:	fba1 1303 	umull	r1, r3, r1, r3
  4009ca:	085b      	lsrs	r3, r3, #1
  4009cc:	6013      	str	r3, [r2, #0]
  4009ce:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009d0:	4b04      	ldr	r3, [pc, #16]	; (4009e4 <SystemCoreClockUpdate+0xf8>)
  4009d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009d4:	4905      	ldr	r1, [pc, #20]	; (4009ec <SystemCoreClockUpdate+0x100>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009d6:	f3c2 1202 	ubfx	r2, r2, #4, #3
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009da:	680b      	ldr	r3, [r1, #0]
  4009dc:	40d3      	lsrs	r3, r2
  4009de:	600b      	str	r3, [r1, #0]
  4009e0:	4770      	bx	lr
  4009e2:	bf00      	nop
  4009e4:	400e0400 	.word	0x400e0400
  4009e8:	400e1410 	.word	0x400e1410
  4009ec:	20000000 	.word	0x20000000
  4009f0:	00b71b00 	.word	0x00b71b00
  4009f4:	003d0900 	.word	0x003d0900
  4009f8:	007a1200 	.word	0x007a1200
  4009fc:	aaaaaaab 	.word	0xaaaaaaab

00400a00 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400a00:	4b1a      	ldr	r3, [pc, #104]	; (400a6c <system_init_flash+0x6c>)
  400a02:	4298      	cmp	r0, r3
  400a04:	d807      	bhi.n	400a16 <system_init_flash+0x16>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400a06:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  400a0a:	4a19      	ldr	r2, [pc, #100]	; (400a70 <system_init_flash+0x70>)
  400a0c:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400a0e:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a12:	6013      	str	r3, [r2, #0]
  400a14:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400a16:	4b17      	ldr	r3, [pc, #92]	; (400a74 <system_init_flash+0x74>)
  400a18:	4298      	cmp	r0, r3
  400a1a:	d806      	bhi.n	400a2a <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400a1c:	4b16      	ldr	r3, [pc, #88]	; (400a78 <system_init_flash+0x78>)
  400a1e:	4a14      	ldr	r2, [pc, #80]	; (400a70 <system_init_flash+0x70>)
  400a20:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400a22:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a26:	6013      	str	r3, [r2, #0]
  400a28:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400a2a:	4b14      	ldr	r3, [pc, #80]	; (400a7c <system_init_flash+0x7c>)
  400a2c:	4298      	cmp	r0, r3
  400a2e:	d806      	bhi.n	400a3e <system_init_flash+0x3e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400a30:	4b13      	ldr	r3, [pc, #76]	; (400a80 <system_init_flash+0x80>)
  400a32:	4a0f      	ldr	r2, [pc, #60]	; (400a70 <system_init_flash+0x70>)
  400a34:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400a36:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a3a:	6013      	str	r3, [r2, #0]
  400a3c:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400a3e:	4b11      	ldr	r3, [pc, #68]	; (400a84 <system_init_flash+0x84>)
  400a40:	4298      	cmp	r0, r3
  400a42:	d806      	bhi.n	400a52 <system_init_flash+0x52>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a44:	4b10      	ldr	r3, [pc, #64]	; (400a88 <system_init_flash+0x88>)
  400a46:	4a0a      	ldr	r2, [pc, #40]	; (400a70 <system_init_flash+0x70>)
  400a48:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a4a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a4e:	6013      	str	r3, [r2, #0]
  400a50:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400a52:	4b0e      	ldr	r3, [pc, #56]	; (400a8c <system_init_flash+0x8c>)
  400a54:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400a56:	bf94      	ite	ls
  400a58:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a5c:	4b0c      	ldrhi	r3, [pc, #48]	; (400a90 <system_init_flash+0x90>)
  400a5e:	4a04      	ldr	r2, [pc, #16]	; (400a70 <system_init_flash+0x70>)
  400a60:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a62:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a66:	6013      	str	r3, [r2, #0]
  400a68:	4770      	bx	lr
  400a6a:	bf00      	nop
  400a6c:	01312cff 	.word	0x01312cff
  400a70:	400e0a00 	.word	0x400e0a00
  400a74:	026259ff 	.word	0x026259ff
  400a78:	04000100 	.word	0x04000100
  400a7c:	039386ff 	.word	0x039386ff
  400a80:	04000200 	.word	0x04000200
  400a84:	04c4b3ff 	.word	0x04c4b3ff
  400a88:	04000300 	.word	0x04000300
  400a8c:	05f5e0ff 	.word	0x05f5e0ff
  400a90:	04000500 	.word	0x04000500

00400a94 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a94:	4b09      	ldr	r3, [pc, #36]	; (400abc <_sbrk+0x28>)
  400a96:	681b      	ldr	r3, [r3, #0]
  400a98:	b913      	cbnz	r3, 400aa0 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400a9a:	4a09      	ldr	r2, [pc, #36]	; (400ac0 <_sbrk+0x2c>)
  400a9c:	4b07      	ldr	r3, [pc, #28]	; (400abc <_sbrk+0x28>)
  400a9e:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400aa0:	4b06      	ldr	r3, [pc, #24]	; (400abc <_sbrk+0x28>)
  400aa2:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400aa4:	181a      	adds	r2, r3, r0
  400aa6:	4907      	ldr	r1, [pc, #28]	; (400ac4 <_sbrk+0x30>)
  400aa8:	4291      	cmp	r1, r2
  400aaa:	db04      	blt.n	400ab6 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400aac:	4610      	mov	r0, r2
  400aae:	4a03      	ldr	r2, [pc, #12]	; (400abc <_sbrk+0x28>)
  400ab0:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400ab2:	4618      	mov	r0, r3
  400ab4:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400ab6:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400aba:	4770      	bx	lr
  400abc:	20000904 	.word	0x20000904
  400ac0:	20003960 	.word	0x20003960
  400ac4:	20027ffc 	.word	0x20027ffc

00400ac8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400ac8:	f04f 30ff 	mov.w	r0, #4294967295
  400acc:	4770      	bx	lr
  400ace:	bf00      	nop

00400ad0 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400ad0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400ad4:	604b      	str	r3, [r1, #4]

	return 0;
}
  400ad6:	2000      	movs	r0, #0
  400ad8:	4770      	bx	lr
  400ada:	bf00      	nop

00400adc <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400adc:	2001      	movs	r0, #1
  400ade:	4770      	bx	lr

00400ae0 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400ae0:	2000      	movs	r0, #0
  400ae2:	4770      	bx	lr

00400ae4 <display_menu>:

/**
 * \brief Display the user menu on the UART.
 */
static void display_menu(void)
{
  400ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint8_t i;
	puts("\n\rMenu :\n\r"
  400ae6:	480b      	ldr	r0, [pc, #44]	; (400b14 <display_menu+0x30>)
  400ae8:	4b0b      	ldr	r3, [pc, #44]	; (400b18 <display_menu+0x34>)
  400aea:	4798      	blx	r3
  400aec:	4d0b      	ldr	r5, [pc, #44]	; (400b1c <display_menu+0x38>)
  400aee:	2400      	movs	r4, #0
			"------\n\r"
			"  Output waveform property:\r");
	for (i = 0; i < gc_uc_nbconfig; i++) {
		printf("  %d: Set Frequency = %4u Hz, Duty Cycle = %2u%%\n\r", i,
  400af0:	4f0b      	ldr	r7, [pc, #44]	; (400b20 <display_menu+0x3c>)
  400af2:	4e0c      	ldr	r6, [pc, #48]	; (400b24 <display_menu+0x40>)
  400af4:	4638      	mov	r0, r7
  400af6:	4621      	mov	r1, r4
  400af8:	88aa      	ldrh	r2, [r5, #4]
  400afa:	88eb      	ldrh	r3, [r5, #6]
  400afc:	47b0      	blx	r6
  400afe:	3401      	adds	r4, #1
  400b00:	3508      	adds	r5, #8
{
	uint8_t i;
	puts("\n\rMenu :\n\r"
			"------\n\r"
			"  Output waveform property:\r");
	for (i = 0; i < gc_uc_nbconfig; i++) {
  400b02:	2c05      	cmp	r4, #5
  400b04:	d1f6      	bne.n	400af4 <display_menu+0x10>
		printf("  %d: Set Frequency = %4u Hz, Duty Cycle = %2u%%\n\r", i,
				(unsigned int)gc_waveconfig[i].us_frequency,
				(unsigned int)gc_waveconfig[i].us_dutycycle);
	}
	printf("  -------------------------------------------\n\r"
  400b06:	4808      	ldr	r0, [pc, #32]	; (400b28 <display_menu+0x44>)
  400b08:	2100      	movs	r1, #0
  400b0a:	2202      	movs	r2, #2
  400b0c:	4b05      	ldr	r3, [pc, #20]	; (400b24 <display_menu+0x40>)
  400b0e:	4798      	blx	r3
  400b10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400b12:	bf00      	nop
  400b14:	004055bc 	.word	0x004055bc
  400b18:	004011ad 	.word	0x004011ad
  400b1c:	00405594 	.word	0x00405594
  400b20:	004055ec 	.word	0x004055ec
  400b24:	00401065 	.word	0x00401065
  400b28:	00405620 	.word	0x00405620

00400b2c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
  400b2e:	b083      	sub	sp, #12
  400b30:	4605      	mov	r5, r0
  400b32:	460c      	mov	r4, r1
	uint32_t val = 0;
  400b34:	2300      	movs	r3, #0
  400b36:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400b38:	4b18      	ldr	r3, [pc, #96]	; (400b9c <usart_serial_getchar+0x70>)
  400b3a:	4298      	cmp	r0, r3
  400b3c:	d107      	bne.n	400b4e <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  400b3e:	461f      	mov	r7, r3
  400b40:	4e17      	ldr	r6, [pc, #92]	; (400ba0 <usart_serial_getchar+0x74>)
  400b42:	4638      	mov	r0, r7
  400b44:	4621      	mov	r1, r4
  400b46:	47b0      	blx	r6
  400b48:	2800      	cmp	r0, #0
  400b4a:	d1fa      	bne.n	400b42 <usart_serial_getchar+0x16>
  400b4c:	e017      	b.n	400b7e <usart_serial_getchar+0x52>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b4e:	4b15      	ldr	r3, [pc, #84]	; (400ba4 <usart_serial_getchar+0x78>)
  400b50:	4298      	cmp	r0, r3
  400b52:	d107      	bne.n	400b64 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  400b54:	461e      	mov	r6, r3
  400b56:	4d12      	ldr	r5, [pc, #72]	; (400ba0 <usart_serial_getchar+0x74>)
  400b58:	4630      	mov	r0, r6
  400b5a:	4621      	mov	r1, r4
  400b5c:	47a8      	blx	r5
  400b5e:	2800      	cmp	r0, #0
  400b60:	d1fa      	bne.n	400b58 <usart_serial_getchar+0x2c>
  400b62:	e018      	b.n	400b96 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400b64:	4b10      	ldr	r3, [pc, #64]	; (400ba8 <usart_serial_getchar+0x7c>)
  400b66:	4298      	cmp	r0, r3
  400b68:	d109      	bne.n	400b7e <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
  400b6a:	461e      	mov	r6, r3
  400b6c:	4d0f      	ldr	r5, [pc, #60]	; (400bac <usart_serial_getchar+0x80>)
  400b6e:	4630      	mov	r0, r6
  400b70:	a901      	add	r1, sp, #4
  400b72:	47a8      	blx	r5
  400b74:	2800      	cmp	r0, #0
  400b76:	d1fa      	bne.n	400b6e <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
  400b78:	9b01      	ldr	r3, [sp, #4]
  400b7a:	7023      	strb	r3, [r4, #0]
  400b7c:	e00b      	b.n	400b96 <usart_serial_getchar+0x6a>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400b7e:	4b0c      	ldr	r3, [pc, #48]	; (400bb0 <usart_serial_getchar+0x84>)
  400b80:	429d      	cmp	r5, r3
  400b82:	d108      	bne.n	400b96 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
  400b84:	461e      	mov	r6, r3
  400b86:	4d09      	ldr	r5, [pc, #36]	; (400bac <usart_serial_getchar+0x80>)
  400b88:	4630      	mov	r0, r6
  400b8a:	a901      	add	r1, sp, #4
  400b8c:	47a8      	blx	r5
  400b8e:	2800      	cmp	r0, #0
  400b90:	d1fa      	bne.n	400b88 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
  400b92:	9b01      	ldr	r3, [sp, #4]
  400b94:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400b96:	b003      	add	sp, #12
  400b98:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400b9a:	bf00      	nop
  400b9c:	400e0600 	.word	0x400e0600
  400ba0:	004007f9 	.word	0x004007f9
  400ba4:	400e0800 	.word	0x400e0800
  400ba8:	40024000 	.word	0x40024000
  400bac:	00400821 	.word	0x00400821
  400bb0:	40028000 	.word	0x40028000

00400bb4 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  400bb4:	b570      	push	{r4, r5, r6, lr}
  400bb6:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400bb8:	4b18      	ldr	r3, [pc, #96]	; (400c1c <usart_serial_putchar+0x68>)
  400bba:	4298      	cmp	r0, r3
  400bbc:	d108      	bne.n	400bd0 <usart_serial_putchar+0x1c>
		while (uart_write((Uart*)p_usart, c)!=0);
  400bbe:	461e      	mov	r6, r3
  400bc0:	4d17      	ldr	r5, [pc, #92]	; (400c20 <usart_serial_putchar+0x6c>)
  400bc2:	4630      	mov	r0, r6
  400bc4:	4621      	mov	r1, r4
  400bc6:	47a8      	blx	r5
  400bc8:	2800      	cmp	r0, #0
  400bca:	d1fa      	bne.n	400bc2 <usart_serial_putchar+0xe>
		return 1;
  400bcc:	2001      	movs	r0, #1
  400bce:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400bd0:	4b14      	ldr	r3, [pc, #80]	; (400c24 <usart_serial_putchar+0x70>)
  400bd2:	4298      	cmp	r0, r3
  400bd4:	d108      	bne.n	400be8 <usart_serial_putchar+0x34>
		while (uart_write((Uart*)p_usart, c)!=0);
  400bd6:	461e      	mov	r6, r3
  400bd8:	4d11      	ldr	r5, [pc, #68]	; (400c20 <usart_serial_putchar+0x6c>)
  400bda:	4630      	mov	r0, r6
  400bdc:	4621      	mov	r1, r4
  400bde:	47a8      	blx	r5
  400be0:	2800      	cmp	r0, #0
  400be2:	d1fa      	bne.n	400bda <usart_serial_putchar+0x26>
		return 1;
  400be4:	2001      	movs	r0, #1
  400be6:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400be8:	4b0f      	ldr	r3, [pc, #60]	; (400c28 <usart_serial_putchar+0x74>)
  400bea:	4298      	cmp	r0, r3
  400bec:	d108      	bne.n	400c00 <usart_serial_putchar+0x4c>
		while (usart_write(p_usart, c)!=0);
  400bee:	461e      	mov	r6, r3
  400bf0:	4d0e      	ldr	r5, [pc, #56]	; (400c2c <usart_serial_putchar+0x78>)
  400bf2:	4630      	mov	r0, r6
  400bf4:	4621      	mov	r1, r4
  400bf6:	47a8      	blx	r5
  400bf8:	2800      	cmp	r0, #0
  400bfa:	d1fa      	bne.n	400bf2 <usart_serial_putchar+0x3e>
		return 1;
  400bfc:	2001      	movs	r0, #1
  400bfe:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400c00:	4b0b      	ldr	r3, [pc, #44]	; (400c30 <usart_serial_putchar+0x7c>)
  400c02:	4298      	cmp	r0, r3
  400c04:	d108      	bne.n	400c18 <usart_serial_putchar+0x64>
		while (usart_write(p_usart, c)!=0);
  400c06:	461e      	mov	r6, r3
  400c08:	4d08      	ldr	r5, [pc, #32]	; (400c2c <usart_serial_putchar+0x78>)
  400c0a:	4630      	mov	r0, r6
  400c0c:	4621      	mov	r1, r4
  400c0e:	47a8      	blx	r5
  400c10:	2800      	cmp	r0, #0
  400c12:	d1fa      	bne.n	400c0a <usart_serial_putchar+0x56>
		return 1;
  400c14:	2001      	movs	r0, #1
  400c16:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  400c18:	2000      	movs	r0, #0
}
  400c1a:	bd70      	pop	{r4, r5, r6, pc}
  400c1c:	400e0600 	.word	0x400e0600
  400c20:	004007e9 	.word	0x004007e9
  400c24:	400e0800 	.word	0x400e0800
  400c28:	40024000 	.word	0x40024000
  400c2c:	0040080d 	.word	0x0040080d
  400c30:	40028000 	.word	0x40028000

00400c34 <tc_waveform_initialize>:

/**
 * \brief Configure TC TC_CHANNEL_WAVEFORM in waveform operating mode.
 */
static void tc_waveform_initialize(void)
{
  400c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400c38:	2018      	movs	r0, #24
  400c3a:	4b32      	ldr	r3, [pc, #200]	; (400d04 <tc_waveform_initialize+0xd0>)
  400c3c:	4798      	blx	r3
	pmc_switch_pck_to_mck(PMC_PCK_3, PMC_PCK_PRES_CLK_1);
	pmc_enable_pck(PMC_PCK_3);
#endif

	/* Init TC to waveform mode. */
	tc_init(TC, TC_CHANNEL_WAVEFORM,
  400c3e:	4e32      	ldr	r6, [pc, #200]	; (400d08 <tc_waveform_initialize+0xd4>)
			/* Waveform Clock Selection */
			gc_waveconfig[gs_uc_configuration].ul_intclock
  400c40:	4c32      	ldr	r4, [pc, #200]	; (400d0c <tc_waveform_initialize+0xd8>)
  400c42:	4f33      	ldr	r7, [pc, #204]	; (400d10 <tc_waveform_initialize+0xdc>)
  400c44:	783b      	ldrb	r3, [r7, #0]
	pmc_switch_pck_to_mck(PMC_PCK_3, PMC_PCK_PRES_CLK_1);
	pmc_enable_pck(PMC_PCK_3);
#endif

	/* Init TC to waveform mode. */
	tc_init(TC, TC_CHANNEL_WAVEFORM,
  400c46:	f854 2033 	ldr.w	r2, [r4, r3, lsl #3]
  400c4a:	4630      	mov	r0, r6
  400c4c:	2101      	movs	r1, #1
  400c4e:	f442 221c 	orr.w	r2, r2, #638976	; 0x9c000
  400c52:	4b30      	ldr	r3, [pc, #192]	; (400d14 <tc_waveform_initialize+0xe0>)
  400c54:	4798      	blx	r3
			| TC_CMR_CPCTRG /* UP mode with automatic trigger on RC Compare (sets bit 14 of TC Channel Mode Register -> WAVESEL = 10 without Trigger) */
	);

	/* Configure waveform frequency and duty cycle. */
	rc = (sysclk_get_peripheral_bus_hz(TC) /
			divisors[gc_waveconfig[gs_uc_configuration].ul_intclock]) /
  400c56:	783b      	ldrb	r3, [r7, #0]
  400c58:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 400d4c <tc_waveform_initialize+0x118>
  400c5c:	f854 2033 	ldr.w	r2, [r4, r3, lsl #3]
			| TC_CMR_ACPC_CLEAR /* RC Compare Effect: clear */
			| TC_CMR_CPCTRG /* UP mode with automatic trigger on RC Compare (sets bit 14 of TC Channel Mode Register -> WAVESEL = 10 without Trigger) */
	);

	/* Configure waveform frequency and duty cycle. */
	rc = (sysclk_get_peripheral_bus_hz(TC) /
  400c60:	f8df a0ec 	ldr.w	sl, [pc, #236]	; 400d50 <tc_waveform_initialize+0x11c>
  400c64:	f859 2022 	ldr.w	r2, [r9, r2, lsl #2]
  400c68:	fbba f2f2 	udiv	r2, sl, r2
			divisors[gc_waveconfig[gs_uc_configuration].ul_intclock]) /
			gc_waveconfig[gs_uc_configuration].us_frequency;
  400c6c:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
			| TC_CMR_CPCTRG /* UP mode with automatic trigger on RC Compare (sets bit 14 of TC Channel Mode Register -> WAVESEL = 10 without Trigger) */
	);

	/* Configure waveform frequency and duty cycle. */
	rc = (sysclk_get_peripheral_bus_hz(TC) /
			divisors[gc_waveconfig[gs_uc_configuration].ul_intclock]) /
  400c70:	f8b3 8004 	ldrh.w	r8, [r3, #4]
			| TC_CMR_ACPC_CLEAR /* RC Compare Effect: clear */
			| TC_CMR_CPCTRG /* UP mode with automatic trigger on RC Compare (sets bit 14 of TC Channel Mode Register -> WAVESEL = 10 without Trigger) */
	);

	/* Configure waveform frequency and duty cycle. */
	rc = (sysclk_get_peripheral_bus_hz(TC) /
  400c74:	fbb2 f8f8 	udiv	r8, r2, r8
			divisors[gc_waveconfig[gs_uc_configuration].ul_intclock]) /
			gc_waveconfig[gs_uc_configuration].us_frequency;
				
	tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
  400c78:	4630      	mov	r0, r6
  400c7a:	2101      	movs	r1, #1
  400c7c:	4642      	mov	r2, r8
  400c7e:	4b26      	ldr	r3, [pc, #152]	; (400d18 <tc_waveform_initialize+0xe4>)
  400c80:	4798      	blx	r3
	ra = (100 - gc_waveconfig[gs_uc_configuration].us_dutycycle) * rc / 100;
  400c82:	783b      	ldrb	r3, [r7, #0]
  400c84:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
  400c88:	88dd      	ldrh	r5, [r3, #6]
  400c8a:	f1c5 0564 	rsb	r5, r5, #100	; 0x64
  400c8e:	fb08 f505 	mul.w	r5, r8, r5
  400c92:	4b22      	ldr	r3, [pc, #136]	; (400d1c <tc_waveform_initialize+0xe8>)
  400c94:	fba3 3505 	umull	r3, r5, r3, r5
  400c98:	096d      	lsrs	r5, r5, #5
	tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
  400c9a:	4630      	mov	r0, r6
  400c9c:	2101      	movs	r1, #1
  400c9e:	462a      	mov	r2, r5
  400ca0:	4b1f      	ldr	r3, [pc, #124]	; (400d20 <tc_waveform_initialize+0xec>)
  400ca2:	4798      	blx	r3

	/* Enable TC TC_CHANNEL_WAVEFORM. */
	tc_start(TC, TC_CHANNEL_WAVEFORM);
  400ca4:	4630      	mov	r0, r6
  400ca6:	2101      	movs	r1, #1
  400ca8:	4b1e      	ldr	r3, [pc, #120]	; (400d24 <tc_waveform_initialize+0xf0>)
  400caa:	4798      	blx	r3
	printf("\r\nStart waveform: Frequency = %d Hz,Duty Cycle = %2d%%\n\r",
			gc_waveconfig[gs_uc_configuration].us_frequency,
  400cac:	783b      	ldrb	r3, [r7, #0]
  400cae:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
	ra = (100 - gc_waveconfig[gs_uc_configuration].us_dutycycle) * rc / 100;
	tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);

	/* Enable TC TC_CHANNEL_WAVEFORM. */
	tc_start(TC, TC_CHANNEL_WAVEFORM);
	printf("\r\nStart waveform: Frequency = %d Hz,Duty Cycle = %2d%%\n\r",
  400cb2:	481d      	ldr	r0, [pc, #116]	; (400d28 <tc_waveform_initialize+0xf4>)
  400cb4:	8899      	ldrh	r1, [r3, #4]
  400cb6:	88da      	ldrh	r2, [r3, #6]
  400cb8:	4e1c      	ldr	r6, [pc, #112]	; (400d2c <tc_waveform_initialize+0xf8>)
  400cba:	47b0      	blx	r6
			gc_waveconfig[gs_uc_configuration].us_frequency,
			gc_waveconfig[gs_uc_configuration].us_dutycycle);
			
	printf("sysclk_get_peripheral_bus_hz():%u \r\n",sysclk_get_peripheral_bus_hz(TC) );
  400cbc:	481c      	ldr	r0, [pc, #112]	; (400d30 <tc_waveform_initialize+0xfc>)
  400cbe:	4651      	mov	r1, sl
  400cc0:	47b0      	blx	r6
	printf("Clock Selection -> .ul_intclock: %u \r\n", gc_waveconfig[gs_uc_configuration].ul_intclock);
  400cc2:	783b      	ldrb	r3, [r7, #0]
  400cc4:	481b      	ldr	r0, [pc, #108]	; (400d34 <tc_waveform_initialize+0x100>)
  400cc6:	f854 1033 	ldr.w	r1, [r4, r3, lsl #3]
  400cca:	47b0      	blx	r6
	printf("Clock Selection -> divisors[]:%u \r\n", divisors[gc_waveconfig[gs_uc_configuration].ul_intclock] );
  400ccc:	783b      	ldrb	r3, [r7, #0]
  400cce:	f854 3033 	ldr.w	r3, [r4, r3, lsl #3]
  400cd2:	4819      	ldr	r0, [pc, #100]	; (400d38 <tc_waveform_initialize+0x104>)
  400cd4:	f859 1023 	ldr.w	r1, [r9, r3, lsl #2]
  400cd8:	47b0      	blx	r6
	printf("Target Frequency -> .us_frequency:%u \r\n", gc_waveconfig[gs_uc_configuration].us_frequency );
  400cda:	783b      	ldrb	r3, [r7, #0]
  400cdc:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
  400ce0:	4816      	ldr	r0, [pc, #88]	; (400d3c <tc_waveform_initialize+0x108>)
  400ce2:	8899      	ldrh	r1, [r3, #4]
  400ce4:	47b0      	blx	r6
	printf("Target Duty Cycle -> .us_dutycycle:%u \r\n", gc_waveconfig[gs_uc_configuration].us_dutycycle );
  400ce6:	783b      	ldrb	r3, [r7, #0]
  400ce8:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
  400cec:	4814      	ldr	r0, [pc, #80]	; (400d40 <tc_waveform_initialize+0x10c>)
  400cee:	88e1      	ldrh	r1, [r4, #6]
  400cf0:	47b0      	blx	r6
	printf("ra:%u \r\n", ra );
  400cf2:	4814      	ldr	r0, [pc, #80]	; (400d44 <tc_waveform_initialize+0x110>)
  400cf4:	4629      	mov	r1, r5
  400cf6:	47b0      	blx	r6
	printf("rc:%u \r\n", rc );			
  400cf8:	4813      	ldr	r0, [pc, #76]	; (400d48 <tc_waveform_initialize+0x114>)
  400cfa:	4641      	mov	r1, r8
  400cfc:	47b0      	blx	r6
  400cfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400d02:	bf00      	nop
  400d04:	00400701 	.word	0x00400701
  400d08:	40010000 	.word	0x40010000
  400d0c:	00405594 	.word	0x00405594
  400d10:	20000914 	.word	0x20000914
  400d14:	00400755 	.word	0x00400755
  400d18:	00400791 	.word	0x00400791
  400d1c:	51eb851f 	.word	0x51eb851f
  400d20:	00400789 	.word	0x00400789
  400d24:	00400771 	.word	0x00400771
  400d28:	004056d0 	.word	0x004056d0
  400d2c:	00401065 	.word	0x00401065
  400d30:	0040570c 	.word	0x0040570c
  400d34:	00405734 	.word	0x00405734
  400d38:	0040575c 	.word	0x0040575c
  400d3c:	00405780 	.word	0x00405780
  400d40:	004057a8 	.word	0x004057a8
  400d44:	004057d4 	.word	0x004057d4
  400d48:	004057e0 	.word	0x004057e0
  400d4c:	004059d8 	.word	0x004059d8
  400d50:	07270e00 	.word	0x07270e00

00400d54 <TC2_Handler>:
/**
 * \brief Interrupt handler for the TC TC_CHANNEL_CAPTURE
 */
//! [tc_capture_irq_handler_start]
void TC_Handler(void)
{
  400d54:	b510      	push	{r4, lr}
	//! [tc_capture_irq_handler_start]
	//! [tc_capture_irq_handler_status]
	if ((tc_get_status(TC, TC_CHANNEL_CAPTURE) & TC_SR_LDRBS) == TC_SR_LDRBS) {
  400d56:	480c      	ldr	r0, [pc, #48]	; (400d88 <TC2_Handler+0x34>)
  400d58:	2102      	movs	r1, #2
  400d5a:	4b0c      	ldr	r3, [pc, #48]	; (400d8c <TC2_Handler+0x38>)
  400d5c:	4798      	blx	r3
  400d5e:	f010 0f40 	tst.w	r0, #64	; 0x40
  400d62:	d010      	beq.n	400d86 <TC2_Handler+0x32>
		//! [tc_capture_irq_handler_status]
		gs_ul_captured_pulses++;
  400d64:	4a0a      	ldr	r2, [pc, #40]	; (400d90 <TC2_Handler+0x3c>)
  400d66:	6813      	ldr	r3, [r2, #0]
  400d68:	3301      	adds	r3, #1
  400d6a:	6013      	str	r3, [r2, #0]
		//! [tc_capture_irq_handler_read_ra]
		gs_ul_captured_ra = tc_read_ra(TC, TC_CHANNEL_CAPTURE);
  400d6c:	4c06      	ldr	r4, [pc, #24]	; (400d88 <TC2_Handler+0x34>)
  400d6e:	4620      	mov	r0, r4
  400d70:	2102      	movs	r1, #2
  400d72:	4b08      	ldr	r3, [pc, #32]	; (400d94 <TC2_Handler+0x40>)
  400d74:	4798      	blx	r3
  400d76:	4b08      	ldr	r3, [pc, #32]	; (400d98 <TC2_Handler+0x44>)
  400d78:	6018      	str	r0, [r3, #0]
		//! [tc_capture_irq_handler_read_ra]
		//! [tc_capture_irq_handler_read_rb]
		gs_ul_captured_rb = tc_read_rb(TC, TC_CHANNEL_CAPTURE);
  400d7a:	4620      	mov	r0, r4
  400d7c:	2102      	movs	r1, #2
  400d7e:	4b07      	ldr	r3, [pc, #28]	; (400d9c <TC2_Handler+0x48>)
  400d80:	4798      	blx	r3
  400d82:	4b07      	ldr	r3, [pc, #28]	; (400da0 <TC2_Handler+0x4c>)
  400d84:	6018      	str	r0, [r3, #0]
  400d86:	bd10      	pop	{r4, pc}
  400d88:	40010000 	.word	0x40010000
  400d8c:	004007a9 	.word	0x004007a9
  400d90:	20000910 	.word	0x20000910
  400d94:	00400779 	.word	0x00400779
  400d98:	20000908 	.word	0x20000908
  400d9c:	00400781 	.word	0x00400781
  400da0:	2000090c 	.word	0x2000090c

00400da4 <main>:
 * \brief Application entry point for tc_capture_waveform example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  400da4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400da8:	b086      	sub	sp, #24
	uint8_t key;
	uint16_t frequence, dutycycle;

	/* Initialize the SAM system */
	sysclk_init();
  400daa:	4b6c      	ldr	r3, [pc, #432]	; (400f5c <main+0x1b8>)
  400dac:	4798      	blx	r3
	board_init();
  400dae:	4b6c      	ldr	r3, [pc, #432]	; (400f60 <main+0x1bc>)
  400db0:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400db2:	4c6c      	ldr	r4, [pc, #432]	; (400f64 <main+0x1c0>)
  400db4:	4b6c      	ldr	r3, [pc, #432]	; (400f68 <main+0x1c4>)
  400db6:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400db8:	4a6c      	ldr	r2, [pc, #432]	; (400f6c <main+0x1c8>)
  400dba:	4b6d      	ldr	r3, [pc, #436]	; (400f70 <main+0x1cc>)
  400dbc:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400dbe:	4a6d      	ldr	r2, [pc, #436]	; (400f74 <main+0x1d0>)
  400dc0:	4b6d      	ldr	r3, [pc, #436]	; (400f78 <main+0x1d4>)
  400dc2:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400dc4:	4b6d      	ldr	r3, [pc, #436]	; (400f7c <main+0x1d8>)
  400dc6:	9302      	str	r3, [sp, #8]
	uart_settings.ul_baudrate = opt->baudrate;
  400dc8:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400dcc:	9303      	str	r3, [sp, #12]
	uart_settings.ul_mode = opt->paritytype;
  400dce:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400dd2:	9304      	str	r3, [sp, #16]
  400dd4:	2009      	movs	r0, #9
  400dd6:	4d6a      	ldr	r5, [pc, #424]	; (400f80 <main+0x1dc>)
  400dd8:	47a8      	blx	r5
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART1);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  400dda:	4620      	mov	r0, r4
  400ddc:	a902      	add	r1, sp, #8
  400dde:	4b69      	ldr	r3, [pc, #420]	; (400f84 <main+0x1e0>)
  400de0:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400de2:	4e69      	ldr	r6, [pc, #420]	; (400f88 <main+0x1e4>)
  400de4:	6833      	ldr	r3, [r6, #0]
  400de6:	6898      	ldr	r0, [r3, #8]
  400de8:	2100      	movs	r1, #0
  400dea:	4c68      	ldr	r4, [pc, #416]	; (400f8c <main+0x1e8>)
  400dec:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400dee:	6833      	ldr	r3, [r6, #0]
  400df0:	6858      	ldr	r0, [r3, #4]
  400df2:	2100      	movs	r1, #0
  400df4:	47a0      	blx	r4

	/* Initialize the console uart */
	configure_console();

	/* Output example information */
	printf("-- TC capture waveform Example --\r\n");
  400df6:	4866      	ldr	r0, [pc, #408]	; (400f90 <main+0x1ec>)
  400df8:	4c66      	ldr	r4, [pc, #408]	; (400f94 <main+0x1f0>)
  400dfa:	47a0      	blx	r4
	printf("-- %s\n\r", BOARD_NAME);
  400dfc:	4866      	ldr	r0, [pc, #408]	; (400f98 <main+0x1f4>)
  400dfe:	4967      	ldr	r1, [pc, #412]	; (400f9c <main+0x1f8>)
  400e00:	47a0      	blx	r4
	printf("-- Compiled: %s %s --\n\r", __DATE__, __TIME__);
  400e02:	4867      	ldr	r0, [pc, #412]	; (400fa0 <main+0x1fc>)
  400e04:	4967      	ldr	r1, [pc, #412]	; (400fa4 <main+0x200>)
  400e06:	4a68      	ldr	r2, [pc, #416]	; (400fa8 <main+0x204>)
  400e08:	47a0      	blx	r4
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400e0a:	4b68      	ldr	r3, [pc, #416]	; (400fac <main+0x208>)
  400e0c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400e10:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400e12:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400e16:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400e18:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400e1a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	} else {
		base->PIO_ABSR &= ~mask;
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
  400e1e:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400e20:	4311      	orrs	r1, r2
  400e22:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400e24:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400e26:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
  400e2a:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400e2c:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400e2e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400e32:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400e34:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400e38:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400e3a:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400e3c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	} else {
		base->PIO_ABSR &= ~mask;
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
  400e40:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400e42:	4311      	orrs	r1, r2
  400e44:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400e46:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400e48:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
  400e4c:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400e4e:	605a      	str	r2, [r3, #4]
	/** Disable I/O to enable peripheral mode) */
	ioport_disable_pin(PIN_TC_CAPTURE);
	//! [tc_capture_gpio]

	/* Configure TC TC_CHANNEL_WAVEFORM as waveform operating mode */
	printf("Configure TC%d channel %d as waveform operating mode \n\r",
  400e50:	4857      	ldr	r0, [pc, #348]	; (400fb0 <main+0x20c>)
  400e52:	2100      	movs	r1, #0
  400e54:	2201      	movs	r2, #1
  400e56:	47a0      	blx	r4
			TC_PERIPHERAL, TC_CHANNEL_WAVEFORM);
	//! [tc_waveform_init_call]
	tc_waveform_initialize();
  400e58:	4b56      	ldr	r3, [pc, #344]	; (400fb4 <main+0x210>)
  400e5a:	4798      	blx	r3
	//! [tc_waveform_init_call]
        
	/* Configure TC TC_CHANNEL_CAPTURE as capture operating mode */
	printf("Configure TC%d channel %d as capture operating mode \n\r",
  400e5c:	4856      	ldr	r0, [pc, #344]	; (400fb8 <main+0x214>)
  400e5e:	2100      	movs	r1, #0
  400e60:	2202      	movs	r2, #2
  400e62:	47a0      	blx	r4
  400e64:	2019      	movs	r0, #25
  400e66:	47a8      	blx	r5
	pmc_switch_pck_to_mck(PMC_PCK_3, PMC_PCK_PRES_CLK_1);
	pmc_enable_pck(PMC_PCK_3);
#endif

	/* Init TC to capture mode. */
	tc_init(TC, TC_CHANNEL_CAPTURE,
  400e68:	4854      	ldr	r0, [pc, #336]	; (400fbc <main+0x218>)
  400e6a:	2102      	movs	r1, #2
  400e6c:	4a54      	ldr	r2, [pc, #336]	; (400fc0 <main+0x21c>)
  400e6e:	4b55      	ldr	r3, [pc, #340]	; (400fc4 <main+0x220>)
  400e70:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400e72:	4b55      	ldr	r3, [pc, #340]	; (400fc8 <main+0x224>)
  400e74:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400e78:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400e7c:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400e80:	2100      	movs	r1, #0
  400e82:	f883 1319 	strb.w	r1, [r3, #793]	; 0x319
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400e86:	601a      	str	r2, [r3, #0]
	NVIC_SetPriority(TC_IRQn, 0);
	NVIC_EnableIRQ(TC_IRQn);
	//! [tc_capture_init_irq]

	/* Display menu */
	display_menu();
  400e88:	4b50      	ldr	r3, [pc, #320]	; (400fcc <main+0x228>)
  400e8a:	4798      	blx	r3

	while (1) {
		scanf("%c", (char *)&key);
  400e8c:	4d50      	ldr	r5, [pc, #320]	; (400fd0 <main+0x22c>)
  400e8e:	4c51      	ldr	r4, [pc, #324]	; (400fd4 <main+0x230>)

		switch (key) {
		case 'h':
			display_menu();
  400e90:	4f4e      	ldr	r7, [pc, #312]	; (400fcc <main+0x228>)

	/* Display menu */
	display_menu();

	while (1) {
		scanf("%c", (char *)&key);
  400e92:	4628      	mov	r0, r5
  400e94:	f10d 0117 	add.w	r1, sp, #23
  400e98:	47a0      	blx	r4

		switch (key) {
  400e9a:	f89d 3017 	ldrb.w	r3, [sp, #23]
  400e9e:	2b68      	cmp	r3, #104	; 0x68
  400ea0:	d004      	beq.n	400eac <main+0x108>
  400ea2:	2b73      	cmp	r3, #115	; 0x73
  400ea4:	d004      	beq.n	400eb0 <main+0x10c>
  400ea6:	2b63      	cmp	r3, #99	; 0x63
  400ea8:	d148      	bne.n	400f3c <main+0x198>
  400eaa:	e039      	b.n	400f20 <main+0x17c>
		case 'h':
			display_menu();
  400eac:	47b8      	blx	r7
			break;
  400eae:	e7f0      	b.n	400e92 <main+0xee>

		case 's':
			if (gs_ul_captured_pulses) {
  400eb0:	4b49      	ldr	r3, [pc, #292]	; (400fd8 <main+0x234>)
  400eb2:	681b      	ldr	r3, [r3, #0]
  400eb4:	b36b      	cbz	r3, 400f12 <main+0x16e>
				tc_disable_interrupt(TC, TC_CHANNEL_CAPTURE, TC_IDR_LDRBS);
  400eb6:	4841      	ldr	r0, [pc, #260]	; (400fbc <main+0x218>)
  400eb8:	2102      	movs	r1, #2
  400eba:	2240      	movs	r2, #64	; 0x40
  400ebc:	4b47      	ldr	r3, [pc, #284]	; (400fdc <main+0x238>)
  400ebe:	4798      	blx	r3
				printf("Captured %u pulses from TC%d channel %d, RA = %u, RB = %u \n\r",
  400ec0:	f8df 9114 	ldr.w	r9, [pc, #276]	; 400fd8 <main+0x234>
  400ec4:	f8df 8148 	ldr.w	r8, [pc, #328]	; 401010 <main+0x26c>
  400ec8:	f8d8 3000 	ldr.w	r3, [r8]
  400ecc:	9300      	str	r3, [sp, #0]
  400ece:	4e44      	ldr	r6, [pc, #272]	; (400fe0 <main+0x23c>)
  400ed0:	6833      	ldr	r3, [r6, #0]
  400ed2:	9301      	str	r3, [sp, #4]
  400ed4:	4843      	ldr	r0, [pc, #268]	; (400fe4 <main+0x240>)
  400ed6:	f8d9 1000 	ldr.w	r1, [r9]
  400eda:	2200      	movs	r2, #0
  400edc:	2302      	movs	r3, #2
  400ede:	f8df a0b4 	ldr.w	sl, [pc, #180]	; 400f94 <main+0x1f0>
  400ee2:	47d0      	blx	sl
						(unsigned)gs_ul_captured_pulses, TC_PERIPHERAL,
						TC_CHANNEL_CAPTURE,	(unsigned)gs_ul_captured_ra,
						(unsigned)gs_ul_captured_rb);
				frequence = (sysclk_get_peripheral_bus_hz(TC) /
						divisors[TC_CAPTURE_TIMER_SELECTION]) /
  400ee4:	6830      	ldr	r0, [r6, #0]
  400ee6:	4940      	ldr	r1, [pc, #256]	; (400fe8 <main+0x244>)
  400ee8:	fbb1 f1f0 	udiv	r1, r1, r0
						gs_ul_captured_rb;
				dutycycle
					= (gs_ul_captured_rb - gs_ul_captured_ra) * 100 /
  400eec:	f8d8 2000 	ldr.w	r2, [r8]
  400ef0:	1a82      	subs	r2, r0, r2
  400ef2:	2364      	movs	r3, #100	; 0x64
  400ef4:	fb03 f302 	mul.w	r3, r3, r2
  400ef8:	fbb3 f2f0 	udiv	r2, r3, r0
						gs_ul_captured_rb;
				printf("Captured wave frequency = %d Hz, Duty cycle = %d%% \n\r",
  400efc:	483b      	ldr	r0, [pc, #236]	; (400fec <main+0x248>)
  400efe:	b289      	uxth	r1, r1
  400f00:	b292      	uxth	r2, r2
  400f02:	47d0      	blx	sl
						frequence, dutycycle);

				gs_ul_captured_pulses = 0;
  400f04:	2300      	movs	r3, #0
  400f06:	f8c9 3000 	str.w	r3, [r9]
				gs_ul_captured_ra = 0;
  400f0a:	f8c8 3000 	str.w	r3, [r8]
				gs_ul_captured_rb = 0;
  400f0e:	6033      	str	r3, [r6, #0]
  400f10:	e002      	b.n	400f18 <main+0x174>
			} else {
				puts("No waveform has been captured\r");
  400f12:	4837      	ldr	r0, [pc, #220]	; (400ff0 <main+0x24c>)
  400f14:	4b37      	ldr	r3, [pc, #220]	; (400ff4 <main+0x250>)
  400f16:	4798      	blx	r3
			}

			puts("\n\rPress 'h' to display menu\r");
  400f18:	4837      	ldr	r0, [pc, #220]	; (400ff8 <main+0x254>)
  400f1a:	4b36      	ldr	r3, [pc, #216]	; (400ff4 <main+0x250>)
  400f1c:	4798      	blx	r3
			break;
  400f1e:	e7b8      	b.n	400e92 <main+0xee>

		case 'c':
			puts("Start capture, press 's' to stop \r");
  400f20:	4836      	ldr	r0, [pc, #216]	; (400ffc <main+0x258>)
  400f22:	4b34      	ldr	r3, [pc, #208]	; (400ff4 <main+0x250>)
  400f24:	4798      	blx	r3
			//! [tc_capture_init_module_irq]
			tc_enable_interrupt(TC, TC_CHANNEL_CAPTURE, TC_IER_LDRBS);
  400f26:	4e25      	ldr	r6, [pc, #148]	; (400fbc <main+0x218>)
  400f28:	4630      	mov	r0, r6
  400f2a:	2102      	movs	r1, #2
  400f2c:	2240      	movs	r2, #64	; 0x40
  400f2e:	4b34      	ldr	r3, [pc, #208]	; (401000 <main+0x25c>)
  400f30:	4798      	blx	r3
			//! [tc_capture_init_module_irq]
			/* Start the timer counter on TC TC_CHANNEL_CAPTURE */
			//! [tc_capture_start_now]
			tc_start(TC, TC_CHANNEL_CAPTURE);
  400f32:	4630      	mov	r0, r6
  400f34:	2102      	movs	r1, #2
  400f36:	4b33      	ldr	r3, [pc, #204]	; (401004 <main+0x260>)
  400f38:	4798      	blx	r3
			//! [tc_capture_start_now]
			break;
  400f3a:	e7aa      	b.n	400e92 <main+0xee>

		default:
			/* Set waveform configuration #n */
			if ((key >= '0') && (key <= ('0' + gc_uc_nbconfig - 1))) {
  400f3c:	3b30      	subs	r3, #48	; 0x30
  400f3e:	b2db      	uxtb	r3, r3
  400f40:	2b04      	cmp	r3, #4
  400f42:	d8a6      	bhi.n	400e92 <main+0xee>
				if (!gs_ul_captured_pulses) {
  400f44:	4a24      	ldr	r2, [pc, #144]	; (400fd8 <main+0x234>)
  400f46:	6812      	ldr	r2, [r2, #0]
  400f48:	b922      	cbnz	r2, 400f54 <main+0x1b0>
					gs_uc_configuration = key - '0';
  400f4a:	4a2f      	ldr	r2, [pc, #188]	; (401008 <main+0x264>)
  400f4c:	7013      	strb	r3, [r2, #0]
					tc_waveform_initialize();
  400f4e:	4b19      	ldr	r3, [pc, #100]	; (400fb4 <main+0x210>)
  400f50:	4798      	blx	r3
  400f52:	e79e      	b.n	400e92 <main+0xee>
				} else {
					puts("Capturing ... , press 's' to stop capture first \r");
  400f54:	482d      	ldr	r0, [pc, #180]	; (40100c <main+0x268>)
  400f56:	4b27      	ldr	r3, [pc, #156]	; (400ff4 <main+0x250>)
  400f58:	4798      	blx	r3
  400f5a:	e79a      	b.n	400e92 <main+0xee>
  400f5c:	00400129 	.word	0x00400129
  400f60:	00400219 	.word	0x00400219
  400f64:	400e0800 	.word	0x400e0800
  400f68:	20000954 	.word	0x20000954
  400f6c:	00400bb5 	.word	0x00400bb5
  400f70:	20000950 	.word	0x20000950
  400f74:	00400b2d 	.word	0x00400b2d
  400f78:	2000094c 	.word	0x2000094c
  400f7c:	07270e00 	.word	0x07270e00
  400f80:	00400701 	.word	0x00400701
  400f84:	004007b1 	.word	0x004007b1
  400f88:	20000430 	.word	0x20000430
  400f8c:	004011bd 	.word	0x004011bd
  400f90:	004057ec 	.word	0x004057ec
  400f94:	00401065 	.word	0x00401065
  400f98:	00405810 	.word	0x00405810
  400f9c:	00405818 	.word	0x00405818
  400fa0:	00405824 	.word	0x00405824
  400fa4:	0040583c 	.word	0x0040583c
  400fa8:	00405848 	.word	0x00405848
  400fac:	400e0e00 	.word	0x400e0e00
  400fb0:	00405854 	.word	0x00405854
  400fb4:	00400c35 	.word	0x00400c35
  400fb8:	0040588c 	.word	0x0040588c
  400fbc:	40010000 	.word	0x40010000
  400fc0:	00090602 	.word	0x00090602
  400fc4:	00400755 	.word	0x00400755
  400fc8:	e000e100 	.word	0xe000e100
  400fcc:	00400ae5 	.word	0x00400ae5
  400fd0:	004058c4 	.word	0x004058c4
  400fd4:	0040108d 	.word	0x0040108d
  400fd8:	20000910 	.word	0x20000910
  400fdc:	004007a1 	.word	0x004007a1
  400fe0:	2000090c 	.word	0x2000090c
  400fe4:	004058c8 	.word	0x004058c8
  400fe8:	00393870 	.word	0x00393870
  400fec:	00405908 	.word	0x00405908
  400ff0:	00405940 	.word	0x00405940
  400ff4:	004011ad 	.word	0x004011ad
  400ff8:	00405960 	.word	0x00405960
  400ffc:	00405980 	.word	0x00405980
  401000:	00400799 	.word	0x00400799
  401004:	00400771 	.word	0x00400771
  401008:	20000914 	.word	0x20000914
  40100c:	004059a4 	.word	0x004059a4
  401010:	20000908 	.word	0x20000908

00401014 <__libc_init_array>:
  401014:	b570      	push	{r4, r5, r6, lr}
  401016:	4e0f      	ldr	r6, [pc, #60]	; (401054 <__libc_init_array+0x40>)
  401018:	4d0f      	ldr	r5, [pc, #60]	; (401058 <__libc_init_array+0x44>)
  40101a:	1b76      	subs	r6, r6, r5
  40101c:	10b6      	asrs	r6, r6, #2
  40101e:	bf18      	it	ne
  401020:	2400      	movne	r4, #0
  401022:	d005      	beq.n	401030 <__libc_init_array+0x1c>
  401024:	3401      	adds	r4, #1
  401026:	f855 3b04 	ldr.w	r3, [r5], #4
  40102a:	4798      	blx	r3
  40102c:	42a6      	cmp	r6, r4
  40102e:	d1f9      	bne.n	401024 <__libc_init_array+0x10>
  401030:	4e0a      	ldr	r6, [pc, #40]	; (40105c <__libc_init_array+0x48>)
  401032:	4d0b      	ldr	r5, [pc, #44]	; (401060 <__libc_init_array+0x4c>)
  401034:	1b76      	subs	r6, r6, r5
  401036:	f004 fd9b 	bl	405b70 <_init>
  40103a:	10b6      	asrs	r6, r6, #2
  40103c:	bf18      	it	ne
  40103e:	2400      	movne	r4, #0
  401040:	d006      	beq.n	401050 <__libc_init_array+0x3c>
  401042:	3401      	adds	r4, #1
  401044:	f855 3b04 	ldr.w	r3, [r5], #4
  401048:	4798      	blx	r3
  40104a:	42a6      	cmp	r6, r4
  40104c:	d1f9      	bne.n	401042 <__libc_init_array+0x2e>
  40104e:	bd70      	pop	{r4, r5, r6, pc}
  401050:	bd70      	pop	{r4, r5, r6, pc}
  401052:	bf00      	nop
  401054:	00405b7c 	.word	0x00405b7c
  401058:	00405b7c 	.word	0x00405b7c
  40105c:	00405b84 	.word	0x00405b84
  401060:	00405b7c 	.word	0x00405b7c

00401064 <iprintf>:
  401064:	b40f      	push	{r0, r1, r2, r3}
  401066:	b500      	push	{lr}
  401068:	4907      	ldr	r1, [pc, #28]	; (401088 <iprintf+0x24>)
  40106a:	b083      	sub	sp, #12
  40106c:	ab04      	add	r3, sp, #16
  40106e:	6808      	ldr	r0, [r1, #0]
  401070:	f853 2b04 	ldr.w	r2, [r3], #4
  401074:	6881      	ldr	r1, [r0, #8]
  401076:	9301      	str	r3, [sp, #4]
  401078:	f000 f98e 	bl	401398 <_vfiprintf_r>
  40107c:	b003      	add	sp, #12
  40107e:	f85d eb04 	ldr.w	lr, [sp], #4
  401082:	b004      	add	sp, #16
  401084:	4770      	bx	lr
  401086:	bf00      	nop
  401088:	20000430 	.word	0x20000430

0040108c <iscanf>:
  40108c:	b40f      	push	{r0, r1, r2, r3}
  40108e:	b500      	push	{lr}
  401090:	4907      	ldr	r1, [pc, #28]	; (4010b0 <iscanf+0x24>)
  401092:	b083      	sub	sp, #12
  401094:	ab04      	add	r3, sp, #16
  401096:	6808      	ldr	r0, [r1, #0]
  401098:	f853 2b04 	ldr.w	r2, [r3], #4
  40109c:	6841      	ldr	r1, [r0, #4]
  40109e:	9301      	str	r3, [sp, #4]
  4010a0:	f000 ffbe 	bl	402020 <__svfiscanf_r>
  4010a4:	b003      	add	sp, #12
  4010a6:	f85d eb04 	ldr.w	lr, [sp], #4
  4010aa:	b004      	add	sp, #16
  4010ac:	4770      	bx	lr
  4010ae:	bf00      	nop
  4010b0:	20000430 	.word	0x20000430

004010b4 <memset>:
  4010b4:	b470      	push	{r4, r5, r6}
  4010b6:	0784      	lsls	r4, r0, #30
  4010b8:	d046      	beq.n	401148 <memset+0x94>
  4010ba:	1e54      	subs	r4, r2, #1
  4010bc:	2a00      	cmp	r2, #0
  4010be:	d041      	beq.n	401144 <memset+0x90>
  4010c0:	b2cd      	uxtb	r5, r1
  4010c2:	4603      	mov	r3, r0
  4010c4:	e002      	b.n	4010cc <memset+0x18>
  4010c6:	1e62      	subs	r2, r4, #1
  4010c8:	b3e4      	cbz	r4, 401144 <memset+0x90>
  4010ca:	4614      	mov	r4, r2
  4010cc:	f803 5b01 	strb.w	r5, [r3], #1
  4010d0:	079a      	lsls	r2, r3, #30
  4010d2:	d1f8      	bne.n	4010c6 <memset+0x12>
  4010d4:	2c03      	cmp	r4, #3
  4010d6:	d92e      	bls.n	401136 <memset+0x82>
  4010d8:	b2cd      	uxtb	r5, r1
  4010da:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4010de:	2c0f      	cmp	r4, #15
  4010e0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4010e4:	d919      	bls.n	40111a <memset+0x66>
  4010e6:	f103 0210 	add.w	r2, r3, #16
  4010ea:	4626      	mov	r6, r4
  4010ec:	3e10      	subs	r6, #16
  4010ee:	2e0f      	cmp	r6, #15
  4010f0:	f842 5c10 	str.w	r5, [r2, #-16]
  4010f4:	f842 5c0c 	str.w	r5, [r2, #-12]
  4010f8:	f842 5c08 	str.w	r5, [r2, #-8]
  4010fc:	f842 5c04 	str.w	r5, [r2, #-4]
  401100:	f102 0210 	add.w	r2, r2, #16
  401104:	d8f2      	bhi.n	4010ec <memset+0x38>
  401106:	f1a4 0210 	sub.w	r2, r4, #16
  40110a:	f022 020f 	bic.w	r2, r2, #15
  40110e:	f004 040f 	and.w	r4, r4, #15
  401112:	3210      	adds	r2, #16
  401114:	2c03      	cmp	r4, #3
  401116:	4413      	add	r3, r2
  401118:	d90d      	bls.n	401136 <memset+0x82>
  40111a:	461e      	mov	r6, r3
  40111c:	4622      	mov	r2, r4
  40111e:	3a04      	subs	r2, #4
  401120:	2a03      	cmp	r2, #3
  401122:	f846 5b04 	str.w	r5, [r6], #4
  401126:	d8fa      	bhi.n	40111e <memset+0x6a>
  401128:	1f22      	subs	r2, r4, #4
  40112a:	f022 0203 	bic.w	r2, r2, #3
  40112e:	3204      	adds	r2, #4
  401130:	4413      	add	r3, r2
  401132:	f004 0403 	and.w	r4, r4, #3
  401136:	b12c      	cbz	r4, 401144 <memset+0x90>
  401138:	b2c9      	uxtb	r1, r1
  40113a:	441c      	add	r4, r3
  40113c:	f803 1b01 	strb.w	r1, [r3], #1
  401140:	42a3      	cmp	r3, r4
  401142:	d1fb      	bne.n	40113c <memset+0x88>
  401144:	bc70      	pop	{r4, r5, r6}
  401146:	4770      	bx	lr
  401148:	4614      	mov	r4, r2
  40114a:	4603      	mov	r3, r0
  40114c:	e7c2      	b.n	4010d4 <memset+0x20>
  40114e:	bf00      	nop

00401150 <_puts_r>:
  401150:	b5f0      	push	{r4, r5, r6, r7, lr}
  401152:	4604      	mov	r4, r0
  401154:	b089      	sub	sp, #36	; 0x24
  401156:	4608      	mov	r0, r1
  401158:	460d      	mov	r5, r1
  40115a:	f000 f8b3 	bl	4012c4 <strlen>
  40115e:	68a3      	ldr	r3, [r4, #8]
  401160:	4f11      	ldr	r7, [pc, #68]	; (4011a8 <_puts_r+0x58>)
  401162:	899a      	ldrh	r2, [r3, #12]
  401164:	9504      	str	r5, [sp, #16]
  401166:	2102      	movs	r1, #2
  401168:	f100 0e01 	add.w	lr, r0, #1
  40116c:	2601      	movs	r6, #1
  40116e:	ad04      	add	r5, sp, #16
  401170:	9102      	str	r1, [sp, #8]
  401172:	0491      	lsls	r1, r2, #18
  401174:	9005      	str	r0, [sp, #20]
  401176:	f8cd e00c 	str.w	lr, [sp, #12]
  40117a:	9706      	str	r7, [sp, #24]
  40117c:	9607      	str	r6, [sp, #28]
  40117e:	9501      	str	r5, [sp, #4]
  401180:	d406      	bmi.n	401190 <_puts_r+0x40>
  401182:	6e59      	ldr	r1, [r3, #100]	; 0x64
  401184:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  401188:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40118c:	819a      	strh	r2, [r3, #12]
  40118e:	6659      	str	r1, [r3, #100]	; 0x64
  401190:	4620      	mov	r0, r4
  401192:	4619      	mov	r1, r3
  401194:	aa01      	add	r2, sp, #4
  401196:	f002 f85b 	bl	403250 <__sfvwrite_r>
  40119a:	2800      	cmp	r0, #0
  40119c:	bf14      	ite	ne
  40119e:	f04f 30ff 	movne.w	r0, #4294967295
  4011a2:	200a      	moveq	r0, #10
  4011a4:	b009      	add	sp, #36	; 0x24
  4011a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4011a8:	004059f4 	.word	0x004059f4

004011ac <puts>:
  4011ac:	4b02      	ldr	r3, [pc, #8]	; (4011b8 <puts+0xc>)
  4011ae:	4601      	mov	r1, r0
  4011b0:	6818      	ldr	r0, [r3, #0]
  4011b2:	f7ff bfcd 	b.w	401150 <_puts_r>
  4011b6:	bf00      	nop
  4011b8:	20000430 	.word	0x20000430

004011bc <setbuf>:
  4011bc:	2900      	cmp	r1, #0
  4011be:	bf0c      	ite	eq
  4011c0:	2202      	moveq	r2, #2
  4011c2:	2200      	movne	r2, #0
  4011c4:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4011c8:	f000 b800 	b.w	4011cc <setvbuf>

004011cc <setvbuf>:
  4011cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4011d0:	4c3a      	ldr	r4, [pc, #232]	; (4012bc <setvbuf+0xf0>)
  4011d2:	6826      	ldr	r6, [r4, #0]
  4011d4:	460d      	mov	r5, r1
  4011d6:	4604      	mov	r4, r0
  4011d8:	4690      	mov	r8, r2
  4011da:	461f      	mov	r7, r3
  4011dc:	b116      	cbz	r6, 4011e4 <setvbuf+0x18>
  4011de:	6bb3      	ldr	r3, [r6, #56]	; 0x38
  4011e0:	2b00      	cmp	r3, #0
  4011e2:	d03c      	beq.n	40125e <setvbuf+0x92>
  4011e4:	f1b8 0f02 	cmp.w	r8, #2
  4011e8:	d82f      	bhi.n	40124a <setvbuf+0x7e>
  4011ea:	2f00      	cmp	r7, #0
  4011ec:	db2d      	blt.n	40124a <setvbuf+0x7e>
  4011ee:	4621      	mov	r1, r4
  4011f0:	4630      	mov	r0, r6
  4011f2:	f001 fd0d 	bl	402c10 <_fflush_r>
  4011f6:	89a1      	ldrh	r1, [r4, #12]
  4011f8:	2300      	movs	r3, #0
  4011fa:	6063      	str	r3, [r4, #4]
  4011fc:	61a3      	str	r3, [r4, #24]
  4011fe:	060b      	lsls	r3, r1, #24
  401200:	d427      	bmi.n	401252 <setvbuf+0x86>
  401202:	f021 0183 	bic.w	r1, r1, #131	; 0x83
  401206:	b289      	uxth	r1, r1
  401208:	f1b8 0f02 	cmp.w	r8, #2
  40120c:	81a1      	strh	r1, [r4, #12]
  40120e:	d02a      	beq.n	401266 <setvbuf+0x9a>
  401210:	2d00      	cmp	r5, #0
  401212:	d036      	beq.n	401282 <setvbuf+0xb6>
  401214:	f1b8 0f01 	cmp.w	r8, #1
  401218:	d011      	beq.n	40123e <setvbuf+0x72>
  40121a:	b289      	uxth	r1, r1
  40121c:	f001 0008 	and.w	r0, r1, #8
  401220:	4b27      	ldr	r3, [pc, #156]	; (4012c0 <setvbuf+0xf4>)
  401222:	63f3      	str	r3, [r6, #60]	; 0x3c
  401224:	b280      	uxth	r0, r0
  401226:	6025      	str	r5, [r4, #0]
  401228:	6125      	str	r5, [r4, #16]
  40122a:	6167      	str	r7, [r4, #20]
  40122c:	b178      	cbz	r0, 40124e <setvbuf+0x82>
  40122e:	f011 0f03 	tst.w	r1, #3
  401232:	bf18      	it	ne
  401234:	2700      	movne	r7, #0
  401236:	60a7      	str	r7, [r4, #8]
  401238:	2000      	movs	r0, #0
  40123a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40123e:	f041 0101 	orr.w	r1, r1, #1
  401242:	427b      	negs	r3, r7
  401244:	81a1      	strh	r1, [r4, #12]
  401246:	61a3      	str	r3, [r4, #24]
  401248:	e7e7      	b.n	40121a <setvbuf+0x4e>
  40124a:	f04f 30ff 	mov.w	r0, #4294967295
  40124e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401252:	6921      	ldr	r1, [r4, #16]
  401254:	4630      	mov	r0, r6
  401256:	f001 ff23 	bl	4030a0 <_free_r>
  40125a:	89a1      	ldrh	r1, [r4, #12]
  40125c:	e7d1      	b.n	401202 <setvbuf+0x36>
  40125e:	4630      	mov	r0, r6
  401260:	f001 fd7c 	bl	402d5c <__sinit>
  401264:	e7be      	b.n	4011e4 <setvbuf+0x18>
  401266:	2000      	movs	r0, #0
  401268:	f104 0343 	add.w	r3, r4, #67	; 0x43
  40126c:	f041 0102 	orr.w	r1, r1, #2
  401270:	2500      	movs	r5, #0
  401272:	2201      	movs	r2, #1
  401274:	81a1      	strh	r1, [r4, #12]
  401276:	60a5      	str	r5, [r4, #8]
  401278:	6023      	str	r3, [r4, #0]
  40127a:	6123      	str	r3, [r4, #16]
  40127c:	6162      	str	r2, [r4, #20]
  40127e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401282:	2f00      	cmp	r7, #0
  401284:	bf08      	it	eq
  401286:	f44f 6780 	moveq.w	r7, #1024	; 0x400
  40128a:	4638      	mov	r0, r7
  40128c:	f002 fa44 	bl	403718 <malloc>
  401290:	4605      	mov	r5, r0
  401292:	b128      	cbz	r0, 4012a0 <setvbuf+0xd4>
  401294:	89a1      	ldrh	r1, [r4, #12]
  401296:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  40129a:	b289      	uxth	r1, r1
  40129c:	81a1      	strh	r1, [r4, #12]
  40129e:	e7b9      	b.n	401214 <setvbuf+0x48>
  4012a0:	f44f 6080 	mov.w	r0, #1024	; 0x400
  4012a4:	f002 fa38 	bl	403718 <malloc>
  4012a8:	4605      	mov	r5, r0
  4012aa:	b918      	cbnz	r0, 4012b4 <setvbuf+0xe8>
  4012ac:	89a1      	ldrh	r1, [r4, #12]
  4012ae:	f04f 30ff 	mov.w	r0, #4294967295
  4012b2:	e7d9      	b.n	401268 <setvbuf+0x9c>
  4012b4:	f44f 6780 	mov.w	r7, #1024	; 0x400
  4012b8:	e7ec      	b.n	401294 <setvbuf+0xc8>
  4012ba:	bf00      	nop
  4012bc:	20000430 	.word	0x20000430
  4012c0:	00402c61 	.word	0x00402c61

004012c4 <strlen>:
  4012c4:	f020 0103 	bic.w	r1, r0, #3
  4012c8:	f010 0003 	ands.w	r0, r0, #3
  4012cc:	f1c0 0000 	rsb	r0, r0, #0
  4012d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4012d4:	f100 0c04 	add.w	ip, r0, #4
  4012d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  4012dc:	f06f 0200 	mvn.w	r2, #0
  4012e0:	bf1c      	itt	ne
  4012e2:	fa22 f20c 	lsrne.w	r2, r2, ip
  4012e6:	4313      	orrne	r3, r2
  4012e8:	f04f 0c01 	mov.w	ip, #1
  4012ec:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  4012f0:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  4012f4:	eba3 020c 	sub.w	r2, r3, ip
  4012f8:	ea22 0203 	bic.w	r2, r2, r3
  4012fc:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  401300:	bf04      	itt	eq
  401302:	f851 3b04 	ldreq.w	r3, [r1], #4
  401306:	3004      	addeq	r0, #4
  401308:	d0f4      	beq.n	4012f4 <strlen+0x30>
  40130a:	f1c2 0100 	rsb	r1, r2, #0
  40130e:	ea02 0201 	and.w	r2, r2, r1
  401312:	fab2 f282 	clz	r2, r2
  401316:	f1c2 021f 	rsb	r2, r2, #31
  40131a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40131e:	4770      	bx	lr

00401320 <__sprint_r.part.0>:
  401320:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  401322:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401326:	049c      	lsls	r4, r3, #18
  401328:	460f      	mov	r7, r1
  40132a:	4692      	mov	sl, r2
  40132c:	d52b      	bpl.n	401386 <__sprint_r.part.0+0x66>
  40132e:	6893      	ldr	r3, [r2, #8]
  401330:	6812      	ldr	r2, [r2, #0]
  401332:	b333      	cbz	r3, 401382 <__sprint_r.part.0+0x62>
  401334:	4680      	mov	r8, r0
  401336:	f102 0908 	add.w	r9, r2, #8
  40133a:	e919 0060 	ldmdb	r9, {r5, r6}
  40133e:	08b6      	lsrs	r6, r6, #2
  401340:	d017      	beq.n	401372 <__sprint_r.part.0+0x52>
  401342:	3d04      	subs	r5, #4
  401344:	2400      	movs	r4, #0
  401346:	e001      	b.n	40134c <__sprint_r.part.0+0x2c>
  401348:	42a6      	cmp	r6, r4
  40134a:	d010      	beq.n	40136e <__sprint_r.part.0+0x4e>
  40134c:	4640      	mov	r0, r8
  40134e:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401352:	463a      	mov	r2, r7
  401354:	f001 fd7a 	bl	402e4c <_fputwc_r>
  401358:	1c43      	adds	r3, r0, #1
  40135a:	f104 0401 	add.w	r4, r4, #1
  40135e:	d1f3      	bne.n	401348 <__sprint_r.part.0+0x28>
  401360:	2300      	movs	r3, #0
  401362:	f8ca 3008 	str.w	r3, [sl, #8]
  401366:	f8ca 3004 	str.w	r3, [sl, #4]
  40136a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40136e:	f8da 3008 	ldr.w	r3, [sl, #8]
  401372:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  401376:	f8ca 3008 	str.w	r3, [sl, #8]
  40137a:	f109 0908 	add.w	r9, r9, #8
  40137e:	2b00      	cmp	r3, #0
  401380:	d1db      	bne.n	40133a <__sprint_r.part.0+0x1a>
  401382:	2000      	movs	r0, #0
  401384:	e7ec      	b.n	401360 <__sprint_r.part.0+0x40>
  401386:	f001 ff63 	bl	403250 <__sfvwrite_r>
  40138a:	2300      	movs	r3, #0
  40138c:	f8ca 3008 	str.w	r3, [sl, #8]
  401390:	f8ca 3004 	str.w	r3, [sl, #4]
  401394:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00401398 <_vfiprintf_r>:
  401398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40139c:	b0ab      	sub	sp, #172	; 0xac
  40139e:	461c      	mov	r4, r3
  4013a0:	9100      	str	r1, [sp, #0]
  4013a2:	4693      	mov	fp, r2
  4013a4:	9304      	str	r3, [sp, #16]
  4013a6:	9001      	str	r0, [sp, #4]
  4013a8:	b118      	cbz	r0, 4013b2 <_vfiprintf_r+0x1a>
  4013aa:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4013ac:	2b00      	cmp	r3, #0
  4013ae:	f000 80e3 	beq.w	401578 <_vfiprintf_r+0x1e0>
  4013b2:	9b00      	ldr	r3, [sp, #0]
  4013b4:	8999      	ldrh	r1, [r3, #12]
  4013b6:	b28a      	uxth	r2, r1
  4013b8:	0490      	lsls	r0, r2, #18
  4013ba:	d408      	bmi.n	4013ce <_vfiprintf_r+0x36>
  4013bc:	4618      	mov	r0, r3
  4013be:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  4013c0:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  4013c4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4013c8:	8182      	strh	r2, [r0, #12]
  4013ca:	6643      	str	r3, [r0, #100]	; 0x64
  4013cc:	b292      	uxth	r2, r2
  4013ce:	0711      	lsls	r1, r2, #28
  4013d0:	f140 80b2 	bpl.w	401538 <_vfiprintf_r+0x1a0>
  4013d4:	9b00      	ldr	r3, [sp, #0]
  4013d6:	691b      	ldr	r3, [r3, #16]
  4013d8:	2b00      	cmp	r3, #0
  4013da:	f000 80ad 	beq.w	401538 <_vfiprintf_r+0x1a0>
  4013de:	f002 021a 	and.w	r2, r2, #26
  4013e2:	2a0a      	cmp	r2, #10
  4013e4:	f000 80b4 	beq.w	401550 <_vfiprintf_r+0x1b8>
  4013e8:	2300      	movs	r3, #0
  4013ea:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
  4013ee:	9309      	str	r3, [sp, #36]	; 0x24
  4013f0:	930f      	str	r3, [sp, #60]	; 0x3c
  4013f2:	930e      	str	r3, [sp, #56]	; 0x38
  4013f4:	9302      	str	r3, [sp, #8]
  4013f6:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  4013fa:	4654      	mov	r4, sl
  4013fc:	f89b 3000 	ldrb.w	r3, [fp]
  401400:	2b00      	cmp	r3, #0
  401402:	f000 84a3 	beq.w	401d4c <_vfiprintf_r+0x9b4>
  401406:	2b25      	cmp	r3, #37	; 0x25
  401408:	f000 84a0 	beq.w	401d4c <_vfiprintf_r+0x9b4>
  40140c:	465a      	mov	r2, fp
  40140e:	e001      	b.n	401414 <_vfiprintf_r+0x7c>
  401410:	2b25      	cmp	r3, #37	; 0x25
  401412:	d003      	beq.n	40141c <_vfiprintf_r+0x84>
  401414:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  401418:	2b00      	cmp	r3, #0
  40141a:	d1f9      	bne.n	401410 <_vfiprintf_r+0x78>
  40141c:	ebcb 0602 	rsb	r6, fp, r2
  401420:	4615      	mov	r5, r2
  401422:	b196      	cbz	r6, 40144a <_vfiprintf_r+0xb2>
  401424:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401426:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401428:	f8c4 b000 	str.w	fp, [r4]
  40142c:	3301      	adds	r3, #1
  40142e:	4432      	add	r2, r6
  401430:	2b07      	cmp	r3, #7
  401432:	6066      	str	r6, [r4, #4]
  401434:	920f      	str	r2, [sp, #60]	; 0x3c
  401436:	930e      	str	r3, [sp, #56]	; 0x38
  401438:	dd79      	ble.n	40152e <_vfiprintf_r+0x196>
  40143a:	2a00      	cmp	r2, #0
  40143c:	f040 84af 	bne.w	401d9e <_vfiprintf_r+0xa06>
  401440:	9b02      	ldr	r3, [sp, #8]
  401442:	920e      	str	r2, [sp, #56]	; 0x38
  401444:	4433      	add	r3, r6
  401446:	4654      	mov	r4, sl
  401448:	9302      	str	r3, [sp, #8]
  40144a:	782b      	ldrb	r3, [r5, #0]
  40144c:	2b00      	cmp	r3, #0
  40144e:	f000 8360 	beq.w	401b12 <_vfiprintf_r+0x77a>
  401452:	2100      	movs	r1, #0
  401454:	f04f 0300 	mov.w	r3, #0
  401458:	f04f 3cff 	mov.w	ip, #4294967295
  40145c:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401460:	1c68      	adds	r0, r5, #1
  401462:	786b      	ldrb	r3, [r5, #1]
  401464:	4688      	mov	r8, r1
  401466:	460d      	mov	r5, r1
  401468:	4666      	mov	r6, ip
  40146a:	f100 0b01 	add.w	fp, r0, #1
  40146e:	f1a3 0220 	sub.w	r2, r3, #32
  401472:	2a58      	cmp	r2, #88	; 0x58
  401474:	f200 82ab 	bhi.w	4019ce <_vfiprintf_r+0x636>
  401478:	e8df f012 	tbh	[pc, r2, lsl #1]
  40147c:	02a9029b 	.word	0x02a9029b
  401480:	02a302a9 	.word	0x02a302a9
  401484:	02a902a9 	.word	0x02a902a9
  401488:	02a902a9 	.word	0x02a902a9
  40148c:	02a902a9 	.word	0x02a902a9
  401490:	02620255 	.word	0x02620255
  401494:	010d02a9 	.word	0x010d02a9
  401498:	02a9026e 	.word	0x02a9026e
  40149c:	012f0129 	.word	0x012f0129
  4014a0:	012f012f 	.word	0x012f012f
  4014a4:	012f012f 	.word	0x012f012f
  4014a8:	012f012f 	.word	0x012f012f
  4014ac:	012f012f 	.word	0x012f012f
  4014b0:	02a902a9 	.word	0x02a902a9
  4014b4:	02a902a9 	.word	0x02a902a9
  4014b8:	02a902a9 	.word	0x02a902a9
  4014bc:	02a902a9 	.word	0x02a902a9
  4014c0:	02a902a9 	.word	0x02a902a9
  4014c4:	02a9013d 	.word	0x02a9013d
  4014c8:	02a902a9 	.word	0x02a902a9
  4014cc:	02a902a9 	.word	0x02a902a9
  4014d0:	02a902a9 	.word	0x02a902a9
  4014d4:	02a902a9 	.word	0x02a902a9
  4014d8:	017402a9 	.word	0x017402a9
  4014dc:	02a902a9 	.word	0x02a902a9
  4014e0:	02a902a9 	.word	0x02a902a9
  4014e4:	018b02a9 	.word	0x018b02a9
  4014e8:	02a902a9 	.word	0x02a902a9
  4014ec:	02a901a3 	.word	0x02a901a3
  4014f0:	02a902a9 	.word	0x02a902a9
  4014f4:	02a902a9 	.word	0x02a902a9
  4014f8:	02a902a9 	.word	0x02a902a9
  4014fc:	02a902a9 	.word	0x02a902a9
  401500:	01c702a9 	.word	0x01c702a9
  401504:	02a901da 	.word	0x02a901da
  401508:	02a902a9 	.word	0x02a902a9
  40150c:	01da0123 	.word	0x01da0123
  401510:	02a902a9 	.word	0x02a902a9
  401514:	02a9024c 	.word	0x02a9024c
  401518:	0113028a 	.word	0x0113028a
  40151c:	020701f3 	.word	0x020701f3
  401520:	020d02a9 	.word	0x020d02a9
  401524:	008102a9 	.word	0x008102a9
  401528:	02a902a9 	.word	0x02a902a9
  40152c:	0233      	.short	0x0233
  40152e:	3408      	adds	r4, #8
  401530:	9b02      	ldr	r3, [sp, #8]
  401532:	4433      	add	r3, r6
  401534:	9302      	str	r3, [sp, #8]
  401536:	e788      	b.n	40144a <_vfiprintf_r+0xb2>
  401538:	9801      	ldr	r0, [sp, #4]
  40153a:	9900      	ldr	r1, [sp, #0]
  40153c:	f001 fa4c 	bl	4029d8 <__swsetup_r>
  401540:	b9a8      	cbnz	r0, 40156e <_vfiprintf_r+0x1d6>
  401542:	9b00      	ldr	r3, [sp, #0]
  401544:	899a      	ldrh	r2, [r3, #12]
  401546:	f002 021a 	and.w	r2, r2, #26
  40154a:	2a0a      	cmp	r2, #10
  40154c:	f47f af4c 	bne.w	4013e8 <_vfiprintf_r+0x50>
  401550:	9b00      	ldr	r3, [sp, #0]
  401552:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
  401556:	2b00      	cmp	r3, #0
  401558:	f6ff af46 	blt.w	4013e8 <_vfiprintf_r+0x50>
  40155c:	9801      	ldr	r0, [sp, #4]
  40155e:	9900      	ldr	r1, [sp, #0]
  401560:	465a      	mov	r2, fp
  401562:	4623      	mov	r3, r4
  401564:	f000 fd20 	bl	401fa8 <__sbprintf>
  401568:	b02b      	add	sp, #172	; 0xac
  40156a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40156e:	f04f 30ff 	mov.w	r0, #4294967295
  401572:	b02b      	add	sp, #172	; 0xac
  401574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401578:	f001 fbf0 	bl	402d5c <__sinit>
  40157c:	e719      	b.n	4013b2 <_vfiprintf_r+0x1a>
  40157e:	f018 0f20 	tst.w	r8, #32
  401582:	9503      	str	r5, [sp, #12]
  401584:	46b4      	mov	ip, r6
  401586:	f000 810c 	beq.w	4017a2 <_vfiprintf_r+0x40a>
  40158a:	9b04      	ldr	r3, [sp, #16]
  40158c:	3307      	adds	r3, #7
  40158e:	f023 0307 	bic.w	r3, r3, #7
  401592:	f103 0208 	add.w	r2, r3, #8
  401596:	e9d3 6700 	ldrd	r6, r7, [r3]
  40159a:	9204      	str	r2, [sp, #16]
  40159c:	2301      	movs	r3, #1
  40159e:	f04f 0200 	mov.w	r2, #0
  4015a2:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  4015a6:	46e1      	mov	r9, ip
  4015a8:	2500      	movs	r5, #0
  4015aa:	f1bc 0f00 	cmp.w	ip, #0
  4015ae:	bfa8      	it	ge
  4015b0:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  4015b4:	ea56 0207 	orrs.w	r2, r6, r7
  4015b8:	f040 80c4 	bne.w	401744 <_vfiprintf_r+0x3ac>
  4015bc:	f1bc 0f00 	cmp.w	ip, #0
  4015c0:	f000 8381 	beq.w	401cc6 <_vfiprintf_r+0x92e>
  4015c4:	2b01      	cmp	r3, #1
  4015c6:	f000 80c5 	beq.w	401754 <_vfiprintf_r+0x3bc>
  4015ca:	2b02      	cmp	r3, #2
  4015cc:	f000 8387 	beq.w	401cde <_vfiprintf_r+0x946>
  4015d0:	4651      	mov	r1, sl
  4015d2:	08f2      	lsrs	r2, r6, #3
  4015d4:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  4015d8:	08f8      	lsrs	r0, r7, #3
  4015da:	f006 0307 	and.w	r3, r6, #7
  4015de:	4607      	mov	r7, r0
  4015e0:	4616      	mov	r6, r2
  4015e2:	3330      	adds	r3, #48	; 0x30
  4015e4:	ea56 0207 	orrs.w	r2, r6, r7
  4015e8:	f801 3d01 	strb.w	r3, [r1, #-1]!
  4015ec:	d1f1      	bne.n	4015d2 <_vfiprintf_r+0x23a>
  4015ee:	f018 0f01 	tst.w	r8, #1
  4015f2:	9107      	str	r1, [sp, #28]
  4015f4:	f040 83fc 	bne.w	401df0 <_vfiprintf_r+0xa58>
  4015f8:	ebc1 090a 	rsb	r9, r1, sl
  4015fc:	45e1      	cmp	r9, ip
  4015fe:	464e      	mov	r6, r9
  401600:	bfb8      	it	lt
  401602:	4666      	movlt	r6, ip
  401604:	b105      	cbz	r5, 401608 <_vfiprintf_r+0x270>
  401606:	3601      	adds	r6, #1
  401608:	f018 0302 	ands.w	r3, r8, #2
  40160c:	9305      	str	r3, [sp, #20]
  40160e:	bf18      	it	ne
  401610:	3602      	addne	r6, #2
  401612:	f018 0384 	ands.w	r3, r8, #132	; 0x84
  401616:	9306      	str	r3, [sp, #24]
  401618:	f040 81fa 	bne.w	401a10 <_vfiprintf_r+0x678>
  40161c:	9b03      	ldr	r3, [sp, #12]
  40161e:	1b9d      	subs	r5, r3, r6
  401620:	2d00      	cmp	r5, #0
  401622:	f340 81f5 	ble.w	401a10 <_vfiprintf_r+0x678>
  401626:	2d10      	cmp	r5, #16
  401628:	f340 848c 	ble.w	401f44 <_vfiprintf_r+0xbac>
  40162c:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  401630:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401632:	4fc6      	ldr	r7, [pc, #792]	; (40194c <_vfiprintf_r+0x5b4>)
  401634:	4620      	mov	r0, r4
  401636:	2310      	movs	r3, #16
  401638:	4664      	mov	r4, ip
  40163a:	4671      	mov	r1, lr
  40163c:	4684      	mov	ip, r0
  40163e:	e007      	b.n	401650 <_vfiprintf_r+0x2b8>
  401640:	f101 0e02 	add.w	lr, r1, #2
  401644:	f10c 0c08 	add.w	ip, ip, #8
  401648:	4601      	mov	r1, r0
  40164a:	3d10      	subs	r5, #16
  40164c:	2d10      	cmp	r5, #16
  40164e:	dd13      	ble.n	401678 <_vfiprintf_r+0x2e0>
  401650:	1c48      	adds	r0, r1, #1
  401652:	3210      	adds	r2, #16
  401654:	2807      	cmp	r0, #7
  401656:	920f      	str	r2, [sp, #60]	; 0x3c
  401658:	f8cc 7000 	str.w	r7, [ip]
  40165c:	f8cc 3004 	str.w	r3, [ip, #4]
  401660:	900e      	str	r0, [sp, #56]	; 0x38
  401662:	dded      	ble.n	401640 <_vfiprintf_r+0x2a8>
  401664:	2a00      	cmp	r2, #0
  401666:	f040 81c3 	bne.w	4019f0 <_vfiprintf_r+0x658>
  40166a:	3d10      	subs	r5, #16
  40166c:	2d10      	cmp	r5, #16
  40166e:	4611      	mov	r1, r2
  401670:	f04f 0e01 	mov.w	lr, #1
  401674:	46d4      	mov	ip, sl
  401676:	dceb      	bgt.n	401650 <_vfiprintf_r+0x2b8>
  401678:	4663      	mov	r3, ip
  40167a:	4671      	mov	r1, lr
  40167c:	46a4      	mov	ip, r4
  40167e:	461c      	mov	r4, r3
  401680:	442a      	add	r2, r5
  401682:	2907      	cmp	r1, #7
  401684:	920f      	str	r2, [sp, #60]	; 0x3c
  401686:	6027      	str	r7, [r4, #0]
  401688:	6065      	str	r5, [r4, #4]
  40168a:	910e      	str	r1, [sp, #56]	; 0x38
  40168c:	f300 8346 	bgt.w	401d1c <_vfiprintf_r+0x984>
  401690:	3408      	adds	r4, #8
  401692:	1c48      	adds	r0, r1, #1
  401694:	e1bf      	b.n	401a16 <_vfiprintf_r+0x67e>
  401696:	4658      	mov	r0, fp
  401698:	f048 0804 	orr.w	r8, r8, #4
  40169c:	f89b 3000 	ldrb.w	r3, [fp]
  4016a0:	e6e3      	b.n	40146a <_vfiprintf_r+0xd2>
  4016a2:	f018 0320 	ands.w	r3, r8, #32
  4016a6:	9503      	str	r5, [sp, #12]
  4016a8:	46b4      	mov	ip, r6
  4016aa:	d062      	beq.n	401772 <_vfiprintf_r+0x3da>
  4016ac:	9b04      	ldr	r3, [sp, #16]
  4016ae:	3307      	adds	r3, #7
  4016b0:	f023 0307 	bic.w	r3, r3, #7
  4016b4:	f103 0208 	add.w	r2, r3, #8
  4016b8:	e9d3 6700 	ldrd	r6, r7, [r3]
  4016bc:	9204      	str	r2, [sp, #16]
  4016be:	2300      	movs	r3, #0
  4016c0:	e76d      	b.n	40159e <_vfiprintf_r+0x206>
  4016c2:	f048 0840 	orr.w	r8, r8, #64	; 0x40
  4016c6:	f89b 3000 	ldrb.w	r3, [fp]
  4016ca:	4658      	mov	r0, fp
  4016cc:	e6cd      	b.n	40146a <_vfiprintf_r+0xd2>
  4016ce:	f048 0880 	orr.w	r8, r8, #128	; 0x80
  4016d2:	f89b 3000 	ldrb.w	r3, [fp]
  4016d6:	4658      	mov	r0, fp
  4016d8:	e6c7      	b.n	40146a <_vfiprintf_r+0xd2>
  4016da:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4016de:	2500      	movs	r5, #0
  4016e0:	f81b 3b01 	ldrb.w	r3, [fp], #1
  4016e4:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  4016e8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  4016ec:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4016f0:	2a09      	cmp	r2, #9
  4016f2:	d9f5      	bls.n	4016e0 <_vfiprintf_r+0x348>
  4016f4:	e6bb      	b.n	40146e <_vfiprintf_r+0xd6>
  4016f6:	f048 0810 	orr.w	r8, r8, #16
  4016fa:	f018 0f20 	tst.w	r8, #32
  4016fe:	9503      	str	r5, [sp, #12]
  401700:	46b4      	mov	ip, r6
  401702:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401706:	f000 809b 	beq.w	401840 <_vfiprintf_r+0x4a8>
  40170a:	9904      	ldr	r1, [sp, #16]
  40170c:	3107      	adds	r1, #7
  40170e:	f021 0107 	bic.w	r1, r1, #7
  401712:	e9d1 2300 	ldrd	r2, r3, [r1]
  401716:	3108      	adds	r1, #8
  401718:	9104      	str	r1, [sp, #16]
  40171a:	4616      	mov	r6, r2
  40171c:	461f      	mov	r7, r3
  40171e:	2a00      	cmp	r2, #0
  401720:	f173 0300 	sbcs.w	r3, r3, #0
  401724:	f2c0 83a6 	blt.w	401e74 <_vfiprintf_r+0xadc>
  401728:	f1bc 0f00 	cmp.w	ip, #0
  40172c:	bfa8      	it	ge
  40172e:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  401732:	ea56 0207 	orrs.w	r2, r6, r7
  401736:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  40173a:	46e1      	mov	r9, ip
  40173c:	f04f 0301 	mov.w	r3, #1
  401740:	f43f af3c 	beq.w	4015bc <_vfiprintf_r+0x224>
  401744:	2b01      	cmp	r3, #1
  401746:	f47f af40 	bne.w	4015ca <_vfiprintf_r+0x232>
  40174a:	2f00      	cmp	r7, #0
  40174c:	bf08      	it	eq
  40174e:	2e0a      	cmpeq	r6, #10
  401750:	f080 8334 	bcs.w	401dbc <_vfiprintf_r+0xa24>
  401754:	ab2a      	add	r3, sp, #168	; 0xa8
  401756:	3630      	adds	r6, #48	; 0x30
  401758:	f803 6d41 	strb.w	r6, [r3, #-65]!
  40175c:	ebc3 090a 	rsb	r9, r3, sl
  401760:	9307      	str	r3, [sp, #28]
  401762:	e74b      	b.n	4015fc <_vfiprintf_r+0x264>
  401764:	f048 0810 	orr.w	r8, r8, #16
  401768:	f018 0320 	ands.w	r3, r8, #32
  40176c:	9503      	str	r5, [sp, #12]
  40176e:	46b4      	mov	ip, r6
  401770:	d19c      	bne.n	4016ac <_vfiprintf_r+0x314>
  401772:	f018 0210 	ands.w	r2, r8, #16
  401776:	f040 82f7 	bne.w	401d68 <_vfiprintf_r+0x9d0>
  40177a:	f018 0340 	ands.w	r3, r8, #64	; 0x40
  40177e:	f000 82f3 	beq.w	401d68 <_vfiprintf_r+0x9d0>
  401782:	9904      	ldr	r1, [sp, #16]
  401784:	4613      	mov	r3, r2
  401786:	460a      	mov	r2, r1
  401788:	3204      	adds	r2, #4
  40178a:	880e      	ldrh	r6, [r1, #0]
  40178c:	9204      	str	r2, [sp, #16]
  40178e:	2700      	movs	r7, #0
  401790:	e705      	b.n	40159e <_vfiprintf_r+0x206>
  401792:	f048 0810 	orr.w	r8, r8, #16
  401796:	f018 0f20 	tst.w	r8, #32
  40179a:	9503      	str	r5, [sp, #12]
  40179c:	46b4      	mov	ip, r6
  40179e:	f47f aef4 	bne.w	40158a <_vfiprintf_r+0x1f2>
  4017a2:	9a04      	ldr	r2, [sp, #16]
  4017a4:	f018 0f10 	tst.w	r8, #16
  4017a8:	4613      	mov	r3, r2
  4017aa:	f040 82e4 	bne.w	401d76 <_vfiprintf_r+0x9de>
  4017ae:	f018 0f40 	tst.w	r8, #64	; 0x40
  4017b2:	f000 82e0 	beq.w	401d76 <_vfiprintf_r+0x9de>
  4017b6:	8816      	ldrh	r6, [r2, #0]
  4017b8:	3204      	adds	r2, #4
  4017ba:	2700      	movs	r7, #0
  4017bc:	2301      	movs	r3, #1
  4017be:	9204      	str	r2, [sp, #16]
  4017c0:	e6ed      	b.n	40159e <_vfiprintf_r+0x206>
  4017c2:	4a63      	ldr	r2, [pc, #396]	; (401950 <_vfiprintf_r+0x5b8>)
  4017c4:	9503      	str	r5, [sp, #12]
  4017c6:	f018 0f20 	tst.w	r8, #32
  4017ca:	46b4      	mov	ip, r6
  4017cc:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4017d0:	9209      	str	r2, [sp, #36]	; 0x24
  4017d2:	f000 8090 	beq.w	4018f6 <_vfiprintf_r+0x55e>
  4017d6:	9a04      	ldr	r2, [sp, #16]
  4017d8:	3207      	adds	r2, #7
  4017da:	f022 0207 	bic.w	r2, r2, #7
  4017de:	e9d2 6700 	ldrd	r6, r7, [r2]
  4017e2:	f102 0108 	add.w	r1, r2, #8
  4017e6:	9104      	str	r1, [sp, #16]
  4017e8:	f018 0f01 	tst.w	r8, #1
  4017ec:	f000 8290 	beq.w	401d10 <_vfiprintf_r+0x978>
  4017f0:	ea56 0207 	orrs.w	r2, r6, r7
  4017f4:	f000 828c 	beq.w	401d10 <_vfiprintf_r+0x978>
  4017f8:	2230      	movs	r2, #48	; 0x30
  4017fa:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  4017fe:	f048 0802 	orr.w	r8, r8, #2
  401802:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  401806:	2302      	movs	r3, #2
  401808:	e6c9      	b.n	40159e <_vfiprintf_r+0x206>
  40180a:	9a04      	ldr	r2, [sp, #16]
  40180c:	9503      	str	r5, [sp, #12]
  40180e:	6813      	ldr	r3, [r2, #0]
  401810:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  401814:	4613      	mov	r3, r2
  401816:	3304      	adds	r3, #4
  401818:	2601      	movs	r6, #1
  40181a:	f04f 0100 	mov.w	r1, #0
  40181e:	9304      	str	r3, [sp, #16]
  401820:	ab10      	add	r3, sp, #64	; 0x40
  401822:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401826:	46b1      	mov	r9, r6
  401828:	9307      	str	r3, [sp, #28]
  40182a:	f04f 0c00 	mov.w	ip, #0
  40182e:	e6eb      	b.n	401608 <_vfiprintf_r+0x270>
  401830:	f018 0f20 	tst.w	r8, #32
  401834:	9503      	str	r5, [sp, #12]
  401836:	46b4      	mov	ip, r6
  401838:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  40183c:	f47f af65 	bne.w	40170a <_vfiprintf_r+0x372>
  401840:	f018 0f10 	tst.w	r8, #16
  401844:	f040 82a2 	bne.w	401d8c <_vfiprintf_r+0x9f4>
  401848:	f018 0f40 	tst.w	r8, #64	; 0x40
  40184c:	f000 829e 	beq.w	401d8c <_vfiprintf_r+0x9f4>
  401850:	9904      	ldr	r1, [sp, #16]
  401852:	f9b1 6000 	ldrsh.w	r6, [r1]
  401856:	3104      	adds	r1, #4
  401858:	17f7      	asrs	r7, r6, #31
  40185a:	4632      	mov	r2, r6
  40185c:	463b      	mov	r3, r7
  40185e:	9104      	str	r1, [sp, #16]
  401860:	e75d      	b.n	40171e <_vfiprintf_r+0x386>
  401862:	9904      	ldr	r1, [sp, #16]
  401864:	9503      	str	r5, [sp, #12]
  401866:	2330      	movs	r3, #48	; 0x30
  401868:	460a      	mov	r2, r1
  40186a:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  40186e:	2378      	movs	r3, #120	; 0x78
  401870:	3204      	adds	r2, #4
  401872:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  401876:	4b37      	ldr	r3, [pc, #220]	; (401954 <_vfiprintf_r+0x5bc>)
  401878:	9309      	str	r3, [sp, #36]	; 0x24
  40187a:	46b4      	mov	ip, r6
  40187c:	f048 0802 	orr.w	r8, r8, #2
  401880:	680e      	ldr	r6, [r1, #0]
  401882:	9204      	str	r2, [sp, #16]
  401884:	2700      	movs	r7, #0
  401886:	2302      	movs	r3, #2
  401888:	e689      	b.n	40159e <_vfiprintf_r+0x206>
  40188a:	f048 0820 	orr.w	r8, r8, #32
  40188e:	f89b 3000 	ldrb.w	r3, [fp]
  401892:	4658      	mov	r0, fp
  401894:	e5e9      	b.n	40146a <_vfiprintf_r+0xd2>
  401896:	9a04      	ldr	r2, [sp, #16]
  401898:	9503      	str	r5, [sp, #12]
  40189a:	6813      	ldr	r3, [r2, #0]
  40189c:	9307      	str	r3, [sp, #28]
  40189e:	f04f 0100 	mov.w	r1, #0
  4018a2:	46b4      	mov	ip, r6
  4018a4:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4018a8:	1d16      	adds	r6, r2, #4
  4018aa:	2b00      	cmp	r3, #0
  4018ac:	f000 8350 	beq.w	401f50 <_vfiprintf_r+0xbb8>
  4018b0:	f1bc 0f00 	cmp.w	ip, #0
  4018b4:	f2c0 832a 	blt.w	401f0c <_vfiprintf_r+0xb74>
  4018b8:	9d07      	ldr	r5, [sp, #28]
  4018ba:	f8cd c010 	str.w	ip, [sp, #16]
  4018be:	4662      	mov	r2, ip
  4018c0:	4628      	mov	r0, r5
  4018c2:	2100      	movs	r1, #0
  4018c4:	f002 fa06 	bl	403cd4 <memchr>
  4018c8:	f8dd c010 	ldr.w	ip, [sp, #16]
  4018cc:	2800      	cmp	r0, #0
  4018ce:	f000 8350 	beq.w	401f72 <_vfiprintf_r+0xbda>
  4018d2:	ebc5 0900 	rsb	r9, r5, r0
  4018d6:	9604      	str	r6, [sp, #16]
  4018d8:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  4018dc:	f04f 0c00 	mov.w	ip, #0
  4018e0:	e68c      	b.n	4015fc <_vfiprintf_r+0x264>
  4018e2:	4a1c      	ldr	r2, [pc, #112]	; (401954 <_vfiprintf_r+0x5bc>)
  4018e4:	9503      	str	r5, [sp, #12]
  4018e6:	f018 0f20 	tst.w	r8, #32
  4018ea:	46b4      	mov	ip, r6
  4018ec:	9209      	str	r2, [sp, #36]	; 0x24
  4018ee:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4018f2:	f47f af70 	bne.w	4017d6 <_vfiprintf_r+0x43e>
  4018f6:	9904      	ldr	r1, [sp, #16]
  4018f8:	f018 0f10 	tst.w	r8, #16
  4018fc:	460a      	mov	r2, r1
  4018fe:	f040 8240 	bne.w	401d82 <_vfiprintf_r+0x9ea>
  401902:	f018 0f40 	tst.w	r8, #64	; 0x40
  401906:	f000 823c 	beq.w	401d82 <_vfiprintf_r+0x9ea>
  40190a:	3204      	adds	r2, #4
  40190c:	880e      	ldrh	r6, [r1, #0]
  40190e:	9204      	str	r2, [sp, #16]
  401910:	2700      	movs	r7, #0
  401912:	e769      	b.n	4017e8 <_vfiprintf_r+0x450>
  401914:	f89b 3000 	ldrb.w	r3, [fp]
  401918:	2b6c      	cmp	r3, #108	; 0x6c
  40191a:	f000 82ea 	beq.w	401ef2 <_vfiprintf_r+0xb5a>
  40191e:	f048 0810 	orr.w	r8, r8, #16
  401922:	4658      	mov	r0, fp
  401924:	e5a1      	b.n	40146a <_vfiprintf_r+0xd2>
  401926:	9a04      	ldr	r2, [sp, #16]
  401928:	6815      	ldr	r5, [r2, #0]
  40192a:	4613      	mov	r3, r2
  40192c:	2d00      	cmp	r5, #0
  40192e:	f103 0304 	add.w	r3, r3, #4
  401932:	f2c0 82e6 	blt.w	401f02 <_vfiprintf_r+0xb6a>
  401936:	9304      	str	r3, [sp, #16]
  401938:	f89b 3000 	ldrb.w	r3, [fp]
  40193c:	4658      	mov	r0, fp
  40193e:	e594      	b.n	40146a <_vfiprintf_r+0xd2>
  401940:	f89b 3000 	ldrb.w	r3, [fp]
  401944:	4658      	mov	r0, fp
  401946:	212b      	movs	r1, #43	; 0x2b
  401948:	e58f      	b.n	40146a <_vfiprintf_r+0xd2>
  40194a:	bf00      	nop
  40194c:	00405a38 	.word	0x00405a38
  401950:	00405a08 	.word	0x00405a08
  401954:	00405a1c 	.word	0x00405a1c
  401958:	f89b 3000 	ldrb.w	r3, [fp]
  40195c:	2b2a      	cmp	r3, #42	; 0x2a
  40195e:	f10b 0001 	add.w	r0, fp, #1
  401962:	f000 830f 	beq.w	401f84 <_vfiprintf_r+0xbec>
  401966:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40196a:	2a09      	cmp	r2, #9
  40196c:	4683      	mov	fp, r0
  40196e:	f04f 0600 	mov.w	r6, #0
  401972:	f63f ad7c 	bhi.w	40146e <_vfiprintf_r+0xd6>
  401976:	f81b 3b01 	ldrb.w	r3, [fp], #1
  40197a:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40197e:	eb02 0646 	add.w	r6, r2, r6, lsl #1
  401982:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401986:	2a09      	cmp	r2, #9
  401988:	d9f5      	bls.n	401976 <_vfiprintf_r+0x5de>
  40198a:	ea46 76e6 	orr.w	r6, r6, r6, asr #31
  40198e:	e56e      	b.n	40146e <_vfiprintf_r+0xd6>
  401990:	f018 0f20 	tst.w	r8, #32
  401994:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401998:	f000 8283 	beq.w	401ea2 <_vfiprintf_r+0xb0a>
  40199c:	9a04      	ldr	r2, [sp, #16]
  40199e:	9902      	ldr	r1, [sp, #8]
  4019a0:	6813      	ldr	r3, [r2, #0]
  4019a2:	17cf      	asrs	r7, r1, #31
  4019a4:	4608      	mov	r0, r1
  4019a6:	3204      	adds	r2, #4
  4019a8:	4639      	mov	r1, r7
  4019aa:	9204      	str	r2, [sp, #16]
  4019ac:	e9c3 0100 	strd	r0, r1, [r3]
  4019b0:	e524      	b.n	4013fc <_vfiprintf_r+0x64>
  4019b2:	4658      	mov	r0, fp
  4019b4:	f89b 3000 	ldrb.w	r3, [fp]
  4019b8:	2900      	cmp	r1, #0
  4019ba:	f47f ad56 	bne.w	40146a <_vfiprintf_r+0xd2>
  4019be:	2120      	movs	r1, #32
  4019c0:	e553      	b.n	40146a <_vfiprintf_r+0xd2>
  4019c2:	f048 0801 	orr.w	r8, r8, #1
  4019c6:	4658      	mov	r0, fp
  4019c8:	f89b 3000 	ldrb.w	r3, [fp]
  4019cc:	e54d      	b.n	40146a <_vfiprintf_r+0xd2>
  4019ce:	9503      	str	r5, [sp, #12]
  4019d0:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4019d4:	2b00      	cmp	r3, #0
  4019d6:	f000 809c 	beq.w	401b12 <_vfiprintf_r+0x77a>
  4019da:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  4019de:	f04f 0300 	mov.w	r3, #0
  4019e2:	2601      	movs	r6, #1
  4019e4:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  4019e8:	ab10      	add	r3, sp, #64	; 0x40
  4019ea:	46b1      	mov	r9, r6
  4019ec:	9307      	str	r3, [sp, #28]
  4019ee:	e71c      	b.n	40182a <_vfiprintf_r+0x492>
  4019f0:	9801      	ldr	r0, [sp, #4]
  4019f2:	9900      	ldr	r1, [sp, #0]
  4019f4:	9308      	str	r3, [sp, #32]
  4019f6:	aa0d      	add	r2, sp, #52	; 0x34
  4019f8:	f7ff fc92 	bl	401320 <__sprint_r.part.0>
  4019fc:	2800      	cmp	r0, #0
  4019fe:	f040 808f 	bne.w	401b20 <_vfiprintf_r+0x788>
  401a02:	990e      	ldr	r1, [sp, #56]	; 0x38
  401a04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401a06:	9b08      	ldr	r3, [sp, #32]
  401a08:	f101 0e01 	add.w	lr, r1, #1
  401a0c:	46d4      	mov	ip, sl
  401a0e:	e61c      	b.n	40164a <_vfiprintf_r+0x2b2>
  401a10:	990e      	ldr	r1, [sp, #56]	; 0x38
  401a12:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401a14:	1c48      	adds	r0, r1, #1
  401a16:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  401a1a:	b16b      	cbz	r3, 401a38 <_vfiprintf_r+0x6a0>
  401a1c:	3201      	adds	r2, #1
  401a1e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
  401a22:	2101      	movs	r1, #1
  401a24:	2807      	cmp	r0, #7
  401a26:	920f      	str	r2, [sp, #60]	; 0x3c
  401a28:	900e      	str	r0, [sp, #56]	; 0x38
  401a2a:	6023      	str	r3, [r4, #0]
  401a2c:	6061      	str	r1, [r4, #4]
  401a2e:	f300 8134 	bgt.w	401c9a <_vfiprintf_r+0x902>
  401a32:	4601      	mov	r1, r0
  401a34:	3408      	adds	r4, #8
  401a36:	3001      	adds	r0, #1
  401a38:	9b05      	ldr	r3, [sp, #20]
  401a3a:	b163      	cbz	r3, 401a56 <_vfiprintf_r+0x6be>
  401a3c:	3202      	adds	r2, #2
  401a3e:	a90c      	add	r1, sp, #48	; 0x30
  401a40:	2302      	movs	r3, #2
  401a42:	2807      	cmp	r0, #7
  401a44:	920f      	str	r2, [sp, #60]	; 0x3c
  401a46:	900e      	str	r0, [sp, #56]	; 0x38
  401a48:	e884 000a 	stmia.w	r4, {r1, r3}
  401a4c:	f300 8134 	bgt.w	401cb8 <_vfiprintf_r+0x920>
  401a50:	4601      	mov	r1, r0
  401a52:	3408      	adds	r4, #8
  401a54:	3001      	adds	r0, #1
  401a56:	9b06      	ldr	r3, [sp, #24]
  401a58:	2b80      	cmp	r3, #128	; 0x80
  401a5a:	f000 80d4 	beq.w	401c06 <_vfiprintf_r+0x86e>
  401a5e:	ebc9 070c 	rsb	r7, r9, ip
  401a62:	2f00      	cmp	r7, #0
  401a64:	dd2b      	ble.n	401abe <_vfiprintf_r+0x726>
  401a66:	2f10      	cmp	r7, #16
  401a68:	4daa      	ldr	r5, [pc, #680]	; (401d14 <_vfiprintf_r+0x97c>)
  401a6a:	dd1f      	ble.n	401aac <_vfiprintf_r+0x714>
  401a6c:	46a6      	mov	lr, r4
  401a6e:	2310      	movs	r3, #16
  401a70:	9c01      	ldr	r4, [sp, #4]
  401a72:	e007      	b.n	401a84 <_vfiprintf_r+0x6ec>
  401a74:	f101 0c02 	add.w	ip, r1, #2
  401a78:	f10e 0e08 	add.w	lr, lr, #8
  401a7c:	4601      	mov	r1, r0
  401a7e:	3f10      	subs	r7, #16
  401a80:	2f10      	cmp	r7, #16
  401a82:	dd11      	ble.n	401aa8 <_vfiprintf_r+0x710>
  401a84:	1c48      	adds	r0, r1, #1
  401a86:	3210      	adds	r2, #16
  401a88:	2807      	cmp	r0, #7
  401a8a:	920f      	str	r2, [sp, #60]	; 0x3c
  401a8c:	f8ce 5000 	str.w	r5, [lr]
  401a90:	f8ce 3004 	str.w	r3, [lr, #4]
  401a94:	900e      	str	r0, [sp, #56]	; 0x38
  401a96:	dded      	ble.n	401a74 <_vfiprintf_r+0x6dc>
  401a98:	bb6a      	cbnz	r2, 401af6 <_vfiprintf_r+0x75e>
  401a9a:	3f10      	subs	r7, #16
  401a9c:	2f10      	cmp	r7, #16
  401a9e:	f04f 0c01 	mov.w	ip, #1
  401aa2:	4611      	mov	r1, r2
  401aa4:	46d6      	mov	lr, sl
  401aa6:	dced      	bgt.n	401a84 <_vfiprintf_r+0x6ec>
  401aa8:	4674      	mov	r4, lr
  401aaa:	4660      	mov	r0, ip
  401aac:	443a      	add	r2, r7
  401aae:	2807      	cmp	r0, #7
  401ab0:	920f      	str	r2, [sp, #60]	; 0x3c
  401ab2:	e884 00a0 	stmia.w	r4, {r5, r7}
  401ab6:	900e      	str	r0, [sp, #56]	; 0x38
  401ab8:	dc3b      	bgt.n	401b32 <_vfiprintf_r+0x79a>
  401aba:	3408      	adds	r4, #8
  401abc:	3001      	adds	r0, #1
  401abe:	eb02 0309 	add.w	r3, r2, r9
  401ac2:	9a07      	ldr	r2, [sp, #28]
  401ac4:	930f      	str	r3, [sp, #60]	; 0x3c
  401ac6:	2807      	cmp	r0, #7
  401ac8:	e884 0204 	stmia.w	r4, {r2, r9}
  401acc:	900e      	str	r0, [sp, #56]	; 0x38
  401ace:	dd3d      	ble.n	401b4c <_vfiprintf_r+0x7b4>
  401ad0:	2b00      	cmp	r3, #0
  401ad2:	f040 813e 	bne.w	401d52 <_vfiprintf_r+0x9ba>
  401ad6:	f018 0f04 	tst.w	r8, #4
  401ada:	930e      	str	r3, [sp, #56]	; 0x38
  401adc:	f040 812f 	bne.w	401d3e <_vfiprintf_r+0x9a6>
  401ae0:	9b02      	ldr	r3, [sp, #8]
  401ae2:	9a03      	ldr	r2, [sp, #12]
  401ae4:	4296      	cmp	r6, r2
  401ae6:	bfac      	ite	ge
  401ae8:	199b      	addge	r3, r3, r6
  401aea:	189b      	addlt	r3, r3, r2
  401aec:	9302      	str	r3, [sp, #8]
  401aee:	2300      	movs	r3, #0
  401af0:	930e      	str	r3, [sp, #56]	; 0x38
  401af2:	4654      	mov	r4, sl
  401af4:	e482      	b.n	4013fc <_vfiprintf_r+0x64>
  401af6:	4620      	mov	r0, r4
  401af8:	9900      	ldr	r1, [sp, #0]
  401afa:	9305      	str	r3, [sp, #20]
  401afc:	aa0d      	add	r2, sp, #52	; 0x34
  401afe:	f7ff fc0f 	bl	401320 <__sprint_r.part.0>
  401b02:	b968      	cbnz	r0, 401b20 <_vfiprintf_r+0x788>
  401b04:	990e      	ldr	r1, [sp, #56]	; 0x38
  401b06:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401b08:	9b05      	ldr	r3, [sp, #20]
  401b0a:	f101 0c01 	add.w	ip, r1, #1
  401b0e:	46d6      	mov	lr, sl
  401b10:	e7b5      	b.n	401a7e <_vfiprintf_r+0x6e6>
  401b12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401b14:	b123      	cbz	r3, 401b20 <_vfiprintf_r+0x788>
  401b16:	9801      	ldr	r0, [sp, #4]
  401b18:	9900      	ldr	r1, [sp, #0]
  401b1a:	aa0d      	add	r2, sp, #52	; 0x34
  401b1c:	f7ff fc00 	bl	401320 <__sprint_r.part.0>
  401b20:	9b00      	ldr	r3, [sp, #0]
  401b22:	899b      	ldrh	r3, [r3, #12]
  401b24:	065b      	lsls	r3, r3, #25
  401b26:	f53f ad22 	bmi.w	40156e <_vfiprintf_r+0x1d6>
  401b2a:	9802      	ldr	r0, [sp, #8]
  401b2c:	b02b      	add	sp, #172	; 0xac
  401b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b32:	2a00      	cmp	r2, #0
  401b34:	f040 8191 	bne.w	401e5a <_vfiprintf_r+0xac2>
  401b38:	2201      	movs	r2, #1
  401b3a:	9907      	ldr	r1, [sp, #28]
  401b3c:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
  401b40:	464b      	mov	r3, r9
  401b42:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  401b46:	911a      	str	r1, [sp, #104]	; 0x68
  401b48:	920e      	str	r2, [sp, #56]	; 0x38
  401b4a:	4654      	mov	r4, sl
  401b4c:	f104 0208 	add.w	r2, r4, #8
  401b50:	f018 0f04 	tst.w	r8, #4
  401b54:	d039      	beq.n	401bca <_vfiprintf_r+0x832>
  401b56:	9903      	ldr	r1, [sp, #12]
  401b58:	1b8d      	subs	r5, r1, r6
  401b5a:	2d00      	cmp	r5, #0
  401b5c:	dd35      	ble.n	401bca <_vfiprintf_r+0x832>
  401b5e:	2d10      	cmp	r5, #16
  401b60:	f340 8202 	ble.w	401f68 <_vfiprintf_r+0xbd0>
  401b64:	980e      	ldr	r0, [sp, #56]	; 0x38
  401b66:	4f6c      	ldr	r7, [pc, #432]	; (401d18 <_vfiprintf_r+0x980>)
  401b68:	f8dd 8004 	ldr.w	r8, [sp, #4]
  401b6c:	f8dd 9000 	ldr.w	r9, [sp]
  401b70:	2410      	movs	r4, #16
  401b72:	e006      	b.n	401b82 <_vfiprintf_r+0x7ea>
  401b74:	f100 0e02 	add.w	lr, r0, #2
  401b78:	3208      	adds	r2, #8
  401b7a:	4608      	mov	r0, r1
  401b7c:	3d10      	subs	r5, #16
  401b7e:	2d10      	cmp	r5, #16
  401b80:	dd10      	ble.n	401ba4 <_vfiprintf_r+0x80c>
  401b82:	1c41      	adds	r1, r0, #1
  401b84:	3310      	adds	r3, #16
  401b86:	2907      	cmp	r1, #7
  401b88:	930f      	str	r3, [sp, #60]	; 0x3c
  401b8a:	6017      	str	r7, [r2, #0]
  401b8c:	6054      	str	r4, [r2, #4]
  401b8e:	910e      	str	r1, [sp, #56]	; 0x38
  401b90:	ddf0      	ble.n	401b74 <_vfiprintf_r+0x7dc>
  401b92:	2b00      	cmp	r3, #0
  401b94:	d12a      	bne.n	401bec <_vfiprintf_r+0x854>
  401b96:	3d10      	subs	r5, #16
  401b98:	2d10      	cmp	r5, #16
  401b9a:	f04f 0e01 	mov.w	lr, #1
  401b9e:	4618      	mov	r0, r3
  401ba0:	4652      	mov	r2, sl
  401ba2:	dcee      	bgt.n	401b82 <_vfiprintf_r+0x7ea>
  401ba4:	442b      	add	r3, r5
  401ba6:	f1be 0f07 	cmp.w	lr, #7
  401baa:	930f      	str	r3, [sp, #60]	; 0x3c
  401bac:	6017      	str	r7, [r2, #0]
  401bae:	6055      	str	r5, [r2, #4]
  401bb0:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  401bb4:	dd09      	ble.n	401bca <_vfiprintf_r+0x832>
  401bb6:	2b00      	cmp	r3, #0
  401bb8:	d092      	beq.n	401ae0 <_vfiprintf_r+0x748>
  401bba:	9801      	ldr	r0, [sp, #4]
  401bbc:	9900      	ldr	r1, [sp, #0]
  401bbe:	aa0d      	add	r2, sp, #52	; 0x34
  401bc0:	f7ff fbae 	bl	401320 <__sprint_r.part.0>
  401bc4:	2800      	cmp	r0, #0
  401bc6:	d1ab      	bne.n	401b20 <_vfiprintf_r+0x788>
  401bc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401bca:	9a02      	ldr	r2, [sp, #8]
  401bcc:	9903      	ldr	r1, [sp, #12]
  401bce:	428e      	cmp	r6, r1
  401bd0:	bfac      	ite	ge
  401bd2:	1992      	addge	r2, r2, r6
  401bd4:	1852      	addlt	r2, r2, r1
  401bd6:	9202      	str	r2, [sp, #8]
  401bd8:	2b00      	cmp	r3, #0
  401bda:	d088      	beq.n	401aee <_vfiprintf_r+0x756>
  401bdc:	9801      	ldr	r0, [sp, #4]
  401bde:	9900      	ldr	r1, [sp, #0]
  401be0:	aa0d      	add	r2, sp, #52	; 0x34
  401be2:	f7ff fb9d 	bl	401320 <__sprint_r.part.0>
  401be6:	2800      	cmp	r0, #0
  401be8:	d081      	beq.n	401aee <_vfiprintf_r+0x756>
  401bea:	e799      	b.n	401b20 <_vfiprintf_r+0x788>
  401bec:	4640      	mov	r0, r8
  401bee:	4649      	mov	r1, r9
  401bf0:	aa0d      	add	r2, sp, #52	; 0x34
  401bf2:	f7ff fb95 	bl	401320 <__sprint_r.part.0>
  401bf6:	2800      	cmp	r0, #0
  401bf8:	d192      	bne.n	401b20 <_vfiprintf_r+0x788>
  401bfa:	980e      	ldr	r0, [sp, #56]	; 0x38
  401bfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401bfe:	f100 0e01 	add.w	lr, r0, #1
  401c02:	4652      	mov	r2, sl
  401c04:	e7ba      	b.n	401b7c <_vfiprintf_r+0x7e4>
  401c06:	9b03      	ldr	r3, [sp, #12]
  401c08:	1b9f      	subs	r7, r3, r6
  401c0a:	2f00      	cmp	r7, #0
  401c0c:	f77f af27 	ble.w	401a5e <_vfiprintf_r+0x6c6>
  401c10:	2f10      	cmp	r7, #16
  401c12:	4d40      	ldr	r5, [pc, #256]	; (401d14 <_vfiprintf_r+0x97c>)
  401c14:	f340 81b4 	ble.w	401f80 <_vfiprintf_r+0xbe8>
  401c18:	4620      	mov	r0, r4
  401c1a:	2310      	movs	r3, #16
  401c1c:	4664      	mov	r4, ip
  401c1e:	4684      	mov	ip, r0
  401c20:	e007      	b.n	401c32 <_vfiprintf_r+0x89a>
  401c22:	f101 0e02 	add.w	lr, r1, #2
  401c26:	f10c 0c08 	add.w	ip, ip, #8
  401c2a:	4601      	mov	r1, r0
  401c2c:	3f10      	subs	r7, #16
  401c2e:	2f10      	cmp	r7, #16
  401c30:	dd11      	ble.n	401c56 <_vfiprintf_r+0x8be>
  401c32:	1c48      	adds	r0, r1, #1
  401c34:	3210      	adds	r2, #16
  401c36:	2807      	cmp	r0, #7
  401c38:	920f      	str	r2, [sp, #60]	; 0x3c
  401c3a:	f8cc 5000 	str.w	r5, [ip]
  401c3e:	f8cc 3004 	str.w	r3, [ip, #4]
  401c42:	900e      	str	r0, [sp, #56]	; 0x38
  401c44:	dded      	ble.n	401c22 <_vfiprintf_r+0x88a>
  401c46:	b9c2      	cbnz	r2, 401c7a <_vfiprintf_r+0x8e2>
  401c48:	3f10      	subs	r7, #16
  401c4a:	2f10      	cmp	r7, #16
  401c4c:	f04f 0e01 	mov.w	lr, #1
  401c50:	4611      	mov	r1, r2
  401c52:	46d4      	mov	ip, sl
  401c54:	dced      	bgt.n	401c32 <_vfiprintf_r+0x89a>
  401c56:	4663      	mov	r3, ip
  401c58:	46a4      	mov	ip, r4
  401c5a:	461c      	mov	r4, r3
  401c5c:	443a      	add	r2, r7
  401c5e:	f1be 0f07 	cmp.w	lr, #7
  401c62:	920f      	str	r2, [sp, #60]	; 0x3c
  401c64:	e884 00a0 	stmia.w	r4, {r5, r7}
  401c68:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  401c6c:	f300 80ef 	bgt.w	401e4e <_vfiprintf_r+0xab6>
  401c70:	3408      	adds	r4, #8
  401c72:	f10e 0001 	add.w	r0, lr, #1
  401c76:	4671      	mov	r1, lr
  401c78:	e6f1      	b.n	401a5e <_vfiprintf_r+0x6c6>
  401c7a:	9801      	ldr	r0, [sp, #4]
  401c7c:	9900      	ldr	r1, [sp, #0]
  401c7e:	9305      	str	r3, [sp, #20]
  401c80:	aa0d      	add	r2, sp, #52	; 0x34
  401c82:	f7ff fb4d 	bl	401320 <__sprint_r.part.0>
  401c86:	2800      	cmp	r0, #0
  401c88:	f47f af4a 	bne.w	401b20 <_vfiprintf_r+0x788>
  401c8c:	990e      	ldr	r1, [sp, #56]	; 0x38
  401c8e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401c90:	9b05      	ldr	r3, [sp, #20]
  401c92:	f101 0e01 	add.w	lr, r1, #1
  401c96:	46d4      	mov	ip, sl
  401c98:	e7c8      	b.n	401c2c <_vfiprintf_r+0x894>
  401c9a:	2a00      	cmp	r2, #0
  401c9c:	f040 80c6 	bne.w	401e2c <_vfiprintf_r+0xa94>
  401ca0:	9b05      	ldr	r3, [sp, #20]
  401ca2:	2b00      	cmp	r3, #0
  401ca4:	f000 8086 	beq.w	401db4 <_vfiprintf_r+0xa1c>
  401ca8:	aa0c      	add	r2, sp, #48	; 0x30
  401caa:	2302      	movs	r3, #2
  401cac:	921a      	str	r2, [sp, #104]	; 0x68
  401cae:	4608      	mov	r0, r1
  401cb0:	931b      	str	r3, [sp, #108]	; 0x6c
  401cb2:	461a      	mov	r2, r3
  401cb4:	4654      	mov	r4, sl
  401cb6:	e6cb      	b.n	401a50 <_vfiprintf_r+0x6b8>
  401cb8:	2a00      	cmp	r2, #0
  401cba:	f040 80a6 	bne.w	401e0a <_vfiprintf_r+0xa72>
  401cbe:	2001      	movs	r0, #1
  401cc0:	4611      	mov	r1, r2
  401cc2:	4654      	mov	r4, sl
  401cc4:	e6c7      	b.n	401a56 <_vfiprintf_r+0x6be>
  401cc6:	bb03      	cbnz	r3, 401d0a <_vfiprintf_r+0x972>
  401cc8:	f018 0f01 	tst.w	r8, #1
  401ccc:	d01d      	beq.n	401d0a <_vfiprintf_r+0x972>
  401cce:	ab2a      	add	r3, sp, #168	; 0xa8
  401cd0:	2230      	movs	r2, #48	; 0x30
  401cd2:	f803 2d41 	strb.w	r2, [r3, #-65]!
  401cd6:	ebc3 090a 	rsb	r9, r3, sl
  401cda:	9307      	str	r3, [sp, #28]
  401cdc:	e48e      	b.n	4015fc <_vfiprintf_r+0x264>
  401cde:	9809      	ldr	r0, [sp, #36]	; 0x24
  401ce0:	46d1      	mov	r9, sl
  401ce2:	0933      	lsrs	r3, r6, #4
  401ce4:	f006 010f 	and.w	r1, r6, #15
  401ce8:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401cec:	093a      	lsrs	r2, r7, #4
  401cee:	461e      	mov	r6, r3
  401cf0:	4617      	mov	r7, r2
  401cf2:	5c43      	ldrb	r3, [r0, r1]
  401cf4:	f809 3d01 	strb.w	r3, [r9, #-1]!
  401cf8:	ea56 0307 	orrs.w	r3, r6, r7
  401cfc:	d1f1      	bne.n	401ce2 <_vfiprintf_r+0x94a>
  401cfe:	464b      	mov	r3, r9
  401d00:	f8cd 901c 	str.w	r9, [sp, #28]
  401d04:	ebc3 090a 	rsb	r9, r3, sl
  401d08:	e478      	b.n	4015fc <_vfiprintf_r+0x264>
  401d0a:	f8cd a01c 	str.w	sl, [sp, #28]
  401d0e:	e475      	b.n	4015fc <_vfiprintf_r+0x264>
  401d10:	2302      	movs	r3, #2
  401d12:	e444      	b.n	40159e <_vfiprintf_r+0x206>
  401d14:	004059f8 	.word	0x004059f8
  401d18:	00405a38 	.word	0x00405a38
  401d1c:	2a00      	cmp	r2, #0
  401d1e:	f040 80d7 	bne.w	401ed0 <_vfiprintf_r+0xb38>
  401d22:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  401d26:	2b00      	cmp	r3, #0
  401d28:	f000 80ae 	beq.w	401e88 <_vfiprintf_r+0xaf0>
  401d2c:	2301      	movs	r3, #1
  401d2e:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  401d32:	4618      	mov	r0, r3
  401d34:	931b      	str	r3, [sp, #108]	; 0x6c
  401d36:	461a      	mov	r2, r3
  401d38:	911a      	str	r1, [sp, #104]	; 0x68
  401d3a:	4654      	mov	r4, sl
  401d3c:	e679      	b.n	401a32 <_vfiprintf_r+0x69a>
  401d3e:	9a03      	ldr	r2, [sp, #12]
  401d40:	1b95      	subs	r5, r2, r6
  401d42:	2d00      	cmp	r5, #0
  401d44:	4652      	mov	r2, sl
  401d46:	f73f af0a 	bgt.w	401b5e <_vfiprintf_r+0x7c6>
  401d4a:	e6c9      	b.n	401ae0 <_vfiprintf_r+0x748>
  401d4c:	465d      	mov	r5, fp
  401d4e:	f7ff bb7c 	b.w	40144a <_vfiprintf_r+0xb2>
  401d52:	9801      	ldr	r0, [sp, #4]
  401d54:	9900      	ldr	r1, [sp, #0]
  401d56:	aa0d      	add	r2, sp, #52	; 0x34
  401d58:	f7ff fae2 	bl	401320 <__sprint_r.part.0>
  401d5c:	2800      	cmp	r0, #0
  401d5e:	f47f aedf 	bne.w	401b20 <_vfiprintf_r+0x788>
  401d62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401d64:	4652      	mov	r2, sl
  401d66:	e6f3      	b.n	401b50 <_vfiprintf_r+0x7b8>
  401d68:	9904      	ldr	r1, [sp, #16]
  401d6a:	460a      	mov	r2, r1
  401d6c:	3204      	adds	r2, #4
  401d6e:	680e      	ldr	r6, [r1, #0]
  401d70:	9204      	str	r2, [sp, #16]
  401d72:	2700      	movs	r7, #0
  401d74:	e413      	b.n	40159e <_vfiprintf_r+0x206>
  401d76:	3204      	adds	r2, #4
  401d78:	681e      	ldr	r6, [r3, #0]
  401d7a:	9204      	str	r2, [sp, #16]
  401d7c:	2301      	movs	r3, #1
  401d7e:	2700      	movs	r7, #0
  401d80:	e40d      	b.n	40159e <_vfiprintf_r+0x206>
  401d82:	6816      	ldr	r6, [r2, #0]
  401d84:	3204      	adds	r2, #4
  401d86:	9204      	str	r2, [sp, #16]
  401d88:	2700      	movs	r7, #0
  401d8a:	e52d      	b.n	4017e8 <_vfiprintf_r+0x450>
  401d8c:	9a04      	ldr	r2, [sp, #16]
  401d8e:	6816      	ldr	r6, [r2, #0]
  401d90:	4613      	mov	r3, r2
  401d92:	3304      	adds	r3, #4
  401d94:	17f7      	asrs	r7, r6, #31
  401d96:	9304      	str	r3, [sp, #16]
  401d98:	4632      	mov	r2, r6
  401d9a:	463b      	mov	r3, r7
  401d9c:	e4bf      	b.n	40171e <_vfiprintf_r+0x386>
  401d9e:	9801      	ldr	r0, [sp, #4]
  401da0:	9900      	ldr	r1, [sp, #0]
  401da2:	aa0d      	add	r2, sp, #52	; 0x34
  401da4:	f7ff fabc 	bl	401320 <__sprint_r.part.0>
  401da8:	2800      	cmp	r0, #0
  401daa:	f47f aeb9 	bne.w	401b20 <_vfiprintf_r+0x788>
  401dae:	4654      	mov	r4, sl
  401db0:	f7ff bbbe 	b.w	401530 <_vfiprintf_r+0x198>
  401db4:	4608      	mov	r0, r1
  401db6:	4654      	mov	r4, sl
  401db8:	4611      	mov	r1, r2
  401dba:	e64c      	b.n	401a56 <_vfiprintf_r+0x6be>
  401dbc:	46d1      	mov	r9, sl
  401dbe:	f8cd c014 	str.w	ip, [sp, #20]
  401dc2:	4630      	mov	r0, r6
  401dc4:	4639      	mov	r1, r7
  401dc6:	220a      	movs	r2, #10
  401dc8:	2300      	movs	r3, #0
  401dca:	f003 f915 	bl	404ff8 <__aeabi_uldivmod>
  401dce:	3230      	adds	r2, #48	; 0x30
  401dd0:	4630      	mov	r0, r6
  401dd2:	4639      	mov	r1, r7
  401dd4:	f809 2d01 	strb.w	r2, [r9, #-1]!
  401dd8:	2300      	movs	r3, #0
  401dda:	220a      	movs	r2, #10
  401ddc:	f003 f90c 	bl	404ff8 <__aeabi_uldivmod>
  401de0:	4606      	mov	r6, r0
  401de2:	460f      	mov	r7, r1
  401de4:	ea56 0307 	orrs.w	r3, r6, r7
  401de8:	d1eb      	bne.n	401dc2 <_vfiprintf_r+0xa2a>
  401dea:	f8dd c014 	ldr.w	ip, [sp, #20]
  401dee:	e786      	b.n	401cfe <_vfiprintf_r+0x966>
  401df0:	2b30      	cmp	r3, #48	; 0x30
  401df2:	9b07      	ldr	r3, [sp, #28]
  401df4:	d086      	beq.n	401d04 <_vfiprintf_r+0x96c>
  401df6:	3b01      	subs	r3, #1
  401df8:	461a      	mov	r2, r3
  401dfa:	9307      	str	r3, [sp, #28]
  401dfc:	2330      	movs	r3, #48	; 0x30
  401dfe:	ebc2 090a 	rsb	r9, r2, sl
  401e02:	f801 3c01 	strb.w	r3, [r1, #-1]
  401e06:	f7ff bbf9 	b.w	4015fc <_vfiprintf_r+0x264>
  401e0a:	9801      	ldr	r0, [sp, #4]
  401e0c:	9900      	ldr	r1, [sp, #0]
  401e0e:	f8cd c014 	str.w	ip, [sp, #20]
  401e12:	aa0d      	add	r2, sp, #52	; 0x34
  401e14:	f7ff fa84 	bl	401320 <__sprint_r.part.0>
  401e18:	2800      	cmp	r0, #0
  401e1a:	f47f ae81 	bne.w	401b20 <_vfiprintf_r+0x788>
  401e1e:	990e      	ldr	r1, [sp, #56]	; 0x38
  401e20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e22:	f8dd c014 	ldr.w	ip, [sp, #20]
  401e26:	1c48      	adds	r0, r1, #1
  401e28:	4654      	mov	r4, sl
  401e2a:	e614      	b.n	401a56 <_vfiprintf_r+0x6be>
  401e2c:	9801      	ldr	r0, [sp, #4]
  401e2e:	9900      	ldr	r1, [sp, #0]
  401e30:	f8cd c020 	str.w	ip, [sp, #32]
  401e34:	aa0d      	add	r2, sp, #52	; 0x34
  401e36:	f7ff fa73 	bl	401320 <__sprint_r.part.0>
  401e3a:	2800      	cmp	r0, #0
  401e3c:	f47f ae70 	bne.w	401b20 <_vfiprintf_r+0x788>
  401e40:	990e      	ldr	r1, [sp, #56]	; 0x38
  401e42:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e44:	f8dd c020 	ldr.w	ip, [sp, #32]
  401e48:	1c48      	adds	r0, r1, #1
  401e4a:	4654      	mov	r4, sl
  401e4c:	e5f4      	b.n	401a38 <_vfiprintf_r+0x6a0>
  401e4e:	2a00      	cmp	r2, #0
  401e50:	d167      	bne.n	401f22 <_vfiprintf_r+0xb8a>
  401e52:	2001      	movs	r0, #1
  401e54:	4611      	mov	r1, r2
  401e56:	4654      	mov	r4, sl
  401e58:	e601      	b.n	401a5e <_vfiprintf_r+0x6c6>
  401e5a:	9801      	ldr	r0, [sp, #4]
  401e5c:	9900      	ldr	r1, [sp, #0]
  401e5e:	aa0d      	add	r2, sp, #52	; 0x34
  401e60:	f7ff fa5e 	bl	401320 <__sprint_r.part.0>
  401e64:	2800      	cmp	r0, #0
  401e66:	f47f ae5b 	bne.w	401b20 <_vfiprintf_r+0x788>
  401e6a:	980e      	ldr	r0, [sp, #56]	; 0x38
  401e6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e6e:	3001      	adds	r0, #1
  401e70:	4654      	mov	r4, sl
  401e72:	e624      	b.n	401abe <_vfiprintf_r+0x726>
  401e74:	252d      	movs	r5, #45	; 0x2d
  401e76:	4276      	negs	r6, r6
  401e78:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  401e7c:	f88d 502f 	strb.w	r5, [sp, #47]	; 0x2f
  401e80:	46e1      	mov	r9, ip
  401e82:	2301      	movs	r3, #1
  401e84:	f7ff bb91 	b.w	4015aa <_vfiprintf_r+0x212>
  401e88:	9b05      	ldr	r3, [sp, #20]
  401e8a:	4611      	mov	r1, r2
  401e8c:	2001      	movs	r0, #1
  401e8e:	4654      	mov	r4, sl
  401e90:	2b00      	cmp	r3, #0
  401e92:	f43f ade4 	beq.w	401a5e <_vfiprintf_r+0x6c6>
  401e96:	aa0c      	add	r2, sp, #48	; 0x30
  401e98:	2302      	movs	r3, #2
  401e9a:	e88a 000c 	stmia.w	sl, {r2, r3}
  401e9e:	461a      	mov	r2, r3
  401ea0:	e5d6      	b.n	401a50 <_vfiprintf_r+0x6b8>
  401ea2:	f018 0f10 	tst.w	r8, #16
  401ea6:	d10b      	bne.n	401ec0 <_vfiprintf_r+0xb28>
  401ea8:	f018 0f40 	tst.w	r8, #64	; 0x40
  401eac:	d008      	beq.n	401ec0 <_vfiprintf_r+0xb28>
  401eae:	9a04      	ldr	r2, [sp, #16]
  401eb0:	6813      	ldr	r3, [r2, #0]
  401eb2:	3204      	adds	r2, #4
  401eb4:	9204      	str	r2, [sp, #16]
  401eb6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  401eba:	801a      	strh	r2, [r3, #0]
  401ebc:	f7ff ba9e 	b.w	4013fc <_vfiprintf_r+0x64>
  401ec0:	9a04      	ldr	r2, [sp, #16]
  401ec2:	6813      	ldr	r3, [r2, #0]
  401ec4:	3204      	adds	r2, #4
  401ec6:	9204      	str	r2, [sp, #16]
  401ec8:	9a02      	ldr	r2, [sp, #8]
  401eca:	601a      	str	r2, [r3, #0]
  401ecc:	f7ff ba96 	b.w	4013fc <_vfiprintf_r+0x64>
  401ed0:	9801      	ldr	r0, [sp, #4]
  401ed2:	9900      	ldr	r1, [sp, #0]
  401ed4:	f8cd c020 	str.w	ip, [sp, #32]
  401ed8:	aa0d      	add	r2, sp, #52	; 0x34
  401eda:	f7ff fa21 	bl	401320 <__sprint_r.part.0>
  401ede:	2800      	cmp	r0, #0
  401ee0:	f47f ae1e 	bne.w	401b20 <_vfiprintf_r+0x788>
  401ee4:	990e      	ldr	r1, [sp, #56]	; 0x38
  401ee6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401ee8:	f8dd c020 	ldr.w	ip, [sp, #32]
  401eec:	1c48      	adds	r0, r1, #1
  401eee:	4654      	mov	r4, sl
  401ef0:	e591      	b.n	401a16 <_vfiprintf_r+0x67e>
  401ef2:	f048 0820 	orr.w	r8, r8, #32
  401ef6:	f10b 0001 	add.w	r0, fp, #1
  401efa:	f89b 3001 	ldrb.w	r3, [fp, #1]
  401efe:	f7ff bab4 	b.w	40146a <_vfiprintf_r+0xd2>
  401f02:	426d      	negs	r5, r5
  401f04:	9304      	str	r3, [sp, #16]
  401f06:	4658      	mov	r0, fp
  401f08:	f7ff bbc6 	b.w	401698 <_vfiprintf_r+0x300>
  401f0c:	9807      	ldr	r0, [sp, #28]
  401f0e:	9604      	str	r6, [sp, #16]
  401f10:	f7ff f9d8 	bl	4012c4 <strlen>
  401f14:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  401f18:	4681      	mov	r9, r0
  401f1a:	f04f 0c00 	mov.w	ip, #0
  401f1e:	f7ff bb6d 	b.w	4015fc <_vfiprintf_r+0x264>
  401f22:	9801      	ldr	r0, [sp, #4]
  401f24:	9900      	ldr	r1, [sp, #0]
  401f26:	f8cd c014 	str.w	ip, [sp, #20]
  401f2a:	aa0d      	add	r2, sp, #52	; 0x34
  401f2c:	f7ff f9f8 	bl	401320 <__sprint_r.part.0>
  401f30:	2800      	cmp	r0, #0
  401f32:	f47f adf5 	bne.w	401b20 <_vfiprintf_r+0x788>
  401f36:	990e      	ldr	r1, [sp, #56]	; 0x38
  401f38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f3a:	f8dd c014 	ldr.w	ip, [sp, #20]
  401f3e:	1c48      	adds	r0, r1, #1
  401f40:	4654      	mov	r4, sl
  401f42:	e58c      	b.n	401a5e <_vfiprintf_r+0x6c6>
  401f44:	990e      	ldr	r1, [sp, #56]	; 0x38
  401f46:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f48:	4f15      	ldr	r7, [pc, #84]	; (401fa0 <_vfiprintf_r+0xc08>)
  401f4a:	3101      	adds	r1, #1
  401f4c:	f7ff bb98 	b.w	401680 <_vfiprintf_r+0x2e8>
  401f50:	f1bc 0f06 	cmp.w	ip, #6
  401f54:	bf28      	it	cs
  401f56:	f04f 0c06 	movcs.w	ip, #6
  401f5a:	4b12      	ldr	r3, [pc, #72]	; (401fa4 <_vfiprintf_r+0xc0c>)
  401f5c:	9604      	str	r6, [sp, #16]
  401f5e:	46e1      	mov	r9, ip
  401f60:	ea2c 76ec 	bic.w	r6, ip, ip, asr #31
  401f64:	9307      	str	r3, [sp, #28]
  401f66:	e460      	b.n	40182a <_vfiprintf_r+0x492>
  401f68:	990e      	ldr	r1, [sp, #56]	; 0x38
  401f6a:	4f0d      	ldr	r7, [pc, #52]	; (401fa0 <_vfiprintf_r+0xc08>)
  401f6c:	f101 0e01 	add.w	lr, r1, #1
  401f70:	e618      	b.n	401ba4 <_vfiprintf_r+0x80c>
  401f72:	46e1      	mov	r9, ip
  401f74:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  401f78:	9604      	str	r6, [sp, #16]
  401f7a:	4684      	mov	ip, r0
  401f7c:	f7ff bb3e 	b.w	4015fc <_vfiprintf_r+0x264>
  401f80:	4686      	mov	lr, r0
  401f82:	e66b      	b.n	401c5c <_vfiprintf_r+0x8c4>
  401f84:	9a04      	ldr	r2, [sp, #16]
  401f86:	f89b 3001 	ldrb.w	r3, [fp, #1]
  401f8a:	6816      	ldr	r6, [r2, #0]
  401f8c:	3204      	adds	r2, #4
  401f8e:	2e00      	cmp	r6, #0
  401f90:	9204      	str	r2, [sp, #16]
  401f92:	f6bf aa6a 	bge.w	40146a <_vfiprintf_r+0xd2>
  401f96:	f04f 36ff 	mov.w	r6, #4294967295
  401f9a:	f7ff ba66 	b.w	40146a <_vfiprintf_r+0xd2>
  401f9e:	bf00      	nop
  401fa0:	00405a38 	.word	0x00405a38
  401fa4:	00405a30 	.word	0x00405a30

00401fa8 <__sbprintf>:
  401fa8:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
  401fac:	460c      	mov	r4, r1
  401fae:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  401fb2:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  401fb6:	69e7      	ldr	r7, [r4, #28]
  401fb8:	6e49      	ldr	r1, [r1, #100]	; 0x64
  401fba:	f8b4 900e 	ldrh.w	r9, [r4, #14]
  401fbe:	9119      	str	r1, [sp, #100]	; 0x64
  401fc0:	ad1a      	add	r5, sp, #104	; 0x68
  401fc2:	f44f 6680 	mov.w	r6, #1024	; 0x400
  401fc6:	f02e 0e02 	bic.w	lr, lr, #2
  401fca:	f04f 0c00 	mov.w	ip, #0
  401fce:	9707      	str	r7, [sp, #28]
  401fd0:	4669      	mov	r1, sp
  401fd2:	6a67      	ldr	r7, [r4, #36]	; 0x24
  401fd4:	9500      	str	r5, [sp, #0]
  401fd6:	9504      	str	r5, [sp, #16]
  401fd8:	9602      	str	r6, [sp, #8]
  401fda:	9605      	str	r6, [sp, #20]
  401fdc:	f8ad e00c 	strh.w	lr, [sp, #12]
  401fe0:	f8ad 900e 	strh.w	r9, [sp, #14]
  401fe4:	9709      	str	r7, [sp, #36]	; 0x24
  401fe6:	f8cd c018 	str.w	ip, [sp, #24]
  401fea:	4606      	mov	r6, r0
  401fec:	f7ff f9d4 	bl	401398 <_vfiprintf_r>
  401ff0:	1e05      	subs	r5, r0, #0
  401ff2:	db07      	blt.n	402004 <__sbprintf+0x5c>
  401ff4:	4630      	mov	r0, r6
  401ff6:	4669      	mov	r1, sp
  401ff8:	f000 fe0a 	bl	402c10 <_fflush_r>
  401ffc:	2800      	cmp	r0, #0
  401ffe:	bf18      	it	ne
  402000:	f04f 35ff 	movne.w	r5, #4294967295
  402004:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402008:	065b      	lsls	r3, r3, #25
  40200a:	d503      	bpl.n	402014 <__sbprintf+0x6c>
  40200c:	89a3      	ldrh	r3, [r4, #12]
  40200e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402012:	81a3      	strh	r3, [r4, #12]
  402014:	4628      	mov	r0, r5
  402016:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  40201a:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
  40201e:	bf00      	nop

00402020 <__svfiscanf_r>:
  402020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402024:	460c      	mov	r4, r1
  402026:	8989      	ldrh	r1, [r1, #12]
  402028:	b0db      	sub	sp, #364	; 0x16c
  40202a:	048d      	lsls	r5, r1, #18
  40202c:	9305      	str	r3, [sp, #20]
  40202e:	d406      	bmi.n	40203e <__svfiscanf_r+0x1e>
  402030:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402032:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
  402036:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40203a:	81a1      	strh	r1, [r4, #12]
  40203c:	6663      	str	r3, [r4, #100]	; 0x64
  40203e:	4617      	mov	r7, r2
  402040:	2300      	movs	r3, #0
  402042:	f817 1b01 	ldrb.w	r1, [r7], #1
  402046:	9306      	str	r3, [sp, #24]
  402048:	9304      	str	r3, [sp, #16]
  40204a:	461d      	mov	r5, r3
  40204c:	9308      	str	r3, [sp, #32]
  40204e:	f8df b3e8 	ldr.w	fp, [pc, #1000]	; 402438 <__svfiscanf_r+0x418>
  402052:	910d      	str	r1, [sp, #52]	; 0x34
  402054:	4680      	mov	r8, r0
  402056:	b339      	cbz	r1, 4020a8 <__svfiscanf_r+0x88>
  402058:	f8db 0000 	ldr.w	r0, [fp]
  40205c:	1843      	adds	r3, r0, r1
  40205e:	785b      	ldrb	r3, [r3, #1]
  402060:	f003 0308 	and.w	r3, r3, #8
  402064:	f003 09ff 	and.w	r9, r3, #255	; 0xff
  402068:	b313      	cbz	r3, 4020b0 <__svfiscanf_r+0x90>
  40206a:	6863      	ldr	r3, [r4, #4]
  40206c:	e00d      	b.n	40208a <__svfiscanf_r+0x6a>
  40206e:	6823      	ldr	r3, [r4, #0]
  402070:	f8db 1000 	ldr.w	r1, [fp]
  402074:	781a      	ldrb	r2, [r3, #0]
  402076:	440a      	add	r2, r1
  402078:	3301      	adds	r3, #1
  40207a:	7852      	ldrb	r2, [r2, #1]
  40207c:	0711      	lsls	r1, r2, #28
  40207e:	d50c      	bpl.n	40209a <__svfiscanf_r+0x7a>
  402080:	6862      	ldr	r2, [r4, #4]
  402082:	6023      	str	r3, [r4, #0]
  402084:	1e53      	subs	r3, r2, #1
  402086:	3501      	adds	r5, #1
  402088:	6063      	str	r3, [r4, #4]
  40208a:	2b00      	cmp	r3, #0
  40208c:	dcef      	bgt.n	40206e <__svfiscanf_r+0x4e>
  40208e:	4640      	mov	r0, r8
  402090:	4621      	mov	r1, r4
  402092:	f002 f96b 	bl	40436c <__srefill_r>
  402096:	2800      	cmp	r0, #0
  402098:	d0e9      	beq.n	40206e <__svfiscanf_r+0x4e>
  40209a:	463a      	mov	r2, r7
  40209c:	4617      	mov	r7, r2
  40209e:	f817 1b01 	ldrb.w	r1, [r7], #1
  4020a2:	910d      	str	r1, [sp, #52]	; 0x34
  4020a4:	2900      	cmp	r1, #0
  4020a6:	d1d7      	bne.n	402058 <__svfiscanf_r+0x38>
  4020a8:	9808      	ldr	r0, [sp, #32]
  4020aa:	b05b      	add	sp, #364	; 0x16c
  4020ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4020b0:	2925      	cmp	r1, #37	; 0x25
  4020b2:	f040 8087 	bne.w	4021c4 <__svfiscanf_r+0x1a4>
  4020b6:	7853      	ldrb	r3, [r2, #1]
  4020b8:	46ca      	mov	sl, r9
  4020ba:	1c79      	adds	r1, r7, #1
  4020bc:	2b78      	cmp	r3, #120	; 0x78
  4020be:	f200 814a 	bhi.w	402356 <__svfiscanf_r+0x336>
  4020c2:	e8df f013 	tbh	[pc, r3, lsl #1]
  4020c6:	0079      	.short	0x0079
  4020c8:	01480148 	.word	0x01480148
  4020cc:	01480148 	.word	0x01480148
  4020d0:	01480148 	.word	0x01480148
  4020d4:	01480148 	.word	0x01480148
  4020d8:	01480148 	.word	0x01480148
  4020dc:	01480148 	.word	0x01480148
  4020e0:	01480148 	.word	0x01480148
  4020e4:	01480148 	.word	0x01480148
  4020e8:	01480148 	.word	0x01480148
  4020ec:	01480148 	.word	0x01480148
  4020f0:	01480148 	.word	0x01480148
  4020f4:	01480148 	.word	0x01480148
  4020f8:	01480148 	.word	0x01480148
  4020fc:	01480148 	.word	0x01480148
  402100:	01480148 	.word	0x01480148
  402104:	01480148 	.word	0x01480148
  402108:	01480148 	.word	0x01480148
  40210c:	01480148 	.word	0x01480148
  402110:	0148007e 	.word	0x0148007e
  402114:	01480148 	.word	0x01480148
  402118:	01430148 	.word	0x01430148
  40211c:	01480148 	.word	0x01480148
  402120:	01480148 	.word	0x01480148
  402124:	013a0148 	.word	0x013a0148
  402128:	013a013a 	.word	0x013a013a
  40212c:	013a013a 	.word	0x013a013a
  402130:	013a013a 	.word	0x013a013a
  402134:	013a013a 	.word	0x013a013a
  402138:	0148013a 	.word	0x0148013a
  40213c:	01480148 	.word	0x01480148
  402140:	01480148 	.word	0x01480148
  402144:	01480148 	.word	0x01480148
  402148:	01480148 	.word	0x01480148
  40214c:	01360148 	.word	0x01360148
  402150:	01480148 	.word	0x01480148
  402154:	01480148 	.word	0x01480148
  402158:	01480148 	.word	0x01480148
  40215c:	01310148 	.word	0x01310148
  402160:	01480148 	.word	0x01480148
  402164:	0148012d 	.word	0x0148012d
  402168:	01480148 	.word	0x01480148
  40216c:	01480148 	.word	0x01480148
  402170:	01480148 	.word	0x01480148
  402174:	01290148 	.word	0x01290148
  402178:	01480148 	.word	0x01480148
  40217c:	01480120 	.word	0x01480120
  402180:	01480148 	.word	0x01480148
  402184:	01480148 	.word	0x01480148
  402188:	01480148 	.word	0x01480148
  40218c:	0112011a 	.word	0x0112011a
  402190:	01480148 	.word	0x01480148
  402194:	010d0148 	.word	0x010d0148
  402198:	01480105 	.word	0x01480105
  40219c:	00fd0148 	.word	0x00fd0148
  4021a0:	00e30148 	.word	0x00e30148
  4021a4:	00f300db 	.word	0x00f300db
  4021a8:	01480148 	.word	0x01480148
  4021ac:	014800be 	.word	0x014800be
  4021b0:	01480092 	.word	0x01480092
  4021b4:	01290148 	.word	0x01290148
  4021b8:	f04f 30ff 	mov.w	r0, #4294967295
  4021bc:	b05b      	add	sp, #364	; 0x16c
  4021be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4021c2:	460f      	mov	r7, r1
  4021c4:	6863      	ldr	r3, [r4, #4]
  4021c6:	2b00      	cmp	r3, #0
  4021c8:	f340 834f 	ble.w	40286a <__svfiscanf_r+0x84a>
  4021cc:	6823      	ldr	r3, [r4, #0]
  4021ce:	f817 2c01 	ldrb.w	r2, [r7, #-1]
  4021d2:	7819      	ldrb	r1, [r3, #0]
  4021d4:	4291      	cmp	r1, r2
  4021d6:	f47f af67 	bne.w	4020a8 <__svfiscanf_r+0x88>
  4021da:	6862      	ldr	r2, [r4, #4]
  4021dc:	3301      	adds	r3, #1
  4021de:	3a01      	subs	r2, #1
  4021e0:	6062      	str	r2, [r4, #4]
  4021e2:	6023      	str	r3, [r4, #0]
  4021e4:	3501      	adds	r5, #1
  4021e6:	463a      	mov	r2, r7
  4021e8:	e758      	b.n	40209c <__svfiscanf_r+0x7c>
  4021ea:	4b91      	ldr	r3, [pc, #580]	; (402430 <__svfiscanf_r+0x410>)
  4021ec:	9306      	str	r3, [sp, #24]
  4021ee:	230a      	movs	r3, #10
  4021f0:	9304      	str	r3, [sp, #16]
  4021f2:	460f      	mov	r7, r1
  4021f4:	4656      	mov	r6, sl
  4021f6:	2303      	movs	r3, #3
  4021f8:	6862      	ldr	r2, [r4, #4]
  4021fa:	2a00      	cmp	r2, #0
  4021fc:	dd28      	ble.n	402250 <__svfiscanf_r+0x230>
  4021fe:	f019 0f40 	tst.w	r9, #64	; 0x40
  402202:	f040 80b6 	bne.w	402372 <__svfiscanf_r+0x352>
  402206:	f8db 0000 	ldr.w	r0, [fp]
  40220a:	6821      	ldr	r1, [r4, #0]
  40220c:	e000      	b.n	402210 <__svfiscanf_r+0x1f0>
  40220e:	6021      	str	r1, [r4, #0]
  402210:	780a      	ldrb	r2, [r1, #0]
  402212:	4402      	add	r2, r0
  402214:	3101      	adds	r1, #1
  402216:	7852      	ldrb	r2, [r2, #1]
  402218:	0712      	lsls	r2, r2, #28
  40221a:	f140 80aa 	bpl.w	402372 <__svfiscanf_r+0x352>
  40221e:	6862      	ldr	r2, [r4, #4]
  402220:	3a01      	subs	r2, #1
  402222:	2a00      	cmp	r2, #0
  402224:	f105 0501 	add.w	r5, r5, #1
  402228:	6062      	str	r2, [r4, #4]
  40222a:	dcf0      	bgt.n	40220e <__svfiscanf_r+0x1ee>
  40222c:	4640      	mov	r0, r8
  40222e:	4621      	mov	r1, r4
  402230:	9303      	str	r3, [sp, #12]
  402232:	f002 f89b 	bl	40436c <__srefill_r>
  402236:	b998      	cbnz	r0, 402260 <__svfiscanf_r+0x240>
  402238:	f8db 0000 	ldr.w	r0, [fp]
  40223c:	6821      	ldr	r1, [r4, #0]
  40223e:	9b03      	ldr	r3, [sp, #12]
  402240:	e7e6      	b.n	402210 <__svfiscanf_r+0x1f0>
  402242:	6862      	ldr	r2, [r4, #4]
  402244:	2a00      	cmp	r2, #0
  402246:	460f      	mov	r7, r1
  402248:	4656      	mov	r6, sl
  40224a:	f04f 0302 	mov.w	r3, #2
  40224e:	dcd6      	bgt.n	4021fe <__svfiscanf_r+0x1de>
  402250:	4640      	mov	r0, r8
  402252:	4621      	mov	r1, r4
  402254:	9303      	str	r3, [sp, #12]
  402256:	f002 f889 	bl	40436c <__srefill_r>
  40225a:	9b03      	ldr	r3, [sp, #12]
  40225c:	2800      	cmp	r0, #0
  40225e:	d0ce      	beq.n	4021fe <__svfiscanf_r+0x1de>
  402260:	9a08      	ldr	r2, [sp, #32]
  402262:	2a00      	cmp	r2, #0
  402264:	d0a8      	beq.n	4021b8 <__svfiscanf_r+0x198>
  402266:	89a3      	ldrh	r3, [r4, #12]
  402268:	f013 0f40 	tst.w	r3, #64	; 0x40
  40226c:	4613      	mov	r3, r2
  40226e:	bf18      	it	ne
  402270:	f04f 33ff 	movne.w	r3, #4294967295
  402274:	4618      	mov	r0, r3
  402276:	b05b      	add	sp, #364	; 0x16c
  402278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40227c:	460f      	mov	r7, r1
  40227e:	4b6c      	ldr	r3, [pc, #432]	; (402430 <__svfiscanf_r+0x410>)
  402280:	9306      	str	r3, [sp, #24]
  402282:	2308      	movs	r3, #8
  402284:	9304      	str	r3, [sp, #16]
  402286:	4656      	mov	r6, sl
  402288:	2303      	movs	r3, #3
  40228a:	e7b5      	b.n	4021f8 <__svfiscanf_r+0x1d8>
  40228c:	f019 0f10 	tst.w	r9, #16
  402290:	460f      	mov	r7, r1
  402292:	f47f af02 	bne.w	40209a <__svfiscanf_r+0x7a>
  402296:	f019 0f04 	tst.w	r9, #4
  40229a:	f000 8300 	beq.w	40289e <__svfiscanf_r+0x87e>
  40229e:	9a05      	ldr	r2, [sp, #20]
  4022a0:	6813      	ldr	r3, [r2, #0]
  4022a2:	3204      	adds	r2, #4
  4022a4:	9205      	str	r2, [sp, #20]
  4022a6:	801d      	strh	r5, [r3, #0]
  4022a8:	463a      	mov	r2, r7
  4022aa:	e6f7      	b.n	40209c <__svfiscanf_r+0x7c>
  4022ac:	460f      	mov	r7, r1
  4022ae:	f449 7908 	orr.w	r9, r9, #544	; 0x220
  4022b2:	4b5f      	ldr	r3, [pc, #380]	; (402430 <__svfiscanf_r+0x410>)
  4022b4:	9306      	str	r3, [sp, #24]
  4022b6:	2310      	movs	r3, #16
  4022b8:	9304      	str	r3, [sp, #16]
  4022ba:	4656      	mov	r6, sl
  4022bc:	2303      	movs	r3, #3
  4022be:	e79b      	b.n	4021f8 <__svfiscanf_r+0x1d8>
  4022c0:	787b      	ldrb	r3, [r7, #1]
  4022c2:	2b6c      	cmp	r3, #108	; 0x6c
  4022c4:	f000 82e6 	beq.w	402894 <__svfiscanf_r+0x874>
  4022c8:	f049 0901 	orr.w	r9, r9, #1
  4022cc:	460f      	mov	r7, r1
  4022ce:	e6f4      	b.n	4020ba <__svfiscanf_r+0x9a>
  4022d0:	4b58      	ldr	r3, [pc, #352]	; (402434 <__svfiscanf_r+0x414>)
  4022d2:	9306      	str	r3, [sp, #24]
  4022d4:	2300      	movs	r3, #0
  4022d6:	9304      	str	r3, [sp, #16]
  4022d8:	460f      	mov	r7, r1
  4022da:	4656      	mov	r6, sl
  4022dc:	2303      	movs	r3, #3
  4022de:	e78b      	b.n	4021f8 <__svfiscanf_r+0x1d8>
  4022e0:	787b      	ldrb	r3, [r7, #1]
  4022e2:	f049 0904 	orr.w	r9, r9, #4
  4022e6:	460f      	mov	r7, r1
  4022e8:	e6e7      	b.n	4020ba <__svfiscanf_r+0x9a>
  4022ea:	460f      	mov	r7, r1
  4022ec:	4b51      	ldr	r3, [pc, #324]	; (402434 <__svfiscanf_r+0x414>)
  4022ee:	9306      	str	r3, [sp, #24]
  4022f0:	230a      	movs	r3, #10
  4022f2:	9304      	str	r3, [sp, #16]
  4022f4:	4656      	mov	r6, sl
  4022f6:	2303      	movs	r3, #3
  4022f8:	e77e      	b.n	4021f8 <__svfiscanf_r+0x1d8>
  4022fa:	460f      	mov	r7, r1
  4022fc:	f049 0940 	orr.w	r9, r9, #64	; 0x40
  402300:	4656      	mov	r6, sl
  402302:	2300      	movs	r3, #0
  402304:	e778      	b.n	4021f8 <__svfiscanf_r+0x1d8>
  402306:	a81a      	add	r0, sp, #104	; 0x68
  402308:	f002 f8ca 	bl	4044a0 <__sccl>
  40230c:	f049 0940 	orr.w	r9, r9, #64	; 0x40
  402310:	4607      	mov	r7, r0
  402312:	4656      	mov	r6, sl
  402314:	2301      	movs	r3, #1
  402316:	e76f      	b.n	4021f8 <__svfiscanf_r+0x1d8>
  402318:	460f      	mov	r7, r1
  40231a:	f449 7900 	orr.w	r9, r9, #512	; 0x200
  40231e:	e7c8      	b.n	4022b2 <__svfiscanf_r+0x292>
  402320:	460f      	mov	r7, r1
  402322:	f049 0901 	orr.w	r9, r9, #1
  402326:	e7aa      	b.n	40227e <__svfiscanf_r+0x25e>
  402328:	787b      	ldrb	r3, [r7, #1]
  40232a:	f049 0902 	orr.w	r9, r9, #2
  40232e:	460f      	mov	r7, r1
  402330:	e6c3      	b.n	4020ba <__svfiscanf_r+0x9a>
  402332:	460f      	mov	r7, r1
  402334:	f049 0901 	orr.w	r9, r9, #1
  402338:	e7d8      	b.n	4022ec <__svfiscanf_r+0x2cc>
  40233a:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
  40233e:	eb03 0a4a 	add.w	sl, r3, sl, lsl #1
  402342:	f1aa 0a30 	sub.w	sl, sl, #48	; 0x30
  402346:	787b      	ldrb	r3, [r7, #1]
  402348:	460f      	mov	r7, r1
  40234a:	e6b6      	b.n	4020ba <__svfiscanf_r+0x9a>
  40234c:	787b      	ldrb	r3, [r7, #1]
  40234e:	f049 0910 	orr.w	r9, r9, #16
  402352:	460f      	mov	r7, r1
  402354:	e6b1      	b.n	4020ba <__svfiscanf_r+0x9a>
  402356:	4403      	add	r3, r0
  402358:	460f      	mov	r7, r1
  40235a:	785b      	ldrb	r3, [r3, #1]
  40235c:	f003 0303 	and.w	r3, r3, #3
  402360:	2b01      	cmp	r3, #1
  402362:	d0e7      	beq.n	402334 <__svfiscanf_r+0x314>
  402364:	4b33      	ldr	r3, [pc, #204]	; (402434 <__svfiscanf_r+0x414>)
  402366:	9306      	str	r3, [sp, #24]
  402368:	230a      	movs	r3, #10
  40236a:	9304      	str	r3, [sp, #16]
  40236c:	4656      	mov	r6, sl
  40236e:	2303      	movs	r3, #3
  402370:	e742      	b.n	4021f8 <__svfiscanf_r+0x1d8>
  402372:	2b02      	cmp	r3, #2
  402374:	f000 8115 	beq.w	4025a2 <__svfiscanf_r+0x582>
  402378:	2b03      	cmp	r3, #3
  40237a:	d05f      	beq.n	40243c <__svfiscanf_r+0x41c>
  40237c:	2b01      	cmp	r3, #1
  40237e:	d025      	beq.n	4023cc <__svfiscanf_r+0x3ac>
  402380:	f1ba 0f00 	cmp.w	sl, #0
  402384:	bf14      	ite	ne
  402386:	4656      	movne	r6, sl
  402388:	2601      	moveq	r6, #1
  40238a:	f019 0301 	ands.w	r3, r9, #1
  40238e:	f040 81d3 	bne.w	402738 <__svfiscanf_r+0x718>
  402392:	f019 0f10 	tst.w	r9, #16
  402396:	f000 8252 	beq.w	40283e <__svfiscanf_r+0x81e>
  40239a:	4699      	mov	r9, r3
  40239c:	e008      	b.n	4023b0 <__svfiscanf_r+0x390>
  40239e:	4413      	add	r3, r2
  4023a0:	6023      	str	r3, [r4, #0]
  4023a2:	4491      	add	r9, r2
  4023a4:	1ab6      	subs	r6, r6, r2
  4023a6:	f001 ffe1 	bl	40436c <__srefill_r>
  4023aa:	2800      	cmp	r0, #0
  4023ac:	f040 8241 	bne.w	402832 <__svfiscanf_r+0x812>
  4023b0:	6862      	ldr	r2, [r4, #4]
  4023b2:	6823      	ldr	r3, [r4, #0]
  4023b4:	42b2      	cmp	r2, r6
  4023b6:	4640      	mov	r0, r8
  4023b8:	4621      	mov	r1, r4
  4023ba:	dbf0      	blt.n	40239e <__svfiscanf_r+0x37e>
  4023bc:	1b92      	subs	r2, r2, r6
  4023be:	4433      	add	r3, r6
  4023c0:	6062      	str	r2, [r4, #4]
  4023c2:	44b1      	add	r9, r6
  4023c4:	6023      	str	r3, [r4, #0]
  4023c6:	444d      	add	r5, r9
  4023c8:	463a      	mov	r2, r7
  4023ca:	e667      	b.n	40209c <__svfiscanf_r+0x7c>
  4023cc:	f1ba 0f00 	cmp.w	sl, #0
  4023d0:	bf14      	ite	ne
  4023d2:	4656      	movne	r6, sl
  4023d4:	f04f 36ff 	moveq.w	r6, #4294967295
  4023d8:	f019 0f10 	tst.w	r9, #16
  4023dc:	f000 810f 	beq.w	4025fe <__svfiscanf_r+0x5de>
  4023e0:	aa1a      	add	r2, sp, #104	; 0x68
  4023e2:	6821      	ldr	r1, [r4, #0]
  4023e4:	f04f 0900 	mov.w	r9, #0
  4023e8:	4692      	mov	sl, r2
  4023ea:	780b      	ldrb	r3, [r1, #0]
  4023ec:	f81a 3003 	ldrb.w	r3, [sl, r3]
  4023f0:	3101      	adds	r1, #1
  4023f2:	b1b3      	cbz	r3, 402422 <__svfiscanf_r+0x402>
  4023f4:	6863      	ldr	r3, [r4, #4]
  4023f6:	6021      	str	r1, [r4, #0]
  4023f8:	f109 0901 	add.w	r9, r9, #1
  4023fc:	3b01      	subs	r3, #1
  4023fe:	454e      	cmp	r6, r9
  402400:	6063      	str	r3, [r4, #4]
  402402:	d0e0      	beq.n	4023c6 <__svfiscanf_r+0x3a6>
  402404:	2b00      	cmp	r3, #0
  402406:	dcf0      	bgt.n	4023ea <__svfiscanf_r+0x3ca>
  402408:	4640      	mov	r0, r8
  40240a:	4621      	mov	r1, r4
  40240c:	f001 ffae 	bl	40436c <__srefill_r>
  402410:	2800      	cmp	r0, #0
  402412:	d1d8      	bne.n	4023c6 <__svfiscanf_r+0x3a6>
  402414:	6821      	ldr	r1, [r4, #0]
  402416:	780b      	ldrb	r3, [r1, #0]
  402418:	f81a 3003 	ldrb.w	r3, [sl, r3]
  40241c:	3101      	adds	r1, #1
  40241e:	2b00      	cmp	r3, #0
  402420:	d1e8      	bne.n	4023f4 <__svfiscanf_r+0x3d4>
  402422:	f1b9 0f00 	cmp.w	r9, #0
  402426:	f43f ae3f 	beq.w	4020a8 <__svfiscanf_r+0x88>
  40242a:	444d      	add	r5, r9
  40242c:	e7cc      	b.n	4023c8 <__svfiscanf_r+0x3a8>
  40242e:	bf00      	nop
  402430:	00404885 	.word	0x00404885
  402434:	0040459d 	.word	0x0040459d
  402438:	20000434 	.word	0x20000434
  40243c:	f10a 33ff 	add.w	r3, sl, #4294967295
  402440:	2b26      	cmp	r3, #38	; 0x26
  402442:	bf8c      	ite	hi
  402444:	f1aa 0327 	subhi.w	r3, sl, #39	; 0x27
  402448:	2300      	movls	r3, #0
  40244a:	f04f 0200 	mov.w	r2, #0
  40244e:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
  402452:	9307      	str	r3, [sp, #28]
  402454:	462b      	mov	r3, r5
  402456:	9d04      	ldr	r5, [sp, #16]
  402458:	9203      	str	r2, [sp, #12]
  40245a:	bf88      	it	hi
  40245c:	2627      	movhi	r6, #39	; 0x27
  40245e:	f449 6958 	orr.w	r9, r9, #3456	; 0xd80
  402462:	46e2      	mov	sl, ip
  402464:	463a      	mov	r2, r7
  402466:	6820      	ldr	r0, [r4, #0]
  402468:	f890 e000 	ldrb.w	lr, [r0]
  40246c:	f1ae 012b 	sub.w	r1, lr, #43	; 0x2b
  402470:	294d      	cmp	r1, #77	; 0x4d
  402472:	d83f      	bhi.n	4024f4 <__svfiscanf_r+0x4d4>
  402474:	e8df f001 	tbb	[pc, r1]
  402478:	3e8f3e8f 	.word	0x3e8f3e8f
  40247c:	6060663e 	.word	0x6060663e
  402480:	60606060 	.word	0x60606060
  402484:	3e5a5a60 	.word	0x3e5a5a60
  402488:	3e3e3e3e 	.word	0x3e3e3e3e
  40248c:	55553e3e 	.word	0x55553e3e
  402490:	55555555 	.word	0x55555555
  402494:	3e3e3e3e 	.word	0x3e3e3e3e
  402498:	3e3e3e3e 	.word	0x3e3e3e3e
  40249c:	3e3e3e3e 	.word	0x3e3e3e3e
  4024a0:	3e3e3e3e 	.word	0x3e3e3e3e
  4024a4:	3e3e273e 	.word	0x3e3e273e
  4024a8:	3e3e3e3e 	.word	0x3e3e3e3e
  4024ac:	55553e3e 	.word	0x55553e3e
  4024b0:	55555555 	.word	0x55555555
  4024b4:	3e3e3e3e 	.word	0x3e3e3e3e
  4024b8:	3e3e3e3e 	.word	0x3e3e3e3e
  4024bc:	3e3e3e3e 	.word	0x3e3e3e3e
  4024c0:	3e3e3e3e 	.word	0x3e3e3e3e
  4024c4:	273e      	.short	0x273e
  4024c6:	f409 61c0 	and.w	r1, r9, #1536	; 0x600
  4024ca:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  4024ce:	d111      	bne.n	4024f4 <__svfiscanf_r+0x4d4>
  4024d0:	f429 7900 	bic.w	r9, r9, #512	; 0x200
  4024d4:	f449 69a0 	orr.w	r9, r9, #1280	; 0x500
  4024d8:	2510      	movs	r5, #16
  4024da:	6861      	ldr	r1, [r4, #4]
  4024dc:	f88a e000 	strb.w	lr, [sl]
  4024e0:	3901      	subs	r1, #1
  4024e2:	2900      	cmp	r1, #0
  4024e4:	f10a 0a01 	add.w	sl, sl, #1
  4024e8:	6061      	str	r1, [r4, #4]
  4024ea:	dd45      	ble.n	402578 <__svfiscanf_r+0x558>
  4024ec:	3001      	adds	r0, #1
  4024ee:	6020      	str	r0, [r4, #0]
  4024f0:	3e01      	subs	r6, #1
  4024f2:	d1b8      	bne.n	402466 <__svfiscanf_r+0x446>
  4024f4:	f419 7f80 	tst.w	r9, #256	; 0x100
  4024f8:	9504      	str	r5, [sp, #16]
  4024fa:	4617      	mov	r7, r2
  4024fc:	461d      	mov	r5, r3
  4024fe:	d005      	beq.n	40250c <__svfiscanf_r+0x4ec>
  402500:	45e2      	cmp	sl, ip
  402502:	f200 81ba 	bhi.w	40287a <__svfiscanf_r+0x85a>
  402506:	45e2      	cmp	sl, ip
  402508:	f43f adce 	beq.w	4020a8 <__svfiscanf_r+0x88>
  40250c:	f019 0610 	ands.w	r6, r9, #16
  402510:	f000 80fa 	beq.w	402708 <__svfiscanf_r+0x6e8>
  402514:	9b03      	ldr	r3, [sp, #12]
  402516:	ebcc 0c0a 	rsb	ip, ip, sl
  40251a:	449c      	add	ip, r3
  40251c:	4465      	add	r5, ip
  40251e:	463a      	mov	r2, r7
  402520:	e5bc      	b.n	40209c <__svfiscanf_r+0x7c>
  402522:	2d0a      	cmp	r5, #10
  402524:	dde6      	ble.n	4024f4 <__svfiscanf_r+0x4d4>
  402526:	f429 6938 	bic.w	r9, r9, #2944	; 0xb80
  40252a:	e7d6      	b.n	4024da <__svfiscanf_r+0x4ba>
  40252c:	49ad      	ldr	r1, [pc, #692]	; (4027e4 <__svfiscanf_r+0x7c4>)
  40252e:	f931 5015 	ldrsh.w	r5, [r1, r5, lsl #1]
  402532:	2d08      	cmp	r5, #8
  402534:	dcf7      	bgt.n	402526 <__svfiscanf_r+0x506>
  402536:	e7dd      	b.n	4024f4 <__svfiscanf_r+0x4d4>
  402538:	49aa      	ldr	r1, [pc, #680]	; (4027e4 <__svfiscanf_r+0x7c4>)
  40253a:	f429 6938 	bic.w	r9, r9, #2944	; 0xb80
  40253e:	f931 5015 	ldrsh.w	r5, [r1, r5, lsl #1]
  402542:	e7ca      	b.n	4024da <__svfiscanf_r+0x4ba>
  402544:	f419 6f00 	tst.w	r9, #2048	; 0x800
  402548:	d0c7      	beq.n	4024da <__svfiscanf_r+0x4ba>
  40254a:	b915      	cbnz	r5, 402552 <__svfiscanf_r+0x532>
  40254c:	f449 7900 	orr.w	r9, r9, #512	; 0x200
  402550:	2508      	movs	r5, #8
  402552:	f419 6f80 	tst.w	r9, #1024	; 0x400
  402556:	f040 813b 	bne.w	4027d0 <__svfiscanf_r+0x7b0>
  40255a:	9907      	ldr	r1, [sp, #28]
  40255c:	f429 7960 	bic.w	r9, r9, #896	; 0x380
  402560:	b111      	cbz	r1, 402568 <__svfiscanf_r+0x548>
  402562:	3901      	subs	r1, #1
  402564:	9107      	str	r1, [sp, #28]
  402566:	3601      	adds	r6, #1
  402568:	9903      	ldr	r1, [sp, #12]
  40256a:	3101      	adds	r1, #1
  40256c:	9103      	str	r1, [sp, #12]
  40256e:	6861      	ldr	r1, [r4, #4]
  402570:	3901      	subs	r1, #1
  402572:	2900      	cmp	r1, #0
  402574:	6061      	str	r1, [r4, #4]
  402576:	dcb9      	bgt.n	4024ec <__svfiscanf_r+0x4cc>
  402578:	4640      	mov	r0, r8
  40257a:	4621      	mov	r1, r4
  40257c:	920a      	str	r2, [sp, #40]	; 0x28
  40257e:	9309      	str	r3, [sp, #36]	; 0x24
  402580:	f8cd c010 	str.w	ip, [sp, #16]
  402584:	f001 fef2 	bl	40436c <__srefill_r>
  402588:	f8dd c010 	ldr.w	ip, [sp, #16]
  40258c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40258e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402590:	2800      	cmp	r0, #0
  402592:	d0ad      	beq.n	4024f0 <__svfiscanf_r+0x4d0>
  402594:	e7ae      	b.n	4024f4 <__svfiscanf_r+0x4d4>
  402596:	f019 0f80 	tst.w	r9, #128	; 0x80
  40259a:	d0ab      	beq.n	4024f4 <__svfiscanf_r+0x4d4>
  40259c:	f029 0980 	bic.w	r9, r9, #128	; 0x80
  4025a0:	e79b      	b.n	4024da <__svfiscanf_r+0x4ba>
  4025a2:	f1ba 0f00 	cmp.w	sl, #0
  4025a6:	bf14      	ite	ne
  4025a8:	4656      	movne	r6, sl
  4025aa:	f04f 36ff 	moveq.w	r6, #4294967295
  4025ae:	f019 0301 	ands.w	r3, r9, #1
  4025b2:	f040 8083 	bne.w	4026bc <__svfiscanf_r+0x69c>
  4025b6:	f019 0f10 	tst.w	r9, #16
  4025ba:	d050      	beq.n	40265e <__svfiscanf_r+0x63e>
  4025bc:	f8db 1000 	ldr.w	r1, [fp]
  4025c0:	6822      	ldr	r2, [r4, #0]
  4025c2:	4699      	mov	r9, r3
  4025c4:	7813      	ldrb	r3, [r2, #0]
  4025c6:	440b      	add	r3, r1
  4025c8:	3201      	adds	r2, #1
  4025ca:	785b      	ldrb	r3, [r3, #1]
  4025cc:	0718      	lsls	r0, r3, #28
  4025ce:	f53f aefa 	bmi.w	4023c6 <__svfiscanf_r+0x3a6>
  4025d2:	6863      	ldr	r3, [r4, #4]
  4025d4:	6022      	str	r2, [r4, #0]
  4025d6:	f109 0901 	add.w	r9, r9, #1
  4025da:	3b01      	subs	r3, #1
  4025dc:	454e      	cmp	r6, r9
  4025de:	6063      	str	r3, [r4, #4]
  4025e0:	f43f aef1 	beq.w	4023c6 <__svfiscanf_r+0x3a6>
  4025e4:	2b00      	cmp	r3, #0
  4025e6:	dced      	bgt.n	4025c4 <__svfiscanf_r+0x5a4>
  4025e8:	4640      	mov	r0, r8
  4025ea:	4621      	mov	r1, r4
  4025ec:	f001 febe 	bl	40436c <__srefill_r>
  4025f0:	2800      	cmp	r0, #0
  4025f2:	f47f aee8 	bne.w	4023c6 <__svfiscanf_r+0x3a6>
  4025f6:	f8db 1000 	ldr.w	r1, [fp]
  4025fa:	6822      	ldr	r2, [r4, #0]
  4025fc:	e7e2      	b.n	4025c4 <__svfiscanf_r+0x5a4>
  4025fe:	9a05      	ldr	r2, [sp, #20]
  402600:	4613      	mov	r3, r2
  402602:	f8d2 9000 	ldr.w	r9, [r2]
  402606:	3304      	adds	r3, #4
  402608:	9305      	str	r3, [sp, #20]
  40260a:	46ca      	mov	sl, r9
  40260c:	aa1a      	add	r2, sp, #104	; 0x68
  40260e:	6823      	ldr	r3, [r4, #0]
  402610:	7819      	ldrb	r1, [r3, #0]
  402612:	5c51      	ldrb	r1, [r2, r1]
  402614:	1c58      	adds	r0, r3, #1
  402616:	b1b1      	cbz	r1, 402646 <__svfiscanf_r+0x626>
  402618:	6861      	ldr	r1, [r4, #4]
  40261a:	6020      	str	r0, [r4, #0]
  40261c:	3901      	subs	r1, #1
  40261e:	6061      	str	r1, [r4, #4]
  402620:	781b      	ldrb	r3, [r3, #0]
  402622:	f80a 3b01 	strb.w	r3, [sl], #1
  402626:	3e01      	subs	r6, #1
  402628:	d00d      	beq.n	402646 <__svfiscanf_r+0x626>
  40262a:	6863      	ldr	r3, [r4, #4]
  40262c:	2b00      	cmp	r3, #0
  40262e:	dcee      	bgt.n	40260e <__svfiscanf_r+0x5ee>
  402630:	4640      	mov	r0, r8
  402632:	4621      	mov	r1, r4
  402634:	9203      	str	r2, [sp, #12]
  402636:	f001 fe99 	bl	40436c <__srefill_r>
  40263a:	9a03      	ldr	r2, [sp, #12]
  40263c:	2800      	cmp	r0, #0
  40263e:	d0e6      	beq.n	40260e <__svfiscanf_r+0x5ee>
  402640:	45ca      	cmp	sl, r9
  402642:	f43f ae0d 	beq.w	402260 <__svfiscanf_r+0x240>
  402646:	ebba 0909 	subs.w	r9, sl, r9
  40264a:	f43f ad2d 	beq.w	4020a8 <__svfiscanf_r+0x88>
  40264e:	9b08      	ldr	r3, [sp, #32]
  402650:	2200      	movs	r2, #0
  402652:	3301      	adds	r3, #1
  402654:	9308      	str	r3, [sp, #32]
  402656:	f88a 2000 	strb.w	r2, [sl]
  40265a:	444d      	add	r5, r9
  40265c:	e6b4      	b.n	4023c8 <__svfiscanf_r+0x3a8>
  40265e:	9a05      	ldr	r2, [sp, #20]
  402660:	4613      	mov	r3, r2
  402662:	f8d2 9000 	ldr.w	r9, [r2]
  402666:	3304      	adds	r3, #4
  402668:	9303      	str	r3, [sp, #12]
  40266a:	46ca      	mov	sl, r9
  40266c:	6821      	ldr	r1, [r4, #0]
  40266e:	f8db 2000 	ldr.w	r2, [fp]
  402672:	780b      	ldrb	r3, [r1, #0]
  402674:	4413      	add	r3, r2
  402676:	1c4a      	adds	r2, r1, #1
  402678:	785b      	ldrb	r3, [r3, #1]
  40267a:	071b      	lsls	r3, r3, #28
  40267c:	d411      	bmi.n	4026a2 <__svfiscanf_r+0x682>
  40267e:	6863      	ldr	r3, [r4, #4]
  402680:	6022      	str	r2, [r4, #0]
  402682:	3b01      	subs	r3, #1
  402684:	6063      	str	r3, [r4, #4]
  402686:	780b      	ldrb	r3, [r1, #0]
  402688:	f80a 3b01 	strb.w	r3, [sl], #1
  40268c:	3e01      	subs	r6, #1
  40268e:	d008      	beq.n	4026a2 <__svfiscanf_r+0x682>
  402690:	6863      	ldr	r3, [r4, #4]
  402692:	2b00      	cmp	r3, #0
  402694:	dcea      	bgt.n	40266c <__svfiscanf_r+0x64c>
  402696:	4640      	mov	r0, r8
  402698:	4621      	mov	r1, r4
  40269a:	f001 fe67 	bl	40436c <__srefill_r>
  40269e:	2800      	cmp	r0, #0
  4026a0:	d0e4      	beq.n	40266c <__svfiscanf_r+0x64c>
  4026a2:	9a08      	ldr	r2, [sp, #32]
  4026a4:	3201      	adds	r2, #1
  4026a6:	ebc9 090a 	rsb	r9, r9, sl
  4026aa:	2300      	movs	r3, #0
  4026ac:	9208      	str	r2, [sp, #32]
  4026ae:	9a03      	ldr	r2, [sp, #12]
  4026b0:	9205      	str	r2, [sp, #20]
  4026b2:	444d      	add	r5, r9
  4026b4:	f88a 3000 	strb.w	r3, [sl]
  4026b8:	463a      	mov	r2, r7
  4026ba:	e4ef      	b.n	40209c <__svfiscanf_r+0x7c>
  4026bc:	ab0e      	add	r3, sp, #56	; 0x38
  4026be:	4618      	mov	r0, r3
  4026c0:	2100      	movs	r1, #0
  4026c2:	2208      	movs	r2, #8
  4026c4:	9309      	str	r3, [sp, #36]	; 0x24
  4026c6:	f7fe fcf5 	bl	4010b4 <memset>
  4026ca:	f019 0310 	ands.w	r3, r9, #16
  4026ce:	9303      	str	r3, [sp, #12]
  4026d0:	f000 8081 	beq.w	4027d6 <__svfiscanf_r+0x7b6>
  4026d4:	f10d 0a34 	add.w	sl, sp, #52	; 0x34
  4026d8:	2200      	movs	r2, #0
  4026da:	4691      	mov	r9, r2
  4026dc:	6823      	ldr	r3, [r4, #0]
  4026de:	f8db 2000 	ldr.w	r2, [fp]
  4026e2:	781b      	ldrb	r3, [r3, #0]
  4026e4:	4413      	add	r3, r2
  4026e6:	785b      	ldrb	r3, [r3, #1]
  4026e8:	071b      	lsls	r3, r3, #28
  4026ea:	d402      	bmi.n	4026f2 <__svfiscanf_r+0x6d2>
  4026ec:	2e00      	cmp	r6, #0
  4026ee:	f040 810b 	bne.w	402908 <__svfiscanf_r+0x8e8>
  4026f2:	9b03      	ldr	r3, [sp, #12]
  4026f4:	2b00      	cmp	r3, #0
  4026f6:	f47f acd0 	bne.w	40209a <__svfiscanf_r+0x7a>
  4026fa:	f8ca 3000 	str.w	r3, [sl]
  4026fe:	9b08      	ldr	r3, [sp, #32]
  402700:	3301      	adds	r3, #1
  402702:	9308      	str	r3, [sp, #32]
  402704:	463a      	mov	r2, r7
  402706:	e4c9      	b.n	40209c <__svfiscanf_r+0x7c>
  402708:	4632      	mov	r2, r6
  40270a:	4661      	mov	r1, ip
  40270c:	f88a 6000 	strb.w	r6, [sl]
  402710:	4640      	mov	r0, r8
  402712:	9b04      	ldr	r3, [sp, #16]
  402714:	9e06      	ldr	r6, [sp, #24]
  402716:	f8cd c01c 	str.w	ip, [sp, #28]
  40271a:	47b0      	blx	r6
  40271c:	f019 0f20 	tst.w	r9, #32
  402720:	f8dd c01c 	ldr.w	ip, [sp, #28]
  402724:	d075      	beq.n	402812 <__svfiscanf_r+0x7f2>
  402726:	9a05      	ldr	r2, [sp, #20]
  402728:	6813      	ldr	r3, [r2, #0]
  40272a:	3204      	adds	r2, #4
  40272c:	9205      	str	r2, [sp, #20]
  40272e:	6018      	str	r0, [r3, #0]
  402730:	9b08      	ldr	r3, [sp, #32]
  402732:	3301      	adds	r3, #1
  402734:	9308      	str	r3, [sp, #32]
  402736:	e6ed      	b.n	402514 <__svfiscanf_r+0x4f4>
  402738:	ab0e      	add	r3, sp, #56	; 0x38
  40273a:	4618      	mov	r0, r3
  40273c:	2100      	movs	r1, #0
  40273e:	2208      	movs	r2, #8
  402740:	9309      	str	r3, [sp, #36]	; 0x24
  402742:	f7fe fcb7 	bl	4010b4 <memset>
  402746:	f019 0310 	ands.w	r3, r9, #16
  40274a:	930a      	str	r3, [sp, #40]	; 0x28
  40274c:	d05a      	beq.n	402804 <__svfiscanf_r+0x7e4>
  40274e:	2300      	movs	r3, #0
  402750:	4619      	mov	r1, r3
  402752:	9503      	str	r5, [sp, #12]
  402754:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402756:	970b      	str	r7, [sp, #44]	; 0x2c
  402758:	f04f 0a00 	mov.w	sl, #0
  40275c:	f10d 0940 	add.w	r9, sp, #64	; 0x40
  402760:	460f      	mov	r7, r1
  402762:	f8cd 801c 	str.w	r8, [sp, #28]
  402766:	f000 ff61 	bl	40362c <__locale_mb_cur_max>
  40276a:	4550      	cmp	r0, sl
  40276c:	f43f ad78 	beq.w	402260 <__svfiscanf_r+0x240>
  402770:	e894 000a 	ldmia.w	r4, {r1, r3}
  402774:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402776:	f811 eb01 	ldrb.w	lr, [r1], #1
  40277a:	6021      	str	r1, [r4, #0]
  40277c:	3b01      	subs	r3, #1
  40277e:	f10a 0801 	add.w	r8, sl, #1
  402782:	9200      	str	r2, [sp, #0]
  402784:	4639      	mov	r1, r7
  402786:	6063      	str	r3, [r4, #4]
  402788:	9807      	ldr	r0, [sp, #28]
  40278a:	f809 e00a 	strb.w	lr, [r9, sl]
  40278e:	4643      	mov	r3, r8
  402790:	464a      	mov	r2, r9
  402792:	f001 fa5b 	bl	403c4c <_mbrtowc_r>
  402796:	1c41      	adds	r1, r0, #1
  402798:	f43f ad62 	beq.w	402260 <__svfiscanf_r+0x240>
  40279c:	2800      	cmp	r0, #0
  40279e:	d141      	bne.n	402824 <__svfiscanf_r+0x804>
  4027a0:	b905      	cbnz	r5, 4027a4 <__svfiscanf_r+0x784>
  4027a2:	603d      	str	r5, [r7, #0]
  4027a4:	9b03      	ldr	r3, [sp, #12]
  4027a6:	4443      	add	r3, r8
  4027a8:	9303      	str	r3, [sp, #12]
  4027aa:	3e01      	subs	r6, #1
  4027ac:	2d00      	cmp	r5, #0
  4027ae:	d13d      	bne.n	40282c <__svfiscanf_r+0x80c>
  4027b0:	3704      	adds	r7, #4
  4027b2:	46aa      	mov	sl, r5
  4027b4:	6863      	ldr	r3, [r4, #4]
  4027b6:	2b00      	cmp	r3, #0
  4027b8:	dd16      	ble.n	4027e8 <__svfiscanf_r+0x7c8>
  4027ba:	2e00      	cmp	r6, #0
  4027bc:	d1d3      	bne.n	402766 <__svfiscanf_r+0x746>
  4027be:	9d03      	ldr	r5, [sp, #12]
  4027c0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  4027c2:	f8dd 801c 	ldr.w	r8, [sp, #28]
  4027c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4027c8:	2b00      	cmp	r3, #0
  4027ca:	d098      	beq.n	4026fe <__svfiscanf_r+0x6de>
  4027cc:	463a      	mov	r2, r7
  4027ce:	e465      	b.n	40209c <__svfiscanf_r+0x7c>
  4027d0:	f429 69b0 	bic.w	r9, r9, #1408	; 0x580
  4027d4:	e681      	b.n	4024da <__svfiscanf_r+0x4ba>
  4027d6:	9a05      	ldr	r2, [sp, #20]
  4027d8:	4613      	mov	r3, r2
  4027da:	3304      	adds	r3, #4
  4027dc:	f8d2 a000 	ldr.w	sl, [r2]
  4027e0:	9305      	str	r3, [sp, #20]
  4027e2:	e779      	b.n	4026d8 <__svfiscanf_r+0x6b8>
  4027e4:	00405a48 	.word	0x00405a48
  4027e8:	9807      	ldr	r0, [sp, #28]
  4027ea:	4621      	mov	r1, r4
  4027ec:	f001 fdbe 	bl	40436c <__srefill_r>
  4027f0:	2800      	cmp	r0, #0
  4027f2:	d0e2      	beq.n	4027ba <__svfiscanf_r+0x79a>
  4027f4:	9d03      	ldr	r5, [sp, #12]
  4027f6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  4027f8:	f8dd 801c 	ldr.w	r8, [sp, #28]
  4027fc:	f1ba 0f00 	cmp.w	sl, #0
  402800:	d0e1      	beq.n	4027c6 <__svfiscanf_r+0x7a6>
  402802:	e52d      	b.n	402260 <__svfiscanf_r+0x240>
  402804:	9a05      	ldr	r2, [sp, #20]
  402806:	6813      	ldr	r3, [r2, #0]
  402808:	4619      	mov	r1, r3
  40280a:	4613      	mov	r3, r2
  40280c:	3304      	adds	r3, #4
  40280e:	9305      	str	r3, [sp, #20]
  402810:	e79f      	b.n	402752 <__svfiscanf_r+0x732>
  402812:	f019 0f04 	tst.w	r9, #4
  402816:	d05b      	beq.n	4028d0 <__svfiscanf_r+0x8b0>
  402818:	9a05      	ldr	r2, [sp, #20]
  40281a:	6813      	ldr	r3, [r2, #0]
  40281c:	3204      	adds	r2, #4
  40281e:	9205      	str	r2, [sp, #20]
  402820:	8018      	strh	r0, [r3, #0]
  402822:	e785      	b.n	402730 <__svfiscanf_r+0x710>
  402824:	3002      	adds	r0, #2
  402826:	d1bd      	bne.n	4027a4 <__svfiscanf_r+0x784>
  402828:	46c2      	mov	sl, r8
  40282a:	e7c3      	b.n	4027b4 <__svfiscanf_r+0x794>
  40282c:	f04f 0a00 	mov.w	sl, #0
  402830:	e7c0      	b.n	4027b4 <__svfiscanf_r+0x794>
  402832:	f1b9 0f00 	cmp.w	r9, #0
  402836:	f43f ad13 	beq.w	402260 <__svfiscanf_r+0x240>
  40283a:	444d      	add	r5, r9
  40283c:	e5c4      	b.n	4023c8 <__svfiscanf_r+0x3a8>
  40283e:	9b05      	ldr	r3, [sp, #20]
  402840:	4640      	mov	r0, r8
  402842:	6819      	ldr	r1, [r3, #0]
  402844:	9400      	str	r4, [sp, #0]
  402846:	4633      	mov	r3, r6
  402848:	2201      	movs	r2, #1
  40284a:	f000 fb11 	bl	402e70 <_fread_r>
  40284e:	9b05      	ldr	r3, [sp, #20]
  402850:	f103 0a04 	add.w	sl, r3, #4
  402854:	2800      	cmp	r0, #0
  402856:	f43f ad03 	beq.w	402260 <__svfiscanf_r+0x240>
  40285a:	9b08      	ldr	r3, [sp, #32]
  40285c:	f8cd a014 	str.w	sl, [sp, #20]
  402860:	3301      	adds	r3, #1
  402862:	4405      	add	r5, r0
  402864:	9308      	str	r3, [sp, #32]
  402866:	463a      	mov	r2, r7
  402868:	e418      	b.n	40209c <__svfiscanf_r+0x7c>
  40286a:	4640      	mov	r0, r8
  40286c:	4621      	mov	r1, r4
  40286e:	f001 fd7d 	bl	40436c <__srefill_r>
  402872:	2800      	cmp	r0, #0
  402874:	f43f acaa 	beq.w	4021cc <__svfiscanf_r+0x1ac>
  402878:	e4f2      	b.n	402260 <__svfiscanf_r+0x240>
  40287a:	f81a 1c01 	ldrb.w	r1, [sl, #-1]
  40287e:	f8cd c01c 	str.w	ip, [sp, #28]
  402882:	4640      	mov	r0, r8
  402884:	4622      	mov	r2, r4
  402886:	f002 f9b9 	bl	404bfc <_ungetc_r>
  40288a:	f10a 3aff 	add.w	sl, sl, #4294967295
  40288e:	f8dd c01c 	ldr.w	ip, [sp, #28]
  402892:	e638      	b.n	402506 <__svfiscanf_r+0x4e6>
  402894:	78bb      	ldrb	r3, [r7, #2]
  402896:	f049 0902 	orr.w	r9, r9, #2
  40289a:	3702      	adds	r7, #2
  40289c:	e40d      	b.n	4020ba <__svfiscanf_r+0x9a>
  40289e:	f019 0f01 	tst.w	r9, #1
  4028a2:	d10d      	bne.n	4028c0 <__svfiscanf_r+0x8a0>
  4028a4:	f019 0f02 	tst.w	r9, #2
  4028a8:	d00a      	beq.n	4028c0 <__svfiscanf_r+0x8a0>
  4028aa:	9a05      	ldr	r2, [sp, #20]
  4028ac:	6813      	ldr	r3, [r2, #0]
  4028ae:	4628      	mov	r0, r5
  4028b0:	3204      	adds	r2, #4
  4028b2:	17e9      	asrs	r1, r5, #31
  4028b4:	9205      	str	r2, [sp, #20]
  4028b6:	e9c3 0100 	strd	r0, r1, [r3]
  4028ba:	463a      	mov	r2, r7
  4028bc:	f7ff bbee 	b.w	40209c <__svfiscanf_r+0x7c>
  4028c0:	9a05      	ldr	r2, [sp, #20]
  4028c2:	6813      	ldr	r3, [r2, #0]
  4028c4:	3204      	adds	r2, #4
  4028c6:	9205      	str	r2, [sp, #20]
  4028c8:	601d      	str	r5, [r3, #0]
  4028ca:	463a      	mov	r2, r7
  4028cc:	f7ff bbe6 	b.w	40209c <__svfiscanf_r+0x7c>
  4028d0:	f019 0201 	ands.w	r2, r9, #1
  4028d4:	f47f af27 	bne.w	402726 <__svfiscanf_r+0x706>
  4028d8:	f019 0f02 	tst.w	r9, #2
  4028dc:	f43f af23 	beq.w	402726 <__svfiscanf_r+0x706>
  4028e0:	4b3c      	ldr	r3, [pc, #240]	; (4029d4 <__svfiscanf_r+0x9b4>)
  4028e2:	9906      	ldr	r1, [sp, #24]
  4028e4:	f8cd c01c 	str.w	ip, [sp, #28]
  4028e8:	4299      	cmp	r1, r3
  4028ea:	4640      	mov	r0, r8
  4028ec:	4661      	mov	r1, ip
  4028ee:	9b04      	ldr	r3, [sp, #16]
  4028f0:	d067      	beq.n	4029c2 <__svfiscanf_r+0x9a2>
  4028f2:	f001 fee1 	bl	4046b8 <_strtoll_r>
  4028f6:	f8dd c01c 	ldr.w	ip, [sp, #28]
  4028fa:	9a05      	ldr	r2, [sp, #20]
  4028fc:	6813      	ldr	r3, [r2, #0]
  4028fe:	3204      	adds	r2, #4
  402900:	9205      	str	r2, [sp, #20]
  402902:	e9c3 0100 	strd	r0, r1, [r3]
  402906:	e713      	b.n	402730 <__svfiscanf_r+0x710>
  402908:	f000 fe90 	bl	40362c <__locale_mb_cur_max>
  40290c:	4548      	cmp	r0, r9
  40290e:	f43f aca7 	beq.w	402260 <__svfiscanf_r+0x240>
  402912:	e894 000a 	ldmia.w	r4, {r1, r3}
  402916:	f10d 0e40 	add.w	lr, sp, #64	; 0x40
  40291a:	f811 2b01 	ldrb.w	r2, [r1], #1
  40291e:	6021      	str	r1, [r4, #0]
  402920:	f109 0c01 	add.w	ip, r9, #1
  402924:	9909      	ldr	r1, [sp, #36]	; 0x24
  402926:	9100      	str	r1, [sp, #0]
  402928:	3b01      	subs	r3, #1
  40292a:	6063      	str	r3, [r4, #4]
  40292c:	f80e 2009 	strb.w	r2, [lr, r9]
  402930:	4663      	mov	r3, ip
  402932:	4672      	mov	r2, lr
  402934:	4640      	mov	r0, r8
  402936:	4651      	mov	r1, sl
  402938:	f8cd c01c 	str.w	ip, [sp, #28]
  40293c:	f001 f986 	bl	403c4c <_mbrtowc_r>
  402940:	1c42      	adds	r2, r0, #1
  402942:	f43f ac8d 	beq.w	402260 <__svfiscanf_r+0x240>
  402946:	f8dd c01c 	ldr.w	ip, [sp, #28]
  40294a:	b198      	cbz	r0, 402974 <__svfiscanf_r+0x954>
  40294c:	3002      	adds	r0, #2
  40294e:	bf08      	it	eq
  402950:	46e1      	moveq	r9, ip
  402952:	d13b      	bne.n	4029cc <__svfiscanf_r+0x9ac>
  402954:	6863      	ldr	r3, [r4, #4]
  402956:	2b00      	cmp	r3, #0
  402958:	f73f aec0 	bgt.w	4026dc <__svfiscanf_r+0x6bc>
  40295c:	4640      	mov	r0, r8
  40295e:	4621      	mov	r1, r4
  402960:	f001 fd04 	bl	40436c <__srefill_r>
  402964:	2800      	cmp	r0, #0
  402966:	f43f aeb9 	beq.w	4026dc <__svfiscanf_r+0x6bc>
  40296a:	464a      	mov	r2, r9
  40296c:	2a00      	cmp	r2, #0
  40296e:	f47f ac77 	bne.w	402260 <__svfiscanf_r+0x240>
  402972:	e6be      	b.n	4026f2 <__svfiscanf_r+0x6d2>
  402974:	f8ca 0000 	str.w	r0, [sl]
  402978:	f8cd c01c 	str.w	ip, [sp, #28]
  40297c:	f000 fe44 	bl	403608 <iswspace>
  402980:	f8dd c01c 	ldr.w	ip, [sp, #28]
  402984:	b198      	cbz	r0, 4029ae <__svfiscanf_r+0x98e>
  402986:	46e1      	mov	r9, ip
  402988:	f1bc 0f00 	cmp.w	ip, #0
  40298c:	f43f aeb1 	beq.w	4026f2 <__svfiscanf_r+0x6d2>
  402990:	ab10      	add	r3, sp, #64	; 0x40
  402992:	eb03 060c 	add.w	r6, r3, ip
  402996:	f109 39ff 	add.w	r9, r9, #4294967295
  40299a:	4640      	mov	r0, r8
  40299c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
  4029a0:	4622      	mov	r2, r4
  4029a2:	f002 f92b 	bl	404bfc <_ungetc_r>
  4029a6:	f1b9 0f00 	cmp.w	r9, #0
  4029aa:	d1f4      	bne.n	402996 <__svfiscanf_r+0x976>
  4029ac:	e6a1      	b.n	4026f2 <__svfiscanf_r+0x6d2>
  4029ae:	9b03      	ldr	r3, [sp, #12]
  4029b0:	4465      	add	r5, ip
  4029b2:	3e01      	subs	r6, #1
  4029b4:	b91b      	cbnz	r3, 4029be <__svfiscanf_r+0x99e>
  4029b6:	f10a 0a04 	add.w	sl, sl, #4
  4029ba:	4699      	mov	r9, r3
  4029bc:	e7ca      	b.n	402954 <__svfiscanf_r+0x934>
  4029be:	4681      	mov	r9, r0
  4029c0:	e7c8      	b.n	402954 <__svfiscanf_r+0x934>
  4029c2:	f001 fff3 	bl	4049ac <_strtoull_r>
  4029c6:	f8dd c01c 	ldr.w	ip, [sp, #28]
  4029ca:	e796      	b.n	4028fa <__svfiscanf_r+0x8da>
  4029cc:	f8da 0000 	ldr.w	r0, [sl]
  4029d0:	e7d2      	b.n	402978 <__svfiscanf_r+0x958>
  4029d2:	bf00      	nop
  4029d4:	00404885 	.word	0x00404885

004029d8 <__swsetup_r>:
  4029d8:	b538      	push	{r3, r4, r5, lr}
  4029da:	4b2f      	ldr	r3, [pc, #188]	; (402a98 <__swsetup_r+0xc0>)
  4029dc:	681b      	ldr	r3, [r3, #0]
  4029de:	4605      	mov	r5, r0
  4029e0:	460c      	mov	r4, r1
  4029e2:	b113      	cbz	r3, 4029ea <__swsetup_r+0x12>
  4029e4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4029e6:	2a00      	cmp	r2, #0
  4029e8:	d036      	beq.n	402a58 <__swsetup_r+0x80>
  4029ea:	89a2      	ldrh	r2, [r4, #12]
  4029ec:	b293      	uxth	r3, r2
  4029ee:	0718      	lsls	r0, r3, #28
  4029f0:	d50c      	bpl.n	402a0c <__swsetup_r+0x34>
  4029f2:	6920      	ldr	r0, [r4, #16]
  4029f4:	b1a8      	cbz	r0, 402a22 <__swsetup_r+0x4a>
  4029f6:	f013 0201 	ands.w	r2, r3, #1
  4029fa:	d01e      	beq.n	402a3a <__swsetup_r+0x62>
  4029fc:	6963      	ldr	r3, [r4, #20]
  4029fe:	2200      	movs	r2, #0
  402a00:	425b      	negs	r3, r3
  402a02:	61a3      	str	r3, [r4, #24]
  402a04:	60a2      	str	r2, [r4, #8]
  402a06:	b1f0      	cbz	r0, 402a46 <__swsetup_r+0x6e>
  402a08:	2000      	movs	r0, #0
  402a0a:	bd38      	pop	{r3, r4, r5, pc}
  402a0c:	06d9      	lsls	r1, r3, #27
  402a0e:	d53b      	bpl.n	402a88 <__swsetup_r+0xb0>
  402a10:	0758      	lsls	r0, r3, #29
  402a12:	d425      	bmi.n	402a60 <__swsetup_r+0x88>
  402a14:	6920      	ldr	r0, [r4, #16]
  402a16:	f042 0308 	orr.w	r3, r2, #8
  402a1a:	81a3      	strh	r3, [r4, #12]
  402a1c:	b29b      	uxth	r3, r3
  402a1e:	2800      	cmp	r0, #0
  402a20:	d1e9      	bne.n	4029f6 <__swsetup_r+0x1e>
  402a22:	f403 7220 	and.w	r2, r3, #640	; 0x280
  402a26:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402a2a:	d0e4      	beq.n	4029f6 <__swsetup_r+0x1e>
  402a2c:	4628      	mov	r0, r5
  402a2e:	4621      	mov	r1, r4
  402a30:	f000 fe02 	bl	403638 <__smakebuf_r>
  402a34:	89a3      	ldrh	r3, [r4, #12]
  402a36:	6920      	ldr	r0, [r4, #16]
  402a38:	e7dd      	b.n	4029f6 <__swsetup_r+0x1e>
  402a3a:	0799      	lsls	r1, r3, #30
  402a3c:	bf58      	it	pl
  402a3e:	6962      	ldrpl	r2, [r4, #20]
  402a40:	60a2      	str	r2, [r4, #8]
  402a42:	2800      	cmp	r0, #0
  402a44:	d1e0      	bne.n	402a08 <__swsetup_r+0x30>
  402a46:	89a3      	ldrh	r3, [r4, #12]
  402a48:	061a      	lsls	r2, r3, #24
  402a4a:	d5de      	bpl.n	402a0a <__swsetup_r+0x32>
  402a4c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402a50:	81a3      	strh	r3, [r4, #12]
  402a52:	f04f 30ff 	mov.w	r0, #4294967295
  402a56:	bd38      	pop	{r3, r4, r5, pc}
  402a58:	4618      	mov	r0, r3
  402a5a:	f000 f97f 	bl	402d5c <__sinit>
  402a5e:	e7c4      	b.n	4029ea <__swsetup_r+0x12>
  402a60:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402a62:	b149      	cbz	r1, 402a78 <__swsetup_r+0xa0>
  402a64:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402a68:	4299      	cmp	r1, r3
  402a6a:	d003      	beq.n	402a74 <__swsetup_r+0x9c>
  402a6c:	4628      	mov	r0, r5
  402a6e:	f000 fb17 	bl	4030a0 <_free_r>
  402a72:	89a2      	ldrh	r2, [r4, #12]
  402a74:	2300      	movs	r3, #0
  402a76:	6323      	str	r3, [r4, #48]	; 0x30
  402a78:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402a7c:	2300      	movs	r3, #0
  402a7e:	6920      	ldr	r0, [r4, #16]
  402a80:	6063      	str	r3, [r4, #4]
  402a82:	b292      	uxth	r2, r2
  402a84:	6020      	str	r0, [r4, #0]
  402a86:	e7c6      	b.n	402a16 <__swsetup_r+0x3e>
  402a88:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402a8c:	2309      	movs	r3, #9
  402a8e:	602b      	str	r3, [r5, #0]
  402a90:	f04f 30ff 	mov.w	r0, #4294967295
  402a94:	81a2      	strh	r2, [r4, #12]
  402a96:	bd38      	pop	{r3, r4, r5, pc}
  402a98:	20000430 	.word	0x20000430

00402a9c <register_fini>:
  402a9c:	4b02      	ldr	r3, [pc, #8]	; (402aa8 <register_fini+0xc>)
  402a9e:	b113      	cbz	r3, 402aa6 <register_fini+0xa>
  402aa0:	4802      	ldr	r0, [pc, #8]	; (402aac <register_fini+0x10>)
  402aa2:	f000 b805 	b.w	402ab0 <atexit>
  402aa6:	4770      	bx	lr
  402aa8:	00000000 	.word	0x00000000
  402aac:	00402d71 	.word	0x00402d71

00402ab0 <atexit>:
  402ab0:	4601      	mov	r1, r0
  402ab2:	2000      	movs	r0, #0
  402ab4:	4602      	mov	r2, r0
  402ab6:	4603      	mov	r3, r0
  402ab8:	f002 b9aa 	b.w	404e10 <__register_exitproc>

00402abc <__sflush_r>:
  402abc:	898b      	ldrh	r3, [r1, #12]
  402abe:	b29a      	uxth	r2, r3
  402ac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402ac4:	460d      	mov	r5, r1
  402ac6:	0711      	lsls	r1, r2, #28
  402ac8:	4680      	mov	r8, r0
  402aca:	d43c      	bmi.n	402b46 <__sflush_r+0x8a>
  402acc:	686a      	ldr	r2, [r5, #4]
  402ace:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402ad2:	2a00      	cmp	r2, #0
  402ad4:	81ab      	strh	r3, [r5, #12]
  402ad6:	dd65      	ble.n	402ba4 <__sflush_r+0xe8>
  402ad8:	6aae      	ldr	r6, [r5, #40]	; 0x28
  402ada:	2e00      	cmp	r6, #0
  402adc:	d04b      	beq.n	402b76 <__sflush_r+0xba>
  402ade:	b29b      	uxth	r3, r3
  402ae0:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  402ae4:	2100      	movs	r1, #0
  402ae6:	b292      	uxth	r2, r2
  402ae8:	f8d8 4000 	ldr.w	r4, [r8]
  402aec:	f8c8 1000 	str.w	r1, [r8]
  402af0:	2a00      	cmp	r2, #0
  402af2:	d05b      	beq.n	402bac <__sflush_r+0xf0>
  402af4:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402af6:	075f      	lsls	r7, r3, #29
  402af8:	d505      	bpl.n	402b06 <__sflush_r+0x4a>
  402afa:	6869      	ldr	r1, [r5, #4]
  402afc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402afe:	1a52      	subs	r2, r2, r1
  402b00:	b10b      	cbz	r3, 402b06 <__sflush_r+0x4a>
  402b02:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402b04:	1ad2      	subs	r2, r2, r3
  402b06:	4640      	mov	r0, r8
  402b08:	69e9      	ldr	r1, [r5, #28]
  402b0a:	2300      	movs	r3, #0
  402b0c:	47b0      	blx	r6
  402b0e:	1c46      	adds	r6, r0, #1
  402b10:	d056      	beq.n	402bc0 <__sflush_r+0x104>
  402b12:	89ab      	ldrh	r3, [r5, #12]
  402b14:	692a      	ldr	r2, [r5, #16]
  402b16:	602a      	str	r2, [r5, #0]
  402b18:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402b1c:	b29b      	uxth	r3, r3
  402b1e:	2200      	movs	r2, #0
  402b20:	606a      	str	r2, [r5, #4]
  402b22:	04da      	lsls	r2, r3, #19
  402b24:	81ab      	strh	r3, [r5, #12]
  402b26:	d43b      	bmi.n	402ba0 <__sflush_r+0xe4>
  402b28:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402b2a:	f8c8 4000 	str.w	r4, [r8]
  402b2e:	b311      	cbz	r1, 402b76 <__sflush_r+0xba>
  402b30:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402b34:	4299      	cmp	r1, r3
  402b36:	d002      	beq.n	402b3e <__sflush_r+0x82>
  402b38:	4640      	mov	r0, r8
  402b3a:	f000 fab1 	bl	4030a0 <_free_r>
  402b3e:	2000      	movs	r0, #0
  402b40:	6328      	str	r0, [r5, #48]	; 0x30
  402b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402b46:	692e      	ldr	r6, [r5, #16]
  402b48:	b1ae      	cbz	r6, 402b76 <__sflush_r+0xba>
  402b4a:	682c      	ldr	r4, [r5, #0]
  402b4c:	602e      	str	r6, [r5, #0]
  402b4e:	0791      	lsls	r1, r2, #30
  402b50:	bf0c      	ite	eq
  402b52:	696b      	ldreq	r3, [r5, #20]
  402b54:	2300      	movne	r3, #0
  402b56:	1ba4      	subs	r4, r4, r6
  402b58:	60ab      	str	r3, [r5, #8]
  402b5a:	e00a      	b.n	402b72 <__sflush_r+0xb6>
  402b5c:	4632      	mov	r2, r6
  402b5e:	4623      	mov	r3, r4
  402b60:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402b62:	69e9      	ldr	r1, [r5, #28]
  402b64:	4640      	mov	r0, r8
  402b66:	47b8      	blx	r7
  402b68:	2800      	cmp	r0, #0
  402b6a:	eba4 0400 	sub.w	r4, r4, r0
  402b6e:	4406      	add	r6, r0
  402b70:	dd04      	ble.n	402b7c <__sflush_r+0xc0>
  402b72:	2c00      	cmp	r4, #0
  402b74:	dcf2      	bgt.n	402b5c <__sflush_r+0xa0>
  402b76:	2000      	movs	r0, #0
  402b78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402b7c:	89ab      	ldrh	r3, [r5, #12]
  402b7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402b82:	81ab      	strh	r3, [r5, #12]
  402b84:	f04f 30ff 	mov.w	r0, #4294967295
  402b88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402b8c:	89ab      	ldrh	r3, [r5, #12]
  402b8e:	692a      	ldr	r2, [r5, #16]
  402b90:	6069      	str	r1, [r5, #4]
  402b92:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402b96:	b29b      	uxth	r3, r3
  402b98:	81ab      	strh	r3, [r5, #12]
  402b9a:	04db      	lsls	r3, r3, #19
  402b9c:	602a      	str	r2, [r5, #0]
  402b9e:	d5c3      	bpl.n	402b28 <__sflush_r+0x6c>
  402ba0:	6528      	str	r0, [r5, #80]	; 0x50
  402ba2:	e7c1      	b.n	402b28 <__sflush_r+0x6c>
  402ba4:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402ba6:	2a00      	cmp	r2, #0
  402ba8:	dc96      	bgt.n	402ad8 <__sflush_r+0x1c>
  402baa:	e7e4      	b.n	402b76 <__sflush_r+0xba>
  402bac:	2301      	movs	r3, #1
  402bae:	4640      	mov	r0, r8
  402bb0:	69e9      	ldr	r1, [r5, #28]
  402bb2:	47b0      	blx	r6
  402bb4:	1c43      	adds	r3, r0, #1
  402bb6:	4602      	mov	r2, r0
  402bb8:	d019      	beq.n	402bee <__sflush_r+0x132>
  402bba:	89ab      	ldrh	r3, [r5, #12]
  402bbc:	6aae      	ldr	r6, [r5, #40]	; 0x28
  402bbe:	e79a      	b.n	402af6 <__sflush_r+0x3a>
  402bc0:	f8d8 1000 	ldr.w	r1, [r8]
  402bc4:	2900      	cmp	r1, #0
  402bc6:	d0e1      	beq.n	402b8c <__sflush_r+0xd0>
  402bc8:	291d      	cmp	r1, #29
  402bca:	d007      	beq.n	402bdc <__sflush_r+0x120>
  402bcc:	2916      	cmp	r1, #22
  402bce:	d005      	beq.n	402bdc <__sflush_r+0x120>
  402bd0:	89ab      	ldrh	r3, [r5, #12]
  402bd2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402bd6:	81ab      	strh	r3, [r5, #12]
  402bd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402bdc:	89ab      	ldrh	r3, [r5, #12]
  402bde:	692a      	ldr	r2, [r5, #16]
  402be0:	602a      	str	r2, [r5, #0]
  402be2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402be6:	2200      	movs	r2, #0
  402be8:	81ab      	strh	r3, [r5, #12]
  402bea:	606a      	str	r2, [r5, #4]
  402bec:	e79c      	b.n	402b28 <__sflush_r+0x6c>
  402bee:	f8d8 3000 	ldr.w	r3, [r8]
  402bf2:	2b00      	cmp	r3, #0
  402bf4:	d0e1      	beq.n	402bba <__sflush_r+0xfe>
  402bf6:	2b1d      	cmp	r3, #29
  402bf8:	d007      	beq.n	402c0a <__sflush_r+0x14e>
  402bfa:	2b16      	cmp	r3, #22
  402bfc:	d005      	beq.n	402c0a <__sflush_r+0x14e>
  402bfe:	89ab      	ldrh	r3, [r5, #12]
  402c00:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402c04:	81ab      	strh	r3, [r5, #12]
  402c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402c0a:	f8c8 4000 	str.w	r4, [r8]
  402c0e:	e7b2      	b.n	402b76 <__sflush_r+0xba>

00402c10 <_fflush_r>:
  402c10:	b510      	push	{r4, lr}
  402c12:	4604      	mov	r4, r0
  402c14:	b082      	sub	sp, #8
  402c16:	b108      	cbz	r0, 402c1c <_fflush_r+0xc>
  402c18:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402c1a:	b153      	cbz	r3, 402c32 <_fflush_r+0x22>
  402c1c:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  402c20:	b908      	cbnz	r0, 402c26 <_fflush_r+0x16>
  402c22:	b002      	add	sp, #8
  402c24:	bd10      	pop	{r4, pc}
  402c26:	4620      	mov	r0, r4
  402c28:	b002      	add	sp, #8
  402c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402c2e:	f7ff bf45 	b.w	402abc <__sflush_r>
  402c32:	9101      	str	r1, [sp, #4]
  402c34:	f000 f892 	bl	402d5c <__sinit>
  402c38:	9901      	ldr	r1, [sp, #4]
  402c3a:	e7ef      	b.n	402c1c <_fflush_r+0xc>

00402c3c <fflush>:
  402c3c:	b120      	cbz	r0, 402c48 <fflush+0xc>
  402c3e:	4b05      	ldr	r3, [pc, #20]	; (402c54 <fflush+0x18>)
  402c40:	4601      	mov	r1, r0
  402c42:	6818      	ldr	r0, [r3, #0]
  402c44:	f7ff bfe4 	b.w	402c10 <_fflush_r>
  402c48:	4b03      	ldr	r3, [pc, #12]	; (402c58 <fflush+0x1c>)
  402c4a:	4904      	ldr	r1, [pc, #16]	; (402c5c <fflush+0x20>)
  402c4c:	6818      	ldr	r0, [r3, #0]
  402c4e:	f000 bcb1 	b.w	4035b4 <_fwalk_reent>
  402c52:	bf00      	nop
  402c54:	20000430 	.word	0x20000430
  402c58:	004059f0 	.word	0x004059f0
  402c5c:	00402c11 	.word	0x00402c11

00402c60 <_cleanup_r>:
  402c60:	4901      	ldr	r1, [pc, #4]	; (402c68 <_cleanup_r+0x8>)
  402c62:	f000 bca7 	b.w	4035b4 <_fwalk_reent>
  402c66:	bf00      	nop
  402c68:	00404ed9 	.word	0x00404ed9

00402c6c <__sinit.part.1>:
  402c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402c70:	4b35      	ldr	r3, [pc, #212]	; (402d48 <__sinit.part.1+0xdc>)
  402c72:	6845      	ldr	r5, [r0, #4]
  402c74:	63c3      	str	r3, [r0, #60]	; 0x3c
  402c76:	2400      	movs	r4, #0
  402c78:	4607      	mov	r7, r0
  402c7a:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  402c7e:	2304      	movs	r3, #4
  402c80:	2103      	movs	r1, #3
  402c82:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  402c86:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  402c8a:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  402c8e:	b083      	sub	sp, #12
  402c90:	602c      	str	r4, [r5, #0]
  402c92:	606c      	str	r4, [r5, #4]
  402c94:	60ac      	str	r4, [r5, #8]
  402c96:	666c      	str	r4, [r5, #100]	; 0x64
  402c98:	81ec      	strh	r4, [r5, #14]
  402c9a:	612c      	str	r4, [r5, #16]
  402c9c:	616c      	str	r4, [r5, #20]
  402c9e:	61ac      	str	r4, [r5, #24]
  402ca0:	81ab      	strh	r3, [r5, #12]
  402ca2:	4621      	mov	r1, r4
  402ca4:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402ca8:	2208      	movs	r2, #8
  402caa:	f7fe fa03 	bl	4010b4 <memset>
  402cae:	68be      	ldr	r6, [r7, #8]
  402cb0:	f8df b098 	ldr.w	fp, [pc, #152]	; 402d4c <__sinit.part.1+0xe0>
  402cb4:	f8df a098 	ldr.w	sl, [pc, #152]	; 402d50 <__sinit.part.1+0xe4>
  402cb8:	f8df 9098 	ldr.w	r9, [pc, #152]	; 402d54 <__sinit.part.1+0xe8>
  402cbc:	f8df 8098 	ldr.w	r8, [pc, #152]	; 402d58 <__sinit.part.1+0xec>
  402cc0:	f8c5 b020 	str.w	fp, [r5, #32]
  402cc4:	2301      	movs	r3, #1
  402cc6:	2209      	movs	r2, #9
  402cc8:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402ccc:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402cd0:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402cd4:	61ed      	str	r5, [r5, #28]
  402cd6:	4621      	mov	r1, r4
  402cd8:	81f3      	strh	r3, [r6, #14]
  402cda:	81b2      	strh	r2, [r6, #12]
  402cdc:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  402ce0:	6034      	str	r4, [r6, #0]
  402ce2:	6074      	str	r4, [r6, #4]
  402ce4:	60b4      	str	r4, [r6, #8]
  402ce6:	6674      	str	r4, [r6, #100]	; 0x64
  402ce8:	6134      	str	r4, [r6, #16]
  402cea:	6174      	str	r4, [r6, #20]
  402cec:	61b4      	str	r4, [r6, #24]
  402cee:	2208      	movs	r2, #8
  402cf0:	9301      	str	r3, [sp, #4]
  402cf2:	f7fe f9df 	bl	4010b4 <memset>
  402cf6:	68fd      	ldr	r5, [r7, #12]
  402cf8:	61f6      	str	r6, [r6, #28]
  402cfa:	2012      	movs	r0, #18
  402cfc:	2202      	movs	r2, #2
  402cfe:	f8c6 b020 	str.w	fp, [r6, #32]
  402d02:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  402d06:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  402d0a:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  402d0e:	4621      	mov	r1, r4
  402d10:	81a8      	strh	r0, [r5, #12]
  402d12:	81ea      	strh	r2, [r5, #14]
  402d14:	602c      	str	r4, [r5, #0]
  402d16:	606c      	str	r4, [r5, #4]
  402d18:	60ac      	str	r4, [r5, #8]
  402d1a:	666c      	str	r4, [r5, #100]	; 0x64
  402d1c:	612c      	str	r4, [r5, #16]
  402d1e:	616c      	str	r4, [r5, #20]
  402d20:	61ac      	str	r4, [r5, #24]
  402d22:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402d26:	2208      	movs	r2, #8
  402d28:	f7fe f9c4 	bl	4010b4 <memset>
  402d2c:	9b01      	ldr	r3, [sp, #4]
  402d2e:	61ed      	str	r5, [r5, #28]
  402d30:	f8c5 b020 	str.w	fp, [r5, #32]
  402d34:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402d38:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402d3c:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402d40:	63bb      	str	r3, [r7, #56]	; 0x38
  402d42:	b003      	add	sp, #12
  402d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d48:	00402c61 	.word	0x00402c61
  402d4c:	00404519 	.word	0x00404519
  402d50:	0040453d 	.word	0x0040453d
  402d54:	00404575 	.word	0x00404575
  402d58:	00404595 	.word	0x00404595

00402d5c <__sinit>:
  402d5c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402d5e:	b103      	cbz	r3, 402d62 <__sinit+0x6>
  402d60:	4770      	bx	lr
  402d62:	f7ff bf83 	b.w	402c6c <__sinit.part.1>
  402d66:	bf00      	nop

00402d68 <__sfp_lock_acquire>:
  402d68:	4770      	bx	lr
  402d6a:	bf00      	nop

00402d6c <__sfp_lock_release>:
  402d6c:	4770      	bx	lr
  402d6e:	bf00      	nop

00402d70 <__libc_fini_array>:
  402d70:	b538      	push	{r3, r4, r5, lr}
  402d72:	4b08      	ldr	r3, [pc, #32]	; (402d94 <__libc_fini_array+0x24>)
  402d74:	4d08      	ldr	r5, [pc, #32]	; (402d98 <__libc_fini_array+0x28>)
  402d76:	1aed      	subs	r5, r5, r3
  402d78:	10ac      	asrs	r4, r5, #2
  402d7a:	bf18      	it	ne
  402d7c:	18ed      	addne	r5, r5, r3
  402d7e:	d005      	beq.n	402d8c <__libc_fini_array+0x1c>
  402d80:	3c01      	subs	r4, #1
  402d82:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  402d86:	4798      	blx	r3
  402d88:	2c00      	cmp	r4, #0
  402d8a:	d1f9      	bne.n	402d80 <__libc_fini_array+0x10>
  402d8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402d90:	f002 bef8 	b.w	405b84 <_fini>
  402d94:	00405b90 	.word	0x00405b90
  402d98:	00405b94 	.word	0x00405b94

00402d9c <__fputwc>:
  402d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402da0:	b082      	sub	sp, #8
  402da2:	4607      	mov	r7, r0
  402da4:	460e      	mov	r6, r1
  402da6:	4614      	mov	r4, r2
  402da8:	f000 fc40 	bl	40362c <__locale_mb_cur_max>
  402dac:	2801      	cmp	r0, #1
  402dae:	d041      	beq.n	402e34 <__fputwc+0x98>
  402db0:	4638      	mov	r0, r7
  402db2:	a901      	add	r1, sp, #4
  402db4:	4632      	mov	r2, r6
  402db6:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  402dba:	f001 ffdd 	bl	404d78 <_wcrtomb_r>
  402dbe:	f1b0 3fff 	cmp.w	r0, #4294967295
  402dc2:	4680      	mov	r8, r0
  402dc4:	d02f      	beq.n	402e26 <__fputwc+0x8a>
  402dc6:	2800      	cmp	r0, #0
  402dc8:	d03c      	beq.n	402e44 <__fputwc+0xa8>
  402dca:	f89d 1004 	ldrb.w	r1, [sp, #4]
  402dce:	2500      	movs	r5, #0
  402dd0:	e009      	b.n	402de6 <__fputwc+0x4a>
  402dd2:	6823      	ldr	r3, [r4, #0]
  402dd4:	7019      	strb	r1, [r3, #0]
  402dd6:	6823      	ldr	r3, [r4, #0]
  402dd8:	3301      	adds	r3, #1
  402dda:	6023      	str	r3, [r4, #0]
  402ddc:	3501      	adds	r5, #1
  402dde:	45a8      	cmp	r8, r5
  402de0:	d930      	bls.n	402e44 <__fputwc+0xa8>
  402de2:	ab01      	add	r3, sp, #4
  402de4:	5d59      	ldrb	r1, [r3, r5]
  402de6:	68a3      	ldr	r3, [r4, #8]
  402de8:	3b01      	subs	r3, #1
  402dea:	2b00      	cmp	r3, #0
  402dec:	60a3      	str	r3, [r4, #8]
  402dee:	daf0      	bge.n	402dd2 <__fputwc+0x36>
  402df0:	69a2      	ldr	r2, [r4, #24]
  402df2:	4293      	cmp	r3, r2
  402df4:	db07      	blt.n	402e06 <__fputwc+0x6a>
  402df6:	6823      	ldr	r3, [r4, #0]
  402df8:	7019      	strb	r1, [r3, #0]
  402dfa:	6823      	ldr	r3, [r4, #0]
  402dfc:	7819      	ldrb	r1, [r3, #0]
  402dfe:	290a      	cmp	r1, #10
  402e00:	f103 0301 	add.w	r3, r3, #1
  402e04:	d1e9      	bne.n	402dda <__fputwc+0x3e>
  402e06:	4638      	mov	r0, r7
  402e08:	4622      	mov	r2, r4
  402e0a:	f001 ff61 	bl	404cd0 <__swbuf_r>
  402e0e:	f1a0 30ff 	sub.w	r0, r0, #4294967295
  402e12:	fab0 f080 	clz	r0, r0
  402e16:	0940      	lsrs	r0, r0, #5
  402e18:	2800      	cmp	r0, #0
  402e1a:	d0df      	beq.n	402ddc <__fputwc+0x40>
  402e1c:	f04f 30ff 	mov.w	r0, #4294967295
  402e20:	b002      	add	sp, #8
  402e22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402e26:	89a3      	ldrh	r3, [r4, #12]
  402e28:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402e2c:	81a3      	strh	r3, [r4, #12]
  402e2e:	b002      	add	sp, #8
  402e30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402e34:	1e73      	subs	r3, r6, #1
  402e36:	2bfe      	cmp	r3, #254	; 0xfe
  402e38:	d8ba      	bhi.n	402db0 <__fputwc+0x14>
  402e3a:	b2f1      	uxtb	r1, r6
  402e3c:	4680      	mov	r8, r0
  402e3e:	f88d 1004 	strb.w	r1, [sp, #4]
  402e42:	e7c4      	b.n	402dce <__fputwc+0x32>
  402e44:	4630      	mov	r0, r6
  402e46:	b002      	add	sp, #8
  402e48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00402e4c <_fputwc_r>:
  402e4c:	8993      	ldrh	r3, [r2, #12]
  402e4e:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  402e52:	d10b      	bne.n	402e6c <_fputwc_r+0x20>
  402e54:	b410      	push	{r4}
  402e56:	6e54      	ldr	r4, [r2, #100]	; 0x64
  402e58:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402e5c:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  402e60:	6654      	str	r4, [r2, #100]	; 0x64
  402e62:	8193      	strh	r3, [r2, #12]
  402e64:	f85d 4b04 	ldr.w	r4, [sp], #4
  402e68:	f7ff bf98 	b.w	402d9c <__fputwc>
  402e6c:	f7ff bf96 	b.w	402d9c <__fputwc>

00402e70 <_fread_r>:
  402e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402e74:	b085      	sub	sp, #20
  402e76:	fb02 f503 	mul.w	r5, r2, r3
  402e7a:	4690      	mov	r8, r2
  402e7c:	9303      	str	r3, [sp, #12]
  402e7e:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
  402e82:	2d00      	cmp	r5, #0
  402e84:	d048      	beq.n	402f18 <_fread_r+0xa8>
  402e86:	4689      	mov	r9, r1
  402e88:	4604      	mov	r4, r0
  402e8a:	b118      	cbz	r0, 402e94 <_fread_r+0x24>
  402e8c:	6b82      	ldr	r2, [r0, #56]	; 0x38
  402e8e:	2a00      	cmp	r2, #0
  402e90:	f000 80a8 	beq.w	402fe4 <_fread_r+0x174>
  402e94:	f8bb 200c 	ldrh.w	r2, [fp, #12]
  402e98:	b291      	uxth	r1, r2
  402e9a:	0488      	lsls	r0, r1, #18
  402e9c:	d40a      	bmi.n	402eb4 <_fread_r+0x44>
  402e9e:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  402ea2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  402ea6:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
  402eaa:	f8ab 200c 	strh.w	r2, [fp, #12]
  402eae:	b291      	uxth	r1, r2
  402eb0:	f8cb 0064 	str.w	r0, [fp, #100]	; 0x64
  402eb4:	f8db 6004 	ldr.w	r6, [fp, #4]
  402eb8:	2e00      	cmp	r6, #0
  402eba:	db38      	blt.n	402f2e <_fread_r+0xbe>
  402ebc:	078b      	lsls	r3, r1, #30
  402ebe:	4632      	mov	r2, r6
  402ec0:	d43c      	bmi.n	402f3c <_fread_r+0xcc>
  402ec2:	46aa      	mov	sl, r5
  402ec4:	e010      	b.n	402ee8 <_fread_r+0x78>
  402ec6:	f000 ff4f 	bl	403d68 <memcpy>
  402eca:	f8db 2000 	ldr.w	r2, [fp]
  402ece:	4432      	add	r2, r6
  402ed0:	f8cb 2000 	str.w	r2, [fp]
  402ed4:	4620      	mov	r0, r4
  402ed6:	4659      	mov	r1, fp
  402ed8:	44b1      	add	r9, r6
  402eda:	ebc6 0a0a 	rsb	sl, r6, sl
  402ede:	f001 fa45 	bl	40436c <__srefill_r>
  402ee2:	b9e8      	cbnz	r0, 402f20 <_fread_r+0xb0>
  402ee4:	f8db 6004 	ldr.w	r6, [fp, #4]
  402ee8:	f8db 1000 	ldr.w	r1, [fp]
  402eec:	45b2      	cmp	sl, r6
  402eee:	4632      	mov	r2, r6
  402ef0:	4648      	mov	r0, r9
  402ef2:	d8e8      	bhi.n	402ec6 <_fread_r+0x56>
  402ef4:	4652      	mov	r2, sl
  402ef6:	f000 ff37 	bl	403d68 <memcpy>
  402efa:	f8db 1004 	ldr.w	r1, [fp, #4]
  402efe:	f8db 2000 	ldr.w	r2, [fp]
  402f02:	9803      	ldr	r0, [sp, #12]
  402f04:	ebca 0101 	rsb	r1, sl, r1
  402f08:	4452      	add	r2, sl
  402f0a:	f8cb 1004 	str.w	r1, [fp, #4]
  402f0e:	f8cb 2000 	str.w	r2, [fp]
  402f12:	b005      	add	sp, #20
  402f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f18:	4628      	mov	r0, r5
  402f1a:	b005      	add	sp, #20
  402f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f20:	ebca 0505 	rsb	r5, sl, r5
  402f24:	fbb5 f0f8 	udiv	r0, r5, r8
  402f28:	b005      	add	sp, #20
  402f2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f2e:	2000      	movs	r0, #0
  402f30:	078b      	lsls	r3, r1, #30
  402f32:	4602      	mov	r2, r0
  402f34:	f8cb 0004 	str.w	r0, [fp, #4]
  402f38:	4606      	mov	r6, r0
  402f3a:	d5c2      	bpl.n	402ec2 <_fread_r+0x52>
  402f3c:	42aa      	cmp	r2, r5
  402f3e:	bf28      	it	cs
  402f40:	462a      	movcs	r2, r5
  402f42:	f8db 1000 	ldr.w	r1, [fp]
  402f46:	4648      	mov	r0, r9
  402f48:	4692      	mov	sl, r2
  402f4a:	f000 ff0d 	bl	403d68 <memcpy>
  402f4e:	f8db 6000 	ldr.w	r6, [fp]
  402f52:	f8db 2004 	ldr.w	r2, [fp, #4]
  402f56:	f8db 1030 	ldr.w	r1, [fp, #48]	; 0x30
  402f5a:	eb06 030a 	add.w	r3, r6, sl
  402f5e:	ebca 0202 	rsb	r2, sl, r2
  402f62:	9301      	str	r3, [sp, #4]
  402f64:	eb09 070a 	add.w	r7, r9, sl
  402f68:	f8cb 3000 	str.w	r3, [fp]
  402f6c:	f8cb 2004 	str.w	r2, [fp, #4]
  402f70:	ebca 0605 	rsb	r6, sl, r5
  402f74:	2900      	cmp	r1, #0
  402f76:	d03e      	beq.n	402ff6 <_fread_r+0x186>
  402f78:	2e00      	cmp	r6, #0
  402f7a:	d03e      	beq.n	402ffa <_fread_r+0x18a>
  402f7c:	f10b 0040 	add.w	r0, fp, #64	; 0x40
  402f80:	4281      	cmp	r1, r0
  402f82:	d005      	beq.n	402f90 <_fread_r+0x120>
  402f84:	4620      	mov	r0, r4
  402f86:	f000 f88b 	bl	4030a0 <_free_r>
  402f8a:	f8db 3000 	ldr.w	r3, [fp]
  402f8e:	9301      	str	r3, [sp, #4]
  402f90:	2100      	movs	r1, #0
  402f92:	f8cb 1030 	str.w	r1, [fp, #48]	; 0x30
  402f96:	f8db 3010 	ldr.w	r3, [fp, #16]
  402f9a:	9302      	str	r3, [sp, #8]
  402f9c:	f8db a014 	ldr.w	sl, [fp, #20]
  402fa0:	f04f 0900 	mov.w	r9, #0
  402fa4:	e000      	b.n	402fa8 <_fread_r+0x138>
  402fa6:	b346      	cbz	r6, 402ffa <_fread_r+0x18a>
  402fa8:	f8cb 7010 	str.w	r7, [fp, #16]
  402fac:	f8cb 6014 	str.w	r6, [fp, #20]
  402fb0:	f8cb 7000 	str.w	r7, [fp]
  402fb4:	4659      	mov	r1, fp
  402fb6:	4620      	mov	r0, r4
  402fb8:	f001 f9d8 	bl	40436c <__srefill_r>
  402fbc:	f8db 1004 	ldr.w	r1, [fp, #4]
  402fc0:	9b02      	ldr	r3, [sp, #8]
  402fc2:	f8cb 3010 	str.w	r3, [fp, #16]
  402fc6:	9b01      	ldr	r3, [sp, #4]
  402fc8:	f8cb a014 	str.w	sl, [fp, #20]
  402fcc:	f8cb 3000 	str.w	r3, [fp]
  402fd0:	1a76      	subs	r6, r6, r1
  402fd2:	440f      	add	r7, r1
  402fd4:	f8cb 9004 	str.w	r9, [fp, #4]
  402fd8:	2800      	cmp	r0, #0
  402fda:	d0e4      	beq.n	402fa6 <_fread_r+0x136>
  402fdc:	1bad      	subs	r5, r5, r6
  402fde:	fbb5 f0f8 	udiv	r0, r5, r8
  402fe2:	e796      	b.n	402f12 <_fread_r+0xa2>
  402fe4:	f7ff feba 	bl	402d5c <__sinit>
  402fe8:	f8bb 200c 	ldrh.w	r2, [fp, #12]
  402fec:	b291      	uxth	r1, r2
  402fee:	0488      	lsls	r0, r1, #18
  402ff0:	f53f af60 	bmi.w	402eb4 <_fread_r+0x44>
  402ff4:	e753      	b.n	402e9e <_fread_r+0x2e>
  402ff6:	2e00      	cmp	r6, #0
  402ff8:	d1cd      	bne.n	402f96 <_fread_r+0x126>
  402ffa:	9803      	ldr	r0, [sp, #12]
  402ffc:	b005      	add	sp, #20
  402ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403002:	bf00      	nop

00403004 <_malloc_trim_r>:
  403004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403006:	4f23      	ldr	r7, [pc, #140]	; (403094 <_malloc_trim_r+0x90>)
  403008:	460c      	mov	r4, r1
  40300a:	4606      	mov	r6, r0
  40300c:	f000 ffaa 	bl	403f64 <__malloc_lock>
  403010:	68bb      	ldr	r3, [r7, #8]
  403012:	685d      	ldr	r5, [r3, #4]
  403014:	f025 0503 	bic.w	r5, r5, #3
  403018:	1b29      	subs	r1, r5, r4
  40301a:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  40301e:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  403022:	f021 010f 	bic.w	r1, r1, #15
  403026:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40302a:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  40302e:	db07      	blt.n	403040 <_malloc_trim_r+0x3c>
  403030:	4630      	mov	r0, r6
  403032:	2100      	movs	r1, #0
  403034:	f001 fa22 	bl	40447c <_sbrk_r>
  403038:	68bb      	ldr	r3, [r7, #8]
  40303a:	442b      	add	r3, r5
  40303c:	4298      	cmp	r0, r3
  40303e:	d004      	beq.n	40304a <_malloc_trim_r+0x46>
  403040:	4630      	mov	r0, r6
  403042:	f000 ff91 	bl	403f68 <__malloc_unlock>
  403046:	2000      	movs	r0, #0
  403048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40304a:	4630      	mov	r0, r6
  40304c:	4261      	negs	r1, r4
  40304e:	f001 fa15 	bl	40447c <_sbrk_r>
  403052:	3001      	adds	r0, #1
  403054:	d00d      	beq.n	403072 <_malloc_trim_r+0x6e>
  403056:	4b10      	ldr	r3, [pc, #64]	; (403098 <_malloc_trim_r+0x94>)
  403058:	68ba      	ldr	r2, [r7, #8]
  40305a:	6819      	ldr	r1, [r3, #0]
  40305c:	1b2d      	subs	r5, r5, r4
  40305e:	f045 0501 	orr.w	r5, r5, #1
  403062:	4630      	mov	r0, r6
  403064:	1b09      	subs	r1, r1, r4
  403066:	6055      	str	r5, [r2, #4]
  403068:	6019      	str	r1, [r3, #0]
  40306a:	f000 ff7d 	bl	403f68 <__malloc_unlock>
  40306e:	2001      	movs	r0, #1
  403070:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403072:	4630      	mov	r0, r6
  403074:	2100      	movs	r1, #0
  403076:	f001 fa01 	bl	40447c <_sbrk_r>
  40307a:	68ba      	ldr	r2, [r7, #8]
  40307c:	1a83      	subs	r3, r0, r2
  40307e:	2b0f      	cmp	r3, #15
  403080:	ddde      	ble.n	403040 <_malloc_trim_r+0x3c>
  403082:	4c06      	ldr	r4, [pc, #24]	; (40309c <_malloc_trim_r+0x98>)
  403084:	4904      	ldr	r1, [pc, #16]	; (403098 <_malloc_trim_r+0x94>)
  403086:	6824      	ldr	r4, [r4, #0]
  403088:	f043 0301 	orr.w	r3, r3, #1
  40308c:	1b00      	subs	r0, r0, r4
  40308e:	6053      	str	r3, [r2, #4]
  403090:	6008      	str	r0, [r1, #0]
  403092:	e7d5      	b.n	403040 <_malloc_trim_r+0x3c>
  403094:	2000045c 	.word	0x2000045c
  403098:	20000924 	.word	0x20000924
  40309c:	20000868 	.word	0x20000868

004030a0 <_free_r>:
  4030a0:	2900      	cmp	r1, #0
  4030a2:	d04e      	beq.n	403142 <_free_r+0xa2>
  4030a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4030a8:	460c      	mov	r4, r1
  4030aa:	4680      	mov	r8, r0
  4030ac:	f000 ff5a 	bl	403f64 <__malloc_lock>
  4030b0:	f854 7c04 	ldr.w	r7, [r4, #-4]
  4030b4:	4962      	ldr	r1, [pc, #392]	; (403240 <_free_r+0x1a0>)
  4030b6:	f027 0201 	bic.w	r2, r7, #1
  4030ba:	f1a4 0508 	sub.w	r5, r4, #8
  4030be:	18ab      	adds	r3, r5, r2
  4030c0:	688e      	ldr	r6, [r1, #8]
  4030c2:	6858      	ldr	r0, [r3, #4]
  4030c4:	429e      	cmp	r6, r3
  4030c6:	f020 0003 	bic.w	r0, r0, #3
  4030ca:	d05a      	beq.n	403182 <_free_r+0xe2>
  4030cc:	07fe      	lsls	r6, r7, #31
  4030ce:	6058      	str	r0, [r3, #4]
  4030d0:	d40b      	bmi.n	4030ea <_free_r+0x4a>
  4030d2:	f854 7c08 	ldr.w	r7, [r4, #-8]
  4030d6:	1bed      	subs	r5, r5, r7
  4030d8:	f101 0e08 	add.w	lr, r1, #8
  4030dc:	68ac      	ldr	r4, [r5, #8]
  4030de:	4574      	cmp	r4, lr
  4030e0:	443a      	add	r2, r7
  4030e2:	d067      	beq.n	4031b4 <_free_r+0x114>
  4030e4:	68ef      	ldr	r7, [r5, #12]
  4030e6:	60e7      	str	r7, [r4, #12]
  4030e8:	60bc      	str	r4, [r7, #8]
  4030ea:	181c      	adds	r4, r3, r0
  4030ec:	6864      	ldr	r4, [r4, #4]
  4030ee:	07e4      	lsls	r4, r4, #31
  4030f0:	d40c      	bmi.n	40310c <_free_r+0x6c>
  4030f2:	4f54      	ldr	r7, [pc, #336]	; (403244 <_free_r+0x1a4>)
  4030f4:	689c      	ldr	r4, [r3, #8]
  4030f6:	42bc      	cmp	r4, r7
  4030f8:	4402      	add	r2, r0
  4030fa:	d07c      	beq.n	4031f6 <_free_r+0x156>
  4030fc:	68d8      	ldr	r0, [r3, #12]
  4030fe:	60e0      	str	r0, [r4, #12]
  403100:	f042 0301 	orr.w	r3, r2, #1
  403104:	6084      	str	r4, [r0, #8]
  403106:	606b      	str	r3, [r5, #4]
  403108:	50aa      	str	r2, [r5, r2]
  40310a:	e003      	b.n	403114 <_free_r+0x74>
  40310c:	f042 0301 	orr.w	r3, r2, #1
  403110:	606b      	str	r3, [r5, #4]
  403112:	50aa      	str	r2, [r5, r2]
  403114:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  403118:	d214      	bcs.n	403144 <_free_r+0xa4>
  40311a:	08d2      	lsrs	r2, r2, #3
  40311c:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  403120:	6848      	ldr	r0, [r1, #4]
  403122:	689f      	ldr	r7, [r3, #8]
  403124:	60af      	str	r7, [r5, #8]
  403126:	1092      	asrs	r2, r2, #2
  403128:	2401      	movs	r4, #1
  40312a:	fa04 f202 	lsl.w	r2, r4, r2
  40312e:	4310      	orrs	r0, r2
  403130:	60eb      	str	r3, [r5, #12]
  403132:	6048      	str	r0, [r1, #4]
  403134:	609d      	str	r5, [r3, #8]
  403136:	60fd      	str	r5, [r7, #12]
  403138:	4640      	mov	r0, r8
  40313a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40313e:	f000 bf13 	b.w	403f68 <__malloc_unlock>
  403142:	4770      	bx	lr
  403144:	0a53      	lsrs	r3, r2, #9
  403146:	2b04      	cmp	r3, #4
  403148:	d847      	bhi.n	4031da <_free_r+0x13a>
  40314a:	0993      	lsrs	r3, r2, #6
  40314c:	f103 0438 	add.w	r4, r3, #56	; 0x38
  403150:	0060      	lsls	r0, r4, #1
  403152:	eb01 0080 	add.w	r0, r1, r0, lsl #2
  403156:	493a      	ldr	r1, [pc, #232]	; (403240 <_free_r+0x1a0>)
  403158:	6883      	ldr	r3, [r0, #8]
  40315a:	4283      	cmp	r3, r0
  40315c:	d043      	beq.n	4031e6 <_free_r+0x146>
  40315e:	6859      	ldr	r1, [r3, #4]
  403160:	f021 0103 	bic.w	r1, r1, #3
  403164:	4291      	cmp	r1, r2
  403166:	d902      	bls.n	40316e <_free_r+0xce>
  403168:	689b      	ldr	r3, [r3, #8]
  40316a:	4298      	cmp	r0, r3
  40316c:	d1f7      	bne.n	40315e <_free_r+0xbe>
  40316e:	68da      	ldr	r2, [r3, #12]
  403170:	60ea      	str	r2, [r5, #12]
  403172:	60ab      	str	r3, [r5, #8]
  403174:	4640      	mov	r0, r8
  403176:	6095      	str	r5, [r2, #8]
  403178:	60dd      	str	r5, [r3, #12]
  40317a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40317e:	f000 bef3 	b.w	403f68 <__malloc_unlock>
  403182:	07ff      	lsls	r7, r7, #31
  403184:	4402      	add	r2, r0
  403186:	d407      	bmi.n	403198 <_free_r+0xf8>
  403188:	f854 3c08 	ldr.w	r3, [r4, #-8]
  40318c:	1aed      	subs	r5, r5, r3
  40318e:	441a      	add	r2, r3
  403190:	68a8      	ldr	r0, [r5, #8]
  403192:	68eb      	ldr	r3, [r5, #12]
  403194:	60c3      	str	r3, [r0, #12]
  403196:	6098      	str	r0, [r3, #8]
  403198:	4b2b      	ldr	r3, [pc, #172]	; (403248 <_free_r+0x1a8>)
  40319a:	681b      	ldr	r3, [r3, #0]
  40319c:	f042 0001 	orr.w	r0, r2, #1
  4031a0:	429a      	cmp	r2, r3
  4031a2:	6068      	str	r0, [r5, #4]
  4031a4:	608d      	str	r5, [r1, #8]
  4031a6:	d3c7      	bcc.n	403138 <_free_r+0x98>
  4031a8:	4b28      	ldr	r3, [pc, #160]	; (40324c <_free_r+0x1ac>)
  4031aa:	4640      	mov	r0, r8
  4031ac:	6819      	ldr	r1, [r3, #0]
  4031ae:	f7ff ff29 	bl	403004 <_malloc_trim_r>
  4031b2:	e7c1      	b.n	403138 <_free_r+0x98>
  4031b4:	1819      	adds	r1, r3, r0
  4031b6:	6849      	ldr	r1, [r1, #4]
  4031b8:	07c9      	lsls	r1, r1, #31
  4031ba:	d409      	bmi.n	4031d0 <_free_r+0x130>
  4031bc:	68d9      	ldr	r1, [r3, #12]
  4031be:	689b      	ldr	r3, [r3, #8]
  4031c0:	4402      	add	r2, r0
  4031c2:	f042 0001 	orr.w	r0, r2, #1
  4031c6:	60d9      	str	r1, [r3, #12]
  4031c8:	608b      	str	r3, [r1, #8]
  4031ca:	6068      	str	r0, [r5, #4]
  4031cc:	50aa      	str	r2, [r5, r2]
  4031ce:	e7b3      	b.n	403138 <_free_r+0x98>
  4031d0:	f042 0301 	orr.w	r3, r2, #1
  4031d4:	606b      	str	r3, [r5, #4]
  4031d6:	50aa      	str	r2, [r5, r2]
  4031d8:	e7ae      	b.n	403138 <_free_r+0x98>
  4031da:	2b14      	cmp	r3, #20
  4031dc:	d814      	bhi.n	403208 <_free_r+0x168>
  4031de:	f103 045b 	add.w	r4, r3, #91	; 0x5b
  4031e2:	0060      	lsls	r0, r4, #1
  4031e4:	e7b5      	b.n	403152 <_free_r+0xb2>
  4031e6:	684a      	ldr	r2, [r1, #4]
  4031e8:	10a4      	asrs	r4, r4, #2
  4031ea:	2001      	movs	r0, #1
  4031ec:	40a0      	lsls	r0, r4
  4031ee:	4302      	orrs	r2, r0
  4031f0:	604a      	str	r2, [r1, #4]
  4031f2:	461a      	mov	r2, r3
  4031f4:	e7bc      	b.n	403170 <_free_r+0xd0>
  4031f6:	f042 0301 	orr.w	r3, r2, #1
  4031fa:	614d      	str	r5, [r1, #20]
  4031fc:	610d      	str	r5, [r1, #16]
  4031fe:	60ec      	str	r4, [r5, #12]
  403200:	60ac      	str	r4, [r5, #8]
  403202:	606b      	str	r3, [r5, #4]
  403204:	50aa      	str	r2, [r5, r2]
  403206:	e797      	b.n	403138 <_free_r+0x98>
  403208:	2b54      	cmp	r3, #84	; 0x54
  40320a:	d804      	bhi.n	403216 <_free_r+0x176>
  40320c:	0b13      	lsrs	r3, r2, #12
  40320e:	f103 046e 	add.w	r4, r3, #110	; 0x6e
  403212:	0060      	lsls	r0, r4, #1
  403214:	e79d      	b.n	403152 <_free_r+0xb2>
  403216:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40321a:	d804      	bhi.n	403226 <_free_r+0x186>
  40321c:	0bd3      	lsrs	r3, r2, #15
  40321e:	f103 0477 	add.w	r4, r3, #119	; 0x77
  403222:	0060      	lsls	r0, r4, #1
  403224:	e795      	b.n	403152 <_free_r+0xb2>
  403226:	f240 5054 	movw	r0, #1364	; 0x554
  40322a:	4283      	cmp	r3, r0
  40322c:	d804      	bhi.n	403238 <_free_r+0x198>
  40322e:	0c93      	lsrs	r3, r2, #18
  403230:	f103 047c 	add.w	r4, r3, #124	; 0x7c
  403234:	0060      	lsls	r0, r4, #1
  403236:	e78c      	b.n	403152 <_free_r+0xb2>
  403238:	20fc      	movs	r0, #252	; 0xfc
  40323a:	247e      	movs	r4, #126	; 0x7e
  40323c:	e789      	b.n	403152 <_free_r+0xb2>
  40323e:	bf00      	nop
  403240:	2000045c 	.word	0x2000045c
  403244:	20000464 	.word	0x20000464
  403248:	20000864 	.word	0x20000864
  40324c:	20000920 	.word	0x20000920

00403250 <__sfvwrite_r>:
  403250:	6893      	ldr	r3, [r2, #8]
  403252:	2b00      	cmp	r3, #0
  403254:	d07a      	beq.n	40334c <__sfvwrite_r+0xfc>
  403256:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40325a:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  40325e:	f01e 0f08 	tst.w	lr, #8
  403262:	b083      	sub	sp, #12
  403264:	460c      	mov	r4, r1
  403266:	4681      	mov	r9, r0
  403268:	4616      	mov	r6, r2
  40326a:	d026      	beq.n	4032ba <__sfvwrite_r+0x6a>
  40326c:	690b      	ldr	r3, [r1, #16]
  40326e:	b323      	cbz	r3, 4032ba <__sfvwrite_r+0x6a>
  403270:	f00e 0802 	and.w	r8, lr, #2
  403274:	fa1f f088 	uxth.w	r0, r8
  403278:	6835      	ldr	r5, [r6, #0]
  40327a:	b370      	cbz	r0, 4032da <__sfvwrite_r+0x8a>
  40327c:	f04f 0a00 	mov.w	sl, #0
  403280:	f8df b2e0 	ldr.w	fp, [pc, #736]	; 403564 <__sfvwrite_r+0x314>
  403284:	46d0      	mov	r8, sl
  403286:	45d8      	cmp	r8, fp
  403288:	4643      	mov	r3, r8
  40328a:	4652      	mov	r2, sl
  40328c:	bf28      	it	cs
  40328e:	465b      	movcs	r3, fp
  403290:	4648      	mov	r0, r9
  403292:	f1b8 0f00 	cmp.w	r8, #0
  403296:	d053      	beq.n	403340 <__sfvwrite_r+0xf0>
  403298:	69e1      	ldr	r1, [r4, #28]
  40329a:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40329c:	47b8      	blx	r7
  40329e:	2800      	cmp	r0, #0
  4032a0:	dd73      	ble.n	40338a <__sfvwrite_r+0x13a>
  4032a2:	68b3      	ldr	r3, [r6, #8]
  4032a4:	1a1b      	subs	r3, r3, r0
  4032a6:	4482      	add	sl, r0
  4032a8:	ebc0 0808 	rsb	r8, r0, r8
  4032ac:	60b3      	str	r3, [r6, #8]
  4032ae:	2b00      	cmp	r3, #0
  4032b0:	d1e9      	bne.n	403286 <__sfvwrite_r+0x36>
  4032b2:	2000      	movs	r0, #0
  4032b4:	b003      	add	sp, #12
  4032b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032ba:	4648      	mov	r0, r9
  4032bc:	4621      	mov	r1, r4
  4032be:	f7ff fb8b 	bl	4029d8 <__swsetup_r>
  4032c2:	2800      	cmp	r0, #0
  4032c4:	f040 8145 	bne.w	403552 <__sfvwrite_r+0x302>
  4032c8:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  4032cc:	6835      	ldr	r5, [r6, #0]
  4032ce:	f00e 0802 	and.w	r8, lr, #2
  4032d2:	fa1f f088 	uxth.w	r0, r8
  4032d6:	2800      	cmp	r0, #0
  4032d8:	d1d0      	bne.n	40327c <__sfvwrite_r+0x2c>
  4032da:	f01e 0b01 	ands.w	fp, lr, #1
  4032de:	d15d      	bne.n	40339c <__sfvwrite_r+0x14c>
  4032e0:	46d8      	mov	r8, fp
  4032e2:	f1b8 0f00 	cmp.w	r8, #0
  4032e6:	d025      	beq.n	403334 <__sfvwrite_r+0xe4>
  4032e8:	f41e 7f00 	tst.w	lr, #512	; 0x200
  4032ec:	68a7      	ldr	r7, [r4, #8]
  4032ee:	d02f      	beq.n	403350 <__sfvwrite_r+0x100>
  4032f0:	45b8      	cmp	r8, r7
  4032f2:	46ba      	mov	sl, r7
  4032f4:	f0c0 80a9 	bcc.w	40344a <__sfvwrite_r+0x1fa>
  4032f8:	f41e 6f90 	tst.w	lr, #1152	; 0x480
  4032fc:	f040 80b6 	bne.w	40346c <__sfvwrite_r+0x21c>
  403300:	6820      	ldr	r0, [r4, #0]
  403302:	4652      	mov	r2, sl
  403304:	4659      	mov	r1, fp
  403306:	f000 fdc9 	bl	403e9c <memmove>
  40330a:	68a0      	ldr	r0, [r4, #8]
  40330c:	6822      	ldr	r2, [r4, #0]
  40330e:	1bc0      	subs	r0, r0, r7
  403310:	eb02 030a 	add.w	r3, r2, sl
  403314:	60a0      	str	r0, [r4, #8]
  403316:	6023      	str	r3, [r4, #0]
  403318:	4640      	mov	r0, r8
  40331a:	68b3      	ldr	r3, [r6, #8]
  40331c:	1a1b      	subs	r3, r3, r0
  40331e:	4483      	add	fp, r0
  403320:	ebc0 0808 	rsb	r8, r0, r8
  403324:	60b3      	str	r3, [r6, #8]
  403326:	2b00      	cmp	r3, #0
  403328:	d0c3      	beq.n	4032b2 <__sfvwrite_r+0x62>
  40332a:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  40332e:	f1b8 0f00 	cmp.w	r8, #0
  403332:	d1d9      	bne.n	4032e8 <__sfvwrite_r+0x98>
  403334:	f8d5 b000 	ldr.w	fp, [r5]
  403338:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40333c:	3508      	adds	r5, #8
  40333e:	e7d0      	b.n	4032e2 <__sfvwrite_r+0x92>
  403340:	f8d5 a000 	ldr.w	sl, [r5]
  403344:	f8d5 8004 	ldr.w	r8, [r5, #4]
  403348:	3508      	adds	r5, #8
  40334a:	e79c      	b.n	403286 <__sfvwrite_r+0x36>
  40334c:	2000      	movs	r0, #0
  40334e:	4770      	bx	lr
  403350:	6820      	ldr	r0, [r4, #0]
  403352:	6923      	ldr	r3, [r4, #16]
  403354:	4298      	cmp	r0, r3
  403356:	d803      	bhi.n	403360 <__sfvwrite_r+0x110>
  403358:	6962      	ldr	r2, [r4, #20]
  40335a:	4590      	cmp	r8, r2
  40335c:	f080 80b9 	bcs.w	4034d2 <__sfvwrite_r+0x282>
  403360:	4547      	cmp	r7, r8
  403362:	bf28      	it	cs
  403364:	4647      	movcs	r7, r8
  403366:	463a      	mov	r2, r7
  403368:	4659      	mov	r1, fp
  40336a:	f000 fd97 	bl	403e9c <memmove>
  40336e:	68a3      	ldr	r3, [r4, #8]
  403370:	6822      	ldr	r2, [r4, #0]
  403372:	1bdb      	subs	r3, r3, r7
  403374:	443a      	add	r2, r7
  403376:	60a3      	str	r3, [r4, #8]
  403378:	6022      	str	r2, [r4, #0]
  40337a:	2b00      	cmp	r3, #0
  40337c:	d14a      	bne.n	403414 <__sfvwrite_r+0x1c4>
  40337e:	4648      	mov	r0, r9
  403380:	4621      	mov	r1, r4
  403382:	f7ff fc45 	bl	402c10 <_fflush_r>
  403386:	2800      	cmp	r0, #0
  403388:	d044      	beq.n	403414 <__sfvwrite_r+0x1c4>
  40338a:	89a3      	ldrh	r3, [r4, #12]
  40338c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403390:	f04f 30ff 	mov.w	r0, #4294967295
  403394:	81a3      	strh	r3, [r4, #12]
  403396:	b003      	add	sp, #12
  403398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40339c:	4680      	mov	r8, r0
  40339e:	9000      	str	r0, [sp, #0]
  4033a0:	4683      	mov	fp, r0
  4033a2:	4682      	mov	sl, r0
  4033a4:	f1ba 0f00 	cmp.w	sl, #0
  4033a8:	d02c      	beq.n	403404 <__sfvwrite_r+0x1b4>
  4033aa:	9b00      	ldr	r3, [sp, #0]
  4033ac:	2b00      	cmp	r3, #0
  4033ae:	d050      	beq.n	403452 <__sfvwrite_r+0x202>
  4033b0:	6820      	ldr	r0, [r4, #0]
  4033b2:	6921      	ldr	r1, [r4, #16]
  4033b4:	f8d4 e008 	ldr.w	lr, [r4, #8]
  4033b8:	6962      	ldr	r2, [r4, #20]
  4033ba:	45d0      	cmp	r8, sl
  4033bc:	4643      	mov	r3, r8
  4033be:	bf28      	it	cs
  4033c0:	4653      	movcs	r3, sl
  4033c2:	4288      	cmp	r0, r1
  4033c4:	461f      	mov	r7, r3
  4033c6:	d904      	bls.n	4033d2 <__sfvwrite_r+0x182>
  4033c8:	eb0e 0c02 	add.w	ip, lr, r2
  4033cc:	4563      	cmp	r3, ip
  4033ce:	f300 8092 	bgt.w	4034f6 <__sfvwrite_r+0x2a6>
  4033d2:	4293      	cmp	r3, r2
  4033d4:	db20      	blt.n	403418 <__sfvwrite_r+0x1c8>
  4033d6:	4613      	mov	r3, r2
  4033d8:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4033da:	69e1      	ldr	r1, [r4, #28]
  4033dc:	4648      	mov	r0, r9
  4033de:	465a      	mov	r2, fp
  4033e0:	47b8      	blx	r7
  4033e2:	1e07      	subs	r7, r0, #0
  4033e4:	ddd1      	ble.n	40338a <__sfvwrite_r+0x13a>
  4033e6:	ebb8 0807 	subs.w	r8, r8, r7
  4033ea:	d025      	beq.n	403438 <__sfvwrite_r+0x1e8>
  4033ec:	68b3      	ldr	r3, [r6, #8]
  4033ee:	1bdb      	subs	r3, r3, r7
  4033f0:	44bb      	add	fp, r7
  4033f2:	ebc7 0a0a 	rsb	sl, r7, sl
  4033f6:	60b3      	str	r3, [r6, #8]
  4033f8:	2b00      	cmp	r3, #0
  4033fa:	f43f af5a 	beq.w	4032b2 <__sfvwrite_r+0x62>
  4033fe:	f1ba 0f00 	cmp.w	sl, #0
  403402:	d1d2      	bne.n	4033aa <__sfvwrite_r+0x15a>
  403404:	2300      	movs	r3, #0
  403406:	f8d5 b000 	ldr.w	fp, [r5]
  40340a:	f8d5 a004 	ldr.w	sl, [r5, #4]
  40340e:	9300      	str	r3, [sp, #0]
  403410:	3508      	adds	r5, #8
  403412:	e7c7      	b.n	4033a4 <__sfvwrite_r+0x154>
  403414:	4638      	mov	r0, r7
  403416:	e780      	b.n	40331a <__sfvwrite_r+0xca>
  403418:	461a      	mov	r2, r3
  40341a:	4659      	mov	r1, fp
  40341c:	9301      	str	r3, [sp, #4]
  40341e:	f000 fd3d 	bl	403e9c <memmove>
  403422:	68a2      	ldr	r2, [r4, #8]
  403424:	6821      	ldr	r1, [r4, #0]
  403426:	9b01      	ldr	r3, [sp, #4]
  403428:	ebb8 0807 	subs.w	r8, r8, r7
  40342c:	eba2 0203 	sub.w	r2, r2, r3
  403430:	440b      	add	r3, r1
  403432:	60a2      	str	r2, [r4, #8]
  403434:	6023      	str	r3, [r4, #0]
  403436:	d1d9      	bne.n	4033ec <__sfvwrite_r+0x19c>
  403438:	4648      	mov	r0, r9
  40343a:	4621      	mov	r1, r4
  40343c:	f7ff fbe8 	bl	402c10 <_fflush_r>
  403440:	2800      	cmp	r0, #0
  403442:	d1a2      	bne.n	40338a <__sfvwrite_r+0x13a>
  403444:	f8cd 8000 	str.w	r8, [sp]
  403448:	e7d0      	b.n	4033ec <__sfvwrite_r+0x19c>
  40344a:	6820      	ldr	r0, [r4, #0]
  40344c:	4647      	mov	r7, r8
  40344e:	46c2      	mov	sl, r8
  403450:	e757      	b.n	403302 <__sfvwrite_r+0xb2>
  403452:	4658      	mov	r0, fp
  403454:	210a      	movs	r1, #10
  403456:	4652      	mov	r2, sl
  403458:	f000 fc3c 	bl	403cd4 <memchr>
  40345c:	2800      	cmp	r0, #0
  40345e:	d073      	beq.n	403548 <__sfvwrite_r+0x2f8>
  403460:	3001      	adds	r0, #1
  403462:	2301      	movs	r3, #1
  403464:	ebcb 0800 	rsb	r8, fp, r0
  403468:	9300      	str	r3, [sp, #0]
  40346a:	e7a1      	b.n	4033b0 <__sfvwrite_r+0x160>
  40346c:	6967      	ldr	r7, [r4, #20]
  40346e:	6921      	ldr	r1, [r4, #16]
  403470:	6823      	ldr	r3, [r4, #0]
  403472:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  403476:	1a5b      	subs	r3, r3, r1
  403478:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  40347c:	1c58      	adds	r0, r3, #1
  40347e:	107f      	asrs	r7, r7, #1
  403480:	4440      	add	r0, r8
  403482:	4287      	cmp	r7, r0
  403484:	463a      	mov	r2, r7
  403486:	bf3c      	itt	cc
  403488:	4607      	movcc	r7, r0
  40348a:	463a      	movcc	r2, r7
  40348c:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  403490:	9300      	str	r3, [sp, #0]
  403492:	d046      	beq.n	403522 <__sfvwrite_r+0x2d2>
  403494:	4611      	mov	r1, r2
  403496:	4648      	mov	r0, r9
  403498:	f000 f946 	bl	403728 <_malloc_r>
  40349c:	9b00      	ldr	r3, [sp, #0]
  40349e:	4682      	mov	sl, r0
  4034a0:	2800      	cmp	r0, #0
  4034a2:	d059      	beq.n	403558 <__sfvwrite_r+0x308>
  4034a4:	461a      	mov	r2, r3
  4034a6:	6921      	ldr	r1, [r4, #16]
  4034a8:	9300      	str	r3, [sp, #0]
  4034aa:	f000 fc5d 	bl	403d68 <memcpy>
  4034ae:	89a2      	ldrh	r2, [r4, #12]
  4034b0:	9b00      	ldr	r3, [sp, #0]
  4034b2:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4034b6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4034ba:	81a2      	strh	r2, [r4, #12]
  4034bc:	eb0a 0003 	add.w	r0, sl, r3
  4034c0:	1afb      	subs	r3, r7, r3
  4034c2:	f8c4 a010 	str.w	sl, [r4, #16]
  4034c6:	6167      	str	r7, [r4, #20]
  4034c8:	6020      	str	r0, [r4, #0]
  4034ca:	60a3      	str	r3, [r4, #8]
  4034cc:	4647      	mov	r7, r8
  4034ce:	46c2      	mov	sl, r8
  4034d0:	e717      	b.n	403302 <__sfvwrite_r+0xb2>
  4034d2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  4034d6:	4543      	cmp	r3, r8
  4034d8:	bf28      	it	cs
  4034da:	4643      	movcs	r3, r8
  4034dc:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4034de:	fb93 f3f2 	sdiv	r3, r3, r2
  4034e2:	4648      	mov	r0, r9
  4034e4:	fb03 f302 	mul.w	r3, r3, r2
  4034e8:	69e1      	ldr	r1, [r4, #28]
  4034ea:	465a      	mov	r2, fp
  4034ec:	47b8      	blx	r7
  4034ee:	2800      	cmp	r0, #0
  4034f0:	f73f af13 	bgt.w	40331a <__sfvwrite_r+0xca>
  4034f4:	e749      	b.n	40338a <__sfvwrite_r+0x13a>
  4034f6:	4662      	mov	r2, ip
  4034f8:	4659      	mov	r1, fp
  4034fa:	f8cd c004 	str.w	ip, [sp, #4]
  4034fe:	f000 fccd 	bl	403e9c <memmove>
  403502:	6823      	ldr	r3, [r4, #0]
  403504:	f8dd c004 	ldr.w	ip, [sp, #4]
  403508:	4463      	add	r3, ip
  40350a:	6023      	str	r3, [r4, #0]
  40350c:	4648      	mov	r0, r9
  40350e:	4621      	mov	r1, r4
  403510:	f7ff fb7e 	bl	402c10 <_fflush_r>
  403514:	f8dd c004 	ldr.w	ip, [sp, #4]
  403518:	2800      	cmp	r0, #0
  40351a:	f47f af36 	bne.w	40338a <__sfvwrite_r+0x13a>
  40351e:	4667      	mov	r7, ip
  403520:	e761      	b.n	4033e6 <__sfvwrite_r+0x196>
  403522:	4648      	mov	r0, r9
  403524:	f000 fd22 	bl	403f6c <_realloc_r>
  403528:	9b00      	ldr	r3, [sp, #0]
  40352a:	4682      	mov	sl, r0
  40352c:	2800      	cmp	r0, #0
  40352e:	d1c5      	bne.n	4034bc <__sfvwrite_r+0x26c>
  403530:	4648      	mov	r0, r9
  403532:	6921      	ldr	r1, [r4, #16]
  403534:	f7ff fdb4 	bl	4030a0 <_free_r>
  403538:	89a3      	ldrh	r3, [r4, #12]
  40353a:	220c      	movs	r2, #12
  40353c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  403540:	b29b      	uxth	r3, r3
  403542:	f8c9 2000 	str.w	r2, [r9]
  403546:	e721      	b.n	40338c <__sfvwrite_r+0x13c>
  403548:	2301      	movs	r3, #1
  40354a:	f10a 0801 	add.w	r8, sl, #1
  40354e:	9300      	str	r3, [sp, #0]
  403550:	e72e      	b.n	4033b0 <__sfvwrite_r+0x160>
  403552:	f04f 30ff 	mov.w	r0, #4294967295
  403556:	e6ad      	b.n	4032b4 <__sfvwrite_r+0x64>
  403558:	230c      	movs	r3, #12
  40355a:	f8c9 3000 	str.w	r3, [r9]
  40355e:	89a3      	ldrh	r3, [r4, #12]
  403560:	e714      	b.n	40338c <__sfvwrite_r+0x13c>
  403562:	bf00      	nop
  403564:	7ffffc00 	.word	0x7ffffc00

00403568 <_fwalk>:
  403568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40356c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403570:	d01b      	beq.n	4035aa <_fwalk+0x42>
  403572:	4688      	mov	r8, r1
  403574:	2600      	movs	r6, #0
  403576:	687d      	ldr	r5, [r7, #4]
  403578:	68bc      	ldr	r4, [r7, #8]
  40357a:	3d01      	subs	r5, #1
  40357c:	d40f      	bmi.n	40359e <_fwalk+0x36>
  40357e:	89a3      	ldrh	r3, [r4, #12]
  403580:	2b01      	cmp	r3, #1
  403582:	f105 35ff 	add.w	r5, r5, #4294967295
  403586:	d906      	bls.n	403596 <_fwalk+0x2e>
  403588:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40358c:	3301      	adds	r3, #1
  40358e:	4620      	mov	r0, r4
  403590:	d001      	beq.n	403596 <_fwalk+0x2e>
  403592:	47c0      	blx	r8
  403594:	4306      	orrs	r6, r0
  403596:	1c6b      	adds	r3, r5, #1
  403598:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40359c:	d1ef      	bne.n	40357e <_fwalk+0x16>
  40359e:	683f      	ldr	r7, [r7, #0]
  4035a0:	2f00      	cmp	r7, #0
  4035a2:	d1e8      	bne.n	403576 <_fwalk+0xe>
  4035a4:	4630      	mov	r0, r6
  4035a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4035aa:	463e      	mov	r6, r7
  4035ac:	4630      	mov	r0, r6
  4035ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4035b2:	bf00      	nop

004035b4 <_fwalk_reent>:
  4035b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4035b8:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4035bc:	d01f      	beq.n	4035fe <_fwalk_reent+0x4a>
  4035be:	4688      	mov	r8, r1
  4035c0:	4606      	mov	r6, r0
  4035c2:	f04f 0900 	mov.w	r9, #0
  4035c6:	687d      	ldr	r5, [r7, #4]
  4035c8:	68bc      	ldr	r4, [r7, #8]
  4035ca:	3d01      	subs	r5, #1
  4035cc:	d411      	bmi.n	4035f2 <_fwalk_reent+0x3e>
  4035ce:	89a3      	ldrh	r3, [r4, #12]
  4035d0:	2b01      	cmp	r3, #1
  4035d2:	f105 35ff 	add.w	r5, r5, #4294967295
  4035d6:	d908      	bls.n	4035ea <_fwalk_reent+0x36>
  4035d8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4035dc:	3301      	adds	r3, #1
  4035de:	4621      	mov	r1, r4
  4035e0:	4630      	mov	r0, r6
  4035e2:	d002      	beq.n	4035ea <_fwalk_reent+0x36>
  4035e4:	47c0      	blx	r8
  4035e6:	ea49 0900 	orr.w	r9, r9, r0
  4035ea:	1c6b      	adds	r3, r5, #1
  4035ec:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4035f0:	d1ed      	bne.n	4035ce <_fwalk_reent+0x1a>
  4035f2:	683f      	ldr	r7, [r7, #0]
  4035f4:	2f00      	cmp	r7, #0
  4035f6:	d1e6      	bne.n	4035c6 <_fwalk_reent+0x12>
  4035f8:	4648      	mov	r0, r9
  4035fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4035fe:	46b9      	mov	r9, r7
  403600:	4648      	mov	r0, r9
  403602:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403606:	bf00      	nop

00403608 <iswspace>:
  403608:	28ff      	cmp	r0, #255	; 0xff
  40360a:	d807      	bhi.n	40361c <iswspace+0x14>
  40360c:	4b04      	ldr	r3, [pc, #16]	; (403620 <iswspace+0x18>)
  40360e:	681b      	ldr	r3, [r3, #0]
  403610:	4418      	add	r0, r3
  403612:	7840      	ldrb	r0, [r0, #1]
  403614:	f000 0008 	and.w	r0, r0, #8
  403618:	b2c0      	uxtb	r0, r0
  40361a:	4770      	bx	lr
  40361c:	2000      	movs	r0, #0
  40361e:	4770      	bx	lr
  403620:	20000434 	.word	0x20000434

00403624 <__locale_charset>:
  403624:	4800      	ldr	r0, [pc, #0]	; (403628 <__locale_charset+0x4>)
  403626:	4770      	bx	lr
  403628:	20000438 	.word	0x20000438

0040362c <__locale_mb_cur_max>:
  40362c:	4b01      	ldr	r3, [pc, #4]	; (403634 <__locale_mb_cur_max+0x8>)
  40362e:	6818      	ldr	r0, [r3, #0]
  403630:	4770      	bx	lr
  403632:	bf00      	nop
  403634:	20000458 	.word	0x20000458

00403638 <__smakebuf_r>:
  403638:	898b      	ldrh	r3, [r1, #12]
  40363a:	b29a      	uxth	r2, r3
  40363c:	f012 0f02 	tst.w	r2, #2
  403640:	d13c      	bne.n	4036bc <__smakebuf_r+0x84>
  403642:	b5f0      	push	{r4, r5, r6, r7, lr}
  403644:	460c      	mov	r4, r1
  403646:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40364a:	2900      	cmp	r1, #0
  40364c:	b091      	sub	sp, #68	; 0x44
  40364e:	4605      	mov	r5, r0
  403650:	db19      	blt.n	403686 <__smakebuf_r+0x4e>
  403652:	aa01      	add	r2, sp, #4
  403654:	f001 fc82 	bl	404f5c <_fstat_r>
  403658:	2800      	cmp	r0, #0
  40365a:	db12      	blt.n	403682 <__smakebuf_r+0x4a>
  40365c:	9b02      	ldr	r3, [sp, #8]
  40365e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  403662:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  403666:	f5a3 5700 	sub.w	r7, r3, #8192	; 0x2000
  40366a:	fab7 f787 	clz	r7, r7
  40366e:	ea4f 1757 	mov.w	r7, r7, lsr #5
  403672:	d02a      	beq.n	4036ca <__smakebuf_r+0x92>
  403674:	89a3      	ldrh	r3, [r4, #12]
  403676:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40367a:	81a3      	strh	r3, [r4, #12]
  40367c:	f44f 6680 	mov.w	r6, #1024	; 0x400
  403680:	e00b      	b.n	40369a <__smakebuf_r+0x62>
  403682:	89a3      	ldrh	r3, [r4, #12]
  403684:	b29a      	uxth	r2, r3
  403686:	f012 0f80 	tst.w	r2, #128	; 0x80
  40368a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40368e:	81a3      	strh	r3, [r4, #12]
  403690:	bf0c      	ite	eq
  403692:	f44f 6680 	moveq.w	r6, #1024	; 0x400
  403696:	2640      	movne	r6, #64	; 0x40
  403698:	2700      	movs	r7, #0
  40369a:	4628      	mov	r0, r5
  40369c:	4631      	mov	r1, r6
  40369e:	f000 f843 	bl	403728 <_malloc_r>
  4036a2:	89a3      	ldrh	r3, [r4, #12]
  4036a4:	b340      	cbz	r0, 4036f8 <__smakebuf_r+0xc0>
  4036a6:	4a1a      	ldr	r2, [pc, #104]	; (403710 <__smakebuf_r+0xd8>)
  4036a8:	63ea      	str	r2, [r5, #60]	; 0x3c
  4036aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4036ae:	81a3      	strh	r3, [r4, #12]
  4036b0:	6020      	str	r0, [r4, #0]
  4036b2:	6120      	str	r0, [r4, #16]
  4036b4:	6166      	str	r6, [r4, #20]
  4036b6:	b99f      	cbnz	r7, 4036e0 <__smakebuf_r+0xa8>
  4036b8:	b011      	add	sp, #68	; 0x44
  4036ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4036bc:	f101 0343 	add.w	r3, r1, #67	; 0x43
  4036c0:	2201      	movs	r2, #1
  4036c2:	600b      	str	r3, [r1, #0]
  4036c4:	610b      	str	r3, [r1, #16]
  4036c6:	614a      	str	r2, [r1, #20]
  4036c8:	4770      	bx	lr
  4036ca:	4b12      	ldr	r3, [pc, #72]	; (403714 <__smakebuf_r+0xdc>)
  4036cc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  4036ce:	429a      	cmp	r2, r3
  4036d0:	d1d0      	bne.n	403674 <__smakebuf_r+0x3c>
  4036d2:	89a3      	ldrh	r3, [r4, #12]
  4036d4:	f44f 6680 	mov.w	r6, #1024	; 0x400
  4036d8:	4333      	orrs	r3, r6
  4036da:	81a3      	strh	r3, [r4, #12]
  4036dc:	64e6      	str	r6, [r4, #76]	; 0x4c
  4036de:	e7dc      	b.n	40369a <__smakebuf_r+0x62>
  4036e0:	4628      	mov	r0, r5
  4036e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4036e6:	f001 fc4d 	bl	404f84 <_isatty_r>
  4036ea:	2800      	cmp	r0, #0
  4036ec:	d0e4      	beq.n	4036b8 <__smakebuf_r+0x80>
  4036ee:	89a3      	ldrh	r3, [r4, #12]
  4036f0:	f043 0301 	orr.w	r3, r3, #1
  4036f4:	81a3      	strh	r3, [r4, #12]
  4036f6:	e7df      	b.n	4036b8 <__smakebuf_r+0x80>
  4036f8:	059a      	lsls	r2, r3, #22
  4036fa:	d4dd      	bmi.n	4036b8 <__smakebuf_r+0x80>
  4036fc:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403700:	f043 0302 	orr.w	r3, r3, #2
  403704:	2101      	movs	r1, #1
  403706:	81a3      	strh	r3, [r4, #12]
  403708:	6022      	str	r2, [r4, #0]
  40370a:	6122      	str	r2, [r4, #16]
  40370c:	6161      	str	r1, [r4, #20]
  40370e:	e7d3      	b.n	4036b8 <__smakebuf_r+0x80>
  403710:	00402c61 	.word	0x00402c61
  403714:	00404575 	.word	0x00404575

00403718 <malloc>:
  403718:	4b02      	ldr	r3, [pc, #8]	; (403724 <malloc+0xc>)
  40371a:	4601      	mov	r1, r0
  40371c:	6818      	ldr	r0, [r3, #0]
  40371e:	f000 b803 	b.w	403728 <_malloc_r>
  403722:	bf00      	nop
  403724:	20000430 	.word	0x20000430

00403728 <_malloc_r>:
  403728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40372c:	f101 050b 	add.w	r5, r1, #11
  403730:	2d16      	cmp	r5, #22
  403732:	b083      	sub	sp, #12
  403734:	4606      	mov	r6, r0
  403736:	d927      	bls.n	403788 <_malloc_r+0x60>
  403738:	f035 0507 	bics.w	r5, r5, #7
  40373c:	f100 80b6 	bmi.w	4038ac <_malloc_r+0x184>
  403740:	42a9      	cmp	r1, r5
  403742:	f200 80b3 	bhi.w	4038ac <_malloc_r+0x184>
  403746:	f000 fc0d 	bl	403f64 <__malloc_lock>
  40374a:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  40374e:	d222      	bcs.n	403796 <_malloc_r+0x6e>
  403750:	4fc2      	ldr	r7, [pc, #776]	; (403a5c <_malloc_r+0x334>)
  403752:	08e8      	lsrs	r0, r5, #3
  403754:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
  403758:	68dc      	ldr	r4, [r3, #12]
  40375a:	429c      	cmp	r4, r3
  40375c:	f000 81c8 	beq.w	403af0 <_malloc_r+0x3c8>
  403760:	6863      	ldr	r3, [r4, #4]
  403762:	68e1      	ldr	r1, [r4, #12]
  403764:	68a5      	ldr	r5, [r4, #8]
  403766:	f023 0303 	bic.w	r3, r3, #3
  40376a:	4423      	add	r3, r4
  40376c:	4630      	mov	r0, r6
  40376e:	685a      	ldr	r2, [r3, #4]
  403770:	60e9      	str	r1, [r5, #12]
  403772:	f042 0201 	orr.w	r2, r2, #1
  403776:	608d      	str	r5, [r1, #8]
  403778:	605a      	str	r2, [r3, #4]
  40377a:	f000 fbf5 	bl	403f68 <__malloc_unlock>
  40377e:	3408      	adds	r4, #8
  403780:	4620      	mov	r0, r4
  403782:	b003      	add	sp, #12
  403784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403788:	2910      	cmp	r1, #16
  40378a:	f200 808f 	bhi.w	4038ac <_malloc_r+0x184>
  40378e:	f000 fbe9 	bl	403f64 <__malloc_lock>
  403792:	2510      	movs	r5, #16
  403794:	e7dc      	b.n	403750 <_malloc_r+0x28>
  403796:	0a68      	lsrs	r0, r5, #9
  403798:	f000 808f 	beq.w	4038ba <_malloc_r+0x192>
  40379c:	2804      	cmp	r0, #4
  40379e:	f200 8154 	bhi.w	403a4a <_malloc_r+0x322>
  4037a2:	09a8      	lsrs	r0, r5, #6
  4037a4:	3038      	adds	r0, #56	; 0x38
  4037a6:	0041      	lsls	r1, r0, #1
  4037a8:	4fac      	ldr	r7, [pc, #688]	; (403a5c <_malloc_r+0x334>)
  4037aa:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  4037ae:	68cc      	ldr	r4, [r1, #12]
  4037b0:	42a1      	cmp	r1, r4
  4037b2:	d106      	bne.n	4037c2 <_malloc_r+0x9a>
  4037b4:	e00c      	b.n	4037d0 <_malloc_r+0xa8>
  4037b6:	2a00      	cmp	r2, #0
  4037b8:	f280 8082 	bge.w	4038c0 <_malloc_r+0x198>
  4037bc:	68e4      	ldr	r4, [r4, #12]
  4037be:	42a1      	cmp	r1, r4
  4037c0:	d006      	beq.n	4037d0 <_malloc_r+0xa8>
  4037c2:	6863      	ldr	r3, [r4, #4]
  4037c4:	f023 0303 	bic.w	r3, r3, #3
  4037c8:	1b5a      	subs	r2, r3, r5
  4037ca:	2a0f      	cmp	r2, #15
  4037cc:	ddf3      	ble.n	4037b6 <_malloc_r+0x8e>
  4037ce:	3801      	subs	r0, #1
  4037d0:	3001      	adds	r0, #1
  4037d2:	49a2      	ldr	r1, [pc, #648]	; (403a5c <_malloc_r+0x334>)
  4037d4:	693c      	ldr	r4, [r7, #16]
  4037d6:	f101 0e08 	add.w	lr, r1, #8
  4037da:	4574      	cmp	r4, lr
  4037dc:	f000 817d 	beq.w	403ada <_malloc_r+0x3b2>
  4037e0:	6863      	ldr	r3, [r4, #4]
  4037e2:	f023 0303 	bic.w	r3, r3, #3
  4037e6:	1b5a      	subs	r2, r3, r5
  4037e8:	2a0f      	cmp	r2, #15
  4037ea:	f300 8163 	bgt.w	403ab4 <_malloc_r+0x38c>
  4037ee:	2a00      	cmp	r2, #0
  4037f0:	f8c1 e014 	str.w	lr, [r1, #20]
  4037f4:	f8c1 e010 	str.w	lr, [r1, #16]
  4037f8:	da73      	bge.n	4038e2 <_malloc_r+0x1ba>
  4037fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4037fe:	f080 8139 	bcs.w	403a74 <_malloc_r+0x34c>
  403802:	08db      	lsrs	r3, r3, #3
  403804:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  403808:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  40380c:	684a      	ldr	r2, [r1, #4]
  40380e:	f8d8 9008 	ldr.w	r9, [r8, #8]
  403812:	f8c4 9008 	str.w	r9, [r4, #8]
  403816:	2301      	movs	r3, #1
  403818:	fa03 f30c 	lsl.w	r3, r3, ip
  40381c:	4313      	orrs	r3, r2
  40381e:	f8c4 800c 	str.w	r8, [r4, #12]
  403822:	604b      	str	r3, [r1, #4]
  403824:	f8c8 4008 	str.w	r4, [r8, #8]
  403828:	f8c9 400c 	str.w	r4, [r9, #12]
  40382c:	1082      	asrs	r2, r0, #2
  40382e:	2401      	movs	r4, #1
  403830:	4094      	lsls	r4, r2
  403832:	429c      	cmp	r4, r3
  403834:	d862      	bhi.n	4038fc <_malloc_r+0x1d4>
  403836:	4223      	tst	r3, r4
  403838:	d106      	bne.n	403848 <_malloc_r+0x120>
  40383a:	f020 0003 	bic.w	r0, r0, #3
  40383e:	0064      	lsls	r4, r4, #1
  403840:	4223      	tst	r3, r4
  403842:	f100 0004 	add.w	r0, r0, #4
  403846:	d0fa      	beq.n	40383e <_malloc_r+0x116>
  403848:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
  40384c:	46c4      	mov	ip, r8
  40384e:	4681      	mov	r9, r0
  403850:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403854:	459c      	cmp	ip, r3
  403856:	d107      	bne.n	403868 <_malloc_r+0x140>
  403858:	e141      	b.n	403ade <_malloc_r+0x3b6>
  40385a:	2900      	cmp	r1, #0
  40385c:	f280 8151 	bge.w	403b02 <_malloc_r+0x3da>
  403860:	68db      	ldr	r3, [r3, #12]
  403862:	459c      	cmp	ip, r3
  403864:	f000 813b 	beq.w	403ade <_malloc_r+0x3b6>
  403868:	685a      	ldr	r2, [r3, #4]
  40386a:	f022 0203 	bic.w	r2, r2, #3
  40386e:	1b51      	subs	r1, r2, r5
  403870:	290f      	cmp	r1, #15
  403872:	ddf2      	ble.n	40385a <_malloc_r+0x132>
  403874:	461c      	mov	r4, r3
  403876:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40387a:	f854 8f08 	ldr.w	r8, [r4, #8]!
  40387e:	195a      	adds	r2, r3, r5
  403880:	f045 0901 	orr.w	r9, r5, #1
  403884:	f041 0501 	orr.w	r5, r1, #1
  403888:	f8c3 9004 	str.w	r9, [r3, #4]
  40388c:	4630      	mov	r0, r6
  40388e:	f8c8 c00c 	str.w	ip, [r8, #12]
  403892:	f8cc 8008 	str.w	r8, [ip, #8]
  403896:	617a      	str	r2, [r7, #20]
  403898:	613a      	str	r2, [r7, #16]
  40389a:	f8c2 e00c 	str.w	lr, [r2, #12]
  40389e:	f8c2 e008 	str.w	lr, [r2, #8]
  4038a2:	6055      	str	r5, [r2, #4]
  4038a4:	5051      	str	r1, [r2, r1]
  4038a6:	f000 fb5f 	bl	403f68 <__malloc_unlock>
  4038aa:	e769      	b.n	403780 <_malloc_r+0x58>
  4038ac:	2400      	movs	r4, #0
  4038ae:	230c      	movs	r3, #12
  4038b0:	4620      	mov	r0, r4
  4038b2:	6033      	str	r3, [r6, #0]
  4038b4:	b003      	add	sp, #12
  4038b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038ba:	217e      	movs	r1, #126	; 0x7e
  4038bc:	203f      	movs	r0, #63	; 0x3f
  4038be:	e773      	b.n	4037a8 <_malloc_r+0x80>
  4038c0:	4423      	add	r3, r4
  4038c2:	68e1      	ldr	r1, [r4, #12]
  4038c4:	685a      	ldr	r2, [r3, #4]
  4038c6:	68a5      	ldr	r5, [r4, #8]
  4038c8:	f042 0201 	orr.w	r2, r2, #1
  4038cc:	60e9      	str	r1, [r5, #12]
  4038ce:	4630      	mov	r0, r6
  4038d0:	608d      	str	r5, [r1, #8]
  4038d2:	605a      	str	r2, [r3, #4]
  4038d4:	f000 fb48 	bl	403f68 <__malloc_unlock>
  4038d8:	3408      	adds	r4, #8
  4038da:	4620      	mov	r0, r4
  4038dc:	b003      	add	sp, #12
  4038de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038e2:	4423      	add	r3, r4
  4038e4:	4630      	mov	r0, r6
  4038e6:	685a      	ldr	r2, [r3, #4]
  4038e8:	f042 0201 	orr.w	r2, r2, #1
  4038ec:	605a      	str	r2, [r3, #4]
  4038ee:	f000 fb3b 	bl	403f68 <__malloc_unlock>
  4038f2:	3408      	adds	r4, #8
  4038f4:	4620      	mov	r0, r4
  4038f6:	b003      	add	sp, #12
  4038f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038fc:	68bc      	ldr	r4, [r7, #8]
  4038fe:	6863      	ldr	r3, [r4, #4]
  403900:	f023 0803 	bic.w	r8, r3, #3
  403904:	4545      	cmp	r5, r8
  403906:	d804      	bhi.n	403912 <_malloc_r+0x1ea>
  403908:	ebc5 0308 	rsb	r3, r5, r8
  40390c:	2b0f      	cmp	r3, #15
  40390e:	f300 808c 	bgt.w	403a2a <_malloc_r+0x302>
  403912:	4b53      	ldr	r3, [pc, #332]	; (403a60 <_malloc_r+0x338>)
  403914:	f8df a158 	ldr.w	sl, [pc, #344]	; 403a70 <_malloc_r+0x348>
  403918:	681a      	ldr	r2, [r3, #0]
  40391a:	f8da 3000 	ldr.w	r3, [sl]
  40391e:	3301      	adds	r3, #1
  403920:	442a      	add	r2, r5
  403922:	eb04 0b08 	add.w	fp, r4, r8
  403926:	f000 8150 	beq.w	403bca <_malloc_r+0x4a2>
  40392a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  40392e:	320f      	adds	r2, #15
  403930:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  403934:	f022 020f 	bic.w	r2, r2, #15
  403938:	4611      	mov	r1, r2
  40393a:	4630      	mov	r0, r6
  40393c:	9201      	str	r2, [sp, #4]
  40393e:	f000 fd9d 	bl	40447c <_sbrk_r>
  403942:	f1b0 3fff 	cmp.w	r0, #4294967295
  403946:	4681      	mov	r9, r0
  403948:	9a01      	ldr	r2, [sp, #4]
  40394a:	f000 8147 	beq.w	403bdc <_malloc_r+0x4b4>
  40394e:	4583      	cmp	fp, r0
  403950:	f200 80ee 	bhi.w	403b30 <_malloc_r+0x408>
  403954:	4b43      	ldr	r3, [pc, #268]	; (403a64 <_malloc_r+0x33c>)
  403956:	6819      	ldr	r1, [r3, #0]
  403958:	45cb      	cmp	fp, r9
  40395a:	4411      	add	r1, r2
  40395c:	6019      	str	r1, [r3, #0]
  40395e:	f000 8142 	beq.w	403be6 <_malloc_r+0x4be>
  403962:	f8da 0000 	ldr.w	r0, [sl]
  403966:	f8df e108 	ldr.w	lr, [pc, #264]	; 403a70 <_malloc_r+0x348>
  40396a:	3001      	adds	r0, #1
  40396c:	bf1b      	ittet	ne
  40396e:	ebcb 0b09 	rsbne	fp, fp, r9
  403972:	4459      	addne	r1, fp
  403974:	f8ce 9000 	streq.w	r9, [lr]
  403978:	6019      	strne	r1, [r3, #0]
  40397a:	f019 0107 	ands.w	r1, r9, #7
  40397e:	f000 8107 	beq.w	403b90 <_malloc_r+0x468>
  403982:	f1c1 0008 	rsb	r0, r1, #8
  403986:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40398a:	4481      	add	r9, r0
  40398c:	3108      	adds	r1, #8
  40398e:	444a      	add	r2, r9
  403990:	f3c2 020b 	ubfx	r2, r2, #0, #12
  403994:	ebc2 0a01 	rsb	sl, r2, r1
  403998:	4651      	mov	r1, sl
  40399a:	4630      	mov	r0, r6
  40399c:	9301      	str	r3, [sp, #4]
  40399e:	f000 fd6d 	bl	40447c <_sbrk_r>
  4039a2:	1c43      	adds	r3, r0, #1
  4039a4:	9b01      	ldr	r3, [sp, #4]
  4039a6:	f000 812c 	beq.w	403c02 <_malloc_r+0x4da>
  4039aa:	ebc9 0200 	rsb	r2, r9, r0
  4039ae:	4452      	add	r2, sl
  4039b0:	f042 0201 	orr.w	r2, r2, #1
  4039b4:	6819      	ldr	r1, [r3, #0]
  4039b6:	f8c7 9008 	str.w	r9, [r7, #8]
  4039ba:	4451      	add	r1, sl
  4039bc:	42bc      	cmp	r4, r7
  4039be:	f8c9 2004 	str.w	r2, [r9, #4]
  4039c2:	6019      	str	r1, [r3, #0]
  4039c4:	f8df a09c 	ldr.w	sl, [pc, #156]	; 403a64 <_malloc_r+0x33c>
  4039c8:	d016      	beq.n	4039f8 <_malloc_r+0x2d0>
  4039ca:	f1b8 0f0f 	cmp.w	r8, #15
  4039ce:	f240 80ee 	bls.w	403bae <_malloc_r+0x486>
  4039d2:	6862      	ldr	r2, [r4, #4]
  4039d4:	f1a8 030c 	sub.w	r3, r8, #12
  4039d8:	f023 0307 	bic.w	r3, r3, #7
  4039dc:	18e0      	adds	r0, r4, r3
  4039de:	f002 0201 	and.w	r2, r2, #1
  4039e2:	f04f 0e05 	mov.w	lr, #5
  4039e6:	431a      	orrs	r2, r3
  4039e8:	2b0f      	cmp	r3, #15
  4039ea:	6062      	str	r2, [r4, #4]
  4039ec:	f8c0 e004 	str.w	lr, [r0, #4]
  4039f0:	f8c0 e008 	str.w	lr, [r0, #8]
  4039f4:	f200 8109 	bhi.w	403c0a <_malloc_r+0x4e2>
  4039f8:	4b1b      	ldr	r3, [pc, #108]	; (403a68 <_malloc_r+0x340>)
  4039fa:	68bc      	ldr	r4, [r7, #8]
  4039fc:	681a      	ldr	r2, [r3, #0]
  4039fe:	4291      	cmp	r1, r2
  403a00:	bf88      	it	hi
  403a02:	6019      	strhi	r1, [r3, #0]
  403a04:	4b19      	ldr	r3, [pc, #100]	; (403a6c <_malloc_r+0x344>)
  403a06:	681a      	ldr	r2, [r3, #0]
  403a08:	4291      	cmp	r1, r2
  403a0a:	6862      	ldr	r2, [r4, #4]
  403a0c:	bf88      	it	hi
  403a0e:	6019      	strhi	r1, [r3, #0]
  403a10:	f022 0203 	bic.w	r2, r2, #3
  403a14:	4295      	cmp	r5, r2
  403a16:	eba2 0305 	sub.w	r3, r2, r5
  403a1a:	d801      	bhi.n	403a20 <_malloc_r+0x2f8>
  403a1c:	2b0f      	cmp	r3, #15
  403a1e:	dc04      	bgt.n	403a2a <_malloc_r+0x302>
  403a20:	4630      	mov	r0, r6
  403a22:	f000 faa1 	bl	403f68 <__malloc_unlock>
  403a26:	2400      	movs	r4, #0
  403a28:	e6aa      	b.n	403780 <_malloc_r+0x58>
  403a2a:	1962      	adds	r2, r4, r5
  403a2c:	f043 0301 	orr.w	r3, r3, #1
  403a30:	f045 0501 	orr.w	r5, r5, #1
  403a34:	6065      	str	r5, [r4, #4]
  403a36:	4630      	mov	r0, r6
  403a38:	60ba      	str	r2, [r7, #8]
  403a3a:	6053      	str	r3, [r2, #4]
  403a3c:	f000 fa94 	bl	403f68 <__malloc_unlock>
  403a40:	3408      	adds	r4, #8
  403a42:	4620      	mov	r0, r4
  403a44:	b003      	add	sp, #12
  403a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a4a:	2814      	cmp	r0, #20
  403a4c:	d968      	bls.n	403b20 <_malloc_r+0x3f8>
  403a4e:	2854      	cmp	r0, #84	; 0x54
  403a50:	f200 8097 	bhi.w	403b82 <_malloc_r+0x45a>
  403a54:	0b28      	lsrs	r0, r5, #12
  403a56:	306e      	adds	r0, #110	; 0x6e
  403a58:	0041      	lsls	r1, r0, #1
  403a5a:	e6a5      	b.n	4037a8 <_malloc_r+0x80>
  403a5c:	2000045c 	.word	0x2000045c
  403a60:	20000920 	.word	0x20000920
  403a64:	20000924 	.word	0x20000924
  403a68:	2000091c 	.word	0x2000091c
  403a6c:	20000918 	.word	0x20000918
  403a70:	20000868 	.word	0x20000868
  403a74:	0a5a      	lsrs	r2, r3, #9
  403a76:	2a04      	cmp	r2, #4
  403a78:	d955      	bls.n	403b26 <_malloc_r+0x3fe>
  403a7a:	2a14      	cmp	r2, #20
  403a7c:	f200 80a7 	bhi.w	403bce <_malloc_r+0x4a6>
  403a80:	325b      	adds	r2, #91	; 0x5b
  403a82:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403a86:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
  403a8a:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 403c48 <_malloc_r+0x520>
  403a8e:	f8dc 1008 	ldr.w	r1, [ip, #8]
  403a92:	4561      	cmp	r1, ip
  403a94:	d07f      	beq.n	403b96 <_malloc_r+0x46e>
  403a96:	684a      	ldr	r2, [r1, #4]
  403a98:	f022 0203 	bic.w	r2, r2, #3
  403a9c:	4293      	cmp	r3, r2
  403a9e:	d202      	bcs.n	403aa6 <_malloc_r+0x37e>
  403aa0:	6889      	ldr	r1, [r1, #8]
  403aa2:	458c      	cmp	ip, r1
  403aa4:	d1f7      	bne.n	403a96 <_malloc_r+0x36e>
  403aa6:	68ca      	ldr	r2, [r1, #12]
  403aa8:	687b      	ldr	r3, [r7, #4]
  403aaa:	60e2      	str	r2, [r4, #12]
  403aac:	60a1      	str	r1, [r4, #8]
  403aae:	6094      	str	r4, [r2, #8]
  403ab0:	60cc      	str	r4, [r1, #12]
  403ab2:	e6bb      	b.n	40382c <_malloc_r+0x104>
  403ab4:	1963      	adds	r3, r4, r5
  403ab6:	f042 0701 	orr.w	r7, r2, #1
  403aba:	f045 0501 	orr.w	r5, r5, #1
  403abe:	6065      	str	r5, [r4, #4]
  403ac0:	4630      	mov	r0, r6
  403ac2:	614b      	str	r3, [r1, #20]
  403ac4:	610b      	str	r3, [r1, #16]
  403ac6:	f8c3 e00c 	str.w	lr, [r3, #12]
  403aca:	f8c3 e008 	str.w	lr, [r3, #8]
  403ace:	605f      	str	r7, [r3, #4]
  403ad0:	509a      	str	r2, [r3, r2]
  403ad2:	3408      	adds	r4, #8
  403ad4:	f000 fa48 	bl	403f68 <__malloc_unlock>
  403ad8:	e652      	b.n	403780 <_malloc_r+0x58>
  403ada:	684b      	ldr	r3, [r1, #4]
  403adc:	e6a6      	b.n	40382c <_malloc_r+0x104>
  403ade:	f109 0901 	add.w	r9, r9, #1
  403ae2:	f019 0f03 	tst.w	r9, #3
  403ae6:	f10c 0c08 	add.w	ip, ip, #8
  403aea:	f47f aeb1 	bne.w	403850 <_malloc_r+0x128>
  403aee:	e02c      	b.n	403b4a <_malloc_r+0x422>
  403af0:	f104 0308 	add.w	r3, r4, #8
  403af4:	6964      	ldr	r4, [r4, #20]
  403af6:	42a3      	cmp	r3, r4
  403af8:	bf08      	it	eq
  403afa:	3002      	addeq	r0, #2
  403afc:	f43f ae69 	beq.w	4037d2 <_malloc_r+0xaa>
  403b00:	e62e      	b.n	403760 <_malloc_r+0x38>
  403b02:	441a      	add	r2, r3
  403b04:	461c      	mov	r4, r3
  403b06:	6851      	ldr	r1, [r2, #4]
  403b08:	68db      	ldr	r3, [r3, #12]
  403b0a:	f854 5f08 	ldr.w	r5, [r4, #8]!
  403b0e:	f041 0101 	orr.w	r1, r1, #1
  403b12:	6051      	str	r1, [r2, #4]
  403b14:	4630      	mov	r0, r6
  403b16:	60eb      	str	r3, [r5, #12]
  403b18:	609d      	str	r5, [r3, #8]
  403b1a:	f000 fa25 	bl	403f68 <__malloc_unlock>
  403b1e:	e62f      	b.n	403780 <_malloc_r+0x58>
  403b20:	305b      	adds	r0, #91	; 0x5b
  403b22:	0041      	lsls	r1, r0, #1
  403b24:	e640      	b.n	4037a8 <_malloc_r+0x80>
  403b26:	099a      	lsrs	r2, r3, #6
  403b28:	3238      	adds	r2, #56	; 0x38
  403b2a:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403b2e:	e7aa      	b.n	403a86 <_malloc_r+0x35e>
  403b30:	42bc      	cmp	r4, r7
  403b32:	4b45      	ldr	r3, [pc, #276]	; (403c48 <_malloc_r+0x520>)
  403b34:	f43f af0e 	beq.w	403954 <_malloc_r+0x22c>
  403b38:	689c      	ldr	r4, [r3, #8]
  403b3a:	6862      	ldr	r2, [r4, #4]
  403b3c:	f022 0203 	bic.w	r2, r2, #3
  403b40:	e768      	b.n	403a14 <_malloc_r+0x2ec>
  403b42:	f8d8 8000 	ldr.w	r8, [r8]
  403b46:	4598      	cmp	r8, r3
  403b48:	d17c      	bne.n	403c44 <_malloc_r+0x51c>
  403b4a:	f010 0f03 	tst.w	r0, #3
  403b4e:	f1a8 0308 	sub.w	r3, r8, #8
  403b52:	f100 30ff 	add.w	r0, r0, #4294967295
  403b56:	d1f4      	bne.n	403b42 <_malloc_r+0x41a>
  403b58:	687b      	ldr	r3, [r7, #4]
  403b5a:	ea23 0304 	bic.w	r3, r3, r4
  403b5e:	607b      	str	r3, [r7, #4]
  403b60:	0064      	lsls	r4, r4, #1
  403b62:	429c      	cmp	r4, r3
  403b64:	f63f aeca 	bhi.w	4038fc <_malloc_r+0x1d4>
  403b68:	2c00      	cmp	r4, #0
  403b6a:	f43f aec7 	beq.w	4038fc <_malloc_r+0x1d4>
  403b6e:	4223      	tst	r3, r4
  403b70:	4648      	mov	r0, r9
  403b72:	f47f ae69 	bne.w	403848 <_malloc_r+0x120>
  403b76:	0064      	lsls	r4, r4, #1
  403b78:	4223      	tst	r3, r4
  403b7a:	f100 0004 	add.w	r0, r0, #4
  403b7e:	d0fa      	beq.n	403b76 <_malloc_r+0x44e>
  403b80:	e662      	b.n	403848 <_malloc_r+0x120>
  403b82:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
  403b86:	d818      	bhi.n	403bba <_malloc_r+0x492>
  403b88:	0be8      	lsrs	r0, r5, #15
  403b8a:	3077      	adds	r0, #119	; 0x77
  403b8c:	0041      	lsls	r1, r0, #1
  403b8e:	e60b      	b.n	4037a8 <_malloc_r+0x80>
  403b90:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403b94:	e6fb      	b.n	40398e <_malloc_r+0x266>
  403b96:	f8d8 3004 	ldr.w	r3, [r8, #4]
  403b9a:	1092      	asrs	r2, r2, #2
  403b9c:	f04f 0c01 	mov.w	ip, #1
  403ba0:	fa0c f202 	lsl.w	r2, ip, r2
  403ba4:	4313      	orrs	r3, r2
  403ba6:	f8c8 3004 	str.w	r3, [r8, #4]
  403baa:	460a      	mov	r2, r1
  403bac:	e77d      	b.n	403aaa <_malloc_r+0x382>
  403bae:	2301      	movs	r3, #1
  403bb0:	f8c9 3004 	str.w	r3, [r9, #4]
  403bb4:	464c      	mov	r4, r9
  403bb6:	2200      	movs	r2, #0
  403bb8:	e72c      	b.n	403a14 <_malloc_r+0x2ec>
  403bba:	f240 5354 	movw	r3, #1364	; 0x554
  403bbe:	4298      	cmp	r0, r3
  403bc0:	d81c      	bhi.n	403bfc <_malloc_r+0x4d4>
  403bc2:	0ca8      	lsrs	r0, r5, #18
  403bc4:	307c      	adds	r0, #124	; 0x7c
  403bc6:	0041      	lsls	r1, r0, #1
  403bc8:	e5ee      	b.n	4037a8 <_malloc_r+0x80>
  403bca:	3210      	adds	r2, #16
  403bcc:	e6b4      	b.n	403938 <_malloc_r+0x210>
  403bce:	2a54      	cmp	r2, #84	; 0x54
  403bd0:	d823      	bhi.n	403c1a <_malloc_r+0x4f2>
  403bd2:	0b1a      	lsrs	r2, r3, #12
  403bd4:	326e      	adds	r2, #110	; 0x6e
  403bd6:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403bda:	e754      	b.n	403a86 <_malloc_r+0x35e>
  403bdc:	68bc      	ldr	r4, [r7, #8]
  403bde:	6862      	ldr	r2, [r4, #4]
  403be0:	f022 0203 	bic.w	r2, r2, #3
  403be4:	e716      	b.n	403a14 <_malloc_r+0x2ec>
  403be6:	f3cb 000b 	ubfx	r0, fp, #0, #12
  403bea:	2800      	cmp	r0, #0
  403bec:	f47f aeb9 	bne.w	403962 <_malloc_r+0x23a>
  403bf0:	4442      	add	r2, r8
  403bf2:	68bb      	ldr	r3, [r7, #8]
  403bf4:	f042 0201 	orr.w	r2, r2, #1
  403bf8:	605a      	str	r2, [r3, #4]
  403bfa:	e6fd      	b.n	4039f8 <_malloc_r+0x2d0>
  403bfc:	21fc      	movs	r1, #252	; 0xfc
  403bfe:	207e      	movs	r0, #126	; 0x7e
  403c00:	e5d2      	b.n	4037a8 <_malloc_r+0x80>
  403c02:	2201      	movs	r2, #1
  403c04:	f04f 0a00 	mov.w	sl, #0
  403c08:	e6d4      	b.n	4039b4 <_malloc_r+0x28c>
  403c0a:	f104 0108 	add.w	r1, r4, #8
  403c0e:	4630      	mov	r0, r6
  403c10:	f7ff fa46 	bl	4030a0 <_free_r>
  403c14:	f8da 1000 	ldr.w	r1, [sl]
  403c18:	e6ee      	b.n	4039f8 <_malloc_r+0x2d0>
  403c1a:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403c1e:	d804      	bhi.n	403c2a <_malloc_r+0x502>
  403c20:	0bda      	lsrs	r2, r3, #15
  403c22:	3277      	adds	r2, #119	; 0x77
  403c24:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403c28:	e72d      	b.n	403a86 <_malloc_r+0x35e>
  403c2a:	f240 5154 	movw	r1, #1364	; 0x554
  403c2e:	428a      	cmp	r2, r1
  403c30:	d804      	bhi.n	403c3c <_malloc_r+0x514>
  403c32:	0c9a      	lsrs	r2, r3, #18
  403c34:	327c      	adds	r2, #124	; 0x7c
  403c36:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403c3a:	e724      	b.n	403a86 <_malloc_r+0x35e>
  403c3c:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
  403c40:	227e      	movs	r2, #126	; 0x7e
  403c42:	e720      	b.n	403a86 <_malloc_r+0x35e>
  403c44:	687b      	ldr	r3, [r7, #4]
  403c46:	e78b      	b.n	403b60 <_malloc_r+0x438>
  403c48:	2000045c 	.word	0x2000045c

00403c4c <_mbrtowc_r>:
  403c4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  403c50:	b083      	sub	sp, #12
  403c52:	4605      	mov	r5, r0
  403c54:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403c56:	4614      	mov	r4, r2
  403c58:	b1b2      	cbz	r2, 403c88 <_mbrtowc_r+0x3c>
  403c5a:	461f      	mov	r7, r3
  403c5c:	4b10      	ldr	r3, [pc, #64]	; (403ca0 <_mbrtowc_r+0x54>)
  403c5e:	4688      	mov	r8, r1
  403c60:	f8d3 9000 	ldr.w	r9, [r3]
  403c64:	f7ff fcde 	bl	403624 <__locale_charset>
  403c68:	4641      	mov	r1, r8
  403c6a:	e88d 0041 	stmia.w	sp, {r0, r6}
  403c6e:	4622      	mov	r2, r4
  403c70:	463b      	mov	r3, r7
  403c72:	4628      	mov	r0, r5
  403c74:	47c8      	blx	r9
  403c76:	1c43      	adds	r3, r0, #1
  403c78:	d103      	bne.n	403c82 <_mbrtowc_r+0x36>
  403c7a:	2200      	movs	r2, #0
  403c7c:	238a      	movs	r3, #138	; 0x8a
  403c7e:	6032      	str	r2, [r6, #0]
  403c80:	602b      	str	r3, [r5, #0]
  403c82:	b003      	add	sp, #12
  403c84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403c88:	4b05      	ldr	r3, [pc, #20]	; (403ca0 <_mbrtowc_r+0x54>)
  403c8a:	681f      	ldr	r7, [r3, #0]
  403c8c:	f7ff fcca 	bl	403624 <__locale_charset>
  403c90:	4621      	mov	r1, r4
  403c92:	e88d 0041 	stmia.w	sp, {r0, r6}
  403c96:	4a03      	ldr	r2, [pc, #12]	; (403ca4 <_mbrtowc_r+0x58>)
  403c98:	4628      	mov	r0, r5
  403c9a:	2301      	movs	r3, #1
  403c9c:	47b8      	blx	r7
  403c9e:	e7ea      	b.n	403c76 <_mbrtowc_r+0x2a>
  403ca0:	2000086c 	.word	0x2000086c
  403ca4:	00405730 	.word	0x00405730

00403ca8 <__ascii_mbtowc>:
  403ca8:	b082      	sub	sp, #8
  403caa:	b149      	cbz	r1, 403cc0 <__ascii_mbtowc+0x18>
  403cac:	b15a      	cbz	r2, 403cc6 <__ascii_mbtowc+0x1e>
  403cae:	b16b      	cbz	r3, 403ccc <__ascii_mbtowc+0x24>
  403cb0:	7813      	ldrb	r3, [r2, #0]
  403cb2:	600b      	str	r3, [r1, #0]
  403cb4:	7812      	ldrb	r2, [r2, #0]
  403cb6:	1c10      	adds	r0, r2, #0
  403cb8:	bf18      	it	ne
  403cba:	2001      	movne	r0, #1
  403cbc:	b002      	add	sp, #8
  403cbe:	4770      	bx	lr
  403cc0:	a901      	add	r1, sp, #4
  403cc2:	2a00      	cmp	r2, #0
  403cc4:	d1f3      	bne.n	403cae <__ascii_mbtowc+0x6>
  403cc6:	4610      	mov	r0, r2
  403cc8:	b002      	add	sp, #8
  403cca:	4770      	bx	lr
  403ccc:	f06f 0001 	mvn.w	r0, #1
  403cd0:	e7f4      	b.n	403cbc <__ascii_mbtowc+0x14>
  403cd2:	bf00      	nop

00403cd4 <memchr>:
  403cd4:	0783      	lsls	r3, r0, #30
  403cd6:	b470      	push	{r4, r5, r6}
  403cd8:	b2c9      	uxtb	r1, r1
  403cda:	d040      	beq.n	403d5e <memchr+0x8a>
  403cdc:	1e54      	subs	r4, r2, #1
  403cde:	2a00      	cmp	r2, #0
  403ce0:	d03f      	beq.n	403d62 <memchr+0x8e>
  403ce2:	7803      	ldrb	r3, [r0, #0]
  403ce4:	428b      	cmp	r3, r1
  403ce6:	bf18      	it	ne
  403ce8:	1c43      	addne	r3, r0, #1
  403cea:	d106      	bne.n	403cfa <memchr+0x26>
  403cec:	e01d      	b.n	403d2a <memchr+0x56>
  403cee:	b1f4      	cbz	r4, 403d2e <memchr+0x5a>
  403cf0:	7802      	ldrb	r2, [r0, #0]
  403cf2:	428a      	cmp	r2, r1
  403cf4:	f104 34ff 	add.w	r4, r4, #4294967295
  403cf8:	d017      	beq.n	403d2a <memchr+0x56>
  403cfa:	f013 0f03 	tst.w	r3, #3
  403cfe:	4618      	mov	r0, r3
  403d00:	f103 0301 	add.w	r3, r3, #1
  403d04:	d1f3      	bne.n	403cee <memchr+0x1a>
  403d06:	2c03      	cmp	r4, #3
  403d08:	d814      	bhi.n	403d34 <memchr+0x60>
  403d0a:	b184      	cbz	r4, 403d2e <memchr+0x5a>
  403d0c:	7803      	ldrb	r3, [r0, #0]
  403d0e:	428b      	cmp	r3, r1
  403d10:	d00b      	beq.n	403d2a <memchr+0x56>
  403d12:	1905      	adds	r5, r0, r4
  403d14:	1c43      	adds	r3, r0, #1
  403d16:	e002      	b.n	403d1e <memchr+0x4a>
  403d18:	7802      	ldrb	r2, [r0, #0]
  403d1a:	428a      	cmp	r2, r1
  403d1c:	d005      	beq.n	403d2a <memchr+0x56>
  403d1e:	42ab      	cmp	r3, r5
  403d20:	4618      	mov	r0, r3
  403d22:	f103 0301 	add.w	r3, r3, #1
  403d26:	d1f7      	bne.n	403d18 <memchr+0x44>
  403d28:	2000      	movs	r0, #0
  403d2a:	bc70      	pop	{r4, r5, r6}
  403d2c:	4770      	bx	lr
  403d2e:	4620      	mov	r0, r4
  403d30:	bc70      	pop	{r4, r5, r6}
  403d32:	4770      	bx	lr
  403d34:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  403d38:	4602      	mov	r2, r0
  403d3a:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  403d3e:	4610      	mov	r0, r2
  403d40:	3204      	adds	r2, #4
  403d42:	6803      	ldr	r3, [r0, #0]
  403d44:	4073      	eors	r3, r6
  403d46:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
  403d4a:	ea25 0303 	bic.w	r3, r5, r3
  403d4e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  403d52:	d1da      	bne.n	403d0a <memchr+0x36>
  403d54:	3c04      	subs	r4, #4
  403d56:	2c03      	cmp	r4, #3
  403d58:	4610      	mov	r0, r2
  403d5a:	d8f0      	bhi.n	403d3e <memchr+0x6a>
  403d5c:	e7d5      	b.n	403d0a <memchr+0x36>
  403d5e:	4614      	mov	r4, r2
  403d60:	e7d1      	b.n	403d06 <memchr+0x32>
  403d62:	4610      	mov	r0, r2
  403d64:	e7e1      	b.n	403d2a <memchr+0x56>
  403d66:	bf00      	nop

00403d68 <memcpy>:
  403d68:	4684      	mov	ip, r0
  403d6a:	ea41 0300 	orr.w	r3, r1, r0
  403d6e:	f013 0303 	ands.w	r3, r3, #3
  403d72:	d16d      	bne.n	403e50 <memcpy+0xe8>
  403d74:	3a40      	subs	r2, #64	; 0x40
  403d76:	d341      	bcc.n	403dfc <memcpy+0x94>
  403d78:	f851 3b04 	ldr.w	r3, [r1], #4
  403d7c:	f840 3b04 	str.w	r3, [r0], #4
  403d80:	f851 3b04 	ldr.w	r3, [r1], #4
  403d84:	f840 3b04 	str.w	r3, [r0], #4
  403d88:	f851 3b04 	ldr.w	r3, [r1], #4
  403d8c:	f840 3b04 	str.w	r3, [r0], #4
  403d90:	f851 3b04 	ldr.w	r3, [r1], #4
  403d94:	f840 3b04 	str.w	r3, [r0], #4
  403d98:	f851 3b04 	ldr.w	r3, [r1], #4
  403d9c:	f840 3b04 	str.w	r3, [r0], #4
  403da0:	f851 3b04 	ldr.w	r3, [r1], #4
  403da4:	f840 3b04 	str.w	r3, [r0], #4
  403da8:	f851 3b04 	ldr.w	r3, [r1], #4
  403dac:	f840 3b04 	str.w	r3, [r0], #4
  403db0:	f851 3b04 	ldr.w	r3, [r1], #4
  403db4:	f840 3b04 	str.w	r3, [r0], #4
  403db8:	f851 3b04 	ldr.w	r3, [r1], #4
  403dbc:	f840 3b04 	str.w	r3, [r0], #4
  403dc0:	f851 3b04 	ldr.w	r3, [r1], #4
  403dc4:	f840 3b04 	str.w	r3, [r0], #4
  403dc8:	f851 3b04 	ldr.w	r3, [r1], #4
  403dcc:	f840 3b04 	str.w	r3, [r0], #4
  403dd0:	f851 3b04 	ldr.w	r3, [r1], #4
  403dd4:	f840 3b04 	str.w	r3, [r0], #4
  403dd8:	f851 3b04 	ldr.w	r3, [r1], #4
  403ddc:	f840 3b04 	str.w	r3, [r0], #4
  403de0:	f851 3b04 	ldr.w	r3, [r1], #4
  403de4:	f840 3b04 	str.w	r3, [r0], #4
  403de8:	f851 3b04 	ldr.w	r3, [r1], #4
  403dec:	f840 3b04 	str.w	r3, [r0], #4
  403df0:	f851 3b04 	ldr.w	r3, [r1], #4
  403df4:	f840 3b04 	str.w	r3, [r0], #4
  403df8:	3a40      	subs	r2, #64	; 0x40
  403dfa:	d2bd      	bcs.n	403d78 <memcpy+0x10>
  403dfc:	3230      	adds	r2, #48	; 0x30
  403dfe:	d311      	bcc.n	403e24 <memcpy+0xbc>
  403e00:	f851 3b04 	ldr.w	r3, [r1], #4
  403e04:	f840 3b04 	str.w	r3, [r0], #4
  403e08:	f851 3b04 	ldr.w	r3, [r1], #4
  403e0c:	f840 3b04 	str.w	r3, [r0], #4
  403e10:	f851 3b04 	ldr.w	r3, [r1], #4
  403e14:	f840 3b04 	str.w	r3, [r0], #4
  403e18:	f851 3b04 	ldr.w	r3, [r1], #4
  403e1c:	f840 3b04 	str.w	r3, [r0], #4
  403e20:	3a10      	subs	r2, #16
  403e22:	d2ed      	bcs.n	403e00 <memcpy+0x98>
  403e24:	320c      	adds	r2, #12
  403e26:	d305      	bcc.n	403e34 <memcpy+0xcc>
  403e28:	f851 3b04 	ldr.w	r3, [r1], #4
  403e2c:	f840 3b04 	str.w	r3, [r0], #4
  403e30:	3a04      	subs	r2, #4
  403e32:	d2f9      	bcs.n	403e28 <memcpy+0xc0>
  403e34:	3204      	adds	r2, #4
  403e36:	d008      	beq.n	403e4a <memcpy+0xe2>
  403e38:	07d2      	lsls	r2, r2, #31
  403e3a:	bf1c      	itt	ne
  403e3c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403e40:	f800 3b01 	strbne.w	r3, [r0], #1
  403e44:	d301      	bcc.n	403e4a <memcpy+0xe2>
  403e46:	880b      	ldrh	r3, [r1, #0]
  403e48:	8003      	strh	r3, [r0, #0]
  403e4a:	4660      	mov	r0, ip
  403e4c:	4770      	bx	lr
  403e4e:	bf00      	nop
  403e50:	2a08      	cmp	r2, #8
  403e52:	d313      	bcc.n	403e7c <memcpy+0x114>
  403e54:	078b      	lsls	r3, r1, #30
  403e56:	d08d      	beq.n	403d74 <memcpy+0xc>
  403e58:	f010 0303 	ands.w	r3, r0, #3
  403e5c:	d08a      	beq.n	403d74 <memcpy+0xc>
  403e5e:	f1c3 0304 	rsb	r3, r3, #4
  403e62:	1ad2      	subs	r2, r2, r3
  403e64:	07db      	lsls	r3, r3, #31
  403e66:	bf1c      	itt	ne
  403e68:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403e6c:	f800 3b01 	strbne.w	r3, [r0], #1
  403e70:	d380      	bcc.n	403d74 <memcpy+0xc>
  403e72:	f831 3b02 	ldrh.w	r3, [r1], #2
  403e76:	f820 3b02 	strh.w	r3, [r0], #2
  403e7a:	e77b      	b.n	403d74 <memcpy+0xc>
  403e7c:	3a04      	subs	r2, #4
  403e7e:	d3d9      	bcc.n	403e34 <memcpy+0xcc>
  403e80:	3a01      	subs	r2, #1
  403e82:	f811 3b01 	ldrb.w	r3, [r1], #1
  403e86:	f800 3b01 	strb.w	r3, [r0], #1
  403e8a:	d2f9      	bcs.n	403e80 <memcpy+0x118>
  403e8c:	780b      	ldrb	r3, [r1, #0]
  403e8e:	7003      	strb	r3, [r0, #0]
  403e90:	784b      	ldrb	r3, [r1, #1]
  403e92:	7043      	strb	r3, [r0, #1]
  403e94:	788b      	ldrb	r3, [r1, #2]
  403e96:	7083      	strb	r3, [r0, #2]
  403e98:	4660      	mov	r0, ip
  403e9a:	4770      	bx	lr

00403e9c <memmove>:
  403e9c:	4288      	cmp	r0, r1
  403e9e:	b5f0      	push	{r4, r5, r6, r7, lr}
  403ea0:	d90d      	bls.n	403ebe <memmove+0x22>
  403ea2:	188b      	adds	r3, r1, r2
  403ea4:	4298      	cmp	r0, r3
  403ea6:	d20a      	bcs.n	403ebe <memmove+0x22>
  403ea8:	1881      	adds	r1, r0, r2
  403eaa:	2a00      	cmp	r2, #0
  403eac:	d054      	beq.n	403f58 <memmove+0xbc>
  403eae:	1a9a      	subs	r2, r3, r2
  403eb0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  403eb4:	f801 4d01 	strb.w	r4, [r1, #-1]!
  403eb8:	4293      	cmp	r3, r2
  403eba:	d1f9      	bne.n	403eb0 <memmove+0x14>
  403ebc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403ebe:	2a0f      	cmp	r2, #15
  403ec0:	d948      	bls.n	403f54 <memmove+0xb8>
  403ec2:	ea40 0301 	orr.w	r3, r0, r1
  403ec6:	079b      	lsls	r3, r3, #30
  403ec8:	d147      	bne.n	403f5a <memmove+0xbe>
  403eca:	f100 0410 	add.w	r4, r0, #16
  403ece:	f101 0310 	add.w	r3, r1, #16
  403ed2:	4615      	mov	r5, r2
  403ed4:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403ed8:	f844 6c10 	str.w	r6, [r4, #-16]
  403edc:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403ee0:	f844 6c0c 	str.w	r6, [r4, #-12]
  403ee4:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403ee8:	f844 6c08 	str.w	r6, [r4, #-8]
  403eec:	3d10      	subs	r5, #16
  403eee:	f853 6c04 	ldr.w	r6, [r3, #-4]
  403ef2:	f844 6c04 	str.w	r6, [r4, #-4]
  403ef6:	2d0f      	cmp	r5, #15
  403ef8:	f103 0310 	add.w	r3, r3, #16
  403efc:	f104 0410 	add.w	r4, r4, #16
  403f00:	d8e8      	bhi.n	403ed4 <memmove+0x38>
  403f02:	f1a2 0310 	sub.w	r3, r2, #16
  403f06:	f023 030f 	bic.w	r3, r3, #15
  403f0a:	f002 0e0f 	and.w	lr, r2, #15
  403f0e:	3310      	adds	r3, #16
  403f10:	f1be 0f03 	cmp.w	lr, #3
  403f14:	4419      	add	r1, r3
  403f16:	4403      	add	r3, r0
  403f18:	d921      	bls.n	403f5e <memmove+0xc2>
  403f1a:	1f1e      	subs	r6, r3, #4
  403f1c:	460d      	mov	r5, r1
  403f1e:	4674      	mov	r4, lr
  403f20:	3c04      	subs	r4, #4
  403f22:	f855 7b04 	ldr.w	r7, [r5], #4
  403f26:	f846 7f04 	str.w	r7, [r6, #4]!
  403f2a:	2c03      	cmp	r4, #3
  403f2c:	d8f8      	bhi.n	403f20 <memmove+0x84>
  403f2e:	f1ae 0404 	sub.w	r4, lr, #4
  403f32:	f024 0403 	bic.w	r4, r4, #3
  403f36:	3404      	adds	r4, #4
  403f38:	4423      	add	r3, r4
  403f3a:	4421      	add	r1, r4
  403f3c:	f002 0203 	and.w	r2, r2, #3
  403f40:	b152      	cbz	r2, 403f58 <memmove+0xbc>
  403f42:	3b01      	subs	r3, #1
  403f44:	440a      	add	r2, r1
  403f46:	f811 4b01 	ldrb.w	r4, [r1], #1
  403f4a:	f803 4f01 	strb.w	r4, [r3, #1]!
  403f4e:	4291      	cmp	r1, r2
  403f50:	d1f9      	bne.n	403f46 <memmove+0xaa>
  403f52:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403f54:	4603      	mov	r3, r0
  403f56:	e7f3      	b.n	403f40 <memmove+0xa4>
  403f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403f5a:	4603      	mov	r3, r0
  403f5c:	e7f1      	b.n	403f42 <memmove+0xa6>
  403f5e:	4672      	mov	r2, lr
  403f60:	e7ee      	b.n	403f40 <memmove+0xa4>
  403f62:	bf00      	nop

00403f64 <__malloc_lock>:
  403f64:	4770      	bx	lr
  403f66:	bf00      	nop

00403f68 <__malloc_unlock>:
  403f68:	4770      	bx	lr
  403f6a:	bf00      	nop

00403f6c <_realloc_r>:
  403f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403f70:	4617      	mov	r7, r2
  403f72:	b083      	sub	sp, #12
  403f74:	460e      	mov	r6, r1
  403f76:	2900      	cmp	r1, #0
  403f78:	f000 80e7 	beq.w	40414a <_realloc_r+0x1de>
  403f7c:	4681      	mov	r9, r0
  403f7e:	f107 050b 	add.w	r5, r7, #11
  403f82:	f7ff ffef 	bl	403f64 <__malloc_lock>
  403f86:	f856 3c04 	ldr.w	r3, [r6, #-4]
  403f8a:	2d16      	cmp	r5, #22
  403f8c:	f023 0403 	bic.w	r4, r3, #3
  403f90:	f1a6 0808 	sub.w	r8, r6, #8
  403f94:	d84c      	bhi.n	404030 <_realloc_r+0xc4>
  403f96:	2210      	movs	r2, #16
  403f98:	4615      	mov	r5, r2
  403f9a:	42af      	cmp	r7, r5
  403f9c:	d84d      	bhi.n	40403a <_realloc_r+0xce>
  403f9e:	4294      	cmp	r4, r2
  403fa0:	f280 8084 	bge.w	4040ac <_realloc_r+0x140>
  403fa4:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 404354 <_realloc_r+0x3e8>
  403fa8:	f8db 0008 	ldr.w	r0, [fp, #8]
  403fac:	eb08 0104 	add.w	r1, r8, r4
  403fb0:	4288      	cmp	r0, r1
  403fb2:	f000 80d6 	beq.w	404162 <_realloc_r+0x1f6>
  403fb6:	6848      	ldr	r0, [r1, #4]
  403fb8:	f020 0e01 	bic.w	lr, r0, #1
  403fbc:	448e      	add	lr, r1
  403fbe:	f8de e004 	ldr.w	lr, [lr, #4]
  403fc2:	f01e 0f01 	tst.w	lr, #1
  403fc6:	d13f      	bne.n	404048 <_realloc_r+0xdc>
  403fc8:	f020 0003 	bic.w	r0, r0, #3
  403fcc:	4420      	add	r0, r4
  403fce:	4290      	cmp	r0, r2
  403fd0:	f280 80c1 	bge.w	404156 <_realloc_r+0x1ea>
  403fd4:	07db      	lsls	r3, r3, #31
  403fd6:	f100 808f 	bmi.w	4040f8 <_realloc_r+0x18c>
  403fda:	f856 3c08 	ldr.w	r3, [r6, #-8]
  403fde:	ebc3 0a08 	rsb	sl, r3, r8
  403fe2:	f8da 3004 	ldr.w	r3, [sl, #4]
  403fe6:	f023 0303 	bic.w	r3, r3, #3
  403fea:	eb00 0e03 	add.w	lr, r0, r3
  403fee:	4596      	cmp	lr, r2
  403ff0:	db34      	blt.n	40405c <_realloc_r+0xf0>
  403ff2:	68cb      	ldr	r3, [r1, #12]
  403ff4:	688a      	ldr	r2, [r1, #8]
  403ff6:	4657      	mov	r7, sl
  403ff8:	60d3      	str	r3, [r2, #12]
  403ffa:	609a      	str	r2, [r3, #8]
  403ffc:	f857 1f08 	ldr.w	r1, [r7, #8]!
  404000:	f8da 300c 	ldr.w	r3, [sl, #12]
  404004:	60cb      	str	r3, [r1, #12]
  404006:	1f22      	subs	r2, r4, #4
  404008:	2a24      	cmp	r2, #36	; 0x24
  40400a:	6099      	str	r1, [r3, #8]
  40400c:	f200 8136 	bhi.w	40427c <_realloc_r+0x310>
  404010:	2a13      	cmp	r2, #19
  404012:	f240 80fd 	bls.w	404210 <_realloc_r+0x2a4>
  404016:	6833      	ldr	r3, [r6, #0]
  404018:	f8ca 3008 	str.w	r3, [sl, #8]
  40401c:	6873      	ldr	r3, [r6, #4]
  40401e:	f8ca 300c 	str.w	r3, [sl, #12]
  404022:	2a1b      	cmp	r2, #27
  404024:	f200 8140 	bhi.w	4042a8 <_realloc_r+0x33c>
  404028:	3608      	adds	r6, #8
  40402a:	f10a 0310 	add.w	r3, sl, #16
  40402e:	e0f0      	b.n	404212 <_realloc_r+0x2a6>
  404030:	f025 0507 	bic.w	r5, r5, #7
  404034:	2d00      	cmp	r5, #0
  404036:	462a      	mov	r2, r5
  404038:	daaf      	bge.n	403f9a <_realloc_r+0x2e>
  40403a:	230c      	movs	r3, #12
  40403c:	2000      	movs	r0, #0
  40403e:	f8c9 3000 	str.w	r3, [r9]
  404042:	b003      	add	sp, #12
  404044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404048:	07d9      	lsls	r1, r3, #31
  40404a:	d455      	bmi.n	4040f8 <_realloc_r+0x18c>
  40404c:	f856 3c08 	ldr.w	r3, [r6, #-8]
  404050:	ebc3 0a08 	rsb	sl, r3, r8
  404054:	f8da 3004 	ldr.w	r3, [sl, #4]
  404058:	f023 0303 	bic.w	r3, r3, #3
  40405c:	4423      	add	r3, r4
  40405e:	4293      	cmp	r3, r2
  404060:	db4a      	blt.n	4040f8 <_realloc_r+0x18c>
  404062:	4657      	mov	r7, sl
  404064:	f8da 100c 	ldr.w	r1, [sl, #12]
  404068:	f857 0f08 	ldr.w	r0, [r7, #8]!
  40406c:	1f22      	subs	r2, r4, #4
  40406e:	2a24      	cmp	r2, #36	; 0x24
  404070:	60c1      	str	r1, [r0, #12]
  404072:	6088      	str	r0, [r1, #8]
  404074:	f200 810e 	bhi.w	404294 <_realloc_r+0x328>
  404078:	2a13      	cmp	r2, #19
  40407a:	f240 8109 	bls.w	404290 <_realloc_r+0x324>
  40407e:	6831      	ldr	r1, [r6, #0]
  404080:	f8ca 1008 	str.w	r1, [sl, #8]
  404084:	6871      	ldr	r1, [r6, #4]
  404086:	f8ca 100c 	str.w	r1, [sl, #12]
  40408a:	2a1b      	cmp	r2, #27
  40408c:	f200 8121 	bhi.w	4042d2 <_realloc_r+0x366>
  404090:	3608      	adds	r6, #8
  404092:	f10a 0210 	add.w	r2, sl, #16
  404096:	6831      	ldr	r1, [r6, #0]
  404098:	6011      	str	r1, [r2, #0]
  40409a:	6871      	ldr	r1, [r6, #4]
  40409c:	6051      	str	r1, [r2, #4]
  40409e:	68b1      	ldr	r1, [r6, #8]
  4040a0:	6091      	str	r1, [r2, #8]
  4040a2:	461c      	mov	r4, r3
  4040a4:	f8da 3004 	ldr.w	r3, [sl, #4]
  4040a8:	463e      	mov	r6, r7
  4040aa:	46d0      	mov	r8, sl
  4040ac:	1b62      	subs	r2, r4, r5
  4040ae:	2a0f      	cmp	r2, #15
  4040b0:	f003 0301 	and.w	r3, r3, #1
  4040b4:	d80e      	bhi.n	4040d4 <_realloc_r+0x168>
  4040b6:	4323      	orrs	r3, r4
  4040b8:	4444      	add	r4, r8
  4040ba:	f8c8 3004 	str.w	r3, [r8, #4]
  4040be:	6863      	ldr	r3, [r4, #4]
  4040c0:	f043 0301 	orr.w	r3, r3, #1
  4040c4:	6063      	str	r3, [r4, #4]
  4040c6:	4648      	mov	r0, r9
  4040c8:	f7ff ff4e 	bl	403f68 <__malloc_unlock>
  4040cc:	4630      	mov	r0, r6
  4040ce:	b003      	add	sp, #12
  4040d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040d4:	eb08 0105 	add.w	r1, r8, r5
  4040d8:	431d      	orrs	r5, r3
  4040da:	f042 0301 	orr.w	r3, r2, #1
  4040de:	440a      	add	r2, r1
  4040e0:	f8c8 5004 	str.w	r5, [r8, #4]
  4040e4:	604b      	str	r3, [r1, #4]
  4040e6:	6853      	ldr	r3, [r2, #4]
  4040e8:	f043 0301 	orr.w	r3, r3, #1
  4040ec:	3108      	adds	r1, #8
  4040ee:	6053      	str	r3, [r2, #4]
  4040f0:	4648      	mov	r0, r9
  4040f2:	f7fe ffd5 	bl	4030a0 <_free_r>
  4040f6:	e7e6      	b.n	4040c6 <_realloc_r+0x15a>
  4040f8:	4639      	mov	r1, r7
  4040fa:	4648      	mov	r0, r9
  4040fc:	f7ff fb14 	bl	403728 <_malloc_r>
  404100:	4607      	mov	r7, r0
  404102:	b1d8      	cbz	r0, 40413c <_realloc_r+0x1d0>
  404104:	f856 3c04 	ldr.w	r3, [r6, #-4]
  404108:	f023 0201 	bic.w	r2, r3, #1
  40410c:	4442      	add	r2, r8
  40410e:	f1a0 0108 	sub.w	r1, r0, #8
  404112:	4291      	cmp	r1, r2
  404114:	f000 80ac 	beq.w	404270 <_realloc_r+0x304>
  404118:	1f22      	subs	r2, r4, #4
  40411a:	2a24      	cmp	r2, #36	; 0x24
  40411c:	f200 8099 	bhi.w	404252 <_realloc_r+0x2e6>
  404120:	2a13      	cmp	r2, #19
  404122:	d86a      	bhi.n	4041fa <_realloc_r+0x28e>
  404124:	4603      	mov	r3, r0
  404126:	4632      	mov	r2, r6
  404128:	6811      	ldr	r1, [r2, #0]
  40412a:	6019      	str	r1, [r3, #0]
  40412c:	6851      	ldr	r1, [r2, #4]
  40412e:	6059      	str	r1, [r3, #4]
  404130:	6892      	ldr	r2, [r2, #8]
  404132:	609a      	str	r2, [r3, #8]
  404134:	4631      	mov	r1, r6
  404136:	4648      	mov	r0, r9
  404138:	f7fe ffb2 	bl	4030a0 <_free_r>
  40413c:	4648      	mov	r0, r9
  40413e:	f7ff ff13 	bl	403f68 <__malloc_unlock>
  404142:	4638      	mov	r0, r7
  404144:	b003      	add	sp, #12
  404146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40414a:	4611      	mov	r1, r2
  40414c:	b003      	add	sp, #12
  40414e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404152:	f7ff bae9 	b.w	403728 <_malloc_r>
  404156:	68ca      	ldr	r2, [r1, #12]
  404158:	6889      	ldr	r1, [r1, #8]
  40415a:	4604      	mov	r4, r0
  40415c:	60ca      	str	r2, [r1, #12]
  40415e:	6091      	str	r1, [r2, #8]
  404160:	e7a4      	b.n	4040ac <_realloc_r+0x140>
  404162:	6841      	ldr	r1, [r0, #4]
  404164:	f021 0103 	bic.w	r1, r1, #3
  404168:	4421      	add	r1, r4
  40416a:	f105 0010 	add.w	r0, r5, #16
  40416e:	4281      	cmp	r1, r0
  404170:	da5b      	bge.n	40422a <_realloc_r+0x2be>
  404172:	07db      	lsls	r3, r3, #31
  404174:	d4c0      	bmi.n	4040f8 <_realloc_r+0x18c>
  404176:	f856 3c08 	ldr.w	r3, [r6, #-8]
  40417a:	ebc3 0a08 	rsb	sl, r3, r8
  40417e:	f8da 3004 	ldr.w	r3, [sl, #4]
  404182:	f023 0303 	bic.w	r3, r3, #3
  404186:	eb01 0c03 	add.w	ip, r1, r3
  40418a:	4560      	cmp	r0, ip
  40418c:	f73f af66 	bgt.w	40405c <_realloc_r+0xf0>
  404190:	4657      	mov	r7, sl
  404192:	f8da 300c 	ldr.w	r3, [sl, #12]
  404196:	f857 1f08 	ldr.w	r1, [r7, #8]!
  40419a:	1f22      	subs	r2, r4, #4
  40419c:	2a24      	cmp	r2, #36	; 0x24
  40419e:	60cb      	str	r3, [r1, #12]
  4041a0:	6099      	str	r1, [r3, #8]
  4041a2:	f200 80b8 	bhi.w	404316 <_realloc_r+0x3aa>
  4041a6:	2a13      	cmp	r2, #19
  4041a8:	f240 80a9 	bls.w	4042fe <_realloc_r+0x392>
  4041ac:	6833      	ldr	r3, [r6, #0]
  4041ae:	f8ca 3008 	str.w	r3, [sl, #8]
  4041b2:	6873      	ldr	r3, [r6, #4]
  4041b4:	f8ca 300c 	str.w	r3, [sl, #12]
  4041b8:	2a1b      	cmp	r2, #27
  4041ba:	f200 80b5 	bhi.w	404328 <_realloc_r+0x3bc>
  4041be:	3608      	adds	r6, #8
  4041c0:	f10a 0310 	add.w	r3, sl, #16
  4041c4:	6832      	ldr	r2, [r6, #0]
  4041c6:	601a      	str	r2, [r3, #0]
  4041c8:	6872      	ldr	r2, [r6, #4]
  4041ca:	605a      	str	r2, [r3, #4]
  4041cc:	68b2      	ldr	r2, [r6, #8]
  4041ce:	609a      	str	r2, [r3, #8]
  4041d0:	eb0a 0205 	add.w	r2, sl, r5
  4041d4:	ebc5 030c 	rsb	r3, r5, ip
  4041d8:	f043 0301 	orr.w	r3, r3, #1
  4041dc:	f8cb 2008 	str.w	r2, [fp, #8]
  4041e0:	6053      	str	r3, [r2, #4]
  4041e2:	f8da 3004 	ldr.w	r3, [sl, #4]
  4041e6:	f003 0301 	and.w	r3, r3, #1
  4041ea:	431d      	orrs	r5, r3
  4041ec:	4648      	mov	r0, r9
  4041ee:	f8ca 5004 	str.w	r5, [sl, #4]
  4041f2:	f7ff feb9 	bl	403f68 <__malloc_unlock>
  4041f6:	4638      	mov	r0, r7
  4041f8:	e769      	b.n	4040ce <_realloc_r+0x162>
  4041fa:	6833      	ldr	r3, [r6, #0]
  4041fc:	6003      	str	r3, [r0, #0]
  4041fe:	6873      	ldr	r3, [r6, #4]
  404200:	6043      	str	r3, [r0, #4]
  404202:	2a1b      	cmp	r2, #27
  404204:	d829      	bhi.n	40425a <_realloc_r+0x2ee>
  404206:	f100 0308 	add.w	r3, r0, #8
  40420a:	f106 0208 	add.w	r2, r6, #8
  40420e:	e78b      	b.n	404128 <_realloc_r+0x1bc>
  404210:	463b      	mov	r3, r7
  404212:	6832      	ldr	r2, [r6, #0]
  404214:	601a      	str	r2, [r3, #0]
  404216:	6872      	ldr	r2, [r6, #4]
  404218:	605a      	str	r2, [r3, #4]
  40421a:	68b2      	ldr	r2, [r6, #8]
  40421c:	609a      	str	r2, [r3, #8]
  40421e:	463e      	mov	r6, r7
  404220:	4674      	mov	r4, lr
  404222:	f8da 3004 	ldr.w	r3, [sl, #4]
  404226:	46d0      	mov	r8, sl
  404228:	e740      	b.n	4040ac <_realloc_r+0x140>
  40422a:	eb08 0205 	add.w	r2, r8, r5
  40422e:	1b4b      	subs	r3, r1, r5
  404230:	f043 0301 	orr.w	r3, r3, #1
  404234:	f8cb 2008 	str.w	r2, [fp, #8]
  404238:	6053      	str	r3, [r2, #4]
  40423a:	f856 3c04 	ldr.w	r3, [r6, #-4]
  40423e:	f003 0301 	and.w	r3, r3, #1
  404242:	431d      	orrs	r5, r3
  404244:	4648      	mov	r0, r9
  404246:	f846 5c04 	str.w	r5, [r6, #-4]
  40424a:	f7ff fe8d 	bl	403f68 <__malloc_unlock>
  40424e:	4630      	mov	r0, r6
  404250:	e73d      	b.n	4040ce <_realloc_r+0x162>
  404252:	4631      	mov	r1, r6
  404254:	f7ff fe22 	bl	403e9c <memmove>
  404258:	e76c      	b.n	404134 <_realloc_r+0x1c8>
  40425a:	68b3      	ldr	r3, [r6, #8]
  40425c:	6083      	str	r3, [r0, #8]
  40425e:	68f3      	ldr	r3, [r6, #12]
  404260:	60c3      	str	r3, [r0, #12]
  404262:	2a24      	cmp	r2, #36	; 0x24
  404264:	d02c      	beq.n	4042c0 <_realloc_r+0x354>
  404266:	f100 0310 	add.w	r3, r0, #16
  40426a:	f106 0210 	add.w	r2, r6, #16
  40426e:	e75b      	b.n	404128 <_realloc_r+0x1bc>
  404270:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404274:	f022 0203 	bic.w	r2, r2, #3
  404278:	4414      	add	r4, r2
  40427a:	e717      	b.n	4040ac <_realloc_r+0x140>
  40427c:	4631      	mov	r1, r6
  40427e:	4638      	mov	r0, r7
  404280:	4674      	mov	r4, lr
  404282:	463e      	mov	r6, r7
  404284:	f7ff fe0a 	bl	403e9c <memmove>
  404288:	46d0      	mov	r8, sl
  40428a:	f8da 3004 	ldr.w	r3, [sl, #4]
  40428e:	e70d      	b.n	4040ac <_realloc_r+0x140>
  404290:	463a      	mov	r2, r7
  404292:	e700      	b.n	404096 <_realloc_r+0x12a>
  404294:	4631      	mov	r1, r6
  404296:	4638      	mov	r0, r7
  404298:	461c      	mov	r4, r3
  40429a:	463e      	mov	r6, r7
  40429c:	f7ff fdfe 	bl	403e9c <memmove>
  4042a0:	46d0      	mov	r8, sl
  4042a2:	f8da 3004 	ldr.w	r3, [sl, #4]
  4042a6:	e701      	b.n	4040ac <_realloc_r+0x140>
  4042a8:	68b3      	ldr	r3, [r6, #8]
  4042aa:	f8ca 3010 	str.w	r3, [sl, #16]
  4042ae:	68f3      	ldr	r3, [r6, #12]
  4042b0:	f8ca 3014 	str.w	r3, [sl, #20]
  4042b4:	2a24      	cmp	r2, #36	; 0x24
  4042b6:	d018      	beq.n	4042ea <_realloc_r+0x37e>
  4042b8:	3610      	adds	r6, #16
  4042ba:	f10a 0318 	add.w	r3, sl, #24
  4042be:	e7a8      	b.n	404212 <_realloc_r+0x2a6>
  4042c0:	6933      	ldr	r3, [r6, #16]
  4042c2:	6103      	str	r3, [r0, #16]
  4042c4:	6973      	ldr	r3, [r6, #20]
  4042c6:	6143      	str	r3, [r0, #20]
  4042c8:	f106 0218 	add.w	r2, r6, #24
  4042cc:	f100 0318 	add.w	r3, r0, #24
  4042d0:	e72a      	b.n	404128 <_realloc_r+0x1bc>
  4042d2:	68b1      	ldr	r1, [r6, #8]
  4042d4:	f8ca 1010 	str.w	r1, [sl, #16]
  4042d8:	68f1      	ldr	r1, [r6, #12]
  4042da:	f8ca 1014 	str.w	r1, [sl, #20]
  4042de:	2a24      	cmp	r2, #36	; 0x24
  4042e0:	d00f      	beq.n	404302 <_realloc_r+0x396>
  4042e2:	3610      	adds	r6, #16
  4042e4:	f10a 0218 	add.w	r2, sl, #24
  4042e8:	e6d5      	b.n	404096 <_realloc_r+0x12a>
  4042ea:	6933      	ldr	r3, [r6, #16]
  4042ec:	f8ca 3018 	str.w	r3, [sl, #24]
  4042f0:	6973      	ldr	r3, [r6, #20]
  4042f2:	f8ca 301c 	str.w	r3, [sl, #28]
  4042f6:	3618      	adds	r6, #24
  4042f8:	f10a 0320 	add.w	r3, sl, #32
  4042fc:	e789      	b.n	404212 <_realloc_r+0x2a6>
  4042fe:	463b      	mov	r3, r7
  404300:	e760      	b.n	4041c4 <_realloc_r+0x258>
  404302:	6932      	ldr	r2, [r6, #16]
  404304:	f8ca 2018 	str.w	r2, [sl, #24]
  404308:	6972      	ldr	r2, [r6, #20]
  40430a:	f8ca 201c 	str.w	r2, [sl, #28]
  40430e:	3618      	adds	r6, #24
  404310:	f10a 0220 	add.w	r2, sl, #32
  404314:	e6bf      	b.n	404096 <_realloc_r+0x12a>
  404316:	4631      	mov	r1, r6
  404318:	4638      	mov	r0, r7
  40431a:	f8cd c004 	str.w	ip, [sp, #4]
  40431e:	f7ff fdbd 	bl	403e9c <memmove>
  404322:	f8dd c004 	ldr.w	ip, [sp, #4]
  404326:	e753      	b.n	4041d0 <_realloc_r+0x264>
  404328:	68b3      	ldr	r3, [r6, #8]
  40432a:	f8ca 3010 	str.w	r3, [sl, #16]
  40432e:	68f3      	ldr	r3, [r6, #12]
  404330:	f8ca 3014 	str.w	r3, [sl, #20]
  404334:	2a24      	cmp	r2, #36	; 0x24
  404336:	d003      	beq.n	404340 <_realloc_r+0x3d4>
  404338:	3610      	adds	r6, #16
  40433a:	f10a 0318 	add.w	r3, sl, #24
  40433e:	e741      	b.n	4041c4 <_realloc_r+0x258>
  404340:	6933      	ldr	r3, [r6, #16]
  404342:	f8ca 3018 	str.w	r3, [sl, #24]
  404346:	6973      	ldr	r3, [r6, #20]
  404348:	f8ca 301c 	str.w	r3, [sl, #28]
  40434c:	3618      	adds	r6, #24
  40434e:	f10a 0320 	add.w	r3, sl, #32
  404352:	e737      	b.n	4041c4 <_realloc_r+0x258>
  404354:	2000045c 	.word	0x2000045c

00404358 <lflush>:
  404358:	8983      	ldrh	r3, [r0, #12]
  40435a:	f003 0309 	and.w	r3, r3, #9
  40435e:	2b09      	cmp	r3, #9
  404360:	d001      	beq.n	404366 <lflush+0xe>
  404362:	2000      	movs	r0, #0
  404364:	4770      	bx	lr
  404366:	f7fe bc69 	b.w	402c3c <fflush>
  40436a:	bf00      	nop

0040436c <__srefill_r>:
  40436c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40436e:	460c      	mov	r4, r1
  404370:	4605      	mov	r5, r0
  404372:	b110      	cbz	r0, 40437a <__srefill_r+0xe>
  404374:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404376:	2b00      	cmp	r3, #0
  404378:	d043      	beq.n	404402 <__srefill_r+0x96>
  40437a:	89a3      	ldrh	r3, [r4, #12]
  40437c:	b29a      	uxth	r2, r3
  40437e:	0497      	lsls	r7, r2, #18
  404380:	d407      	bmi.n	404392 <__srefill_r+0x26>
  404382:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404384:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404388:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  40438c:	6662      	str	r2, [r4, #100]	; 0x64
  40438e:	81a3      	strh	r3, [r4, #12]
  404390:	b29a      	uxth	r2, r3
  404392:	2100      	movs	r1, #0
  404394:	0696      	lsls	r6, r2, #26
  404396:	6061      	str	r1, [r4, #4]
  404398:	d430      	bmi.n	4043fc <__srefill_r+0x90>
  40439a:	0750      	lsls	r0, r2, #29
  40439c:	d521      	bpl.n	4043e2 <__srefill_r+0x76>
  40439e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4043a0:	b161      	cbz	r1, 4043bc <__srefill_r+0x50>
  4043a2:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4043a6:	4299      	cmp	r1, r3
  4043a8:	d002      	beq.n	4043b0 <__srefill_r+0x44>
  4043aa:	4628      	mov	r0, r5
  4043ac:	f7fe fe78 	bl	4030a0 <_free_r>
  4043b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4043b2:	6063      	str	r3, [r4, #4]
  4043b4:	2000      	movs	r0, #0
  4043b6:	6320      	str	r0, [r4, #48]	; 0x30
  4043b8:	2b00      	cmp	r3, #0
  4043ba:	d13e      	bne.n	40443a <__srefill_r+0xce>
  4043bc:	6923      	ldr	r3, [r4, #16]
  4043be:	2b00      	cmp	r3, #0
  4043c0:	d04b      	beq.n	40445a <__srefill_r+0xee>
  4043c2:	89a7      	ldrh	r7, [r4, #12]
  4043c4:	b2be      	uxth	r6, r7
  4043c6:	07b3      	lsls	r3, r6, #30
  4043c8:	d11e      	bne.n	404408 <__srefill_r+0x9c>
  4043ca:	6922      	ldr	r2, [r4, #16]
  4043cc:	6022      	str	r2, [r4, #0]
  4043ce:	4628      	mov	r0, r5
  4043d0:	69e1      	ldr	r1, [r4, #28]
  4043d2:	6a25      	ldr	r5, [r4, #32]
  4043d4:	6963      	ldr	r3, [r4, #20]
  4043d6:	47a8      	blx	r5
  4043d8:	2800      	cmp	r0, #0
  4043da:	6060      	str	r0, [r4, #4]
  4043dc:	dd09      	ble.n	4043f2 <__srefill_r+0x86>
  4043de:	2000      	movs	r0, #0
  4043e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4043e2:	06d1      	lsls	r1, r2, #27
  4043e4:	d53e      	bpl.n	404464 <__srefill_r+0xf8>
  4043e6:	0712      	lsls	r2, r2, #28
  4043e8:	d42a      	bmi.n	404440 <__srefill_r+0xd4>
  4043ea:	f043 0304 	orr.w	r3, r3, #4
  4043ee:	81a3      	strh	r3, [r4, #12]
  4043f0:	e7e4      	b.n	4043bc <__srefill_r+0x50>
  4043f2:	89a3      	ldrh	r3, [r4, #12]
  4043f4:	d119      	bne.n	40442a <__srefill_r+0xbe>
  4043f6:	f043 0320 	orr.w	r3, r3, #32
  4043fa:	81a3      	strh	r3, [r4, #12]
  4043fc:	f04f 30ff 	mov.w	r0, #4294967295
  404400:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404402:	f7fe fcab 	bl	402d5c <__sinit>
  404406:	e7b8      	b.n	40437a <__srefill_r+0xe>
  404408:	4b1a      	ldr	r3, [pc, #104]	; (404474 <__srefill_r+0x108>)
  40440a:	491b      	ldr	r1, [pc, #108]	; (404478 <__srefill_r+0x10c>)
  40440c:	6818      	ldr	r0, [r3, #0]
  40440e:	2301      	movs	r3, #1
  404410:	81a3      	strh	r3, [r4, #12]
  404412:	f006 0609 	and.w	r6, r6, #9
  404416:	f7ff f8a7 	bl	403568 <_fwalk>
  40441a:	2e09      	cmp	r6, #9
  40441c:	81a7      	strh	r7, [r4, #12]
  40441e:	d1d4      	bne.n	4043ca <__srefill_r+0x5e>
  404420:	4628      	mov	r0, r5
  404422:	4621      	mov	r1, r4
  404424:	f7fe fb4a 	bl	402abc <__sflush_r>
  404428:	e7cf      	b.n	4043ca <__srefill_r+0x5e>
  40442a:	2200      	movs	r2, #0
  40442c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404430:	81a3      	strh	r3, [r4, #12]
  404432:	6062      	str	r2, [r4, #4]
  404434:	f04f 30ff 	mov.w	r0, #4294967295
  404438:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40443a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  40443c:	6023      	str	r3, [r4, #0]
  40443e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404440:	4628      	mov	r0, r5
  404442:	4621      	mov	r1, r4
  404444:	f7fe fbe4 	bl	402c10 <_fflush_r>
  404448:	2800      	cmp	r0, #0
  40444a:	d1d7      	bne.n	4043fc <__srefill_r+0x90>
  40444c:	89a3      	ldrh	r3, [r4, #12]
  40444e:	60a0      	str	r0, [r4, #8]
  404450:	f023 0308 	bic.w	r3, r3, #8
  404454:	61a0      	str	r0, [r4, #24]
  404456:	b29b      	uxth	r3, r3
  404458:	e7c7      	b.n	4043ea <__srefill_r+0x7e>
  40445a:	4628      	mov	r0, r5
  40445c:	4621      	mov	r1, r4
  40445e:	f7ff f8eb 	bl	403638 <__smakebuf_r>
  404462:	e7ae      	b.n	4043c2 <__srefill_r+0x56>
  404464:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404468:	2209      	movs	r2, #9
  40446a:	602a      	str	r2, [r5, #0]
  40446c:	f04f 30ff 	mov.w	r0, #4294967295
  404470:	81a3      	strh	r3, [r4, #12]
  404472:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404474:	004059f0 	.word	0x004059f0
  404478:	00404359 	.word	0x00404359

0040447c <_sbrk_r>:
  40447c:	b538      	push	{r3, r4, r5, lr}
  40447e:	4c07      	ldr	r4, [pc, #28]	; (40449c <_sbrk_r+0x20>)
  404480:	2300      	movs	r3, #0
  404482:	4605      	mov	r5, r0
  404484:	4608      	mov	r0, r1
  404486:	6023      	str	r3, [r4, #0]
  404488:	f7fc fb04 	bl	400a94 <_sbrk>
  40448c:	1c43      	adds	r3, r0, #1
  40448e:	d000      	beq.n	404492 <_sbrk_r+0x16>
  404490:	bd38      	pop	{r3, r4, r5, pc}
  404492:	6823      	ldr	r3, [r4, #0]
  404494:	2b00      	cmp	r3, #0
  404496:	d0fb      	beq.n	404490 <_sbrk_r+0x14>
  404498:	602b      	str	r3, [r5, #0]
  40449a:	bd38      	pop	{r3, r4, r5, pc}
  40449c:	2000095c 	.word	0x2000095c

004044a0 <__sccl>:
  4044a0:	b470      	push	{r4, r5, r6}
  4044a2:	780d      	ldrb	r5, [r1, #0]
  4044a4:	2d5e      	cmp	r5, #94	; 0x5e
  4044a6:	d02f      	beq.n	404508 <__sccl+0x68>
  4044a8:	2200      	movs	r2, #0
  4044aa:	3101      	adds	r1, #1
  4044ac:	4616      	mov	r6, r2
  4044ae:	1e43      	subs	r3, r0, #1
  4044b0:	f100 04ff 	add.w	r4, r0, #255	; 0xff
  4044b4:	f803 2f01 	strb.w	r2, [r3, #1]!
  4044b8:	42a3      	cmp	r3, r4
  4044ba:	d1fb      	bne.n	4044b4 <__sccl+0x14>
  4044bc:	b185      	cbz	r5, 4044e0 <__sccl+0x40>
  4044be:	f086 0201 	eor.w	r2, r6, #1
  4044c2:	5542      	strb	r2, [r0, r5]
  4044c4:	1c4e      	adds	r6, r1, #1
  4044c6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  4044ca:	2b2d      	cmp	r3, #45	; 0x2d
  4044cc:	d00e      	beq.n	4044ec <__sccl+0x4c>
  4044ce:	2b5d      	cmp	r3, #93	; 0x5d
  4044d0:	d009      	beq.n	4044e6 <__sccl+0x46>
  4044d2:	b113      	cbz	r3, 4044da <__sccl+0x3a>
  4044d4:	461d      	mov	r5, r3
  4044d6:	4631      	mov	r1, r6
  4044d8:	e7f3      	b.n	4044c2 <__sccl+0x22>
  4044da:	4608      	mov	r0, r1
  4044dc:	bc70      	pop	{r4, r5, r6}
  4044de:	4770      	bx	lr
  4044e0:	1e48      	subs	r0, r1, #1
  4044e2:	bc70      	pop	{r4, r5, r6}
  4044e4:	4770      	bx	lr
  4044e6:	4630      	mov	r0, r6
  4044e8:	bc70      	pop	{r4, r5, r6}
  4044ea:	4770      	bx	lr
  4044ec:	784c      	ldrb	r4, [r1, #1]
  4044ee:	2c5d      	cmp	r4, #93	; 0x5d
  4044f0:	d00f      	beq.n	404512 <__sccl+0x72>
  4044f2:	42a5      	cmp	r5, r4
  4044f4:	dc0d      	bgt.n	404512 <__sccl+0x72>
  4044f6:	3102      	adds	r1, #2
  4044f8:	1943      	adds	r3, r0, r5
  4044fa:	3501      	adds	r5, #1
  4044fc:	42ac      	cmp	r4, r5
  4044fe:	f803 2f01 	strb.w	r2, [r3, #1]!
  404502:	dcfa      	bgt.n	4044fa <__sccl+0x5a>
  404504:	3602      	adds	r6, #2
  404506:	e7de      	b.n	4044c6 <__sccl+0x26>
  404508:	2201      	movs	r2, #1
  40450a:	784d      	ldrb	r5, [r1, #1]
  40450c:	4616      	mov	r6, r2
  40450e:	3102      	adds	r1, #2
  404510:	e7cd      	b.n	4044ae <__sccl+0xe>
  404512:	4631      	mov	r1, r6
  404514:	461d      	mov	r5, r3
  404516:	e7d4      	b.n	4044c2 <__sccl+0x22>

00404518 <__sread>:
  404518:	b510      	push	{r4, lr}
  40451a:	460c      	mov	r4, r1
  40451c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404520:	f000 fd56 	bl	404fd0 <_read_r>
  404524:	2800      	cmp	r0, #0
  404526:	db03      	blt.n	404530 <__sread+0x18>
  404528:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40452a:	4403      	add	r3, r0
  40452c:	6523      	str	r3, [r4, #80]	; 0x50
  40452e:	bd10      	pop	{r4, pc}
  404530:	89a3      	ldrh	r3, [r4, #12]
  404532:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  404536:	81a3      	strh	r3, [r4, #12]
  404538:	bd10      	pop	{r4, pc}
  40453a:	bf00      	nop

0040453c <__swrite>:
  40453c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404540:	4616      	mov	r6, r2
  404542:	898a      	ldrh	r2, [r1, #12]
  404544:	461d      	mov	r5, r3
  404546:	05d3      	lsls	r3, r2, #23
  404548:	460c      	mov	r4, r1
  40454a:	4607      	mov	r7, r0
  40454c:	d506      	bpl.n	40455c <__swrite+0x20>
  40454e:	2200      	movs	r2, #0
  404550:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404554:	2302      	movs	r3, #2
  404556:	f000 fd27 	bl	404fa8 <_lseek_r>
  40455a:	89a2      	ldrh	r2, [r4, #12]
  40455c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404560:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  404564:	81a2      	strh	r2, [r4, #12]
  404566:	4638      	mov	r0, r7
  404568:	4632      	mov	r2, r6
  40456a:	462b      	mov	r3, r5
  40456c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404570:	f000 bc3a 	b.w	404de8 <_write_r>

00404574 <__sseek>:
  404574:	b510      	push	{r4, lr}
  404576:	460c      	mov	r4, r1
  404578:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40457c:	f000 fd14 	bl	404fa8 <_lseek_r>
  404580:	89a3      	ldrh	r3, [r4, #12]
  404582:	1c42      	adds	r2, r0, #1
  404584:	bf0e      	itee	eq
  404586:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40458a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40458e:	6520      	strne	r0, [r4, #80]	; 0x50
  404590:	81a3      	strh	r3, [r4, #12]
  404592:	bd10      	pop	{r4, pc}

00404594 <__sclose>:
  404594:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404598:	f000 bc8c 	b.w	404eb4 <_close_r>

0040459c <_strtol_r>:
  40459c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4045a0:	4c44      	ldr	r4, [pc, #272]	; (4046b4 <_strtol_r+0x118>)
  4045a2:	4683      	mov	fp, r0
  4045a4:	460e      	mov	r6, r1
  4045a6:	f8d4 e000 	ldr.w	lr, [r4]
  4045aa:	e000      	b.n	4045ae <_strtol_r+0x12>
  4045ac:	4626      	mov	r6, r4
  4045ae:	4634      	mov	r4, r6
  4045b0:	f814 5b01 	ldrb.w	r5, [r4], #1
  4045b4:	eb0e 0005 	add.w	r0, lr, r5
  4045b8:	7840      	ldrb	r0, [r0, #1]
  4045ba:	f000 0008 	and.w	r0, r0, #8
  4045be:	f000 08ff 	and.w	r8, r0, #255	; 0xff
  4045c2:	2800      	cmp	r0, #0
  4045c4:	d1f2      	bne.n	4045ac <_strtol_r+0x10>
  4045c6:	2d2d      	cmp	r5, #45	; 0x2d
  4045c8:	d04b      	beq.n	404662 <_strtol_r+0xc6>
  4045ca:	2d2b      	cmp	r5, #43	; 0x2b
  4045cc:	bf04      	itt	eq
  4045ce:	7875      	ldrbeq	r5, [r6, #1]
  4045d0:	1cb4      	addeq	r4, r6, #2
  4045d2:	b11b      	cbz	r3, 4045dc <_strtol_r+0x40>
  4045d4:	2b10      	cmp	r3, #16
  4045d6:	d060      	beq.n	40469a <_strtol_r+0xfe>
  4045d8:	469a      	mov	sl, r3
  4045da:	e003      	b.n	4045e4 <_strtol_r+0x48>
  4045dc:	2d30      	cmp	r5, #48	; 0x30
  4045de:	d054      	beq.n	40468a <_strtol_r+0xee>
  4045e0:	230a      	movs	r3, #10
  4045e2:	469a      	mov	sl, r3
  4045e4:	f1b8 0f00 	cmp.w	r8, #0
  4045e8:	bf14      	ite	ne
  4045ea:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  4045ee:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4045f2:	2700      	movs	r7, #0
  4045f4:	fbb0 f9fa 	udiv	r9, r0, sl
  4045f8:	46bc      	mov	ip, r7
  4045fa:	fb0a 0019 	mls	r0, sl, r9, r0
  4045fe:	e00c      	b.n	40461a <_strtol_r+0x7e>
  404600:	3d30      	subs	r5, #48	; 0x30
  404602:	42ab      	cmp	r3, r5
  404604:	dd19      	ble.n	40463a <_strtol_r+0x9e>
  404606:	1c7e      	adds	r6, r7, #1
  404608:	d005      	beq.n	404616 <_strtol_r+0x7a>
  40460a:	45cc      	cmp	ip, r9
  40460c:	d824      	bhi.n	404658 <_strtol_r+0xbc>
  40460e:	d021      	beq.n	404654 <_strtol_r+0xb8>
  404610:	fb0a 5c0c 	mla	ip, sl, ip, r5
  404614:	2701      	movs	r7, #1
  404616:	f814 5b01 	ldrb.w	r5, [r4], #1
  40461a:	eb0e 0605 	add.w	r6, lr, r5
  40461e:	7876      	ldrb	r6, [r6, #1]
  404620:	f016 0f04 	tst.w	r6, #4
  404624:	d1ec      	bne.n	404600 <_strtol_r+0x64>
  404626:	f016 0603 	ands.w	r6, r6, #3
  40462a:	d006      	beq.n	40463a <_strtol_r+0x9e>
  40462c:	2e01      	cmp	r6, #1
  40462e:	bf0c      	ite	eq
  404630:	2637      	moveq	r6, #55	; 0x37
  404632:	2657      	movne	r6, #87	; 0x57
  404634:	1bad      	subs	r5, r5, r6
  404636:	42ab      	cmp	r3, r5
  404638:	dce5      	bgt.n	404606 <_strtol_r+0x6a>
  40463a:	1c7b      	adds	r3, r7, #1
  40463c:	d016      	beq.n	40466c <_strtol_r+0xd0>
  40463e:	f1c8 0000 	rsb	r0, r8, #0
  404642:	ea8c 0000 	eor.w	r0, ip, r0
  404646:	4440      	add	r0, r8
  404648:	b14a      	cbz	r2, 40465e <_strtol_r+0xc2>
  40464a:	b107      	cbz	r7, 40464e <_strtol_r+0xb2>
  40464c:	1e61      	subs	r1, r4, #1
  40464e:	6011      	str	r1, [r2, #0]
  404650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404654:	4285      	cmp	r5, r0
  404656:	dddb      	ble.n	404610 <_strtol_r+0x74>
  404658:	f04f 37ff 	mov.w	r7, #4294967295
  40465c:	e7db      	b.n	404616 <_strtol_r+0x7a>
  40465e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404662:	1cb4      	adds	r4, r6, #2
  404664:	7875      	ldrb	r5, [r6, #1]
  404666:	f04f 0801 	mov.w	r8, #1
  40466a:	e7b2      	b.n	4045d2 <_strtol_r+0x36>
  40466c:	f1b8 0f00 	cmp.w	r8, #0
  404670:	f04f 0322 	mov.w	r3, #34	; 0x22
  404674:	bf14      	ite	ne
  404676:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  40467a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40467e:	f8cb 3000 	str.w	r3, [fp]
  404682:	2a00      	cmp	r2, #0
  404684:	d1e2      	bne.n	40464c <_strtol_r+0xb0>
  404686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40468a:	7823      	ldrb	r3, [r4, #0]
  40468c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404690:	2b58      	cmp	r3, #88	; 0x58
  404692:	d009      	beq.n	4046a8 <_strtol_r+0x10c>
  404694:	2308      	movs	r3, #8
  404696:	469a      	mov	sl, r3
  404698:	e7a4      	b.n	4045e4 <_strtol_r+0x48>
  40469a:	2d30      	cmp	r5, #48	; 0x30
  40469c:	d19c      	bne.n	4045d8 <_strtol_r+0x3c>
  40469e:	7820      	ldrb	r0, [r4, #0]
  4046a0:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  4046a4:	2858      	cmp	r0, #88	; 0x58
  4046a6:	d197      	bne.n	4045d8 <_strtol_r+0x3c>
  4046a8:	f04f 0a10 	mov.w	sl, #16
  4046ac:	7865      	ldrb	r5, [r4, #1]
  4046ae:	4653      	mov	r3, sl
  4046b0:	3402      	adds	r4, #2
  4046b2:	e797      	b.n	4045e4 <_strtol_r+0x48>
  4046b4:	20000434 	.word	0x20000434

004046b8 <_strtoll_r>:
  4046b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4046bc:	4c70      	ldr	r4, [pc, #448]	; (404880 <_strtoll_r+0x1c8>)
  4046be:	b087      	sub	sp, #28
  4046c0:	469b      	mov	fp, r3
  4046c2:	9201      	str	r2, [sp, #4]
  4046c4:	9104      	str	r1, [sp, #16]
  4046c6:	9005      	str	r0, [sp, #20]
  4046c8:	460a      	mov	r2, r1
  4046ca:	f8d4 a000 	ldr.w	sl, [r4]
  4046ce:	e000      	b.n	4046d2 <_strtoll_r+0x1a>
  4046d0:	462a      	mov	r2, r5
  4046d2:	4615      	mov	r5, r2
  4046d4:	f815 4b01 	ldrb.w	r4, [r5], #1
  4046d8:	eb0a 0304 	add.w	r3, sl, r4
  4046dc:	785b      	ldrb	r3, [r3, #1]
  4046de:	f003 0308 	and.w	r3, r3, #8
  4046e2:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  4046e6:	2b00      	cmp	r3, #0
  4046e8:	d1f2      	bne.n	4046d0 <_strtoll_r+0x18>
  4046ea:	2c2d      	cmp	r4, #45	; 0x2d
  4046ec:	f000 8092 	beq.w	404814 <_strtoll_r+0x15c>
  4046f0:	2c2b      	cmp	r4, #43	; 0x2b
  4046f2:	bf08      	it	eq
  4046f4:	7854      	ldrbeq	r4, [r2, #1]
  4046f6:	468c      	mov	ip, r1
  4046f8:	bf08      	it	eq
  4046fa:	1c95      	addeq	r5, r2, #2
  4046fc:	f1bb 0f00 	cmp.w	fp, #0
  404700:	d071      	beq.n	4047e6 <_strtoll_r+0x12e>
  404702:	f1bb 0f10 	cmp.w	fp, #16
  404706:	f000 80a2 	beq.w	40484e <_strtoll_r+0x196>
  40470a:	465e      	mov	r6, fp
  40470c:	17f7      	asrs	r7, r6, #31
  40470e:	f1bc 0f00 	cmp.w	ip, #0
  404712:	d171      	bne.n	4047f8 <_strtoll_r+0x140>
  404714:	f04f 38ff 	mov.w	r8, #4294967295
  404718:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
  40471c:	4640      	mov	r0, r8
  40471e:	4649      	mov	r1, r9
  404720:	4632      	mov	r2, r6
  404722:	463b      	mov	r3, r7
  404724:	f8cd c00c 	str.w	ip, [sp, #12]
  404728:	f000 fc66 	bl	404ff8 <__aeabi_uldivmod>
  40472c:	4640      	mov	r0, r8
  40472e:	9202      	str	r2, [sp, #8]
  404730:	463b      	mov	r3, r7
  404732:	4632      	mov	r2, r6
  404734:	4649      	mov	r1, r9
  404736:	f000 fc5f 	bl	404ff8 <__aeabi_uldivmod>
  40473a:	f04f 0e00 	mov.w	lr, #0
  40473e:	2200      	movs	r2, #0
  404740:	2300      	movs	r3, #0
  404742:	f8dd c00c 	ldr.w	ip, [sp, #12]
  404746:	f8dd 8008 	ldr.w	r8, [sp, #8]
  40474a:	e01b      	b.n	404784 <_strtoll_r+0xcc>
  40474c:	3c30      	subs	r4, #48	; 0x30
  40474e:	45a3      	cmp	fp, r4
  404750:	dd2d      	ble.n	4047ae <_strtoll_r+0xf6>
  404752:	f1be 3fff 	cmp.w	lr, #4294967295
  404756:	d013      	beq.n	404780 <_strtoll_r+0xc8>
  404758:	4299      	cmp	r1, r3
  40475a:	bf08      	it	eq
  40475c:	4290      	cmpeq	r0, r2
  40475e:	d352      	bcc.n	404806 <_strtoll_r+0x14e>
  404760:	428b      	cmp	r3, r1
  404762:	bf08      	it	eq
  404764:	4282      	cmpeq	r2, r0
  404766:	d04c      	beq.n	404802 <_strtoll_r+0x14a>
  404768:	fb02 fe07 	mul.w	lr, r2, r7
  40476c:	fb06 ee03 	mla	lr, r6, r3, lr
  404770:	fba2 2306 	umull	r2, r3, r2, r6
  404774:	4473      	add	r3, lr
  404776:	1912      	adds	r2, r2, r4
  404778:	eb43 73e4 	adc.w	r3, r3, r4, asr #31
  40477c:	f04f 0e01 	mov.w	lr, #1
  404780:	f815 4b01 	ldrb.w	r4, [r5], #1
  404784:	eb0a 0904 	add.w	r9, sl, r4
  404788:	f899 9001 	ldrb.w	r9, [r9, #1]
  40478c:	f019 0f04 	tst.w	r9, #4
  404790:	d1dc      	bne.n	40474c <_strtoll_r+0x94>
  404792:	f019 0903 	ands.w	r9, r9, #3
  404796:	d00a      	beq.n	4047ae <_strtoll_r+0xf6>
  404798:	f1b9 0f01 	cmp.w	r9, #1
  40479c:	bf0c      	ite	eq
  40479e:	f04f 0937 	moveq.w	r9, #55	; 0x37
  4047a2:	f04f 0957 	movne.w	r9, #87	; 0x57
  4047a6:	ebc9 0404 	rsb	r4, r9, r4
  4047aa:	45a3      	cmp	fp, r4
  4047ac:	dcd1      	bgt.n	404752 <_strtoll_r+0x9a>
  4047ae:	f1be 3fff 	cmp.w	lr, #4294967295
  4047b2:	d034      	beq.n	40481e <_strtoll_r+0x166>
  4047b4:	4660      	mov	r0, ip
  4047b6:	17c1      	asrs	r1, r0, #31
  4047b8:	f1dc 0600 	rsbs	r6, ip, #0
  4047bc:	eb61 0741 	sbc.w	r7, r1, r1, lsl #1
  4047c0:	4072      	eors	r2, r6
  4047c2:	407b      	eors	r3, r7
  4047c4:	eb12 020c 	adds.w	r2, r2, ip
  4047c8:	414b      	adcs	r3, r1
  4047ca:	9901      	ldr	r1, [sp, #4]
  4047cc:	2900      	cmp	r1, #0
  4047ce:	d053      	beq.n	404878 <_strtoll_r+0x1c0>
  4047d0:	f1be 0f00 	cmp.w	lr, #0
  4047d4:	d11a      	bne.n	40480c <_strtoll_r+0x154>
  4047d6:	9d04      	ldr	r5, [sp, #16]
  4047d8:	4610      	mov	r0, r2
  4047da:	4619      	mov	r1, r3
  4047dc:	9b01      	ldr	r3, [sp, #4]
  4047de:	601d      	str	r5, [r3, #0]
  4047e0:	b007      	add	sp, #28
  4047e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4047e6:	2c30      	cmp	r4, #48	; 0x30
  4047e8:	d027      	beq.n	40483a <_strtoll_r+0x182>
  4047ea:	260a      	movs	r6, #10
  4047ec:	2700      	movs	r7, #0
  4047ee:	f04f 0b0a 	mov.w	fp, #10
  4047f2:	f1bc 0f00 	cmp.w	ip, #0
  4047f6:	d08d      	beq.n	404714 <_strtoll_r+0x5c>
  4047f8:	f04f 0800 	mov.w	r8, #0
  4047fc:	f04f 4900 	mov.w	r9, #2147483648	; 0x80000000
  404800:	e78c      	b.n	40471c <_strtoll_r+0x64>
  404802:	4544      	cmp	r4, r8
  404804:	ddb0      	ble.n	404768 <_strtoll_r+0xb0>
  404806:	f04f 3eff 	mov.w	lr, #4294967295
  40480a:	e7b9      	b.n	404780 <_strtoll_r+0xc8>
  40480c:	4610      	mov	r0, r2
  40480e:	4619      	mov	r1, r3
  404810:	3d01      	subs	r5, #1
  404812:	e7e3      	b.n	4047dc <_strtoll_r+0x124>
  404814:	1c95      	adds	r5, r2, #2
  404816:	7854      	ldrb	r4, [r2, #1]
  404818:	f04f 0c01 	mov.w	ip, #1
  40481c:	e76e      	b.n	4046fc <_strtoll_r+0x44>
  40481e:	f1bc 0f00 	cmp.w	ip, #0
  404822:	d119      	bne.n	404858 <_strtoll_r+0x1a0>
  404824:	f04f 30ff 	mov.w	r0, #4294967295
  404828:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  40482c:	9a05      	ldr	r2, [sp, #20]
  40482e:	2322      	movs	r3, #34	; 0x22
  404830:	6013      	str	r3, [r2, #0]
  404832:	9b01      	ldr	r3, [sp, #4]
  404834:	2b00      	cmp	r3, #0
  404836:	d1eb      	bne.n	404810 <_strtoll_r+0x158>
  404838:	e7d2      	b.n	4047e0 <_strtoll_r+0x128>
  40483a:	782b      	ldrb	r3, [r5, #0]
  40483c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404840:	2b58      	cmp	r3, #88	; 0x58
  404842:	d012      	beq.n	40486a <_strtoll_r+0x1b2>
  404844:	2608      	movs	r6, #8
  404846:	2700      	movs	r7, #0
  404848:	f04f 0b08 	mov.w	fp, #8
  40484c:	e75f      	b.n	40470e <_strtoll_r+0x56>
  40484e:	2c30      	cmp	r4, #48	; 0x30
  404850:	d006      	beq.n	404860 <_strtoll_r+0x1a8>
  404852:	2610      	movs	r6, #16
  404854:	2700      	movs	r7, #0
  404856:	e75a      	b.n	40470e <_strtoll_r+0x56>
  404858:	2000      	movs	r0, #0
  40485a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  40485e:	e7e5      	b.n	40482c <_strtoll_r+0x174>
  404860:	782b      	ldrb	r3, [r5, #0]
  404862:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404866:	2b58      	cmp	r3, #88	; 0x58
  404868:	d1f3      	bne.n	404852 <_strtoll_r+0x19a>
  40486a:	786c      	ldrb	r4, [r5, #1]
  40486c:	2610      	movs	r6, #16
  40486e:	2700      	movs	r7, #0
  404870:	3502      	adds	r5, #2
  404872:	f04f 0b10 	mov.w	fp, #16
  404876:	e74a      	b.n	40470e <_strtoll_r+0x56>
  404878:	4610      	mov	r0, r2
  40487a:	4619      	mov	r1, r3
  40487c:	e7b0      	b.n	4047e0 <_strtoll_r+0x128>
  40487e:	bf00      	nop
  404880:	20000434 	.word	0x20000434

00404884 <_strtoul_r>:
  404884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404888:	4c46      	ldr	r4, [pc, #280]	; (4049a4 <_strtoul_r+0x120>)
  40488a:	460f      	mov	r7, r1
  40488c:	f8d4 e000 	ldr.w	lr, [r4]
  404890:	e000      	b.n	404894 <_strtoul_r+0x10>
  404892:	4627      	mov	r7, r4
  404894:	463c      	mov	r4, r7
  404896:	f814 5b01 	ldrb.w	r5, [r4], #1
  40489a:	eb0e 0605 	add.w	r6, lr, r5
  40489e:	7876      	ldrb	r6, [r6, #1]
  4048a0:	f006 0608 	and.w	r6, r6, #8
  4048a4:	f006 08ff 	and.w	r8, r6, #255	; 0xff
  4048a8:	2e00      	cmp	r6, #0
  4048aa:	d1f2      	bne.n	404892 <_strtoul_r+0xe>
  4048ac:	2d2d      	cmp	r5, #45	; 0x2d
  4048ae:	d051      	beq.n	404954 <_strtoul_r+0xd0>
  4048b0:	2d2b      	cmp	r5, #43	; 0x2b
  4048b2:	bf04      	itt	eq
  4048b4:	787d      	ldrbeq	r5, [r7, #1]
  4048b6:	1cbc      	addeq	r4, r7, #2
  4048b8:	b15b      	cbz	r3, 4048d2 <_strtoul_r+0x4e>
  4048ba:	2b10      	cmp	r3, #16
  4048bc:	d05b      	beq.n	404976 <_strtoul_r+0xf2>
  4048be:	f04f 39ff 	mov.w	r9, #4294967295
  4048c2:	fbb9 f9f3 	udiv	r9, r9, r3
  4048c6:	fb03 fb09 	mul.w	fp, r3, r9
  4048ca:	ea6f 0b0b 	mvn.w	fp, fp
  4048ce:	469a      	mov	sl, r3
  4048d0:	e007      	b.n	4048e2 <_strtoul_r+0x5e>
  4048d2:	2d30      	cmp	r5, #48	; 0x30
  4048d4:	d043      	beq.n	40495e <_strtoul_r+0xda>
  4048d6:	230a      	movs	r3, #10
  4048d8:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 4049a8 <_strtoul_r+0x124>
  4048dc:	469a      	mov	sl, r3
  4048de:	f04f 0b05 	mov.w	fp, #5
  4048e2:	2700      	movs	r7, #0
  4048e4:	46bc      	mov	ip, r7
  4048e6:	e00c      	b.n	404902 <_strtoul_r+0x7e>
  4048e8:	3d30      	subs	r5, #48	; 0x30
  4048ea:	42ab      	cmp	r3, r5
  4048ec:	dd19      	ble.n	404922 <_strtoul_r+0x9e>
  4048ee:	1c7e      	adds	r6, r7, #1
  4048f0:	d005      	beq.n	4048fe <_strtoul_r+0x7a>
  4048f2:	45cc      	cmp	ip, r9
  4048f4:	d824      	bhi.n	404940 <_strtoul_r+0xbc>
  4048f6:	d021      	beq.n	40493c <_strtoul_r+0xb8>
  4048f8:	fb0a 5c0c 	mla	ip, sl, ip, r5
  4048fc:	2701      	movs	r7, #1
  4048fe:	f814 5b01 	ldrb.w	r5, [r4], #1
  404902:	eb0e 0605 	add.w	r6, lr, r5
  404906:	7876      	ldrb	r6, [r6, #1]
  404908:	f016 0f04 	tst.w	r6, #4
  40490c:	d1ec      	bne.n	4048e8 <_strtoul_r+0x64>
  40490e:	f016 0603 	ands.w	r6, r6, #3
  404912:	d006      	beq.n	404922 <_strtoul_r+0x9e>
  404914:	2e01      	cmp	r6, #1
  404916:	bf0c      	ite	eq
  404918:	2637      	moveq	r6, #55	; 0x37
  40491a:	2657      	movne	r6, #87	; 0x57
  40491c:	1bad      	subs	r5, r5, r6
  40491e:	42ab      	cmp	r3, r5
  404920:	dce5      	bgt.n	4048ee <_strtoul_r+0x6a>
  404922:	2f00      	cmp	r7, #0
  404924:	db11      	blt.n	40494a <_strtoul_r+0xc6>
  404926:	f1c8 0000 	rsb	r0, r8, #0
  40492a:	ea8c 0000 	eor.w	r0, ip, r0
  40492e:	4440      	add	r0, r8
  404930:	b14a      	cbz	r2, 404946 <_strtoul_r+0xc2>
  404932:	b107      	cbz	r7, 404936 <_strtoul_r+0xb2>
  404934:	1e61      	subs	r1, r4, #1
  404936:	6011      	str	r1, [r2, #0]
  404938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40493c:	455d      	cmp	r5, fp
  40493e:	dddb      	ble.n	4048f8 <_strtoul_r+0x74>
  404940:	f04f 37ff 	mov.w	r7, #4294967295
  404944:	e7db      	b.n	4048fe <_strtoul_r+0x7a>
  404946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40494a:	2322      	movs	r3, #34	; 0x22
  40494c:	6003      	str	r3, [r0, #0]
  40494e:	f04f 30ff 	mov.w	r0, #4294967295
  404952:	e7ed      	b.n	404930 <_strtoul_r+0xac>
  404954:	1cbc      	adds	r4, r7, #2
  404956:	787d      	ldrb	r5, [r7, #1]
  404958:	f04f 0801 	mov.w	r8, #1
  40495c:	e7ac      	b.n	4048b8 <_strtoul_r+0x34>
  40495e:	7823      	ldrb	r3, [r4, #0]
  404960:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404964:	2b58      	cmp	r3, #88	; 0x58
  404966:	d013      	beq.n	404990 <_strtoul_r+0x10c>
  404968:	2308      	movs	r3, #8
  40496a:	469a      	mov	sl, r3
  40496c:	f04f 0b07 	mov.w	fp, #7
  404970:	f06f 4960 	mvn.w	r9, #3758096384	; 0xe0000000
  404974:	e7b5      	b.n	4048e2 <_strtoul_r+0x5e>
  404976:	2d30      	cmp	r5, #48	; 0x30
  404978:	d005      	beq.n	404986 <_strtoul_r+0x102>
  40497a:	f04f 0b0f 	mov.w	fp, #15
  40497e:	f06f 4970 	mvn.w	r9, #4026531840	; 0xf0000000
  404982:	469a      	mov	sl, r3
  404984:	e7ad      	b.n	4048e2 <_strtoul_r+0x5e>
  404986:	7826      	ldrb	r6, [r4, #0]
  404988:	f006 06df 	and.w	r6, r6, #223	; 0xdf
  40498c:	2e58      	cmp	r6, #88	; 0x58
  40498e:	d1f4      	bne.n	40497a <_strtoul_r+0xf6>
  404990:	f04f 0a10 	mov.w	sl, #16
  404994:	7865      	ldrb	r5, [r4, #1]
  404996:	4653      	mov	r3, sl
  404998:	f04f 0b0f 	mov.w	fp, #15
  40499c:	3402      	adds	r4, #2
  40499e:	f06f 4970 	mvn.w	r9, #4026531840	; 0xf0000000
  4049a2:	e79e      	b.n	4048e2 <_strtoul_r+0x5e>
  4049a4:	20000434 	.word	0x20000434
  4049a8:	19999999 	.word	0x19999999

004049ac <_strtoull_r>:
  4049ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4049b0:	4c72      	ldr	r4, [pc, #456]	; (404b7c <_strtoull_r+0x1d0>)
  4049b2:	b087      	sub	sp, #28
  4049b4:	4692      	mov	sl, r2
  4049b6:	468b      	mov	fp, r1
  4049b8:	9004      	str	r0, [sp, #16]
  4049ba:	4699      	mov	r9, r3
  4049bc:	460a      	mov	r2, r1
  4049be:	f8d4 8000 	ldr.w	r8, [r4]
  4049c2:	e000      	b.n	4049c6 <_strtoull_r+0x1a>
  4049c4:	462a      	mov	r2, r5
  4049c6:	4615      	mov	r5, r2
  4049c8:	f815 4b01 	ldrb.w	r4, [r5], #1
  4049cc:	eb08 0304 	add.w	r3, r8, r4
  4049d0:	785b      	ldrb	r3, [r3, #1]
  4049d2:	f003 0308 	and.w	r3, r3, #8
  4049d6:	f003 00ff 	and.w	r0, r3, #255	; 0xff
  4049da:	2b00      	cmp	r3, #0
  4049dc:	d1f2      	bne.n	4049c4 <_strtoull_r+0x18>
  4049de:	2c2d      	cmp	r4, #45	; 0x2d
  4049e0:	f000 8099 	beq.w	404b16 <_strtoull_r+0x16a>
  4049e4:	2c2b      	cmp	r4, #43	; 0x2b
  4049e6:	bf08      	it	eq
  4049e8:	7854      	ldrbeq	r4, [r2, #1]
  4049ea:	9003      	str	r0, [sp, #12]
  4049ec:	bf08      	it	eq
  4049ee:	1c95      	addeq	r5, r2, #2
  4049f0:	f1b9 0f00 	cmp.w	r9, #0
  4049f4:	d01d      	beq.n	404a32 <_strtoull_r+0x86>
  4049f6:	f1b9 0f10 	cmp.w	r9, #16
  4049fa:	f000 80a1 	beq.w	404b40 <_strtoull_r+0x194>
  4049fe:	464e      	mov	r6, r9
  404a00:	17f7      	asrs	r7, r6, #31
  404a02:	464a      	mov	r2, r9
  404a04:	463b      	mov	r3, r7
  404a06:	f04f 30ff 	mov.w	r0, #4294967295
  404a0a:	f04f 31ff 	mov.w	r1, #4294967295
  404a0e:	f000 faf3 	bl	404ff8 <__aeabi_uldivmod>
  404a12:	464a      	mov	r2, r9
  404a14:	9005      	str	r0, [sp, #20]
  404a16:	9100      	str	r1, [sp, #0]
  404a18:	463b      	mov	r3, r7
  404a1a:	f04f 30ff 	mov.w	r0, #4294967295
  404a1e:	f04f 31ff 	mov.w	r1, #4294967295
  404a22:	f000 fae9 	bl	404ff8 <__aeabi_uldivmod>
  404a26:	f8dd c014 	ldr.w	ip, [sp, #20]
  404a2a:	9202      	str	r2, [sp, #8]
  404a2c:	4660      	mov	r0, ip
  404a2e:	9900      	ldr	r1, [sp, #0]
  404a30:	e00a      	b.n	404a48 <_strtoull_r+0x9c>
  404a32:	2c30      	cmp	r4, #48	; 0x30
  404a34:	d074      	beq.n	404b20 <_strtoull_r+0x174>
  404a36:	2305      	movs	r3, #5
  404a38:	4951      	ldr	r1, [pc, #324]	; (404b80 <_strtoull_r+0x1d4>)
  404a3a:	9302      	str	r3, [sp, #8]
  404a3c:	f04f 3099 	mov.w	r0, #2576980377	; 0x99999999
  404a40:	260a      	movs	r6, #10
  404a42:	2700      	movs	r7, #0
  404a44:	f04f 090a 	mov.w	r9, #10
  404a48:	f04f 0e00 	mov.w	lr, #0
  404a4c:	2200      	movs	r2, #0
  404a4e:	2300      	movs	r3, #0
  404a50:	e9cd 6700 	strd	r6, r7, [sp]
  404a54:	e01d      	b.n	404a92 <_strtoull_r+0xe6>
  404a56:	3c30      	subs	r4, #48	; 0x30
  404a58:	45a1      	cmp	r9, r4
  404a5a:	dd2f      	ble.n	404abc <_strtoull_r+0x110>
  404a5c:	f1be 3fff 	cmp.w	lr, #4294967295
  404a60:	d015      	beq.n	404a8e <_strtoull_r+0xe2>
  404a62:	4299      	cmp	r1, r3
  404a64:	bf08      	it	eq
  404a66:	4290      	cmpeq	r0, r2
  404a68:	d348      	bcc.n	404afc <_strtoull_r+0x150>
  404a6a:	428b      	cmp	r3, r1
  404a6c:	bf08      	it	eq
  404a6e:	4282      	cmpeq	r2, r0
  404a70:	d041      	beq.n	404af6 <_strtoull_r+0x14a>
  404a72:	9e01      	ldr	r6, [sp, #4]
  404a74:	fb02 fe06 	mul.w	lr, r2, r6
  404a78:	9e00      	ldr	r6, [sp, #0]
  404a7a:	fb06 ee03 	mla	lr, r6, r3, lr
  404a7e:	fba2 2306 	umull	r2, r3, r2, r6
  404a82:	4473      	add	r3, lr
  404a84:	1912      	adds	r2, r2, r4
  404a86:	eb43 73e4 	adc.w	r3, r3, r4, asr #31
  404a8a:	f04f 0e01 	mov.w	lr, #1
  404a8e:	f815 4b01 	ldrb.w	r4, [r5], #1
  404a92:	eb08 0c04 	add.w	ip, r8, r4
  404a96:	f89c c001 	ldrb.w	ip, [ip, #1]
  404a9a:	f01c 0f04 	tst.w	ip, #4
  404a9e:	d1da      	bne.n	404a56 <_strtoull_r+0xaa>
  404aa0:	f01c 0c03 	ands.w	ip, ip, #3
  404aa4:	d00a      	beq.n	404abc <_strtoull_r+0x110>
  404aa6:	f1bc 0f01 	cmp.w	ip, #1
  404aaa:	bf0c      	ite	eq
  404aac:	f04f 0c37 	moveq.w	ip, #55	; 0x37
  404ab0:	f04f 0c57 	movne.w	ip, #87	; 0x57
  404ab4:	ebcc 0404 	rsb	r4, ip, r4
  404ab8:	45a1      	cmp	r9, r4
  404aba:	dccf      	bgt.n	404a5c <_strtoull_r+0xb0>
  404abc:	f1be 0f00 	cmp.w	lr, #0
  404ac0:	db21      	blt.n	404b06 <_strtoull_r+0x15a>
  404ac2:	9903      	ldr	r1, [sp, #12]
  404ac4:	460e      	mov	r6, r1
  404ac6:	4276      	negs	r6, r6
  404ac8:	ea4f 77e1 	mov.w	r7, r1, asr #31
  404acc:	4608      	mov	r0, r1
  404ace:	ea82 0206 	eor.w	r2, r2, r6
  404ad2:	4639      	mov	r1, r7
  404ad4:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  404ad8:	407b      	eors	r3, r7
  404ada:	1880      	adds	r0, r0, r2
  404adc:	4159      	adcs	r1, r3
  404ade:	f1ba 0f00 	cmp.w	sl, #0
  404ae2:	d005      	beq.n	404af0 <_strtoull_r+0x144>
  404ae4:	f1be 0f00 	cmp.w	lr, #0
  404ae8:	d00b      	beq.n	404b02 <_strtoull_r+0x156>
  404aea:	3d01      	subs	r5, #1
  404aec:	f8ca 5000 	str.w	r5, [sl]
  404af0:	b007      	add	sp, #28
  404af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404af6:	9e02      	ldr	r6, [sp, #8]
  404af8:	42b4      	cmp	r4, r6
  404afa:	ddba      	ble.n	404a72 <_strtoull_r+0xc6>
  404afc:	f04f 3eff 	mov.w	lr, #4294967295
  404b00:	e7c5      	b.n	404a8e <_strtoull_r+0xe2>
  404b02:	465d      	mov	r5, fp
  404b04:	e7f2      	b.n	404aec <_strtoull_r+0x140>
  404b06:	9a04      	ldr	r2, [sp, #16]
  404b08:	2322      	movs	r3, #34	; 0x22
  404b0a:	6013      	str	r3, [r2, #0]
  404b0c:	f04f 30ff 	mov.w	r0, #4294967295
  404b10:	f04f 31ff 	mov.w	r1, #4294967295
  404b14:	e7e3      	b.n	404ade <_strtoull_r+0x132>
  404b16:	2301      	movs	r3, #1
  404b18:	1c95      	adds	r5, r2, #2
  404b1a:	7854      	ldrb	r4, [r2, #1]
  404b1c:	9303      	str	r3, [sp, #12]
  404b1e:	e767      	b.n	4049f0 <_strtoull_r+0x44>
  404b20:	782b      	ldrb	r3, [r5, #0]
  404b22:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404b26:	2b58      	cmp	r3, #88	; 0x58
  404b28:	d01a      	beq.n	404b60 <_strtoull_r+0x1b4>
  404b2a:	2307      	movs	r3, #7
  404b2c:	9302      	str	r3, [sp, #8]
  404b2e:	f04f 30ff 	mov.w	r0, #4294967295
  404b32:	f06f 4160 	mvn.w	r1, #3758096384	; 0xe0000000
  404b36:	2608      	movs	r6, #8
  404b38:	2700      	movs	r7, #0
  404b3a:	f04f 0908 	mov.w	r9, #8
  404b3e:	e783      	b.n	404a48 <_strtoull_r+0x9c>
  404b40:	2c30      	cmp	r4, #48	; 0x30
  404b42:	d008      	beq.n	404b56 <_strtoull_r+0x1aa>
  404b44:	230f      	movs	r3, #15
  404b46:	9302      	str	r3, [sp, #8]
  404b48:	f04f 30ff 	mov.w	r0, #4294967295
  404b4c:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
  404b50:	2610      	movs	r6, #16
  404b52:	2700      	movs	r7, #0
  404b54:	e778      	b.n	404a48 <_strtoull_r+0x9c>
  404b56:	782b      	ldrb	r3, [r5, #0]
  404b58:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404b5c:	2b58      	cmp	r3, #88	; 0x58
  404b5e:	d1f1      	bne.n	404b44 <_strtoull_r+0x198>
  404b60:	230f      	movs	r3, #15
  404b62:	9302      	str	r3, [sp, #8]
  404b64:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  404b68:	786c      	ldrb	r4, [r5, #1]
  404b6a:	9300      	str	r3, [sp, #0]
  404b6c:	3502      	adds	r5, #2
  404b6e:	f04f 3cff 	mov.w	ip, #4294967295
  404b72:	2610      	movs	r6, #16
  404b74:	2700      	movs	r7, #0
  404b76:	f04f 0910 	mov.w	r9, #16
  404b7a:	e757      	b.n	404a2c <_strtoull_r+0x80>
  404b7c:	20000434 	.word	0x20000434
  404b80:	19999999 	.word	0x19999999

00404b84 <__submore>:
  404b84:	f101 0340 	add.w	r3, r1, #64	; 0x40
  404b88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b8c:	460c      	mov	r4, r1
  404b8e:	6b09      	ldr	r1, [r1, #48]	; 0x30
  404b90:	4299      	cmp	r1, r3
  404b92:	d014      	beq.n	404bbe <__submore+0x3a>
  404b94:	6b66      	ldr	r6, [r4, #52]	; 0x34
  404b96:	0077      	lsls	r7, r6, #1
  404b98:	463a      	mov	r2, r7
  404b9a:	f7ff f9e7 	bl	403f6c <_realloc_r>
  404b9e:	4605      	mov	r5, r0
  404ba0:	b340      	cbz	r0, 404bf4 <__submore+0x70>
  404ba2:	eb00 0806 	add.w	r8, r0, r6
  404ba6:	4632      	mov	r2, r6
  404ba8:	4640      	mov	r0, r8
  404baa:	4629      	mov	r1, r5
  404bac:	f7ff f8dc 	bl	403d68 <memcpy>
  404bb0:	f8c4 8000 	str.w	r8, [r4]
  404bb4:	6325      	str	r5, [r4, #48]	; 0x30
  404bb6:	6367      	str	r7, [r4, #52]	; 0x34
  404bb8:	2000      	movs	r0, #0
  404bba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bbe:	f44f 6180 	mov.w	r1, #1024	; 0x400
  404bc2:	f7fe fdb1 	bl	403728 <_malloc_r>
  404bc6:	b1a8      	cbz	r0, 404bf4 <__submore+0x70>
  404bc8:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  404bcc:	6320      	str	r0, [r4, #48]	; 0x30
  404bce:	f44f 6280 	mov.w	r2, #1024	; 0x400
  404bd2:	6362      	str	r2, [r4, #52]	; 0x34
  404bd4:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  404bd8:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  404bdc:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  404be0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  404be4:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  404be8:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  404bec:	6020      	str	r0, [r4, #0]
  404bee:	2000      	movs	r0, #0
  404bf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bf4:	f04f 30ff 	mov.w	r0, #4294967295
  404bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404bfc <_ungetc_r>:
  404bfc:	b570      	push	{r4, r5, r6, lr}
  404bfe:	460d      	mov	r5, r1
  404c00:	3101      	adds	r1, #1
  404c02:	d033      	beq.n	404c6c <_ungetc_r+0x70>
  404c04:	4614      	mov	r4, r2
  404c06:	4606      	mov	r6, r0
  404c08:	b110      	cbz	r0, 404c10 <_ungetc_r+0x14>
  404c0a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404c0c:	2b00      	cmp	r3, #0
  404c0e:	d030      	beq.n	404c72 <_ungetc_r+0x76>
  404c10:	89a3      	ldrh	r3, [r4, #12]
  404c12:	049a      	lsls	r2, r3, #18
  404c14:	d405      	bmi.n	404c22 <_ungetc_r+0x26>
  404c16:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404c18:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404c1c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404c20:	6662      	str	r2, [r4, #100]	; 0x64
  404c22:	f023 0320 	bic.w	r3, r3, #32
  404c26:	b29b      	uxth	r3, r3
  404c28:	b29a      	uxth	r2, r3
  404c2a:	0750      	lsls	r0, r2, #29
  404c2c:	81a3      	strh	r3, [r4, #12]
  404c2e:	d406      	bmi.n	404c3e <_ungetc_r+0x42>
  404c30:	06d1      	lsls	r1, r2, #27
  404c32:	d51b      	bpl.n	404c6c <_ungetc_r+0x70>
  404c34:	0712      	lsls	r2, r2, #28
  404c36:	d438      	bmi.n	404caa <_ungetc_r+0xae>
  404c38:	f043 0304 	orr.w	r3, r3, #4
  404c3c:	81a3      	strh	r3, [r4, #12]
  404c3e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404c40:	b2ed      	uxtb	r5, r5
  404c42:	b1cb      	cbz	r3, 404c78 <_ungetc_r+0x7c>
  404c44:	6862      	ldr	r2, [r4, #4]
  404c46:	6b63      	ldr	r3, [r4, #52]	; 0x34
  404c48:	429a      	cmp	r2, r3
  404c4a:	da09      	bge.n	404c60 <_ungetc_r+0x64>
  404c4c:	6823      	ldr	r3, [r4, #0]
  404c4e:	1e5a      	subs	r2, r3, #1
  404c50:	6022      	str	r2, [r4, #0]
  404c52:	f803 5c01 	strb.w	r5, [r3, #-1]
  404c56:	6863      	ldr	r3, [r4, #4]
  404c58:	3301      	adds	r3, #1
  404c5a:	4628      	mov	r0, r5
  404c5c:	6063      	str	r3, [r4, #4]
  404c5e:	bd70      	pop	{r4, r5, r6, pc}
  404c60:	4630      	mov	r0, r6
  404c62:	4621      	mov	r1, r4
  404c64:	f7ff ff8e 	bl	404b84 <__submore>
  404c68:	2800      	cmp	r0, #0
  404c6a:	d0ef      	beq.n	404c4c <_ungetc_r+0x50>
  404c6c:	f04f 30ff 	mov.w	r0, #4294967295
  404c70:	bd70      	pop	{r4, r5, r6, pc}
  404c72:	f7fe f873 	bl	402d5c <__sinit>
  404c76:	e7cb      	b.n	404c10 <_ungetc_r+0x14>
  404c78:	6922      	ldr	r2, [r4, #16]
  404c7a:	6823      	ldr	r3, [r4, #0]
  404c7c:	b12a      	cbz	r2, 404c8a <_ungetc_r+0x8e>
  404c7e:	429a      	cmp	r2, r3
  404c80:	d203      	bcs.n	404c8a <_ungetc_r+0x8e>
  404c82:	f813 0c01 	ldrb.w	r0, [r3, #-1]
  404c86:	42a8      	cmp	r0, r5
  404c88:	d01c      	beq.n	404cc4 <_ungetc_r+0xc8>
  404c8a:	63a3      	str	r3, [r4, #56]	; 0x38
  404c8c:	4623      	mov	r3, r4
  404c8e:	6860      	ldr	r0, [r4, #4]
  404c90:	63e0      	str	r0, [r4, #60]	; 0x3c
  404c92:	f104 0140 	add.w	r1, r4, #64	; 0x40
  404c96:	2203      	movs	r2, #3
  404c98:	6362      	str	r2, [r4, #52]	; 0x34
  404c9a:	6321      	str	r1, [r4, #48]	; 0x30
  404c9c:	f803 5f42 	strb.w	r5, [r3, #66]!
  404ca0:	2201      	movs	r2, #1
  404ca2:	6023      	str	r3, [r4, #0]
  404ca4:	4628      	mov	r0, r5
  404ca6:	6062      	str	r2, [r4, #4]
  404ca8:	bd70      	pop	{r4, r5, r6, pc}
  404caa:	4630      	mov	r0, r6
  404cac:	4621      	mov	r1, r4
  404cae:	f7fd ffaf 	bl	402c10 <_fflush_r>
  404cb2:	2800      	cmp	r0, #0
  404cb4:	d1da      	bne.n	404c6c <_ungetc_r+0x70>
  404cb6:	89a3      	ldrh	r3, [r4, #12]
  404cb8:	60a0      	str	r0, [r4, #8]
  404cba:	f023 0308 	bic.w	r3, r3, #8
  404cbe:	61a0      	str	r0, [r4, #24]
  404cc0:	b29b      	uxth	r3, r3
  404cc2:	e7b9      	b.n	404c38 <_ungetc_r+0x3c>
  404cc4:	6862      	ldr	r2, [r4, #4]
  404cc6:	3b01      	subs	r3, #1
  404cc8:	3201      	adds	r2, #1
  404cca:	6023      	str	r3, [r4, #0]
  404ccc:	6062      	str	r2, [r4, #4]
  404cce:	bd70      	pop	{r4, r5, r6, pc}

00404cd0 <__swbuf_r>:
  404cd0:	b570      	push	{r4, r5, r6, lr}
  404cd2:	460d      	mov	r5, r1
  404cd4:	4614      	mov	r4, r2
  404cd6:	4606      	mov	r6, r0
  404cd8:	b110      	cbz	r0, 404ce0 <__swbuf_r+0x10>
  404cda:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404cdc:	2b00      	cmp	r3, #0
  404cde:	d048      	beq.n	404d72 <__swbuf_r+0xa2>
  404ce0:	89a2      	ldrh	r2, [r4, #12]
  404ce2:	69a3      	ldr	r3, [r4, #24]
  404ce4:	60a3      	str	r3, [r4, #8]
  404ce6:	b291      	uxth	r1, r2
  404ce8:	0708      	lsls	r0, r1, #28
  404cea:	d538      	bpl.n	404d5e <__swbuf_r+0x8e>
  404cec:	6923      	ldr	r3, [r4, #16]
  404cee:	2b00      	cmp	r3, #0
  404cf0:	d035      	beq.n	404d5e <__swbuf_r+0x8e>
  404cf2:	0489      	lsls	r1, r1, #18
  404cf4:	b2ed      	uxtb	r5, r5
  404cf6:	d515      	bpl.n	404d24 <__swbuf_r+0x54>
  404cf8:	6822      	ldr	r2, [r4, #0]
  404cfa:	6961      	ldr	r1, [r4, #20]
  404cfc:	1ad3      	subs	r3, r2, r3
  404cfe:	428b      	cmp	r3, r1
  404d00:	da1c      	bge.n	404d3c <__swbuf_r+0x6c>
  404d02:	3301      	adds	r3, #1
  404d04:	68a1      	ldr	r1, [r4, #8]
  404d06:	1c50      	adds	r0, r2, #1
  404d08:	3901      	subs	r1, #1
  404d0a:	60a1      	str	r1, [r4, #8]
  404d0c:	6020      	str	r0, [r4, #0]
  404d0e:	7015      	strb	r5, [r2, #0]
  404d10:	6962      	ldr	r2, [r4, #20]
  404d12:	429a      	cmp	r2, r3
  404d14:	d01a      	beq.n	404d4c <__swbuf_r+0x7c>
  404d16:	89a3      	ldrh	r3, [r4, #12]
  404d18:	07db      	lsls	r3, r3, #31
  404d1a:	d501      	bpl.n	404d20 <__swbuf_r+0x50>
  404d1c:	2d0a      	cmp	r5, #10
  404d1e:	d015      	beq.n	404d4c <__swbuf_r+0x7c>
  404d20:	4628      	mov	r0, r5
  404d22:	bd70      	pop	{r4, r5, r6, pc}
  404d24:	6e61      	ldr	r1, [r4, #100]	; 0x64
  404d26:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  404d2a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  404d2e:	81a2      	strh	r2, [r4, #12]
  404d30:	6822      	ldr	r2, [r4, #0]
  404d32:	6661      	str	r1, [r4, #100]	; 0x64
  404d34:	6961      	ldr	r1, [r4, #20]
  404d36:	1ad3      	subs	r3, r2, r3
  404d38:	428b      	cmp	r3, r1
  404d3a:	dbe2      	blt.n	404d02 <__swbuf_r+0x32>
  404d3c:	4630      	mov	r0, r6
  404d3e:	4621      	mov	r1, r4
  404d40:	f7fd ff66 	bl	402c10 <_fflush_r>
  404d44:	b940      	cbnz	r0, 404d58 <__swbuf_r+0x88>
  404d46:	6822      	ldr	r2, [r4, #0]
  404d48:	2301      	movs	r3, #1
  404d4a:	e7db      	b.n	404d04 <__swbuf_r+0x34>
  404d4c:	4630      	mov	r0, r6
  404d4e:	4621      	mov	r1, r4
  404d50:	f7fd ff5e 	bl	402c10 <_fflush_r>
  404d54:	2800      	cmp	r0, #0
  404d56:	d0e3      	beq.n	404d20 <__swbuf_r+0x50>
  404d58:	f04f 30ff 	mov.w	r0, #4294967295
  404d5c:	bd70      	pop	{r4, r5, r6, pc}
  404d5e:	4630      	mov	r0, r6
  404d60:	4621      	mov	r1, r4
  404d62:	f7fd fe39 	bl	4029d8 <__swsetup_r>
  404d66:	2800      	cmp	r0, #0
  404d68:	d1f6      	bne.n	404d58 <__swbuf_r+0x88>
  404d6a:	89a2      	ldrh	r2, [r4, #12]
  404d6c:	6923      	ldr	r3, [r4, #16]
  404d6e:	b291      	uxth	r1, r2
  404d70:	e7bf      	b.n	404cf2 <__swbuf_r+0x22>
  404d72:	f7fd fff3 	bl	402d5c <__sinit>
  404d76:	e7b3      	b.n	404ce0 <__swbuf_r+0x10>

00404d78 <_wcrtomb_r>:
  404d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404d7c:	4605      	mov	r5, r0
  404d7e:	b086      	sub	sp, #24
  404d80:	461e      	mov	r6, r3
  404d82:	460c      	mov	r4, r1
  404d84:	b1a1      	cbz	r1, 404db0 <_wcrtomb_r+0x38>
  404d86:	4b10      	ldr	r3, [pc, #64]	; (404dc8 <_wcrtomb_r+0x50>)
  404d88:	4617      	mov	r7, r2
  404d8a:	f8d3 8000 	ldr.w	r8, [r3]
  404d8e:	f7fe fc49 	bl	403624 <__locale_charset>
  404d92:	9600      	str	r6, [sp, #0]
  404d94:	4603      	mov	r3, r0
  404d96:	4621      	mov	r1, r4
  404d98:	463a      	mov	r2, r7
  404d9a:	4628      	mov	r0, r5
  404d9c:	47c0      	blx	r8
  404d9e:	1c43      	adds	r3, r0, #1
  404da0:	d103      	bne.n	404daa <_wcrtomb_r+0x32>
  404da2:	2200      	movs	r2, #0
  404da4:	238a      	movs	r3, #138	; 0x8a
  404da6:	6032      	str	r2, [r6, #0]
  404da8:	602b      	str	r3, [r5, #0]
  404daa:	b006      	add	sp, #24
  404dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404db0:	4b05      	ldr	r3, [pc, #20]	; (404dc8 <_wcrtomb_r+0x50>)
  404db2:	681f      	ldr	r7, [r3, #0]
  404db4:	f7fe fc36 	bl	403624 <__locale_charset>
  404db8:	9600      	str	r6, [sp, #0]
  404dba:	4603      	mov	r3, r0
  404dbc:	4622      	mov	r2, r4
  404dbe:	4628      	mov	r0, r5
  404dc0:	a903      	add	r1, sp, #12
  404dc2:	47b8      	blx	r7
  404dc4:	e7eb      	b.n	404d9e <_wcrtomb_r+0x26>
  404dc6:	bf00      	nop
  404dc8:	20000870 	.word	0x20000870

00404dcc <__ascii_wctomb>:
  404dcc:	b121      	cbz	r1, 404dd8 <__ascii_wctomb+0xc>
  404dce:	2aff      	cmp	r2, #255	; 0xff
  404dd0:	d804      	bhi.n	404ddc <__ascii_wctomb+0x10>
  404dd2:	700a      	strb	r2, [r1, #0]
  404dd4:	2001      	movs	r0, #1
  404dd6:	4770      	bx	lr
  404dd8:	4608      	mov	r0, r1
  404dda:	4770      	bx	lr
  404ddc:	238a      	movs	r3, #138	; 0x8a
  404dde:	6003      	str	r3, [r0, #0]
  404de0:	f04f 30ff 	mov.w	r0, #4294967295
  404de4:	4770      	bx	lr
  404de6:	bf00      	nop

00404de8 <_write_r>:
  404de8:	b570      	push	{r4, r5, r6, lr}
  404dea:	4c08      	ldr	r4, [pc, #32]	; (404e0c <_write_r+0x24>)
  404dec:	4606      	mov	r6, r0
  404dee:	2500      	movs	r5, #0
  404df0:	4608      	mov	r0, r1
  404df2:	4611      	mov	r1, r2
  404df4:	461a      	mov	r2, r3
  404df6:	6025      	str	r5, [r4, #0]
  404df8:	f7fb f9e6 	bl	4001c8 <_write>
  404dfc:	1c43      	adds	r3, r0, #1
  404dfe:	d000      	beq.n	404e02 <_write_r+0x1a>
  404e00:	bd70      	pop	{r4, r5, r6, pc}
  404e02:	6823      	ldr	r3, [r4, #0]
  404e04:	2b00      	cmp	r3, #0
  404e06:	d0fb      	beq.n	404e00 <_write_r+0x18>
  404e08:	6033      	str	r3, [r6, #0]
  404e0a:	bd70      	pop	{r4, r5, r6, pc}
  404e0c:	2000095c 	.word	0x2000095c

00404e10 <__register_exitproc>:
  404e10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404e14:	4c25      	ldr	r4, [pc, #148]	; (404eac <__register_exitproc+0x9c>)
  404e16:	6825      	ldr	r5, [r4, #0]
  404e18:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  404e1c:	4606      	mov	r6, r0
  404e1e:	4688      	mov	r8, r1
  404e20:	4692      	mov	sl, r2
  404e22:	4699      	mov	r9, r3
  404e24:	b3cc      	cbz	r4, 404e9a <__register_exitproc+0x8a>
  404e26:	6860      	ldr	r0, [r4, #4]
  404e28:	281f      	cmp	r0, #31
  404e2a:	dc18      	bgt.n	404e5e <__register_exitproc+0x4e>
  404e2c:	1c43      	adds	r3, r0, #1
  404e2e:	b17e      	cbz	r6, 404e50 <__register_exitproc+0x40>
  404e30:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  404e34:	2101      	movs	r1, #1
  404e36:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  404e3a:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
  404e3e:	fa01 f200 	lsl.w	r2, r1, r0
  404e42:	4317      	orrs	r7, r2
  404e44:	2e02      	cmp	r6, #2
  404e46:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  404e4a:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  404e4e:	d01e      	beq.n	404e8e <__register_exitproc+0x7e>
  404e50:	3002      	adds	r0, #2
  404e52:	6063      	str	r3, [r4, #4]
  404e54:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  404e58:	2000      	movs	r0, #0
  404e5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404e5e:	4b14      	ldr	r3, [pc, #80]	; (404eb0 <__register_exitproc+0xa0>)
  404e60:	b303      	cbz	r3, 404ea4 <__register_exitproc+0x94>
  404e62:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404e66:	f7fe fc57 	bl	403718 <malloc>
  404e6a:	4604      	mov	r4, r0
  404e6c:	b1d0      	cbz	r0, 404ea4 <__register_exitproc+0x94>
  404e6e:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  404e72:	2700      	movs	r7, #0
  404e74:	e880 0088 	stmia.w	r0, {r3, r7}
  404e78:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  404e7c:	4638      	mov	r0, r7
  404e7e:	2301      	movs	r3, #1
  404e80:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  404e84:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  404e88:	2e00      	cmp	r6, #0
  404e8a:	d0e1      	beq.n	404e50 <__register_exitproc+0x40>
  404e8c:	e7d0      	b.n	404e30 <__register_exitproc+0x20>
  404e8e:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  404e92:	430a      	orrs	r2, r1
  404e94:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  404e98:	e7da      	b.n	404e50 <__register_exitproc+0x40>
  404e9a:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  404e9e:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  404ea2:	e7c0      	b.n	404e26 <__register_exitproc+0x16>
  404ea4:	f04f 30ff 	mov.w	r0, #4294967295
  404ea8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404eac:	004059f0 	.word	0x004059f0
  404eb0:	00403719 	.word	0x00403719

00404eb4 <_close_r>:
  404eb4:	b538      	push	{r3, r4, r5, lr}
  404eb6:	4c07      	ldr	r4, [pc, #28]	; (404ed4 <_close_r+0x20>)
  404eb8:	2300      	movs	r3, #0
  404eba:	4605      	mov	r5, r0
  404ebc:	4608      	mov	r0, r1
  404ebe:	6023      	str	r3, [r4, #0]
  404ec0:	f7fb fe02 	bl	400ac8 <_close>
  404ec4:	1c43      	adds	r3, r0, #1
  404ec6:	d000      	beq.n	404eca <_close_r+0x16>
  404ec8:	bd38      	pop	{r3, r4, r5, pc}
  404eca:	6823      	ldr	r3, [r4, #0]
  404ecc:	2b00      	cmp	r3, #0
  404ece:	d0fb      	beq.n	404ec8 <_close_r+0x14>
  404ed0:	602b      	str	r3, [r5, #0]
  404ed2:	bd38      	pop	{r3, r4, r5, pc}
  404ed4:	2000095c 	.word	0x2000095c

00404ed8 <_fclose_r>:
  404ed8:	2900      	cmp	r1, #0
  404eda:	d03d      	beq.n	404f58 <_fclose_r+0x80>
  404edc:	b570      	push	{r4, r5, r6, lr}
  404ede:	4605      	mov	r5, r0
  404ee0:	460c      	mov	r4, r1
  404ee2:	b108      	cbz	r0, 404ee8 <_fclose_r+0x10>
  404ee4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404ee6:	b37b      	cbz	r3, 404f48 <_fclose_r+0x70>
  404ee8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404eec:	b90b      	cbnz	r3, 404ef2 <_fclose_r+0x1a>
  404eee:	2000      	movs	r0, #0
  404ef0:	bd70      	pop	{r4, r5, r6, pc}
  404ef2:	4628      	mov	r0, r5
  404ef4:	4621      	mov	r1, r4
  404ef6:	f7fd fde1 	bl	402abc <__sflush_r>
  404efa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  404efc:	4606      	mov	r6, r0
  404efe:	b133      	cbz	r3, 404f0e <_fclose_r+0x36>
  404f00:	4628      	mov	r0, r5
  404f02:	69e1      	ldr	r1, [r4, #28]
  404f04:	4798      	blx	r3
  404f06:	2800      	cmp	r0, #0
  404f08:	bfb8      	it	lt
  404f0a:	f04f 36ff 	movlt.w	r6, #4294967295
  404f0e:	89a3      	ldrh	r3, [r4, #12]
  404f10:	061b      	lsls	r3, r3, #24
  404f12:	d41c      	bmi.n	404f4e <_fclose_r+0x76>
  404f14:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404f16:	b141      	cbz	r1, 404f2a <_fclose_r+0x52>
  404f18:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404f1c:	4299      	cmp	r1, r3
  404f1e:	d002      	beq.n	404f26 <_fclose_r+0x4e>
  404f20:	4628      	mov	r0, r5
  404f22:	f7fe f8bd 	bl	4030a0 <_free_r>
  404f26:	2300      	movs	r3, #0
  404f28:	6323      	str	r3, [r4, #48]	; 0x30
  404f2a:	6c61      	ldr	r1, [r4, #68]	; 0x44
  404f2c:	b121      	cbz	r1, 404f38 <_fclose_r+0x60>
  404f2e:	4628      	mov	r0, r5
  404f30:	f7fe f8b6 	bl	4030a0 <_free_r>
  404f34:	2300      	movs	r3, #0
  404f36:	6463      	str	r3, [r4, #68]	; 0x44
  404f38:	f7fd ff16 	bl	402d68 <__sfp_lock_acquire>
  404f3c:	2300      	movs	r3, #0
  404f3e:	81a3      	strh	r3, [r4, #12]
  404f40:	f7fd ff14 	bl	402d6c <__sfp_lock_release>
  404f44:	4630      	mov	r0, r6
  404f46:	bd70      	pop	{r4, r5, r6, pc}
  404f48:	f7fd ff08 	bl	402d5c <__sinit>
  404f4c:	e7cc      	b.n	404ee8 <_fclose_r+0x10>
  404f4e:	4628      	mov	r0, r5
  404f50:	6921      	ldr	r1, [r4, #16]
  404f52:	f7fe f8a5 	bl	4030a0 <_free_r>
  404f56:	e7dd      	b.n	404f14 <_fclose_r+0x3c>
  404f58:	2000      	movs	r0, #0
  404f5a:	4770      	bx	lr

00404f5c <_fstat_r>:
  404f5c:	b538      	push	{r3, r4, r5, lr}
  404f5e:	4c08      	ldr	r4, [pc, #32]	; (404f80 <_fstat_r+0x24>)
  404f60:	2300      	movs	r3, #0
  404f62:	4605      	mov	r5, r0
  404f64:	4608      	mov	r0, r1
  404f66:	4611      	mov	r1, r2
  404f68:	6023      	str	r3, [r4, #0]
  404f6a:	f7fb fdb1 	bl	400ad0 <_fstat>
  404f6e:	1c43      	adds	r3, r0, #1
  404f70:	d000      	beq.n	404f74 <_fstat_r+0x18>
  404f72:	bd38      	pop	{r3, r4, r5, pc}
  404f74:	6823      	ldr	r3, [r4, #0]
  404f76:	2b00      	cmp	r3, #0
  404f78:	d0fb      	beq.n	404f72 <_fstat_r+0x16>
  404f7a:	602b      	str	r3, [r5, #0]
  404f7c:	bd38      	pop	{r3, r4, r5, pc}
  404f7e:	bf00      	nop
  404f80:	2000095c 	.word	0x2000095c

00404f84 <_isatty_r>:
  404f84:	b538      	push	{r3, r4, r5, lr}
  404f86:	4c07      	ldr	r4, [pc, #28]	; (404fa4 <_isatty_r+0x20>)
  404f88:	2300      	movs	r3, #0
  404f8a:	4605      	mov	r5, r0
  404f8c:	4608      	mov	r0, r1
  404f8e:	6023      	str	r3, [r4, #0]
  404f90:	f7fb fda4 	bl	400adc <_isatty>
  404f94:	1c43      	adds	r3, r0, #1
  404f96:	d000      	beq.n	404f9a <_isatty_r+0x16>
  404f98:	bd38      	pop	{r3, r4, r5, pc}
  404f9a:	6823      	ldr	r3, [r4, #0]
  404f9c:	2b00      	cmp	r3, #0
  404f9e:	d0fb      	beq.n	404f98 <_isatty_r+0x14>
  404fa0:	602b      	str	r3, [r5, #0]
  404fa2:	bd38      	pop	{r3, r4, r5, pc}
  404fa4:	2000095c 	.word	0x2000095c

00404fa8 <_lseek_r>:
  404fa8:	b570      	push	{r4, r5, r6, lr}
  404faa:	4c08      	ldr	r4, [pc, #32]	; (404fcc <_lseek_r+0x24>)
  404fac:	4606      	mov	r6, r0
  404fae:	2500      	movs	r5, #0
  404fb0:	4608      	mov	r0, r1
  404fb2:	4611      	mov	r1, r2
  404fb4:	461a      	mov	r2, r3
  404fb6:	6025      	str	r5, [r4, #0]
  404fb8:	f7fb fd92 	bl	400ae0 <_lseek>
  404fbc:	1c43      	adds	r3, r0, #1
  404fbe:	d000      	beq.n	404fc2 <_lseek_r+0x1a>
  404fc0:	bd70      	pop	{r4, r5, r6, pc}
  404fc2:	6823      	ldr	r3, [r4, #0]
  404fc4:	2b00      	cmp	r3, #0
  404fc6:	d0fb      	beq.n	404fc0 <_lseek_r+0x18>
  404fc8:	6033      	str	r3, [r6, #0]
  404fca:	bd70      	pop	{r4, r5, r6, pc}
  404fcc:	2000095c 	.word	0x2000095c

00404fd0 <_read_r>:
  404fd0:	b570      	push	{r4, r5, r6, lr}
  404fd2:	4c08      	ldr	r4, [pc, #32]	; (404ff4 <_read_r+0x24>)
  404fd4:	4606      	mov	r6, r0
  404fd6:	2500      	movs	r5, #0
  404fd8:	4608      	mov	r0, r1
  404fda:	4611      	mov	r1, r2
  404fdc:	461a      	mov	r2, r3
  404fde:	6025      	str	r5, [r4, #0]
  404fe0:	f7fb f8d4 	bl	40018c <_read>
  404fe4:	1c43      	adds	r3, r0, #1
  404fe6:	d000      	beq.n	404fea <_read_r+0x1a>
  404fe8:	bd70      	pop	{r4, r5, r6, pc}
  404fea:	6823      	ldr	r3, [r4, #0]
  404fec:	2b00      	cmp	r3, #0
  404fee:	d0fb      	beq.n	404fe8 <_read_r+0x18>
  404ff0:	6033      	str	r3, [r6, #0]
  404ff2:	bd70      	pop	{r4, r5, r6, pc}
  404ff4:	2000095c 	.word	0x2000095c

00404ff8 <__aeabi_uldivmod>:
  404ff8:	b953      	cbnz	r3, 405010 <__aeabi_uldivmod+0x18>
  404ffa:	b94a      	cbnz	r2, 405010 <__aeabi_uldivmod+0x18>
  404ffc:	2900      	cmp	r1, #0
  404ffe:	bf08      	it	eq
  405000:	2800      	cmpeq	r0, #0
  405002:	bf1c      	itt	ne
  405004:	f04f 31ff 	movne.w	r1, #4294967295
  405008:	f04f 30ff 	movne.w	r0, #4294967295
  40500c:	f000 b83c 	b.w	405088 <__aeabi_idiv0>
  405010:	b082      	sub	sp, #8
  405012:	46ec      	mov	ip, sp
  405014:	e92d 5000 	stmdb	sp!, {ip, lr}
  405018:	f000 f81e 	bl	405058 <__gnu_uldivmod_helper>
  40501c:	f8dd e004 	ldr.w	lr, [sp, #4]
  405020:	b002      	add	sp, #8
  405022:	bc0c      	pop	{r2, r3}
  405024:	4770      	bx	lr
  405026:	bf00      	nop

00405028 <__gnu_ldivmod_helper>:
  405028:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40502c:	9c06      	ldr	r4, [sp, #24]
  40502e:	4615      	mov	r5, r2
  405030:	4606      	mov	r6, r0
  405032:	460f      	mov	r7, r1
  405034:	4698      	mov	r8, r3
  405036:	f000 f829 	bl	40508c <__divdi3>
  40503a:	fb05 f301 	mul.w	r3, r5, r1
  40503e:	fb00 3808 	mla	r8, r0, r8, r3
  405042:	fba5 2300 	umull	r2, r3, r5, r0
  405046:	1ab2      	subs	r2, r6, r2
  405048:	4443      	add	r3, r8
  40504a:	eb67 0303 	sbc.w	r3, r7, r3
  40504e:	e9c4 2300 	strd	r2, r3, [r4]
  405052:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405056:	bf00      	nop

00405058 <__gnu_uldivmod_helper>:
  405058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40505c:	9c06      	ldr	r4, [sp, #24]
  40505e:	4690      	mov	r8, r2
  405060:	4606      	mov	r6, r0
  405062:	460f      	mov	r7, r1
  405064:	461d      	mov	r5, r3
  405066:	f000 f95f 	bl	405328 <__udivdi3>
  40506a:	fb00 f505 	mul.w	r5, r0, r5
  40506e:	fba0 2308 	umull	r2, r3, r0, r8
  405072:	fb08 5501 	mla	r5, r8, r1, r5
  405076:	1ab2      	subs	r2, r6, r2
  405078:	442b      	add	r3, r5
  40507a:	eb67 0303 	sbc.w	r3, r7, r3
  40507e:	e9c4 2300 	strd	r2, r3, [r4]
  405082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405086:	bf00      	nop

00405088 <__aeabi_idiv0>:
  405088:	4770      	bx	lr
  40508a:	bf00      	nop

0040508c <__divdi3>:
  40508c:	2900      	cmp	r1, #0
  40508e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  405092:	f2c0 80a6 	blt.w	4051e2 <__divdi3+0x156>
  405096:	2600      	movs	r6, #0
  405098:	2b00      	cmp	r3, #0
  40509a:	f2c0 809c 	blt.w	4051d6 <__divdi3+0x14a>
  40509e:	4688      	mov	r8, r1
  4050a0:	4694      	mov	ip, r2
  4050a2:	469e      	mov	lr, r3
  4050a4:	4615      	mov	r5, r2
  4050a6:	4604      	mov	r4, r0
  4050a8:	460f      	mov	r7, r1
  4050aa:	2b00      	cmp	r3, #0
  4050ac:	d13d      	bne.n	40512a <__divdi3+0x9e>
  4050ae:	428a      	cmp	r2, r1
  4050b0:	d959      	bls.n	405166 <__divdi3+0xda>
  4050b2:	fab2 f382 	clz	r3, r2
  4050b6:	b13b      	cbz	r3, 4050c8 <__divdi3+0x3c>
  4050b8:	f1c3 0220 	rsb	r2, r3, #32
  4050bc:	409f      	lsls	r7, r3
  4050be:	fa20 f202 	lsr.w	r2, r0, r2
  4050c2:	409d      	lsls	r5, r3
  4050c4:	4317      	orrs	r7, r2
  4050c6:	409c      	lsls	r4, r3
  4050c8:	0c29      	lsrs	r1, r5, #16
  4050ca:	0c22      	lsrs	r2, r4, #16
  4050cc:	fbb7 fef1 	udiv	lr, r7, r1
  4050d0:	b2a8      	uxth	r0, r5
  4050d2:	fb01 771e 	mls	r7, r1, lr, r7
  4050d6:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
  4050da:	fb00 f30e 	mul.w	r3, r0, lr
  4050de:	42bb      	cmp	r3, r7
  4050e0:	d90a      	bls.n	4050f8 <__divdi3+0x6c>
  4050e2:	197f      	adds	r7, r7, r5
  4050e4:	f10e 32ff 	add.w	r2, lr, #4294967295
  4050e8:	f080 8105 	bcs.w	4052f6 <__divdi3+0x26a>
  4050ec:	42bb      	cmp	r3, r7
  4050ee:	f240 8102 	bls.w	4052f6 <__divdi3+0x26a>
  4050f2:	f1ae 0e02 	sub.w	lr, lr, #2
  4050f6:	442f      	add	r7, r5
  4050f8:	1aff      	subs	r7, r7, r3
  4050fa:	b2a4      	uxth	r4, r4
  4050fc:	fbb7 f3f1 	udiv	r3, r7, r1
  405100:	fb01 7713 	mls	r7, r1, r3, r7
  405104:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  405108:	fb00 f003 	mul.w	r0, r0, r3
  40510c:	42b8      	cmp	r0, r7
  40510e:	d908      	bls.n	405122 <__divdi3+0x96>
  405110:	197f      	adds	r7, r7, r5
  405112:	f103 32ff 	add.w	r2, r3, #4294967295
  405116:	f080 80f0 	bcs.w	4052fa <__divdi3+0x26e>
  40511a:	42b8      	cmp	r0, r7
  40511c:	f240 80ed 	bls.w	4052fa <__divdi3+0x26e>
  405120:	3b02      	subs	r3, #2
  405122:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
  405126:	2200      	movs	r2, #0
  405128:	e003      	b.n	405132 <__divdi3+0xa6>
  40512a:	428b      	cmp	r3, r1
  40512c:	d90f      	bls.n	40514e <__divdi3+0xc2>
  40512e:	2200      	movs	r2, #0
  405130:	4613      	mov	r3, r2
  405132:	1c34      	adds	r4, r6, #0
  405134:	bf18      	it	ne
  405136:	2401      	movne	r4, #1
  405138:	4260      	negs	r0, r4
  40513a:	f04f 0500 	mov.w	r5, #0
  40513e:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
  405142:	4058      	eors	r0, r3
  405144:	4051      	eors	r1, r2
  405146:	1900      	adds	r0, r0, r4
  405148:	4169      	adcs	r1, r5
  40514a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40514e:	fab3 f283 	clz	r2, r3
  405152:	2a00      	cmp	r2, #0
  405154:	f040 8086 	bne.w	405264 <__divdi3+0x1d8>
  405158:	428b      	cmp	r3, r1
  40515a:	d302      	bcc.n	405162 <__divdi3+0xd6>
  40515c:	4584      	cmp	ip, r0
  40515e:	f200 80db 	bhi.w	405318 <__divdi3+0x28c>
  405162:	2301      	movs	r3, #1
  405164:	e7e5      	b.n	405132 <__divdi3+0xa6>
  405166:	b912      	cbnz	r2, 40516e <__divdi3+0xe2>
  405168:	2301      	movs	r3, #1
  40516a:	fbb3 f5f2 	udiv	r5, r3, r2
  40516e:	fab5 f085 	clz	r0, r5
  405172:	2800      	cmp	r0, #0
  405174:	d13b      	bne.n	4051ee <__divdi3+0x162>
  405176:	1b78      	subs	r0, r7, r5
  405178:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  40517c:	fa1f fc85 	uxth.w	ip, r5
  405180:	2201      	movs	r2, #1
  405182:	fbb0 f8fe 	udiv	r8, r0, lr
  405186:	0c21      	lsrs	r1, r4, #16
  405188:	fb0e 0718 	mls	r7, lr, r8, r0
  40518c:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
  405190:	fb0c f308 	mul.w	r3, ip, r8
  405194:	42bb      	cmp	r3, r7
  405196:	d907      	bls.n	4051a8 <__divdi3+0x11c>
  405198:	197f      	adds	r7, r7, r5
  40519a:	f108 31ff 	add.w	r1, r8, #4294967295
  40519e:	d202      	bcs.n	4051a6 <__divdi3+0x11a>
  4051a0:	42bb      	cmp	r3, r7
  4051a2:	f200 80bd 	bhi.w	405320 <__divdi3+0x294>
  4051a6:	4688      	mov	r8, r1
  4051a8:	1aff      	subs	r7, r7, r3
  4051aa:	b2a4      	uxth	r4, r4
  4051ac:	fbb7 f3fe 	udiv	r3, r7, lr
  4051b0:	fb0e 7713 	mls	r7, lr, r3, r7
  4051b4:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  4051b8:	fb0c fc03 	mul.w	ip, ip, r3
  4051bc:	45bc      	cmp	ip, r7
  4051be:	d907      	bls.n	4051d0 <__divdi3+0x144>
  4051c0:	197f      	adds	r7, r7, r5
  4051c2:	f103 31ff 	add.w	r1, r3, #4294967295
  4051c6:	d202      	bcs.n	4051ce <__divdi3+0x142>
  4051c8:	45bc      	cmp	ip, r7
  4051ca:	f200 80a7 	bhi.w	40531c <__divdi3+0x290>
  4051ce:	460b      	mov	r3, r1
  4051d0:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4051d4:	e7ad      	b.n	405132 <__divdi3+0xa6>
  4051d6:	4252      	negs	r2, r2
  4051d8:	ea6f 0606 	mvn.w	r6, r6
  4051dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4051e0:	e75d      	b.n	40509e <__divdi3+0x12>
  4051e2:	4240      	negs	r0, r0
  4051e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4051e8:	f04f 36ff 	mov.w	r6, #4294967295
  4051ec:	e754      	b.n	405098 <__divdi3+0xc>
  4051ee:	f1c0 0220 	rsb	r2, r0, #32
  4051f2:	fa24 f102 	lsr.w	r1, r4, r2
  4051f6:	fa07 f300 	lsl.w	r3, r7, r0
  4051fa:	4085      	lsls	r5, r0
  4051fc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  405200:	40d7      	lsrs	r7, r2
  405202:	4319      	orrs	r1, r3
  405204:	fbb7 f2fe 	udiv	r2, r7, lr
  405208:	0c0b      	lsrs	r3, r1, #16
  40520a:	fb0e 7712 	mls	r7, lr, r2, r7
  40520e:	fa1f fc85 	uxth.w	ip, r5
  405212:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
  405216:	fb0c f702 	mul.w	r7, ip, r2
  40521a:	429f      	cmp	r7, r3
  40521c:	fa04 f400 	lsl.w	r4, r4, r0
  405220:	d907      	bls.n	405232 <__divdi3+0x1a6>
  405222:	195b      	adds	r3, r3, r5
  405224:	f102 30ff 	add.w	r0, r2, #4294967295
  405228:	d274      	bcs.n	405314 <__divdi3+0x288>
  40522a:	429f      	cmp	r7, r3
  40522c:	d972      	bls.n	405314 <__divdi3+0x288>
  40522e:	3a02      	subs	r2, #2
  405230:	442b      	add	r3, r5
  405232:	1bdf      	subs	r7, r3, r7
  405234:	b289      	uxth	r1, r1
  405236:	fbb7 f8fe 	udiv	r8, r7, lr
  40523a:	fb0e 7318 	mls	r3, lr, r8, r7
  40523e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
  405242:	fb0c f708 	mul.w	r7, ip, r8
  405246:	429f      	cmp	r7, r3
  405248:	d908      	bls.n	40525c <__divdi3+0x1d0>
  40524a:	195b      	adds	r3, r3, r5
  40524c:	f108 31ff 	add.w	r1, r8, #4294967295
  405250:	d25c      	bcs.n	40530c <__divdi3+0x280>
  405252:	429f      	cmp	r7, r3
  405254:	d95a      	bls.n	40530c <__divdi3+0x280>
  405256:	f1a8 0802 	sub.w	r8, r8, #2
  40525a:	442b      	add	r3, r5
  40525c:	1bd8      	subs	r0, r3, r7
  40525e:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
  405262:	e78e      	b.n	405182 <__divdi3+0xf6>
  405264:	f1c2 0320 	rsb	r3, r2, #32
  405268:	fa2c f103 	lsr.w	r1, ip, r3
  40526c:	fa0e fe02 	lsl.w	lr, lr, r2
  405270:	fa20 f703 	lsr.w	r7, r0, r3
  405274:	ea41 0e0e 	orr.w	lr, r1, lr
  405278:	fa08 f002 	lsl.w	r0, r8, r2
  40527c:	fa28 f103 	lsr.w	r1, r8, r3
  405280:	ea4f 451e 	mov.w	r5, lr, lsr #16
  405284:	4338      	orrs	r0, r7
  405286:	fbb1 f8f5 	udiv	r8, r1, r5
  40528a:	0c03      	lsrs	r3, r0, #16
  40528c:	fb05 1118 	mls	r1, r5, r8, r1
  405290:	fa1f f78e 	uxth.w	r7, lr
  405294:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  405298:	fb07 f308 	mul.w	r3, r7, r8
  40529c:	428b      	cmp	r3, r1
  40529e:	fa0c fc02 	lsl.w	ip, ip, r2
  4052a2:	d909      	bls.n	4052b8 <__divdi3+0x22c>
  4052a4:	eb11 010e 	adds.w	r1, r1, lr
  4052a8:	f108 39ff 	add.w	r9, r8, #4294967295
  4052ac:	d230      	bcs.n	405310 <__divdi3+0x284>
  4052ae:	428b      	cmp	r3, r1
  4052b0:	d92e      	bls.n	405310 <__divdi3+0x284>
  4052b2:	f1a8 0802 	sub.w	r8, r8, #2
  4052b6:	4471      	add	r1, lr
  4052b8:	1ac9      	subs	r1, r1, r3
  4052ba:	b280      	uxth	r0, r0
  4052bc:	fbb1 f3f5 	udiv	r3, r1, r5
  4052c0:	fb05 1113 	mls	r1, r5, r3, r1
  4052c4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4052c8:	fb07 f703 	mul.w	r7, r7, r3
  4052cc:	428f      	cmp	r7, r1
  4052ce:	d908      	bls.n	4052e2 <__divdi3+0x256>
  4052d0:	eb11 010e 	adds.w	r1, r1, lr
  4052d4:	f103 30ff 	add.w	r0, r3, #4294967295
  4052d8:	d216      	bcs.n	405308 <__divdi3+0x27c>
  4052da:	428f      	cmp	r7, r1
  4052dc:	d914      	bls.n	405308 <__divdi3+0x27c>
  4052de:	3b02      	subs	r3, #2
  4052e0:	4471      	add	r1, lr
  4052e2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4052e6:	1bc9      	subs	r1, r1, r7
  4052e8:	fba3 890c 	umull	r8, r9, r3, ip
  4052ec:	4549      	cmp	r1, r9
  4052ee:	d309      	bcc.n	405304 <__divdi3+0x278>
  4052f0:	d005      	beq.n	4052fe <__divdi3+0x272>
  4052f2:	2200      	movs	r2, #0
  4052f4:	e71d      	b.n	405132 <__divdi3+0xa6>
  4052f6:	4696      	mov	lr, r2
  4052f8:	e6fe      	b.n	4050f8 <__divdi3+0x6c>
  4052fa:	4613      	mov	r3, r2
  4052fc:	e711      	b.n	405122 <__divdi3+0x96>
  4052fe:	4094      	lsls	r4, r2
  405300:	4544      	cmp	r4, r8
  405302:	d2f6      	bcs.n	4052f2 <__divdi3+0x266>
  405304:	3b01      	subs	r3, #1
  405306:	e7f4      	b.n	4052f2 <__divdi3+0x266>
  405308:	4603      	mov	r3, r0
  40530a:	e7ea      	b.n	4052e2 <__divdi3+0x256>
  40530c:	4688      	mov	r8, r1
  40530e:	e7a5      	b.n	40525c <__divdi3+0x1d0>
  405310:	46c8      	mov	r8, r9
  405312:	e7d1      	b.n	4052b8 <__divdi3+0x22c>
  405314:	4602      	mov	r2, r0
  405316:	e78c      	b.n	405232 <__divdi3+0x1a6>
  405318:	4613      	mov	r3, r2
  40531a:	e70a      	b.n	405132 <__divdi3+0xa6>
  40531c:	3b02      	subs	r3, #2
  40531e:	e757      	b.n	4051d0 <__divdi3+0x144>
  405320:	f1a8 0802 	sub.w	r8, r8, #2
  405324:	442f      	add	r7, r5
  405326:	e73f      	b.n	4051a8 <__divdi3+0x11c>

00405328 <__udivdi3>:
  405328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40532c:	2b00      	cmp	r3, #0
  40532e:	d144      	bne.n	4053ba <__udivdi3+0x92>
  405330:	428a      	cmp	r2, r1
  405332:	4615      	mov	r5, r2
  405334:	4604      	mov	r4, r0
  405336:	d94f      	bls.n	4053d8 <__udivdi3+0xb0>
  405338:	fab2 f782 	clz	r7, r2
  40533c:	460e      	mov	r6, r1
  40533e:	b14f      	cbz	r7, 405354 <__udivdi3+0x2c>
  405340:	f1c7 0320 	rsb	r3, r7, #32
  405344:	40b9      	lsls	r1, r7
  405346:	fa20 f603 	lsr.w	r6, r0, r3
  40534a:	fa02 f507 	lsl.w	r5, r2, r7
  40534e:	430e      	orrs	r6, r1
  405350:	fa00 f407 	lsl.w	r4, r0, r7
  405354:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  405358:	0c23      	lsrs	r3, r4, #16
  40535a:	fbb6 f0fe 	udiv	r0, r6, lr
  40535e:	b2af      	uxth	r7, r5
  405360:	fb0e 6110 	mls	r1, lr, r0, r6
  405364:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405368:	fb07 f100 	mul.w	r1, r7, r0
  40536c:	4299      	cmp	r1, r3
  40536e:	d909      	bls.n	405384 <__udivdi3+0x5c>
  405370:	195b      	adds	r3, r3, r5
  405372:	f100 32ff 	add.w	r2, r0, #4294967295
  405376:	f080 80ec 	bcs.w	405552 <__udivdi3+0x22a>
  40537a:	4299      	cmp	r1, r3
  40537c:	f240 80e9 	bls.w	405552 <__udivdi3+0x22a>
  405380:	3802      	subs	r0, #2
  405382:	442b      	add	r3, r5
  405384:	1a5a      	subs	r2, r3, r1
  405386:	b2a4      	uxth	r4, r4
  405388:	fbb2 f3fe 	udiv	r3, r2, lr
  40538c:	fb0e 2213 	mls	r2, lr, r3, r2
  405390:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  405394:	fb07 f703 	mul.w	r7, r7, r3
  405398:	4297      	cmp	r7, r2
  40539a:	d908      	bls.n	4053ae <__udivdi3+0x86>
  40539c:	1952      	adds	r2, r2, r5
  40539e:	f103 31ff 	add.w	r1, r3, #4294967295
  4053a2:	f080 80d8 	bcs.w	405556 <__udivdi3+0x22e>
  4053a6:	4297      	cmp	r7, r2
  4053a8:	f240 80d5 	bls.w	405556 <__udivdi3+0x22e>
  4053ac:	3b02      	subs	r3, #2
  4053ae:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  4053b2:	2600      	movs	r6, #0
  4053b4:	4631      	mov	r1, r6
  4053b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4053ba:	428b      	cmp	r3, r1
  4053bc:	d847      	bhi.n	40544e <__udivdi3+0x126>
  4053be:	fab3 f683 	clz	r6, r3
  4053c2:	2e00      	cmp	r6, #0
  4053c4:	d148      	bne.n	405458 <__udivdi3+0x130>
  4053c6:	428b      	cmp	r3, r1
  4053c8:	d302      	bcc.n	4053d0 <__udivdi3+0xa8>
  4053ca:	4282      	cmp	r2, r0
  4053cc:	f200 80cd 	bhi.w	40556a <__udivdi3+0x242>
  4053d0:	2001      	movs	r0, #1
  4053d2:	4631      	mov	r1, r6
  4053d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4053d8:	b912      	cbnz	r2, 4053e0 <__udivdi3+0xb8>
  4053da:	2501      	movs	r5, #1
  4053dc:	fbb5 f5f2 	udiv	r5, r5, r2
  4053e0:	fab5 f885 	clz	r8, r5
  4053e4:	f1b8 0f00 	cmp.w	r8, #0
  4053e8:	d177      	bne.n	4054da <__udivdi3+0x1b2>
  4053ea:	1b4a      	subs	r2, r1, r5
  4053ec:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  4053f0:	b2af      	uxth	r7, r5
  4053f2:	2601      	movs	r6, #1
  4053f4:	fbb2 f0fe 	udiv	r0, r2, lr
  4053f8:	0c23      	lsrs	r3, r4, #16
  4053fa:	fb0e 2110 	mls	r1, lr, r0, r2
  4053fe:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  405402:	fb07 f300 	mul.w	r3, r7, r0
  405406:	428b      	cmp	r3, r1
  405408:	d907      	bls.n	40541a <__udivdi3+0xf2>
  40540a:	1949      	adds	r1, r1, r5
  40540c:	f100 32ff 	add.w	r2, r0, #4294967295
  405410:	d202      	bcs.n	405418 <__udivdi3+0xf0>
  405412:	428b      	cmp	r3, r1
  405414:	f200 80ba 	bhi.w	40558c <__udivdi3+0x264>
  405418:	4610      	mov	r0, r2
  40541a:	1ac9      	subs	r1, r1, r3
  40541c:	b2a4      	uxth	r4, r4
  40541e:	fbb1 f3fe 	udiv	r3, r1, lr
  405422:	fb0e 1113 	mls	r1, lr, r3, r1
  405426:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
  40542a:	fb07 f703 	mul.w	r7, r7, r3
  40542e:	42a7      	cmp	r7, r4
  405430:	d908      	bls.n	405444 <__udivdi3+0x11c>
  405432:	1964      	adds	r4, r4, r5
  405434:	f103 32ff 	add.w	r2, r3, #4294967295
  405438:	f080 808f 	bcs.w	40555a <__udivdi3+0x232>
  40543c:	42a7      	cmp	r7, r4
  40543e:	f240 808c 	bls.w	40555a <__udivdi3+0x232>
  405442:	3b02      	subs	r3, #2
  405444:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  405448:	4631      	mov	r1, r6
  40544a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40544e:	2600      	movs	r6, #0
  405450:	4630      	mov	r0, r6
  405452:	4631      	mov	r1, r6
  405454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405458:	f1c6 0420 	rsb	r4, r6, #32
  40545c:	fa22 f504 	lsr.w	r5, r2, r4
  405460:	40b3      	lsls	r3, r6
  405462:	432b      	orrs	r3, r5
  405464:	fa20 fc04 	lsr.w	ip, r0, r4
  405468:	fa01 f706 	lsl.w	r7, r1, r6
  40546c:	fa21 f504 	lsr.w	r5, r1, r4
  405470:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  405474:	ea4c 0707 	orr.w	r7, ip, r7
  405478:	fbb5 f8fe 	udiv	r8, r5, lr
  40547c:	0c39      	lsrs	r1, r7, #16
  40547e:	fb0e 5518 	mls	r5, lr, r8, r5
  405482:	fa1f fc83 	uxth.w	ip, r3
  405486:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
  40548a:	fb0c f108 	mul.w	r1, ip, r8
  40548e:	42a9      	cmp	r1, r5
  405490:	fa02 f206 	lsl.w	r2, r2, r6
  405494:	d904      	bls.n	4054a0 <__udivdi3+0x178>
  405496:	18ed      	adds	r5, r5, r3
  405498:	f108 34ff 	add.w	r4, r8, #4294967295
  40549c:	d367      	bcc.n	40556e <__udivdi3+0x246>
  40549e:	46a0      	mov	r8, r4
  4054a0:	1a6d      	subs	r5, r5, r1
  4054a2:	b2bf      	uxth	r7, r7
  4054a4:	fbb5 f4fe 	udiv	r4, r5, lr
  4054a8:	fb0e 5514 	mls	r5, lr, r4, r5
  4054ac:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
  4054b0:	fb0c fc04 	mul.w	ip, ip, r4
  4054b4:	458c      	cmp	ip, r1
  4054b6:	d904      	bls.n	4054c2 <__udivdi3+0x19a>
  4054b8:	18c9      	adds	r1, r1, r3
  4054ba:	f104 35ff 	add.w	r5, r4, #4294967295
  4054be:	d35c      	bcc.n	40557a <__udivdi3+0x252>
  4054c0:	462c      	mov	r4, r5
  4054c2:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
  4054c6:	ebcc 0101 	rsb	r1, ip, r1
  4054ca:	fba4 2302 	umull	r2, r3, r4, r2
  4054ce:	4299      	cmp	r1, r3
  4054d0:	d348      	bcc.n	405564 <__udivdi3+0x23c>
  4054d2:	d044      	beq.n	40555e <__udivdi3+0x236>
  4054d4:	4620      	mov	r0, r4
  4054d6:	2600      	movs	r6, #0
  4054d8:	e76c      	b.n	4053b4 <__udivdi3+0x8c>
  4054da:	f1c8 0420 	rsb	r4, r8, #32
  4054de:	fa01 f308 	lsl.w	r3, r1, r8
  4054e2:	fa05 f508 	lsl.w	r5, r5, r8
  4054e6:	fa20 f704 	lsr.w	r7, r0, r4
  4054ea:	40e1      	lsrs	r1, r4
  4054ec:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  4054f0:	431f      	orrs	r7, r3
  4054f2:	fbb1 f6fe 	udiv	r6, r1, lr
  4054f6:	0c3a      	lsrs	r2, r7, #16
  4054f8:	fb0e 1116 	mls	r1, lr, r6, r1
  4054fc:	fa1f fc85 	uxth.w	ip, r5
  405500:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
  405504:	fb0c f206 	mul.w	r2, ip, r6
  405508:	429a      	cmp	r2, r3
  40550a:	fa00 f408 	lsl.w	r4, r0, r8
  40550e:	d907      	bls.n	405520 <__udivdi3+0x1f8>
  405510:	195b      	adds	r3, r3, r5
  405512:	f106 31ff 	add.w	r1, r6, #4294967295
  405516:	d237      	bcs.n	405588 <__udivdi3+0x260>
  405518:	429a      	cmp	r2, r3
  40551a:	d935      	bls.n	405588 <__udivdi3+0x260>
  40551c:	3e02      	subs	r6, #2
  40551e:	442b      	add	r3, r5
  405520:	1a9b      	subs	r3, r3, r2
  405522:	b2bf      	uxth	r7, r7
  405524:	fbb3 f0fe 	udiv	r0, r3, lr
  405528:	fb0e 3310 	mls	r3, lr, r0, r3
  40552c:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
  405530:	fb0c f100 	mul.w	r1, ip, r0
  405534:	4299      	cmp	r1, r3
  405536:	d907      	bls.n	405548 <__udivdi3+0x220>
  405538:	195b      	adds	r3, r3, r5
  40553a:	f100 32ff 	add.w	r2, r0, #4294967295
  40553e:	d221      	bcs.n	405584 <__udivdi3+0x25c>
  405540:	4299      	cmp	r1, r3
  405542:	d91f      	bls.n	405584 <__udivdi3+0x25c>
  405544:	3802      	subs	r0, #2
  405546:	442b      	add	r3, r5
  405548:	1a5a      	subs	r2, r3, r1
  40554a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
  40554e:	4667      	mov	r7, ip
  405550:	e750      	b.n	4053f4 <__udivdi3+0xcc>
  405552:	4610      	mov	r0, r2
  405554:	e716      	b.n	405384 <__udivdi3+0x5c>
  405556:	460b      	mov	r3, r1
  405558:	e729      	b.n	4053ae <__udivdi3+0x86>
  40555a:	4613      	mov	r3, r2
  40555c:	e772      	b.n	405444 <__udivdi3+0x11c>
  40555e:	40b0      	lsls	r0, r6
  405560:	4290      	cmp	r0, r2
  405562:	d2b7      	bcs.n	4054d4 <__udivdi3+0x1ac>
  405564:	1e60      	subs	r0, r4, #1
  405566:	2600      	movs	r6, #0
  405568:	e724      	b.n	4053b4 <__udivdi3+0x8c>
  40556a:	4630      	mov	r0, r6
  40556c:	e722      	b.n	4053b4 <__udivdi3+0x8c>
  40556e:	42a9      	cmp	r1, r5
  405570:	d995      	bls.n	40549e <__udivdi3+0x176>
  405572:	f1a8 0802 	sub.w	r8, r8, #2
  405576:	441d      	add	r5, r3
  405578:	e792      	b.n	4054a0 <__udivdi3+0x178>
  40557a:	458c      	cmp	ip, r1
  40557c:	d9a0      	bls.n	4054c0 <__udivdi3+0x198>
  40557e:	3c02      	subs	r4, #2
  405580:	4419      	add	r1, r3
  405582:	e79e      	b.n	4054c2 <__udivdi3+0x19a>
  405584:	4610      	mov	r0, r2
  405586:	e7df      	b.n	405548 <__udivdi3+0x220>
  405588:	460e      	mov	r6, r1
  40558a:	e7c9      	b.n	405520 <__udivdi3+0x1f8>
  40558c:	3802      	subs	r0, #2
  40558e:	4429      	add	r1, r5
  405590:	e743      	b.n	40541a <__udivdi3+0xf2>
  405592:	bf00      	nop

00405594 <gc_waveconfig>:
  405594:	0003 0000 00b2 001e 0002 0000 0177 0032     ............w.2.
  4055a4:	0002 0000 0320 004b 0001 0000 03e8 0050     .... .K.......P.
  4055b4:	0000 0000 3e80 0032 0d0a 654d 756e 3a20     .....>2...Menu :
  4055c4:	0d0a 2d2d 2d2d 2d2d 0d0a 2020 754f 7074     ..------..  Outp
  4055d4:	7475 7720 7661 6665 726f 206d 7270 706f     ut waveform prop
  4055e4:	7265 7974 0d3a 0000 2020 6425 203a 6553     erty:...  %d: Se
  4055f4:	2074 7246 7165 6575 636e 2079 203d 3425     t Frequency = %4
  405604:	2075 7a48 202c 7544 7974 4320 6379 656c     u Hz, Duty Cycle
  405614:	3d20 2520 7532 2525 0d0a 0000 2020 2d2d      = %2u%%....  --
  405624:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
  405634:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
  405644:	2d2d 2d2d 2d2d 2d2d 0a2d 200d 6320 203a     ---------..  c: 
  405654:	6143 7470 7275 2065 6177 6576 6f66 6d72     Capture waveform
  405664:	6620 6f72 206d 4354 6425 6320 6168 6e6e      from TC%d chann
  405674:	6c65 2520 0a64 200d 7320 203a 7453 706f     el %d..  s: Stop
  405684:	6320 7061 7574 6572 6120 646e 6420 7369      capture and dis
  405694:	6c70 7961 6320 7061 7574 6572 2064 6e69     play captured in
  4056a4:	6f66 6d72 7461 6f69 206e 0d0a 2020 3a68     formation ..  h:
  4056b4:	4420 7369 6c70 7961 6d20 6e65 2075 0d0a      Display menu ..
  4056c4:	2d2d 2d2d 2d2d 0d0a 000d 0000 0a0d 7453     ------........St
  4056d4:	7261 2074 6177 6576 6f66 6d72 203a 7246     art waveform: Fr
  4056e4:	7165 6575 636e 2079 203d 6425 4820 2c7a     equency = %d Hz,
  4056f4:	7544 7974 4320 6379 656c 3d20 2520 6432     Duty Cycle = %2d
  405704:	2525 0d0a 0000 0000 7973 6373 6b6c 675f     %%......sysclk_g
  405714:	7465 705f 7265 7069 6568 6172 5f6c 7562     et_peripheral_bu
  405724:	5f73 7a68 2928 253a 2075 0a0d 0000 0000     s_hz():%u ......
  405734:	6c43 636f 206b 6553 656c 7463 6f69 206e     Clock Selection 
  405744:	3e2d 2e20 6c75 695f 746e 6c63 636f 3a6b     -> .ul_intclock:
  405754:	2520 2075 0a0d 0000 6c43 636f 206b 6553      %u ....Clock Se
  405764:	656c 7463 6f69 206e 3e2d 6420 7669 7369     lection -> divis
  405774:	726f 5b73 3a5d 7525 0d20 000a 6154 6772     ors[]:%u ...Targ
  405784:	7465 4620 6572 7571 6e65 7963 2d20 203e     et Frequency -> 
  405794:	752e 5f73 7266 7165 6575 636e 3a79 7525     .us_frequency:%u
  4057a4:	0d20 000a 6154 6772 7465 4420 7475 2079      ...Target Duty 
  4057b4:	7943 6c63 2065 3e2d 2e20 7375 645f 7475     Cycle -> .us_dut
  4057c4:	6379 6379 656c 253a 2075 0a0d 0000 0000     ycycle:%u ......
  4057d4:	6172 253a 2075 0a0d 0000 0000 6372 253a     ra:%u ......rc:%
  4057e4:	2075 0a0d 0000 0000 2d2d 5420 2043 6163     u ......-- TC ca
  4057f4:	7470 7275 2065 6177 6576 6f66 6d72 4520     pture waveform E
  405804:	6178 706d 656c 2d20 0d2d 000a 2d2d 2520     xample --...-- %
  405814:	0a73 000d 4153 344d 2d53 4b45 0032 0000     s...SAM4S-EK2...
  405824:	2d2d 4320 6d6f 6970 656c 3a64 2520 2073     -- Compiled: %s 
  405834:	7325 2d20 0a2d 000d 614d 2072 3432 3220     %s --...Mar 24 2
  405844:	3130 0036 3331 303a 3a31 3033 0000 0000     016.13:01:30....
  405854:	6f43 666e 6769 7275 2065 4354 6425 6320     Configure TC%d c
  405864:	6168 6e6e 6c65 2520 2064 7361 7720 7661     hannel %d as wav
  405874:	6665 726f 206d 706f 7265 7461 6e69 2067     eform operating 
  405884:	6f6d 6564 0a20 000d 6f43 666e 6769 7275     mode ...Configur
  405894:	2065 4354 6425 6320 6168 6e6e 6c65 2520     e TC%d channel %
  4058a4:	2064 7361 6320 7061 7574 6572 6f20 6570     d as capture ope
  4058b4:	6172 6974 676e 6d20 646f 2065 0d0a 0000     rating mode ....
  4058c4:	6325 0000 6143 7470 7275 6465 2520 2075     %c..Captured %u 
  4058d4:	7570 736c 7365 6620 6f72 206d 4354 6425     pulses from TC%d
  4058e4:	6320 6168 6e6e 6c65 2520 2c64 5220 2041      channel %d, RA 
  4058f4:	203d 7525 202c 4252 3d20 2520 2075 0d0a     = %u, RB = %u ..
  405904:	0000 0000 6143 7470 7275 6465 7720 7661     ....Captured wav
  405914:	2065 7266 7165 6575 636e 2079 203d 6425     e frequency = %d
  405924:	4820 2c7a 4420 7475 2079 7963 6c63 2065      Hz, Duty cycle 
  405934:	203d 6425 2525 0a20 000d 0000 6f4e 7720     = %d%% .....No w
  405944:	7661 6665 726f 206d 6168 2073 6562 6e65     aveform has been
  405954:	6320 7061 7574 6572 0d64 0000 0d0a 7250      captured.....Pr
  405964:	7365 2073 6827 2027 6f74 6420 7369 6c70     ess 'h' to displ
  405974:	7961 6d20 6e65 0d75 0000 0000 7453 7261     ay menu.....Star
  405984:	2074 6163 7470 7275 2c65 7020 6572 7373     t capture, press
  405994:	2720 2773 7420 206f 7473 706f 0d20 0000      's' to stop ...
  4059a4:	6143 7470 7275 6e69 2067 2e2e 202e 202c     Capturing ... , 
  4059b4:	7270 7365 2073 7327 2027 6f74 7320 6f74     press 's' to sto
  4059c4:	2070 6163 7470 7275 2065 6966 7372 2074     p capture first 
  4059d4:	000d 0000                                   ....

004059d8 <divisors>:
  4059d8:	0002 0000 0008 0000 0020 0000 0080 0000     ........ .......
  4059e8:	0000 0000 0043 0000                         ....C...

004059f0 <_global_impure_ptr>:
  4059f0:	0008 2000 000a 0000                         ... ....

004059f8 <zeroes.6869>:
  4059f8:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  405a08:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF
  405a18:	0000 0000 3130 3332 3534 3736 3938 6261     ....0123456789ab
  405a28:	6463 6665 0000 0000 6e28 6c75 296c 0000     cdef....(null)..

00405a38 <blanks.6868>:
  405a38:	2020 2020 2020 2020 2020 2020 2020 2020                     

00405a48 <basefix.6320>:
  405a48:	000a 0001 0002 0003 0004 0005 0006 0007     ................
  405a58:	0008 0009 000a 000b 000c 000d 000e 000f     ................
  405a68:	0010 0000                                   ....

00405a6c <_ctype_>:
  405a6c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  405a7c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  405a8c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  405a9c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  405aac:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  405abc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  405acc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  405adc:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  405aec:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00405b70 <_init>:
  405b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405b72:	bf00      	nop
  405b74:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405b76:	bc08      	pop	{r3}
  405b78:	469e      	mov	lr, r3
  405b7a:	4770      	bx	lr

00405b7c <__init_array_start>:
  405b7c:	00402a9d 	.word	0x00402a9d

00405b80 <__frame_dummy_init_array_entry>:
  405b80:	004000f1                                ..@.

00405b84 <_fini>:
  405b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405b86:	bf00      	nop
  405b88:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405b8a:	bc08      	pop	{r3}
  405b8c:	469e      	mov	lr, r3
  405b8e:	4770      	bx	lr

00405b90 <__fini_array_start>:
  405b90:	004000cd 	.word	0x004000cd

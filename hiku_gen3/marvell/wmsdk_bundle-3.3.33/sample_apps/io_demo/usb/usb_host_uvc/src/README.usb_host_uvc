R E A D M E
===========

Following guide can be used to build a sample application to demonstrate
wireless video streaming capability (88MC200/88MW302(88-pin) acting as USB-Host)
using camera module interfaced over USB-OTG interface.

Compiling usb-host/video application
====================================

1. Untar all source tarballs
	$ tar -xzf usb-host-x.x.x.tar.gz
	$ tar -xzf wmsdk_bundle-x.x.x.tar.gz
2. cd wmsdk_bundle-x.x.x/
3. Configure SDK for the board
	$ make <board_name>_defconfig
3. make BOARD=<board_name> USB_HOST_PATH=</path/to/usb-host-x.x.x/> APP=io_demo/usb/usb_host_uvc

For 88MW302, XIP=1 is recommended to allocate larger video buffer
   make BOARD=<board_name> USB_HOST_PATH=</path/to/usb-host-x.x.x/> APP=io_demo/usb/usb_host_uvc XIP=1

4. USB video application should be ready in wmsdk_bundle-x.y.z/bin/<board_name> dir

Note: Make sure you build application for correct BOARD.

Setup
=====

1. Camera module connected to USB-OTG interface of the board
2. Following camera modules are tested:
   a. Microsoft LifeCam Cinema (Preferred)
   https://www.microsoft.com/hardware/en-in/p/lifecam-cinema/H5D-00005
   b. Microsoft LifeCam VX-2000 (Some issues with streaming at higher rates)
   https://www.microsoft.com/hardware/en-in/p/lifecam-vx-2000/YFC-00006


Application usage
=================

1. Setup the board with usb_host_uvc.bin
2. USB device should get enumerated with following log on minicom:
	# [uvcvideo] USB Video Class driver inited
	# [usb-video-app] USB Video Class demo application started
	# [uvcvideo] USB Root hub device found
	# [uvcvideo] New USB device found, idVendor=045e, idProduct=075d
	# [uvcvideo] Found UVC Device with video streaming interface
	# [uvcvideo] Selected endpoint with wMaxPacketSize: 928
3. Add WLAN network using following command on minicom
   $ wlan-add new ssid <ssid> wpa2 <passphrase>
   $ wlan-connect

Streaming
==========
1. Streaming can be started using any http client with ip address of device
   e.g. $ curl http://<ip-address-of-board>/video
OR
1. VLC player can also be used with "Open Network Stream" option and
specifying following URL, http://<ip-address-of-board>/video OR from command
line (for linux):
	$ vlc http://<ip-address-of-board>/video :network-caching=0
2. Successful start of streaming should be indicated on console as below:
	# [uvcvideo] Configured for 320 x 240, ~30fps
3. To observe throughput and other streaming details, type following command
on console,
	# uvc_stats
	usb uvc statistics =========:
	total rx bytes:          1529892
	no. of frames:           156
	throughput (~):          2.349959 Mbps
	overflow count:          7
	rx error count:          0

Single Image Capture
=====================
1. Single image capture can be done using any http client with ip address
   of device
   e.g. $ curl http://<ip-address-of-board>/capture -o capture.jpg
2. Successful start of image capture should be indicated on console as below:
	# [uvcvideo] Configured for 320 x 240, ~30fps

Limitations
===========

1. As of now streaming is done using http based WSGI handler and hence
underlying protocol is tcp, ideally this should be done using udp based
protocol like RTSP.
2. USB Host Controller in 88MC200 can handle USB1.1 Full/Low Speed devices
only. For Full-Speed USB maximum bandwidth is 12Mbps and hence we can do VGA
(640x480) @15fps at the maximum. By default application is configured for
QVGA (320x240) @30fps resolution, higher resolution (can be configured in
application) may affect streaming experience because of tcp re-transmissions
delays etc.
3. USB Host COntroller in 88MW302 can handle USB2.0 High/Full/Low Speed
devices. For High-Speed USB maximum bandwidth is 480Mbps. The application
has been tested for QVGA (320x240) @30fps, VGA (640x480) @30fps and
HD (1280x720) @10fps successfully for both streaming and single image capture.
4. Throughput observed in uvc_stats command is approximate USB transaction
throughput only, WiFi streaming/transfer throughput is not considered here.
5. Initial streaming through VLC player takes some time to start (order of
few seconds).
6. Terminating VLC player or any other http client may generate few http
connection termination error messages on console. This can be neglected.

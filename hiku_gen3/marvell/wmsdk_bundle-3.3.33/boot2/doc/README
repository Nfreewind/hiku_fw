
R E A D M E
===========

Boot2
=====

Boot2 serves as secondary stage boot-loader and is responsible for following
operations:

* Sets up its own stack pointer, initialize bss and starts execution in SRAM.
  (Code and data are placed at the end of SRAM0 bank while bss resides at the
  end of SRAM1 bank, please see linker script for more details)
* Initialize flash power domain and reset primary flash memory.
* Verify partition tables to decide which firmware image has higher
  generation number.
* Check crc32 of partition table headers.
* Load firmware image depending on generation number from SRAM into flash.
  The flash address and length is specified into partition table.
  Note: If firmware image is found to be XIP (Execute-In-Place) enabled then
  no data is copied into SRAM and control is directly handed over to memory
  mapped address of flash.
* Hand over control to firmware passing boot flag (4 bytes stored in fixed
  address in NVRAM) storing active paritition number, active partition table,
  partition table status, main firmware status etc.


Dependancies
============

* WMSDK: Boot2 needs to be provided the path to compiled WMSDK folder for,
- Peripheral drivers like GPIO, PinMux, UART, Flash, etc.
- NVRAM address which is used to pass information to the application (see below
for details)
- Location of partition table in flash. FL_PART1_START/FL_PART2_START located
in flash_layout.h
- The structure of partition table and firmware binary present in
firmware_structure.h

Configurations
==============

Following are the configurable parameters in boot2 (Done from top level
Make file):

* JTAG_LOCK_PASSWORD (For 88MC200 ONLY)
- This is used to choose the secure/non-secure mode for bootloader.
- Password is maximum 4 bytes.
- Default is nonsecure mode.

* DEBUG
- UART_DEBUG (For 88MW300 ONLY)
- This is used to enable debug print over UART0

Compilation
===========

To compile from top wmsdk_bundle-x.y.z/ directory
* make boot2
- Binary image will be created in bin/<board>/ folder
To clean
* make boot2_clean


Flash Layout
============

Boot2 is located (with bootrom header) in primary flash of 88MC200/88MW30x
with size FL_BOOT2_BLOCK_SIZE. Entire flash layout can be found in
flash_layout.h header file in WMSDK.

Boot2 Detailed Workflow
=======================

boot2: partition, boot override and segment loading support

There is a partition table with following format to assist firmware bootup

Each partition contains the following information:

byte offset    data
-----------    ----
0x00	      magic number (32 bits, defined as 0x54504d57)
0x02  	      version number
0x04	      number of partition entries to follow
0x08	      CRC of the above (32 bits)

Then from 0xc is a list of partition entries as follows:

0xc		type of partition
0xd	  	flash device identifier
0x14	  	name of flash component
0x18	  	start address in flash
0x1c	  	length
0x20		generation level
...

Then boot2 reads the first 12 bytes of each partition table, validates
the magic number and CRC, and determines number of partition table entries.
Boot2 then reads firmware partition entries and determines which one is the
most recent according to the generation number, or which one is
the oldest if the boot override condition was detected during at least
8 seconds.  The latest is called the "main" partition and the oldest the
"alternate" partition.

Next, boot2 reads the segment entry array and validates its CRC. If that
fails then a fallback to the alternate partition should be attempted.

Next, boot2 reads and executes commands from the firmware data blocks.
The reading of those blocks is performed according to the segment list
previously read. If that fails then the alternate partition should be
considered.

Before attempting to load firmware from a partition, boot2 stores
in memory (NVRAM location 0x480C0024 is currently used) This can
be found in boot_flags.h (BOOT_FLAGS)
some boot flags as follows:

- Bits 0 to 1 indicate the number of the partition currently booted.

- Bit 6 (BOOT_MAIN_FIRMWARE_BAD_CRC) is set when the alternate firmware
  partition was used due to a CRC error in either the main partition or the
  firmware data it refers to.

- Bit 8 indicates active partition table number

- Bit 9 indicates main partition table state, 0 = Ok, 1 = Corrupted

- Bit 10 indicates redundant partition table state, 0 = Ok, 1 = Corrupted
